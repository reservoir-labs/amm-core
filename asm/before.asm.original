  "assembly": "    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x80\n  dup1\n  0x40\n  mstore\n  jumpi(tag_196, callvalue)\n    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */\n  0x00\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */\n  0x01\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  or\n  dup2\n  sstore\n    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */\n  swap1\n    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */\n  dataSize(sub_1)\n  dup1\n  dup3\n  add\n  swap1\n  sub(shl(0x40, 0x01), 0x01)\n  dup3\n  gt\n  dup4\n  dup4\n  lt\n  or\n  tag_189\n  jumpi\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x20\n    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */\n  swap2\n  dup4\n  swap2\n  dataOffset(sub_1)\n  dup4\n  codecopy\n    /* \"test/__fixtures/BaseTest.sol\":1126:1130  this */\n  address\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup2\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */\n  sub\n  add\n  swap1\n  dup3\n  create\n  dup1\n  iszero\n  tag_51\n  jumpi\n  0x13\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  mload(0x40)\n  tag_19\n  dup2\n  tag_2\n  jump\t// in\ntag_19:\n  0x09\n  dup2\n  mstore\n  shl(0xb9, 0x3932b1b7bb32b932b9)\n  0x20\n  dup3\n  add\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n    /* \"test/__fixtures/BaseTest.sol\":1169:1194  _makeAddress(\"recoverer\") */\n  tag_20\n  swap1\n  tag_12\n  jump\t// in\ntag_20:\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  and\n    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */\n  0x01\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup1\n  0xa0\n  shl\n  sub\n  not\n    /* \"test/__fixtures/BaseTest.sol\":1169:1194  _makeAddress(\"recoverer\") */\n  0x14\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  sload\n  and\n  or\n    /* \"test/__fixtures/BaseTest.sol\":1169:1194  _makeAddress(\"recoverer\") */\n  0x14\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  sstore\n  mload(0x40)\n  tag_21\n  dup2\n  tag_2\n  jump\t// in\ntag_21:\n  0x0d\n  dup2\n  mstore\n  shl(0x98, 0x706c6174666f726d466565546f)\n  0x20\n  dup3\n  add\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n    /* \"test/__fixtures/BaseTest.sol\":1234:1263  _makeAddress(\"platformFeeTo\") */\n  tag_22\n  swap1\n  tag_12\n  jump\t// in\ntag_22:\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  and\n    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */\n  0x01\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup1\n  0xa0\n  shl\n  sub\n  not\n    /* \"test/__fixtures/BaseTest.sol\":1234:1263  _makeAddress(\"platformFeeTo\") */\n  0x15\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  sload\n  and\n  or\n    /* \"test/__fixtures/BaseTest.sol\":1234:1263  _makeAddress(\"platformFeeTo\") */\n  0x15\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  sstore\n  mload(0x40)\n  tag_23\n  dup2\n  tag_2\n  jump\t// in\ntag_23:\n  0x05\n  dup2\n  mstore\n  shl(0xd8, 0x616c696365)\n  0x20\n  dup3\n  add\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n    /* \"test/__fixtures/BaseTest.sol\":1295:1316  _makeAddress(\"alice\") */\n  tag_24\n  swap1\n  tag_12\n  jump\t// in\ntag_24:\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  and\n    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */\n  0x01\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup1\n  0xa0\n  shl\n  sub\n  not\n    /* \"test/__fixtures/BaseTest.sol\":1295:1316  _makeAddress(\"alice\") */\n  0x16\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  sload\n  and\n  or\n    /* \"test/__fixtures/BaseTest.sol\":1295:1316  _makeAddress(\"alice\") */\n  0x16\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  sstore\n  mload(0x40)\n  tag_25\n  dup2\n  tag_2\n  jump\t// in\ntag_25:\n  0x03\n  dup2\n  mstore\n  shl(0xe9, 0x3137b1)\n  0x20\n  dup3\n  add\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n    /* \"test/__fixtures/BaseTest.sol\":1346:1365  _makeAddress(\"bob\") */\n  tag_26\n  swap1\n  tag_12\n  jump\t// in\ntag_26:\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  and\n    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */\n  0x01\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup1\n  0xa0\n  shl\n  sub\n  not\n    /* \"test/__fixtures/BaseTest.sol\":1346:1365  _makeAddress(\"bob\") */\n  0x17\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  sload\n  and\n  or\n    /* \"test/__fixtures/BaseTest.sol\":1346:1365  _makeAddress(\"bob\") */\n  0x17\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  sstore\n  mload(0x40)\n  tag_27\n  dup2\n  tag_2\n  jump\t// in\ntag_27:\n  0x03\n  dup2\n  mstore\n  shl(0xea, 0x18d85b)\n  0x20\n  dup3\n  add\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n    /* \"test/__fixtures/BaseTest.sol\":1395:1414  _makeAddress(\"cal\") */\n  tag_28\n  swap1\n  tag_12\n  jump\t// in\ntag_28:\n  0x18\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup1\n  sload\n  swap2\n  swap1\n  swap3\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  swap2\n  and\n  or\n  swap1\n  sstore\n  mload(0x40)\n    /* \"test/__fixtures/BaseTest.sol\":1454:1491  new MintableERC20(\"TokenA\", \"TA\", 18) */\n  dataSize(sub_6)\n  dup2\n  add\n  dup2\n  dup2\n  lt\n  sub(shl(0x40, 0x01), 0x01)\n  dup3\n  gt\n  or\n  tag_33\n  jumpi\n  dup2\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0xe0\n    /* \"test/__fixtures/BaseTest.sol\":1454:1491  new MintableERC20(\"TokenA\", \"TA\", 18) */\n  swap2\n  dataSize(sub_6)\n  dataOffset(sub_6)\n  dup4\n  codecopy\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x60\n  dup2\n  mstore\n  0x06\n  0x60\n  dup3\n  add\n  mstore\n  shl(0xd0, 0x546f6b656e41)\n  0x80\n  dup3\n  add\n  mstore\n  0xa0\n  0x20\n  dup3\n  add\n  mstore\n  0x02\n  0xa0\n  dup3\n  add\n  mstore\n  shl(0xf0, 0x5441)\n  0xc0\n  dup3\n  add\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":1488:1490  18 */\n  0x12\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x40\n  dup3\n  add\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":1454:1491  new MintableERC20(\"TokenA\", \"TA\", 18) */\n  sub\n  add\n  swap1\n  dup3\n  create\n  dup1\n  iszero\n  tag_51\n  jumpi\n  0x19\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  mload(0x40)\n    /* \"test/__fixtures/BaseTest.sol\":1454:1491  new MintableERC20(\"TokenA\", \"TA\", 18) */\n  dataSize(sub_6)\n    /* \"test/__fixtures/BaseTest.sol\":1530:1567  new MintableERC20(\"TokenB\", \"TB\", 18) */\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  dup3\n  dup3\n  lt\n  or\n  tag_33\n  jumpi\n    /* \"test/__fixtures/BaseTest.sol\":1454:1491  new MintableERC20(\"TokenA\", \"TA\", 18) */\n  dup2\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0xe0\n    /* \"test/__fixtures/BaseTest.sol\":1454:1491  new MintableERC20(\"TokenA\", \"TA\", 18) */\n  swap2\n  dataSize(sub_6)\n  dataOffset(sub_6)\n    /* \"test/__fixtures/BaseTest.sol\":1530:1567  new MintableERC20(\"TokenB\", \"TB\", 18) */\n  dup4\n  codecopy\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x60\n  dup2\n  mstore\n  0x06\n  0x60\n  dup3\n  add\n  mstore\n  shl(0xd1, 0x2a37b5b2b721)\n  0x80\n  dup3\n  add\n  mstore\n  0xa0\n  0x20\n  dup3\n  add\n  mstore\n  0x02\n  0xa0\n  dup3\n  add\n  mstore\n  shl(0xf1, 0x2a21)\n  0xc0\n  dup3\n  add\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":1488:1490  18 */\n  0x12\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x40\n  dup3\n  add\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":1530:1567  new MintableERC20(\"TokenB\", \"TB\", 18) */\n  sub\n  add\n  swap1\n  dup3\n  create\n  dup1\n  iszero\n  tag_51\n  jumpi\n  0x1a\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  mload(0x40)\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"test/__fixtures/BaseTest.sol\":1454:1491  new MintableERC20(\"TokenA\", \"TA\", 18) */\n  dataSize(sub_6)\n    /* \"test/__fixtures/BaseTest.sol\":1606:1643  new MintableERC20(\"TokenC\", \"TC\", 18) */\n  dup3\n  add\n  swap1\n  dup2\n  gt\n  swap1\n  dup3\n  gt\n  or\n  tag_45\n  jumpi\n    /* \"test/__fixtures/BaseTest.sol\":1454:1491  new MintableERC20(\"TokenA\", \"TA\", 18) */\n  dataSize(sub_6)\n  dataOffset(sub_6)\n    /* \"test/__fixtures/BaseTest.sol\":1606:1643  new MintableERC20(\"TokenC\", \"TC\", 18) */\n  dup3\n  codecopy\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x60\n    /* \"test/__fixtures/BaseTest.sol\":1454:1491  new MintableERC20(\"TokenA\", \"TA\", 18) */\n  dataSize(sub_6)\n    /* \"test/__fixtures/BaseTest.sol\":1606:1643  new MintableERC20(\"TokenC\", \"TC\", 18) */\n  dup3\n  add\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup2\n  dup2\n  mstore\n  0x06\n  swap2\n  dup2\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n  shl(0xd0, 0x546f6b656e43)\n  0x80\n  dup3\n  add\n  mstore\n  0xa0\n  0x20\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0x02\n  swap1\n  dup3\n  add\n  mstore\n  shl(0xf0, 0x5443)\n  0xc0\n  dup3\n  add\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":1488:1490  18 */\n  0x12\n  0x40\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup3\n  add\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":1606:1643  new MintableERC20(\"TokenC\", \"TC\", 18) */\n  dup2\n  swap1\n  sub\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0xe0\n    /* \"test/__fixtures/BaseTest.sol\":1606:1643  new MintableERC20(\"TokenC\", \"TC\", 18) */\n  add\n  swap1\n  dup3\n  create\n  dup1\n  iszero\n  tag_51\n  jumpi\n  0x1b\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  mload(0x40)\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"test/__fixtures/BaseTest.sol\":1454:1491  new MintableERC20(\"TokenA\", \"TA\", 18) */\n  dataSize(sub_6)\n    /* \"test/__fixtures/BaseTest.sol\":1682:1718  new MintableERC20(\"TokenD\", \"TD\", 6) */\n  dup3\n  add\n  swap1\n  dup2\n  gt\n  swap1\n  dup3\n  gt\n  or\n  tag_45\n  jumpi\n    /* \"test/__fixtures/BaseTest.sol\":1454:1491  new MintableERC20(\"TokenA\", \"TA\", 18) */\n  dataSize(sub_6)\n  dataOffset(sub_6)\n    /* \"test/__fixtures/BaseTest.sol\":1682:1718  new MintableERC20(\"TokenD\", \"TD\", 6) */\n  dup3\n  codecopy\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x60\n    /* \"test/__fixtures/BaseTest.sol\":1454:1491  new MintableERC20(\"TokenA\", \"TA\", 18) */\n  dataSize(sub_6)\n    /* \"test/__fixtures/BaseTest.sol\":1682:1718  new MintableERC20(\"TokenD\", \"TD\", 6) */\n  dup3\n  add\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup2\n  dup2\n  mstore\n  0x06\n  swap2\n  dup2\n  add\n  dup3\n  swap1\n  mstore\n  shl(0xd2, 0x151bdad95b91)\n  0x80\n  dup3\n  add\n  mstore\n  0xa0\n  0x20\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0x02\n  swap1\n  dup3\n  add\n  mstore\n  shl(0xf2, 0x1511)\n  0xc0\n  dup3\n  add\n  mstore\n  0x40\n  dup2\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":1682:1718  new MintableERC20(\"TokenD\", \"TD\", 6) */\n  dup2\n  swap1\n  sub\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0xe0\n    /* \"test/__fixtures/BaseTest.sol\":1682:1718  new MintableERC20(\"TokenD\", \"TD\", 6) */\n  add\n  swap1\n  dup3\n  create\n  dup1\n  iszero\n  tag_51\n  jumpi\n  0x1c\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  mload(0x40)\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"test/__fixtures/BaseTest.sol\":1454:1491  new MintableERC20(\"TokenA\", \"TA\", 18) */\n  dataSize(sub_6)\n    /* \"test/__fixtures/BaseTest.sol\":1757:1794  new MintableERC20(\"TokenF\", \"TF\", 25) */\n  dup3\n  add\n  swap1\n  dup2\n  gt\n  swap1\n  dup3\n  gt\n  or\n  tag_45\n  jumpi\n    /* \"test/__fixtures/BaseTest.sol\":1454:1491  new MintableERC20(\"TokenA\", \"TA\", 18) */\n  dataSize(sub_6)\n  dataOffset(sub_6)\n    /* \"test/__fixtures/BaseTest.sol\":1757:1794  new MintableERC20(\"TokenF\", \"TF\", 25) */\n  dup3\n  codecopy\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x60\n    /* \"test/__fixtures/BaseTest.sol\":1454:1491  new MintableERC20(\"TokenA\", \"TA\", 18) */\n  dataSize(sub_6)\n    /* \"test/__fixtures/BaseTest.sol\":1757:1794  new MintableERC20(\"TokenF\", \"TF\", 25) */\n  dup3\n  add\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup2\n  dup2\n  mstore\n  0x06\n  swap2\n  dup2\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n  shl(0xd1, 0x2a37b5b2b723)\n  0x80\n  dup3\n  add\n  mstore\n  0xa0\n  0x20\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0x02\n  swap1\n  dup3\n  add\n  mstore\n  shl(0xf1, 0x2a23)\n  0xc0\n  dup3\n  add\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":1454:1491  new MintableERC20(\"TokenA\", \"TA\", 18) */\n  0x19\n  0x40\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup3\n  add\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":1757:1794  new MintableERC20(\"TokenF\", \"TF\", 25) */\n  dup2\n  swap1\n  sub\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0xe0\n    /* \"test/__fixtures/BaseTest.sol\":1757:1794  new MintableERC20(\"TokenF\", \"TF\", 25) */\n  add\n  swap1\n  dup3\n  create\n  dup1\n  iszero\n  tag_51\n  jumpi\n  0x1d\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  mload(0x40)\n    /* \"test/__fixtures/BaseTest.sol\":1932:1950  new OracleCaller() */\n  dataSize(sub_5)\n  dup1\n  dup3\n  add\n  swap1\n  sub(shl(0x40, 0x01), 0x01)\n  dup3\n  gt\n  dup4\n  dup4\n  lt\n  or\n  tag_189\n  jumpi\n  swap1\n  dup3\n  swap2\n  dataOffset(sub_5)\n  dup4\n  codecopy\n  sub\n  swap1\n  dup3\n  create\n  dup1\n  iszero\n  tag_51\n  jumpi\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x20\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  dup2\n  sstore\n  mload(0x40)\n  shl(0xe0, 0xf877cb19)\n    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */\n  dup2\n  mstore\n  0x04\n  dup2\n  add\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  swap2\n  swap1\n  swap2\n  mstore\n  0x0f\n  0x24\n  dup3\n  add\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mstore\n  shl(0x88, 0x464f554e4452595f50524f46494c45)\n  0x44\n  dup3\n  add\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */\n  dup2\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup2\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  0x64\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup2\n  0x00\n  dup1\n  mload\n  0x20\n  data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */\n  gas\n  staticcall\n  dup3\n  swap2\n  dup2\n  tag_53\n  jumpi\ntag_54:\n  pop\n    /* \"test/__fixtures/BaseTest.sol\":1981:2593  try vm.envString(\"FOUNDRY_PROFILE\") returns (string memory lProfile) {... */\n  tag_55\n  jumpi\n    /* \"test/__fixtures/BaseTest.sol\":2532:2565  type(StableMintBurn).creationCode */\n  pop\n  dup1\n    /* \"test/__fixtures/BaseTest.sol\":2493:2568  _bytesToHex(abi.encodePacked(keccak256(type(StableMintBurn).creationCode))) */\n  tag_57\n    /* \"test/__fixtures/BaseTest.sol\":2532:2565  type(StableMintBurn).creationCode */\n  dataSize(sub_3)\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mload(0x40)\n  tag_58\n  0x20\n    /* \"test/__fixtures/BaseTest.sol\":2532:2565  type(StableMintBurn).creationCode */\n  dup4\n  add\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup3\n  tag_3\n  jump\t// in\ntag_58:\n    /* \"test/__fixtures/BaseTest.sol\":2532:2565  type(StableMintBurn).creationCode */\n  dup2\n  dup2\n  mstore\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x20\n    /* \"test/__fixtures/BaseTest.sol\":2532:2565  type(StableMintBurn).creationCode */\n  dup2\n  add\n  swap2\n  dataOffset(sub_3)\n  dup4\n  codecopy\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  mload\n    /* \"test/__fixtures/BaseTest.sol\":2522:2566  keccak256(type(StableMintBurn).creationCode) */\n  swap1\n  keccak256\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mload(0x40)\n    /* \"test/__fixtures/BaseTest.sol\":2505:2567  abi.encodePacked(keccak256(type(StableMintBurn).creationCode)) */\n  swap1\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x20\n    /* \"test/__fixtures/BaseTest.sol\":2505:2567  abi.encodePacked(keccak256(type(StableMintBurn).creationCode)) */\n  dup3\n  add\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  mstore\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x20\n    /* \"test/__fixtures/BaseTest.sol\":2505:2567  abi.encodePacked(keccak256(type(StableMintBurn).creationCode)) */\n  dup2\n  mstore\n  tag_59\n  dup2\n  tag_2\n  jump\t// in\ntag_59:\n    /* \"test/__fixtures/BaseTest.sol\":2493:2568  _bytesToHex(abi.encodePacked(keccak256(type(StableMintBurn).creationCode))) */\n  tag_11\n  jump\t// in\ntag_57:\n  0x00\n  dup1\n  mload\n  0x20\n  data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":2405:2582  vm.writeFile(... */\n  extcodesize\n  iszero\n  tag_143\n  jumpi\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup2\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  tag_62\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  swap2\n  mload(0x40)\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  dup1\n  swap4\n  dup2\n  swap3\n  shl(0xe0, 0x897e0a97)\n    /* \"test/__fixtures/BaseTest.sol\":2405:2582  vm.writeFile(... */\n  dup4\n  mstore\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x40\n    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */\n  0x04\n    /* \"test/__fixtures/BaseTest.sol\":2405:2582  vm.writeFile(... */\n  dup5\n  add\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  mstore\n  0x26\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x44\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  dup5\n  add\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mstore\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  0x736372697074732f6f7074696d697a65642d737461626c652d6d696e742d6275\n  0x64\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup5\n  add\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  mstore\n  shl(0xd0, 0x726e2d6b6579)\n  0x84\n  dup5\n  add\n  mstore\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0xa0\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  0x24\n  dup5\n  add\n  mstore\n  0xa4\n  dup4\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_62:\n    /* \"test/__fixtures/BaseTest.sol\":2405:2582  vm.writeFile(... */\n  sub\n  dup2\n  dup4\n  0x00\n  dup1\n  mload\n  0x20\n  data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n  gas\n  call\n  dup1\n  iszero\n  tag_185\n  jumpi\n  tag_65\n  jumpi\n    /* \"test/__fixtures/BaseTest.sol\":1981:2593  try vm.envString(\"FOUNDRY_PROFILE\") returns (string memory lProfile) {... */\ntag_66:\n  pop\n  pop\ntag_67:\n    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */\n  0x01\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup1\n  0xa0\n  shl\n  sub\n    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */\n  0x13\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  sload\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  and\n  mload(0x40)\n  tag_68\n  dup2\n  tag_2\n  jump\t// in\ntag_68:\n    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */\n  0x13\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup2\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":924:931  250_000 */\n  0x5368617265643a3a706c6174666f726d46656500000000000000000000000000\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x20\n    /* \"test/__fixtures/BaseTest.sol\":924:931  250_000 */\n  dup3\n  add\n  mstore\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mload(0x40)\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  swap1\n    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */\n  0x00\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\ntag_69:\n    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */\n  0x13\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  dup2\n  lt\n  tag_70\n  jumpi\n  pop\n  pop\n    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */\n  0x00\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  0x33\n  dup3\n  add\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */\n  0x13\n    /* \"src/libraries/FactoryStore.sol\":815:837  abi.encodePacked(aKey) */\n  dup2\n  mstore\n  tag_72\n  dup2\n  tag_2\n  jump\t// in\ntag_72:\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x20\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  dup2\n  mload\n    /* \"src/libraries/FactoryStore.sol\":815:837  abi.encodePacked(aKey) */\n  swap2\n  add\n    /* \"src/libraries/FactoryStore.sol\":805:838  keccak256(abi.encodePacked(aKey)) */\n  keccak256\n    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */\n  dup2\n  extcodesize\n  iszero\n  tag_196\n  jumpi\n    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */\n  0x00\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  swap2\n  0x44\n  dup4\n  swap3\n  mload(0x40)\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  swap5\n  dup6\n  swap4\n  dup5\n  swap3\n  shl(0xe0, 0xf71f7a25)\n    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */\n  dup5\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */\n  0x04\n    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */\n  dup5\n  add\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":924:931  250_000 */\n  0x03d090\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  0x24\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup5\n  add\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  mstore\n    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */\n  gas\n  call\n  dup1\n  iszero\n  tag_169\n  jumpi\n  tag_77\n  jumpi\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\ntag_78:\n  pop\n    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */\n  0x13\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  sload\n    /* \"test/__fixtures/BaseTest.sol\":1234:1263  _makeAddress(\"platformFeeTo\") */\n  0x15\n    /* \"test/__fixtures/BaseTest.sol\":924:931  250_000 */\n  sload\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mload(0x40)\n    /* \"test/__fixtures/BaseTest.sol\":2704:2759  _factory.write(\"Shared::platformFeeTo\", _platformFeeTo) */\n  tag_79\n  swap3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  swap3\n  dup4\n  and\n  swap3\n  and\n  tag_80\n  dup3\n  tag_2\n  jump\t// in\ntag_80:\n    /* \"test/__fixtures/BaseTest.sol\":1234:1263  _makeAddress(\"platformFeeTo\") */\n  0x15\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup3\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":924:931  250_000 */\n  0x5368617265643a3a706c6174666f726d466565546f0000000000000000000000\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x20\n    /* \"test/__fixtures/BaseTest.sol\":924:931  250_000 */\n  dup4\n  add\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":2704:2759  _factory.write(\"Shared::platformFeeTo\", _platformFeeTo) */\n  tag_9\n  jump\t// in\ntag_79:\n    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */\n  0x13\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  sload\n    /* \"test/__fixtures/BaseTest.sol\":1169:1194  _makeAddress(\"recoverer\") */\n  0x14\n    /* \"test/__fixtures/BaseTest.sol\":924:931  250_000 */\n  sload\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mload(0x40)\n    /* \"test/__fixtures/BaseTest.sol\":2769:2823  _factory.write(\"Shared::defaultRecoverer\", _recoverer) */\n  tag_81\n  swap3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  swap3\n  dup4\n  and\n  swap3\n  and\n  tag_82\n  dup3\n  tag_2\n  jump\t// in\ntag_82:\n    /* \"test/__fixtures/BaseTest.sol\":1395:1414  _makeAddress(\"cal\") */\n  0x18\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup3\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":924:931  250_000 */\n  0x5368617265643a3a64656661756c745265636f76657265720000000000000000\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x20\n    /* \"test/__fixtures/BaseTest.sol\":924:931  250_000 */\n  dup4\n  add\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":2769:2823  _factory.write(\"Shared::defaultRecoverer\", _recoverer) */\n  tag_9\n  jump\t// in\ntag_81:\n    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */\n  0x01\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup1\n  0xa0\n  shl\n  sub\n    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */\n  0x13\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  sload\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  and\n  mload(0x40)\n  tag_83\n  dup2\n  tag_2\n  jump\t// in\ntag_83:\n    /* \"test/__fixtures/BaseTest.sol\":1234:1263  _makeAddress(\"platformFeeTo\") */\n  0x15\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup2\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":1048:1057  0.0005e18 */\n  0x5368617265643a3a6d61784368616e6765526174650000000000000000000000\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x20\n    /* \"test/__fixtures/BaseTest.sol\":1048:1057  0.0005e18 */\n  dup3\n  add\n  mstore\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mload(0x40)\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  swap1\n    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */\n  0x00\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\ntag_84:\n    /* \"test/__fixtures/BaseTest.sol\":1234:1263  _makeAddress(\"platformFeeTo\") */\n  0x15\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  dup2\n  lt\n  tag_85\n  jumpi\n  pop\n  pop\n    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */\n  0x00\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  0x35\n  dup3\n  add\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":1234:1263  _makeAddress(\"platformFeeTo\") */\n  0x15\n    /* \"src/libraries/FactoryStore.sol\":815:837  abi.encodePacked(aKey) */\n  dup2\n  mstore\n  tag_87\n  dup2\n  tag_2\n  jump\t// in\ntag_87:\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x20\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  dup2\n  mload\n    /* \"src/libraries/FactoryStore.sol\":815:837  abi.encodePacked(aKey) */\n  swap2\n  add\n    /* \"src/libraries/FactoryStore.sol\":805:838  keccak256(abi.encodePacked(aKey)) */\n  keccak256\n    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */\n  dup2\n  extcodesize\n  iszero\n  tag_196\n  jumpi\n    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */\n  0x00\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  swap2\n  0x44\n  dup4\n  swap3\n  mload(0x40)\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  swap5\n  dup6\n  swap4\n  dup5\n  swap3\n  shl(0xe0, 0xf71f7a25)\n    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */\n  dup5\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */\n  0x04\n    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */\n  dup5\n  add\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":1048:1057  0.0005e18 */\n  0x01c6bf52634000\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  0x24\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup5\n  add\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  mstore\n    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */\n  gas\n  call\n  dup1\n  iszero\n  tag_169\n  jumpi\n  tag_92\n  jumpi\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\ntag_93:\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  pop\n  dup1\n  0x40\n    /* \"test/__fixtures/BaseTest.sol\":1048:1057  0.0005e18 */\n  tag_94\n    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */\n  0x01\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup1\n  0xa0\n  shl\n  sub\n    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */\n  0x13\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  sload\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  and\n    /* \"test/__fixtures/BaseTest.sol\":2964:3002  type(ConstantProductPair).creationCode */\n  dataSize(sub_2)\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup4\n  mload\n    /* \"test/__fixtures/BaseTest.sol\":2964:3002  type(ConstantProductPair).creationCode */\n  swap1\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  tag_95\n  0x20\n    /* \"test/__fixtures/BaseTest.sol\":2964:3002  type(ConstantProductPair).creationCode */\n  dup3\n  add\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup4\n  tag_3\n  jump\t// in\ntag_95:\n    /* \"test/__fixtures/BaseTest.sol\":2964:3002  type(ConstantProductPair).creationCode */\n  dup1\n  dup3\n  mstore\n  dataOffset(sub_2)\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x20\n    /* \"test/__fixtures/BaseTest.sol\":2964:3002  type(ConstantProductPair).creationCode */\n  dup4\n  add\n  codecopy\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup4\n  mload\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  swap5\n  dup6\n  dup1\n  swap5\n  dup2\n  swap4\n  shl(0xe1, 0x7fb777a9)\n    /* \"test/__fixtures/BaseTest.sol\":2946:3003  _factory.addCurve(type(ConstantProductPair).creationCode) */\n  dup4\n  mstore\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x20\n    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */\n  0x04\n    /* \"test/__fixtures/BaseTest.sol\":2946:3003  _factory.addCurve(type(ConstantProductPair).creationCode) */\n  dup5\n  add\n    /* \"test/__fixtures/BaseTest.sol\":1048:1057  0.0005e18 */\n  mstore\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  0x24\n    /* \"test/__fixtures/BaseTest.sol\":1048:1057  0.0005e18 */\n  dup4\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_94:\n    /* \"test/__fixtures/BaseTest.sol\":2946:3003  _factory.addCurve(type(ConstantProductPair).creationCode) */\n  sub\n  swap3\n  gas\n  call\n  dup1\n  iszero\n  tag_185\n  jumpi\n  tag_98\n  jumpi\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\ntag_99:\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  pop\n    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */\n  0x01\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup1\n  0xa0\n  shl\n  sub\n    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */\n  0x13\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  sload\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  and\n  0x20\n  mload(0x40)\n  tag_100\n  dup2\n  tag_2\n  jump\t// in\ntag_100:\n    /* \"test/__fixtures/BaseTest.sol\":795:799  3000 */\n  0x0b\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup2\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":795:799  3000 */\n  add\n  shl(0xa8, 0x43503a3a73776170466565)\n  dup2\n  mstore\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mload(0x40)\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  tag_101\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x20\n    /* \"src/libraries/FactoryStore.sol\":815:837  abi.encodePacked(aKey) */\n  dup3\n  add\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  dup1\n  swap4\n  tag_5\n  jump\t// in\ntag_101:\n    /* \"test/__fixtures/BaseTest.sol\":795:799  3000 */\n  0x0b\n    /* \"src/libraries/FactoryStore.sol\":815:837  abi.encodePacked(aKey) */\n  dup2\n  mstore\n  tag_102\n  dup2\n  tag_2\n  jump\t// in\ntag_102:\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  mload\n    /* \"src/libraries/FactoryStore.sol\":805:838  keccak256(abi.encodePacked(aKey)) */\n  swap1\n  keccak256\n    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */\n  dup2\n  extcodesize\n  iszero\n  tag_196\n  jumpi\n    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */\n  0x00\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  swap2\n  0x44\n  dup4\n  swap3\n  mload(0x40)\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  swap5\n  dup6\n  swap4\n  dup5\n  swap3\n  shl(0xe0, 0xf71f7a25)\n    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */\n  dup5\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */\n  0x04\n    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */\n  dup5\n  add\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":795:799  3000 */\n  0x0bb8\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  0x24\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup5\n  add\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  mstore\n    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */\n  gas\n  call\n  dup1\n  iszero\n  tag_169\n  jumpi\n  tag_107\n  jumpi\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\ntag_108:\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  pop\n  dup1\n  0x40\n    /* \"test/__fixtures/BaseTest.sol\":1048:1057  0.0005e18 */\n  tag_109\n    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */\n  0x01\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup1\n  0xa0\n  shl\n  sub\n    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */\n  0x13\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  sload\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  and\n    /* \"test/__fixtures/BaseTest.sol\":3120:3149  type(StablePair).creationCode */\n  dataSize(sub_4)\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup4\n  mload\n    /* \"test/__fixtures/BaseTest.sol\":3120:3149  type(StablePair).creationCode */\n  swap1\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  tag_110\n  0x20\n    /* \"test/__fixtures/BaseTest.sol\":3120:3149  type(StablePair).creationCode */\n  dup3\n  add\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup4\n  tag_3\n  jump\t// in\ntag_110:\n    /* \"test/__fixtures/BaseTest.sol\":3120:3149  type(StablePair).creationCode */\n  dup1\n  dup3\n  mstore\n  dataOffset(sub_4)\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x20\n    /* \"test/__fixtures/BaseTest.sol\":3120:3149  type(StablePair).creationCode */\n  dup4\n  add\n  codecopy\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup4\n  mload\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  swap5\n  dup6\n  dup1\n  swap5\n  dup2\n  swap4\n  shl(0xe1, 0x7fb777a9)\n    /* \"test/__fixtures/BaseTest.sol\":3102:3150  _factory.addCurve(type(StablePair).creationCode) */\n  dup4\n  mstore\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x20\n    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */\n  0x04\n    /* \"test/__fixtures/BaseTest.sol\":3102:3150  _factory.addCurve(type(StablePair).creationCode) */\n  dup5\n  add\n    /* \"test/__fixtures/BaseTest.sol\":1048:1057  0.0005e18 */\n  mstore\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  0x24\n    /* \"test/__fixtures/BaseTest.sol\":1048:1057  0.0005e18 */\n  dup4\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_109:\n    /* \"test/__fixtures/BaseTest.sol\":3102:3150  _factory.addCurve(type(StablePair).creationCode) */\n  sub\n  swap3\n  gas\n  call\n  dup1\n  iszero\n  tag_185\n  jumpi\n  tag_113\n  jumpi\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\ntag_114:\n  pop\n    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */\n  0x13\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  sload\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mload(0x40)\n  dup3\n  swap2\n  0x20\n  swap2\n    /* \"test/__fixtures/BaseTest.sol\":1048:1057  0.0005e18 */\n  tag_115\n  swap2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  and\n  swap1\n    /* \"test/__fixtures/BaseTest.sol\":3181:3214  type(StableMintBurn).creationCode */\n  dataSize(sub_3)\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  tag_116\n    /* \"test/__fixtures/BaseTest.sol\":3181:3214  type(StableMintBurn).creationCode */\n  dup2\n  dup7\n  add\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup4\n  tag_3\n  jump\t// in\ntag_116:\n    /* \"test/__fixtures/BaseTest.sol\":3181:3214  type(StableMintBurn).creationCode */\n  dup1\n  dup3\n  mstore\n  dataOffset(sub_3)\n  dup6\n  dup4\n  add\n  codecopy\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mload(0x40)\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  swap5\n  dup6\n  dup1\n  swap5\n  dup2\n  swap4\n  shl(0xe1, 0x6812eef1)\n    /* \"test/__fixtures/BaseTest.sol\":3160:3215  _factory.addBytecode(type(StableMintBurn).creationCode) */\n  dup4\n  mstore\n  dup8\n    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */\n  0x04\n    /* \"test/__fixtures/BaseTest.sol\":3160:3215  _factory.addBytecode(type(StableMintBurn).creationCode) */\n  dup5\n  add\n    /* \"test/__fixtures/BaseTest.sol\":1048:1057  0.0005e18 */\n  mstore\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  0x24\n    /* \"test/__fixtures/BaseTest.sol\":1048:1057  0.0005e18 */\n  dup4\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_115:\n    /* \"test/__fixtures/BaseTest.sol\":3160:3215  _factory.addBytecode(type(StableMintBurn).creationCode) */\n  sub\n  swap3\n  gas\n  call\n  dup1\n  iszero\n  tag_185\n  jumpi\n  tag_119\n  jumpi\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\ntag_120:\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  pop\n    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */\n  0x01\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup1\n  0xa0\n  shl\n  sub\n    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */\n  0x13\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  sload\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  and\n  0x20\n  mload(0x40)\n  tag_121\n  dup2\n  tag_2\n  jump\t// in\ntag_121:\n    /* \"test/__fixtures/BaseTest.sol\":795:799  3000 */\n  0x0b\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup2\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":859:862  100 */\n  add\n  shl(0xa8, 0x53503a3a73776170466565)\n  dup2\n  mstore\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mload(0x40)\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  tag_122\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x20\n    /* \"src/libraries/FactoryStore.sol\":815:837  abi.encodePacked(aKey) */\n  dup3\n  add\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  dup1\n  swap4\n  tag_5\n  jump\t// in\ntag_122:\n    /* \"test/__fixtures/BaseTest.sol\":795:799  3000 */\n  0x0b\n    /* \"src/libraries/FactoryStore.sol\":815:837  abi.encodePacked(aKey) */\n  dup2\n  mstore\n  tag_123\n  dup2\n  tag_2\n  jump\t// in\ntag_123:\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  mload\n    /* \"src/libraries/FactoryStore.sol\":805:838  keccak256(abi.encodePacked(aKey)) */\n  swap1\n  keccak256\n    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */\n  dup2\n  extcodesize\n  iszero\n  tag_196\n  jumpi\n    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */\n  0x00\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  swap2\n  0x44\n  dup4\n  swap3\n  mload(0x40)\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  swap5\n  dup6\n  swap4\n  dup5\n  swap3\n  shl(0xe0, 0xf71f7a25)\n    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */\n  dup5\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */\n  0x04\n    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */\n  dup5\n  add\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  mstore\n  0x64\n  0x24\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup5\n  add\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  mstore\n    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */\n  gas\n  call\n  dup1\n  iszero\n  tag_169\n  jumpi\n  tag_128\n  jumpi\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\ntag_129:\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  pop\n    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */\n  0x01\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup1\n  0xa0\n  shl\n  sub\n    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */\n  0x13\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  sload\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  and\n  mload(0x40)\n  tag_130\n  dup2\n  tag_2\n  jump\t// in\ntag_130:\n    /* \"test/__fixtures/BaseTest.sol\":1682:1718  new MintableERC20(\"TokenD\", \"TD\", 6) */\n  0x1c\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup2\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":988:992  1000 */\n  0x53503a3a616d706c696669636174696f6e436f656666696369656e7400000000\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x20\n    /* \"test/__fixtures/BaseTest.sol\":988:992  1000 */\n  dup3\n  add\n  mstore\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mload(0x40)\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  swap1\n    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */\n  0x00\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\ntag_131:\n    /* \"test/__fixtures/BaseTest.sol\":1682:1718  new MintableERC20(\"TokenD\", \"TD\", 6) */\n  0x1c\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  dup2\n  lt\n  tag_132\n  jumpi\n  pop\n  pop\n    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */\n  0x00\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  0x3c\n  dup3\n  add\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":1682:1718  new MintableERC20(\"TokenD\", \"TD\", 6) */\n  0x1c\n    /* \"src/libraries/FactoryStore.sol\":815:837  abi.encodePacked(aKey) */\n  dup2\n  mstore\n  tag_134\n  dup2\n  tag_2\n  jump\t// in\ntag_134:\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x20\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  dup2\n  mload\n    /* \"src/libraries/FactoryStore.sol\":815:837  abi.encodePacked(aKey) */\n  swap2\n  add\n    /* \"src/libraries/FactoryStore.sol\":805:838  keccak256(abi.encodePacked(aKey)) */\n  keccak256\n    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */\n  dup2\n  extcodesize\n  iszero\n  tag_196\n  jumpi\n    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */\n  0x00\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  swap2\n  0x44\n  dup4\n  swap3\n  mload(0x40)\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  swap5\n  dup6\n  swap4\n  dup5\n  swap3\n  shl(0xe0, 0xf71f7a25)\n    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */\n  dup5\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */\n  0x04\n    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */\n  dup5\n  add\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":988:992  1000 */\n  0x03e8\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  0x24\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup5\n  add\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  mstore\n    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */\n  gas\n  call\n  dup1\n  iszero\n  tag_169\n  jumpi\n  tag_139\n  jumpi\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\ntag_140:\n  pop\n    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */\n  0x13\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  sload\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x20\n    /* \"test/__fixtures/BaseTest.sol\":988:992  1000 */\n  sload\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mload(0x40)\n    /* \"test/__fixtures/BaseTest.sol\":3390:3452  _factory.write(\"Shared::oracleCaller\", address(_oracleCaller)) */\n  tag_141\n  swap3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  swap3\n  dup4\n  and\n  swap3\n  and\n  tag_142\n  dup3\n  tag_2\n  jump\t// in\ntag_142:\n    /* \"test/__fixtures/BaseTest.sol\":1169:1194  _makeAddress(\"recoverer\") */\n  0x14\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup3\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":988:992  1000 */\n  0x5368617265643a3a6f7261636c6543616c6c6572000000000000000000000000\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x20\n    /* \"test/__fixtures/BaseTest.sol\":988:992  1000 */\n  dup4\n  add\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":3390:3452  _factory.write(\"Shared::oracleCaller\", address(_oracleCaller)) */\n  tag_9\n  jump\t// in\ntag_141:\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x20\n    /* \"test/__fixtures/BaseTest.sol\":988:992  1000 */\n  sload\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup2\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n    /* \"test/__fixtures/BaseTest.sol\":3462:3513  _oracleCaller.whitelistAddress(address(this), true) */\n  dup1\n  extcodesize\n  iszero\n  tag_143\n  jumpi\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup2\n  dup1\n  swap2\n  0x44\n  mload(0x40)\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  dup1\n  swap5\n  dup2\n  swap4\n  shl(0xe2, 0x2e6916ab)\n    /* \"test/__fixtures/BaseTest.sol\":3462:3513  _oracleCaller.whitelistAddress(address(this), true) */\n  dup4\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":1126:1130  this */\n  address\n    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */\n  0x04\n    /* \"test/__fixtures/BaseTest.sol\":3462:3513  _oracleCaller.whitelistAddress(address(this), true) */\n  dup5\n  add\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mstore\n    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */\n  0x01\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  0x24\n    /* \"test/__fixtures/BaseTest.sol\":988:992  1000 */\n  dup5\n  add\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":3462:3513  _oracleCaller.whitelistAddress(address(this), true) */\n  gas\n  call\n  dup1\n  iszero\n  tag_185\n  jumpi\n  tag_147\n  jumpi\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\ntag_148:\n  pop\n  pop\n    /* \"test/__fixtures/BaseTest.sol\":1454:1491  new MintableERC20(\"TokenA\", \"TA\", 18) */\n  0x19\n    /* \"test/__fixtures/BaseTest.sol\":988:992  1000 */\n  sload\n    /* \"test/__fixtures/BaseTest.sol\":1530:1567  new MintableERC20(\"TokenB\", \"TB\", 18) */\n  0x1a\n    /* \"test/__fixtures/BaseTest.sol\":988:992  1000 */\n  sload\n    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */\n  0x13\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  sload\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mload(0x40)\n  shl(0xe2, 0x1ad80347)\n    /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  swap4\n  dup5\n  and\n    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */\n  0x04\n    /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */\n  dup3\n  add\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mstore\n  swap2\n  dup4\n  and\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  0x24\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup4\n  add\n  mstore\n    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */\n  0x00\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x44\n  dup4\n  add\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  dup2\n  swap1\n  mstore\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  swap2\n  swap4\n  swap3\n  0x20\n  swap3\n  dup6\n  swap3\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  0x64\n  swap3\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup5\n  swap3\n    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */\n  swap2\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  and\n    /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */\n  gas\n  call\n  swap2\n  dup3\n  iszero\n  tag_169\n  jumpi\n    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */\n  0x00\n    /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */\n  swap3\n  tag_151\n  jumpi\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\ntag_152:\n  pop\n    /* \"test/__fixtures/BaseTest.sol\":3548:3642  _constantProductPair = ConstantProductPair(_createPair(address(_tokenA), address(_tokenB), 0)) */\n  0x1e\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  dup5\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  or\n  swap1\n  swap3\n  sstore\n    /* \"test/__fixtures/BaseTest.sol\":1454:1491  new MintableERC20(\"TokenA\", \"TA\", 18) */\n  0x19\n    /* \"test/__fixtures/BaseTest.sol\":988:992  1000 */\n  sload\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  swap3\n  swap4\n  dup5\n  swap4\n  swap2\n  swap3\n  swap2\n  swap1\n  swap2\n  and\n  swap1\n    /* \"test/__fixtures/BaseTest.sol\":3652:3716  _tokenA.mint(address(_constantProductPair), INITIAL_MINT_AMOUNT) */\n  dup2\n  extcodesize\n  iszero\n  tag_173\n  jumpi\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mload(0x40)\n  shl(0xe0, 0x40c10f19)\n    /* \"test/__fixtures/BaseTest.sol\":3652:3716  _tokenA.mint(address(_constantProductPair), INITIAL_MINT_AMOUNT) */\n  dup2\n  mstore\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  swap3\n  dup5\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap2\n  and\n  or\n    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */\n  0x04\n    /* \"test/__fixtures/BaseTest.sol\":3652:3716  _tokenA.mint(address(_constantProductPair), INITIAL_MINT_AMOUNT) */\n  dup4\n  add\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */\n  0x056bc75e2d63100000\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  0x24\n    /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */\n  dup4\n  add\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  mstore\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup3\n  swap1\n  dup3\n  swap1\n  0x44\n  swap1\n  dup3\n  swap1\n  dup5\n  swap1\n    /* \"test/__fixtures/BaseTest.sol\":3652:3716  _tokenA.mint(address(_constantProductPair), INITIAL_MINT_AMOUNT) */\n  gas\n  call\n  dup1\n  iszero\n  tag_185\n  jumpi\n  tag_157\n  jumpi\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\ntag_158:\n  pop\n    /* \"test/__fixtures/BaseTest.sol\":1530:1567  new MintableERC20(\"TokenB\", \"TB\", 18) */\n  0x1a\n    /* \"test/__fixtures/BaseTest.sol\":988:992  1000 */\n  sload\n    /* \"test/__fixtures/BaseTest.sol\":3548:3642  _constantProductPair = ConstantProductPair(_createPair(address(_tokenA), address(_tokenB), 0)) */\n  0x1e\n    /* \"test/__fixtures/BaseTest.sol\":988:992  1000 */\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  swap2\n  dup3\n  and\n  swap2\n  and\n    /* \"test/__fixtures/BaseTest.sol\":3726:3790  _tokenB.mint(address(_constantProductPair), INITIAL_MINT_AMOUNT) */\n  dup2\n  extcodesize\n  iszero\n  tag_179\n  jumpi\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup3\n  swap2\n  0x44\n  dup4\n  swap3\n  mload(0x40)\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  swap5\n  dup6\n  swap4\n  dup5\n  swap3\n  shl(0xe0, 0x40c10f19)\n    /* \"test/__fixtures/BaseTest.sol\":3726:3790  _tokenB.mint(address(_constantProductPair), INITIAL_MINT_AMOUNT) */\n  dup5\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */\n  0x04\n    /* \"test/__fixtures/BaseTest.sol\":3726:3790  _tokenB.mint(address(_constantProductPair), INITIAL_MINT_AMOUNT) */\n  dup5\n  add\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */\n  0x056bc75e2d63100000\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  0x24\n    /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */\n  dup5\n  add\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":3726:3790  _tokenB.mint(address(_constantProductPair), INITIAL_MINT_AMOUNT) */\n  gas\n  call\n  dup1\n  iszero\n  tag_185\n  jumpi\n  tag_163\n  jumpi\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\ntag_164:\n  pop\n    /* \"test/__fixtures/BaseTest.sol\":3548:3642  _constantProductPair = ConstantProductPair(_createPair(address(_tokenA), address(_tokenB), 0)) */\n  0x1e\n    /* \"test/__fixtures/BaseTest.sol\":988:992  1000 */\n  sload\n    /* \"test/__fixtures/BaseTest.sol\":1295:1316  _makeAddress(\"alice\") */\n  0x16\n    /* \"test/__fixtures/BaseTest.sol\":924:931  250_000 */\n  sload\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mload(0x40)\n  shl(0xe1, 0x35313c21)\n    /* \"test/__fixtures/BaseTest.sol\":3800:3833  _constantProductPair.mint(_alice) */\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  swap2\n  dup3\n  and\n    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */\n  0x04\n    /* \"test/__fixtures/BaseTest.sol\":3800:3833  _constantProductPair.mint(_alice) */\n  dup3\n  add\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mstore\n  swap3\n  0x20\n  swap3\n  dup5\n  swap3\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  0x24\n  swap3\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup5\n  swap3\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  swap1\n  swap2\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  and\n    /* \"test/__fixtures/BaseTest.sol\":3800:3833  _constantProductPair.mint(_alice) */\n  gas\n  call\n  dup1\n  iszero\n  tag_185\n  jumpi\n  tag_167\n  jumpi\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\ntag_168:\n  pop\n    /* \"test/__fixtures/BaseTest.sol\":1454:1491  new MintableERC20(\"TokenA\", \"TA\", 18) */\n  0x19\n    /* \"test/__fixtures/BaseTest.sol\":988:992  1000 */\n  sload\n    /* \"test/__fixtures/BaseTest.sol\":1530:1567  new MintableERC20(\"TokenB\", \"TB\", 18) */\n  0x1a\n    /* \"test/__fixtures/BaseTest.sol\":988:992  1000 */\n  sload\n    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */\n  0x13\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  sload\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mload(0x40)\n  shl(0xe2, 0x1ad80347)\n    /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  swap4\n  dup5\n  and\n    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */\n  0x04\n    /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */\n  dup3\n  add\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mstore\n  swap2\n  dup4\n  and\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  0x24\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup4\n  add\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */\n  0x01\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x44\n  dup4\n  add\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  mstore\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  swap1\n  swap3\n  swap2\n  0x20\n  swap2\n  dup5\n  swap2\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  0x64\n  swap2\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup4\n  swap2\n    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */\n  0x00\n  swap2\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  and\n    /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */\n  gas\n  call\n  swap2\n  dup3\n  iszero\n  tag_169\n  jumpi\n    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */\n  0x00\n    /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */\n  swap3\n  tag_171\n  jumpi\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\ntag_172:\n  pop\n    /* \"test/__fixtures/BaseTest.sol\":3844:3920  _stablePair = StablePair(_createPair(address(_tokenA), address(_tokenB), 1)) */\n  0x1f\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap4\n  dup5\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup3\n  and\n  dup2\n  or\n  swap1\n  swap3\n  sstore\n    /* \"test/__fixtures/BaseTest.sol\":1454:1491  new MintableERC20(\"TokenA\", \"TA\", 18) */\n  0x19\n    /* \"test/__fixtures/BaseTest.sol\":988:992  1000 */\n  sload\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  swap3\n  swap4\n  dup5\n  swap4\n  and\n  swap1\n    /* \"test/__fixtures/BaseTest.sol\":3930:3985  _tokenA.mint(address(_stablePair), INITIAL_MINT_AMOUNT) */\n  dup2\n  extcodesize\n  iszero\n  tag_173\n  jumpi\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x44\n  dup5\n  swap3\n  swap2\n  dup4\n  dup1\n  swap4\n  mload(0x40)\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  swap7\n  dup8\n  swap6\n  dup7\n  swap5\n  shl(0xe0, 0x40c10f19)\n    /* \"test/__fixtures/BaseTest.sol\":3930:3985  _tokenA.mint(address(_stablePair), INITIAL_MINT_AMOUNT) */\n  dup7\n  mstore\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  and\n  or\n    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */\n  0x04\n    /* \"test/__fixtures/BaseTest.sol\":3930:3985  _tokenA.mint(address(_stablePair), INITIAL_MINT_AMOUNT) */\n  dup5\n  add\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */\n  0x056bc75e2d63100000\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  0x24\n    /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */\n  dup5\n  add\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":3930:3985  _tokenA.mint(address(_stablePair), INITIAL_MINT_AMOUNT) */\n  gas\n  call\n  dup1\n  iszero\n  tag_185\n  jumpi\n  tag_177\n  jumpi\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\ntag_178:\n  pop\n    /* \"test/__fixtures/BaseTest.sol\":1530:1567  new MintableERC20(\"TokenB\", \"TB\", 18) */\n  0x1a\n    /* \"test/__fixtures/BaseTest.sol\":988:992  1000 */\n  sload\n    /* \"test/__fixtures/BaseTest.sol\":3844:3920  _stablePair = StablePair(_createPair(address(_tokenA), address(_tokenB), 1)) */\n  0x1f\n    /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  swap2\n  dup3\n  and\n  swap2\n  and\n    /* \"test/__fixtures/BaseTest.sol\":3995:4050  _tokenB.mint(address(_stablePair), INITIAL_MINT_AMOUNT) */\n  dup2\n  extcodesize\n  iszero\n  tag_179\n  jumpi\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup3\n  swap2\n  0x44\n  dup4\n  swap3\n  mload(0x40)\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  swap5\n  dup6\n  swap4\n  dup5\n  swap3\n  shl(0xe0, 0x40c10f19)\n    /* \"test/__fixtures/BaseTest.sol\":3995:4050  _tokenB.mint(address(_stablePair), INITIAL_MINT_AMOUNT) */\n  dup5\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */\n  0x04\n    /* \"test/__fixtures/BaseTest.sol\":3995:4050  _tokenB.mint(address(_stablePair), INITIAL_MINT_AMOUNT) */\n  dup5\n  add\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */\n  0x056bc75e2d63100000\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  0x24\n    /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */\n  dup5\n  add\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":3995:4050  _tokenB.mint(address(_stablePair), INITIAL_MINT_AMOUNT) */\n  gas\n  call\n  dup1\n  iszero\n  tag_185\n  jumpi\n  tag_183\n  jumpi\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\ntag_184:\n  pop\n    /* \"test/__fixtures/BaseTest.sol\":3844:3920  _stablePair = StablePair(_createPair(address(_tokenA), address(_tokenB), 1)) */\n  0x1f\n    /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */\n  sload\n    /* \"test/__fixtures/BaseTest.sol\":1295:1316  _makeAddress(\"alice\") */\n  0x16\n    /* \"test/__fixtures/BaseTest.sol\":924:931  250_000 */\n  sload\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mload(0x40)\n  shl(0xe1, 0x35313c21)\n    /* \"test/__fixtures/BaseTest.sol\":4060:4084  _stablePair.mint(_alice) */\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  swap2\n  dup3\n  and\n    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */\n  0x04\n    /* \"test/__fixtures/BaseTest.sol\":4060:4084  _stablePair.mint(_alice) */\n  dup3\n  add\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mstore\n  swap3\n  0x20\n  swap3\n  dup5\n  swap3\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  0x24\n  swap3\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup5\n  swap3\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  swap1\n  swap2\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  and\n    /* \"test/__fixtures/BaseTest.sol\":4060:4084  _stablePair.mint(_alice) */\n  gas\n  call\n  dup1\n  iszero\n  tag_185\n  jumpi\n  tag_187\n  jumpi\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\ntag_188:\n  pop\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mload(0x40)\n    /* \"test/unit/ConstantProductPair.t.sol\":933:951  new AssetManager() */\n  dataSize(sub_7)\n  dup1\n  dup3\n  add\n  swap1\n  sub(shl(0x40, 0x01), 0x01)\n  dup3\n  gt\n  dup4\n  dup4\n  lt\n  or\n  tag_189\n  jumpi\n  swap1\n  dup3\n  swap2\n  dataOffset(sub_7)\n  dup4\n  codecopy\n  sub\n  swap1\n  dup3\n  create\n  swap1\n  dup2\n  iszero\n  tag_191\n  jumpi\n  pop\n  0x21\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  mload(0x40)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\n    /* \"test/unit/ConstantProductPair.t.sol\":933:951  new AssetManager() */\ntag_191:\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mload(0x40)\n  swap1\n  returndatasize\n  swap1\n  dup3\n  returndatacopy\n  returndatasize\n  swap1\n  revert\n    /* \"test/unit/ConstantProductPair.t.sol\":933:951  new AssetManager() */\ntag_189:\n  shl(0xe0, 0x4e487b71)\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup5\n  mstore\n  0x41\n    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */\n  0x04\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mstore\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  0x24\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup5\n  revert\n    /* \"test/__fixtures/BaseTest.sol\":4060:4084  _stablePair.mint(_alice) */\ntag_187:\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x20\n    /* \"test/__fixtures/BaseTest.sol\":4060:4084  _stablePair.mint(_alice) */\n  swap1\n  dup2\n  returndatasize\n  dup4\n  gt\n  tag_193\n  jumpi\ntag_194:\n  tag_195\n  dup2\n  dup4\n  tag_3\n  jump\t// in\ntag_195:\n  dup2\n  add\n    /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */\n  sub\n  slt\n  tag_196\n  jumpi\n    /* \"test/__fixtures/BaseTest.sol\":4060:4084  _stablePair.mint(_alice) */\n  codesize\n  jump(tag_188)\n    /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */\ntag_196:\n    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */\n  0x00\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup1\n  revert\n    /* \"test/__fixtures/BaseTest.sol\":4060:4084  _stablePair.mint(_alice) */\ntag_193:\n  pop\n  returndatasize\n  jump(tag_194)\ntag_185:\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mload(0x40)\n  returndatasize\n  dup5\n  dup3\n  returndatacopy\n  returndatasize\n  swap1\n  revert\n    /* \"test/__fixtures/BaseTest.sol\":3995:4050  _tokenB.mint(address(_stablePair), INITIAL_MINT_AMOUNT) */\ntag_183:\n  tag_198\n  swap1\n  tag_1\n  jump\t// in\ntag_198:\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  tag_199\n  jumpi\n    /* \"test/__fixtures/BaseTest.sol\":3995:4050  _tokenB.mint(address(_stablePair), INITIAL_MINT_AMOUNT) */\n  dup1\n  codesize\n  jump(tag_184)\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\ntag_199:\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup1\n  revert\n    /* \"test/__fixtures/BaseTest.sol\":3995:4050  _tokenB.mint(address(_stablePair), INITIAL_MINT_AMOUNT) */\ntag_179:\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  pop\n  pop\n  revert\n    /* \"test/__fixtures/BaseTest.sol\":3930:3985  _tokenA.mint(address(_stablePair), INITIAL_MINT_AMOUNT) */\ntag_177:\n  tag_201\n  swap1\n  tag_1\n  jump\t// in\ntag_201:\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  tag_199\n  jumpi\n    /* \"test/__fixtures/BaseTest.sol\":3930:3985  _tokenA.mint(address(_stablePair), INITIAL_MINT_AMOUNT) */\n  dup1\n  codesize\n  jump(tag_178)\ntag_173:\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  pop\n  pop\n  pop\n  revert\n    /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */\ntag_171:\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x20\n    /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */\n  dup2\n  returndatasize\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x20\n    /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */\n  gt\n  tag_204\n  jumpi\ntag_205:\n  dup2\n  tag_206\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x20\n    /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */\n  swap4\n  dup4\n  tag_3\n  jump\t// in\ntag_206:\n  dup2\n  add\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  sub\n  slt\n  tag_209\n  jumpi\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n  dup2\n  and\n  dup2\n  sub\n  tag_209\n  jumpi\n    /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */\n  swap2\n  pop\n  dup1\n  jump(tag_172)\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\ntag_209:\n  dup3\n  dup1\n  revert\n    /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */\ntag_204:\n  returndatasize\n  swap2\n  pop\n  jump(tag_205)\ntag_169:\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mload(0x40)\n  returndatasize\n    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */\n  0x00\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup3\n  returndatacopy\n  returndatasize\n  swap1\n  revert\n    /* \"test/__fixtures/BaseTest.sol\":3800:3833  _constantProductPair.mint(_alice) */\ntag_167:\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x20\n    /* \"test/__fixtures/BaseTest.sol\":3800:3833  _constantProductPair.mint(_alice) */\n  swap1\n  dup2\n  returndatasize\n  dup4\n  gt\n  tag_211\n  jumpi\ntag_212:\n  tag_213\n  dup2\n  dup4\n  tag_3\n  jump\t// in\ntag_213:\n  dup2\n  add\n    /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */\n  sub\n  slt\n  tag_196\n  jumpi\n    /* \"test/__fixtures/BaseTest.sol\":3800:3833  _constantProductPair.mint(_alice) */\n  codesize\n  jump(tag_168)\ntag_211:\n  pop\n  returndatasize\n  jump(tag_212)\n    /* \"test/__fixtures/BaseTest.sol\":3726:3790  _tokenB.mint(address(_constantProductPair), INITIAL_MINT_AMOUNT) */\ntag_163:\n  tag_216\n  swap1\n  tag_1\n  jump\t// in\ntag_216:\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  tag_199\n  jumpi\n    /* \"test/__fixtures/BaseTest.sol\":3726:3790  _tokenB.mint(address(_constantProductPair), INITIAL_MINT_AMOUNT) */\n  dup1\n  codesize\n  jump(tag_164)\n    /* \"test/__fixtures/BaseTest.sol\":3652:3716  _tokenA.mint(address(_constantProductPair), INITIAL_MINT_AMOUNT) */\ntag_157:\n  tag_219\n  swap1\n  tag_1\n  jump\t// in\ntag_219:\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  tag_199\n  jumpi\n    /* \"test/__fixtures/BaseTest.sol\":3652:3716  _tokenA.mint(address(_constantProductPair), INITIAL_MINT_AMOUNT) */\n  dup1\n  codesize\n  jump(tag_158)\n    /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */\ntag_151:\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x20\n    /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */\n  dup2\n  returndatasize\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x20\n    /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */\n  gt\n  tag_222\n  jumpi\ntag_223:\n  dup2\n  tag_224\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x20\n    /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */\n  swap4\n  dup4\n  tag_3\n  jump\t// in\ntag_224:\n  dup2\n  add\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  sub\n  slt\n  tag_209\n  jumpi\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n  dup2\n  and\n  dup2\n  sub\n  tag_209\n  jumpi\n    /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */\n  swap2\n  pop\n  dup1\n  jump(tag_152)\ntag_222:\n  returndatasize\n  swap2\n  pop\n  jump(tag_223)\n    /* \"test/__fixtures/BaseTest.sol\":3462:3513  _oracleCaller.whitelistAddress(address(this), true) */\ntag_147:\n  tag_229\n  swap1\n  tag_1\n  jump\t// in\ntag_229:\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  tag_199\n  jumpi\n    /* \"test/__fixtures/BaseTest.sol\":3462:3513  _oracleCaller.whitelistAddress(address(this), true) */\n  dup1\n  codesize\n  jump(tag_148)\ntag_143:\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  pop\n  revert\n    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */\ntag_139:\n  tag_232\n  swap1\n  tag_1\n  jump\t// in\ntag_232:\n  codesize\n  jump(tag_140)\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\ntag_132:\n  dup1\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x20\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  dup1\n  swap3\n  dup5\n  add\n  add\n  mload\n  dup3\n  dup3\n  dup7\n  add\n  add\n  mstore\n  add\n  jump(tag_131)\n    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */\ntag_128:\n  tag_233\n  swap1\n  tag_1\n  jump\t// in\ntag_233:\n  codesize\n  jump(tag_129)\n    /* \"test/__fixtures/BaseTest.sol\":3160:3215  _factory.addBytecode(type(StableMintBurn).creationCode) */\ntag_119:\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x20\n    /* \"test/__fixtures/BaseTest.sol\":3160:3215  _factory.addBytecode(type(StableMintBurn).creationCode) */\n  swap1\n  dup2\n  returndatasize\n  dup4\n  gt\n  tag_234\n  jumpi\ntag_235:\n  tag_236\n  dup2\n  dup4\n  tag_3\n  jump\t// in\ntag_236:\n  dup2\n  add\n    /* \"test/__fixtures/BaseTest.sol\":795:799  3000 */\n  sub\n  slt\n  tag_199\n  jumpi\n    /* \"test/__fixtures/BaseTest.sol\":3160:3215  _factory.addBytecode(type(StableMintBurn).creationCode) */\n  codesize\n  jump(tag_120)\ntag_234:\n  pop\n  returndatasize\n  jump(tag_235)\n    /* \"test/__fixtures/BaseTest.sol\":3102:3150  _factory.addCurve(type(StablePair).creationCode) */\ntag_113:\n  tag_239\n  swap1\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x40\n    /* \"test/__fixtures/BaseTest.sol\":3102:3150  _factory.addCurve(type(StablePair).creationCode) */\n  returndatasize\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x40\n    /* \"test/__fixtures/BaseTest.sol\":3102:3150  _factory.addCurve(type(StablePair).creationCode) */\n  gt\n  tag_240\n  jumpi\ntag_241:\n  tag_242\n  dup2\n  dup4\n  tag_3\n  jump\t// in\ntag_242:\n  dup2\n  add\n  swap1\n  tag_8\n  jump\t// in\ntag_239:\n  pop\n  jump(tag_114)\ntag_240:\n  pop\n  returndatasize\n  jump(tag_241)\n    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */\ntag_107:\n  tag_243\n  swap1\n  tag_1\n  jump\t// in\ntag_243:\n  codesize\n  jump(tag_108)\n    /* \"test/__fixtures/BaseTest.sol\":2946:3003  _factory.addCurve(type(ConstantProductPair).creationCode) */\ntag_98:\n  tag_244\n  swap1\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x40\n    /* \"test/__fixtures/BaseTest.sol\":2946:3003  _factory.addCurve(type(ConstantProductPair).creationCode) */\n  returndatasize\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x40\n    /* \"test/__fixtures/BaseTest.sol\":2946:3003  _factory.addCurve(type(ConstantProductPair).creationCode) */\n  gt\n  tag_240\n  jumpi\n  tag_242\n  dup2\n  dup4\n  tag_3\n  jump\t// in\ntag_244:\n  pop\n  jump(tag_99)\n    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */\ntag_92:\n  tag_248\n  swap1\n  tag_1\n  jump\t// in\ntag_248:\n  codesize\n  jump(tag_93)\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\ntag_85:\n  dup1\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x20\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  dup1\n  swap3\n  dup5\n  add\n  add\n  mload\n  dup3\n  dup3\n  dup7\n  add\n  add\n  mstore\n  add\n  jump(tag_84)\n    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */\ntag_77:\n  tag_249\n  swap1\n  tag_1\n  jump\t// in\ntag_249:\n  codesize\n  jump(tag_78)\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\ntag_70:\n  dup1\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x20\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  dup1\n  swap3\n  dup5\n  add\n  add\n  mload\n  dup3\n  dup3\n  dup7\n  add\n  add\n  mstore\n  add\n  jump(tag_69)\n    /* \"test/__fixtures/BaseTest.sol\":2405:2582  vm.writeFile(... */\ntag_65:\n  tag_250\n  swap1\n  tag_1\n  jump\t// in\ntag_250:\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  tag_199\n  jumpi\n    /* \"test/__fixtures/BaseTest.sol\":2405:2582  vm.writeFile(... */\n  dup1\n  codesize\n  jump(tag_66)\n    /* \"test/__fixtures/BaseTest.sol\":1981:2593  try vm.envString(\"FOUNDRY_PROFILE\") returns (string memory lProfile) {... */\ntag_55:\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mload(0x40)\n    /* \"test/__fixtures/BaseTest.sol\":2078:2104  abi.encodePacked(lProfile) */\n  tag_253\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x20\n    /* \"test/__fixtures/BaseTest.sol\":2078:2104  abi.encodePacked(lProfile) */\n  dup3\n  dup2\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  tag_254\n    /* \"test/__fixtures/BaseTest.sol\":2078:2104  abi.encodePacked(lProfile) */\n  dup2\n  dup4\n  add\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  swap7\n  dup8\n  dup2\n  mload\n  swap4\n  dup5\n  swap3\n  add\n  tag_6\n  jump\t// in\ntag_254:\n  dup2\n  add\n    /* \"test/__fixtures/BaseTest.sol\":2078:2104  abi.encodePacked(lProfile) */\n  sub\n  dup1\n  dup5\n  mstore\n  add\n  dup3\n  tag_3\n  jump\t// in\ntag_253:\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  mload\n    /* \"test/__fixtures/BaseTest.sol\":2068:2105  keccak256(abi.encodePacked(lProfile)) */\n  swap1\n  keccak256\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mload(0x40)\n  0x20\n    /* \"test/__fixtures/BaseTest.sol\":2119:2147  abi.encodePacked(\"coverage\") */\n  dup2\n  add\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  swap1\n  shl(0xc0, 0x636f766572616765)\n  dup3\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":2119:2147  abi.encodePacked(\"coverage\") */\n  0x08\n  dup2\n  mstore\n  tag_255\n  dup2\n  tag_2\n  jump\t// in\ntag_255:\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  mload\n    /* \"test/__fixtures/BaseTest.sol\":2109:2148  keccak256(abi.encodePacked(\"coverage\")) */\n  swap1\n  keccak256\n    /* \"test/__fixtures/BaseTest.sol\":2068:2148  keccak256(abi.encodePacked(lProfile)) == keccak256(abi.encodePacked(\"coverage\")) */\n  sub\n    /* \"test/__fixtures/BaseTest.sol\":1981:2593  try vm.envString(\"FOUNDRY_PROFILE\") returns (string memory lProfile) {... */\n  tag_67\n    /* \"test/__fixtures/BaseTest.sol\":2064:2374  if (keccak256(abi.encodePacked(lProfile)) == keccak256(abi.encodePacked(\"coverage\"))) {... */\n  jumpi\n    /* \"test/__fixtures/BaseTest.sol\":2266:2341  _bytesToHex(abi.encodePacked(keccak256(type(StableMintBurn).creationCode))) */\n  tag_258\n    /* \"test/__fixtures/BaseTest.sol\":2305:2338  type(StableMintBurn).creationCode */\n  dataSize(sub_3)\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mload(0x40)\n  tag_58\n  0x20\n    /* \"test/__fixtures/BaseTest.sol\":2305:2338  type(StableMintBurn).creationCode */\n  dup4\n  add\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup3\n  tag_3\n  jump\t// in\n    /* \"test/__fixtures/BaseTest.sol\":2266:2341  _bytesToHex(abi.encodePacked(keccak256(type(StableMintBurn).creationCode))) */\ntag_258:\n    /* \"test/__fixtures/BaseTest.sol\":2168:2359  vm.writeFile(... */\n  dup2\n  0x00\n  dup1\n  mload\n  0x20\n  data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n  extcodesize\n  iszero\n  tag_199\n  jumpi\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  tag_263\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  swap2\n  mload(0x40)\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  dup1\n  swap4\n  dup2\n  swap3\n  shl(0xe0, 0x897e0a97)\n    /* \"test/__fixtures/BaseTest.sol\":2168:2359  vm.writeFile(... */\n  dup4\n  mstore\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x40\n    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */\n  0x04\n    /* \"test/__fixtures/BaseTest.sol\":2168:2359  vm.writeFile(... */\n  dup5\n  add\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  mstore\n  0x28\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x44\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  dup5\n  add\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mstore\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  0x736372697074732f756e6f7074696d697a65642d737461626c652d6d696e742d\n  0x64\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup5\n  add\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  mstore\n  shl(0xc0, 0x6275726e2d6b6579)\n  0x84\n  dup5\n  add\n  mstore\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0xa0\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  0x24\n  dup5\n  add\n  mstore\n  0xa4\n  dup4\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_263:\n    /* \"test/__fixtures/BaseTest.sol\":2168:2359  vm.writeFile(... */\n  sub\n  dup2\n  dup4\n  0x00\n  dup1\n  mload\n  0x20\n  data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n  gas\n  call\n  dup1\n  iszero\n  tag_185\n  jumpi\n  tag_266\n  jumpi\n    /* \"test/__fixtures/BaseTest.sol\":2064:2374  if (keccak256(abi.encodePacked(lProfile)) == keccak256(abi.encodePacked(\"coverage\"))) {... */\ntag_267:\n  pop\n    /* \"test/__fixtures/BaseTest.sol\":1981:2593  try vm.envString(\"FOUNDRY_PROFILE\") returns (string memory lProfile) {... */\n  jump(tag_67)\n    /* \"test/__fixtures/BaseTest.sol\":2168:2359  vm.writeFile(... */\ntag_266:\n  tag_268\n  swap1\n  tag_1\n  jump\t// in\ntag_268:\n  codesize\n  jump(tag_267)\n    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */\ntag_53:\n  swap1\n  swap2\n  pop\n  returndatasize\n  swap1\n  dup2\n  dup5\n  dup3\n  returndatacopy\n  tag_269\n  dup3\n  dup3\n  tag_3\n  jump\t// in\ntag_269:\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x20\n    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */\n  dup2\n  dup4\n  dup2\n  add\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  sub\n  slt\n  tag_270\n  jumpi\n  dup1\n  mload\n  swap1\n  sub(shl(0x40, 0x01), 0x01)\n  dup3\n  gt\n  tag_274\n  jumpi\n    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */\n  dup3\n  dup2\n  add\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  0x1f\n  dup4\n  dup4\n  add\n  add\n  slt\n  iszero\n  tag_274\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  swap1\n  tag_276\n  dup3\n  tag_4\n  jump\t// in\ntag_276:\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  swap4\n  tag_277\n  mload(0x40)\n  swap6\n  dup7\n  tag_3\n  jump\t// in\ntag_277:\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  dup3\n  dup6\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */\n  dup2\n  add\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x20\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  dup4\n  dup6\n  dup5\n  add\n  add\n  add\n  gt\n  tag_278\n  jumpi\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x20\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  tag_280\n  swap4\n  dup2\n  dup7\n  add\n  swap3\n  add\n  add\n  tag_6\n  jump\t// in\ntag_280:\n    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */\n  swap1\n  codesize\n  jump(tag_54)\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\ntag_278:\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup6\n  dup1\n  revert\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\ntag_274:\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup5\n  dup1\n  revert\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\ntag_270:\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup4\n  dup1\n  revert\n    /* \"test/__fixtures/BaseTest.sol\":1932:1950  new OracleCaller() */\ntag_51:\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  pop\n  mload(0x40)\n  swap1\n  returndatasize\n  swap1\n  dup3\n  returndatacopy\n  returndatasize\n  swap1\n  revert\n    /* \"test/__fixtures/BaseTest.sol\":1757:1794  new MintableERC20(\"TokenF\", \"TF\", 25) */\ntag_45:\n  shl(0xe0, 0x4e487b71)\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup3\n  mstore\n  mstore(0x04, 0x41)\n  0x24\n  dup3\n  revert\n    /* \"test/__fixtures/BaseTest.sol\":1530:1567  new MintableERC20(\"TokenB\", \"TB\", 18) */\ntag_33:\n  shl(0xe0, 0x4e487b71)\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup4\n  mstore\n  mstore(0x04, 0x41)\n  0x24\n  dup4\n  revert\ntag_1:\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  tag_281\n  jumpi\n    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */\n  0x40\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mstore\n  jump\t// out\ntag_281:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n  revert(0x00, 0x24)\ntag_2:\n  0x40\n  dup2\n  add\n  swap1\n  dup2\n  lt\n  sub(shl(0x40, 0x01), 0x01)\n  dup3\n  gt\n  or\n  tag_281\n  jumpi\n  0x40\n  mstore\n  jump\t// out\ntag_3:\n  0x1f\n  swap1\n  swap2\n  add\n  not(0x1f)\n  and\n  dup2\n  add\n  swap1\n  sub(shl(0x40, 0x01), 0x01)\n  dup3\n  gt\n  swap1\n  dup3\n  lt\n  or\n  tag_281\n  jumpi\n    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */\n  0x40\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mstore\n  jump\t// out\ntag_4:\n  sub(shl(0x40, 0x01), 0x01)\n  dup2\n  gt\n  tag_281\n  jumpi\n  0x1f\n  add\n  not(0x1f)\n  and\n  0x20\n  add\n  swap1\n  jump\t// out\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\ntag_5:\n  0x00\ntag_289:\n    /* \"test/__fixtures/BaseTest.sol\":795:799  3000 */\n  0x0b\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  dup2\n  lt\n  tag_290\n  jumpi\n  pop\n  pop\n    /* \"test/__fixtures/BaseTest.sol\":795:799  3000 */\n  0x0b\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  0x00\n  swap2\n  add\n  mstore\n  jump\t// out\ntag_290:\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_289)\ntag_6:\n  0x00\ntag_292:\n  dup4\n  dup2\n  lt\n  tag_293\n  jumpi\n  pop\n  pop\n  0x00\n  swap2\n  add\n  mstore\n  jump\t// out\ntag_293:\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_292)\ntag_7:\n  swap1\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x20\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  swap2\n  tag_295\n  dup2\n  mload\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup1\n  swap3\n  dup2\n  dup6\n  mstore\n  dup6\n  dup1\n  dup7\n  add\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  swap2\n  add\n  tag_6\n  jump\t// in\ntag_295:\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x1f\n  add\n  not(0x1f)\n  and\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  add\n  add\n  swap1\n  jump\t// out\n    /* \"test/__fixtures/BaseTest.sol\":1048:1057  0.0005e18 */\ntag_8:\n  swap2\n  swap1\n  dup3\n  0x40\n  swap2\n  sub\n  slt\n  tag_196\n  jumpi\n  0x20\n  dup3\n  mload\n  swap3\n  add\n  mload\n  swap1\n  jump\t// out\n    /* \"src/libraries/FactoryStore.sol\":1047:1217  function write(IGenericFactory aFactory, string memory aKey, address aValue) internal {... */\ntag_9:\n  swap2\n    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */\n  0x01\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup1\n  0xa0\n  shl\n  sub\n  dup1\n  swap4\n  and\n  swap2\n  mload(0x40)\n    /* \"src/libraries/FactoryStore.sol\":1166:1188  abi.encodePacked(aKey) */\n  tag_298\n  0x20\n  dup3\n  dup2\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  tag_254\n    /* \"src/libraries/FactoryStore.sol\":1166:1188  abi.encodePacked(aKey) */\n  dup2\n  dup4\n  add\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  swap7\n  dup8\n  dup2\n  mload\n  swap4\n  dup5\n  swap3\n  add\n  tag_6\n  jump\t// in\n    /* \"src/libraries/FactoryStore.sol\":1166:1188  abi.encodePacked(aKey) */\ntag_298:\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  mload\n    /* \"src/libraries/FactoryStore.sol\":1156:1189  keccak256(abi.encodePacked(aKey)) */\n  swap1\n  keccak256\n    /* \"src/libraries/FactoryStore.sol\":1143:1210  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */\n  swap2\n  dup1\n  extcodesize\n  iszero\n  tag_196\n  jumpi\n  0x00\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  swap3\n  dup4\n  0x44\n  swap3\n  mload(0x40)\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  swap7\n  dup8\n  swap6\n  dup7\n  swap5\n  shl(0xe0, 0xf71f7a25)\n    /* \"src/libraries/FactoryStore.sol\":1143:1210  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */\n  dup7\n  mstore\n  0x04\n  dup7\n  add\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  mstore\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  and\n  0x24\n  dup5\n  add\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  mstore\n    /* \"src/libraries/FactoryStore.sol\":1143:1210  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */\n  gas\n  call\n  dup1\n  iszero\n  tag_169\n  jumpi\n  tag_304\n  jumpi\n    /* \"src/libraries/FactoryStore.sol\":1047:1217  function write(IGenericFactory aFactory, string memory aKey, address aValue) internal {... */\n  pop\n  jump\t// out\n    /* \"src/libraries/FactoryStore.sol\":1143:1210  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */\ntag_304:\n  tag_306\n  swap1\n  tag_1\n  jump\t// in\ntag_306:\n    /* \"src/libraries/FactoryStore.sol\":1047:1217  function write(IGenericFactory aFactory, string memory aKey, address aValue) internal {... */\n  jump\t// out\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\ntag_10:\n  swap1\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  dup2\n  mload\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup2\n  lt\n  iszero\n  tag_307\n  jumpi\n  add\n  0x20\n  add\n  swap1\n  jump\t// out\ntag_307:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x32)\n  revert(0x00, 0x24)\n    /* \"test/__fixtures/BaseTest.sol\":4210:4734  function _bytesToHex(bytes memory buffer) public pure returns (string memory) {... */\ntag_11:\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  dup1\n  mload\n    /* \"test/__fixtures/BaseTest.sol\":4405:4406  2 */\n  0x02\n  swap2\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x01\n  dup3\n  dup2\n  shl\n  swap3\n  dup1\n  iszero\n  swap1\n  dup5\n  div\n  dup6\n  eq\n  or\n  iszero\n  tag_336\n  jumpi\n  dup1\n  tag_311\n  tag_312\n  dup6\n  tag_4\n  jump\t// in\ntag_312:\n  swap5\n  tag_313\n  mload(0x40)\n  swap7\n  dup8\n  tag_3\n  jump\t// in\ntag_313:\n  dup1\n  dup7\n  mstore\n  tag_4\n  jump\t// in\ntag_311:\n  0x20\n  dup6\n  add\n  swap4\n  swap1\n  not(0x1f)\n  add\n  calldatasize\n  dup6\n  calldatacopy\n  mload(0x40)\n  tag_314\n  dup2\n  tag_2\n  jump\t// in\ntag_314:\n  0x10\n  dup2\n  mstore\n  shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n  0x20\n  dup3\n  add\n  mstore\n  0x00\n    /* \"test/__fixtures/BaseTest.sol\":4468:4669  for (uint256 i = 0; i < buffer.length; i++) {... */\n  swap3\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\ntag_315:\n  tag_316\n  jumpi\n    /* \"test/__fixtures/BaseTest.sol\":4468:4669  for (uint256 i = 0; i < buffer.length; i++) {... */\ntag_317:\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  pop\n  pop\n  pop\n  pop\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  tag_318\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  swap3\n    /* \"test/__fixtures/BaseTest.sol\":4693:4726  abi.encodePacked(\"0x\", converted) */\n  tag_319\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  swap3\n  0x22\n  swap3\n  mload(0x40)\n    /* \"test/__fixtures/BaseTest.sol\":4693:4726  abi.encodePacked(\"0x\", converted) */\n  swap6\n  dup7\n  swap3\n  shl(0xf3, 0x060f)\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  0x20\n    /* \"test/__fixtures/BaseTest.sol\":4693:4726  abi.encodePacked(\"0x\", converted) */\n  dup6\n  add\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mstore\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  mload\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup1\n  swap3\n  dup7\n  dup6\n  add\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  swap1\n  tag_6\n  jump\t// in\ntag_318:\n  dup2\n  add\n    /* \"test/__fixtures/BaseTest.sol\":4693:4726  abi.encodePacked(\"0x\", converted) */\n  sub\n  swap1\n  dup2\n  add\n  dup5\n  mstore\n  add\n  dup3\n  tag_3\n  jump\t// in\ntag_319:\n    /* \"test/__fixtures/BaseTest.sol\":4210:4734  function _bytesToHex(bytes memory buffer) public pure returns (string memory) {... */\n  swap1\n  jump\t// out\n    /* \"test/__fixtures/BaseTest.sol\":4507:4510  i++ */\ntag_316:\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  dup2\n  mload\n    /* \"test/__fixtures/BaseTest.sol\":4488:4505  i < buffer.length */\n  dup4\n  lt\n  iszero\n  tag_320\n  jumpi\n    /* \"test/__fixtures/BaseTest.sol\":4557:4566  buffer[i] */\n  tag_322\n  dup4\n  dup4\n  tag_10\n  jump\t// in\ntag_322:\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mload\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  dup2\n  mload\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup1\n  iszero\n  tag_330\n  jumpi\n  0xf8\n  swap2\n  0xff00000000000000000000000000000000000000000000000000000000000000\n  swap2\n  dup3\n  swap2\n    /* \"test/__fixtures/BaseTest.sol\":4545:4583  _base[uint8(buffer[i]) / _base.length] */\n  tag_325\n  swap2\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  swap1\n  dup6\n  shr\n  div\n    /* \"test/__fixtures/BaseTest.sol\":4545:4583  _base[uint8(buffer[i]) / _base.length] */\n  dup6\n  tag_10\n  jump\t// in\ntag_325:\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mload\n  and\n  swap2\n  dup6\n  dup8\n  shl\n  swap3\n  dup7\n  dup5\n  div\n  dup12\n  eq\n  dup8\n  iszero\n  or\n  iszero\n  tag_336\n  jumpi\n  0x00\n    /* \"test/__fixtures/BaseTest.sol\":4526:4583  converted[i * 2] = _base[uint8(buffer[i]) / _base.length] */\n  byte\n  tag_328\n  dup5\n  dup12\n  tag_10\n  jump\t// in\ntag_328:\n  mstore8\n    /* \"test/__fixtures/BaseTest.sol\":4632:4641  buffer[i] */\n  tag_329\n  dup7\n  dup7\n  tag_10\n  jump\t// in\ntag_329:\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mload\n  swap1\n  shr\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  dup4\n  mload\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup1\n  iszero\n  tag_330\n  jumpi\n    /* \"test/__fixtures/BaseTest.sol\":4620:4658  _base[uint8(buffer[i]) % _base.length] */\n  tag_332\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  swap2\n  mod\n    /* \"test/__fixtures/BaseTest.sol\":4620:4658  _base[uint8(buffer[i]) % _base.length] */\n  dup5\n  tag_10\n  jump\t// in\ntag_332:\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mload\n  and\n  dup6\n  dup3\n  add\n  dup1\n  swap3\n  gt\n  tag_336\n  jumpi\n    /* \"test/__fixtures/BaseTest.sol\":4597:4658  converted[i * 2 + 1] = _base[uint8(buffer[i]) % _base.length] */\n  tag_335\n  swap1\n  0x00\n  byte\n  swap2\n  dup9\n  tag_10\n  jump\t// in\ntag_335:\n  mstore8\n  not(0x00)\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  dup4\n  eq\n  tag_336\n  jumpi\n  dup4\n  dup1\n  swap4\n  add\n    /* \"test/__fixtures/BaseTest.sol\":4473:4486  uint256 i = 0 */\n  swap3\n  jump(tag_315)\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\ntag_336:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x11)\n  revert(0x00, 0x24)\ntag_330:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x12)\n  revert(0x00, 0x24)\n    /* \"test/__fixtures/BaseTest.sol\":4488:4505  i < buffer.length */\ntag_320:\n  jump(tag_317)\n    /* \"test/__fixtures/BaseTest.sol\":4740:4968  function _makeAddress(string memory aName) internal returns (address) {... */\ntag_12:\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mload(0x40)\n    /* \"test/__fixtures/BaseTest.sol\":4873:4896  abi.encodePacked(aName) */\n  0x20\n  dup2\n  add\n  tag_338\n  0x20\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  dup4\n  dup6\n  mload\n  tag_339\n  dup2\n  dup7\n  dup6\n  dup11\n  add\n  tag_6\n  jump\t// in\ntag_339:\n  dup2\n  add\n    /* \"test/__fixtures/BaseTest.sol\":4873:4896  abi.encodePacked(aName) */\n  sub\n  dup1\n  dup6\n  mstore\n  add\n  dup4\n  tag_3\n  jump\t// in\ntag_338:\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  swap1\n  mload\n    /* \"test/__fixtures/BaseTest.sol\":4863:4897  keccak256(abi.encodePacked(aName)) */\n  swap1\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  and\n  swap1\n  0x00\n  dup1\n  mload\n  0x20\n  data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"test/__fixtures/BaseTest.sol\":4910:4935  vm.label(lAddress, aName) */\n  dup1\n  extcodesize\n  iszero\n  tag_196\n  jumpi\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  tag_342\n  0x00\n  swap3\n  swap2\n  dup4\n  swap3\n  mload(0x40)\n    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n  swap5\n  dup6\n  dup1\n  swap5\n  dup2\n  swap4\n  shl(0xe3, 0x18caf8e3)\n    /* \"test/__fixtures/BaseTest.sol\":4910:4935  vm.label(lAddress, aName) */\n  dup4\n  mstore\n  dup10\n  0x04\n  dup5\n  add\n    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n  mstore\n  0x40\n  0x24\n  dup5\n  add\n  mstore\n  0x44\n  dup4\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_342:\n    /* \"test/__fixtures/BaseTest.sol\":4910:4935  vm.label(lAddress, aName) */\n  sub\n  swap3\n  gas\n  call\n  dup1\n  iszero\n  tag_169\n  jumpi\n  tag_345\n  jumpi\n    /* \"test/__fixtures/BaseTest.sol\":4946:4961  return lAddress */\n  pop\n    /* \"test/__fixtures/BaseTest.sol\":4740:4968  function _makeAddress(string memory aName) internal returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"test/__fixtures/BaseTest.sol\":4910:4935  vm.label(lAddress, aName) */\ntag_345:\n  tag_319\n  swap1\n  tag_1\n  jump\t// in\nstop\ndata_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50 0000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d\n\nsub_0: assembly {\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_114, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_114:\n      0x00\n      dup1\n      calldataload\n      0xe0\n      shr\n      dup1\n      0x0bffadf7\n      eq\n      tag_116\n      jumpi\n      dup1\n      0x181876e3\n      eq\n      tag_118\n      jumpi\n      dup1\n      0x1f2b7669\n      eq\n      tag_120\n      jumpi\n      dup1\n      0x211d9375\n      eq\n      tag_122\n      jumpi\n      dup1\n      0x29c567f3\n      eq\n      tag_124\n      jumpi\n      dup1\n      0x34375f4a\n      eq\n      tag_126\n      jumpi\n      dup1\n      0x402ab823\n      eq\n      tag_128\n      jumpi\n      dup1\n      0x438b1cc5\n      eq\n      tag_130\n      jumpi\n      dup1\n      0x438d33a7\n      eq\n      tag_132\n      jumpi\n      dup1\n      0x448d3769\n      eq\n      tag_134\n      jumpi\n      dup1\n      0x4fc7c217\n      eq\n      tag_136\n      jumpi\n      dup1\n      0x5fe90734\n      eq\n      tag_138\n      jumpi\n      dup1\n      0x6e008a03\n      eq\n      tag_140\n      jumpi\n      dup1\n      0x70ec7edb\n      eq\n      tag_142\n      jumpi\n      dup1\n      0x81782d11\n      eq\n      tag_144\n      jumpi\n      dup1\n      0x9642ddaf\n      eq\n      tag_146\n      jumpi\n      dup1\n      0x96e1d23a\n      eq\n      tag_148\n      jumpi\n      dup1\n      0x9861ae70\n      eq\n      tag_150\n      jumpi\n      dup1\n      0x9af35f70\n      eq\n      tag_152\n      jumpi\n      dup1\n      0x9edab5b3\n      eq\n      tag_154\n      jumpi\n      dup1\n      0xa189a486\n      eq\n      tag_156\n      jumpi\n      dup1\n      0xab4529da\n      eq\n      tag_158\n      jumpi\n      dup1\n      0xb233637d\n      eq\n      tag_160\n      jumpi\n      dup1\n      0xb90e6968\n      eq\n      tag_162\n      jumpi\n      dup1\n      0xba414fa6\n      eq\n      tag_164\n      jumpi\n      dup1\n      0xbdba41be\n      eq\n      tag_166\n      jumpi\n      dup1\n      0xc154276e\n      eq\n      tag_168\n      jumpi\n      dup1\n      0xd40a18ff\n      eq\n      tag_170\n      jumpi\n      dup1\n      0xd684426c\n      eq\n      tag_172\n      jumpi\n      dup1\n      0xe13aba48\n      eq\n      tag_174\n      jumpi\n      dup1\n      0xe5c8fc1e\n      eq\n      tag_176\n      jumpi\n      dup1\n      0xe6de30a6\n      eq\n      tag_178\n      jumpi\n      dup1\n      0xeb52abf0\n      eq\n      tag_180\n      jumpi\n      dup1\n      0xebeefd29\n      eq\n      tag_182\n      jumpi\n      dup1\n      0xf103ffa9\n      eq\n      tag_184\n      jumpi\n      dup1\n      0xfa7626d4\n      eq\n      tag_186\n      jumpi\n      dup1\n      0xfb13824f\n      eq\n      tag_188\n      jumpi\n      dup1\n      0xff1c014a\n      eq\n      tag_190\n      jumpi\n      0xff5a6560\n      eq\n      tag_192\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_192:\n      jumpi(tag_196, callvalue)\n      dup1\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_196\n      jumpi\n      dup1\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n        /* \"test/unit/ConstantProductPair.t.sol\":4298:4348  _createPair(address(_tokenA), address(_tokenC), 0) */\n      tag_198\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":4318:4325  _tokenA */\n      0x19\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      dup3\n        /* \"test/unit/ConstantProductPair.t.sol\":4336:4343  _tokenC */\n      0x1b\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":4298:4348  _createPair(address(_tokenA), address(_tokenC), 0) */\n      swap1\n      tag_46\n      jump\t// in\n    tag_198:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      and\n      swap1\n      dup1\n        /* \"test/unit/ConstantProductPair.t.sol\":4318:4325  _tokenA */\n      0x19\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":4359:4391  _tokenA.mint(address(lPair), 10) */\n      swap1\n      dup2\n      extcodesize\n      iszero\n      tag_212\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      dup5\n      dup2\n      0x44\n      dup2\n      dup4\n      0x40c10f1900000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":4359:4391  _tokenA.mint(address(lPair), 10) */\n      swap8\n      dup9\n      dup4\n      mstore\n      dup10\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":4359:4391  _tokenA.mint(address(lPair), 10) */\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":4388:4390  10 */\n      0x0a\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      dup5\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":4359:4391  _tokenA.mint(address(lPair), 10) */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_201\n      jumpi\n      dup6\n      swap2\n      tag_203\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_204:\n      pop\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":4401:4408  _tokenB */\n      0x1a\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":4401:4433  _tokenB.mint(address(lPair), 10) */\n      swap1\n      dup2\n      extcodesize\n      iszero\n      tag_212\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup4\n      swap2\n      0x44\n      dup4\n      swap3\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":4401:4433  _tokenB.mint(address(lPair), 10) */\n      swap5\n      dup6\n      swap4\n      dup5\n      swap3\n      dup4\n      mstore\n      dup8\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":4401:4433  _tokenB.mint(address(lPair), 10) */\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":4388:4390  10 */\n      0x0a\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      dup5\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":4401:4433  _tokenB.mint(address(lPair), 10) */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_215\n      jumpi\n      dup4\n      swap2\n      tag_209\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_210:\n        /* \"test/unit/ConstantProductPair.t.sol\":4484:4508  stdError.arithmeticError */\n      pop\n      pop\n      tag_211\n      tag_47\n      jump\t// in\n    tag_211:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"test/unit/ConstantProductPair.t.sol\":4468:4509  vm.expectRevert(stdError.arithmeticError) */\n      dup1\n      extcodesize\n      iszero\n      tag_212\n      jumpi\n        /* \"lib/forge-std/src/StdError.sol\":317:364  abi.encodeWithSignature(\"Panic(uint256)\", 0x11) */\n      tag_214\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup5\n      swap3\n      swap2\n      dup4\n      swap3\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":4468:4509  vm.expectRevert(stdError.arithmeticError) */\n      swap5\n      dup6\n      dup1\n      swap5\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xf28dceb300000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":4468:4509  vm.expectRevert(stdError.arithmeticError) */\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":4468:4509  vm.expectRevert(stdError.arithmeticError) */\n      dup5\n      add\n        /* \"lib/forge-std/src/StdError.sol\":317:364  abi.encodeWithSignature(\"Panic(uint256)\", 0x11) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n        /* \"lib/forge-std/src/StdError.sol\":317:364  abi.encodeWithSignature(\"Panic(uint256)\", 0x11) */\n      dup4\n      add\n      swap1\n      tag_10\n      jump\t// in\n    tag_214:\n        /* \"test/unit/ConstantProductPair.t.sol\":4468:4509  vm.expectRevert(stdError.arithmeticError) */\n      sub\n      swap3\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_215\n      jumpi\n      dup4\n      swap2\n      tag_217\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_218:\n      pop\n      pop\n      0x20\n      swap1\n      0x24\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":4519:4544  lPair.mint(address(this)) */\n      dup1\n      swap5\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x6a62784200000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":4519:4544  lPair.mint(address(this)) */\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":4538:4542  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":4519:4544  lPair.mint(address(this)) */\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":4519:4544  lPair.mint(address(this)) */\n      gas\n      call\n      dup1\n      iszero\n      tag_219\n      jumpi\n      tag_221\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      pop\n      dup1\n      return\n        /* \"test/unit/ConstantProductPair.t.sol\":4519:4544  lPair.mint(address(this)) */\n    tag_221:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":4519:4544  lPair.mint(address(this)) */\n      swap1\n      dup2\n      returndatasize\n      dup2\n      gt\n      tag_223\n      jumpi\n    tag_224:\n      tag_225\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_225:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n      dup1\n      return\n    tag_226:\n      0x00\n      dup1\n      revert\n        /* \"test/unit/ConstantProductPair.t.sol\":4519:4544  lPair.mint(address(this)) */\n    tag_223:\n      pop\n      returndatasize\n      jump(tag_224)\n    tag_219:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      returndatasize\n      dup5\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"test/unit/ConstantProductPair.t.sol\":4468:4509  vm.expectRevert(stdError.arithmeticError) */\n    tag_217:\n      tag_228\n      swap1\n      tag_1\n      jump\t// in\n    tag_228:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_229\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":4468:4509  vm.expectRevert(stdError.arithmeticError) */\n      dup2\n      codesize\n      jump(tag_218)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_229:\n      pop\n      revert\n        /* \"test/unit/ConstantProductPair.t.sol\":4468:4509  vm.expectRevert(stdError.arithmeticError) */\n    tag_215:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      returndatasize\n      dup6\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"test/unit/ConstantProductPair.t.sol\":4468:4509  vm.expectRevert(stdError.arithmeticError) */\n    tag_212:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      pop\n      pop\n      pop\n      revert\n        /* \"test/unit/ConstantProductPair.t.sol\":4401:4433  _tokenB.mint(address(lPair), 10) */\n    tag_209:\n      tag_231\n      swap1\n      tag_1\n      jump\t// in\n    tag_231:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_229\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":4401:4433  _tokenB.mint(address(lPair), 10) */\n      dup2\n      codesize\n      jump(tag_210)\n        /* \"test/unit/ConstantProductPair.t.sol\":4359:4391  _tokenA.mint(address(lPair), 10) */\n    tag_203:\n      tag_234\n      swap1\n      tag_1\n      jump\t// in\n    tag_234:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_212\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":4359:4391  _tokenA.mint(address(lPair), 10) */\n      dup4\n      codesize\n      jump(tag_204)\n    tag_201:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      returndatasize\n      dup8\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n    tag_196:\n      dup1\n      revert\n    tag_190:\n      pop\n      jumpi(tag_196, callvalue)\n      dup1\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_196\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":21746:21762  block.number + 1 */\n      tag_241\n        /* \"test/unit/ConstantProductPair.t.sol\":21746:21758  block.number */\n      number\n        /* \"test/unit/ConstantProductPair.t.sol\":21746:21762  block.number + 1 */\n      tag_23\n      jump\t// in\n    tag_241:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"test/unit/ConstantProductPair.t.sol\":21738:21763  vm.roll(block.number + 1) */\n      dup1\n      extcodesize\n      iszero\n      tag_291\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      swap2\n      0x1f7b4f3000000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":21738:21763  vm.roll(block.number + 1) */\n      swap1\n      dup2\n      dup5\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":21738:21763  vm.roll(block.number + 1) */\n      dup5\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":21738:21763  vm.roll(block.number + 1) */\n      swap3\n      dup5\n      dup2\n      dup6\n      dup2\n      dup4\n      dup8\n      gas\n      call\n      dup1\n      iszero\n      tag_312\n      jumpi\n      tag_246\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_247:\n        /* \"test/unit/ConstantProductPair.t.sol\":21781:21796  block.timestamp */\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":21781:21800  block.timestamp + 5 */\n      tag_248\n        /* \"test/unit/ConstantProductPair.t.sol\":21781:21796  block.timestamp */\n      timestamp\n        /* \"test/unit/ConstantProductPair.t.sol\":21781:21800  block.timestamp + 5 */\n      tag_24\n      jump\t// in\n    tag_248:\n        /* \"test/unit/ConstantProductPair.t.sol\":21773:21801  vm.warp(block.timestamp + 5) */\n      swap2\n      dup1\n      extcodesize\n      iszero\n      tag_249\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      0xe5d6bf0200000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":21773:21801  vm.warp(block.timestamp + 5) */\n      swap4\n      dup5\n      dup3\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":21773:21801  vm.warp(block.timestamp + 5) */\n      dup3\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":21773:21801  vm.warp(block.timestamp + 5) */\n      dup6\n      dup2\n      dup7\n      dup2\n      dup4\n      dup7\n      gas\n      call\n      dup1\n      iszero\n      tag_312\n      jumpi\n      tag_253\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_254:\n      pop\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":21811:21818  _tokenA */\n      0x19\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":21832:21852  _constantProductPair */\n      swap3\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      dup8\n      dup5\n      dup4\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":21811:21871  _tokenA.mint(address(_constantProductPair), lLiquidityToAdd) */\n      dup7\n      extcodesize\n      iszero\n      tag_255\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      dup10\n      swap8\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      0x44\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      dup1\n      swap6\n      dup2\n      swap4\n      0x40c10f1900000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":21811:21871  _tokenA.mint(address(_constantProductPair), lLiquidityToAdd) */\n      swap7\n      dup8\n      dup5\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":21811:21871  _tokenA.mint(address(_constantProductPair), lLiquidityToAdd) */\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xfffffffffa9438a1d29cefffff\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      dup1\n      swap14\n      dup5\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":21811:21871  _tokenA.mint(address(_constantProductPair), lLiquidityToAdd) */\n      gas\n      call\n      swap2\n      dup3\n      iszero\n      tag_312\n      jumpi\n      dup11\n      swap3\n      tag_259\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_260:\n      pop\n      dup6\n        /* \"test/unit/ConstantProductPair.t.sol\":21881:21888  _tokenB */\n      0x1a\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      dup7\n      dup6\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":21881:21941  _tokenB.mint(address(_constantProductPair), lLiquidityToAdd) */\n      swap2\n      dup2\n      extcodesize\n      iszero\n      tag_285\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup4\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      0x44\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap3\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":21881:21941  _tokenB.mint(address(_constantProductPair), lLiquidityToAdd) */\n      swap11\n      dup12\n      swap6\n      dup7\n      swap5\n      dup6\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":21881:21941  _tokenB.mint(address(_constantProductPair), lLiquidityToAdd) */\n      dup6\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n      dup14\n      dup5\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":21881:21941  _tokenB.mint(address(_constantProductPair), lLiquidityToAdd) */\n      gas\n      call\n      swap5\n      dup6\n      iszero\n      tag_312\n      jumpi\n      dup9\n      swap6\n      tag_265\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_266:\n      pop\n      dup4\n      dup3\n      sload\n      and\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":21951:21991  _constantProductPair.mint(address(this)) */\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x6a62784200000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":21951:21991  _constantProductPair.mint(address(this)) */\n      dup3\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":21985:21989  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":21951:21991  _constantProductPair.mint(address(this)) */\n      dup4\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      dup10\n      dup2\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":21951:21991  _constantProductPair.mint(address(this)) */\n      swap10\n      dup11\n      swap5\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_312\n      jumpi\n      dup7\n      swap2\n      tag_269\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_270:\n      pop\n      pop\n      dup4\n      dup3\n      sload\n      and\n      swap6\n      mload(0x40)\n      swap8\n      dup9\n      0x0902f1ac00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":22063:22097  _constantProductPair.getReserves() */\n      swap9\n      dup10\n      dup3\n      mstore\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":22063:22097  _constantProductPair.getReserves() */\n      0x80\n      swap13\n      dup14\n      swap4\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_312\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":22155:22193  assertEq(lReserve1, type(uint104).max) */\n      tag_273\n        /* \"test/unit/ConstantProductPair.t.sol\":22063:22097  _constantProductPair.getReserves() */\n      swap2\n      dup13\n      swap2\n      dup14\n      swap2\n      tag_274\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_275:\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":22107:22145  assertEq(lReserve0, type(uint104).max) */\n      tag_276\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffff\n      dup1\n      swap4\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":22107:22145  assertEq(lReserve0, type(uint104).max) */\n      tag_38\n      jump\t// in\n    tag_276:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":22155:22193  assertEq(lReserve1, type(uint104).max) */\n      tag_38\n      jump\t// in\n    tag_273:\n        /* \"test/unit/ConstantProductPair.t.sol\":22227:22243  block.number + 1 */\n      tag_277\n        /* \"test/unit/ConstantProductPair.t.sol\":21746:21758  block.number */\n      number\n        /* \"test/unit/ConstantProductPair.t.sol\":22227:22243  block.number + 1 */\n      tag_23\n      jump\t// in\n    tag_277:\n        /* \"test/unit/ConstantProductPair.t.sol\":22219:22244  vm.roll(block.number + 1) */\n      dup6\n      extcodesize\n      iszero\n      tag_278\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":22219:22244  vm.roll(block.number + 1) */\n      swap4\n      dup5\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":22219:22244  vm.roll(block.number + 1) */\n      dup5\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":22219:22244  vm.roll(block.number + 1) */\n      dup10\n      dup4\n      dup3\n      dup2\n      dup4\n      dup10\n      gas\n      call\n      swap3\n      dup4\n      iszero\n      tag_312\n      jumpi\n      dup11\n      swap4\n      tag_282\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_283:\n        /* \"test/unit/ConstantProductPair.t.sol\":21781:21796  block.timestamp */\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":22262:22281  block.timestamp + 5 */\n      tag_284\n        /* \"test/unit/ConstantProductPair.t.sol\":21781:21796  block.timestamp */\n      timestamp\n        /* \"test/unit/ConstantProductPair.t.sol\":22262:22281  block.timestamp + 5 */\n      tag_24\n      jump\t// in\n    tag_284:\n        /* \"test/unit/ConstantProductPair.t.sol\":22254:22282  vm.warp(block.timestamp + 5) */\n      swap2\n      dup6\n      extcodesize\n      iszero\n      tag_285\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup4\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":22254:22282  vm.warp(block.timestamp + 5) */\n      swap7\n      dup8\n      swap5\n      dup6\n      swap4\n      dup5\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":22254:22282  vm.warp(block.timestamp + 5) */\n      dup5\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":22254:22282  vm.warp(block.timestamp + 5) */\n      gas\n      call\n      swap2\n      dup3\n      iszero\n      tag_312\n      jumpi\n      dup8\n      swap3\n      tag_289\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_290:\n      pop\n      dup3\n      dup2\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":22292:22319  _constantProductPair.sync() */\n      dup1\n      extcodesize\n      iszero\n      tag_291\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      swap1\n      0x04\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":22292:22319  _constantProductPair.sync() */\n      dup1\n      swap6\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xfff6cae900000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":22292:22319  _constantProductPair.sync() */\n      dup4\n      mstore\n      gas\n      call\n      swap2\n      dup3\n      iszero\n      tag_312\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":22292:22319  _constantProductPair.sync() */\n      swap3\n      tag_295\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_296:\n      pop\n      dup4\n      dup4\n      dup3\n      sload\n      and\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":22371:22405  _constantProductPair.totalSupply() */\n      swap4\n      dup5\n      dup1\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x18160ddd00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":22371:22405  _constantProductPair.totalSupply() */\n      dup3\n      mstore\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_312\n      jumpi\n      dup4\n      swap3\n      dup9\n      swap2\n      tag_299\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_300:\n        /* \"test/unit/ConstantProductPair.t.sol\":22415:22456  assertEq(lTotalSupply, type(uint104).max) */\n      pop\n      tag_301\n      swap1\n      tag_38\n      jump\t// in\n    tag_301:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      swap2\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":22489:22523  _constantProductPair.getReserves() */\n      swap4\n      dup5\n      mstore\n      dup5\n      dup5\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":22489:22523  _constantProductPair.getReserves() */\n      dup2\n      dup7\n      gas\n      staticcall\n      swap4\n      dup5\n      iszero\n      tag_312\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup7\n        /* \"test/unit/ConstantProductPair.t.sol\":22489:22523  _constantProductPair.getReserves() */\n      swap5\n      tag_304\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_305:\n      pop\n      sload\n      mload(0x40)\n      0xc9d163d100000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":22560:22610  _oracleCaller.observation(_constantProductPair, 0) */\n      dup1\n      dup3\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":22560:22610  _oracleCaller.observation(_constantProductPair, 0) */\n      dup4\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n      0x00\n      0x24\n      dup4\n      add\n      mstore\n      swap5\n      swap1\n      swap3\n      swap1\n      swap2\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":22560:22610  _oracleCaller.observation(_constantProductPair, 0) */\n      dup6\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup4\n      0x44\n      dup2\n      dup5\n        /* \"test/unit/ConstantProductPair.t.sol\":22560:22610  _oracleCaller.observation(_constantProductPair, 0) */\n      gas\n      staticcall\n      swap4\n      dup5\n      iszero\n      tag_312\n      jumpi\n      dup7\n      swap4\n      dup9\n      swap6\n      tag_309\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_310:\n      pop\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":22647:22702  _oracleCaller.observation(_constantProductPair, lIndex) */\n      swap6\n      dup7\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":22647:22702  _oracleCaller.observation(_constantProductPair, lIndex) */\n      dup7\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n      0xffff\n      swap1\n      swap2\n      and\n      0x24\n      dup6\n      add\n      mstore\n      swap2\n      swap3\n      swap2\n      dup3\n      swap1\n      dup2\n      dup1\n      0x44\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":22647:22702  _oracleCaller.observation(_constantProductPair, lIndex) */\n    tag_311:\n      sub\n      swap2\n      gas\n      staticcall\n      swap3\n      dup4\n      iszero\n      tag_312\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":22804:22849  lObs1.logAccLiquidity - lObs0.logAccLiquidity */\n      tag_314\n        /* \"src/libraries/LogCompression.sol\":2760:2807  LogExpMath.exp(value * _LOG_COMPRESSION_FACTOR) */\n      tag_315\n        /* \"test/unit/ConstantProductPair.t.sol\":22647:22702  _oracleCaller.observation(_constantProductPair, lIndex) */\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40\n        /* \"test/unit/ConstantProductPair.t.sol\":22647:22702  _oracleCaller.observation(_constantProductPair, lIndex) */\n      dup1\n        /* \"test/unit/ConstantProductPair.t.sol\":22712:22888  assertApproxEqRel(... */\n      tag_316\n        /* \"test/unit/ConstantProductPair.t.sol\":22647:22702  _oracleCaller.observation(_constantProductPair, lIndex) */\n      swap8\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      0x5af3107a4000\n        /* \"test/unit/ConstantProductPair.t.sol\":22647:22702  _oracleCaller.observation(_constantProductPair, lIndex) */\n      swap7\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x05\n        /* \"test/unit/ConstantProductPair.t.sol\":22647:22702  _oracleCaller.observation(_constantProductPair, lIndex) */\n      swap7\n      dup12\n      swap3\n      tag_317\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_318:\n        /* \"test/unit/ConstantProductPair.t.sol\":22804:22825  lObs1.logAccLiquidity */\n      pop\n      pop\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":22828:22849  lObs0.logAccLiquidity */\n      swap2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n      0x06\n      signextend\n      swap1\n      0x06\n      signextend\n        /* \"test/unit/ConstantProductPair.t.sol\":22804:22849  lObs1.logAccLiquidity - lObs0.logAccLiquidity */\n      tag_102\n      jump\t// in\n    tag_314:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x06\n      signextend\n      sdiv\n      0x06\n      signextend\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      mul\n        /* \"src/libraries/LogCompression.sol\":2760:2807  LogExpMath.exp(value * _LOG_COMPRESSION_FACTOR) */\n      tag_96\n      jump\t// in\n    tag_315:\n        /* \"test/unit/ConstantProductPair.t.sol\":22712:22888  assertApproxEqRel(... */\n      tag_92\n      jump\t// in\n    tag_316:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup1\n      return\n        /* \"test/unit/ConstantProductPair.t.sol\":22647:22702  _oracleCaller.observation(_constantProductPair, lIndex) */\n    tag_317:\n      tag_319\n      swap3\n      pop\n      dup1\n      returndatasize\n      lt\n      tag_320\n      jumpi\n    tag_321:\n      tag_322\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_322:\n      dup2\n      add\n      swap1\n      tag_73\n      jump\t// in\n    tag_319:\n      codesize\n      dup1\n      jump(tag_318)\n    tag_320:\n      pop\n      returndatasize\n      jump(tag_321)\n    tag_312:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"test/unit/ConstantProductPair.t.sol\":22560:22610  _oracleCaller.observation(_constantProductPair, 0) */\n    tag_309:\n        /* \"test/unit/ConstantProductPair.t.sol\":22647:22702  _oracleCaller.observation(_constantProductPair, lIndex) */\n      tag_311\n        /* \"test/unit/ConstantProductPair.t.sol\":22560:22610  _oracleCaller.observation(_constantProductPair, 0) */\n      swap6\n      pop\n      tag_323\n      swap1\n      dup6\n      returndatasize\n      dup8\n      gt\n      tag_320\n      jumpi\n      tag_322\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_323:\n      swap5\n      jump(tag_310)\n        /* \"test/unit/ConstantProductPair.t.sol\":22489:22523  _constantProductPair.getReserves() */\n    tag_304:\n      tag_327\n      swap2\n      swap5\n      pop\n      dup6\n      returndatasize\n      dup8\n      gt\n      tag_328\n      jumpi\n    tag_329:\n      tag_330\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_330:\n      dup2\n      add\n      swap1\n      tag_28\n      jump\t// in\n    tag_327:\n      swap3\n      pop\n      pop\n      pop\n      swap3\n      codesize\n      jump(tag_305)\n    tag_328:\n      pop\n      returndatasize\n      jump(tag_329)\n        /* \"test/unit/ConstantProductPair.t.sol\":22371:22405  _constantProductPair.totalSupply() */\n    tag_299:\n      dup1\n      swap4\n      pop\n      dup6\n      dup1\n      swap3\n      pop\n      returndatasize\n      dup4\n      gt\n      tag_331\n      jumpi\n    tag_332:\n      tag_333\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_333:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":22415:22456  assertEq(lTotalSupply, type(uint104).max) */\n      tag_301\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup4\n      swap3\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":22371:22405  _constantProductPair.totalSupply() */\n      swap1\n      jump(tag_300)\n    tag_331:\n      pop\n      returndatasize\n      jump(tag_332)\n        /* \"test/unit/ConstantProductPair.t.sol\":22292:22319  _constantProductPair.sync() */\n    tag_295:\n      tag_336\n      swap1\n      tag_1\n      jump\t// in\n    tag_336:\n      codesize\n      jump(tag_296)\n    tag_291:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      dup1\n      revert\n        /* \"test/unit/ConstantProductPair.t.sol\":22254:22282  vm.warp(block.timestamp + 5) */\n    tag_289:\n      tag_337\n      swap1\n      tag_1\n      jump\t// in\n    tag_337:\n      codesize\n      jump(tag_290)\n    tag_285:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup4\n      dup1\n      revert\n        /* \"test/unit/ConstantProductPair.t.sol\":22219:22244  vm.roll(block.number + 1) */\n    tag_282:\n      tag_338\n      swap1\n      tag_1\n      jump\t// in\n    tag_338:\n      codesize\n      jump(tag_283)\n    tag_278:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup11\n      dup1\n      revert\n        /* \"test/unit/ConstantProductPair.t.sol\":22063:22097  _constantProductPair.getReserves() */\n    tag_274:\n      swap1\n      pop\n      tag_339\n      swap2\n      pop\n      dup12\n      returndatasize\n      dup14\n      gt\n      tag_328\n      jumpi\n      tag_330\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_339:\n      pop\n      pop\n      codesize\n      jump(tag_275)\n        /* \"test/unit/ConstantProductPair.t.sol\":21951:21991  _constantProductPair.mint(address(this)) */\n    tag_269:\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_343\n      jumpi\n    tag_344:\n      tag_345\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_345:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":21951:21991  _constantProductPair.mint(address(this)) */\n      dup5\n      codesize\n      jump(tag_270)\n    tag_343:\n      pop\n      returndatasize\n      jump(tag_344)\n        /* \"test/unit/ConstantProductPair.t.sol\":21881:21941  _tokenB.mint(address(_constantProductPair), lLiquidityToAdd) */\n    tag_265:\n      tag_348\n      swap1\n      tag_1\n      jump\t// in\n    tag_348:\n      codesize\n      jump(tag_266)\n        /* \"test/unit/ConstantProductPair.t.sol\":21811:21871  _tokenA.mint(address(_constantProductPair), lLiquidityToAdd) */\n    tag_259:\n      tag_349\n      swap1\n      tag_1\n      jump\t// in\n    tag_349:\n      codesize\n      jump(tag_260)\n    tag_255:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      pop\n      dup1\n      revert\n        /* \"test/unit/ConstantProductPair.t.sol\":21773:21801  vm.warp(block.timestamp + 5) */\n    tag_253:\n      tag_350\n      swap1\n      tag_1\n      jump\t// in\n    tag_350:\n      codesize\n      jump(tag_254)\n    tag_249:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup5\n      dup1\n      revert\n        /* \"test/unit/ConstantProductPair.t.sol\":21738:21763  vm.roll(block.number + 1) */\n    tag_246:\n      tag_351\n      swap1\n      tag_1\n      jump\t// in\n    tag_351:\n      codesize\n      jump(tag_247)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_188:\n      pop\n      jumpi(tag_196, callvalue)\n      dup1\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_196\n      jumpi\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"test/unit/ConstantProductPair.t.sol\":10730:10767  vm.expectEmit(true, true, true, true) */\n      dup1\n      extcodesize\n      iszero\n      tag_255\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      mload(0x40)\n      0x491cc7c200000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":10730:10767  vm.expectEmit(true, true, true, true) */\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":10744:10748  true */\n      0x01\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":10730:10767  vm.expectEmit(true, true, true, true) */\n      dup3\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n      dup2\n      dup2\n      0x84\n      dup2\n      dup4\n      0x24\n      swap8\n        /* \"test/unit/ConstantProductPair.t.sol\":10744:10748  true */\n      0x01\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup10\n      dup5\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":10744:10748  true */\n      0x01\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x44\n      dup5\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":10744:10748  true */\n      0x01\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x64\n      dup5\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":10730:10767  vm.expectEmit(true, true, true, true) */\n      gas\n      call\n      dup1\n      iszero\n      tag_219\n      jumpi\n      tag_360\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_361:\n      pop\n      pop\n      mload(0x40)\n      dup3\n      dup2\n      mstore\n      0x20\n      swap1\n      dup4\n      dup3\n      dup3\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":10782:10807  Burn(address(this), 0, 0) */\n      0x49995e5dd6158cf69ad3e9777c46755a1a826a446c6416992167462dad033b2a\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40\n        /* \"test/unit/ConstantProductPair.t.sol\":10795:10799  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":10782:10807  Burn(address(this), 0, 0) */\n      swap3\n      log2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap2\n      dup4\n      0x40\n      dup5\n        /* \"test/unit/ConstantProductPair.t.sol\":10817:10837  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      dup4\n      dup3\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":10817:10857  _constantProductPair.burn(address(this)) */\n      dup1\n      swap5\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x89afcb4400000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":10817:10857  _constantProductPair.burn(address(this)) */\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":10795:10799  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":10817:10857  _constantProductPair.burn(address(this)) */\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":10817:10857  _constantProductPair.burn(address(this)) */\n      gas\n      call\n      dup1\n      iszero\n      tag_201\n      jumpi\n      tag_364\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_365:\n      pop\n      dup3\n        /* \"test/unit/ConstantProductPair.t.sol\":10895:10902  _tokenA */\n      0x19\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      mload(0x40)\n      dup4\n      dup2\n      dup5\n      dup2\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":10895:10927  _tokenA.balanceOf(address(this)) */\n      swap6\n      dup7\n      dup3\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":10795:10799  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":10895:10927  _tokenA.balanceOf(address(this)) */\n      dup4\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":10895:10927  _tokenA.balanceOf(address(this)) */\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_376\n      jumpi\n      dup7\n      swap1\n      tag_368\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_369:\n        /* \"test/unit/ConstantProductPair.t.sol\":10886:10931  assertEq(_tokenA.balanceOf(address(this)), 0) */\n      tag_370\n      swap2\n      pop\n      tag_36\n      jump\t// in\n    tag_370:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      dup4\n      dup6\n        /* \"test/unit/ConstantProductPair.t.sol\":10950:10957  _tokenB */\n      0x1a\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":10950:10982  _tokenB.balanceOf(address(this)) */\n      swap3\n      dup4\n      dup1\n      swap3\n      dup7\n      dup3\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":10795:10799  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":10950:10982  _tokenB.balanceOf(address(this)) */\n      dup4\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":10950:10982  _tokenB.balanceOf(address(this)) */\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_376\n      jumpi\n      dup7\n      swap1\n      tag_373\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_374:\n        /* \"test/unit/ConstantProductPair.t.sol\":10941:10986  assertEq(_tokenB.balanceOf(address(this)), 0) */\n      tag_375\n      swap2\n      pop\n      tag_36\n      jump\t// in\n    tag_375:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup4\n        /* \"test/unit/ConstantProductPair.t.sol\":10895:10902  _tokenA */\n      0x19\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      swap2\n      dup4\n      dup6\n        /* \"test/unit/ConstantProductPair.t.sol\":10817:10837  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      dup3\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":11005:11053  _tokenA.balanceOf(address(_constantProductPair)) */\n      dup1\n      swap7\n      dup2\n      swap4\n      dup8\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":11005:11053  _tokenA.balanceOf(address(_constantProductPair)) */\n      dup4\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":11005:11053  _tokenA.balanceOf(address(_constantProductPair)) */\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_376\n      jumpi\n      dup5\n      swap4\n      dup8\n      swap2\n      tag_378\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_379:\n        /* \"test/unit/ConstantProductPair.t.sol\":11055:11074  INITIAL_MINT_AMOUNT */\n      pop\n      tag_380\n      swap1\n      tag_34\n      jump\t// in\n    tag_380:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup5\n        /* \"test/unit/ConstantProductPair.t.sol\":10950:10957  _tokenB */\n      0x1a\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      swap5\n        /* \"test/unit/ConstantProductPair.t.sol\":10817:10837  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      swap2\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":11094:11142  _tokenB.balanceOf(address(_constantProductPair)) */\n      swap6\n      dup7\n      swap4\n      dup5\n      swap3\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":11094:11142  _tokenB.balanceOf(address(_constantProductPair)) */\n      dup4\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":11094:11142  _tokenB.balanceOf(address(_constantProductPair)) */\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_215\n      jumpi\n      dup4\n      swap2\n      tag_383\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_384:\n        /* \"test/unit/ConstantProductPair.t.sol\":11144:11163  INITIAL_MINT_AMOUNT */\n      dup4\n      tag_316\n      dup4\n      tag_34\n      jump\t// in\n        /* \"test/unit/ConstantProductPair.t.sol\":11094:11142  _tokenB.balanceOf(address(_constantProductPair)) */\n    tag_383:\n      swap1\n      pop\n      dup2\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_386\n      jumpi\n    tag_387:\n      tag_388\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_388:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":11144:11163  INITIAL_MINT_AMOUNT */\n      tag_316\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":11094:11142  _tokenB.balanceOf(address(_constantProductPair)) */\n      codesize\n      jump(tag_384)\n    tag_386:\n      pop\n      returndatasize\n      jump(tag_387)\n        /* \"test/unit/ConstantProductPair.t.sol\":11005:11053  _tokenA.balanceOf(address(_constantProductPair)) */\n    tag_378:\n      dup5\n      dup2\n      swap6\n      swap3\n      pop\n      returndatasize\n      dup4\n      gt\n      tag_391\n      jumpi\n    tag_392:\n      tag_393\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_393:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":11055:11074  INITIAL_MINT_AMOUNT */\n      tag_380\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup5\n      swap4\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":11005:11053  _tokenA.balanceOf(address(_constantProductPair)) */\n      swap1\n      jump(tag_379)\n    tag_391:\n      pop\n      returndatasize\n      jump(tag_392)\n    tag_376:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      returndatasize\n      dup9\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"test/unit/ConstantProductPair.t.sol\":10950:10982  _tokenB.balanceOf(address(this)) */\n    tag_373:\n      pop\n      dup4\n      dup2\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_396\n      jumpi\n    tag_397:\n      tag_398\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_398:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":10941:10986  assertEq(_tokenB.balanceOf(address(this)), 0) */\n      tag_375\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":10950:10982  _tokenB.balanceOf(address(this)) */\n      jump(tag_374)\n    tag_396:\n      pop\n      returndatasize\n      jump(tag_397)\n        /* \"test/unit/ConstantProductPair.t.sol\":10895:10927  _tokenA.balanceOf(address(this)) */\n    tag_368:\n      pop\n      dup4\n      dup2\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_401\n      jumpi\n    tag_402:\n      tag_403\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_403:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":10886:10931  assertEq(_tokenA.balanceOf(address(this)), 0) */\n      tag_370\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":10895:10927  _tokenA.balanceOf(address(this)) */\n      jump(tag_369)\n    tag_401:\n      pop\n      returndatasize\n      jump(tag_402)\n        /* \"test/unit/ConstantProductPair.t.sol\":10817:10857  _constantProductPair.burn(address(this)) */\n    tag_364:\n      tag_406\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40\n        /* \"test/unit/ConstantProductPair.t.sol\":10817:10857  _constantProductPair.burn(address(this)) */\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40\n        /* \"test/unit/ConstantProductPair.t.sol\":10817:10857  _constantProductPair.burn(address(this)) */\n      gt\n      tag_407\n      jumpi\n    tag_408:\n      tag_409\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_409:\n      dup2\n      add\n      swap1\n      tag_71\n      jump\t// in\n    tag_406:\n      pop\n      jump(tag_365)\n    tag_407:\n      pop\n      returndatasize\n      jump(tag_408)\n        /* \"test/unit/ConstantProductPair.t.sol\":10730:10767  vm.expectEmit(true, true, true, true) */\n    tag_360:\n      tag_410\n      swap1\n      tag_1\n      jump\t// in\n    tag_410:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_255\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":10730:10767  vm.expectEmit(true, true, true, true) */\n      dup2\n      codesize\n      jump(tag_361)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_186:\n      pop\n      jumpi(tag_196, callvalue)\n      dup1\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_196\n      jumpi\n      0xff\n      0x20\n      swap2\n      sload\n      and\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_184:\n      pop\n      jumpi(tag_196, callvalue)\n      dup1\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_196\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":20496:20512  block.number + 1 */\n      tag_421\n        /* \"test/unit/ConstantProductPair.t.sol\":20496:20508  block.number */\n      number\n        /* \"test/unit/ConstantProductPair.t.sol\":20496:20512  block.number + 1 */\n      tag_23\n      jump\t// in\n    tag_421:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"test/unit/ConstantProductPair.t.sol\":20488:20513  vm.roll(block.number + 1) */\n      extcodesize\n      iszero\n      tag_255\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":20488:20513  vm.roll(block.number + 1) */\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x1f7b4f3000000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":20488:20513  vm.roll(block.number + 1) */\n      dup3\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":20488:20513  vm.roll(block.number + 1) */\n      dup3\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":20488:20513  vm.roll(block.number + 1) */\n      dup2\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":20488:20513  vm.roll(block.number + 1) */\n      dup2\n      dup4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"test/unit/ConstantProductPair.t.sol\":20488:20513  vm.roll(block.number + 1) */\n      gas\n      call\n      dup1\n      iszero\n      tag_312\n      jumpi\n      tag_426\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_427:\n        /* \"test/unit/ConstantProductPair.t.sol\":20531:20546  block.timestamp */\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":20531:20550  block.timestamp + 5 */\n      tag_428\n        /* \"test/unit/ConstantProductPair.t.sol\":20531:20546  block.timestamp */\n      timestamp\n        /* \"test/unit/ConstantProductPair.t.sol\":20531:20550  block.timestamp + 5 */\n      tag_24\n      jump\t// in\n    tag_428:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"test/unit/ConstantProductPair.t.sol\":20523:20551  vm.warp(block.timestamp + 5) */\n      extcodesize\n      iszero\n      tag_255\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":20523:20551  vm.warp(block.timestamp + 5) */\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xe5d6bf0200000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":20523:20551  vm.warp(block.timestamp + 5) */\n      dup3\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":20523:20551  vm.warp(block.timestamp + 5) */\n      dup3\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":20523:20551  vm.warp(block.timestamp + 5) */\n      dup2\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":20523:20551  vm.warp(block.timestamp + 5) */\n      dup2\n      dup4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"test/unit/ConstantProductPair.t.sol\":20523:20551  vm.warp(block.timestamp + 5) */\n      gas\n      call\n      dup1\n      iszero\n      tag_312\n      jumpi\n      tag_433\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_434:\n      pop\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":20570:20576  _alice */\n      0x16\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"test/unit/ConstantProductPair.t.sol\":20561:20577  vm.prank(_alice) */\n      extcodesize\n      iszero\n      tag_255\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":20561:20577  vm.prank(_alice) */\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xca669fa700000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":20561:20577  vm.prank(_alice) */\n      dup3\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":20561:20577  vm.prank(_alice) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":20561:20577  vm.prank(_alice) */\n      dup2\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":20561:20577  vm.prank(_alice) */\n      dup2\n      dup4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"test/unit/ConstantProductPair.t.sol\":20561:20577  vm.prank(_alice) */\n      gas\n      call\n      dup1\n      iszero\n      tag_312\n      jumpi\n      tag_439\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_440:\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":20587:20607  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      mload(0x40)\n      0xa9059cbb00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":20587:20662  _constantProductPair.transfer(address(_constantProductPair), lAmountToBurn) */\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":20587:20662  _constantProductPair.transfer(address(_constantProductPair), lAmountToBurn) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      dup2\n      swap1\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":15977:15981  1e18 */\n      0x0de0b6b3a7640000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      dup4\n      add\n      mstore\n      0x20\n      swap1\n      dup3\n      swap1\n      0x44\n      swap1\n      dup3\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":20587:20662  _constantProductPair.transfer(address(_constantProductPair), lAmountToBurn) */\n      dup7\n      swap1\n      gas\n      call\n      dup1\n      iszero\n      tag_312\n      jumpi\n      tag_444\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_445:\n      pop\n      dup1\n      0x40\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":20587:20607  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      0x24\n      dup3\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":20672:20712  _constantProductPair.burn(address(this)) */\n      dup1\n      swap5\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x89afcb4400000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":20672:20712  _constantProductPair.burn(address(this)) */\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":20706:20710  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":20672:20712  _constantProductPair.burn(address(this)) */\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":20672:20712  _constantProductPair.burn(address(this)) */\n      gas\n      call\n      dup1\n      iszero\n      tag_312\n      jumpi\n      tag_448\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_449:\n      pop\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":20587:20607  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      mload(0x40)\n      0x0902f1ac00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":20763:20797  _constantProductPair.getReserves() */\n      dup2\n      mstore\n      0x80\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":20763:20797  _constantProductPair.getReserves() */\n      dup2\n      dup6\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_312\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":20834:20889  _oracleCaller.observation(_constantProductPair, lIndex) */\n      tag_452\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":20763:20797  _constantProductPair.getReserves() */\n      0x80\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap3\n      dup6\n        /* \"test/unit/ConstantProductPair.t.sol\":20763:20797  _constantProductPair.getReserves() */\n      swap3\n      tag_453\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_454:\n      pop\n      and(sload(0x20), 0xffffffffffffffffffffffffffffffffffffffff)\n      swap1\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":20834:20889  _oracleCaller.observation(_constantProductPair, lIndex) */\n      dup1\n      swap6\n      dup2\n      swap5\n      dup3\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xc9d163d100000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":20834:20889  _oracleCaller.observation(_constantProductPair, lIndex) */\n      dup5\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":20834:20889  _oracleCaller.observation(_constantProductPair, lIndex) */\n      dup5\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      swap3\n      swap2\n      0xffff\n      0x20\n      swap2\n      0xffffffffffffffffffffffffffffffffffffffff\n      0x40\n      dup6\n      add\n      swap7\n      and\n      dup5\n      mstore\n      and\n      swap2\n      add\n      mstore\n      jump\n        /* \"test/unit/ConstantProductPair.t.sol\":20834:20889  _oracleCaller.observation(_constantProductPair, lIndex) */\n    tag_452:\n      sub\n      swap2\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_312\n      jumpi\n      dup3\n      swap2\n      tag_457\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_458:\n        /* \"test/unit/ConstantProductPair.t.sol\":20950:20971  lObs0.logAccLiquidity */\n      pop\n        /* \"src/libraries/LogCompression.sol\":2760:2807  LogExpMath.exp(value * _LOG_COMPRESSION_FACTOR) */\n      tag_459\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      0x5af3107a4000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x05\n      0x40\n        /* \"test/unit/ConstantProductPair.t.sol\":20950:20971  lObs0.logAccLiquidity */\n      dup5\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n      0x06\n      signextend\n      sdiv\n      0x06\n      signextend\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      mul\n        /* \"src/libraries/LogCompression.sol\":2760:2807  LogExpMath.exp(value * _LOG_COMPRESSION_FACTOR) */\n      tag_96\n      jump\t// in\n    tag_459:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x00\n        /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */\n      0x056bc75e2d63100000\n        /* \"lib/forge-std/src/StdMath.sol\":607:612  a > b */\n      dup3\n      gt\n        /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */\n      iszero\n      tag_460\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      pop\n      0xfffffffffffffffffffffffffffffffffffffffffffffffa9438a1d29cf00000\n      dup2\n      add\n      dup2\n      dup2\n      gt\n      tag_505\n      jumpi\n        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */\n    tag_464:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup1\n        /* \"lib/forge-std/src/StdMath.sol\":1144:1148  1e18 */\n      0x0de0b6b3a7640000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      mul\n      div\n        /* \"lib/forge-std/src/StdMath.sol\":1144:1148  1e18 */\n      0x0de0b6b3a7640000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      eq\n      dup2\n      iszero\n      or\n      iszero\n      tag_505\n      jumpi\n        /* \"lib/forge-std/src/StdMath.sol\":1144:1148  1e18 */\n      0x0de0b6b3a7640000\n        /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */\n      0x056bc75e2d63100000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap2\n      mul\n      div\n        /* \"lib/forge-std/src/StdAssertions.sol\":5389:5419  percentDelta > maxPercentDelta */\n      swap1\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      0x5af3107a4000\n        /* \"lib/forge-std/src/StdAssertions.sol\":5389:5419  percentDelta > maxPercentDelta */\n      dup3\n      gt\n        /* \"lib/forge-std/src/StdAssertions.sol\":5385:5769  if (percentDelta > maxPercentDelta) {... */\n      tag_467\n      jumpi\n        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */\n    tag_468:\n        /* \"test/unit/ConstantProductPair.t.sol\":20496:20508  block.number */\n      pop\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":21138:21154  block.number + 1 */\n      tag_469\n        /* \"test/unit/ConstantProductPair.t.sol\":20496:20508  block.number */\n      number\n        /* \"test/unit/ConstantProductPair.t.sol\":21138:21154  block.number + 1 */\n      tag_23\n      jump\t// in\n    tag_469:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"test/unit/ConstantProductPair.t.sol\":21130:21155  vm.roll(block.number + 1) */\n      extcodesize\n      iszero\n      tag_291\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":21130:21155  vm.roll(block.number + 1) */\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x1f7b4f3000000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":21130:21155  vm.roll(block.number + 1) */\n      dup3\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":21130:21155  vm.roll(block.number + 1) */\n      dup3\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":21130:21155  vm.roll(block.number + 1) */\n      dup3\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":21130:21155  vm.roll(block.number + 1) */\n      dup2\n      dup4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"test/unit/ConstantProductPair.t.sol\":21130:21155  vm.roll(block.number + 1) */\n      gas\n      call\n      dup1\n      iszero\n      tag_312\n      jumpi\n      tag_474\n      jumpi\n        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */\n    tag_475:\n        /* \"test/unit/ConstantProductPair.t.sol\":20531:20546  block.timestamp */\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":21173:21192  block.timestamp + 5 */\n      tag_476\n        /* \"test/unit/ConstantProductPair.t.sol\":20531:20546  block.timestamp */\n      timestamp\n        /* \"test/unit/ConstantProductPair.t.sol\":21173:21192  block.timestamp + 5 */\n      tag_24\n      jump\t// in\n    tag_476:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"test/unit/ConstantProductPair.t.sol\":21165:21193  vm.warp(block.timestamp + 5) */\n      extcodesize\n      iszero\n      tag_291\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":21165:21193  vm.warp(block.timestamp + 5) */\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xe5d6bf0200000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":21165:21193  vm.warp(block.timestamp + 5) */\n      dup3\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":21165:21193  vm.warp(block.timestamp + 5) */\n      dup3\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":21165:21193  vm.warp(block.timestamp + 5) */\n      dup3\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":21165:21193  vm.warp(block.timestamp + 5) */\n      dup2\n      dup4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"test/unit/ConstantProductPair.t.sol\":21165:21193  vm.warp(block.timestamp + 5) */\n      gas\n      call\n      dup1\n      iszero\n      tag_312\n      jumpi\n      tag_481\n      jumpi\n        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */\n    tag_482:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      pop\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":20587:20607  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":21203:21230  _constantProductPair.sync() */\n      dup1\n      extcodesize\n      iszero\n      tag_255\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      swap1\n      0x04\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":21203:21230  _constantProductPair.sync() */\n      dup1\n      swap5\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xfff6cae900000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":21203:21230  _constantProductPair.sync() */\n      dup4\n      mstore\n      gas\n      call\n      dup1\n      iszero\n      tag_312\n      jumpi\n      tag_487\n      jumpi\n        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */\n    tag_488:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      pop\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":20587:20607  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      swap1\n      mload(0x40)\n      0x0902f1ac00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":21274:21308  _constantProductPair.getReserves() */\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":20763:20797  _constantProductPair.getReserves() */\n      0x80\n        /* \"test/unit/ConstantProductPair.t.sol\":21274:21308  _constantProductPair.getReserves() */\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":21274:21308  _constantProductPair.getReserves() */\n      dup2\n      dup7\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_312\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":21345:21400  _oracleCaller.observation(_constantProductPair, lIndex) */\n      tag_491\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":20763:20797  _constantProductPair.getReserves() */\n      0x80\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap3\n      dup7\n        /* \"test/unit/ConstantProductPair.t.sol\":21274:21308  _constantProductPair.getReserves() */\n      swap3\n      tag_492\n      jumpi\n        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */\n    tag_493:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      pop\n      and(sload(0x20), 0xffffffffffffffffffffffffffffffffffffffff)\n      swap1\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":21345:21400  _oracleCaller.observation(_constantProductPair, lIndex) */\n      dup1\n      swap7\n      dup2\n      swap5\n      dup3\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xc9d163d100000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":21345:21400  _oracleCaller.observation(_constantProductPair, lIndex) */\n      dup5\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":21345:21400  _oracleCaller.observation(_constantProductPair, lIndex) */\n      dup5\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      swap3\n      swap2\n      0xffff\n      0x20\n      swap2\n      0xffffffffffffffffffffffffffffffffffffffff\n      0x40\n      dup6\n      add\n      swap7\n      and\n      dup5\n      mstore\n      and\n      swap2\n      add\n      mstore\n      jump\n        /* \"test/unit/ConstantProductPair.t.sol\":21345:21400  _oracleCaller.observation(_constantProductPair, lIndex) */\n    tag_491:\n      sub\n      swap2\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_312\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":21463:21508  lObs1.logAccLiquidity - lObs0.logAccLiquidity */\n      tag_314\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      0x5af3107a4000\n        /* \"test/unit/ConstantProductPair.t.sol\":21345:21400  _oracleCaller.observation(_constantProductPair, lIndex) */\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40\n        /* \"test/unit/ConstantProductPair.t.sol\":21345:21400  _oracleCaller.observation(_constantProductPair, lIndex) */\n      dup1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x05\n        /* \"test/unit/ConstantProductPair.t.sol\":21345:21400  _oracleCaller.observation(_constantProductPair, lIndex) */\n      swap5\n        /* \"src/libraries/LogCompression.sol\":2760:2807  LogExpMath.exp(value * _LOG_COMPRESSION_FACTOR) */\n      tag_497\n        /* \"test/unit/ConstantProductPair.t.sol\":21345:21400  _oracleCaller.observation(_constantProductPair, lIndex) */\n      swap8\n      dup10\n      swap2\n      tag_498\n      jumpi\n        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */\n    tag_499:\n        /* \"test/unit/ConstantProductPair.t.sol\":21463:21484  lObs1.logAccLiquidity */\n      pop\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n      0x06\n      signextend\n        /* \"test/unit/ConstantProductPair.t.sol\":20950:20971  lObs0.logAccLiquidity */\n      swap2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n      0x06\n      signextend\n        /* \"test/unit/ConstantProductPair.t.sol\":21463:21508  lObs1.logAccLiquidity - lObs0.logAccLiquidity */\n      swap1\n      tag_102\n      jump\t// in\n        /* \"src/libraries/LogCompression.sol\":2760:2807  LogExpMath.exp(value * _LOG_COMPRESSION_FACTOR) */\n    tag_497:\n        /* \"test/unit/ConstantProductPair.t.sol\":21556:21561  99e18 */\n      0x055de6a779bbac0000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x00\n        /* \"lib/forge-std/src/StdMath.sol\":607:612  a > b */\n      dup2\n      dup4\n      gt\n        /* \"test/unit/ConstantProductPair.t.sol\":21556:21561  99e18 */\n      iszero\n      tag_500\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      pop\n      0xfffffffffffffffffffffffffffffffffffffffffffffffaa219588644540000\n      dup3\n      add\n      dup3\n      dup2\n      gt\n      tag_505\n      jumpi\n        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */\n    tag_504:\n        /* \"lib/forge-std/src/StdMath.sol\":1144:1148  1e18 */\n      0x0de0b6b3a7640000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      mul\n      swap1\n      dup1\n      dup3\n      div\n        /* \"lib/forge-std/src/StdMath.sol\":1144:1148  1e18 */\n      0x0de0b6b3a7640000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      eq\n      swap1\n      iszero\n      or\n      iszero\n      tag_505\n      jumpi\n      dup2\n      swap1\n      div\n        /* \"lib/forge-std/src/StdAssertions.sol\":5389:5419  percentDelta > maxPercentDelta */\n      swap2\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      0x5af3107a4000\n        /* \"lib/forge-std/src/StdAssertions.sol\":5389:5419  percentDelta > maxPercentDelta */\n      dup4\n      gt\n        /* \"lib/forge-std/src/StdAssertions.sol\":5385:5769  if (percentDelta > maxPercentDelta) {... */\n      tag_507\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup4\n      dup1\n      return\n        /* \"lib/forge-std/src/StdAssertions.sol\":5385:5769  if (percentDelta > maxPercentDelta) {... */\n    tag_507:\n        /* \"lib/forge-std/src/StdAssertions.sol\":5440:5481  log(\"Error: a ~= b not satisfied [uint]\") */\n      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50\n        /* \"test/unit/ConstantProductPair.t.sol\":20763:20797  _constantProductPair.getReserves() */\n      0x80\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      0x20\n      dup2\n      mstore\n      0x22\n      0x20\n      dup3\n      add\n      mstore\n      0x4572726f723a2061207e3d2062206e6f7420736174697366696564205b75696e\n      0x40\n      dup3\n      add\n      mstore\n      0x745d000000000000000000000000000000000000000000000000000000000000\n      0x60\n      dup3\n      add\n      mstore\n        /* \"lib/forge-std/src/StdAssertions.sol\":5440:5481  log(\"Error: a ~= b not satisfied [uint]\") */\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      swap2\n      0x40\n      dup4\n      mstore\n      tag_509\n      0x40\n      dup5\n      add\n      0x40\n      swap1\n      0x0c\n      dup2\n      mstore\n      0x2020202045787065637465640000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_509:\n      swap1\n      0x20\n      dup5\n      add\n      mstore\n        /* \"lib/forge-std/src/StdAssertions.sol\":5500:5533  log_named_uint(\"    Expected\", b) */\n      dup3\n      0xb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8\n      swap4\n      dup5\n      swap3\n      sub\n      swap1\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      dup1\n      swap2\n      0x40\n      dup3\n      mstore\n      tag_510\n      0x40\n      dup4\n      add\n      0x40\n      swap1\n      0x0c\n      dup2\n      mstore\n      0x20202020202041637475616c0000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_510:\n      swap1\n      0x20\n      dup4\n      add\n      mstore\n        /* \"lib/forge-std/src/StdAssertions.sol\":5552:5585  log_named_uint(\"      Actual\", a) */\n      sub\n      swap1\n      log1\n        /* \"lib/forge-std/src/StdAssertions.sol\":5682:5738  log_named_decimal_uint(\"     % Delta\", percentDelta, 18) */\n      tag_511\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"lib/forge-std/src/StdAssertions.sol\":5604:5663  log_named_decimal_uint(\" Max % Delta\", maxPercentDelta, 18) */\n      swap2\n      0xeb8ba43ced7537421946bd43e828b8b2b8428927aa8f801c13d934bf11aca57b\n      dup4\n      dup1\n      tag_512\n      dup4\n      swap7\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      0x60\n      dup3\n      mstore\n      0x0c\n      0x60\n      dup4\n      add\n      mstore\n      0x204d617820252044656c74610000000000000000000000000000000000000000\n      0x80\n      dup4\n      add\n      mstore\n        /* \"lib/forge-std/src/StdAssertions.sol\":6831:6833  18 */\n      0x12\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40\n      0xa0\n      dup5\n      add\n      swap4\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      0x5af3107a4000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n      dup3\n      add\n      mstore\n      add\n      mstore\n      jump\n        /* \"lib/forge-std/src/StdAssertions.sol\":5604:5663  log_named_decimal_uint(\" Max % Delta\", maxPercentDelta, 18) */\n    tag_512:\n      sub\n      swap1\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"lib/forge-std/src/StdAssertions.sol\":5682:5738  log_named_decimal_uint(\"     % Delta\", percentDelta, 18) */\n      swap2\n      dup3\n      swap2\n      dup3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40\n        /* \"lib/forge-std/src/StdAssertions.sol\":6831:6833  18 */\n      0x12\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap2\n      swap4\n      swap3\n      swap4\n      0x60\n      dup2\n      mstore\n      0x0c\n      0x60\n      dup3\n      add\n      mstore\n      0x2020202020252044656c74610000000000000000000000000000000000000000\n      0x80\n      dup3\n      add\n      mstore\n      0xa0\n      dup2\n      add\n      swap5\n      0x20\n      dup3\n      add\n      mstore\n      add\n      mstore\n      jump\n        /* \"lib/forge-std/src/StdAssertions.sol\":5682:5738  log_named_decimal_uint(\"     % Delta\", percentDelta, 18) */\n    tag_511:\n      sub\n      swap1\n      log1\n      tag_513\n      tag_42\n      jump\t// in\n    tag_513:\n        /* \"lib/forge-std/src/StdAssertions.sol\":5385:5769  if (percentDelta > maxPercentDelta) {... */\n      codesize\n      dup1\n      dup1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup4\n      dup1\n      return\n    tag_505:\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */\n    tag_500:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      dup3\n      sub\n      swap1\n      dup3\n      dup3\n      gt\n      tag_514\n      jumpi\n        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */\n      pop\n      jump(tag_504)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_514:\n      dup1\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n      0x24\n      swap3\n      mstore\n      mstore(0x04, 0x11)\n      revert\n        /* \"test/unit/ConstantProductPair.t.sol\":21345:21400  _oracleCaller.observation(_constantProductPair, lIndex) */\n    tag_498:\n      tag_516\n      swap2\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":20763:20797  _constantProductPair.getReserves() */\n      0x80\n        /* \"test/unit/ConstantProductPair.t.sol\":21345:21400  _oracleCaller.observation(_constantProductPair, lIndex) */\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":20763:20797  _constantProductPair.getReserves() */\n      0x80\n        /* \"test/unit/ConstantProductPair.t.sol\":21345:21400  _oracleCaller.observation(_constantProductPair, lIndex) */\n      gt\n      tag_320\n      jumpi\n      tag_322\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_516:\n      codesize\n      jump(tag_499)\n        /* \"test/unit/ConstantProductPair.t.sol\":21274:21308  _constantProductPair.getReserves() */\n    tag_492:\n      tag_520\n      swap2\n      swap3\n      pop\n      dup4\n      returndatasize\n      dup6\n      gt\n      tag_328\n      jumpi\n      tag_330\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_520:\n      swap3\n      pop\n      pop\n      pop\n      swap1\n      codesize\n      jump(tag_493)\n        /* \"test/unit/ConstantProductPair.t.sol\":21203:21230  _constantProductPair.sync() */\n    tag_487:\n      tag_524\n      swap1\n      tag_1\n      jump\t// in\n    tag_524:\n      codesize\n      jump(tag_488)\n        /* \"test/unit/ConstantProductPair.t.sol\":21165:21193  vm.warp(block.timestamp + 5) */\n    tag_481:\n      tag_525\n      swap1\n      tag_1\n      jump\t// in\n    tag_525:\n      codesize\n      jump(tag_482)\n        /* \"test/unit/ConstantProductPair.t.sol\":21130:21155  vm.roll(block.number + 1) */\n    tag_474:\n      tag_526\n      swap1\n      tag_1\n      jump\t// in\n    tag_526:\n      codesize\n      jump(tag_475)\n        /* \"lib/forge-std/src/StdAssertions.sol\":5385:5769  if (percentDelta > maxPercentDelta) {... */\n    tag_467:\n        /* \"lib/forge-std/src/StdAssertions.sol\":5440:5481  log(\"Error: a ~= b not satisfied [uint]\") */\n      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50\n        /* \"test/unit/ConstantProductPair.t.sol\":20763:20797  _constantProductPair.getReserves() */\n      0x80\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      0x20\n      dup2\n      mstore\n      0x22\n      0x20\n      dup3\n      add\n      mstore\n      0x4572726f723a2061207e3d2062206e6f7420736174697366696564205b75696e\n      0x40\n      dup3\n      add\n      mstore\n      0x745d000000000000000000000000000000000000000000000000000000000000\n      0x60\n      dup3\n      add\n      mstore\n        /* \"lib/forge-std/src/StdAssertions.sol\":5440:5481  log(\"Error: a ~= b not satisfied [uint]\") */\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      swap1\n      0x40\n      dup3\n      mstore\n      tag_527\n      0x40\n      dup4\n      add\n      0x40\n      swap1\n      0x0c\n      dup2\n      mstore\n      0x2020202045787065637465640000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_527:\n        /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */\n      0x056bc75e2d63100000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n      dup5\n      add\n      mstore\n        /* \"lib/forge-std/src/StdAssertions.sol\":5500:5533  log_named_uint(\"    Expected\", b) */\n      dup3\n      0xb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8\n      swap4\n      dup5\n      swap3\n      sub\n      swap1\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      dup1\n      swap2\n      0x40\n      dup3\n      mstore\n      tag_528\n      0x40\n      dup4\n      add\n      0x40\n      swap1\n      0x0c\n      dup2\n      mstore\n      0x20202020202041637475616c0000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_528:\n      swap1\n      0x20\n      dup4\n      add\n      mstore\n        /* \"lib/forge-std/src/StdAssertions.sol\":5552:5585  log_named_uint(\"      Actual\", a) */\n      sub\n      swap1\n      log1\n        /* \"lib/forge-std/src/StdAssertions.sol\":5682:5738  log_named_decimal_uint(\"     % Delta\", percentDelta, 18) */\n      tag_529\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"lib/forge-std/src/StdAssertions.sol\":5604:5663  log_named_decimal_uint(\" Max % Delta\", maxPercentDelta, 18) */\n      swap2\n      0xeb8ba43ced7537421946bd43e828b8b2b8428927aa8f801c13d934bf11aca57b\n      dup4\n      dup1\n      tag_512\n      dup4\n      swap7\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      0x60\n      dup3\n      mstore\n      0x0c\n      0x60\n      dup4\n      add\n      mstore\n      0x204d617820252044656c74610000000000000000000000000000000000000000\n      0x80\n      dup4\n      add\n      mstore\n        /* \"lib/forge-std/src/StdAssertions.sol\":6831:6833  18 */\n      0x12\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40\n      0xa0\n      dup5\n      add\n      swap4\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      0x5af3107a4000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n      dup3\n      add\n      mstore\n      add\n      mstore\n      jump\n        /* \"lib/forge-std/src/StdAssertions.sol\":5682:5738  log_named_decimal_uint(\"     % Delta\", percentDelta, 18) */\n    tag_529:\n      sub\n      swap1\n      log1\n      tag_531\n      tag_42\n      jump\t// in\n    tag_531:\n        /* \"lib/forge-std/src/StdAssertions.sol\":5385:5769  if (percentDelta > maxPercentDelta) {... */\n      codesize\n      dup1\n      jump(tag_468)\n        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */\n    tag_460:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n        /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */\n      0x056bc75e2d63100000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      swap1\n        /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */\n      0x056bc75e2d63100000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      gt\n      tag_514\n      jumpi\n        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */\n      pop\n      jump(tag_464)\n        /* \"test/unit/ConstantProductPair.t.sol\":20834:20889  _oracleCaller.observation(_constantProductPair, lIndex) */\n    tag_457:\n      tag_534\n      swap2\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":20763:20797  _constantProductPair.getReserves() */\n      0x80\n        /* \"test/unit/ConstantProductPair.t.sol\":20834:20889  _oracleCaller.observation(_constantProductPair, lIndex) */\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":20763:20797  _constantProductPair.getReserves() */\n      0x80\n        /* \"test/unit/ConstantProductPair.t.sol\":20834:20889  _oracleCaller.observation(_constantProductPair, lIndex) */\n      gt\n      tag_320\n      jumpi\n      tag_322\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_534:\n      codesize\n      jump(tag_458)\n        /* \"test/unit/ConstantProductPair.t.sol\":20763:20797  _constantProductPair.getReserves() */\n    tag_453:\n      tag_538\n      swap2\n      swap3\n      pop\n      dup4\n      returndatasize\n      dup6\n      gt\n      tag_328\n      jumpi\n      tag_330\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_538:\n      swap3\n      pop\n      pop\n      pop\n      swap1\n      codesize\n      jump(tag_454)\n        /* \"test/unit/ConstantProductPair.t.sol\":20672:20712  _constantProductPair.burn(address(this)) */\n    tag_448:\n      tag_542\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40\n        /* \"test/unit/ConstantProductPair.t.sol\":20672:20712  _constantProductPair.burn(address(this)) */\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40\n        /* \"test/unit/ConstantProductPair.t.sol\":20672:20712  _constantProductPair.burn(address(this)) */\n      gt\n      tag_407\n      jumpi\n      tag_409\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_542:\n      pop\n      jump(tag_449)\n        /* \"test/unit/ConstantProductPair.t.sol\":20587:20662  _constantProductPair.transfer(address(_constantProductPair), lAmountToBurn) */\n    tag_444:\n      tag_546\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":20587:20662  _constantProductPair.transfer(address(_constantProductPair), lAmountToBurn) */\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":20587:20662  _constantProductPair.transfer(address(_constantProductPair), lAmountToBurn) */\n      gt\n      tag_547\n      jumpi\n    tag_548:\n      tag_549\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_549:\n      dup2\n      add\n      swap1\n      tag_14\n      jump\t// in\n    tag_546:\n      pop\n      codesize\n      jump(tag_445)\n    tag_547:\n      pop\n      returndatasize\n      jump(tag_548)\n        /* \"test/unit/ConstantProductPair.t.sol\":20561:20577  vm.prank(_alice) */\n    tag_439:\n      tag_550\n      swap1\n      tag_1\n      jump\t// in\n    tag_550:\n      codesize\n      jump(tag_440)\n        /* \"test/unit/ConstantProductPair.t.sol\":20523:20551  vm.warp(block.timestamp + 5) */\n    tag_433:\n      tag_551\n      swap1\n      tag_1\n      jump\t// in\n    tag_551:\n      codesize\n      jump(tag_434)\n        /* \"test/unit/ConstantProductPair.t.sol\":20488:20513  vm.roll(block.number + 1) */\n    tag_426:\n      tag_552\n      swap1\n      tag_1\n      jump\t// in\n    tag_552:\n      codesize\n      jump(tag_427)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_182:\n      pop\n      jumpi(tag_196, callvalue)\n      dup1\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_196\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":24604:24616  _stepTime(5) */\n      tag_557\n      tag_77\n      jump\t// in\n    tag_557:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n        /* \"test/unit/ConstantProductPair.t.sol\":24789:24796  _tokenB */\n      0x1a\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":24810:24830  _constantProductPair */\n      dup3\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap2\n      dup4\n      dup4\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":24789:24842  _tokenB.mint(address(_constantProductPair), lSwapAmt) */\n      dup2\n      extcodesize\n      iszero\n      tag_291\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      swap2\n      0x44\n      dup4\n      swap3\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":24789:24842  _tokenB.mint(address(_constantProductPair), lSwapAmt) */\n      swap5\n      dup6\n      swap4\n      dup5\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40c10f1900000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":24789:24842  _tokenB.mint(address(_constantProductPair), lSwapAmt) */\n      dup5\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":24789:24842  _tokenB.mint(address(_constantProductPair), lSwapAmt) */\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":24759:24779  0.127809637135502e18 */\n      0x01c6123014554ab0\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      dup5\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":24789:24842  _tokenB.mint(address(_constantProductPair), lSwapAmt) */\n      gas\n      call\n      dup1\n      iszero\n      tag_219\n      jumpi\n      tag_562\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_563:\n      pop\n      pop\n      dup1\n      dup3\n      tag_564\n      swap3\n      sload\n      and\n      mload(0x40)\n      tag_565\n      dup2\n      tag_2\n      jump\t// in\n    tag_565:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      dup6\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":24852:24928  _constantProductPair.swap(-int256(lSwapAmt), true, address(this), bytes(\"\")) */\n      dup1\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xe12bd9d800000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":24852:24928  _constantProductPair.swap(-int256(lSwapAmt), true, address(this), bytes(\"\")) */\n      dup3\n      mstore\n        /* \"lib/forge-std/src/StdMath.sol\":124:202  -57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffe39edcfebaab550\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":24852:24928  _constantProductPair.swap(-int256(lSwapAmt), true, address(this), bytes(\"\")) */\n      dup4\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":24897:24901  true */\n      0x01\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      dup4\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":24911:24915  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x44\n      dup4\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x80\n      0x64\n      dup4\n      add\n      mstore\n      dup2\n      dup9\n      dup2\n      0x20\n      swap9\n      dup10\n      swap7\n      0x84\n      dup4\n      add\n      swap1\n      tag_10\n      jump\t// in\n    tag_564:\n        /* \"test/unit/ConstantProductPair.t.sol\":24852:24928  _constantProductPair.swap(-int256(lSwapAmt), true, address(this), bytes(\"\")) */\n      sub\n      swap3\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_201\n      jumpi\n      dup4\n      swap2\n      tag_568\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_569:\n      pop\n      pop\n      dup3\n      dup2\n      sload\n      and\n      swap3\n      mload(0x40)\n      dup4\n      dup2\n      0x04\n      dup2\n      0x495bc0fb00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":24966:25005  _constantProductPair.prevClampedPrice() */\n      swap9\n      dup10\n      dup3\n      mstore\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_376\n      jumpi\n      dup7\n      swap1\n      tag_572\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_573:\n        /* \"test/unit/ConstantProductPair.t.sol\":24957:25012  assertEq(_constantProductPair.prevClampedPrice(), 1e18) */\n      tag_574\n      swap2\n      pop\n      tag_33\n      jump\t// in\n    tag_574:\n        /* \"test/unit/ConstantProductPair.t.sol\":25038:25050  _stepTime(5) */\n      tag_575\n      tag_77\n      jump\t// in\n    tag_575:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup5\n      dup2\n      dup4\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":25060:25087  _constantProductPair.sync() */\n      dup1\n      extcodesize\n      iszero\n      tag_255\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      dup1\n      swap2\n      0x04\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":25060:25087  _constantProductPair.sync() */\n      dup1\n      swap5\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xfff6cae900000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":25060:25087  _constantProductPair.sync() */\n      dup4\n      mstore\n      gas\n      call\n      dup1\n      iszero\n      tag_219\n      jumpi\n      tag_580\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_581:\n      pop\n      pop\n      dup1\n      dup4\n      sload\n      and\n      swap2\n      0x80\n      dup3\n      dup3\n      sload\n      and\n      0x44\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":25143:25193  _oracleCaller.observation(_constantProductPair, 1) */\n      dup1\n      swap7\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xc9d163d100000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":25143:25193  _oracleCaller.observation(_constantProductPair, 1) */\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":25143:25193  _oracleCaller.observation(_constantProductPair, 1) */\n      dup4\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":24897:24901  true */\n      0x01\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      dup4\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":25143:25193  _oracleCaller.observation(_constantProductPair, 1) */\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_376\n      jumpi\n      dup5\n      swap4\n      dup8\n      swap2\n      tag_584\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_585:\n      pop\n      dup4\n      dup2\n      mload\n      0x0d\n      signextend\n        /* \"test/unit/ConstantProductPair.t.sol\":25234:25258  lObs1.logAccClampedPrice */\n      swap2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n      0x06\n      signextend\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":7258:7264  a <= b */\n      dup1\n      dup3\n      sgt\n      iszero\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":7254:7451  if (a <= b) {... */\n      tag_586\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_587:\n      pop\n      pop\n      sload\n      and\n      swap3\n      0x04\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":25278:25317  _constantProductPair.prevClampedPrice() */\n      dup1\n      swap6\n      dup2\n      swap4\n      dup3\n      mstore\n      gas\n      staticcall\n      swap2\n      dup3\n      iszero\n      tag_215\n      jumpi\n      dup4\n      swap3\n      tag_590\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_591:\n        /* \"test/unit/ConstantProductPair.t.sol\":25319:25328  1.0025e18 */\n      pop\n      0x0de9987043544000\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5259:5265  a != b */\n      swap2\n      dup3\n      dup2\n      sub\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5255:5458  if (a != b) {... */\n      tag_592\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup4\n      dup1\n      return\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5255:5458  if (a != b) {... */\n    tag_592:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5286:5327  log(\"Error: a == b not satisfied [uint]\") */\n      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x80\n      mload(0x40)\n      dup5\n      dup2\n      mstore\n      0x22\n      dup6\n      dup3\n      add\n      mstore\n      0x4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e\n      0x40\n      dup3\n      add\n      mstore\n      0x745d000000000000000000000000000000000000000000000000000000000000\n      0x60\n      dup3\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5286:5327  log(\"Error: a == b not satisfied [uint]\") */\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      swap3\n      0x40\n      dup5\n      mstore\n      tag_594\n      0x40\n      dup6\n      add\n      0x40\n      swap1\n      0x0a\n      dup2\n      mstore\n      0x2020457870656374656400000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_594:\n      swap1\n      dup4\n      dup6\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5346:5377  log_named_uint(\"  Expected\", b) */\n      dup4\n      0xb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8\n      swap5\n      dup6\n      swap3\n      sub\n      swap1\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      swap2\n      dup3\n      swap2\n      0x40\n      dup4\n      mstore\n      tag_595\n      0x40\n      dup5\n      add\n      0x40\n      swap1\n      0x0a\n      dup2\n      mstore\n      0x2020202041637475616c00000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_595:\n      swap2\n      dup4\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5396:5427  log_named_uint(\"    Actual\", a) */\n      sub\n      swap1\n      log1\n      tag_513\n      tag_42\n      jump\t// in\n        /* \"test/unit/ConstantProductPair.t.sol\":25278:25317  _constantProductPair.prevClampedPrice() */\n    tag_590:\n      swap1\n      dup1\n      swap3\n      pop\n      dup2\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_597\n      jumpi\n    tag_598:\n      tag_599\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_599:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":25278:25317  _constantProductPair.prevClampedPrice() */\n      swap1\n      codesize\n      jump(tag_591)\n    tag_597:\n      pop\n      returndatasize\n      jump(tag_598)\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":7254:7451  if (a <= b) {... */\n    tag_586:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":7285:7324  log(\"Error: a > b not satisfied [int]\") */\n      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x60\n      mload(0x40)\n      dup8\n      dup2\n      mstore\n      dup8\n      dup1\n      dup3\n      add\n      mstore\n      0x4572726f723a2061203e2062206e6f7420736174697366696564205b696e745d\n      0x40\n      dup3\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":7285:7324  log(\"Error: a > b not satisfied [int]\") */\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      swap2\n      0x40\n      dup4\n      mstore\n      tag_602\n      0x40\n      dup5\n      add\n      0x40\n      swap1\n      0x09\n      dup2\n      mstore\n      0x202056616c756520610000000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_602:\n      swap1\n      dup7\n      dup5\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":7343:7372  log_named_int(\"  Value a\", a) */\n      dup3\n      0x2fe632779174374378442a8e978bccfbdcc1d6b2b0d81f7e8eb776ab2286f168\n      swap4\n      dup5\n      swap3\n      sub\n      swap1\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      dup1\n      swap2\n      0x40\n      dup3\n      mstore\n      tag_603\n      0x40\n      dup4\n      add\n      0x40\n      swap1\n      0x09\n      dup2\n      mstore\n      0x202056616c756520620000000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_603:\n      swap1\n      dup8\n      dup4\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":7391:7420  log_named_int(\"  Value b\", b) */\n      sub\n      swap1\n      log1\n      tag_604\n      tag_42\n      jump\t// in\n    tag_604:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":7254:7451  if (a <= b) {... */\n      codesize\n      dup1\n      jump(tag_587)\n        /* \"test/unit/ConstantProductPair.t.sol\":25143:25193  _oracleCaller.observation(_constantProductPair, 1) */\n    tag_584:\n      tag_605\n      swap2\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x80\n        /* \"test/unit/ConstantProductPair.t.sol\":25143:25193  _oracleCaller.observation(_constantProductPair, 1) */\n      returndatasize\n      dup2\n      gt\n      tag_320\n      jumpi\n      tag_322\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_605:\n      codesize\n      jump(tag_585)\n        /* \"test/unit/ConstantProductPair.t.sol\":25060:25087  _constantProductPair.sync() */\n    tag_580:\n      tag_609\n      swap1\n      tag_1\n      jump\t// in\n    tag_609:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_249\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":25060:25087  _constantProductPair.sync() */\n      dup5\n      codesize\n      jump(tag_581)\n        /* \"test/unit/ConstantProductPair.t.sol\":24966:25005  _constantProductPair.prevClampedPrice() */\n    tag_572:\n      pop\n      dup4\n      dup2\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_612\n      jumpi\n    tag_613:\n      tag_614\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_614:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":24957:25012  assertEq(_constantProductPair.prevClampedPrice(), 1e18) */\n      tag_574\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":24966:25005  _constantProductPair.prevClampedPrice() */\n      jump(tag_573)\n    tag_612:\n      pop\n      returndatasize\n      jump(tag_613)\n        /* \"test/unit/ConstantProductPair.t.sol\":24852:24928  _constantProductPair.swap(-int256(lSwapAmt), true, address(this), bytes(\"\")) */\n    tag_568:\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_617\n      jumpi\n    tag_618:\n      tag_619\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_619:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":24852:24928  _constantProductPair.swap(-int256(lSwapAmt), true, address(this), bytes(\"\")) */\n      dup2\n      codesize\n      jump(tag_569)\n    tag_617:\n      pop\n      returndatasize\n      jump(tag_618)\n        /* \"test/unit/ConstantProductPair.t.sol\":24789:24842  _tokenB.mint(address(_constantProductPair), lSwapAmt) */\n    tag_562:\n      tag_622\n      swap1\n      tag_1\n      jump\t// in\n    tag_622:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_291\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":24789:24842  _tokenB.mint(address(_constantProductPair), lSwapAmt) */\n      dup3\n      codesize\n      jump(tag_563)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_180:\n      pop\n      jumpi(tag_196, callvalue)\n      dup1\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_196\n      jumpi\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      swap3\n      dup4\n      dup1\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x26232a2e00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      dup3\n      mstore\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_219\n      jumpi\n      dup3\n      swap1\n      tag_631\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_632:\n        /* \"test/unit/ConstantProductPair.t.sol\":27373:27420  assertGt(_constantProductPair.platformFee(), 0) */\n      tag_633\n      swap2\n      pop\n      tag_68\n      jump\t// in\n    tag_633:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup1\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":27430:27457  _constantProductPair.sync() */\n      dup1\n      extcodesize\n      iszero\n      tag_229\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      dup1\n      swap2\n      0x04\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":27430:27457  _constantProductPair.sync() */\n      dup1\n      swap5\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xfff6cae900000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":27430:27457  _constantProductPair.sync() */\n      dup4\n      mstore\n      gas\n      call\n      dup1\n      iszero\n      tag_219\n      jumpi\n      tag_638\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_639:\n      pop\n      pop\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":27483:27512  _constantProductPair.token0() */\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x0dfe168100000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":27483:27512  _constantProductPair.token0() */\n      dup3\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":27483:27512  _constantProductPair.token0() */\n      dup3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":27483:27512  _constantProductPair.token0() */\n      dup2\n      dup5\n      gas\n      staticcall\n      swap2\n      dup3\n      iszero\n      tag_215\n      jumpi\n      dup4\n      swap3\n      tag_642\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_643:\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n      swap2\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":27538:27567  _constantProductPair.token1() */\n      swap3\n      dup4\n      dup1\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xd21220a700000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":27538:27567  _constantProductPair.token1() */\n      dup3\n      mstore\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_215\n      jumpi\n      dup4\n      swap2\n      tag_646\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_647:\n      pop\n      dup3\n      dup1\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */\n      dup2\n      add\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */\n      dup3\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":27663:27667  this */\n      address\n        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */\n      0x24\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */\n      0x24\n      dup2\n      mstore\n      tag_648\n      dup2\n      tag_5\n      jump\t// in\n    tag_648:\n        /* \"lib/forge-std/src/StdCheats.sol\":19719:19769  token.call(abi.encodeWithSelector(0x70a08231, to)) */\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup8\n      and\n        /* \"lib/forge-std/src/StdCheats.sol\":19719:19769  token.call(abi.encodeWithSelector(0x70a08231, to)) */\n      gas\n      call\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"lib/forge-std/src/StdCheats.sol\":19719:19769  token.call(abi.encodeWithSelector(0x70a08231, to)) */\n      tag_649\n      tag_13\n      jump\t// in\n    tag_649:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup1\n      mload\n        /* \"lib/forge-std/src/StdCheats.sol\":19797:19827  abi.decode(balData, (uint256)) */\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n        /* \"lib/forge-std/src/StdStorage.sol\":4581:4593  self._target */\n      0x0a\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      or\n        /* \"lib/forge-std/src/StdStorage.sol\":4581:4593  self._target */\n      0x0a\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sstore\n        /* \"lib/forge-std/src/StdCheats.sol\":19753:19763  0x70a08231 */\n      0x70a08231\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000\n        /* \"lib/forge-std/src/StdStorage.sol\":4736:4745  self._sig */\n      0x08\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      or\n        /* \"lib/forge-std/src/StdStorage.sol\":4736:4745  self._sig */\n      0x08\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sstore\n        /* \"lib/forge-std/src/StdStorage.sol\":5052:5062  self._keys */\n      0x07\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      0x010000000000000000\n      dup2\n      lt\n      iszero\n      tag_652\n      jumpi\n      0x01\n      dup2\n      add\n      dup1\n        /* \"lib/forge-std/src/StdStorage.sol\":5052:5062  self._keys */\n      0x07\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sstore\n      dup2\n      lt\n      iszero\n      tag_654\n      jumpi\n        /* \"lib/forge-std/src/StdStorage.sol\":5052:5062  self._keys */\n      0x07\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup5\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":27663:27667  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688\n      add\n      sstore\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"lib/forge-std/src/StdStorage.sol\":4581:4593  self._target */\n      0x0a\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"lib/forge-std/src/StdStorage.sol\":4736:4745  self._sig */\n      0x08\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      0xe0\n      shl\n      swap1\n        /* \"lib/forge-std/src/StdStorage.sol\":9476:9487  self._depth */\n      0x09\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      dup6\n      dup1\n      tag_656\n      tag_104\n      jump\t// in\n    tag_656:\n        /* \"lib/forge-std/src/StdStorage.sol\":9584:9596  flatten(ins) */\n      swap5\n      tag_657\n      dup7\n      tag_113\n      jump\t// in\n    tag_657:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      mload(0x40)\n        /* \"lib/forge-std/src/StdStorage.sol\":9561:9597  abi.encodePacked(fsig, flatten(ins)) */\n      swap7\n      dup8\n      tag_658\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"lib/forge-std/src/StdStorage.sol\":9561:9597  abi.encodePacked(fsig, flatten(ins)) */\n      dup3\n      add\n      swap5\n      dup5\n      dup7\n      tag_12\n      jump\t// in\n    tag_658:\n      sub\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap2\n        /* \"lib/forge-std/src/StdStorage.sol\":9561:9597  abi.encodePacked(fsig, flatten(ins)) */\n      tag_659\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"lib/forge-std/src/StdStorage.sol\":9561:9597  abi.encodePacked(fsig, flatten(ins)) */\n      swap4\n      dup5\n      dup2\n      add\n      dup12\n      mstore\n      dup11\n      tag_6\n      jump\t// in\n    tag_659:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"lib/forge-std/src/StdStorage.sol\":9612:9627  self.finds[who] */\n      tag_660\n      dup10\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x00\n      mstore\n        /* \"lib/forge-std/src/StdStorage.sol\":9612:9622  self.finds */\n      0x06\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap1\n      jump\n        /* \"lib/forge-std/src/StdStorage.sol\":9612:9627  self.finds[who] */\n    tag_660:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      swap2\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      dup2\n      dup7\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n      0x40\n      dup6\n      keccak256\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"lib/forge-std/src/StdStorage.sol\":9644:9678  abi.encodePacked(ins, field_depth) */\n      dup2\n      add\n      swap1\n      tag_661\n      dup2\n      tag_662\n      dup13\n      dup9\n      dup7\n      tag_107\n      jump\t// in\n    tag_662:\n      sub\n      dup8\n      dup2\n      add\n      dup4\n      mstore\n      dup3\n      tag_6\n      jump\t// in\n    tag_661:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n        /* \"lib/forge-std/src/StdStorage.sol\":9634:9679  keccak256(abi.encodePacked(ins, field_depth)) */\n      swap1\n      keccak256\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup7\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n      0xff\n      0x40\n      dup7\n      keccak256\n      sload\n      and\n        /* \"lib/forge-std/src/StdStorage.sol\":9611:9680  !self.finds[who][fsig][keccak256(abi.encodePacked(ins, field_depth))] */\n      iszero\n        /* \"lib/forge-std/src/StdStorage.sol\":9607:9717  if (!self.finds[who][fsig][keccak256(abi.encodePacked(ins, field_depth))]) {... */\n      tag_663\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_664:\n        /* \"lib/forge-std/src/StdStorage.sol\":9749:9764  self.slots[who] */\n      tag_665\n      dup9\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x00\n      mstore\n        /* \"lib/forge-std/src/StdCheats.sol\":19864:19872  stdstore */\n      0x05\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap1\n      jump\n        /* \"lib/forge-std/src/StdStorage.sol\":9749:9764  self.slots[who] */\n    tag_665:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      dup6\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n      0x40\n      dup5\n      keccak256\n      swap2\n        /* \"lib/forge-std/src/StdStorage.sol\":9781:9815  abi.encodePacked(ins, field_depth) */\n      tag_666\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"lib/forge-std/src/StdStorage.sol\":9781:9815  abi.encodePacked(ins, field_depth) */\n      swap2\n      dup3\n      tag_667\n      dup11\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"lib/forge-std/src/StdStorage.sol\":9781:9815  abi.encodePacked(ins, field_depth) */\n      dup4\n      add\n      swap7\n      dup8\n      tag_107\n      jump\t// in\n    tag_667:\n      sub\n      swap1\n      dup2\n      add\n      dup4\n      mstore\n      dup3\n      tag_6\n      jump\t// in\n    tag_666:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n        /* \"lib/forge-std/src/StdStorage.sol\":9771:9816  keccak256(abi.encodePacked(ins, field_depth)) */\n      swap1\n      keccak256\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n      0x40\n      dup3\n      keccak256\n      sload\n        /* \"lib/forge-std/src/StdStorage.sol\":9889:9909  who.staticcall(cald) */\n      swap6\n      mload\n      swap1\n      dup6\n      gas\n      staticcall\n      pop\n      tag_668\n      tag_13\n      jump\t// in\n    tag_668:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      0x07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n      dup2\n      sub\n      tag_669\n      jumpi\n      dup7\n      swap5\n      swap4\n      swap3\n      swap2\n        /* \"lib/forge-std/src/StdStorage.sol\":9930:9968  bytesToBytes32(rdat, 32 * field_depth) */\n      tag_671\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap2\n        /* \"lib/forge-std/src/StdCheats.sol\":19864:19872  stdstore */\n      0x05\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      shl\n        /* \"lib/forge-std/src/StdStorage.sol\":9930:9968  bytesToBytes32(rdat, 32 * field_depth) */\n      swap1\n      tag_112\n      jump\t// in\n    tag_671:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      0x667f9d7000000000000000000000000000000000000000000000000000000000\n        /* \"lib/forge-std/src/StdStorage.sol\":10003:10021  vm.load(who, slot) */\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      0x04\n        /* \"lib/forge-std/src/StdStorage.sol\":10003:10021  vm.load(who, slot) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n      0x24\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup5\n      swap1\n      mstore\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      0x44\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"lib/forge-std/src/StdStorage.sol\":10003:10021  vm.load(who, slot) */\n      gas\n      staticcall\n      swap2\n      dup3\n      iszero\n      tag_376\n      jumpi\n      dup7\n      swap3\n      tag_675\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_676:\n        /* \"lib/forge-std/src/StdStorage.sol\":10036:10048  fdat != curr */\n      pop\n      sub\n        /* \"lib/forge-std/src/StdStorage.sol\":10032:10250  if (fdat != curr) {... */\n      tag_677\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_678:\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"lib/forge-std/src/StdStorage.sol\":10259:10283  vm.store(who, slot, set) */\n      extcodesize\n      iszero\n      tag_285\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      0x70ca10bb00000000000000000000000000000000000000000000000000000000\n        /* \"lib/forge-std/src/StdStorage.sol\":10259:10283  vm.store(who, slot, set) */\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap2\n      swap1\n      swap2\n      and\n      0x04\n        /* \"lib/forge-std/src/StdStorage.sol\":10259:10283  vm.store(who, slot, set) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x02b5e3af16b1880000\n      0x44\n      dup3\n      add\n      mstore\n      dup3\n      dup2\n      0x64\n      dup2\n      dup4\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"lib/forge-std/src/StdStorage.sol\":10259:10283  vm.store(who, slot, set) */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_215\n      jumpi\n      dup4\n      swap2\n      tag_684\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_685:\n        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      pop\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n        /* \"lib/forge-std/src/StdStorage.sol\":4581:4593  self._target */\n      0x0a\n        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      sload\n      and\n        /* \"lib/forge-std/src/StdStorage.sol\":4581:4593  self._target */\n      0x0a\n        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      sstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000\n        /* \"lib/forge-std/src/StdStorage.sol\":4736:4745  self._sig */\n      0x08\n        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      sload\n      and\n        /* \"lib/forge-std/src/StdStorage.sol\":4736:4745  self._sig */\n      0x08\n        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      sstore\n        /* \"lib/forge-std/src/StdStorage.sol\":10348:10365  delete self._keys */\n      tag_686\n      tag_109\n      jump\t// in\n    tag_686:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x00\n        /* \"lib/forge-std/src/StdStorage.sol\":9476:9487  self._depth */\n      0x09\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sstore\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      mload(0x40)\n      0xa9059cbb00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":27739:27799  lToken0.transfer(address(_constantProductPair), lSwapAmount) */\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":27739:27799  lToken0.transfer(address(_constantProductPair), lSwapAmount) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x02b5e3af16b1880000\n      0x24\n      dup3\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      dup1\n      0x44\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":27739:27799  lToken0.transfer(address(_constantProductPair), lSwapAmount) */\n      sub\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      dup7\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup10\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":27739:27799  lToken0.transfer(address(_constantProductPair), lSwapAmount) */\n      gas\n      call\n      dup1\n      iszero\n      tag_215\n      jumpi\n      tag_690\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_691:\n      pop\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":27830:27908  _constantProductPair.swap(int256(lSwapAmount), true, address(this), bytes(\"\")) */\n      tag_692\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      mload(0x40)\n      tag_693\n      dup2\n      tag_2\n      jump\t// in\n    tag_693:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      dup5\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":27830:27908  _constantProductPair.swap(int256(lSwapAmount), true, address(this), bytes(\"\")) */\n      swap5\n      dup6\n      dup1\n      swap5\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xe12bd9d800000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":27830:27908  _constantProductPair.swap(int256(lSwapAmount), true, address(this), bytes(\"\")) */\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":27663:27667  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":27830:27908  _constantProductPair.swap(int256(lSwapAmount), true, address(this), bytes(\"\")) */\n      dup5\n      add\n      tag_61\n      jump\t// in\n    tag_692:\n      sub\n      swap3\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_215\n      jumpi\n      dup4\n      swap2\n      tag_696\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_697:\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      mload(0x40)\n      0xa9059cbb00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":27918:27977  lToken1.transfer(address(_constantProductPair), lAmountOut) */\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":27918:27977  lToken1.transfer(address(_constantProductPair), lAmountOut) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n      0x24\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      swap1\n      mstore\n      swap4\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup6\n      dup1\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      0x44\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":27918:27977  lToken1.transfer(address(_constantProductPair), lAmountOut) */\n    tag_698:\n      sub\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      dup8\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup9\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":27918:27977  lToken1.transfer(address(_constantProductPair), lAmountOut) */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_841\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":28000:28078  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n      tag_701\n        /* \"test/unit/ConstantProductPair.t.sol\":27918:27977  lToken1.transfer(address(_constantProductPair), lAmountOut) */\n      swap6\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":27918:27977  lToken1.transfer(address(_constantProductPair), lAmountOut) */\n      swap3\n      tag_702\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_703:\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":28026:28045  -int256(lAmountOut) */\n      tag_704\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":28026:28045  -int256(lAmountOut) */\n      swap2\n      tag_55\n      jump\t// in\n    tag_704:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      mload(0x40)\n      swap2\n      tag_705\n      dup4\n      tag_2\n      jump\t// in\n    tag_705:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      dup7\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup7\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":28000:28078  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n      dup1\n      swap10\n      dup2\n      swap6\n      dup3\n      swap5\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xe12bd9d800000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":28000:28078  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n      dup5\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":27663:27667  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":28000:28078  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":28000:28078  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n      dup6\n      add\n      tag_62\n      jump\t// in\n    tag_701:\n      sub\n      swap3\n      gas\n      call\n      swap4\n      dup5\n      iszero\n      tag_215\n      jumpi\n      dup4\n      swap5\n      tag_708\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_709:\n      pop\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":28089:28116  _constantProductPair.sync() */\n      dup1\n      extcodesize\n      iszero\n      tag_285\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup4\n      dup1\n      swap2\n      0x04\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":28089:28116  _constantProductPair.sync() */\n      dup1\n      swap5\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xfff6cae900000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":28089:28116  _constantProductPair.sync() */\n      dup4\n      mstore\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_841\n      jumpi\n      dup5\n      swap2\n      tag_714\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_715:\n      pop\n      pop\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":28135:28183  lToken0.balanceOf(address(_constantProductPair)) */\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":28135:28183  lToken0.balanceOf(address(_constantProductPair)) */\n      dup3\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":28135:28183  lToken0.balanceOf(address(_constantProductPair)) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup7\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":28135:28183  lToken0.balanceOf(address(_constantProductPair)) */\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_841\n      jumpi\n      dup5\n      swap2\n      tag_718\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_719:\n        /* \"test/unit/ConstantProductPair.t.sol\":28185:28204  INITIAL_MINT_AMOUNT */\n      pop\n      tag_720\n      swap1\n      tag_69\n      jump\t// in\n    tag_720:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":28224:28272  lToken1.balanceOf(address(_constantProductPair)) */\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":28224:28272  lToken1.balanceOf(address(_constantProductPair)) */\n      dup3\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":28224:28272  lToken1.balanceOf(address(_constantProductPair)) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup8\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":28224:28272  lToken1.balanceOf(address(_constantProductPair)) */\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_841\n      jumpi\n      dup5\n      swap2\n      tag_723\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_724:\n        /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */\n      pop\n      0x056bc75e2d63100000\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":8798:8803  a < b */\n      dup1\n      dup3\n      lt\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":8794:8994  if (a < b) {... */\n      tag_725\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_726:\n      pop\n      pop\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":28313:28347  _constantProductPair.platformFee() */\n      swap3\n      dup4\n      dup1\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x26232a2e00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":28313:28347  _constantProductPair.platformFee() */\n      dup3\n      mstore\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_841\n      jumpi\n      dup5\n      swap2\n      tag_729\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_730:\n        /* \"test/unit/ConstantProductPair.t.sol\":28349:28369  DEFAULT_PLATFORM_FEE */\n      pop\n      tag_731\n      swap1\n      tag_35\n      jump\t// in\n    tag_731:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":28428:28442  _platformFeeTo */\n      0x15\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":28389:28444  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      dup1\n      swap5\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":28389:28444  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":28389:28444  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      dup4\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":28389:28444  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_841\n      jumpi\n      dup5\n      swap2\n      tag_734\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_735:\n        /* \"test/unit/ConstantProductPair.t.sol\":28380:28448  assertEq(_constantProductPair.balanceOf(address(_platformFeeTo)), 0) */\n      pop\n      tag_736\n      swap1\n      tag_36\n      jump\t// in\n    tag_736:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      0x40\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":28459:28499  _constantProductPair.burn(address(this)) */\n      dup1\n      swap5\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x89afcb4400000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":28459:28499  _constantProductPair.burn(address(this)) */\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":27663:27667  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":28459:28499  _constantProductPair.burn(address(this)) */\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":28459:28499  _constantProductPair.burn(address(this)) */\n      gas\n      call\n      dup1\n      iszero\n      tag_841\n      jumpi\n      tag_739\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_740:\n      pop\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":28428:28442  _platformFeeTo */\n      0x15\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":28535:28590  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      dup1\n      swap9\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":28535:28590  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":28535:28590  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      dup4\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":28535:28590  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      gas\n      staticcall\n      swap5\n      dup6\n      iszero\n      tag_841\n      jumpi\n      dup5\n      swap6\n      tag_743\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_744:\n        /* \"test/unit/ConstantProductPair.t.sol\":28600:28628  assertGt(lPlatformShares, 0) */\n      pop\n      tag_745\n      dup6\n      tag_68\n      jump\t// in\n    tag_745:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":28675:28683  _factory */\n      0x13\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"test/unit/ConstantProductPair.t.sol\":28658:28685  vm.prank(address(_factory)) */\n      extcodesize\n      iszero\n      tag_249\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":28658:28685  vm.prank(address(_factory)) */\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xca669fa700000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":28658:28685  vm.prank(address(_factory)) */\n      dup3\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":28658:28685  vm.prank(address(_factory)) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":28658:28685  vm.prank(address(_factory)) */\n      dup5\n      dup2\n        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":28658:28685  vm.prank(address(_factory)) */\n      dup2\n      dup4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"test/unit/ConstantProductPair.t.sol\":28658:28685  vm.prank(address(_factory)) */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_201\n      jumpi\n      dup6\n      swap2\n      tag_750\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_751:\n      pop\n      pop\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":28695:28739  _constantProductPair.setCustomPlatformFee(0) */\n      dup1\n      extcodesize\n      iszero\n      tag_249\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup5\n      dup1\n      swap2\n        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":28695:28739  _constantProductPair.setCustomPlatformFee(0) */\n      dup1\n      swap5\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xafb4a43b00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":28695:28739  _constantProductPair.setCustomPlatformFee(0) */\n      dup4\n      mstore\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":28695:28739  _constantProductPair.setCustomPlatformFee(0) */\n      dup5\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":28695:28739  _constantProductPair.setCustomPlatformFee(0) */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_201\n      jumpi\n      dup6\n      swap2\n      tag_756\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_757:\n      pop\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      mload(0x40)\n      0xa9059cbb00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":28800:28859  lToken0.transfer(address(_constantProductPair), lAmountOut) */\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":28800:28859  lToken0.transfer(address(_constantProductPair), lAmountOut) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n      0x24\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      swap1\n      mstore\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      dup1\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      0x44\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":28800:28859  lToken0.transfer(address(_constantProductPair), lAmountOut) */\n      sub\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      dup9\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup9\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":28800:28859  lToken0.transfer(address(_constantProductPair), lAmountOut) */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_201\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":28882:28959  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */\n      tag_761\n        /* \"test/unit/ConstantProductPair.t.sol\":28800:28859  lToken0.transfer(address(_constantProductPair), lAmountOut) */\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":28800:28859  lToken0.transfer(address(_constantProductPair), lAmountOut) */\n      swap3\n      tag_785\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_763:\n      pop\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      mload(0x40)\n      swap2\n      tag_764\n      dup4\n      tag_2\n      jump\t// in\n    tag_764:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      dup8\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup8\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":28882:28959  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */\n      dup1\n      swap7\n      dup2\n      swap6\n      dup3\n      swap5\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xe12bd9d800000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":28882:28959  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */\n      dup5\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":27663:27667  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":28882:28959  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":28882:28959  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */\n      dup6\n      add\n      tag_62\n      jump\t// in\n    tag_761:\n      sub\n      swap3\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_841\n      jumpi\n      dup5\n      swap2\n      tag_767\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_768:\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      mload(0x40)\n      0xa9059cbb00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":28969:29028  lToken1.transfer(address(_constantProductPair), lAmountOut) */\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":28969:29028  lToken1.transfer(address(_constantProductPair), lAmountOut) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n      0x24\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      swap1\n      mstore\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      dup1\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      0x44\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":28969:29028  lToken1.transfer(address(_constantProductPair), lAmountOut) */\n    tag_769:\n      sub\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      dup9\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup10\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":28969:29028  lToken1.transfer(address(_constantProductPair), lAmountOut) */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_201\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":29051:29129  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n      tag_772\n        /* \"test/unit/ConstantProductPair.t.sol\":28969:29028  lToken1.transfer(address(_constantProductPair), lAmountOut) */\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":28969:29028  lToken1.transfer(address(_constantProductPair), lAmountOut) */\n      swap3\n      tag_796\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_774:\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":29077:29096  -int256(lAmountOut) */\n      tag_775\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":29077:29096  -int256(lAmountOut) */\n      swap2\n      tag_55\n      jump\t// in\n    tag_775:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      mload(0x40)\n      swap2\n      tag_764\n      dup4\n      tag_2\n      jump\t// in\n        /* \"test/unit/ConstantProductPair.t.sol\":29051:29129  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n    tag_772:\n      sub\n      swap3\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_841\n      jumpi\n      dup5\n      swap2\n      tag_779\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_780:\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      mload(0x40)\n      0xa9059cbb00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":29139:29198  lToken0.transfer(address(_constantProductPair), lAmountOut) */\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":29139:29198  lToken0.transfer(address(_constantProductPair), lAmountOut) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n      0x24\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      swap1\n      mstore\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      dup1\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      0x44\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":29139:29198  lToken0.transfer(address(_constantProductPair), lAmountOut) */\n    tag_781:\n      sub\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      dup9\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup9\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":29139:29198  lToken0.transfer(address(_constantProductPair), lAmountOut) */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_201\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":29221:29298  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */\n      tag_784\n        /* \"test/unit/ConstantProductPair.t.sol\":29139:29198  lToken0.transfer(address(_constantProductPair), lAmountOut) */\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":29139:29198  lToken0.transfer(address(_constantProductPair), lAmountOut) */\n      swap3\n      tag_785\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      pop\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      mload(0x40)\n      swap2\n      tag_764\n      dup4\n      tag_2\n      jump\t// in\n        /* \"test/unit/ConstantProductPair.t.sol\":29221:29298  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */\n    tag_784:\n      sub\n      swap3\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_841\n      jumpi\n      dup5\n      swap2\n      tag_790\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_791:\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      mload(0x40)\n      0xa9059cbb00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":29308:29367  lToken1.transfer(address(_constantProductPair), lAmountOut) */\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":29308:29367  lToken1.transfer(address(_constantProductPair), lAmountOut) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n      0x24\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      swap1\n      mstore\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      dup1\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      0x44\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":29308:29367  lToken1.transfer(address(_constantProductPair), lAmountOut) */\n    tag_792:\n      sub\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      dup9\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup10\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":29308:29367  lToken1.transfer(address(_constantProductPair), lAmountOut) */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_201\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":29390:29468  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n      tag_795\n        /* \"test/unit/ConstantProductPair.t.sol\":29308:29367  lToken1.transfer(address(_constantProductPair), lAmountOut) */\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":29308:29367  lToken1.transfer(address(_constantProductPair), lAmountOut) */\n      swap3\n      tag_796\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":29416:29435  -int256(lAmountOut) */\n      tag_775\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":29416:29435  -int256(lAmountOut) */\n      swap2\n      tag_55\n      jump\t// in\n        /* \"test/unit/ConstantProductPair.t.sol\":29390:29468  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n    tag_795:\n      sub\n      swap3\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_841\n      jumpi\n      dup5\n      swap2\n      tag_802\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_803:\n      pop\n      dup4\n      0x40\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":29497:29537  _constantProductPair.burn(address(this)) */\n      dup1\n      swap5\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x89afcb4400000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":29497:29537  _constantProductPair.burn(address(this)) */\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":27663:27667  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":29497:29537  _constantProductPair.burn(address(this)) */\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":29497:29537  _constantProductPair.burn(address(this)) */\n      gas\n      call\n      dup1\n      iszero\n      tag_201\n      jumpi\n      tag_806\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_807:\n      pop\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":28428:28442  _platformFeeTo */\n      0x15\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":29556:29611  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      dup1\n      swap5\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":29556:29611  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":29556:29611  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      dup4\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":29556:29611  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_201\n      jumpi\n      dup7\n      swap2\n      dup7\n      swap2\n      tag_810\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_811:\n        /* \"test/unit/ConstantProductPair.t.sol\":29613:29628  lPlatformShares */\n      pop\n      swap1\n      tag_812\n      swap2\n      tag_39\n      jump\t// in\n    tag_812:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":28675:28683  _factory */\n      0x13\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"test/unit/ConstantProductPair.t.sol\":29708:29735  vm.prank(address(_factory)) */\n      extcodesize\n      iszero\n      tag_249\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":29708:29735  vm.prank(address(_factory)) */\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xca669fa700000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":29708:29735  vm.prank(address(_factory)) */\n      dup3\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":29708:29735  vm.prank(address(_factory)) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":29708:29735  vm.prank(address(_factory)) */\n      dup5\n      dup2\n        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":29708:29735  vm.prank(address(_factory)) */\n      dup2\n      dup4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"test/unit/ConstantProductPair.t.sol\":29708:29735  vm.prank(address(_factory)) */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_201\n      jumpi\n      dup6\n      swap2\n      tag_817\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_818:\n      pop\n      pop\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":29745:29805  _constantProductPair.setCustomPlatformFee(type(uint256).max) */\n      dup1\n      extcodesize\n      iszero\n      tag_249\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup5\n      dup1\n      swap2\n        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":29745:29805  _constantProductPair.setCustomPlatformFee(type(uint256).max) */\n      dup1\n      swap5\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xafb4a43b00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":29745:29805  _constantProductPair.setCustomPlatformFee(type(uint256).max) */\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":29787:29804  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":29745:29805  _constantProductPair.setCustomPlatformFee(type(uint256).max) */\n      dup5\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":29745:29805  _constantProductPair.setCustomPlatformFee(type(uint256).max) */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_201\n      jumpi\n      dup6\n      swap2\n      tag_823\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_824:\n      pop\n      pop\n      0x40\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":29815:29855  _constantProductPair.burn(address(this)) */\n      dup1\n      swap8\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x89afcb4400000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":29815:29855  _constantProductPair.burn(address(this)) */\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":27663:27667  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":29815:29855  _constantProductPair.burn(address(this)) */\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":29815:29855  _constantProductPair.burn(address(this)) */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_376\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":29865:29928  lToken0.transfer(address(_constantProductPair), lAmountOut / 2) */\n      tag_827\n        /* \"test/unit/ConstantProductPair.t.sol\":29815:29855  _constantProductPair.burn(address(this)) */\n      swap5\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":29815:29855  _constantProductPair.burn(address(this)) */\n      swap3\n      tag_828\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_829:\n      pop\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      swap1\n      0x01\n      shr\n      swap3\n      dup4\n      swap2\n      dup9\n      0xffffffffffffffffffffffffffffffffffffffff\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":29865:29928  lToken0.transfer(address(_constantProductPair), lAmountOut / 2) */\n      dup1\n      swap10\n      dup2\n      swap7\n      dup3\n      swap6\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xa9059cbb00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":29865:29928  lToken0.transfer(address(_constantProductPair), lAmountOut / 2) */\n      dup5\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":29865:29928  lToken0.transfer(address(_constantProductPair), lAmountOut / 2) */\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      0x20\n      swap1\n      swap4\n      swap3\n      swap2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      0x40\n      dup3\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap6\n      and\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      dup2\n      mstore\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      jump\n        /* \"test/unit/ConstantProductPair.t.sol\":29865:29928  lToken0.transfer(address(_constantProductPair), lAmountOut / 2) */\n    tag_827:\n      sub\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap4\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":29865:29928  lToken0.transfer(address(_constantProductPair), lAmountOut / 2) */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_201\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":29951:30032  _constantProductPair.swap(int256(lAmountOut / 2), true, address(this), bytes(\"\")) */\n      tag_832\n        /* \"test/unit/ConstantProductPair.t.sol\":29865:29928  lToken0.transfer(address(_constantProductPair), lAmountOut / 2) */\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":29865:29928  lToken0.transfer(address(_constantProductPair), lAmountOut / 2) */\n      swap3\n      tag_833\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_834:\n      pop\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      mload(0x40)\n      swap2\n      tag_835\n      dup4\n      tag_2\n      jump\t// in\n    tag_835:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      dup8\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup8\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":29951:30032  _constantProductPair.swap(int256(lAmountOut / 2), true, address(this), bytes(\"\")) */\n      dup1\n      swap8\n      dup2\n      swap6\n      dup3\n      swap5\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xe12bd9d800000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":29951:30032  _constantProductPair.swap(int256(lAmountOut / 2), true, address(this), bytes(\"\")) */\n      dup5\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":27663:27667  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":29951:30032  _constantProductPair.swap(int256(lAmountOut / 2), true, address(this), bytes(\"\")) */\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":29951:30032  _constantProductPair.swap(int256(lAmountOut / 2), true, address(this), bytes(\"\")) */\n      dup6\n      add\n      tag_62\n      jump\t// in\n    tag_832:\n      sub\n      swap3\n      gas\n      call\n      swap2\n      dup3\n      iszero\n      tag_841\n      jumpi\n      dup5\n      swap3\n      tag_838\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_839:\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      mload(0x40)\n      0xa9059cbb00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":30042:30101  lToken1.transfer(address(_constantProductPair), lAmountOut) */\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap2\n      dup3\n      and\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":30042:30101  lToken1.transfer(address(_constantProductPair), lAmountOut) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n      0x24\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup5\n      swap1\n      mstore\n      swap3\n      swap2\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n      swap2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup5\n      swap2\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      0x44\n      swap2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup4\n      swap2\n      dup10\n      swap2\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":30042:30101  lToken1.transfer(address(_constantProductPair), lAmountOut) */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_841\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":30124:30202  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n      tag_843\n        /* \"test/unit/ConstantProductPair.t.sol\":30042:30101  lToken1.transfer(address(_constantProductPair), lAmountOut) */\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":30042:30101  lToken1.transfer(address(_constantProductPair), lAmountOut) */\n      swap3\n      tag_844\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_845:\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":30150:30169  -int256(lAmountOut) */\n      tag_846\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":30150:30169  -int256(lAmountOut) */\n      swap2\n      tag_55\n      jump\t// in\n    tag_846:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      mload(0x40)\n      swap2\n      tag_847\n      dup4\n      tag_2\n      jump\t// in\n    tag_847:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      dup7\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup7\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":30124:30202  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n      dup1\n      swap7\n      dup2\n      swap6\n      dup3\n      swap5\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xe12bd9d800000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":30124:30202  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n      dup5\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":27663:27667  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":30124:30202  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":30124:30202  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n      dup6\n      add\n      tag_62\n      jump\t// in\n    tag_843:\n      sub\n      swap3\n      gas\n      call\n      dup1\n      iszero\n      tag_215\n      jumpi\n      tag_850\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_851:\n      pop\n      dup2\n      0x40\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":30351:30391  _constantProductPair.burn(address(this)) */\n      dup1\n      swap5\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x89afcb4400000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":30351:30391  _constantProductPair.burn(address(this)) */\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":27663:27667  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":30351:30391  _constantProductPair.burn(address(this)) */\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":30351:30391  _constantProductPair.burn(address(this)) */\n      gas\n      call\n      dup1\n      iszero\n      tag_215\n      jumpi\n      tag_854\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_855:\n      pop\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":28428:28442  _platformFeeTo */\n      0x15\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":30422:30477  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      dup1\n      swap5\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":30422:30477  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":30422:30477  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      dup4\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":30422:30477  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_215\n      jumpi\n      dup3\n      swap1\n      dup5\n      swap1\n      tag_858\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_859:\n        /* \"test/unit/ConstantProductPair.t.sol\":30422:30495  _constantProductPair.balanceOf(address(_platformFeeTo)) - lPlatformShares */\n      tag_860\n      swap3\n      pop\n      tag_44\n      jump\t// in\n    tag_860:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":10779:10785  a >= b */\n      swap1\n      dup1\n      dup3\n      lt\n      iszero\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":10775:10975  if (a >= b) {... */\n      tag_861\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      dup1\n      return\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":10775:10975  if (a >= b) {... */\n    tag_861:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":10806:10846  log(\"Error: a < b not satisfied [uint]\") */\n      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x80\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      mstore\n      0x21\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      add\n      mstore\n      0x4572726f723a2061203c2062206e6f7420736174697366696564205b75696e74\n      0x40\n      dup3\n      add\n      mstore\n      0x5d00000000000000000000000000000000000000000000000000000000000000\n      0x60\n      dup3\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":10806:10846  log(\"Error: a < b not satisfied [uint]\") */\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      swap2\n      0x40\n      dup4\n      mstore\n      tag_863\n      0x40\n      dup5\n      add\n      0x40\n      swap1\n      0x09\n      dup2\n      mstore\n      0x202056616c756520610000000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_863:\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup5\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":10865:10895  log_named_uint(\"  Value a\", a) */\n      dup3\n      0xb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8\n      swap4\n      dup5\n      swap3\n      sub\n      swap1\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      dup1\n      swap2\n      0x40\n      dup3\n      mstore\n      tag_864\n      0x40\n      dup4\n      add\n      0x40\n      swap1\n      0x09\n      dup2\n      mstore\n      0x202056616c756520620000000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_864:\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup4\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":10914:10944  log_named_uint(\"  Value b\", b) */\n      sub\n      swap1\n      log1\n      tag_865\n      tag_42\n      jump\t// in\n    tag_865:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":10775:10975  if (a >= b) {... */\n      codesize\n      dup1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      dup1\n      return\n        /* \"test/unit/ConstantProductPair.t.sol\":30422:30477  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n    tag_858:\n      pop\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":30422:30477  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      dup2\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":30422:30477  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      gt\n      tag_866\n      jumpi\n    tag_867:\n      dup2\n      tag_868\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":30422:30477  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      swap4\n      dup4\n      tag_6\n      jump\t// in\n    tag_868:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":30422:30495  _constantProductPair.balanceOf(address(_platformFeeTo)) - lPlatformShares */\n      tag_860\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap2\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":30422:30477  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      jump(tag_859)\n    tag_866:\n      returndatasize\n      swap2\n      pop\n      jump(tag_867)\n        /* \"test/unit/ConstantProductPair.t.sol\":30351:30391  _constantProductPair.burn(address(this)) */\n    tag_854:\n      tag_871\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40\n        /* \"test/unit/ConstantProductPair.t.sol\":30351:30391  _constantProductPair.burn(address(this)) */\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40\n        /* \"test/unit/ConstantProductPair.t.sol\":30351:30391  _constantProductPair.burn(address(this)) */\n      gt\n      tag_407\n      jumpi\n      tag_409\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_871:\n      pop\n      jump(tag_855)\n        /* \"test/unit/ConstantProductPair.t.sol\":30124:30202  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n    tag_850:\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":30124:30202  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n      swap1\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_875\n      jumpi\n    tag_876:\n      tag_877\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_877:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":30124:30202  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n      codesize\n      jump(tag_851)\n    tag_875:\n      pop\n      returndatasize\n      jump(tag_876)\n        /* \"test/unit/ConstantProductPair.t.sol\":30042:30101  lToken1.transfer(address(_constantProductPair), lAmountOut) */\n    tag_844:\n      tag_880\n      swap1\n      dup4\n      returndatasize\n      dup6\n      gt\n      tag_547\n      jumpi\n      tag_549\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_880:\n      pop\n      codesize\n      jump(tag_845)\n    tag_841:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      returndatasize\n      dup7\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"test/unit/ConstantProductPair.t.sol\":29951:30032  _constantProductPair.swap(int256(lAmountOut / 2), true, address(this), bytes(\"\")) */\n    tag_838:\n      swap2\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":29951:30032  _constantProductPair.swap(int256(lAmountOut / 2), true, address(this), bytes(\"\")) */\n      dup3\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":29951:30032  _constantProductPair.swap(int256(lAmountOut / 2), true, address(this), bytes(\"\")) */\n      gt\n      tag_884\n      jumpi\n    tag_885:\n      dup2\n      tag_886\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":29951:30032  _constantProductPair.swap(int256(lAmountOut / 2), true, address(this), bytes(\"\")) */\n      swap4\n      dup4\n      tag_6\n      jump\t// in\n    tag_886:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n      swap1\n      mload\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":29951:30032  _constantProductPair.swap(int256(lAmountOut / 2), true, address(this), bytes(\"\")) */\n      jump(tag_839)\n    tag_884:\n      returndatasize\n      swap2\n      pop\n      jump(tag_885)\n        /* \"test/unit/ConstantProductPair.t.sol\":29865:29928  lToken0.transfer(address(_constantProductPair), lAmountOut / 2) */\n    tag_833:\n      tag_889\n      swap1\n      dup4\n      returndatasize\n      dup6\n      gt\n      tag_547\n      jumpi\n      tag_549\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_889:\n      pop\n      codesize\n      jump(tag_834)\n        /* \"test/unit/ConstantProductPair.t.sol\":29815:29855  _constantProductPair.burn(address(this)) */\n    tag_828:\n      tag_893\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40\n        /* \"test/unit/ConstantProductPair.t.sol\":29815:29855  _constantProductPair.burn(address(this)) */\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40\n        /* \"test/unit/ConstantProductPair.t.sol\":29815:29855  _constantProductPair.burn(address(this)) */\n      gt\n      tag_407\n      jumpi\n      tag_409\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_893:\n      pop\n      jump(tag_829)\n        /* \"test/unit/ConstantProductPair.t.sol\":29745:29805  _constantProductPair.setCustomPlatformFee(type(uint256).max) */\n    tag_823:\n      tag_897\n      swap1\n      tag_1\n      jump\t// in\n    tag_897:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_285\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":29745:29805  _constantProductPair.setCustomPlatformFee(type(uint256).max) */\n      dup4\n      codesize\n      jump(tag_824)\n        /* \"test/unit/ConstantProductPair.t.sol\":29708:29735  vm.prank(address(_factory)) */\n    tag_817:\n      tag_900\n      swap1\n      tag_1\n      jump\t// in\n    tag_900:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_285\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":29708:29735  vm.prank(address(_factory)) */\n      dup4\n      codesize\n      jump(tag_818)\n        /* \"test/unit/ConstantProductPair.t.sol\":29556:29611  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n    tag_810:\n      swap6\n      pop\n      pop\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":29556:29611  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      dup5\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":29556:29611  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      gt\n      tag_903\n      jumpi\n    tag_904:\n      dup2\n      tag_905\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":29556:29611  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      swap4\n      dup4\n      tag_6\n      jump\t// in\n    tag_905:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":29613:29628  lPlatformShares */\n      tag_812\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup6\n      dup8\n      swap6\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":29556:29611  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      swap1\n      swap2\n      jump(tag_811)\n    tag_903:\n      returndatasize\n      swap2\n      pop\n      jump(tag_904)\n        /* \"test/unit/ConstantProductPair.t.sol\":29497:29537  _constantProductPair.burn(address(this)) */\n    tag_806:\n      tag_908\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40\n        /* \"test/unit/ConstantProductPair.t.sol\":29497:29537  _constantProductPair.burn(address(this)) */\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40\n        /* \"test/unit/ConstantProductPair.t.sol\":29497:29537  _constantProductPair.burn(address(this)) */\n      gt\n      tag_407\n      jumpi\n      tag_409\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_908:\n      pop\n      jump(tag_807)\n        /* \"test/unit/ConstantProductPair.t.sol\":29390:29468  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n    tag_802:\n      swap4\n      pop\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":29390:29468  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n      dup4\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":29390:29468  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n      gt\n      tag_912\n      jumpi\n    tag_913:\n      dup2\n      tag_914\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":29390:29468  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n      swap4\n      dup4\n      tag_6\n      jump\t// in\n    tag_914:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n      dup5\n      swap3\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":29390:29468  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n      codesize\n      jump(tag_803)\n    tag_912:\n      returndatasize\n      swap2\n      pop\n      jump(tag_913)\n        /* \"test/unit/ConstantProductPair.t.sol\":29308:29367  lToken1.transfer(address(_constantProductPair), lAmountOut) */\n    tag_796:\n      tag_917\n      swap1\n      dup4\n      returndatasize\n      dup6\n      gt\n      tag_547\n      jumpi\n      tag_549\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_917:\n      pop\n      codesize\n      jump(tag_774)\n        /* \"test/unit/ConstantProductPair.t.sol\":29221:29298  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */\n    tag_790:\n      swap4\n      pop\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":29221:29298  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */\n      dup4\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":29221:29298  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */\n      gt\n      tag_921\n      jumpi\n    tag_922:\n      dup2\n      tag_923\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":29221:29298  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */\n      swap4\n      dup4\n      tag_6\n      jump\t// in\n    tag_923:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":29308:29367  lToken1.transfer(address(_constantProductPair), lAmountOut) */\n      tag_792\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup6\n      swap4\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":29221:29298  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */\n      swap1\n      jump(tag_791)\n    tag_921:\n      returndatasize\n      swap2\n      pop\n      jump(tag_922)\n        /* \"test/unit/ConstantProductPair.t.sol\":29139:29198  lToken0.transfer(address(_constantProductPair), lAmountOut) */\n    tag_785:\n      tag_926\n      swap1\n      dup4\n      returndatasize\n      dup6\n      gt\n      tag_547\n      jumpi\n      tag_549\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_926:\n      pop\n      codesize\n      jump(tag_763)\n        /* \"test/unit/ConstantProductPair.t.sol\":29051:29129  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n    tag_779:\n      swap4\n      pop\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":29051:29129  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n      dup4\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":29051:29129  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n      gt\n      tag_930\n      jumpi\n    tag_931:\n      dup2\n      tag_932\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":29051:29129  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n      swap4\n      dup4\n      tag_6\n      jump\t// in\n    tag_932:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":29139:29198  lToken0.transfer(address(_constantProductPair), lAmountOut) */\n      tag_781\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup6\n      swap4\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":29051:29129  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n      swap1\n      jump(tag_780)\n    tag_930:\n      returndatasize\n      swap2\n      pop\n      jump(tag_931)\n        /* \"test/unit/ConstantProductPair.t.sol\":28882:28959  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */\n    tag_767:\n      swap4\n      pop\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":28882:28959  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */\n      dup4\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":28882:28959  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */\n      gt\n      tag_939\n      jumpi\n    tag_940:\n      dup2\n      tag_941\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":28882:28959  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */\n      swap4\n      dup4\n      tag_6\n      jump\t// in\n    tag_941:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":28969:29028  lToken1.transfer(address(_constantProductPair), lAmountOut) */\n      tag_769\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup6\n      swap4\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":28882:28959  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */\n      swap1\n      jump(tag_768)\n    tag_939:\n      returndatasize\n      swap2\n      pop\n      jump(tag_940)\n        /* \"test/unit/ConstantProductPair.t.sol\":28695:28739  _constantProductPair.setCustomPlatformFee(0) */\n    tag_756:\n      tag_948\n      swap1\n      tag_1\n      jump\t// in\n    tag_948:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_285\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":28695:28739  _constantProductPair.setCustomPlatformFee(0) */\n      dup4\n      codesize\n      jump(tag_757)\n        /* \"test/unit/ConstantProductPair.t.sol\":28658:28685  vm.prank(address(_factory)) */\n    tag_750:\n      tag_951\n      swap1\n      tag_1\n      jump\t// in\n    tag_951:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_285\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":28658:28685  vm.prank(address(_factory)) */\n      dup4\n      codesize\n      jump(tag_751)\n        /* \"test/unit/ConstantProductPair.t.sol\":28535:28590  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n    tag_743:\n      swap4\n      pop\n      swap4\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":28535:28590  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      dup4\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":28535:28590  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      gt\n      tag_954\n      jumpi\n    tag_955:\n      dup2\n      tag_956\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":28535:28590  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      swap4\n      dup4\n      tag_6\n      jump\t// in\n    tag_956:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n      dup5\n      swap3\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":28535:28590  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      swap4\n      codesize\n      jump(tag_744)\n    tag_954:\n      returndatasize\n      swap2\n      pop\n      jump(tag_955)\n        /* \"test/unit/ConstantProductPair.t.sol\":28459:28499  _constantProductPair.burn(address(this)) */\n    tag_739:\n      tag_959\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40\n        /* \"test/unit/ConstantProductPair.t.sol\":28459:28499  _constantProductPair.burn(address(this)) */\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40\n        /* \"test/unit/ConstantProductPair.t.sol\":28459:28499  _constantProductPair.burn(address(this)) */\n      gt\n      tag_407\n      jumpi\n      tag_409\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_959:\n      pop\n      jump(tag_740)\n        /* \"test/unit/ConstantProductPair.t.sol\":28389:28444  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n    tag_734:\n      swap4\n      pop\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":28389:28444  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      dup4\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":28389:28444  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      gt\n      tag_963\n      jumpi\n    tag_964:\n      dup2\n      tag_965\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":28389:28444  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      swap4\n      dup4\n      tag_6\n      jump\t// in\n    tag_965:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":28380:28448  assertEq(_constantProductPair.balanceOf(address(_platformFeeTo)), 0) */\n      tag_736\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup6\n      swap4\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":28389:28444  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      swap1\n      jump(tag_735)\n    tag_963:\n      returndatasize\n      swap2\n      pop\n      jump(tag_964)\n        /* \"test/unit/ConstantProductPair.t.sol\":28313:28347  _constantProductPair.platformFee() */\n    tag_729:\n      swap4\n      pop\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":28313:28347  _constantProductPair.platformFee() */\n      dup4\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":28313:28347  _constantProductPair.platformFee() */\n      gt\n      tag_968\n      jumpi\n    tag_969:\n      dup2\n      tag_970\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":28313:28347  _constantProductPair.platformFee() */\n      swap4\n      dup4\n      tag_6\n      jump\t// in\n    tag_970:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":28349:28369  DEFAULT_PLATFORM_FEE */\n      tag_731\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup6\n      swap4\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":28313:28347  _constantProductPair.platformFee() */\n      swap1\n      jump(tag_730)\n    tag_968:\n      returndatasize\n      swap2\n      pop\n      jump(tag_969)\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":8794:8994  if (a < b) {... */\n    tag_725:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":8824:8865  log(\"Error: a >= b not satisfied [uint]\") */\n      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x80\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      mstore\n      0x22\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      add\n      mstore\n      0x4572726f723a2061203e3d2062206e6f7420736174697366696564205b75696e\n      0x40\n      dup3\n      add\n      mstore\n      0x745d000000000000000000000000000000000000000000000000000000000000\n      0x60\n      dup3\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":8824:8865  log(\"Error: a >= b not satisfied [uint]\") */\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      swap2\n      0x40\n      dup4\n      mstore\n      tag_973\n      0x40\n      dup5\n      add\n      0x40\n      swap1\n      0x09\n      dup2\n      mstore\n      0x202056616c756520610000000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_973:\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup5\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":8884:8914  log_named_uint(\"  Value a\", a) */\n      dup3\n      0xb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8\n      swap4\n      dup5\n      swap3\n      sub\n      swap1\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      dup1\n      swap2\n      0x40\n      dup3\n      mstore\n      tag_974\n      0x40\n      dup4\n      add\n      0x40\n      swap1\n      0x09\n      dup2\n      mstore\n      0x202056616c756520620000000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_974:\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup4\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":8933:8963  log_named_uint(\"  Value b\", b) */\n      sub\n      swap1\n      log1\n      tag_975\n      tag_42\n      jump\t// in\n    tag_975:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":8794:8994  if (a < b) {... */\n      codesize\n      dup1\n      jump(tag_726)\n        /* \"test/unit/ConstantProductPair.t.sol\":28224:28272  lToken1.balanceOf(address(_constantProductPair)) */\n    tag_723:\n      swap4\n      pop\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":28224:28272  lToken1.balanceOf(address(_constantProductPair)) */\n      dup4\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":28224:28272  lToken1.balanceOf(address(_constantProductPair)) */\n      gt\n      tag_976\n      jumpi\n    tag_977:\n      dup2\n      tag_978\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":28224:28272  lToken1.balanceOf(address(_constantProductPair)) */\n      swap4\n      dup4\n      tag_6\n      jump\t// in\n    tag_978:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n      dup5\n      swap3\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":28224:28272  lToken1.balanceOf(address(_constantProductPair)) */\n      codesize\n      jump(tag_724)\n    tag_976:\n      returndatasize\n      swap2\n      pop\n      jump(tag_977)\n        /* \"test/unit/ConstantProductPair.t.sol\":28135:28183  lToken0.balanceOf(address(_constantProductPair)) */\n    tag_718:\n      swap4\n      pop\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":28135:28183  lToken0.balanceOf(address(_constantProductPair)) */\n      dup4\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":28135:28183  lToken0.balanceOf(address(_constantProductPair)) */\n      gt\n      tag_981\n      jumpi\n    tag_982:\n      dup2\n      tag_983\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":28135:28183  lToken0.balanceOf(address(_constantProductPair)) */\n      swap4\n      dup4\n      tag_6\n      jump\t// in\n    tag_983:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":28185:28204  INITIAL_MINT_AMOUNT */\n      tag_720\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup6\n      swap4\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":28135:28183  lToken0.balanceOf(address(_constantProductPair)) */\n      swap1\n      jump(tag_719)\n    tag_981:\n      returndatasize\n      swap2\n      pop\n      jump(tag_982)\n        /* \"test/unit/ConstantProductPair.t.sol\":28089:28116  _constantProductPair.sync() */\n    tag_714:\n      tag_986\n      swap1\n      tag_1\n      jump\t// in\n    tag_986:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_291\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":28089:28116  _constantProductPair.sync() */\n      dup3\n      codesize\n      jump(tag_715)\n        /* \"test/unit/ConstantProductPair.t.sol\":28000:28078  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n    tag_708:\n      swap3\n      pop\n      swap3\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":28000:28078  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n      dup3\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":28000:28078  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n      gt\n      tag_989\n      jumpi\n    tag_990:\n      dup2\n      tag_991\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":28000:28078  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n      swap4\n      dup4\n      tag_6\n      jump\t// in\n    tag_991:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n      dup4\n      swap2\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":28000:28078  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n      swap3\n      codesize\n      jump(tag_709)\n    tag_989:\n      returndatasize\n      swap2\n      pop\n      jump(tag_990)\n        /* \"test/unit/ConstantProductPair.t.sol\":27918:27977  lToken1.transfer(address(_constantProductPair), lAmountOut) */\n    tag_702:\n      tag_994\n      swap1\n      dup4\n      returndatasize\n      dup6\n      gt\n      tag_547\n      jumpi\n      tag_549\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_994:\n      pop\n      codesize\n      jump(tag_703)\n        /* \"test/unit/ConstantProductPair.t.sol\":27830:27908  _constantProductPair.swap(int256(lSwapAmount), true, address(this), bytes(\"\")) */\n    tag_696:\n      swap3\n      pop\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":27830:27908  _constantProductPair.swap(int256(lSwapAmount), true, address(this), bytes(\"\")) */\n      dup3\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":27830:27908  _constantProductPair.swap(int256(lSwapAmount), true, address(this), bytes(\"\")) */\n      gt\n      tag_998\n      jumpi\n    tag_999:\n      dup2\n      tag_1000\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":27830:27908  _constantProductPair.swap(int256(lSwapAmount), true, address(this), bytes(\"\")) */\n      swap4\n      dup4\n      tag_6\n      jump\t// in\n    tag_1000:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n      swap1\n      mload\n      dup4\n      swap2\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":27918:27977  lToken1.transfer(address(_constantProductPair), lAmountOut) */\n      tag_698\n        /* \"test/unit/ConstantProductPair.t.sol\":27830:27908  _constantProductPair.swap(int256(lSwapAmount), true, address(this), bytes(\"\")) */\n      jump(tag_697)\n    tag_998:\n      returndatasize\n      swap2\n      pop\n      jump(tag_999)\n        /* \"test/unit/ConstantProductPair.t.sol\":27739:27799  lToken0.transfer(address(_constantProductPair), lSwapAmount) */\n    tag_690:\n      tag_1003\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":27739:27799  lToken0.transfer(address(_constantProductPair), lSwapAmount) */\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":27739:27799  lToken0.transfer(address(_constantProductPair), lSwapAmount) */\n      gt\n      tag_547\n      jumpi\n      tag_549\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1003:\n      pop\n      codesize\n      jump(tag_691)\n        /* \"lib/forge-std/src/StdStorage.sol\":10259:10283  vm.store(who, slot, set) */\n    tag_684:\n      tag_1007\n      swap1\n      tag_1\n      jump\t// in\n    tag_1007:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_255\n      jumpi\n        /* \"lib/forge-std/src/StdStorage.sol\":10259:10283  vm.store(who, slot, set) */\n      dup2\n      codesize\n      jump(tag_685)\n        /* \"lib/forge-std/src/StdStorage.sol\":10032:10250  if (fdat != curr) {... */\n    tag_677:\n        /* \"lib/forge-std/src/StdStorage.sol\":10064:10239  require(... */\n      tag_1010\n      tag_108\n      jump\t// in\n    tag_1010:\n        /* \"lib/forge-std/src/StdStorage.sol\":10032:10250  if (fdat != curr) {... */\n      jump(tag_678)\n        /* \"lib/forge-std/src/StdStorage.sol\":10003:10021  vm.load(who, slot) */\n    tag_675:\n      swap6\n      pop\n      swap1\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"lib/forge-std/src/StdStorage.sol\":10003:10021  vm.load(who, slot) */\n      dup6\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"lib/forge-std/src/StdStorage.sol\":10003:10021  vm.load(who, slot) */\n      gt\n      tag_1011\n      jumpi\n    tag_1012:\n      dup2\n      tag_1013\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"lib/forge-std/src/StdStorage.sol\":10003:10021  vm.load(who, slot) */\n      swap4\n      dup4\n      tag_6\n      jump\t// in\n    tag_1013:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n      dup7\n      swap5\n      mload\n        /* \"lib/forge-std/src/StdStorage.sol\":10003:10021  vm.load(who, slot) */\n      swap1\n      codesize\n      jump(tag_676)\n    tag_1011:\n      returndatasize\n      swap2\n      pop\n      jump(tag_1012)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_669:\n        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup8\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      mstore(0x04, 0x11)\n      revert\n        /* \"lib/forge-std/src/StdStorage.sol\":9607:9717  if (!self.finds[who][fsig][keccak256(abi.encodePacked(ins, field_depth))]) {... */\n    tag_663:\n        /* \"lib/forge-std/src/StdStorage.sol\":7670:7695  stdStorageSafe.find(self) */\n      tag_1016\n      tag_111\n      jump\t// in\n    tag_1016:\n      pop\n        /* \"lib/forge-std/src/StdStorage.sol\":9607:9717  if (!self.finds[who][fsig][keccak256(abi.encodePacked(ins, field_depth))]) {... */\n      jump(tag_664)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_654:\n        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup5\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      mstore(0x04, 0x32)\n      revert\n    tag_652:\n        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup5\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      mstore(0x04, 0x41)\n      revert\n        /* \"test/unit/ConstantProductPair.t.sol\":27538:27567  _constantProductPair.token1() */\n    tag_646:\n      tag_1017\n      swap2\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":27538:27567  _constantProductPair.token1() */\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":27538:27567  _constantProductPair.token1() */\n      gt\n      tag_1018\n      jumpi\n    tag_1019:\n      tag_1020\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1020:\n      dup2\n      add\n      swap1\n      tag_59\n      jump\t// in\n    tag_1017:\n      codesize\n      jump(tag_647)\n    tag_1018:\n      pop\n      returndatasize\n      jump(tag_1019)\n        /* \"test/unit/ConstantProductPair.t.sol\":27483:27512  _constantProductPair.token0() */\n    tag_642:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":27483:27512  _constantProductPair.token0() */\n      swap2\n      swap3\n      pop\n      tag_1021\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":27483:27512  _constantProductPair.token0() */\n      swap2\n      dup3\n      returndatasize\n      dup5\n      gt\n      tag_1018\n      jumpi\n      tag_1020\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1021:\n      swap3\n      swap2\n      pop\n      jump(tag_643)\n        /* \"test/unit/ConstantProductPair.t.sol\":27430:27457  _constantProductPair.sync() */\n    tag_638:\n      tag_1025\n      swap1\n      tag_1\n      jump\t// in\n    tag_1025:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_196\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":27430:27457  _constantProductPair.sync() */\n      dup1\n      codesize\n      jump(tag_639)\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n    tag_631:\n      pop\n      0x20\n      dup2\n      jumpi(tag_1028, gt(0x20, returndatasize))\n    tag_1029:\n      dup2\n      tag_1030\n      0x20\n      swap4\n      dup4\n      tag_6\n      jump\t// in\n    tag_1030:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":27373:27420  assertGt(_constantProductPair.platformFee(), 0) */\n      tag_633\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */\n      jump(tag_632)\n    tag_1028:\n      returndatasize\n      swap2\n      pop\n      jump(tag_1029)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_178:\n      pop\n      jumpi(tag_196, callvalue)\n      dup1\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_196\n      jumpi\n      0x20\n      mload(0x40)\n        /* \"test/__fixtures/BaseTest.sol\":924:931  250_000 */\n      0x03d090\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      mstore\n      return\n    tag_176:\n      pop\n      jumpi(tag_196, callvalue)\n      dup1\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_196\n      jumpi\n      0x20\n      mload(0x40)\n        /* \"test/__fixtures/BaseTest.sol\":1048:1057  0.0005e18 */\n      0x01c6bf52634000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      mstore\n      return\n    tag_174:\n      pop\n      jumpi(tag_196, callvalue)\n      dup1\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_196\n      jumpi\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":9836:9842  _alice */\n      dup2\n      0x16\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap2\n      dup1\n      dup4\n      sload\n      and\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"test/unit/ConstantProductPair.t.sol\":9822:9843  vm.startPrank(_alice) */\n      dup1\n      extcodesize\n      iszero\n      tag_285\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup4\n      dup1\n      swap3\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":9822:9843  vm.startPrank(_alice) */\n      swap3\n      dup4\n      swap2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x06447d5600000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":9822:9843  vm.startPrank(_alice) */\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":9822:9843  vm.startPrank(_alice) */\n      dup4\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":9822:9843  vm.startPrank(_alice) */\n      swap8\n      dup9\n      swap3\n      gas\n      call\n      dup1\n      iszero\n      tag_219\n      jumpi\n      tag_1049\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1050:\n      pop\n      pop\n      dup1\n        /* \"test/unit/ConstantProductPair.t.sol\":9879:9899  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      dup2\n      dup5\n      sload\n      and\n      swap1\n      mload(0x40)\n      swap5\n      dup7\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":9879:9917  _constantProductPair.balanceOf(_alice) */\n      swap5\n      dup6\n      dup9\n      mstore\n      dup5\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":9879:9917  _constantProductPair.balanceOf(_alice) */\n      dup10\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":9879:9917  _constantProductPair.balanceOf(_alice) */\n      swap7\n      dup8\n      dup10\n      dup3\n      dup2\n      dup9\n      gas\n      staticcall\n      swap9\n      dup10\n      iszero\n      tag_215\n      jumpi\n      dup4\n      swap10\n      tag_1053\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1054:\n      pop\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":9957:9991  _constantProductPair.totalSupply() */\n      swap7\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x18160ddd00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":9957:9991  _constantProductPair.totalSupply() */\n      dup9\n      mstore\n      dup9\n      dup9\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":9957:9991  _constantProductPair.totalSupply() */\n      dup2\n      dup10\n      gas\n      staticcall\n      swap8\n      dup9\n      iszero\n      tag_841\n      jumpi\n      dup5\n      swap9\n      tag_1057\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1058:\n      pop\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":10044:10078  _constantProductPair.getReserves() */\n      swap7\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x0902f1ac00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":10044:10078  _constantProductPair.getReserves() */\n      dup9\n      mstore\n      0x80\n      dup9\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":10044:10078  _constantProductPair.getReserves() */\n      dup2\n      dup11\n      gas\n      staticcall\n      swap7\n      dup8\n      iszero\n      tag_201\n      jumpi\n      dup6\n      swap9\n      dup7\n      swap9\n      tag_1061\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1062:\n      pop\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":10165:10203  _constantProductPair.balanceOf(_alice) */\n      swap2\n      dup4\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":10165:10203  _constantProductPair.balanceOf(_alice) */\n      dup4\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":10165:10203  _constantProductPair.balanceOf(_alice) */\n      dup11\n      dup3\n      dup6\n      dup2\n      dup5\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_376\n      jumpi\n      dup12\n      swap3\n      dup8\n      swap2\n      tag_1065\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1066:\n      pop\n      mload(0x40)\n      0xa9059cbb00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":10104:10204  _constantProductPair.transfer(address(_constantProductPair), _constantProductPair.balanceOf(_alice)) */\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":10104:10204  _constantProductPair.transfer(address(_constantProductPair), _constantProductPair.balanceOf(_alice)) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n      0x24\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap2\n      swap1\n      swap2\n      mstore\n      swap2\n      swap1\n      dup3\n      swap1\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      0x44\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      swap1\n      dup10\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":10104:10204  _constantProductPair.transfer(address(_constantProductPair), _constantProductPair.balanceOf(_alice)) */\n      gas\n      call\n      dup1\n      iszero\n      tag_201\n      jumpi\n      tag_1070\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1071:\n      pop\n      dup4\n      0x40\n      dup5\n        /* \"test/unit/ConstantProductPair.t.sol\":9879:9899  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      dup5\n      dup7\n      dup10\n      sload\n      and\n      dup4\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":10214:10247  _constantProductPair.burn(_alice) */\n      swap5\n      dup6\n      swap4\n      dup5\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x89afcb4400000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":10214:10247  _constantProductPair.burn(_alice) */\n      dup5\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":10214:10247  _constantProductPair.burn(_alice) */\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":10214:10247  _constantProductPair.burn(_alice) */\n      gas\n      call\n      dup1\n      iszero\n      tag_201\n      jumpi\n      tag_1074\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1075:\n      pop\n      dup3\n        /* \"test/unit/ConstantProductPair.t.sol\":9879:9899  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      swap5\n      dup10\n      dup5\n      dup3\n      sload\n      and\n      dup5\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":10285:10323  _constantProductPair.balanceOf(_alice) */\n      dup1\n      swap10\n      dup2\n      swap4\n      dup8\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":10285:10323  _constantProductPair.balanceOf(_alice) */\n      dup4\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":10285:10323  _constantProductPair.balanceOf(_alice) */\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_201\n      jumpi\n      dup11\n      swap7\n      dup7\n      swap2\n      tag_1078\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1079:\n        /* \"test/unit/ConstantProductPair.t.sol\":10276:10327  assertEq(_constantProductPair.balanceOf(_alice), 0) */\n      pop\n      tag_1080\n      swap1\n      tag_36\n      jump\t// in\n    tag_1080:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup4\n        /* \"test/unit/ConstantProductPair.t.sol\":10374:10426  _getToken0Token1(address(_tokenA), address(_tokenB)) */\n      tag_1081\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":10399:10406  _tokenA */\n      0x19\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      dup3\n        /* \"test/unit/ConstantProductPair.t.sol\":10417:10424  _tokenB */\n      0x1a\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":10374:10426  _getToken0Token1(address(_tokenA), address(_tokenB)) */\n      swap1\n      tag_49\n      jump\t// in\n    tag_1081:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap8\n      swap1\n      dup6\n      dup4\n      dup6\n      sload\n      and\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":10445:10491  ConstantProductPair(lToken0).balanceOf(_alice) */\n      swap5\n      dup6\n      swap4\n      dup5\n      swap3\n      dup10\n      dup5\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":10445:10491  ConstantProductPair(lToken0).balanceOf(_alice) */\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":10445:10491  ConstantProductPair(lToken0).balanceOf(_alice) */\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_376\n      jumpi\n      dup13\n      dup12\n      swap2\n      dup14\n      swap9\n      swap4\n      tag_1084\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1085:\n      pop\n      swap2\n        /* \"test/unit/ConstantProductPair.t.sol\":10493:10542  lLpTokenBalance * lReserve0 / lLpTokenTotalSupply */\n      tag_1086\n      tag_1087\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":10493:10520  lLpTokenBalance * lReserve0 */\n      tag_1088\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup10\n      swap7\n      swap6\n      0xffffffffffffffffffffffffff\n      swap15\n      dup16\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":10493:10520  lLpTokenBalance * lReserve0 */\n      swap1\n      tag_17\n      jump\t// in\n    tag_1088:\n        /* \"test/unit/ConstantProductPair.t.sol\":10493:10542  lLpTokenBalance * lReserve0 / lLpTokenTotalSupply */\n      tag_21\n      jump\t// in\n    tag_1086:\n      swap1\n      tag_39\n      jump\t// in\n    tag_1087:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      swap3\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":10562:10608  ConstantProductPair(lToken1).balanceOf(_alice) */\n      swap6\n      dup7\n      swap5\n      dup6\n      swap4\n      dup5\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":10562:10608  ConstantProductPair(lToken1).balanceOf(_alice) */\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":10562:10608  ConstantProductPair(lToken1).balanceOf(_alice) */\n      gas\n      staticcall\n      swap5\n      dup6\n      iszero\n      tag_1089\n      jumpi\n      dup8\n      swap6\n      tag_1091\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1092:\n      pop\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":10610:10659  lLpTokenBalance * lReserve1 / lLpTokenTotalSupply */\n      tag_316\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap5\n        /* \"test/unit/ConstantProductPair.t.sol\":10610:10659  lLpTokenBalance * lReserve1 / lLpTokenTotalSupply */\n      tag_1086\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap4\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":10610:10637  lLpTokenBalance * lReserve1 */\n      tag_1088\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap3\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":10610:10637  lLpTokenBalance * lReserve1 */\n      swap1\n      tag_17\n      jump\t// in\n        /* \"test/unit/ConstantProductPair.t.sol\":10562:10608  ConstantProductPair(lToken1).balanceOf(_alice) */\n    tag_1091:\n      swap1\n      dup1\n      swap3\n      swap6\n      pop\n      dup2\n      swap5\n      swap4\n      swap5\n      returndatasize\n      dup4\n      gt\n      tag_1096\n      jumpi\n    tag_1097:\n      tag_1098\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1098:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n      mload\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":10562:10608  ConstantProductPair(lToken1).balanceOf(_alice) */\n      swap1\n      swap2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      dup5\n        /* \"test/unit/ConstantProductPair.t.sol\":10610:10659  lLpTokenBalance * lReserve1 / lLpTokenTotalSupply */\n      tag_1086\n        /* \"test/unit/ConstantProductPair.t.sol\":10562:10608  ConstantProductPair(lToken1).balanceOf(_alice) */\n      jump(tag_1092)\n    tag_1096:\n      pop\n      returndatasize\n      jump(tag_1097)\n    tag_1089:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      returndatasize\n      dup10\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"test/unit/ConstantProductPair.t.sol\":10445:10491  ConstantProductPair(lToken0).balanceOf(_alice) */\n    tag_1084:\n      swap4\n      swap8\n      swap3\n      pop\n      pop\n      pop\n      dup2\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_1101\n      jumpi\n    tag_1102:\n      tag_1103\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1103:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n      mload\n      dup10\n      swap5\n      swap1\n      dup10\n      dup13\n        /* \"test/unit/ConstantProductPair.t.sol\":10493:10542  lLpTokenBalance * lReserve0 / lLpTokenTotalSupply */\n      tag_1086\n        /* \"test/unit/ConstantProductPair.t.sol\":10445:10491  ConstantProductPair(lToken0).balanceOf(_alice) */\n      jump(tag_1085)\n    tag_1101:\n      pop\n      returndatasize\n      jump(tag_1102)\n        /* \"test/unit/ConstantProductPair.t.sol\":10285:10323  _constantProductPair.balanceOf(_alice) */\n    tag_1078:\n      swap6\n      pop\n      pop\n      swap5\n      dup5\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_1106\n      jumpi\n    tag_1107:\n      tag_1108\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1108:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n      dup9\n      swap5\n        /* \"test/unit/ConstantProductPair.t.sol\":10276:10327  assertEq(_constantProductPair.balanceOf(_alice), 0) */\n      tag_1080\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup13\n      swap6\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":10285:10323  _constantProductPair.balanceOf(_alice) */\n      swap1\n      jump(tag_1079)\n    tag_1106:\n      pop\n      returndatasize\n      jump(tag_1107)\n        /* \"test/unit/ConstantProductPair.t.sol\":10214:10247  _constantProductPair.burn(_alice) */\n    tag_1074:\n      tag_1111\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40\n        /* \"test/unit/ConstantProductPair.t.sol\":10214:10247  _constantProductPair.burn(_alice) */\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40\n        /* \"test/unit/ConstantProductPair.t.sol\":10214:10247  _constantProductPair.burn(_alice) */\n      gt\n      tag_407\n      jumpi\n      tag_409\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1111:\n      pop\n      jump(tag_1075)\n        /* \"test/unit/ConstantProductPair.t.sol\":10104:10204  _constantProductPair.transfer(address(_constantProductPair), _constantProductPair.balanceOf(_alice)) */\n    tag_1070:\n      tag_1115\n      swap1\n      dup11\n      returndatasize\n      dup13\n      gt\n      tag_547\n      jumpi\n      tag_549\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1115:\n      pop\n      codesize\n      jump(tag_1071)\n        /* \"test/unit/ConstantProductPair.t.sol\":10165:10203  _constantProductPair.balanceOf(_alice) */\n    tag_1065:\n      swap3\n      dup1\n      swap3\n      swap8\n      pop\n      dup4\n      swap2\n      pop\n      returndatasize\n      dup4\n      gt\n      tag_1119\n      jumpi\n    tag_1120:\n      tag_1121\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1121:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n      mload\n      dup12\n      swap5\n      dup11\n      swap2\n      dup7\n        /* \"test/unit/ConstantProductPair.t.sol\":10165:10203  _constantProductPair.balanceOf(_alice) */\n      jump(tag_1066)\n    tag_1119:\n      pop\n      returndatasize\n      jump(tag_1120)\n        /* \"test/unit/ConstantProductPair.t.sol\":10044:10078  _constantProductPair.getReserves() */\n    tag_1061:\n      swap1\n      swap8\n      pop\n      tag_1124\n      swap2\n      swap9\n      pop\n      0x80\n      returndatasize\n      dup2\n      gt\n      tag_328\n      jumpi\n      tag_330\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1124:\n      pop\n      pop\n      swap8\n      swap1\n      swap8\n      swap7\n      codesize\n      jump(tag_1062)\n        /* \"test/unit/ConstantProductPair.t.sol\":9957:9991  _constantProductPair.totalSupply() */\n    tag_1057:\n      dup10\n      dup1\n      swap3\n      swap10\n      pop\n      dup2\n      swap6\n      pop\n      returndatasize\n      dup4\n      gt\n      tag_1128\n      jumpi\n    tag_1129:\n      tag_1130\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1130:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n      dup10\n      swap3\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":9957:9991  _constantProductPair.totalSupply() */\n      swap7\n      codesize\n      jump(tag_1058)\n    tag_1128:\n      pop\n      returndatasize\n      jump(tag_1129)\n        /* \"test/unit/ConstantProductPair.t.sol\":9879:9917  _constantProductPair.balanceOf(_alice) */\n    tag_1053:\n      dup9\n      dup1\n      swap3\n      swap11\n      pop\n      dup2\n      swap5\n      pop\n      returndatasize\n      dup4\n      gt\n      tag_1133\n      jumpi\n    tag_1134:\n      tag_1135\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1135:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n      dup9\n      swap2\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":9879:9917  _constantProductPair.balanceOf(_alice) */\n      swap8\n      codesize\n      jump(tag_1054)\n    tag_1133:\n      pop\n      returndatasize\n      jump(tag_1134)\n        /* \"test/unit/ConstantProductPair.t.sol\":9822:9843  vm.startPrank(_alice) */\n    tag_1049:\n      tag_1138\n      swap1\n      tag_1\n      jump\t// in\n    tag_1138:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_285\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":9822:9843  vm.startPrank(_alice) */\n      dup4\n      codesize\n      jump(tag_1050)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_172:\n      pop\n      jumpi(tag_196, callvalue)\n      dup1\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_196\n      jumpi\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":14333:14353  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      swap2\n      mload(0x40)\n      swap3\n      0x0902f1ac00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":14333:14367  _constantProductPair.getReserves() */\n      dup1\n      dup6\n      mstore\n      0x80\n      swap3\n      dup4\n      dup7\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":14333:14367  _constantProductPair.getReserves() */\n      dup2\n      dup7\n      gas\n      staticcall\n      swap6\n      dup7\n      iszero\n      tag_201\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup6\n        /* \"test/unit/ConstantProductPair.t.sol\":14333:14367  _constantProductPair.getReserves() */\n      swap7\n      tag_1147\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1148:\n        /* \"test/__fixtures/BaseTest.sol\":5270:5993  function _writeObservation(... */\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x00\n        /* \"test/__fixtures/BaseTest.sol\":5488:5495  2 ** 31 */\n      0x80000000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x7fffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":14483:14498  block.timestamp */\n      timestamp\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      and\n        /* \"test/__fixtures/BaseTest.sol\":5480:5495  aTime < 2 ** 31 */\n      lt\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      iszero\n      tag_1149\n      jumpi\n      mload(0x40)\n      swap1\n      0x20\n      swap5\n      dup6\n      dup4\n      add\n      0x7fffffff00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":14483:14498  block.timestamp */\n      timestamp\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xe0\n      shl\n      and\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      swap4\n      dup4\n      dup6\n      dup3\n      add\n      mstore\n      0x7fffffffffffff00000000000000000000000000000000000000000000000000\n      0x2b\n      dup3\n      add\n      mstore\n      0x7fffffffffffffffffffffffffff000000000000000000000000000000000000\n      0x32\n      dup3\n      add\n      mstore\n      dup8\n      dup2\n      mstore\n      tag_1151\n      dup2\n      tag_4\n      jump\t// in\n    tag_1151:\n      mload\n      swap1\n      mload\n      swap1\n      dup8\n      dup2\n      lt\n      tag_1152\n      jumpi\n    tag_1153:\n      pop\n      swap1\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"test/__fixtures/BaseTest.sol\":5727:5738  vm.record() */\n      swap1\n      dup2\n      extcodesize\n      iszero\n      tag_285\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      0x266cf10900000000000000000000000000000000000000000000000000000000\n        /* \"test/__fixtures/BaseTest.sol\":5727:5738  vm.record() */\n      dup2\n      mstore\n      dup5\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/__fixtures/BaseTest.sol\":5727:5738  vm.record() */\n      dup2\n      dup4\n      dup8\n      gas\n      call\n      dup1\n      iszero\n      tag_201\n      jumpi\n      swap1\n      dup13\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      tag_1158\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1159:\n      pop\n      0x44\n      dup11\n      dup9\n      dup12\n      sload\n      and\n      mload(0x40)\n      swap3\n      dup4\n      dup1\n      swap3\n      0xffff\n      0xc9d163d100000000000000000000000000000000000000000000000000000000\n        /* \"test/__fixtures/BaseTest.sol\":5748:5788  _oracleCaller.observation(aPair, aIndex) */\n      swap13\n      dup14\n      dup5\n      mstore\n      dup9\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/__fixtures/BaseTest.sol\":5748:5788  _oracleCaller.observation(aPair, aIndex) */\n      dup6\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n      and\n      dup12\n      dup4\n      add\n      mstore\n        /* \"test/__fixtures/BaseTest.sol\":5748:5788  _oracleCaller.observation(aPair, aIndex) */\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_201\n      jumpi\n      tag_1162\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1163:\n      pop\n      mload(0x40)\n      0x65bc948100000000000000000000000000000000000000000000000000000000\n        /* \"test/__fixtures/BaseTest.sol\":5830:5857  vm.accesses(address(aPair)) */\n      dup2\n      mstore\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/__fixtures/BaseTest.sol\":5830:5857  vm.accesses(address(aPair)) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/__fixtures/BaseTest.sol\":5830:5857  vm.accesses(address(aPair)) */\n      dup5\n      dup2\n      dup8\n      dup2\n      dup4\n      dup8\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_201\n      jumpi\n      dup6\n      swap2\n      tag_1166\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1167:\n      pop\n        /* \"test/__fixtures/BaseTest.sol\":5895:5896  2 */\n      0x02\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      mload\n        /* \"test/__fixtures/BaseTest.sol\":5875:5896  lAccesses.length == 2 */\n      sub\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_1168\n      jumpi\n        /* \"test/__fixtures/BaseTest.sol\":5963:5975  lAccesses[1] */\n      tag_1170\n      swap1\n      tag_82\n      jump\t// in\n    tag_1170:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n        /* \"test/__fixtures/BaseTest.sol\":5938:5986  vm.store(address(aPair), lAccesses[1], lEncoded) */\n      swap1\n      dup3\n      extcodesize\n      iszero\n      tag_249\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      0x70ca10bb00000000000000000000000000000000000000000000000000000000\n        /* \"test/__fixtures/BaseTest.sol\":5938:5986  vm.store(address(aPair), lAccesses[1], lEncoded) */\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap2\n      swap1\n      swap2\n      and\n      0x04\n        /* \"test/__fixtures/BaseTest.sol\":5938:5986  vm.store(address(aPair), lAccesses[1], lEncoded) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x44\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      dup3\n      swap1\n      dup3\n      swap1\n      0x64\n      swap1\n      dup3\n      swap1\n      dup5\n      swap1\n        /* \"test/__fixtures/BaseTest.sol\":5938:5986  vm.store(address(aPair), lAccesses[1], lEncoded) */\n      gas\n      call\n      dup1\n      iszero\n      tag_219\n      jumpi\n      tag_1176\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1177:\n      pop\n      pop\n      dup5\n      sload\n        /* \"test/unit/ConstantProductPair.t.sol\":14333:14353  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":14559:14614  _oracleCaller.observation(_constantProductPair, lIndex) */\n      dup5\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      dup6\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":14559:14614  _oracleCaller.observation(_constantProductPair, lIndex) */\n      dup4\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n      0xffff\n      swap11\n      swap1\n      swap11\n      and\n      0x24\n      dup3\n      add\n      mstore\n      swap8\n      swap9\n      swap7\n      swap8\n      swap7\n      dup10\n      swap2\n      dup10\n      swap1\n      dup10\n      swap1\n      0x44\n      swap1\n      dup3\n      swap1\n      dup10\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":14559:14614  _oracleCaller.observation(_constantProductPair, lIndex) */\n      gas\n      staticcall\n      swap8\n      dup9\n      iszero\n      tag_219\n      jumpi\n      dup3\n      swap9\n      tag_1181\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1182:\n      pop\n      dup5\n        /* \"test/unit/ConstantProductPair.t.sol\":14678:14685  _tokenB */\n      0x1a\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":14678:14736  _tokenB.mint(address(_constantProductPair), lAmountToSwap) */\n      swap1\n      dup2\n      extcodesize\n      iszero\n      tag_291\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      swap2\n      0x44\n      dup4\n      swap3\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":14678:14736  _tokenB.mint(address(_constantProductPair), lAmountToSwap) */\n      swap5\n      dup6\n      swap4\n      dup5\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40c10f1900000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":14678:14736  _tokenB.mint(address(_constantProductPair), lAmountToSwap) */\n      dup5\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":14678:14736  _tokenB.mint(address(_constantProductPair), lAmountToSwap) */\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":14664:14668  1e18 */\n      0x0de0b6b3a7640000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup10\n      dup5\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":14678:14736  _tokenB.mint(address(_constantProductPair), lAmountToSwap) */\n      gas\n      call\n      dup1\n      iszero\n      tag_219\n      jumpi\n      tag_1187\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1188:\n      pop\n      pop\n      dup5\n        /* \"test/unit/ConstantProductPair.t.sol\":14796:14800  true */\n      0x01\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xa4\n      dup6\n        /* \"test/unit/ConstantProductPair.t.sol\":14333:14353  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      swap4\n      dup12\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":14746:14820  _constantProductPair.swap(-int256(lAmountToSwap), true, address(this), \"\") */\n      swap6\n      dup7\n      swap5\n      dup6\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xe12bd9d800000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":14746:14820  _constantProductPair.swap(-int256(lAmountToSwap), true, address(this), \"\") */\n      dup6\n      mstore\n        /* \"lib/forge-std/src/StdMath.sol\":124:202  -57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":14746:14820  _constantProductPair.swap(-int256(lAmountToSwap), true, address(this), \"\") */\n      dup7\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n      dup5\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":14810:14814  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x44\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup13\n      0x64\n      dup5\n      add\n      mstore\n      0x00\n      0x84\n      dup5\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":14746:14820  _constantProductPair.swap(-int256(lAmountToSwap), true, address(this), \"\") */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_1200\n      jumpi\n      dup6\n      swap2\n      tag_1191\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1192:\n        /* \"test/unit/ConstantProductPair.t.sol\":14831:14843  _stepTime(5) */\n      pop\n      pop\n      tag_1193\n      tag_77\n      jump\t// in\n    tag_1193:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup7\n      dup3\n        /* \"test/unit/ConstantProductPair.t.sol\":14333:14353  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":14853:14880  _constantProductPair.sync() */\n      dup1\n      extcodesize\n      iszero\n      tag_255\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      dup1\n      swap2\n      0x04\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":14853:14880  _constantProductPair.sync() */\n      dup1\n      swap5\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xfff6cae900000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":14853:14880  _constantProductPair.sync() */\n      dup4\n      mstore\n      gas\n      call\n      dup1\n      iszero\n      tag_219\n      jumpi\n      tag_1198\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1199:\n      pop\n      pop\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":14333:14353  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":15006:15040  _constantProductPair.getReserves() */\n      swap4\n      dup5\n      mstore\n      dup7\n      dup5\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":15006:15040  _constantProductPair.getReserves() */\n      dup2\n      dup5\n      gas\n      staticcall\n      swap3\n      dup4\n      iszero\n      tag_1200\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":15080:15135  _oracleCaller.observation(_constantProductPair, lIndex) */\n      tag_1202\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap6\n      dup9\n      swap6\n      dup11\n        /* \"test/unit/ConstantProductPair.t.sol\":15006:15040  _constantProductPair.getReserves() */\n      swap6\n      tag_1203\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1204:\n      pop\n      sload\n      and\n      swap2\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":15080:15135  _oracleCaller.observation(_constantProductPair, lIndex) */\n      swap6\n      dup7\n      swap5\n      dup6\n      swap4\n      dup5\n      swap4\n      dup5\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":15080:15135  _oracleCaller.observation(_constantProductPair, lIndex) */\n      dup5\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      swap3\n      swap2\n      0xffff\n      0x20\n      swap2\n      0xffffffffffffffffffffffffffffffffffffffff\n      0x40\n      dup6\n      add\n      swap7\n      and\n      dup5\n      mstore\n      and\n      swap2\n      add\n      mstore\n      jump\n        /* \"test/unit/ConstantProductPair.t.sol\":15080:15135  _oracleCaller.observation(_constantProductPair, lIndex) */\n    tag_1202:\n      sub\n      swap2\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_841\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":15145:15203  assertLt(lCurrObs.logAccRawPrice, lPrevObs.logAccRawPrice) */\n      tag_316\n        /* \"test/unit/ConstantProductPair.t.sol\":15080:15135  _oracleCaller.observation(_constantProductPair, lIndex) */\n      swap4\n      dup6\n      swap3\n      tag_1208\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1209:\n      pop\n      pop\n      mload\n      swap1\n      mload\n      0x0d\n      signextend\n      swap1\n      0x0d\n      signextend\n        /* \"test/unit/ConstantProductPair.t.sol\":15145:15203  assertLt(lCurrObs.logAccRawPrice, lPrevObs.logAccRawPrice) */\n      tag_86\n      jump\t// in\n        /* \"test/unit/ConstantProductPair.t.sol\":15080:15135  _oracleCaller.observation(_constantProductPair, lIndex) */\n    tag_1208:\n      tag_1210\n      swap3\n      pop\n      dup1\n      returndatasize\n      lt\n      tag_320\n      jumpi\n      tag_322\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1210:\n      codesize\n      dup1\n      jump(tag_1209)\n        /* \"test/unit/ConstantProductPair.t.sol\":15006:15040  _constantProductPair.getReserves() */\n    tag_1203:\n      tag_1214\n      swap2\n      swap6\n      pop\n      dup7\n      returndatasize\n      dup9\n      gt\n      tag_328\n      jumpi\n      tag_330\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1214:\n      swap3\n      pop\n      pop\n      pop\n      swap4\n      codesize\n      jump(tag_1204)\n    tag_1200:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      returndatasize\n      dup11\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"test/unit/ConstantProductPair.t.sol\":14853:14880  _constantProductPair.sync() */\n    tag_1198:\n      tag_1218\n      swap1\n      tag_1\n      jump\t// in\n    tag_1218:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_1219\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":14853:14880  _constantProductPair.sync() */\n      dup7\n      codesize\n      jump(tag_1199)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1219:\n      dup7\n      dup1\n      revert\n        /* \"test/unit/ConstantProductPair.t.sol\":14746:14820  _constantProductPair.swap(-int256(lAmountToSwap), true, address(this), \"\") */\n    tag_1191:\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_1221\n      jumpi\n    tag_1222:\n      tag_1223\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1223:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":14746:14820  _constantProductPair.swap(-int256(lAmountToSwap), true, address(this), \"\") */\n      dup4\n      codesize\n      jump(tag_1192)\n    tag_1221:\n      pop\n      returndatasize\n      jump(tag_1222)\n        /* \"test/unit/ConstantProductPair.t.sol\":14678:14736  _tokenB.mint(address(_constantProductPair), lAmountToSwap) */\n    tag_1187:\n      tag_1226\n      swap1\n      tag_1\n      jump\t// in\n    tag_1226:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_1227\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":14678:14736  _tokenB.mint(address(_constantProductPair), lAmountToSwap) */\n      dup8\n      codesize\n      jump(tag_1188)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1227:\n      dup8\n      dup1\n      revert\n        /* \"test/unit/ConstantProductPair.t.sol\":14559:14614  _oracleCaller.observation(_constantProductPair, lIndex) */\n    tag_1181:\n      tag_1229\n      swap2\n      swap9\n      pop\n      dup10\n      returndatasize\n      dup12\n      gt\n      tag_320\n      jumpi\n      tag_322\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1229:\n      swap7\n      codesize\n      jump(tag_1182)\n        /* \"test/__fixtures/BaseTest.sol\":5938:5986  vm.store(address(aPair), lAccesses[1], lEncoded) */\n    tag_1176:\n      tag_1233\n      dup3\n      swap2\n      tag_1\n      jump\t// in\n    tag_1233:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_196\n      jumpi\n        /* \"test/__fixtures/BaseTest.sol\":5938:5986  vm.store(address(aPair), lAccesses[1], lEncoded) */\n      dup1\n      jump(tag_1177)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1168:\n      0x64\n      dup11\n      0x1a\n      dup9\n      mload(0x40)\n      swap3\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup5\n      mstore\n      0x04\n      dup5\n      add\n      mstore\n      dup3\n      add\n      mstore\n      0x696e76616c6964206e756d626572206f66206163636573736573000000000000\n      0x44\n      dup3\n      add\n      mstore\n      revert\n        /* \"test/__fixtures/BaseTest.sol\":5830:5857  vm.accesses(address(aPair)) */\n    tag_1166:\n      tag_1236\n      swap2\n      pop\n      returndatasize\n      dup1\n      dup8\n      dup4\n      returndatacopy\n      tag_1237\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1237:\n      dup2\n      add\n      swap1\n      tag_81\n      jump\t// in\n    tag_1236:\n      pop\n      codesize\n      jump(tag_1167)\n        /* \"test/__fixtures/BaseTest.sol\":5748:5788  _oracleCaller.observation(aPair, aIndex) */\n    tag_1162:\n      tag_1238\n      swap1\n      dup12\n      returndatasize\n      dup14\n      gt\n      tag_320\n      jumpi\n      tag_322\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1238:\n      pop\n      codesize\n      jump(tag_1163)\n        /* \"test/__fixtures/BaseTest.sol\":5727:5738  vm.record() */\n    tag_1158:\n      tag_1242\n      swap1\n      swap5\n      swap2\n      swap5\n      tag_1\n      jump\t// in\n    tag_1242:\n      swap3\n      codesize\n      jump(tag_1159)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1152:\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      swap1\n      dup9\n      sub\n      0x03\n      shl\n      shl\n      and\n      codesize\n      jump(tag_1153)\n    tag_1149:\n      0x64\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x11\n      0x24\n      dup3\n      add\n      mstore\n      0x54494d455354414d5020544f4f20424947000000000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      revert\n        /* \"test/unit/ConstantProductPair.t.sol\":14333:14367  _constantProductPair.getReserves() */\n    tag_1147:\n      tag_1243\n      swap2\n      swap7\n      pop\n      dup5\n      returndatasize\n      dup7\n      gt\n      tag_328\n      jumpi\n      tag_330\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1243:\n      swap3\n      pop\n      pop\n      pop\n      swap5\n      codesize\n      jump(tag_1148)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_170:\n      pop\n      jumpi(tag_196, callvalue)\n      dup1\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_196\n      jumpi\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n        /* \"test/unit/ConstantProductPair.t.sol\":17639:17689  _createPair(address(_tokenA), address(_tokenD), 0) */\n      tag_1251\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":17659:17666  _tokenA */\n      0x19\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      dup3\n        /* \"test/unit/ConstantProductPair.t.sol\":17677:17684  _tokenD */\n      0x1c\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":17639:17689  _createPair(address(_tokenA), address(_tokenD), 0) */\n      swap1\n      tag_46\n      jump\t// in\n    tag_1251:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      and\n      swap1\n      dup1\n        /* \"test/unit/ConstantProductPair.t.sol\":17659:17666  _tokenA */\n      0x19\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":17700:17736  _tokenA.mint(address(lPair), 100e18) */\n      dup1\n      extcodesize\n      iszero\n      tag_285\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      0x40c10f1900000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":17700:17736  _tokenA.mint(address(lPair), 100e18) */\n      dup1\n      dup3\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":17700:17736  _tokenA.mint(address(lPair), 100e18) */\n      dup4\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":18441:18447  100e18 */\n      0x056bc75e2d63100000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      dup4\n      add\n      mstore\n      swap1\n      swap2\n      dup6\n      swap1\n      dup4\n      swap1\n      0x44\n      swap1\n      dup3\n      swap1\n      dup5\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":17700:17736  _tokenA.mint(address(lPair), 100e18) */\n      gas\n      call\n      swap2\n      dup3\n      iszero\n      tag_312\n      jumpi\n      dup6\n      swap3\n      tag_1257\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1258:\n      pop\n      dup3\n        /* \"test/unit/ConstantProductPair.t.sol\":17677:17684  _tokenD */\n      0x1c\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":17746:17780  _tokenD.mint(address(lPair), 50e6) */\n      dup1\n      extcodesize\n      iszero\n      tag_291\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x44\n      dup4\n      swap3\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":17746:17780  _tokenD.mint(address(lPair), 50e6) */\n      swap5\n      dup6\n      swap4\n      dup5\n      swap3\n      dup4\n      mstore\n      dup9\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":17746:17780  _tokenD.mint(address(lPair), 50e6) */\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":17775:17779  50e6 */\n      0x02faf080\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      dup5\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":17746:17780  _tokenD.mint(address(lPair), 50e6) */\n      gas\n      call\n      dup1\n      iszero\n      tag_312\n      jumpi\n      tag_1263\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1264:\n      pop\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":17790:17815  lPair.mint(address(this)) */\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x6a62784200000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":17790:17815  lPair.mint(address(this)) */\n      dup3\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":17809:17813  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":17790:17815  lPair.mint(address(this)) */\n      dup4\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":17790:17815  lPair.mint(address(this)) */\n      swap2\n      dup3\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":17790:17815  lPair.mint(address(this)) */\n      dup2\n      dup9\n      dup9\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_312\n      jumpi\n      dup4\n      swap2\n      tag_1267\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1268:\n        /* \"test/unit/ConstantProductPair.t.sol\":17841:17853  _stepTime(5) */\n      pop\n      pop\n      tag_1269\n      tag_77\n      jump\t// in\n    tag_1269:\n        /* \"test/unit/ConstantProductPair.t.sol\":17863:17875  lPair.sync() */\n      dup3\n      extcodesize\n      iszero\n      tag_285\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":17863:17875  lPair.sync() */\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xfff6cae900000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":17863:17875  lPair.sync() */\n      dup5\n      mstore\n      dup5\n      dup5\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":17863:17875  lPair.sync() */\n      dup2\n      dup4\n      dup6\n      gas\n      call\n      swap2\n      dup3\n      iszero\n      tag_312\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":17930:17965  _oracleCaller.observation(lPair, 0) */\n      tag_1274\n        /* \"test/unit/ConstantProductPair.t.sol\":17863:17875  lPair.sync() */\n      swap5\n        /* \"test/unit/ConstantProductPair.t.sol\":17930:17965  _oracleCaller.observation(lPair, 0) */\n      0x80\n        /* \"test/unit/ConstantProductPair.t.sol\":17863:17875  lPair.sync() */\n      swap4\n      tag_1275\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1276:\n      pop\n      dup4\n      sload\n      and\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":17930:17965  _oracleCaller.observation(lPair, 0) */\n      dup1\n      dup1\n      swap7\n      dup2\n      swap5\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xc9d163d100000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":17930:17965  _oracleCaller.observation(lPair, 0) */\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":17930:17965  _oracleCaller.observation(lPair, 0) */\n      dup4\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n      0x00\n      swap2\n      swap4\n      swap3\n      swap4\n      0xffffffffffffffffffffffffffffffffffffffff\n      0x40\n      dup3\n      add\n      swap6\n      and\n      dup2\n      mstore\n      add\n      mstore\n      jump\n        /* \"test/unit/ConstantProductPair.t.sol\":17930:17965  _oracleCaller.observation(lPair, 0) */\n    tag_1274:\n      sub\n      swap2\n      gas\n      staticcall\n      swap2\n      dup3\n      iszero\n      tag_312\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x05\n        /* \"test/unit/ConstantProductPair.t.sol\":17930:17965  _oracleCaller.observation(lPair, 0) */\n      swap3\n        /* \"src/libraries/LogCompression.sol\":2760:2807  LogExpMath.exp(value * _LOG_COMPRESSION_FACTOR) */\n      tag_1279\n        /* \"test/unit/ConstantProductPair.t.sol\":17930:17965  _oracleCaller.observation(lPair, 0) */\n      swap2\n      dup6\n      swap2\n      tag_1280\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1281:\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      pop\n      0x5af3107a4000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap4\n      dup5\n      swap2\n      mload\n      0x0d\n      signextend\n      sdiv\n      0x0d\n      signextend\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      mul\n        /* \"src/libraries/LogCompression.sol\":2760:2807  LogExpMath.exp(value * _LOG_COMPRESSION_FACTOR) */\n      tag_96\n      jump\t// in\n    tag_1279:\n        /* \"test/unit/ConstantProductPair.t.sol\":18048:18054  0.5e18 */\n      0x06f05b59d3b20000\n      swap2\n        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x00\n        /* \"lib/forge-std/src/StdMath.sol\":607:612  a > b */\n      dup4\n      dup3\n      gt\n        /* \"test/unit/ConstantProductPair.t.sol\":18048:18054  0.5e18 */\n      iszero\n      tag_1282\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      pop\n      0xfffffffffffffffffffffffffffffffffffffffffffffffff90fa4a62c4e0000\n      dup2\n      add\n      dup2\n      dup2\n      gt\n      tag_505\n      jumpi\n        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */\n    tag_1286:\n        /* \"lib/forge-std/src/StdMath.sol\":1144:1148  1e18 */\n      0x0de0b6b3a7640000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      dup2\n      dup2\n      mul\n      swap2\n      dup2\n      dup4\n      div\n      eq\n      swap1\n      iszero\n      or\n      iszero\n      tag_505\n      jumpi\n      dup4\n      swap1\n      div\n        /* \"lib/forge-std/src/StdAssertions.sol\":5389:5419  percentDelta > maxPercentDelta */\n      swap4\n      dup5\n      gt\n        /* \"lib/forge-std/src/StdAssertions.sol\":5385:5769  if (percentDelta > maxPercentDelta) {... */\n      tag_1289\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup5\n      dup1\n      return\n        /* \"lib/forge-std/src/StdAssertions.sol\":5385:5769  if (percentDelta > maxPercentDelta) {... */\n    tag_1289:\n        /* \"lib/forge-std/src/StdAssertions.sol\":5440:5481  log(\"Error: a ~= b not satisfied [uint]\") */\n      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50\n        /* \"test/unit/ConstantProductPair.t.sol\":17930:17965  _oracleCaller.observation(lPair, 0) */\n      0x80\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      dup5\n      dup2\n      mstore\n      0x22\n      dup6\n      dup3\n      add\n      mstore\n      0x4572726f723a2061207e3d2062206e6f7420736174697366696564205b75696e\n      0x40\n      dup3\n      add\n      mstore\n      0x745d000000000000000000000000000000000000000000000000000000000000\n      0x60\n      dup3\n      add\n      mstore\n        /* \"lib/forge-std/src/StdAssertions.sol\":5440:5481  log(\"Error: a ~= b not satisfied [uint]\") */\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      swap3\n      0x40\n      dup5\n      mstore\n      tag_1291\n      0x40\n      dup6\n      add\n      0x40\n      swap1\n      0x0c\n      dup2\n      mstore\n      0x2020202045787065637465640000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_1291:\n      swap1\n      dup4\n      dup6\n      add\n      mstore\n        /* \"lib/forge-std/src/StdAssertions.sol\":5500:5533  log_named_uint(\"    Expected\", b) */\n      dup4\n      0xb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8\n      swap5\n      dup6\n      swap3\n      sub\n      swap1\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      swap2\n      dup3\n      swap2\n      0x40\n      dup4\n      mstore\n      tag_1292\n      0x40\n      dup5\n      add\n      0x40\n      swap1\n      0x0c\n      dup2\n      mstore\n      0x20202020202041637475616c0000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_1292:\n      swap2\n      dup4\n      add\n      mstore\n        /* \"lib/forge-std/src/StdAssertions.sol\":5552:5585  log_named_uint(\"      Actual\", a) */\n      sub\n      swap1\n      log1\n        /* \"lib/forge-std/src/StdAssertions.sol\":5682:5738  log_named_decimal_uint(\"     % Delta\", percentDelta, 18) */\n      tag_1293\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"lib/forge-std/src/StdAssertions.sol\":5604:5663  log_named_decimal_uint(\" Max % Delta\", maxPercentDelta, 18) */\n      swap2\n      0xeb8ba43ced7537421946bd43e828b8b2b8428927aa8f801c13d934bf11aca57b\n      dup4\n      dup1\n      tag_512\n      dup4\n      swap7\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      0x60\n      dup3\n      mstore\n      0x0c\n      0x60\n      dup4\n      add\n      mstore\n      0x204d617820252044656c74610000000000000000000000000000000000000000\n      0x80\n      dup4\n      add\n      mstore\n        /* \"lib/forge-std/src/StdAssertions.sol\":6831:6833  18 */\n      0x12\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40\n      0xa0\n      dup5\n      add\n      swap4\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      0x5af3107a4000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n      dup3\n      add\n      mstore\n      add\n      mstore\n      jump\n        /* \"lib/forge-std/src/StdAssertions.sol\":5682:5738  log_named_decimal_uint(\"     % Delta\", percentDelta, 18) */\n    tag_1293:\n      sub\n      swap1\n      log1\n      tag_1295\n      tag_42\n      jump\t// in\n    tag_1295:\n        /* \"lib/forge-std/src/StdAssertions.sol\":5385:5769  if (percentDelta > maxPercentDelta) {... */\n      codesize\n      dup1\n      dup1\n      dup1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup5\n      dup1\n      return\n        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */\n    tag_1282:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      dup5\n      sub\n      swap1\n      dup5\n      dup3\n      gt\n      tag_514\n      jumpi\n        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */\n      pop\n      jump(tag_1286)\n        /* \"test/unit/ConstantProductPair.t.sol\":17930:17965  _oracleCaller.observation(lPair, 0) */\n    tag_1280:\n      tag_1298\n      swap2\n      pop\n      0x80\n      returndatasize\n      dup2\n      gt\n      tag_320\n      jumpi\n      tag_322\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1298:\n      codesize\n      jump(tag_1281)\n        /* \"test/unit/ConstantProductPair.t.sol\":17863:17875  lPair.sync() */\n    tag_1275:\n      tag_1302\n      swap1\n      tag_1\n      jump\t// in\n    tag_1302:\n      codesize\n      jump(tag_1276)\n        /* \"test/unit/ConstantProductPair.t.sol\":17790:17815  lPair.mint(address(this)) */\n    tag_1267:\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_1303\n      jumpi\n    tag_1304:\n      tag_1305\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1305:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":17790:17815  lPair.mint(address(this)) */\n      dup2\n      codesize\n      jump(tag_1268)\n    tag_1303:\n      pop\n      returndatasize\n      jump(tag_1304)\n        /* \"test/unit/ConstantProductPair.t.sol\":17746:17780  _tokenD.mint(address(lPair), 50e6) */\n    tag_1263:\n      tag_1308\n      swap1\n      tag_1\n      jump\t// in\n    tag_1308:\n      codesize\n      jump(tag_1264)\n        /* \"test/unit/ConstantProductPair.t.sol\":17700:17736  _tokenA.mint(address(lPair), 100e18) */\n    tag_1257:\n      tag_1309\n      swap1\n      tag_1\n      jump\t// in\n    tag_1309:\n      codesize\n      jump(tag_1258)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_168:\n      pop\n      jumpi(tag_196, callvalue)\n      dup1\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_196\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":15991:16003  _stepTime(5) */\n      tag_1314\n      tag_77\n      jump\t// in\n    tag_1314:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n        /* \"test/unit/ConstantProductPair.t.sol\":16029:16036  _tokenA */\n      0x19\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":16050:16070  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      dup2\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":16029:16087  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */\n      swap2\n      dup1\n      extcodesize\n      iszero\n      tag_249\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      0x40c10f1900000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":16029:16087  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */\n      dup1\n      dup3\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap5\n      swap1\n      swap5\n      and\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":16029:16087  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":15977:15981  1e18 */\n      0x0de0b6b3a7640000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      dup3\n      add\n      mstore\n      swap1\n      dup6\n      swap1\n      dup3\n      swap1\n      0x44\n      swap1\n      dup3\n      swap1\n      dup5\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":16029:16087  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */\n      gas\n      call\n      dup1\n      iszero\n      tag_312\n      jumpi\n      tag_1320\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1321:\n      pop\n      dup3\n      dup2\n      sload\n      and\n      swap1\n      mload(0x40)\n      swap4\n      dup5\n      0xe12bd9d800000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":16097:16170  _constantProductPair.swap(int256(lAmountToSwap), true, address(this), \"\") */\n      swap4\n      dup5\n      dup3\n      mstore\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":16160:16164  this */\n      swap7\n      dup8\n      swap2\n      dup2\n      dup11\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":16097:16170  _constantProductPair.swap(int256(lAmountToSwap), true, address(this), \"\") */\n      tag_1322\n        /* \"test/unit/ConstantProductPair.t.sol\":16160:16164  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":16097:16170  _constantProductPair.swap(int256(lAmountToSwap), true, address(this), \"\") */\n      dup4\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      0xa0\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":5471:5475  1e18 */\n      0x0de0b6b3a7640000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup4\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":15394:15398  true */\n      0x01\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n      dup5\n      add\n      mstore\n      and\n      0x40\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x80\n      0x60\n      dup3\n      add\n      mstore\n      0x00\n      0x80\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n        /* \"test/unit/ConstantProductPair.t.sol\":16097:16170  _constantProductPair.swap(int256(lAmountToSwap), true, address(this), \"\") */\n    tag_1322:\n      sub\n      swap3\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_312\n      jumpi\n      dup7\n      swap2\n      tag_1325\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1326:\n      pop\n      pop\n      dup1\n      dup3\n      sload\n      and\n      mload(0x40)\n      dup1\n      swap5\n      0x0902f1ac00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":16228:16262  _constantProductPair.getReserves() */\n      swap3\n      dup4\n      dup4\n      mstore\n      dup3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":16228:16262  _constantProductPair.getReserves() */\n      0x80\n      swap9\n      dup10\n      swap4\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_312\n      jumpi\n      dup10\n      swap3\n      dup11\n      swap2\n      tag_1329\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1330:\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":16290:16322  lReserve1_1 * 1e18 / lReserve0_1 */\n      tag_1331\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":16290:16308  lReserve1_1 * 1e18 */\n      tag_1088\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffff\n      dup1\n      dup1\n      swap7\n      and\n      swap3\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":16290:16308  lReserve1_1 * 1e18 */\n      tag_16\n      jump\t// in\n        /* \"test/unit/ConstantProductPair.t.sol\":16290:16322  lReserve1_1 * 1e18 / lReserve0_1 */\n    tag_1331:\n        /* \"test/unit/ConstantProductPair.t.sol\":16332:16344  _stepTime(5) */\n      swap7\n      tag_1333\n      tag_77\n      jump\t// in\n    tag_1333:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup10\n      dup6\n        /* \"test/unit/ConstantProductPair.t.sol\":16029:16036  _tokenA */\n      0x19\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      dup7\n      dup9\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":16355:16413  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */\n      swap1\n      dup1\n      extcodesize\n      iszero\n      tag_291\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":16355:16413  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */\n      swap4\n      dup5\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap2\n      swap1\n      swap2\n      and\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":16355:16413  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":15977:15981  1e18 */\n      0x0de0b6b3a7640000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      dup5\n      add\n      mstore\n      dup3\n      swap1\n      0x44\n      swap1\n      dup3\n      swap1\n      dup5\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":16355:16413  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */\n      gas\n      call\n      dup1\n      iszero\n      tag_312\n      jumpi\n      tag_1339\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1340:\n      pop\n      dup5\n      sload\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":16423:16496  _constantProductPair.swap(int256(lAmountToSwap), true, address(this), \"\") */\n      swap2\n      dup3\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":5471:5475  1e18 */\n      0x0de0b6b3a7640000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":16423:16496  _constantProductPair.swap(int256(lAmountToSwap), true, address(this), \"\") */\n      dup4\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":15394:15398  true */\n      0x01\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      dup4\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":16160:16164  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x44\n      dup4\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x80\n      0x64\n      dup4\n      add\n      mstore\n      0x00\n      0x84\n      dup4\n      add\n      mstore\n      dup9\n      swap1\n      dup3\n      swap1\n      0xa4\n      swap1\n      dup3\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":16160:16164  this */\n      dup14\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup10\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":16423:16496  _constantProductPair.swap(int256(lAmountToSwap), true, address(this), \"\") */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_312\n      jumpi\n      dup9\n      swap2\n      tag_1344\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1345:\n      pop\n      pop\n      dup5\n      dup4\n      dup6\n      sload\n      and\n      swap3\n      0x04\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":16553:16587  _constantProductPair.getReserves() */\n      dup1\n      swap6\n      dup2\n      swap4\n      dup3\n      mstore\n      gas\n      staticcall\n      swap2\n      dup3\n      iszero\n      tag_312\n      jumpi\n      dup9\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":16615:16647  lReserve1_2 * 1e18 / lReserve0_2 */\n      tag_1348\n        /* \"test/unit/ConstantProductPair.t.sol\":16553:16587  _constantProductPair.getReserves() */\n      swap3\n      dup5\n      swap3\n      dup6\n      swap3\n      tag_1349\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1350:\n      pop\n      dup1\n        /* \"test/unit/ConstantProductPair.t.sol\":16615:16633  lReserve1_2 * 1e18 */\n      tag_1088\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap3\n      swap4\n      and\n      swap3\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":16615:16633  lReserve1_2 * 1e18 */\n      tag_16\n      jump\t// in\n        /* \"test/unit/ConstantProductPair.t.sol\":16615:16647  lReserve1_2 * 1e18 / lReserve0_2 */\n    tag_1348:\n        /* \"test/unit/ConstantProductPair.t.sol\":16658:16670  _stepTime(5) */\n      swap6\n      tag_1352\n      tag_77\n      jump\t// in\n    tag_1352:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      dup5\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":16680:16707  _constantProductPair.sync() */\n      dup1\n      extcodesize\n      iszero\n      tag_291\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      swap1\n      0x04\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":16680:16707  _constantProductPair.sync() */\n      dup1\n      swap6\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xfff6cae900000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":16680:16707  _constantProductPair.sync() */\n      dup4\n      mstore\n      gas\n      call\n      swap2\n      dup3\n      iszero\n      tag_312\n      jumpi\n      dup4\n      swap3\n      tag_1357\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1358:\n      pop\n      sload\n      and\n      swap2\n      sload\n      and\n      swap2\n      mload(0x40)\n      swap3\n      0xc9d163d100000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":16763:16813  _oracleCaller.observation(_constantProductPair, 0) */\n      swap3\n      dup4\n      dup6\n      mstore\n      dup3\n      dup6\n      dup1\n      tag_1359\n      dup6\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":16763:16813  _oracleCaller.observation(_constantProductPair, 0) */\n      dup4\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n      0x00\n      swap2\n      swap4\n      swap3\n      swap4\n      0xffffffffffffffffffffffffffffffffffffffff\n      0x40\n      dup3\n      add\n      swap6\n      and\n      dup2\n      mstore\n      add\n      mstore\n      jump\n        /* \"test/unit/ConstantProductPair.t.sol\":16763:16813  _oracleCaller.observation(_constantProductPair, 0) */\n    tag_1359:\n      sub\n      dup2\n      dup5\n      gas\n      staticcall\n      swap5\n      dup6\n      iszero\n      tag_312\n      jumpi\n      dup9\n      swap6\n      tag_1362\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1363:\n      pop\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":16850:16900  _oracleCaller.observation(_constantProductPair, 1) */\n      dup5\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":16850:16900  _oracleCaller.observation(_constantProductPair, 1) */\n      dup3\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":18492:18496  true */\n      0x01\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      dup3\n      add\n      mstore\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":16850:16900  _oracleCaller.observation(_constantProductPair, 1) */\n      dup4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup6\n      0x44\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":16850:16900  _oracleCaller.observation(_constantProductPair, 1) */\n      dup6\n      gas\n      staticcall\n      swap5\n      dup6\n      iszero\n      tag_312\n      jumpi\n      dup10\n      swap6\n      tag_1367\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1368:\n      pop\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":16937:16987  _oracleCaller.observation(_constantProductPair, 2) */\n      swap1\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap3\n      and\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":16937:16987  _oracleCaller.observation(_constantProductPair, 2) */\n      dup4\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":19011:19012  2 */\n      0x02\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      dup4\n      add\n      mstore\n      dup3\n      swap1\n      dup3\n      swap1\n      dup2\n      dup1\n      0x44\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":16937:16987  _oracleCaller.observation(_constantProductPair, 2) */\n    tag_1369:\n      sub\n      swap2\n      gas\n      staticcall\n      swap2\n      dup3\n      iszero\n      tag_312\n      jumpi\n      dup8\n      swap3\n      tag_1372\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1373:\n      pop\n      pop\n      dup4\n      dup3\n      mload\n      swap3\n      dup5\n      mload\n      swap4\n      0x0d\n      swap5\n      dup6\n      signextend\n      swap1\n      dup6\n      signextend\n        /* \"test/unit/ConstantProductPair.t.sol\":17076:17119  lObs1.logAccRawPrice - lObs0.logAccRawPrice */\n      swap1\n      tag_1374\n      swap2\n      tag_88\n      jump\t// in\n    tag_1374:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      0xffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":17129:17144  lObs1.timestamp */\n      dup1\n      swap7\n      dup2\n      swap5\n      dup3\n      0x60\n      dup2\n      swap6\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":17129:17144  lObs1.timestamp */\n      0x60\n        /* \"test/unit/ConstantProductPair.t.sol\":17147:17162  lObs0.timestamp */\n      dup4\n      add\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      swap6\n      0x5af3107a4000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap11\n      dup12\n      swap3\n      dup2\n      dup10\n      mload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":17129:17162  lObs1.timestamp - lObs0.timestamp */\n      tag_1375\n      swap2\n      tag_89\n      jump\t// in\n    tag_1375:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      and\n      0x03\n      signextend\n        /* \"test/unit/ConstantProductPair.t.sol\":17075:17163  (lObs1.logAccRawPrice - lObs0.logAccRawPrice) / int32(lObs1.timestamp - lObs0.timestamp) */\n      tag_1376\n      swap2\n      tag_90\n      jump\t// in\n    tag_1376:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup10\n      signextend\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      mul\n        /* \"src/libraries/LogCompression.sol\":2760:2807  LogExpMath.exp(value * _LOG_COMPRESSION_FACTOR) */\n      tag_1377\n      swap1\n      tag_96\n      jump\t// in\n    tag_1377:\n        /* \"test/unit/ConstantProductPair.t.sol\":16998:17231  assertApproxEqRel(... */\n      swap1\n      tag_1378\n      swap2\n      tag_91\n      jump\t// in\n    tag_1378:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup6\n      mload\n      dup8\n      signextend\n      swap1\n      mload\n      dup8\n      signextend\n        /* \"test/unit/ConstantProductPair.t.sol\":17319:17362  lObs2.logAccRawPrice - lObs0.logAccRawPrice */\n      tag_1379\n      swap2\n      tag_88\n      jump\t// in\n    tag_1379:\n        /* \"test/unit/ConstantProductPair.t.sol\":17372:17387  lObs2.timestamp */\n      swap5\n        /* \"test/unit/ConstantProductPair.t.sol\":17129:17144  lObs1.timestamp */\n      0x60\n        /* \"test/unit/ConstantProductPair.t.sol\":17372:17387  lObs2.timestamp */\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n      and\n      swap2\n      mload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":17372:17405  lObs2.timestamp - lObs0.timestamp */\n      tag_1380\n      swap2\n      tag_89\n      jump\t// in\n    tag_1380:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      and\n      0x03\n      signextend\n        /* \"test/unit/ConstantProductPair.t.sol\":17318:17406  (lObs2.logAccRawPrice - lObs0.logAccRawPrice) / int32(lObs2.timestamp - lObs0.timestamp) */\n      tag_1381\n      swap2\n      tag_90\n      jump\t// in\n    tag_1381:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      signextend\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      mul\n        /* \"src/libraries/LogCompression.sol\":2760:2807  LogExpMath.exp(value * _LOG_COMPRESSION_FACTOR) */\n      tag_1382\n      swap1\n      tag_96\n      jump\t// in\n    tag_1382:\n        /* \"test/unit/ConstantProductPair.t.sol\":17444:17461  lPrice1 * lPrice2 */\n      swap2\n      tag_1383\n      swap2\n      tag_17\n      jump\t// in\n    tag_1383:\n        /* \"test/unit/ConstantProductPair.t.sol\":17434:17462  Math.sqrt(lPrice1 * lPrice2) */\n      tag_1384\n      swap1\n      tag_45\n      jump\t// in\n    tag_1384:\n        /* \"test/unit/ConstantProductPair.t.sol\":17241:17495  assertApproxEqRel(... */\n      tag_316\n      swap2\n      tag_91\n      jump\t// in\n        /* \"test/unit/ConstantProductPair.t.sol\":16937:16987  _oracleCaller.observation(_constantProductPair, 2) */\n    tag_1372:\n      tag_1386\n      swap3\n      pop\n      dup1\n      returndatasize\n      lt\n      tag_320\n      jumpi\n      tag_322\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1386:\n      codesize\n      dup1\n      jump(tag_1373)\n        /* \"test/unit/ConstantProductPair.t.sol\":16850:16900  _oracleCaller.observation(_constantProductPair, 1) */\n    tag_1367:\n        /* \"test/unit/ConstantProductPair.t.sol\":16937:16987  _oracleCaller.observation(_constantProductPair, 2) */\n      tag_1369\n        /* \"test/unit/ConstantProductPair.t.sol\":16850:16900  _oracleCaller.observation(_constantProductPair, 1) */\n      swap4\n      swap2\n      swap6\n      pop\n      swap2\n      tag_1390\n      dup6\n      swap4\n      dup5\n      returndatasize\n      dup7\n      gt\n      tag_320\n      jumpi\n      tag_322\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1390:\n      swap6\n      swap2\n      swap4\n      pop\n      swap2\n      jump(tag_1368)\n        /* \"test/unit/ConstantProductPair.t.sol\":16763:16813  _oracleCaller.observation(_constantProductPair, 0) */\n    tag_1362:\n      tag_1394\n      swap2\n      swap6\n      pop\n      dup4\n      returndatasize\n      dup6\n      gt\n      tag_320\n      jumpi\n      tag_322\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1394:\n      swap4\n      codesize\n      jump(tag_1363)\n        /* \"test/unit/ConstantProductPair.t.sol\":16680:16707  _constantProductPair.sync() */\n    tag_1357:\n      tag_1398\n      swap1\n      tag_1\n      jump\t// in\n    tag_1398:\n      codesize\n      jump(tag_1358)\n        /* \"test/unit/ConstantProductPair.t.sol\":16553:16587  _constantProductPair.getReserves() */\n    tag_1349:\n      dup2\n      swap4\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":16615:16633  lReserve1_2 * 1e18 */\n      tag_1088\n        /* \"test/unit/ConstantProductPair.t.sol\":16553:16587  _constantProductPair.getReserves() */\n      swap3\n      pop\n      tag_1399\n      swap1\n      dup10\n      returndatasize\n      dup12\n      gt\n      tag_328\n      jumpi\n      tag_330\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1399:\n      pop\n      pop\n      swap4\n      swap1\n      swap4\n      swap3\n      pop\n      jump(tag_1350)\n        /* \"test/unit/ConstantProductPair.t.sol\":16423:16496  _constantProductPair.swap(int256(lAmountToSwap), true, address(this), \"\") */\n    tag_1344:\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_1403\n      jumpi\n    tag_1404:\n      tag_1405\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1405:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":16423:16496  _constantProductPair.swap(int256(lAmountToSwap), true, address(this), \"\") */\n      dup7\n      codesize\n      jump(tag_1345)\n    tag_1403:\n      pop\n      returndatasize\n      jump(tag_1404)\n        /* \"test/unit/ConstantProductPair.t.sol\":16355:16413  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */\n    tag_1339:\n      tag_1408\n      swap1\n      tag_1\n      jump\t// in\n    tag_1408:\n      codesize\n      jump(tag_1340)\n        /* \"test/unit/ConstantProductPair.t.sol\":16228:16262  _constantProductPair.getReserves() */\n    tag_1329:\n        /* \"test/unit/ConstantProductPair.t.sol\":16290:16322  lReserve1_1 * 1e18 / lReserve0_1 */\n      tag_1331\n        /* \"test/unit/ConstantProductPair.t.sol\":16228:16262  _constantProductPair.getReserves() */\n      swap4\n      pop\n      tag_1409\n      swap2\n      pop\n      dup8\n      returndatasize\n      dup10\n      gt\n      tag_328\n      jumpi\n      tag_330\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1409:\n      pop\n      pop\n      swap3\n      swap1\n      swap3\n      swap1\n      jump(tag_1330)\n        /* \"test/unit/ConstantProductPair.t.sol\":16097:16170  _constantProductPair.swap(int256(lAmountToSwap), true, address(this), \"\") */\n    tag_1325:\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_1413\n      jumpi\n    tag_1414:\n      tag_1415\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1415:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":16097:16170  _constantProductPair.swap(int256(lAmountToSwap), true, address(this), \"\") */\n      dup5\n      codesize\n      jump(tag_1326)\n    tag_1413:\n      pop\n      returndatasize\n      jump(tag_1414)\n        /* \"test/unit/ConstantProductPair.t.sol\":16029:16087  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */\n    tag_1320:\n      tag_1418\n      swap1\n      tag_1\n      jump\t// in\n    tag_1418:\n      codesize\n      jump(tag_1321)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_166:\n      pop\n      jumpi(tag_196, callvalue)\n      dup1\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_196\n      jumpi\n      0x20\n      mload(0x40)\n        /* \"test/__fixtures/BaseTest.sol\":859:862  100 */\n      0x64\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      mstore\n      return\n    tag_164:\n      pop\n      jumpi(tag_196, callvalue)\n      dup1\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_196\n      jumpi\n      0x20\n      tag_1427\n      tag_15\n      jump\t// in\n    tag_1427:\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_162:\n      pop\n      jumpi(tag_196, callvalue)\n      dup1\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_196\n      jumpi\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"test/unit/ConstantProductPair.t.sol\":7232:7269  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */\n      dup1\n      extcodesize\n      iszero\n      tag_255\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      0xf28dceb300000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":7232:7269  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */\n      dup1\n      dup3\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":7232:7269  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */\n      dup4\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n      0x12\n      0x24\n      dup4\n      add\n      mstore\n      0x43503a204e4f545f454e4f5547485f4c49510000000000000000000000000000\n      0x44\n      dup4\n      add\n      mstore\n      swap1\n      dup4\n      swap1\n      dup2\n      dup2\n      0x64\n      dup2\n      dup4\n        /* \"test/unit/ConstantProductPair.t.sol\":7232:7269  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */\n      dup9\n      gas\n      call\n      dup1\n      iszero\n      tag_219\n      jumpi\n      tag_1437\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1438:\n      pop\n      pop\n      tag_1439\n      swap2\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":7279:7299  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      swap4\n      mload(0x40)\n      tag_1440\n      dup2\n      tag_2\n      jump\t// in\n    tag_1440:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      dup3\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      swap1\n      dup2\n      0xe12bd9d800000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":7279:7366  _constantProductPair.swap(int256(INITIAL_MINT_AMOUNT), false, address(this), bytes(\"\")) */\n      swap8\n      dup9\n      dup3\n      mstore\n        /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */\n      0x056bc75e2d63100000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":7279:7366  _constantProductPair.swap(int256(INITIAL_MINT_AMOUNT), false, address(this), bytes(\"\")) */\n      dup4\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n      0x00\n      0x24\n      dup4\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":7349:7353  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x44\n      dup4\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x80\n      0x64\n      dup4\n      add\n      mstore\n      dup2\n      dup7\n      dup2\n      0x20\n      swap13\n      dup14\n      swap7\n      0x84\n      dup4\n      add\n      swap1\n      tag_10\n      jump\t// in\n    tag_1439:\n        /* \"test/unit/ConstantProductPair.t.sol\":7279:7366  _constantProductPair.swap(int256(INITIAL_MINT_AMOUNT), false, address(this), bytes(\"\")) */\n      sub\n      swap3\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_215\n      jumpi\n      dup8\n      swap2\n      tag_1443\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1444:\n        /* \"test/unit/ConstantProductPair.t.sol\":7377:7414  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */\n      pop\n      pop\n      dup4\n      extcodesize\n      iszero\n      tag_255\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":7377:7414  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */\n      dup2\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":7377:7414  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */\n      dup3\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n      0x12\n      0x24\n      dup3\n      add\n      mstore\n      0x43503a204e4f545f454e4f5547485f4c49510000000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":7377:7414  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */\n      dup3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      0x64\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":7377:7414  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */\n      dup4\n      dup10\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_215\n      jumpi\n      dup4\n      swap2\n      tag_1450\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1451:\n      pop\n      dup7\n      tag_1452\n      dup6\n        /* \"test/unit/ConstantProductPair.t.sol\":7279:7299  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      mload(0x40)\n      tag_1453\n      dup2\n      tag_2\n      jump\t// in\n    tag_1453:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      dup5\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":7424:7515  _constantProductPair.swap(int256(INITIAL_MINT_AMOUNT + 1), false, address(this), bytes(\"\")) */\n      swap5\n      dup6\n      dup1\n      swap5\n      dup2\n      swap4\n      dup14\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x056bc75e2d63100001\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":7424:7515  _constantProductPair.swap(int256(INITIAL_MINT_AMOUNT + 1), false, address(this), bytes(\"\")) */\n      dup5\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n      0x00\n      0x24\n      dup5\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":7349:7353  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x44\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x80\n      0x64\n      dup5\n      add\n      mstore\n      0x84\n      dup4\n      add\n      swap1\n      tag_10\n      jump\t// in\n    tag_1452:\n        /* \"test/unit/ConstantProductPair.t.sol\":7424:7515  _constantProductPair.swap(int256(INITIAL_MINT_AMOUNT + 1), false, address(this), bytes(\"\")) */\n      sub\n      swap3\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_215\n      jumpi\n      dup8\n      swap2\n      tag_1456\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1457:\n        /* \"test/unit/ConstantProductPair.t.sol\":7526:7563  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */\n      pop\n      pop\n      dup4\n      extcodesize\n      iszero\n      tag_255\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":7526:7563  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */\n      dup2\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":7526:7563  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */\n      dup3\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n      0x12\n      0x24\n      dup3\n      add\n      mstore\n      0x43503a204e4f545f454e4f5547485f4c49510000000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":7526:7563  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */\n      dup3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      0x64\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":7526:7563  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */\n      dup4\n      dup10\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_215\n      jumpi\n      dup4\n      swap2\n      tag_1463\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1464:\n      pop\n      dup7\n      tag_1465\n      dup6\n        /* \"test/unit/ConstantProductPair.t.sol\":7279:7299  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      mload(0x40)\n      tag_1466\n      dup2\n      tag_2\n      jump\t// in\n    tag_1466:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      dup5\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":7573:7661  _constantProductPair.swap(-int256(INITIAL_MINT_AMOUNT), false, address(this), bytes(\"\")) */\n      swap5\n      dup6\n      dup1\n      swap5\n      dup2\n      swap4\n      dup14\n      dup4\n      mstore\n        /* \"lib/forge-std/src/StdMath.sol\":124:202  -57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffa9438a1d29cf00000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":7573:7661  _constantProductPair.swap(-int256(INITIAL_MINT_AMOUNT), false, address(this), bytes(\"\")) */\n      dup5\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n      0x00\n      0x24\n      dup5\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":7349:7353  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x44\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x80\n      0x64\n      dup5\n      add\n      mstore\n      0x84\n      dup4\n      add\n      swap1\n      tag_10\n      jump\t// in\n    tag_1465:\n        /* \"test/unit/ConstantProductPair.t.sol\":7573:7661  _constantProductPair.swap(-int256(INITIAL_MINT_AMOUNT), false, address(this), bytes(\"\")) */\n      sub\n      swap3\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_215\n      jumpi\n      dup8\n      swap2\n      tag_1469\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1470:\n        /* \"test/unit/ConstantProductPair.t.sol\":7672:7709  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */\n      pop\n      pop\n      dup4\n      extcodesize\n      iszero\n      tag_255\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":7672:7709  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */\n      swap1\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":7672:7709  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */\n      dup3\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n      0x12\n      0x24\n      dup3\n      add\n      mstore\n      0x43503a204e4f545f454e4f5547485f4c49510000000000000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap3\n      dup2\n      swap1\n      dup5\n      swap1\n      0x64\n      swap1\n      dup3\n      swap1\n      dup5\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":7672:7709  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */\n      gas\n      call\n      swap3\n      dup4\n      iszero\n      tag_1474\n      jumpi\n      dup6\n      swap4\n      tag_1476\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1477:\n      pop\n      pop\n      swap2\n      tag_1478\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":7279:7299  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      mload(0x40)\n      swap2\n      tag_1479\n      dup4\n      tag_2\n      jump\t// in\n    tag_1479:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      dup7\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup7\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":7719:7811  _constantProductPair.swap(-int256(INITIAL_MINT_AMOUNT + 1), false, address(this), bytes(\"\")) */\n      dup1\n      swap7\n      dup2\n      swap6\n      dup3\n      swap5\n      dup4\n      mstore\n        /* \"lib/forge-std/src/StdMath.sol\":124:202  -57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffa9438a1d29cefffff\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":7719:7811  _constantProductPair.swap(-int256(INITIAL_MINT_AMOUNT + 1), false, address(this), bytes(\"\")) */\n      dup5\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n      0x00\n      0x24\n      dup5\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":7349:7353  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x44\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x80\n      0x64\n      dup5\n      add\n      mstore\n      0x84\n      dup4\n      add\n      swap1\n      tag_10\n      jump\t// in\n    tag_1478:\n        /* \"test/unit/ConstantProductPair.t.sol\":7719:7811  _constantProductPair.swap(-int256(INITIAL_MINT_AMOUNT + 1), false, address(this), bytes(\"\")) */\n      sub\n      swap3\n      gas\n      call\n      dup1\n      iszero\n      tag_215\n      jumpi\n      tag_1482\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      dup1\n      return\n        /* \"test/unit/ConstantProductPair.t.sol\":7719:7811  _constantProductPair.swap(-int256(INITIAL_MINT_AMOUNT + 1), false, address(this), bytes(\"\")) */\n    tag_1482:\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_1484\n      jumpi\n    tag_1485:\n      tag_1486\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1486:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":7719:7811  _constantProductPair.swap(-int256(INITIAL_MINT_AMOUNT + 1), false, address(this), bytes(\"\")) */\n      codesize\n      dup1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      dup1\n      return\n        /* \"test/unit/ConstantProductPair.t.sol\":7719:7811  _constantProductPair.swap(-int256(INITIAL_MINT_AMOUNT + 1), false, address(this), bytes(\"\")) */\n    tag_1484:\n      pop\n      returndatasize\n      jump(tag_1485)\n        /* \"test/unit/ConstantProductPair.t.sol\":7672:7709  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */\n    tag_1476:\n      tag_1489\n      swap2\n      swap3\n      swap4\n      pop\n      tag_1\n      jump\t// in\n    tag_1489:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_285\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":7672:7709  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */\n      dup3\n      swap1\n      dup5\n      codesize\n      jump(tag_1477)\n    tag_1474:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      pop\n      mload(0x40)\n      swap1\n      returndatasize\n      swap1\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"test/unit/ConstantProductPair.t.sol\":7573:7661  _constantProductPair.swap(-int256(INITIAL_MINT_AMOUNT), false, address(this), bytes(\"\")) */\n    tag_1469:\n      swap1\n      dup1\n      swap3\n      swap4\n      pop\n      returndatasize\n      dup4\n      gt\n      tag_1492\n      jumpi\n    tag_1493:\n      tag_1494\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1494:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":7573:7661  _constantProductPair.swap(-int256(INITIAL_MINT_AMOUNT), false, address(this), bytes(\"\")) */\n      dup6\n      swap1\n      dup6\n      codesize\n      jump(tag_1470)\n    tag_1492:\n      pop\n      returndatasize\n      jump(tag_1493)\n        /* \"test/unit/ConstantProductPair.t.sol\":7526:7563  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */\n    tag_1463:\n      tag_1497\n      swap1\n      tag_1\n      jump\t// in\n    tag_1497:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_255\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":7526:7563  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */\n      dup2\n      codesize\n      jump(tag_1464)\n        /* \"test/unit/ConstantProductPair.t.sol\":7424:7515  _constantProductPair.swap(int256(INITIAL_MINT_AMOUNT + 1), false, address(this), bytes(\"\")) */\n    tag_1456:\n      swap1\n      dup1\n      swap3\n      swap4\n      pop\n      returndatasize\n      dup4\n      gt\n      tag_1500\n      jumpi\n    tag_1501:\n      tag_1502\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1502:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":7424:7515  _constantProductPair.swap(int256(INITIAL_MINT_AMOUNT + 1), false, address(this), bytes(\"\")) */\n      dup6\n      swap1\n      dup6\n      codesize\n      jump(tag_1457)\n    tag_1500:\n      pop\n      returndatasize\n      jump(tag_1501)\n        /* \"test/unit/ConstantProductPair.t.sol\":7377:7414  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */\n    tag_1450:\n      tag_1505\n      swap1\n      tag_1\n      jump\t// in\n    tag_1505:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_255\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":7377:7414  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */\n      dup2\n      codesize\n      jump(tag_1451)\n        /* \"test/unit/ConstantProductPair.t.sol\":7279:7366  _constantProductPair.swap(int256(INITIAL_MINT_AMOUNT), false, address(this), bytes(\"\")) */\n    tag_1443:\n      swap1\n      dup1\n      swap3\n      swap4\n      pop\n      returndatasize\n      dup4\n      gt\n      tag_1508\n      jumpi\n    tag_1509:\n      tag_1510\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1510:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":7279:7366  _constantProductPair.swap(int256(INITIAL_MINT_AMOUNT), false, address(this), bytes(\"\")) */\n      dup6\n      swap1\n      dup6\n      codesize\n      jump(tag_1444)\n    tag_1508:\n      pop\n      returndatasize\n      jump(tag_1509)\n        /* \"test/unit/ConstantProductPair.t.sol\":7232:7269  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */\n    tag_1437:\n      tag_1513\n      swap1\n      tag_1\n      jump\t// in\n    tag_1513:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_291\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":7232:7269  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */\n      dup3\n      codesize\n      jump(tag_1438)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_160:\n      pop\n      jumpi(tag_196, callvalue)\n      dup1\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_196\n      jumpi\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":11493:11513  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      dup2\n      sload\n      and\n      swap2\n      dup4\n      mload(0x40)\n      swap2\n      0x0902f1ac00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":11493:11527  _constantProductPair.getReserves() */\n      swap4\n      dup5\n      dup5\n      mstore\n      0x80\n      swap6\n      dup7\n      dup6\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":11493:11527  _constantProductPair.getReserves() */\n      dup2\n      dup5\n      gas\n      staticcall\n      swap5\n      dup6\n      iszero\n      tag_841\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup5\n        /* \"test/unit/ConstantProductPair.t.sol\":11493:11527  _constantProductPair.getReserves() */\n      swap6\n      tag_1522\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1523:\n      pop\n      dup3\n        /* \"test/unit/ConstantProductPair.t.sol\":11591:11598  _tokenA */\n      0x19\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":11591:11649  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */\n      swap1\n      dup2\n      extcodesize\n      iszero\n      tag_249\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup5\n      swap2\n      0x44\n      dup4\n      swap3\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":11591:11649  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */\n      swap5\n      dup6\n      swap4\n      dup5\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40c10f1900000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":11591:11649  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */\n      dup5\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":11591:11649  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":11561:11565  1e17 */\n      0x016345785d8a0000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      dup5\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":11591:11649  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_841\n      jumpi\n      dup5\n      swap2\n      tag_1528\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1529:\n      pop\n      pop\n      dup1\n      sload\n      mload(0x40)\n      0xe12bd9d800000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":11659:11732  _constantProductPair.swap(int256(lAmountToSwap), true, address(this), \"\") */\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":12175:12179  1e17 */\n      0x016345785d8a0000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":11659:11732  _constantProductPair.swap(int256(lAmountToSwap), true, address(this), \"\") */\n      dup3\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":12337:12338  1 */\n      0x01\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      dup3\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":11722:11726  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x44\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x80\n      0x64\n      dup3\n      add\n      mstore\n      0x00\n      0x84\n      dup3\n      add\n      mstore\n      0x20\n      swap2\n      dup3\n      swap1\n      dup3\n      swap1\n      0xa4\n      swap1\n      dup3\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":11722:11726  this */\n      dup10\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup10\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":11659:11732  _constantProductPair.swap(int256(lAmountToSwap), true, address(this), \"\") */\n      gas\n      call\n      dup1\n      iszero\n      tag_201\n      jumpi\n      tag_1533\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1534:\n      pop\n      dup3\n        /* \"test/unit/ConstantProductPair.t.sol\":11752:11758  _alice */\n      0x16\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"test/unit/ConstantProductPair.t.sol\":11743:11759  vm.prank(_alice) */\n      swap1\n      dup2\n      extcodesize\n      iszero\n      tag_1565\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup6\n      swap2\n      0x24\n      dup4\n      swap3\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":11743:11759  vm.prank(_alice) */\n      swap5\n      dup6\n      swap4\n      dup5\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xca669fa700000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":11743:11759  vm.prank(_alice) */\n      dup5\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":11743:11759  vm.prank(_alice) */\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":11743:11759  vm.prank(_alice) */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_201\n      jumpi\n      dup6\n      swap2\n      tag_1539\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1540:\n      pop\n      dup2\n      dup5\n      dup5\n      sload\n      and\n      0x44\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":11769:11835  _constantProductPair.transfer(address(_constantProductPair), 1e18) */\n      dup1\n      swap5\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xa9059cbb00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":11769:11835  _constantProductPair.transfer(address(_constantProductPair), 1e18) */\n      dup4\n      mstore\n      dup1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":11769:11835  _constantProductPair.transfer(address(_constantProductPair), 1e18) */\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":11830:11834  1e18 */\n      0x0de0b6b3a7640000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      dup5\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":11769:11835  _constantProductPair.transfer(address(_constantProductPair), 1e18) */\n      gas\n      call\n      dup1\n      iszero\n      tag_201\n      jumpi\n      tag_1543\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1544:\n      pop\n      pop\n      dup3\n      0x40\n      dup4\n      dup4\n      sload\n      and\n      0x24\n      dup3\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":11845:11885  _constantProductPair.burn(address(this)) */\n      dup1\n      swap5\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x89afcb4400000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":11845:11885  _constantProductPair.burn(address(this)) */\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":11722:11726  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":11845:11885  _constantProductPair.burn(address(this)) */\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":11845:11885  _constantProductPair.burn(address(this)) */\n      gas\n      call\n      dup1\n      iszero\n      tag_841\n      jumpi\n      tag_1547\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1548:\n      pop\n      dup2\n      dup2\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":11896:11923  _constantProductPair.sync() */\n      dup1\n      extcodesize\n      iszero\n      tag_285\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup4\n      dup1\n      swap2\n      0x04\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":11896:11923  _constantProductPair.sync() */\n      dup1\n      swap8\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xfff6cae900000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":11896:11923  _constantProductPair.sync() */\n      dup4\n      mstore\n      gas\n      call\n      swap4\n      dup5\n      iszero\n      tag_1474\n      jumpi\n      dup8\n      swap5\n      tag_1553\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1554:\n      pop\n      pop\n      sload\n      and\n      swap3\n      0x04\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":11979:12013  _constantProductPair.getReserves() */\n      dup1\n      swap6\n      dup2\n      swap4\n      dup3\n      mstore\n      gas\n      staticcall\n      swap2\n      dup3\n      iszero\n      tag_841\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":12023:12059  assertEq(lFinalIndex, lInitialIndex) */\n      tag_316\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap4\n      dup6\n        /* \"test/unit/ConstantProductPair.t.sol\":11979:12013  _constantProductPair.getReserves() */\n      swap4\n      tag_1558\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1559:\n      pop\n      pop\n      0xffff\n      dup1\n      swap2\n      and\n      swap2\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":12023:12059  assertEq(lFinalIndex, lInitialIndex) */\n      tag_39\n      jump\t// in\n        /* \"test/unit/ConstantProductPair.t.sol\":11979:12013  _constantProductPair.getReserves() */\n    tag_1558:\n      tag_1560\n      swap3\n      swap4\n      pop\n      dup1\n      returndatasize\n      lt\n      tag_328\n      jumpi\n      tag_330\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1560:\n      swap3\n      pop\n      pop\n      pop\n      swap1\n      codesize\n      dup1\n      jump(tag_1559)\n        /* \"test/unit/ConstantProductPair.t.sol\":11896:11923  _constantProductPair.sync() */\n    tag_1553:\n      tag_1564\n      swap2\n      swap3\n      swap5\n      pop\n      tag_1\n      jump\t// in\n    tag_1564:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_1565\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":11896:11923  _constantProductPair.sync() */\n      dup5\n      swap2\n      dup7\n      codesize\n      jump(tag_1554)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1565:\n      dup6\n      dup1\n      revert\n        /* \"test/unit/ConstantProductPair.t.sol\":11845:11885  _constantProductPair.burn(address(this)) */\n    tag_1547:\n      tag_1567\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40\n        /* \"test/unit/ConstantProductPair.t.sol\":11845:11885  _constantProductPair.burn(address(this)) */\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40\n        /* \"test/unit/ConstantProductPair.t.sol\":11845:11885  _constantProductPair.burn(address(this)) */\n      gt\n      tag_407\n      jumpi\n      tag_409\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1567:\n      pop\n      jump(tag_1548)\n        /* \"test/unit/ConstantProductPair.t.sol\":11769:11835  _constantProductPair.transfer(address(_constantProductPair), 1e18) */\n    tag_1543:\n      dup2\n      tag_1571\n      swap3\n      swap1\n      returndatasize\n      lt\n      tag_547\n      jumpi\n      tag_549\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1571:\n      pop\n      codesize\n      dup1\n      jump(tag_1544)\n        /* \"test/unit/ConstantProductPair.t.sol\":11743:11759  vm.prank(_alice) */\n    tag_1539:\n      tag_1575\n      swap1\n      tag_1\n      jump\t// in\n    tag_1575:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_285\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":11743:11759  vm.prank(_alice) */\n      dup4\n      codesize\n      jump(tag_1540)\n        /* \"test/unit/ConstantProductPair.t.sol\":11659:11732  _constantProductPair.swap(int256(lAmountToSwap), true, address(this), \"\") */\n    tag_1533:\n      dup2\n      dup1\n      swap6\n      pop\n      returndatasize\n      dup4\n      gt\n      tag_1578\n      jumpi\n    tag_1579:\n      tag_1580\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1580:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":11659:11732  _constantProductPair.swap(int256(lAmountToSwap), true, address(this), \"\") */\n      dup7\n      swap3\n      codesize\n      jump(tag_1534)\n    tag_1578:\n      pop\n      returndatasize\n      jump(tag_1579)\n        /* \"test/unit/ConstantProductPair.t.sol\":11591:11649  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */\n    tag_1528:\n      tag_1583\n      swap1\n      tag_1\n      jump\t// in\n    tag_1583:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_291\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":11591:11649  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */\n      dup3\n      codesize\n      jump(tag_1529)\n        /* \"test/unit/ConstantProductPair.t.sol\":11493:11527  _constantProductPair.getReserves() */\n    tag_1522:\n      tag_1586\n      swap2\n      swap6\n      pop\n      dup8\n      returndatasize\n      dup10\n      gt\n      tag_328\n      jumpi\n      tag_330\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1586:\n      swap3\n      pop\n      pop\n      pop\n      swap4\n      codesize\n      jump(tag_1523)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_158:\n      pop\n      jumpi(tag_196, callvalue)\n      dup1\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_196\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":12767:12779  _stepTime(1) */\n      tag_1594\n      tag_79\n      jump\t// in\n    tag_1594:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":12789:12796  _tokenA */\n      0x19\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":12810:12830  _constantProductPair */\n      swap1\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap2\n      dup4\n      dup4\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":12789:12838  _tokenA.mint(address(_constantProductPair), 1e17) */\n      swap3\n      dup2\n      extcodesize\n      iszero\n      tag_291\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      0x40c10f1900000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":12789:12838  _tokenA.mint(address(_constantProductPair), 1e17) */\n      swap5\n      dup6\n      dup3\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":12789:12838  _tokenA.mint(address(_constantProductPair), 1e17) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":12833:12837  1e17 */\n      0x016345785d8a0000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      dup5\n      dup2\n      0x44\n      dup2\n      dup4\n      0x24\n      swap9\n      dup8\n      dup11\n      dup5\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":12789:12838  _tokenA.mint(address(_constantProductPair), 1e17) */\n      gas\n      call\n      dup1\n      iszero\n      tag_201\n      jumpi\n      swap1\n      dup6\n      swap2\n      tag_1599\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1600:\n      pop\n      pop\n      dup6\n      dup3\n      sload\n      and\n      swap1\n      mload(0x40)\n      swap6\n      dup7\n      0xe12bd9d800000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":12848:12904  _constantProductPair.swap(1e17, true, address(this), \"\") */\n      swap4\n      dup5\n      dup3\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":12894:12898  this */\n      swap9\n      dup10\n      swap2\n      dup2\n      dup11\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":12848:12904  _constantProductPair.swap(1e17, true, address(this), \"\") */\n      tag_1601\n        /* \"test/unit/ConstantProductPair.t.sol\":12894:12898  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":12848:12904  _constantProductPair.swap(1e17, true, address(this), \"\") */\n      dup4\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      0xa0\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":12175:12179  1e17 */\n      0x016345785d8a0000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":12337:12338  1 */\n      0x01\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n      dup5\n      add\n      mstore\n      and\n      0x40\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x80\n      0x60\n      dup3\n      add\n      mstore\n      0x00\n      0x80\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n        /* \"test/unit/ConstantProductPair.t.sol\":12848:12904  _constantProductPair.swap(1e17, true, address(this), \"\") */\n    tag_1601:\n      sub\n      swap3\n      gas\n      call\n      dup1\n      iszero\n      tag_1089\n      jumpi\n      swap1\n      dup9\n      swap2\n      tag_1604\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1605:\n        /* \"test/unit/ConstantProductPair.t.sol\":12933:12945  _stepTime(1) */\n      pop\n      pop\n      tag_1606\n      tag_79\n      jump\t// in\n    tag_1606:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup8\n        /* \"test/unit/ConstantProductPair.t.sol\":12789:12796  _tokenA */\n      0x19\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      swap1\n      dup9\n      dup6\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":12955:13004  _tokenA.mint(address(_constantProductPair), 1e17) */\n      swap2\n      dup1\n      extcodesize\n      iszero\n      tag_1227\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup8\n      swap3\n      swap2\n      dup4\n      0x44\n      swap3\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":12955:13004  _tokenA.mint(address(_constantProductPair), 1e17) */\n      swap7\n      dup8\n      swap6\n      dup7\n      swap5\n      dup6\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":12955:13004  _tokenA.mint(address(_constantProductPair), 1e17) */\n      dup6\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup11\n      dup5\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":12955:13004  _tokenA.mint(address(_constantProductPair), 1e17) */\n      gas\n      call\n      dup1\n      iszero\n      tag_201\n      jumpi\n      swap1\n      dup6\n      swap2\n      tag_1611\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1612:\n      pop\n      pop\n      dup2\n      sload\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":13014:13070  _constantProductPair.swap(1e17, true, address(this), \"\") */\n      swap2\n      dup3\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":12175:12179  1e17 */\n      0x016345785d8a0000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":13014:13070  _constantProductPair.swap(1e17, true, address(this), \"\") */\n      dup4\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":12337:12338  1 */\n      0x01\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      dup4\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":12894:12898  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x44\n      dup4\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x80\n      0x64\n      dup4\n      add\n      mstore\n      0x00\n      0x84\n      dup4\n      add\n      mstore\n      dup6\n      swap1\n      dup3\n      swap1\n      0xa4\n      swap1\n      dup3\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":12894:12898  this */\n      dup9\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup12\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":13014:13070  _constantProductPair.swap(1e17, true, address(this), \"\") */\n      gas\n      call\n      dup1\n      iszero\n      tag_841\n      jumpi\n      swap1\n      dup6\n      swap2\n      tag_1616\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1617:\n      pop\n      pop\n      dup5\n      dup2\n      sload\n      and\n      swap1\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":13122:13156  _constantProductPair.getReserves() */\n      swap6\n      dup7\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x0902f1ac00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":13122:13156  _constantProductPair.getReserves() */\n      dup5\n      mstore\n      dup4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":13122:13156  _constantProductPair.getReserves() */\n      0x80\n      swap6\n      dup7\n      swap4\n      gas\n      staticcall\n      swap7\n      dup8\n      iszero\n      tag_201\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffff\n      0x44\n      swap9\n        /* \"test/unit/ConstantProductPair.t.sol\":13166:13185  assertEq(lIndex, 1) */\n      tag_1620\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap3\n      dup9\n        /* \"test/unit/ConstantProductPair.t.sol\":13122:13156  _constantProductPair.getReserves() */\n      swap2\n      tag_1621\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1622:\n      pop\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":13166:13185  assertEq(lIndex, 1) */\n      tag_37\n      jump\t// in\n    tag_1620:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup1\n      dup7\n      sload\n      and\n      swap1\n      dup4\n      dup2\n      dup5\n      sload\n      and\n      swap3\n      mload(0x40)\n      swap10\n      dup11\n      dup1\n      swap3\n      0xc9d163d100000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":13222:13272  _oracleCaller.observation(_constantProductPair, 0) */\n      swap7\n      dup8\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":13222:13272  _oracleCaller.observation(_constantProductPair, 0) */\n      dup4\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n      dup11\n      dup11\n      dup4\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":13222:13272  _oracleCaller.observation(_constantProductPair, 0) */\n      gas\n      staticcall\n      swap8\n      dup9\n      iszero\n      tag_376\n      jumpi\n      dup7\n      swap8\n      swap9\n        /* \"test/unit/ConstantProductPair.t.sol\":13386:13405  lObs.timestamp != 0 */\n      tag_1625\n        /* \"test/unit/ConstantProductPair.t.sol\":13222:13272  _oracleCaller.observation(_constantProductPair, 0) */\n      swap2\n        /* \"test/unit/ConstantProductPair.t.sol\":13386:13400  lObs.timestamp */\n      0x60\n        /* \"test/unit/ConstantProductPair.t.sol\":13222:13272  _oracleCaller.observation(_constantProductPair, 0) */\n      swap8\n      swap9\n      swap2\n      tag_1626\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1627:\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":13293:13317  lObs.logAccRawPrice == 0 */\n      tag_1628\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      mload\n      0x0d\n      signextend\n        /* \"test/unit/ConstantProductPair.t.sol\":13293:13317  lObs.logAccRawPrice == 0 */\n      iszero\n      tag_76\n      jump\t// in\n    tag_1628:\n        /* \"test/unit/ConstantProductPair.t.sol\":13339:13364  lObs.logAccLiquidity != 0 */\n      tag_1629\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40\n        /* \"test/unit/ConstantProductPair.t.sol\":13339:13359  lObs.logAccLiquidity */\n      dup3\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n      0x06\n      signextend\n        /* \"test/unit/ConstantProductPair.t.sol\":13339:13364  lObs.logAccLiquidity != 0 */\n      iszero\n      iszero\n      tag_76\n      jump\t// in\n    tag_1629:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":13386:13400  lObs.timestamp */\n      swap7\n      dup8\n      swap2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":13386:13405  lObs.timestamp != 0 */\n      iszero\n      iszero\n      tag_76\n      jump\t// in\n    tag_1625:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup1\n      dup9\n      sload\n      and\n      dup5\n      dup3\n      dup6\n      sload\n      and\n      0x44\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":13424:13474  _oracleCaller.observation(_constantProductPair, 1) */\n      dup1\n      swap5\n      dup2\n      swap4\n      dup9\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":13424:13474  _oracleCaller.observation(_constantProductPair, 1) */\n      dup4\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":12777:12778  1 */\n      0x01\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup13\n      dup4\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":13424:13474  _oracleCaller.observation(_constantProductPair, 1) */\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_1200\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":13386:13400  lObs.timestamp */\n      0x60\n        /* \"test/unit/ConstantProductPair.t.sol\":13588:13607  lObs.timestamp != 0 */\n      tag_1632\n        /* \"test/unit/ConstantProductPair.t.sol\":13424:13474  _oracleCaller.observation(_constantProductPair, 1) */\n      swap3\n      dup9\n      swap3\n      dup12\n      swap2\n      tag_1633\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1634:\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":13495:13519  lObs.logAccRawPrice != 0 */\n      tag_1635\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      mload\n      0x0d\n      signextend\n        /* \"test/unit/ConstantProductPair.t.sol\":13495:13519  lObs.logAccRawPrice != 0 */\n      iszero\n      iszero\n      tag_76\n      jump\t// in\n    tag_1635:\n        /* \"test/unit/ConstantProductPair.t.sol\":13541:13566  lObs.logAccLiquidity != 0 */\n      tag_1636\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40\n        /* \"test/unit/ConstantProductPair.t.sol\":13541:13561  lObs.logAccLiquidity */\n      dup3\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n      0x06\n      signextend\n        /* \"test/unit/ConstantProductPair.t.sol\":13541:13566  lObs.logAccLiquidity != 0 */\n      iszero\n      iszero\n      tag_76\n      jump\t// in\n    tag_1636:\n        /* \"test/unit/ConstantProductPair.t.sol\":13588:13602  lObs.timestamp */\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":13588:13607  lObs.timestamp != 0 */\n      iszero\n      iszero\n      tag_76\n      jump\t// in\n    tag_1632:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup1\n      dup4\n      sload\n      and\n        /* \"test/__fixtures/BaseTest.sol\":5270:5993  function _writeObservation(... */\n      swap8\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x00\n      mload(0x40)\n      swap10\n      dup3\n      dup12\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      swap11\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x029a00000000000000000000000000000000000000000000000000000000\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      dup13\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xfffffffffffac700000000000000000000000000000000000000000000000000\n      dup1\n      dup12\n      dup4\n      add\n      mstore\n      0x2b\n      dup3\n      add\n      mstore\n      0x0539000000000000000000000000000000000000\n      0x32\n      dup3\n      add\n      mstore\n      dup4\n      dup2\n      mstore\n      tag_1637\n      dup2\n      tag_4\n      jump\t// in\n    tag_1637:\n      mload\n      swap11\n      mload\n      swap11\n      dup4\n      dup2\n      lt\n      tag_1638\n      jumpi\n    tag_1639:\n      pop\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"test/__fixtures/BaseTest.sol\":5727:5738  vm.record() */\n      dup1\n      extcodesize\n      iszero\n      tag_291\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      0x266cf10900000000000000000000000000000000000000000000000000000000\n        /* \"test/__fixtures/BaseTest.sol\":5727:5738  vm.record() */\n      dup2\n      mstore\n      dup4\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/__fixtures/BaseTest.sol\":5727:5738  vm.record() */\n      dup2\n      dup4\n      dup7\n      gas\n      call\n      dup1\n      iszero\n      tag_841\n      jumpi\n      tag_1644\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1645:\n      pop\n      dup5\n      dup5\n      sload\n      and\n      dup9\n      dup5\n      0x44\n      dup14\n      mload(0x40)\n        /* \"test/__fixtures/BaseTest.sol\":5748:5788  _oracleCaller.observation(aPair, aIndex) */\n      swap5\n      dup6\n      swap4\n      dup5\n      swap3\n      dup14\n      dup5\n      mstore\n      dup10\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/__fixtures/BaseTest.sol\":5748:5788  _oracleCaller.observation(aPair, aIndex) */\n      dup6\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n      dup4\n      add\n      mstore\n        /* \"test/__fixtures/BaseTest.sol\":5748:5788  _oracleCaller.observation(aPair, aIndex) */\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_841\n      jumpi\n      tag_1648\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1649:\n      pop\n      mload(0x40)\n      0x65bc948100000000000000000000000000000000000000000000000000000000\n        /* \"test/__fixtures/BaseTest.sol\":5830:5857  vm.accesses(address(aPair)) */\n      dup2\n      mstore\n      dup3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/__fixtures/BaseTest.sol\":5830:5857  vm.accesses(address(aPair)) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/__fixtures/BaseTest.sol\":5830:5857  vm.accesses(address(aPair)) */\n      dup4\n      dup2\n      dup13\n      dup2\n      dup4\n      dup7\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_841\n      jumpi\n      dup5\n      swap2\n      tag_1652\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1653:\n      pop\n        /* \"test/__fixtures/BaseTest.sol\":5895:5896  2 */\n      0x02\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      mload\n        /* \"test/__fixtures/BaseTest.sol\":5875:5896  lAccesses.length == 2 */\n      sub\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_1654\n      jumpi\n        /* \"test/__fixtures/BaseTest.sol\":5963:5975  lAccesses[1] */\n      tag_1656\n      swap1\n      tag_82\n      jump\t// in\n    tag_1656:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n        /* \"test/__fixtures/BaseTest.sol\":5938:5986  vm.store(address(aPair), lAccesses[1], lEncoded) */\n      swap12\n      dup2\n      extcodesize\n      iszero\n      tag_285\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      0x70ca10bb00000000000000000000000000000000000000000000000000000000\n        /* \"test/__fixtures/BaseTest.sol\":5938:5986  vm.store(address(aPair), lAccesses[1], lEncoded) */\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap4\n      swap1\n      swap4\n      and\n      0x04\n        /* \"test/__fixtures/BaseTest.sol\":5938:5986  vm.store(address(aPair), lAccesses[1], lEncoded) */\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      dup4\n      add\n      swap13\n      swap1\n      swap13\n      mstore\n      0x44\n      dup3\n      add\n      swap12\n      swap1\n      swap12\n      mstore\n      swap10\n      dup2\n      swap1\n      dup12\n      swap1\n      0x64\n      swap1\n      dup3\n      swap1\n      dup5\n      swap1\n        /* \"test/__fixtures/BaseTest.sol\":5938:5986  vm.store(address(aPair), lAccesses[1], lEncoded) */\n      gas\n      call\n      swap10\n      dup11\n      iszero\n      tag_1474\n      jumpi\n      dup10\n      swap11\n      swap10\n      swap7\n      swap8\n      swap9\n      swap10\n      tag_1662\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1663:\n      pop\n      pop\n      swap1\n      dup2\n      dup7\n      dup10\n      0x44\n      dup5\n      dup10\n      swap8\n      swap7\n      sload\n      and\n      dup6\n      dup10\n      sload\n      and\n      swap1\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":13767:13817  _oracleCaller.observation(_constantProductPair, 0) */\n      swap11\n      dup12\n      swap5\n      dup6\n      swap4\n      dup11\n      dup6\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":13767:13817  _oracleCaller.observation(_constantProductPair, 0) */\n      dup6\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n      dup4\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":13767:13817  _oracleCaller.observation(_constantProductPair, 0) */\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_841\n      jumpi\n      dup9\n        /* \"test/unit/ConstantProductPair.t.sol\":13386:13400  lObs.timestamp */\n      0x60\n        /* \"test/unit/ConstantProductPair.t.sol\":13767:13817  _oracleCaller.observation(_constantProductPair, 0) */\n      dup5\n      swap4\n      dup11\n      swap10\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x44\n        /* \"test/unit/ConstantProductPair.t.sol\":13767:13817  _oracleCaller.observation(_constantProductPair, 0) */\n      swap9\n      swap2\n      tag_1666\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1667:\n      pop\n      dup1\n      mload\n      0x0d\n      signextend\n      0x0539\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":4814:4820  a != b */\n      swap1\n      dup2\n      dup2\n      sub\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":4810:5010  if (a != b) {... */\n      tag_1668\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1669:\n        /* \"test/unit/ConstantProductPair.t.sol\":13889:13909  lObs.logAccLiquidity */\n      pop\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40\n        /* \"test/unit/ConstantProductPair.t.sol\":13889:13909  lObs.logAccLiquidity */\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n      0x06\n      signextend\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffac7\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":4814:4820  a != b */\n      swap1\n      dup2\n      dup2\n      sub\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":4810:5010  if (a != b) {... */\n      tag_1670\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1671:\n        /* \"test/unit/ConstantProductPair.t.sol\":13944:13958  lObs.timestamp */\n      pop\n      pop\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n      and\n      0x029a\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5259:5265  a != b */\n      swap1\n      dup2\n      dup2\n      sub\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5255:5458  if (a != b) {... */\n      tag_1672\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1673:\n      pop\n      pop\n      sload\n      and\n      swap4\n      sload\n      and\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":12777:12778  1 */\n      0x01\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":13990:14040  _oracleCaller.observation(_constantProductPair, 1) */\n      swap9\n      dup10\n      swap6\n      dup7\n      swap5\n      dup6\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":13990:14040  _oracleCaller.observation(_constantProductPair, 1) */\n      dup6\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n      dup4\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":13990:14040  _oracleCaller.observation(_constantProductPair, 1) */\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_841\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":14154:14173  lObs.timestamp != 0 */\n      tag_316\n        /* \"test/unit/ConstantProductPair.t.sol\":13990:14040  _oracleCaller.observation(_constantProductPair, 1) */\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":13386:13400  lObs.timestamp */\n      0x60\n        /* \"test/unit/ConstantProductPair.t.sol\":13990:14040  _oracleCaller.observation(_constantProductPair, 1) */\n      swap3\n      dup7\n      swap3\n      tag_1677\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1678:\n      pop\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":14061:14085  lObs.logAccRawPrice != 0 */\n      tag_1635\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      mload\n      0x0d\n      signextend\n        /* \"test/unit/ConstantProductPair.t.sol\":14061:14085  lObs.logAccRawPrice != 0 */\n      iszero\n      iszero\n      tag_76\n      jump\t// in\n        /* \"test/unit/ConstantProductPair.t.sol\":13990:14040  _oracleCaller.observation(_constantProductPair, 1) */\n    tag_1677:\n      tag_1681\n      swap3\n      pop\n      dup1\n      returndatasize\n      lt\n      tag_320\n      jumpi\n      tag_322\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1681:\n      codesize\n      dup1\n      jump(tag_1678)\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5255:5458  if (a != b) {... */\n    tag_1672:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5286:5327  log(\"Error: a == b not satisfied [uint]\") */\n      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup10\n      mload(0x40)\n      dup6\n      dup2\n      mstore\n      0x22\n      dup7\n      dup3\n      add\n      mstore\n      0x4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e\n      0x40\n      dup3\n      add\n      mstore\n      0x745d000000000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":13386:13400  lObs.timestamp */\n      0x60\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5286:5327  log(\"Error: a == b not satisfied [uint]\") */\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      swap2\n      0x40\n      dup4\n      mstore\n      tag_1685\n      0x40\n      dup5\n      add\n      0x40\n      swap1\n      0x0a\n      dup2\n      mstore\n      0x2020457870656374656400000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_1685:\n      swap1\n      dup5\n      dup5\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5346:5377  log_named_uint(\"  Expected\", b) */\n      dup3\n      0xb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8\n      swap4\n      dup5\n      swap3\n      sub\n      swap1\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      dup1\n      swap2\n      0x40\n      dup3\n      mstore\n      tag_1686\n      0x40\n      dup4\n      add\n      0x40\n      swap1\n      0x0a\n      dup2\n      mstore\n      0x2020202041637475616c00000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_1686:\n      swap1\n      dup6\n      dup4\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5396:5427  log_named_uint(\"    Actual\", a) */\n      sub\n      swap1\n      log1\n      tag_1687\n      tag_42\n      jump\t// in\n    tag_1687:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5255:5458  if (a != b) {... */\n      codesize\n      dup1\n      jump(tag_1673)\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":4810:5010  if (a != b) {... */\n    tag_1670:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":4841:4881  log(\"Error: a == b not satisfied [int]\") */\n      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup13\n      mload(0x40)\n      dup9\n      dup2\n      mstore\n      0x21\n      dup10\n      dup3\n      add\n      mstore\n      0x4572726f723a2061203d3d2062206e6f7420736174697366696564205b696e74\n      0x40\n      dup3\n      add\n      mstore\n      0x5d00000000000000000000000000000000000000000000000000000000000000\n      dup8\n      dup3\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":4841:4881  log(\"Error: a == b not satisfied [int]\") */\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      swap2\n      0x40\n      dup4\n      mstore\n      tag_1688\n      0x40\n      dup5\n      add\n      0x40\n      swap1\n      0x0a\n      dup2\n      mstore\n      0x2020457870656374656400000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_1688:\n      swap1\n      dup8\n      dup5\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":4900:4930  log_named_int(\"  Expected\", b) */\n      dup3\n      0x2fe632779174374378442a8e978bccfbdcc1d6b2b0d81f7e8eb776ab2286f168\n      swap4\n      dup5\n      swap3\n      sub\n      swap1\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      dup1\n      swap2\n      0x40\n      dup3\n      mstore\n      tag_1689\n      0x40\n      dup4\n      add\n      0x40\n      swap1\n      0x0a\n      dup2\n      mstore\n      0x2020202041637475616c00000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_1689:\n      swap1\n      dup9\n      dup4\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":4949:4979  log_named_int(\"    Actual\", a) */\n      sub\n      swap1\n      log1\n      tag_1690\n      tag_42\n      jump\t// in\n    tag_1690:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":4810:5010  if (a != b) {... */\n      codesize\n      dup1\n      jump(tag_1671)\n    tag_1668:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":4841:4881  log(\"Error: a == b not satisfied [int]\") */\n      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup13\n      mload(0x40)\n      dup9\n      dup2\n      mstore\n      0x21\n      dup10\n      dup3\n      add\n      mstore\n      0x4572726f723a2061203d3d2062206e6f7420736174697366696564205b696e74\n      0x40\n      dup3\n      add\n      mstore\n      0x5d00000000000000000000000000000000000000000000000000000000000000\n      dup8\n      dup3\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":4841:4881  log(\"Error: a == b not satisfied [int]\") */\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      swap2\n      0x40\n      dup4\n      mstore\n      tag_1691\n      0x40\n      dup5\n      add\n      0x40\n      swap1\n      0x0a\n      dup2\n      mstore\n      0x2020457870656374656400000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_1691:\n      swap1\n      dup8\n      dup5\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":4900:4930  log_named_int(\"  Expected\", b) */\n      dup3\n      0x2fe632779174374378442a8e978bccfbdcc1d6b2b0d81f7e8eb776ab2286f168\n      swap4\n      dup5\n      swap3\n      sub\n      swap1\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      dup1\n      swap2\n      0x40\n      dup3\n      mstore\n      tag_1692\n      0x40\n      dup4\n      add\n      0x40\n      swap1\n      0x0a\n      dup2\n      mstore\n      0x2020202041637475616c00000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_1692:\n      swap1\n      dup9\n      dup4\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":4949:4979  log_named_int(\"    Actual\", a) */\n      sub\n      swap1\n      log1\n      tag_1693\n      tag_42\n      jump\t// in\n    tag_1693:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":4810:5010  if (a != b) {... */\n      codesize\n      dup1\n      jump(tag_1669)\n        /* \"test/unit/ConstantProductPair.t.sol\":13767:13817  _oracleCaller.observation(_constantProductPair, 0) */\n    tag_1666:\n      tag_1694\n      swap2\n      pop\n      dup11\n      returndatasize\n      dup13\n      gt\n      tag_320\n      jumpi\n      tag_322\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1694:\n      codesize\n      jump(tag_1667)\n        /* \"test/__fixtures/BaseTest.sol\":5938:5986  vm.store(address(aPair), lAccesses[1], lEncoded) */\n    tag_1662:\n      dup2\n      swap3\n      swap4\n      swap5\n      swap6\n      swap7\n      pop\n      tag_1698\n      swap1\n      tag_1\n      jump\t// in\n    tag_1698:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_196\n      jumpi\n        /* \"test/__fixtures/BaseTest.sol\":5938:5986  vm.store(address(aPair), lAccesses[1], lEncoded) */\n      swap1\n      dup2\n      dup10\n      swap6\n      swap5\n      swap4\n      swap3\n      jump(tag_1663)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1654:\n      0x64\n      dup6\n      0x1a\n      dup14\n      mload(0x40)\n      swap3\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup5\n      mstore\n      0x04\n      dup5\n      add\n      mstore\n      dup3\n      add\n      mstore\n      0x696e76616c6964206e756d626572206f66206163636573736573000000000000\n      0x44\n      dup3\n      add\n      mstore\n      revert\n        /* \"test/__fixtures/BaseTest.sol\":5830:5857  vm.accesses(address(aPair)) */\n    tag_1652:\n      tag_1701\n      swap2\n      pop\n      returndatasize\n      dup1\n      dup7\n      dup4\n      returndatacopy\n      tag_1237\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1701:\n      pop\n      codesize\n      jump(tag_1653)\n        /* \"test/__fixtures/BaseTest.sol\":5748:5788  _oracleCaller.observation(aPair, aIndex) */\n    tag_1648:\n      tag_1703\n      swap1\n      dup10\n      returndatasize\n      dup12\n      gt\n      tag_320\n      jumpi\n      tag_322\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1703:\n      pop\n      codesize\n      jump(tag_1649)\n        /* \"test/__fixtures/BaseTest.sol\":5727:5738  vm.record() */\n    tag_1644:\n      tag_1707\n      swap1\n      swap4\n      swap2\n      swap4\n      tag_1\n      jump\t// in\n    tag_1707:\n      swap2\n      codesize\n      jump(tag_1645)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1638:\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      swap1\n      dup5\n      sub\n      0x03\n      shl\n      shl\n      swap1\n      swap11\n      and\n      swap10\n      codesize\n      jump(tag_1639)\n        /* \"test/unit/ConstantProductPair.t.sol\":13424:13474  _oracleCaller.observation(_constantProductPair, 1) */\n    tag_1633:\n      tag_1708\n      swap2\n      pop\n      dup9\n      returndatasize\n      dup11\n      gt\n      tag_320\n      jumpi\n      tag_322\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1708:\n      codesize\n      jump(tag_1634)\n        /* \"test/unit/ConstantProductPair.t.sol\":13222:13272  _oracleCaller.observation(_constantProductPair, 0) */\n    tag_1626:\n      tag_1712\n      swap2\n      pop\n      dup7\n      returndatasize\n      dup9\n      gt\n      tag_320\n      jumpi\n      tag_322\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1712:\n      codesize\n      jump(tag_1627)\n        /* \"test/unit/ConstantProductPair.t.sol\":13122:13156  _constantProductPair.getReserves() */\n    tag_1621:\n      tag_1716\n      swap2\n      pop\n      dup7\n      returndatasize\n      dup9\n      gt\n      tag_328\n      jumpi\n      tag_330\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1716:\n      swap3\n      pop\n      pop\n      pop\n      codesize\n      jump(tag_1622)\n        /* \"test/unit/ConstantProductPair.t.sol\":13014:13070  _constantProductPair.swap(1e17, true, address(this), \"\") */\n    tag_1616:\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_1720\n      jumpi\n    tag_1721:\n      tag_1722\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1722:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":13014:13070  _constantProductPair.swap(1e17, true, address(this), \"\") */\n      dup4\n      codesize\n      jump(tag_1617)\n    tag_1720:\n      pop\n      returndatasize\n      jump(tag_1721)\n        /* \"test/unit/ConstantProductPair.t.sol\":12955:13004  _tokenA.mint(address(_constantProductPair), 1e17) */\n    tag_1611:\n      tag_1725\n      swap1\n      tag_1\n      jump\t// in\n    tag_1725:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_285\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":12955:13004  _tokenA.mint(address(_constantProductPair), 1e17) */\n      dup4\n      codesize\n      jump(tag_1612)\n        /* \"test/unit/ConstantProductPair.t.sol\":12848:12904  _constantProductPair.swap(1e17, true, address(this), \"\") */\n    tag_1604:\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_1728\n      jumpi\n    tag_1729:\n      tag_1730\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1730:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":12848:12904  _constantProductPair.swap(1e17, true, address(this), \"\") */\n      dup7\n      codesize\n      jump(tag_1605)\n    tag_1728:\n      pop\n      returndatasize\n      jump(tag_1729)\n        /* \"test/unit/ConstantProductPair.t.sol\":12789:12838  _tokenA.mint(address(_constantProductPair), 1e17) */\n    tag_1599:\n      tag_1733\n      swap1\n      tag_1\n      jump\t// in\n    tag_1733:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_285\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":12789:12838  _tokenA.mint(address(_constantProductPair), 1e17) */\n      dup4\n      codesize\n      jump(tag_1600)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_156:\n      pop\n      jumpi(tag_196, callvalue)\n      dup1\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_196\n      jumpi\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n        /* \"test/unit/ConstantProductPair.t.sol\":6177:6227  _createPair(address(_tokenB), address(_tokenC), 0) */\n      tag_1740\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":6197:6204  _tokenB */\n      0x1a\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      dup3\n        /* \"test/unit/ConstantProductPair.t.sol\":6215:6222  _tokenC */\n      0x1b\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":6177:6227  _createPair(address(_tokenB), address(_tokenC), 0) */\n      swap1\n      tag_46\n      jump\t// in\n    tag_1740:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      and\n      swap1\n      dup1\n        /* \"test/unit/ConstantProductPair.t.sol\":6197:6204  _tokenB */\n      0x1a\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":6384:6422  _tokenB.mint(address(lPair), lAmountB) */\n      swap2\n      dup3\n      extcodesize\n      iszero\n      tag_285\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      swap1\n      dup5\n      0x40c10f1900000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":6384:6422  _tokenB.mint(address(lPair), lAmountB) */\n      swap3\n      dup4\n      dup2\n      mstore\n      dup3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":6384:6422  _tokenB.mint(address(lPair), lAmountB) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      dup2\n      0x44\n      dup2\n      dup4\n      0x24\n      swap11\n      0xfffffffffffffc72815b397fff\n      dup13\n      dup5\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":6384:6422  _tokenB.mint(address(lPair), lAmountB) */\n      gas\n      call\n      dup1\n      iszero\n      tag_219\n      jumpi\n      tag_1745\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1746:\n      pop\n      dup4\n        /* \"test/unit/ConstantProductPair.t.sol\":6215:6222  _tokenC */\n      0x1b\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":6432:6470  _tokenC.mint(address(lPair), lAmountC) */\n      dup1\n      extcodesize\n      iszero\n      tag_255\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      dup1\n      swap2\n      0x44\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":6432:6470  _tokenC.mint(address(lPair), lAmountC) */\n      dup1\n      swap5\n      dup2\n      swap4\n      dup10\n      dup4\n      mstore\n      dup9\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":6432:6470  _tokenC.mint(address(lPair), lAmountC) */\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffff\n      dup13\n      dup5\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":6432:6470  _tokenC.mint(address(lPair), lAmountC) */\n      gas\n      call\n      dup1\n      iszero\n      tag_219\n      jumpi\n      tag_1751\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1752:\n      pop\n      pop\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":6480:6505  lPair.mint(address(this)) */\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x6a62784200000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":6480:6505  lPair.mint(address(this)) */\n      dup5\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":6499:6503  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":6480:6505  lPair.mint(address(this)) */\n      dup6\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":6480:6505  lPair.mint(address(this)) */\n      swap4\n      dup5\n      dup2\n      dup8\n      dup2\n      dup11\n      dup8\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_1089\n      jumpi\n      dup6\n      swap2\n      tag_1755\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1756:\n      pop\n      pop\n      dup6\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":6197:6204  _tokenB */\n      0x1a\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":6531:6572  _tokenB.mint(address(lPair), lSwapAmount) */\n      swap4\n      dup5\n      extcodesize\n      iszero\n      tag_255\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":6531:6572  _tokenB.mint(address(lPair), lSwapAmount) */\n      swap1\n      dup2\n      mstore\n      dup4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":6531:6572  _tokenB.mint(address(lPair), lSwapAmount) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":6260:6268  0.001e18 */\n      dup2\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x44\n        /* \"test/unit/ConstantProductPair.t.sol\":6260:6268  0.001e18 */\n      dup2\n      dup4\n      0x038d7ea4c68000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap10\n      dup11\n      dup14\n      dup5\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":6531:6572  _tokenB.mint(address(lPair), lSwapAmount) */\n      gas\n      call\n      dup1\n      iszero\n      tag_219\n      jumpi\n      tag_1761\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1762:\n      pop\n      pop\n      mload(0x40)\n      0x0dfe168100000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":6606:6620  lPair.token0() */\n      dup2\n      mstore\n      dup5\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":6606:6620  lPair.token0() */\n      dup2\n      dup7\n      gas\n      staticcall\n      swap4\n      dup5\n      iszero\n      tag_1089\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_1765\n        /* \"test/unit/ConstantProductPair.t.sol\":6606:6620  lPair.token0() */\n      swap5\n      dup7\n      swap3\n      dup10\n      swap2\n      tag_1766\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1767:\n      pop\n      dup4\n      dup1\n        /* \"test/unit/ConstantProductPair.t.sol\":6197:6204  _tokenB */\n      0x1a\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      swap2\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":6606:6631  lPair.token0() == _tokenB */\n      eq\n        /* \"test/unit/ConstantProductPair.t.sol\":6606:6676  lPair.token0() == _tokenB ? int256(lSwapAmount) : -int256(lSwapAmount) */\n      0x00\n      eq\n      tag_1768\n      jumpi\n    tag_1770:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      swap1\n      tag_1771\n      dup3\n      tag_2\n      jump\t// in\n    tag_1771:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      dup9\n      dup3\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":6582:6718  lPair.swap(... */\n      swap6\n      dup7\n      swap3\n      dup4\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xe12bd9d800000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":6582:6718  lPair.swap(... */\n      dup5\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":6582:6718  lPair.swap(... */\n      dup5\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":6678:6682  true */\n      0x01\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup11\n      dup5\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":6499:6503  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x44\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x80\n      0x64\n      dup5\n      add\n      mstore\n      0x84\n      dup4\n      add\n      swap1\n      tag_10\n      jump\t// in\n    tag_1765:\n        /* \"test/unit/ConstantProductPair.t.sol\":6582:6718  lPair.swap(... */\n      sub\n      dup2\n      dup10\n      dup7\n      gas\n      call\n      dup1\n      iszero\n      tag_376\n      jumpi\n      dup6\n      swap4\n      dup6\n      swap2\n      tag_1774\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":6606:6676  lPair.token0() == _tokenB ? int256(lSwapAmount) : -int256(lSwapAmount) */\n    tag_1775:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      pop\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":6197:6204  _tokenB */\n      0x1a\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      mload(0x40)\n      swap5\n      dup6\n      dup1\n      swap3\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":6756:6789  _tokenB.balanceOf(address(lPair)) */\n      swap7\n      dup8\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":6756:6789  _tokenB.balanceOf(address(lPair)) */\n      dup4\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":6756:6789  _tokenB.balanceOf(address(lPair)) */\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_376\n      jumpi\n      dup5\n      swap4\n      dup8\n      swap2\n      tag_1778\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":6606:6676  lPair.token0() == _tokenB ? int256(lSwapAmount) : -int256(lSwapAmount) */\n    tag_1779:\n        /* \"test/unit/ConstantProductPair.t.sol\":6747:6809  assertEq(_tokenB.balanceOf(address(lPair)), type(uint104).max) */\n      pop\n      tag_1780\n      swap1\n      tag_38\n      jump\t// in\n    tag_1780:\n        /* \"test/unit/ConstantProductPair.t.sol\":6215:6222  _tokenC */\n      0x1b\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      swap4\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":6828:6860  _tokenC.balanceOf(address(this)) */\n      dup1\n      swap6\n      dup2\n      swap4\n      dup3\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":6499:6503  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":6828:6860  _tokenC.balanceOf(address(this)) */\n      dup4\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":6828:6860  _tokenC.balanceOf(address(this)) */\n      gas\n      staticcall\n      swap2\n      dup3\n      iszero\n      tag_215\n      jumpi\n      dup4\n      swap3\n      tag_1783\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":6606:6676  lPair.token0() == _tokenB ? int256(lSwapAmount) : -int256(lSwapAmount) */\n    tag_1784:\n        /* \"test/unit/ConstantProductPair.t.sol\":6862:6873  0.000997e18 */\n      pop\n      0x038ac426d75000\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5259:5265  a != b */\n      swap2\n      dup3\n      dup2\n      sub\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5255:5458  if (a != b) {... */\n      tag_592\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup4\n      dup1\n      return\n        /* \"test/unit/ConstantProductPair.t.sol\":6828:6860  _tokenC.balanceOf(address(this)) */\n    tag_1783:\n      swap1\n      dup1\n      swap3\n      pop\n      dup2\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_1790\n      jumpi\n    tag_1791:\n      tag_1792\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1792:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":6828:6860  _tokenC.balanceOf(address(this)) */\n      swap1\n      codesize\n      jump(tag_1784)\n    tag_1790:\n      pop\n      returndatasize\n      jump(tag_1791)\n        /* \"test/unit/ConstantProductPair.t.sol\":6756:6789  _tokenB.balanceOf(address(lPair)) */\n    tag_1778:\n      dup5\n      dup2\n      swap6\n      swap3\n      pop\n      returndatasize\n      dup4\n      gt\n      tag_1795\n      jumpi\n    tag_1796:\n      tag_1797\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1797:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":6747:6809  assertEq(_tokenB.balanceOf(address(lPair)), type(uint104).max) */\n      tag_1780\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup5\n      swap4\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":6756:6789  _tokenB.balanceOf(address(lPair)) */\n      swap1\n      jump(tag_1779)\n    tag_1795:\n      pop\n      returndatasize\n      jump(tag_1796)\n        /* \"test/unit/ConstantProductPair.t.sol\":6582:6718  lPair.swap(... */\n    tag_1774:\n      swap1\n      dup1\n      swap3\n      swap5\n      pop\n      returndatasize\n      dup4\n      gt\n      tag_1800\n      jumpi\n    tag_1801:\n      tag_1802\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1802:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":6582:6718  lPair.swap(... */\n      dup4\n      swap2\n      dup4\n      codesize\n      jump(tag_1775)\n    tag_1800:\n      pop\n      returndatasize\n      jump(tag_1801)\n        /* \"test/unit/ConstantProductPair.t.sol\":6606:6676  lPair.token0() == _tokenB ? int256(lSwapAmount) : -int256(lSwapAmount) */\n    tag_1768:\n      pop\n        /* \"lib/forge-std/src/StdMath.sol\":124:202  -57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffc72815b398000\n        /* \"test/unit/ConstantProductPair.t.sol\":6606:6676  lPair.token0() == _tokenB ? int256(lSwapAmount) : -int256(lSwapAmount) */\n      jump(tag_1770)\n        /* \"test/unit/ConstantProductPair.t.sol\":6606:6620  lPair.token0() */\n    tag_1766:\n      tag_1805\n      swap2\n      pop\n      dup4\n      returndatasize\n      dup6\n      gt\n      tag_1018\n      jumpi\n      tag_1020\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1805:\n      codesize\n      jump(tag_1767)\n        /* \"test/unit/ConstantProductPair.t.sol\":6531:6572  _tokenB.mint(address(lPair), lSwapAmount) */\n    tag_1761:\n      tag_1809\n      swap1\n      tag_1\n      jump\t// in\n    tag_1809:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_1565\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":6531:6572  _tokenB.mint(address(lPair), lSwapAmount) */\n      dup6\n      codesize\n      jump(tag_1762)\n        /* \"test/unit/ConstantProductPair.t.sol\":6480:6505  lPair.mint(address(this)) */\n    tag_1755:\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_1812\n      jumpi\n    tag_1813:\n      tag_1814\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_1814:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":6480:6505  lPair.mint(address(this)) */\n      dup4\n      codesize\n      jump(tag_1756)\n    tag_1812:\n      pop\n      returndatasize\n      jump(tag_1813)\n        /* \"test/unit/ConstantProductPair.t.sol\":6432:6470  _tokenC.mint(address(lPair), lAmountC) */\n    tag_1751:\n      tag_1817\n      swap1\n      tag_1\n      jump\t// in\n    tag_1817:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_249\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":6432:6470  _tokenC.mint(address(lPair), lAmountC) */\n      dup5\n      codesize\n      jump(tag_1752)\n        /* \"test/unit/ConstantProductPair.t.sol\":6384:6422  _tokenB.mint(address(lPair), lAmountB) */\n    tag_1745:\n      tag_1820\n      swap1\n      tag_1\n      jump\t// in\n    tag_1820:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_249\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":6384:6422  _tokenB.mint(address(lPair), lAmountB) */\n      dup5\n      codesize\n      jump(tag_1746)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_154:\n      pop\n      jumpi(tag_196, callvalue)\n      dup1\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_196\n      jumpi\n      0x010000000000000000000000000000000000000000\n      0xffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":5673:5705  _validateCallback = _reenterSwap */\n      0x21\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      or\n        /* \"test/unit/ConstantProductPair.t.sol\":5673:5705  _validateCallback = _reenterSwap */\n      0x21\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sstore\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n        /* \"test/unit/ConstantProductPair.t.sol\":5786:5838  _getToken0Token1(address(_tokenA), address(_tokenB)) */\n      tag_1827\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":5811:5818  _tokenA */\n      0x19\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      dup3\n        /* \"test/unit/ConstantProductPair.t.sol\":5829:5836  _tokenB */\n      0x1a\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":5786:5838  _getToken0Token1(address(_tokenA), address(_tokenB)) */\n      swap1\n      tag_49\n      jump\t// in\n    tag_1827:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      pop\n      and\n      swap1\n      dup3\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":5900:5920  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":5864:5928  MintableERC20(lToken0).mint(address(_constantProductPair), 1e18) */\n      dup4\n      extcodesize\n      iszero\n      tag_255\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":5864:5928  MintableERC20(lToken0).mint(address(_constantProductPair), 1e18) */\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40c10f1900000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":5864:5928  MintableERC20(lToken0).mint(address(_constantProductPair), 1e18) */\n      dup3\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":5864:5928  MintableERC20(lToken0).mint(address(_constantProductPair), 1e18) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":5923:5927  1e18 */\n      dup2\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x44\n        /* \"test/unit/ConstantProductPair.t.sol\":5923:5927  1e18 */\n      dup2\n      dup4\n      0x0de0b6b3a7640000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap9\n      dup10\n      0x24\n      dup5\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":5864:5928  MintableERC20(lToken0).mint(address(_constantProductPair), 1e18) */\n      gas\n      call\n      dup1\n      iszero\n      tag_219\n      jumpi\n      tag_1832\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1833:\n      pop\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"test/unit/ConstantProductPair.t.sol\":5938:5967  vm.expectRevert(\"REENTRANCY\") */\n      dup1\n      extcodesize\n      iszero\n      tag_255\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      dup1\n      swap2\n      0x64\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":5938:5967  vm.expectRevert(\"REENTRANCY\") */\n      dup1\n      swap5\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xf28dceb300000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":5938:5967  vm.expectRevert(\"REENTRANCY\") */\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":5938:5967  vm.expectRevert(\"REENTRANCY\") */\n      dup5\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n      0x0a\n      0x24\n      dup5\n      add\n      mstore\n      0x5245454e5452414e435900000000000000000000000000000000000000000000\n      0x44\n      dup5\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":5938:5967  vm.expectRevert(\"REENTRANCY\") */\n      gas\n      call\n      dup1\n      iszero\n      tag_219\n      jumpi\n      tag_1838\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1839:\n      pop\n      pop\n      tag_1840\n      swap2\n      0x20\n      swap2\n        /* \"test/unit/ConstantProductPair.t.sol\":5900:5920  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      tag_1841\n      tag_50\n      jump\t// in\n    tag_1841:\n      swap2\n      dup6\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":5977:6045  _constantProductPair.swap(1e18, true, address(this), bytes(hex\"00\")) */\n      dup1\n      swap7\n      dup2\n      swap6\n      dup3\n      swap5\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xe12bd9d800000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":5977:6045  _constantProductPair.swap(1e18, true, address(this), bytes(hex\"00\")) */\n      dup5\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":5977:6045  _constantProductPair.swap(1e18, true, address(this), bytes(hex\"00\")) */\n      dup5\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":5693:5705  _reenterSwap */\n      0x01\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      dup5\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":6023:6027  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x44\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x80\n      0x64\n      dup5\n      add\n      mstore\n      0x84\n      dup4\n      add\n      swap1\n      tag_10\n      jump\t// in\n    tag_1840:\n        /* \"test/unit/ConstantProductPair.t.sol\":5977:6045  _constantProductPair.swap(1e18, true, address(this), bytes(hex\"00\")) */\n      sub\n      swap3\n      gas\n      call\n      dup1\n      iszero\n      tag_219\n      jumpi\n      tag_221\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      pop\n      dup1\n      return\n        /* \"test/unit/ConstantProductPair.t.sol\":5938:5967  vm.expectRevert(\"REENTRANCY\") */\n    tag_1838:\n      tag_1851\n      swap1\n      tag_1\n      jump\t// in\n    tag_1851:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_291\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":5938:5967  vm.expectRevert(\"REENTRANCY\") */\n      dup3\n      codesize\n      jump(tag_1839)\n        /* \"test/unit/ConstantProductPair.t.sol\":5864:5928  MintableERC20(lToken0).mint(address(_constantProductPair), 1e18) */\n    tag_1832:\n      tag_1854\n      swap1\n      tag_1\n      jump\t// in\n    tag_1854:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_291\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":5864:5928  MintableERC20(lToken0).mint(address(_constantProductPair), 1e18) */\n      dup3\n      codesize\n      jump(tag_1833)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_152:\n      pop\n      jumpi(tag_196, callvalue)\n      dup1\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_196\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":7040:7064  stdError.arithmeticError */\n      dup1\n      tag_1861\n      tag_47\n      jump\t// in\n    tag_1861:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"test/unit/ConstantProductPair.t.sol\":7024:7065  vm.expectRevert(stdError.arithmeticError) */\n      dup1\n      extcodesize\n      iszero\n      tag_1862\n      jumpi\n        /* \"lib/forge-std/src/StdError.sol\":317:364  abi.encodeWithSignature(\"Panic(uint256)\", 0x11) */\n      tag_1864\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup4\n      swap3\n      swap2\n      dup4\n      swap3\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":7024:7065  vm.expectRevert(stdError.arithmeticError) */\n      swap5\n      dup6\n      dup1\n      swap5\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xf28dceb300000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":7024:7065  vm.expectRevert(stdError.arithmeticError) */\n      dup4\n      mstore\n        /* \"lib/forge-std/src/StdError.sol\":317:364  abi.encodeWithSignature(\"Panic(uint256)\", 0x11) */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":7024:7065  vm.expectRevert(stdError.arithmeticError) */\n      dup5\n      add\n        /* \"lib/forge-std/src/StdError.sol\":317:364  abi.encodeWithSignature(\"Panic(uint256)\", 0x11) */\n      mstore\n      0x24\n      dup4\n      add\n      swap1\n      tag_10\n      jump\t// in\n    tag_1864:\n        /* \"test/unit/ConstantProductPair.t.sol\":7024:7065  vm.expectRevert(stdError.arithmeticError) */\n      sub\n      swap3\n      gas\n      call\n      dup1\n      iszero\n      tag_219\n      jumpi\n      tag_1867\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1868:\n      pop\n        /* \"lib/forge-std/src/StdError.sol\":317:364  abi.encodeWithSignature(\"Panic(uint256)\", 0x11) */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":7075:7095  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      0xa4\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":7075:7135  _constantProductPair.swap(lSwapAmt, true, address(this), \"\") */\n      dup1\n      swap5\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xe12bd9d800000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":7075:7135  _constantProductPair.swap(lSwapAmt, true, address(this), \"\") */\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":6973:6989  type(int256).min */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":7075:7135  _constantProductPair.swap(lSwapAmt, true, address(this), \"\") */\n      dup5\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":7111:7115  true */\n      0x01\n        /* \"lib/forge-std/src/StdError.sol\":317:364  abi.encodeWithSignature(\"Panic(uint256)\", 0x11) */\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup5\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":7125:7129  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x44\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x80\n      0x64\n      dup5\n      add\n      mstore\n      0x00\n      0x84\n      dup5\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":7075:7135  _constantProductPair.swap(lSwapAmt, true, address(this), \"\") */\n      gas\n      call\n      dup1\n      iszero\n      tag_219\n      jumpi\n      tag_221\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      pop\n      dup1\n      return\n        /* \"test/unit/ConstantProductPair.t.sol\":7024:7065  vm.expectRevert(stdError.arithmeticError) */\n    tag_1867:\n      tag_1878\n      swap1\n      tag_1\n      jump\t// in\n    tag_1878:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_196\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":7024:7065  vm.expectRevert(stdError.arithmeticError) */\n      dup1\n      codesize\n      jump(tag_1868)\n    tag_1862:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      pop\n      pop\n      revert\n    tag_150:\n      pop\n      jumpi(tag_196, callvalue)\n      dup1\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_196\n      jumpi\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":18245:18253  _factory */\n      0x13\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"test/unit/ConstantProductPair.t.sol\":18228:18255  vm.prank(address(_factory)) */\n      dup1\n      extcodesize\n      iszero\n      tag_291\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      dup4\n      swap3\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":18228:18255  vm.prank(address(_factory)) */\n      swap5\n      dup6\n      swap4\n      dup5\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xca669fa700000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":18228:18255  vm.prank(address(_factory)) */\n      dup5\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":18228:18255  vm.prank(address(_factory)) */\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":18228:18255  vm.prank(address(_factory)) */\n      gas\n      call\n      dup1\n      iszero\n      tag_312\n      jumpi\n      tag_1889\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1890:\n        /* \"test/unit/ConstantProductPair.t.sol\":18265:18285  _constantProductPair */\n      pop\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      dup3\n      dup2\n      dup4\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":18265:18305  _constantProductPair.setCustomSwapFee(0) */\n      dup1\n      extcodesize\n      iszero\n      tag_255\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      swap1\n      0x24\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":18265:18305  _constantProductPair.setCustomSwapFee(0) */\n      dup1\n      swap5\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x9568e73b00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":18265:18305  _constantProductPair.setCustomSwapFee(0) */\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x00\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":18265:18305  _constantProductPair.setCustomSwapFee(0) */\n      dup5\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":18265:18305  _constantProductPair.setCustomSwapFee(0) */\n      gas\n      call\n      dup1\n      iszero\n      tag_312\n      jumpi\n      tag_1895\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1896:\n        /* \"test/unit/ConstantProductPair.t.sol\":18337:18350  _stepTime(10) */\n      pop\n      tag_1897\n      tag_78\n      jump\t// in\n    tag_1897:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup1\n        /* \"test/unit/ConstantProductPair.t.sol\":18397:18404  _tokenA */\n      0x19\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      dup2\n      dup4\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":18397:18448  _tokenA.mint(address(_constantProductPair), 100e18) */\n      swap1\n      dup1\n      extcodesize\n      iszero\n      tag_249\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      0x40c10f1900000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":18397:18448  _tokenA.mint(address(_constantProductPair), 100e18) */\n      dup1\n      dup3\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap4\n      swap1\n      swap4\n      and\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":18397:18448  _tokenA.mint(address(_constantProductPair), 100e18) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":18441:18447  100e18 */\n      0x056bc75e2d63100000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      dup3\n      add\n      mstore\n      swap1\n      dup6\n      swap1\n      dup3\n      swap1\n      0x44\n      swap1\n      dup3\n      swap1\n      dup5\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":18397:18448  _tokenA.mint(address(_constantProductPair), 100e18) */\n      gas\n      call\n      dup1\n      iszero\n      tag_312\n      jumpi\n      tag_1903\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1904:\n      pop\n      dup2\n      dup4\n      sload\n      and\n      swap1\n      dup5\n      0x20\n      dup5\n        /* \"test/unit/ConstantProductPair.t.sol\":18498:18502  _bob */\n      0x17\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      swap4\n      0xa4\n      mload(0x40)\n      dup1\n      swap5\n      dup2\n      swap4\n      0xe12bd9d800000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":18458:18507  _constantProductPair.swap(100e18, true, _bob, \"\") */\n      swap9\n      dup10\n      dup5\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":18441:18447  100e18 */\n      0x056bc75e2d63100000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":18458:18507  _constantProductPair.swap(100e18, true, _bob, \"\") */\n      dup6\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":18492:18496  true */\n      0x01\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      dup6\n      add\n      mstore\n      0x44\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x80\n      0x64\n      dup5\n      add\n      mstore\n      0x00\n      0x84\n      dup5\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":18458:18507  _constantProductPair.swap(100e18, true, _bob, \"\") */\n      gas\n      call\n      dup1\n      iszero\n      tag_312\n      jumpi\n      tag_1907\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1908:\n        /* \"test/unit/ConstantProductPair.t.sol\":18517:18530  _stepTime(10) */\n      pop\n      tag_1909\n      tag_78\n      jump\t// in\n    tag_1909:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n        /* \"test/unit/ConstantProductPair.t.sol\":18397:18404  _tokenA */\n      0x19\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      dup4\n      dup6\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":18563:18614  _tokenA.mint(address(_constantProductPair), 200e18) */\n      dup2\n      extcodesize\n      iszero\n      tag_1219\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":18563:18614  _tokenA.mint(address(_constantProductPair), 200e18) */\n      swap3\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":18563:18614  _tokenA.mint(address(_constantProductPair), 200e18) */\n      dup4\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":18607:18613  200e18 */\n      dup6\n      dup3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x44\n        /* \"test/unit/ConstantProductPair.t.sol\":18607:18613  200e18 */\n      dup2\n      dup4\n      0x0ad78ebc5ac6200000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap6\n      dup7\n      0x24\n      dup5\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":18563:18614  _tokenA.mint(address(_constantProductPair), 200e18) */\n      gas\n      call\n      swap2\n      dup3\n      iszero\n      tag_312\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":18563:18614  _tokenA.mint(address(_constantProductPair), 200e18) */\n      swap3\n      tag_1914\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1915:\n      pop\n      0xa4\n      dup5\n      dup7\n      sload\n      and\n      swap4\n      dup8\n      dup7\n        /* \"test/unit/ConstantProductPair.t.sol\":18498:18502  _bob */\n      0x17\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      swap6\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":18624:18673  _constantProductPair.swap(200e18, true, _bob, \"\") */\n      swap7\n      dup8\n      swap6\n      dup7\n      swap5\n      dup6\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":18624:18673  _constantProductPair.swap(200e18, true, _bob, \"\") */\n      dup6\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":18492:18496  true */\n      0x01\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      dup6\n      add\n      mstore\n      0x44\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x80\n      0x64\n      dup5\n      add\n      mstore\n      0x00\n      0x84\n      dup5\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":18624:18673  _constantProductPair.swap(200e18, true, _bob, \"\") */\n      gas\n      call\n      dup1\n      iszero\n      tag_312\n      jumpi\n      tag_1918\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1919:\n        /* \"test/unit/ConstantProductPair.t.sol\":18683:18696  _stepTime(10) */\n      pop\n      tag_1920\n      tag_78\n      jump\t// in\n    tag_1920:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      dup2\n      dup4\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":18706:18733  _constantProductPair.sync() */\n      dup1\n      extcodesize\n      iszero\n      tag_255\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      swap1\n      0x04\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":18706:18733  _constantProductPair.sync() */\n      dup1\n      swap5\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xfff6cae900000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":18706:18733  _constantProductPair.sync() */\n      dup4\n      mstore\n      gas\n      call\n      dup1\n      iszero\n      tag_312\n      jumpi\n      tag_1925\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1926:\n      pop\n      dup1\n      sload(0x20)\n      and\n      swap2\n      sload\n      and\n      mload(0x40)\n      swap2\n      0xc9d163d100000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":18789:18839  _oracleCaller.observation(_constantProductPair, 0) */\n      swap1\n      dup2\n      dup5\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x80\n        /* \"test/unit/ConstantProductPair.t.sol\":18789:18839  _oracleCaller.observation(_constantProductPair, 0) */\n      dup5\n      dup1\n      tag_1927\n      dup7\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":18789:18839  _oracleCaller.observation(_constantProductPair, 0) */\n      dup4\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n      0x00\n      swap2\n      swap4\n      swap3\n      swap4\n      0xffffffffffffffffffffffffffffffffffffffff\n      0x40\n      dup3\n      add\n      swap6\n      and\n      dup2\n      mstore\n      add\n      mstore\n      jump\n        /* \"test/unit/ConstantProductPair.t.sol\":18789:18839  _oracleCaller.observation(_constantProductPair, 0) */\n    tag_1927:\n      sub\n      dup2\n      dup5\n      gas\n      staticcall\n      swap4\n      dup5\n      iszero\n      tag_312\n      jumpi\n      dup6\n      swap5\n      tag_1930\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1931:\n      pop\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":18876:18926  _oracleCaller.observation(_constantProductPair, 1) */\n      dup3\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":18876:18926  _oracleCaller.observation(_constantProductPair, 1) */\n      dup3\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":18492:18496  true */\n      0x01\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      dup3\n      add\n      mstore\n      swap3\n      0x80\n      dup5\n      0x44\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":18876:18926  _oracleCaller.observation(_constantProductPair, 1) */\n      dup6\n      gas\n      staticcall\n      swap2\n      dup3\n      iszero\n      tag_312\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":18963:19013  _oracleCaller.observation(_constantProductPair, 2) */\n      tag_1935\n        /* \"test/unit/ConstantProductPair.t.sol\":18876:18926  _oracleCaller.observation(_constantProductPair, 1) */\n      swap5\n      dup8\n      swap4\n      tag_1936\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1937:\n      pop\n      0x80\n      swap3\n      swap4\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":18963:19013  _oracleCaller.observation(_constantProductPair, 2) */\n      dup1\n      swap7\n      dup2\n      swap5\n      dup3\n      swap4\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":18963:19013  _oracleCaller.observation(_constantProductPair, 2) */\n      dup4\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":19011:19012  2 */\n      0x02\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap2\n      swap4\n      swap3\n      swap4\n      0xffffffffffffffffffffffffffffffffffffffff\n      0x40\n      dup3\n      add\n      swap6\n      and\n      dup2\n      mstore\n      add\n      mstore\n      jump\n        /* \"test/unit/ConstantProductPair.t.sol\":18963:19013  _oracleCaller.observation(_constantProductPair, 2) */\n    tag_1935:\n      sub\n      swap2\n      gas\n      staticcall\n      swap2\n      dup3\n      iszero\n      tag_312\n      jumpi\n      dup5\n      swap3\n      tag_1940\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1941:\n      pop\n      dup3\n      mload\n      0x0d\n      signextend\n      mload(0x40)\n      tag_1942\n      dup2\n      tag_4\n      jump\t// in\n    tag_1942:\n        /* \"test/unit/ConstantProductPair.t.sol\":18492:18496  true */\n      0x01\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x3100000000000000000000000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5095:5101  a != b */\n      dup2\n      iszero\n      iszero\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5091:5191  if (a != b) {... */\n      swap1\n      dup2\n      tag_1943\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1944:\n      pop\n      pop\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":19108:19247  assertEq(... */\n      tag_1945\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      mload\n      0x0d\n      signextend\n        /* \"test/unit/ConstantProductPair.t.sol\":19192:19232  LogCompression.toLowResLog(0.25e18) * 10 */\n      tag_1946\n        /* \"test/unit/ConstantProductPair.t.sol\":19192:19227  LogCompression.toLowResLog(0.25e18) */\n      tag_1947\n      tag_100\n      jump\t// in\n    tag_1947:\n        /* \"test/unit/ConstantProductPair.t.sol\":19192:19232  LogCompression.toLowResLog(0.25e18) * 10 */\n      tag_98\n      jump\t// in\n    tag_1946:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      swap2\n      tag_1948\n      dup4\n      tag_4\n      jump\t// in\n    tag_1948:\n        /* \"test/unit/ConstantProductPair.t.sol\":18492:18496  true */\n      0x01\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x3200000000000000000000000000000000000000000000000000000000000000\n      0x20\n      dup5\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":19108:19247  assertEq(... */\n      tag_99\n      jump\t// in\n    tag_1945:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      mload\n      0x0d\n      signextend\n        /* \"test/unit/ConstantProductPair.t.sol\":19353:19393  LogCompression.toLowResLog(0.25e18) * 10 */\n      tag_1949\n        /* \"test/unit/ConstantProductPair.t.sol\":19353:19388  LogCompression.toLowResLog(0.25e18) */\n      tag_1947\n      tag_100\n      jump\t// in\n        /* \"test/unit/ConstantProductPair.t.sol\":19353:19393  LogCompression.toLowResLog(0.25e18) * 10 */\n    tag_1949:\n        /* \"src/libraries/LogExpMath.sol\":15101:15107  _ln(a) */\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":19412:19454  LogCompression.toLowResLog(0.0625e18) * 10 */\n      tag_1951\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      0x5af3107a4000\n        /* \"src/libraries/LogExpMath.sol\":15101:15107  _ln(a) */\n      tag_1952\n        /* \"test/unit/ConstantProductPair.t.sol\":19439:19448  0.0625e18 */\n      0xde0b6b3a764000\n        /* \"src/libraries/LogExpMath.sol\":15101:15107  _ln(a) */\n      tag_101\n      jump\t// in\n    tag_1952:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x00\n        /* \"src/libraries/LogCompression.sol\":2247:2253  ln > 0 */\n      dup2\n      sgt\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      iszero\n      tag_1953\n      jumpi\n        /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n      0x2d79883d2000\n        /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */\n      add\n        /* \"src/libraries/LogCompression.sol\":2247:2325  ln > 0 ? ln + _HALF_LOG_COMPRESSION_FACTOR : ln - _HALF_LOG_COMPRESSION_FACTOR */\n    tag_1955:\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      sdiv\n        /* \"test/unit/ConstantProductPair.t.sol\":19412:19454  LogCompression.toLowResLog(0.0625e18) * 10 */\n      tag_98\n      jump\t// in\n    tag_1951:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap2\n      0x00\n      dup4\n      dup3\n      add\n      swap4\n      dup5\n      slt\n      swap2\n      slt\n      swap1\n      dup1\n      iszero\n      dup3\n      and\n      swap2\n      iszero\n      and\n      or\n      tag_505\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":19257:19481  assertEq(... */\n      tag_1958\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap2\n      mload(0x40)\n      swap2\n      tag_1959\n      dup4\n      tag_4\n      jump\t// in\n    tag_1959:\n        /* \"test/unit/ConstantProductPair.t.sol\":18492:18496  true */\n      0x01\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x3300000000000000000000000000000000000000000000000000000000000000\n      0x20\n      dup5\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":19257:19481  assertEq(... */\n      tag_99\n      jump\t// in\n    tag_1958:\n        /* \"src/libraries/LogCompression.sol\":2760:2807  LogExpMath.exp(value * _LOG_COMPRESSION_FACTOR) */\n      tag_1960\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      0x5af3107a4000\n        /* \"test/unit/ConstantProductPair.t.sol\":19613:19701  (lObs1.logAccRawPrice - lObs0.logAccRawPrice) / int32(lObs1.timestamp - lObs0.timestamp) */\n      tag_1961\n        /* \"test/unit/ConstantProductPair.t.sol\":19614:19657  lObs1.logAccRawPrice - lObs0.logAccRawPrice */\n      tag_1962\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup5\n      mload\n      0x0d\n      signextend\n      dup8\n      mload\n      0x0d\n      signextend\n        /* \"test/unit/ConstantProductPair.t.sol\":19614:19657  lObs1.logAccRawPrice - lObs0.logAccRawPrice */\n      swap1\n      tag_88\n      jump\t// in\n    tag_1962:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":19667:19700  lObs1.timestamp - lObs0.timestamp */\n      tag_1963\n        /* \"test/unit/ConstantProductPair.t.sol\":19667:19682  lObs1.timestamp */\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x60\n        /* \"test/unit/ConstantProductPair.t.sol\":19667:19682  lObs1.timestamp */\n      dup9\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":19685:19700  lObs0.timestamp */\n      dup3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x60\n        /* \"test/unit/ConstantProductPair.t.sol\":19685:19700  lObs0.timestamp */\n      dup12\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":19667:19700  lObs1.timestamp - lObs0.timestamp */\n      swap1\n      tag_89\n      jump\t// in\n    tag_1963:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      and\n      0x03\n      signextend\n        /* \"test/unit/ConstantProductPair.t.sol\":19613:19701  (lObs1.logAccRawPrice - lObs0.logAccRawPrice) / int32(lObs1.timestamp - lObs0.timestamp) */\n      swap1\n      tag_90\n      jump\t// in\n    tag_1961:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x0d\n      signextend\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      mul\n        /* \"src/libraries/LogCompression.sol\":2760:2807  LogExpMath.exp(value * _LOG_COMPRESSION_FACTOR) */\n      tag_96\n      jump\t// in\n    tag_1960:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x00\n        /* \"test/unit/ConstantProductPair.t.sol\":19219:19226  0.25e18 */\n      0x03782dace9d90000\n        /* \"lib/forge-std/src/StdMath.sol\":607:612  a > b */\n      dup3\n      gt\n        /* \"test/unit/ConstantProductPair.t.sol\":19219:19226  0.25e18 */\n      iszero\n      tag_1964\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      pop\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffc87d25316270000\n      dup2\n      add\n      dup2\n      dup2\n      gt\n      tag_505\n      jumpi\n        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */\n    tag_1968:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup1\n        /* \"lib/forge-std/src/StdMath.sol\":1144:1148  1e18 */\n      0x0de0b6b3a7640000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      mul\n      div\n        /* \"lib/forge-std/src/StdMath.sol\":1144:1148  1e18 */\n      0x0de0b6b3a7640000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      eq\n      dup2\n      iszero\n      or\n      iszero\n      tag_505\n      jumpi\n        /* \"src/libraries/LogCompression.sol\":2760:2807  LogExpMath.exp(value * _LOG_COMPRESSION_FACTOR) */\n      tag_1971\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap3\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      0x5af3107a4000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":19219:19226  0.25e18 */\n      0x03782dace9d90000\n        /* \"lib/forge-std/src/StdMath.sol\":1144:1148  1e18 */\n      0x0de0b6b3a7640000\n        /* \"test/unit/ConstantProductPair.t.sol\":19900:19988  (lObs2.logAccRawPrice - lObs1.logAccRawPrice) / int32(lObs2.timestamp - lObs1.timestamp) */\n      tag_1961\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap5\n      mul\n      div\n        /* \"lib/forge-std/src/StdAssertions.sol\":5389:5419  percentDelta > maxPercentDelta */\n      swap1\n      dup5\n      dup3\n      gt\n        /* \"lib/forge-std/src/StdAssertions.sol\":5385:5769  if (percentDelta > maxPercentDelta) {... */\n      tag_1973\n      jumpi\n        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */\n    tag_1974:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      pop\n      pop\n      0xffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":19954:19987  lObs2.timestamp - lObs1.timestamp */\n      tag_1963\n        /* \"test/unit/ConstantProductPair.t.sol\":19901:19944  lObs2.logAccRawPrice - lObs1.logAccRawPrice */\n      tag_1976\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup8\n      mload\n      0x0d\n      signextend\n      dup5\n      mload\n      0x0d\n      signextend\n        /* \"test/unit/ConstantProductPair.t.sol\":19901:19944  lObs2.logAccRawPrice - lObs1.logAccRawPrice */\n      swap1\n      tag_88\n      jump\t// in\n    tag_1976:\n        /* \"test/unit/ConstantProductPair.t.sol\":19954:19969  lObs2.timestamp */\n      swap3\n      dup3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x60\n        /* \"test/unit/ConstantProductPair.t.sol\":19954:19969  lObs2.timestamp */\n      dup2\n      dup2\n      dup12\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":19667:19682  lObs1.timestamp */\n      swap3\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":19954:19987  lObs2.timestamp - lObs1.timestamp */\n      swap1\n      tag_89\n      jump\t// in\n        /* \"src/libraries/LogCompression.sol\":2760:2807  LogExpMath.exp(value * _LOG_COMPRESSION_FACTOR) */\n    tag_1971:\n        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */\n      swap2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x00\n        /* \"test/unit/ConstantProductPair.t.sol\":19439:19448  0.0625e18 */\n      0xde0b6b3a764000\n        /* \"lib/forge-std/src/StdMath.sol\":607:612  a > b */\n      dup5\n      gt\n        /* \"test/unit/ConstantProductPair.t.sol\":19439:19448  0.0625e18 */\n      iszero\n      tag_1977\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      pop\n      0xffffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c000\n      dup4\n      add\n      dup4\n      dup2\n      gt\n      tag_505\n      jumpi\n        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */\n      swap2\n    tag_1981:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n        /* \"lib/forge-std/src/StdMath.sol\":1144:1148  1e18 */\n      0x0de0b6b3a7640000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      mul\n      div\n        /* \"lib/forge-std/src/StdMath.sol\":1144:1148  1e18 */\n      0x0de0b6b3a7640000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      eq\n      dup4\n      iszero\n      or\n      iszero\n      tag_505\n      jumpi\n      0xffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":20243:20276  lObs2.timestamp - lObs0.timestamp */\n      tag_1963\n        /* \"test/unit/ConstantProductPair.t.sol\":20189:20277  (lObs2.logAccRawPrice - lObs0.logAccRawPrice) / int32(lObs2.timestamp - lObs0.timestamp) */\n      tag_1961\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap4\n        /* \"src/libraries/LogCompression.sol\":2760:2807  LogExpMath.exp(value * _LOG_COMPRESSION_FACTOR) */\n      tag_1986\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap7\n        /* \"test/unit/ConstantProductPair.t.sol\":19439:19448  0.0625e18 */\n      0xde0b6b3a764000\n        /* \"lib/forge-std/src/StdMath.sol\":1144:1148  1e18 */\n      0x0de0b6b3a7640000\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      0x5af3107a4000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap9\n      mul\n      div\n        /* \"lib/forge-std/src/StdAssertions.sol\":5389:5419  percentDelta > maxPercentDelta */\n      swap1\n      dup8\n      dup3\n      gt\n        /* \"lib/forge-std/src/StdAssertions.sol\":5385:5769  if (percentDelta > maxPercentDelta) {... */\n      tag_1987\n      jumpi\n        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */\n    tag_1988:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      pop\n      pop\n      dup3\n      0x60\n      dup2\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":20190:20233  lObs2.logAccRawPrice - lObs0.logAccRawPrice */\n      tag_1989\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup9\n      mload\n      0x0d\n      signextend\n      dup7\n      mload\n      0x0d\n      signextend\n        /* \"test/unit/ConstantProductPair.t.sol\":20190:20233  lObs2.logAccRawPrice - lObs0.logAccRawPrice */\n      swap1\n      tag_88\n      jump\t// in\n    tag_1989:\n        /* \"test/unit/ConstantProductPair.t.sol\":19954:19969  lObs2.timestamp */\n      swap8\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":19685:19700  lObs0.timestamp */\n      swap3\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":20243:20276  lObs2.timestamp - lObs0.timestamp */\n      swap1\n      tag_89\n      jump\t// in\n        /* \"src/libraries/LogCompression.sol\":2760:2807  LogExpMath.exp(value * _LOG_COMPRESSION_FACTOR) */\n    tag_1986:\n        /* \"test/unit/ConstantProductPair.t.sol\":20305:20313  0.125e18 */\n      0x01bc16d674ec8000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x00\n        /* \"lib/forge-std/src/StdMath.sol\":607:612  a > b */\n      dup2\n      dup4\n      gt\n        /* \"test/unit/ConstantProductPair.t.sol\":20305:20313  0.125e18 */\n      iszero\n      tag_500\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      pop\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffe43e9298b138000\n      dup3\n      add\n      dup3\n      dup2\n      gt\n      tag_505\n      jumpi\n        /* \"lib/forge-std/src/StdMath.sol\":1144:1148  1e18 */\n      0x0de0b6b3a7640000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      mul\n      swap1\n      dup1\n      dup3\n      div\n        /* \"lib/forge-std/src/StdMath.sol\":1144:1148  1e18 */\n      0x0de0b6b3a7640000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      eq\n      swap1\n      iszero\n      or\n      iszero\n      tag_505\n      jumpi\n      dup2\n      swap1\n      div\n        /* \"lib/forge-std/src/StdAssertions.sol\":5389:5419  percentDelta > maxPercentDelta */\n      swap2\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      0x5af3107a4000\n        /* \"lib/forge-std/src/StdAssertions.sol\":5389:5419  percentDelta > maxPercentDelta */\n      dup4\n      gt\n        /* \"lib/forge-std/src/StdAssertions.sol\":5385:5769  if (percentDelta > maxPercentDelta) {... */\n      tag_507\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup4\n      dup1\n      return\n        /* \"lib/forge-std/src/StdAssertions.sol\":5385:5769  if (percentDelta > maxPercentDelta) {... */\n    tag_1987:\n        /* \"lib/forge-std/src/StdAssertions.sol\":5440:5481  log(\"Error: a ~= b not satisfied [uint]\") */\n      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x80\n      mload(0x40)\n      0x20\n      dup2\n      mstore\n      0x22\n      0x20\n      dup3\n      add\n      mstore\n      0x4572726f723a2061207e3d2062206e6f7420736174697366696564205b75696e\n      0x40\n      dup3\n      add\n      mstore\n      0x745d000000000000000000000000000000000000000000000000000000000000\n      0x60\n      dup3\n      add\n      mstore\n        /* \"lib/forge-std/src/StdAssertions.sol\":5440:5481  log(\"Error: a ~= b not satisfied [uint]\") */\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      swap1\n      0x40\n      dup3\n      mstore\n      tag_2006\n      0x40\n      dup4\n      add\n      0x40\n      swap1\n      0x0c\n      dup2\n      mstore\n      0x2020202045787065637465640000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_2006:\n        /* \"test/unit/ConstantProductPair.t.sol\":19439:19448  0.0625e18 */\n      0xde0b6b3a764000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n      dup5\n      add\n      mstore\n        /* \"lib/forge-std/src/StdAssertions.sol\":5500:5533  log_named_uint(\"    Expected\", b) */\n      dup3\n      0xb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8\n      swap4\n      dup5\n      swap3\n      sub\n      swap1\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      dup1\n      swap2\n      0x40\n      dup3\n      mstore\n      tag_2007\n      0x40\n      dup4\n      add\n      0x40\n      swap1\n      0x0c\n      dup2\n      mstore\n      0x20202020202041637475616c0000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_2007:\n      swap1\n      0x20\n      dup4\n      add\n      mstore\n        /* \"lib/forge-std/src/StdAssertions.sol\":5552:5585  log_named_uint(\"      Actual\", a) */\n      sub\n      swap1\n      log1\n        /* \"lib/forge-std/src/StdAssertions.sol\":5682:5738  log_named_decimal_uint(\"     % Delta\", percentDelta, 18) */\n      tag_2008\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"lib/forge-std/src/StdAssertions.sol\":5604:5663  log_named_decimal_uint(\" Max % Delta\", maxPercentDelta, 18) */\n      swap2\n      0xeb8ba43ced7537421946bd43e828b8b2b8428927aa8f801c13d934bf11aca57b\n      dup4\n      dup1\n      tag_512\n      dup4\n      swap7\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      0x60\n      dup3\n      mstore\n      0x0c\n      0x60\n      dup4\n      add\n      mstore\n      0x204d617820252044656c74610000000000000000000000000000000000000000\n      0x80\n      dup4\n      add\n      mstore\n        /* \"lib/forge-std/src/StdAssertions.sol\":6831:6833  18 */\n      0x12\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40\n      0xa0\n      dup5\n      add\n      swap4\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      0x5af3107a4000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n      dup3\n      add\n      mstore\n      add\n      mstore\n      jump\n        /* \"lib/forge-std/src/StdAssertions.sol\":5682:5738  log_named_decimal_uint(\"     % Delta\", percentDelta, 18) */\n    tag_2008:\n      sub\n      swap1\n      log1\n      tag_2010\n      tag_42\n      jump\t// in\n    tag_2010:\n        /* \"lib/forge-std/src/StdAssertions.sol\":5385:5769  if (percentDelta > maxPercentDelta) {... */\n      codesize\n      dup1\n      jump(tag_1988)\n        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */\n    tag_1977:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup4\n        /* \"test/unit/ConstantProductPair.t.sol\":19439:19448  0.0625e18 */\n      0xde0b6b3a764000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":19439:19448  0.0625e18 */\n      0xde0b6b3a764000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      gt\n      tag_514\n      jumpi\n        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */\n      pop\n      swap2\n      jump(tag_1981)\n        /* \"lib/forge-std/src/StdAssertions.sol\":5385:5769  if (percentDelta > maxPercentDelta) {... */\n    tag_1973:\n        /* \"lib/forge-std/src/StdAssertions.sol\":5440:5481  log(\"Error: a ~= b not satisfied [uint]\") */\n      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x80\n      mload(0x40)\n      0x20\n      dup2\n      mstore\n      0x22\n      0x20\n      dup3\n      add\n      mstore\n      0x4572726f723a2061207e3d2062206e6f7420736174697366696564205b75696e\n      0x40\n      dup3\n      add\n      mstore\n      0x745d000000000000000000000000000000000000000000000000000000000000\n      0x60\n      dup3\n      add\n      mstore\n        /* \"lib/forge-std/src/StdAssertions.sol\":5440:5481  log(\"Error: a ~= b not satisfied [uint]\") */\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      swap1\n      0x40\n      dup3\n      mstore\n      tag_2013\n      0x40\n      dup4\n      add\n      0x40\n      swap1\n      0x0c\n      dup2\n      mstore\n      0x2020202045787065637465640000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_2013:\n        /* \"test/unit/ConstantProductPair.t.sol\":19219:19226  0.25e18 */\n      0x03782dace9d90000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n      dup5\n      add\n      mstore\n        /* \"lib/forge-std/src/StdAssertions.sol\":5500:5533  log_named_uint(\"    Expected\", b) */\n      dup3\n      0xb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8\n      swap4\n      dup5\n      swap3\n      sub\n      swap1\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      dup1\n      swap2\n      0x40\n      dup3\n      mstore\n      tag_2014\n      0x40\n      dup4\n      add\n      0x40\n      swap1\n      0x0c\n      dup2\n      mstore\n      0x20202020202041637475616c0000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_2014:\n      swap1\n      0x20\n      dup4\n      add\n      mstore\n        /* \"lib/forge-std/src/StdAssertions.sol\":5552:5585  log_named_uint(\"      Actual\", a) */\n      sub\n      swap1\n      log1\n        /* \"lib/forge-std/src/StdAssertions.sol\":5682:5738  log_named_decimal_uint(\"     % Delta\", percentDelta, 18) */\n      tag_2015\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"lib/forge-std/src/StdAssertions.sol\":5604:5663  log_named_decimal_uint(\" Max % Delta\", maxPercentDelta, 18) */\n      swap2\n      0xeb8ba43ced7537421946bd43e828b8b2b8428927aa8f801c13d934bf11aca57b\n      dup4\n      dup1\n      tag_512\n      dup4\n      swap7\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      0x60\n      dup3\n      mstore\n      0x0c\n      0x60\n      dup4\n      add\n      mstore\n      0x204d617820252044656c74610000000000000000000000000000000000000000\n      0x80\n      dup4\n      add\n      mstore\n        /* \"lib/forge-std/src/StdAssertions.sol\":6831:6833  18 */\n      0x12\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40\n      0xa0\n      dup5\n      add\n      swap4\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      0x5af3107a4000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n      dup3\n      add\n      mstore\n      add\n      mstore\n      jump\n        /* \"lib/forge-std/src/StdAssertions.sol\":5682:5738  log_named_decimal_uint(\"     % Delta\", percentDelta, 18) */\n    tag_2015:\n      sub\n      swap1\n      log1\n      tag_2017\n      tag_42\n      jump\t// in\n    tag_2017:\n        /* \"lib/forge-std/src/StdAssertions.sol\":5385:5769  if (percentDelta > maxPercentDelta) {... */\n      codesize\n      dup1\n      jump(tag_1974)\n        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */\n    tag_1964:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":19219:19226  0.25e18 */\n      0x03782dace9d90000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":19219:19226  0.25e18 */\n      0x03782dace9d90000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      gt\n      tag_514\n      jumpi\n        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */\n      pop\n      jump(tag_1968)\n        /* \"src/libraries/LogCompression.sol\":2247:2325  ln > 0 ? ln + _HALF_LOG_COMPRESSION_FACTOR : ln - _HALF_LOG_COMPRESSION_FACTOR */\n    tag_1953:\n        /* \"src/libraries/LogExpMath.sol\":3324:3350  64_000_000_000_000_000_000 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffd28677c2e000\n      add\n        /* \"src/libraries/LogCompression.sol\":2247:2325  ln > 0 ? ln + _HALF_LOG_COMPRESSION_FACTOR : ln - _HALF_LOG_COMPRESSION_FACTOR */\n      jump(tag_1955)\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5091:5191  if (a != b) {... */\n    tag_1943:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_2020\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5122:5152  log_named_string(\"Error\", err) */\n      0x280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap2\n      mload(0x40)\n      swap2\n      dup3\n      swap2\n      0x40\n      dup4\n      mstore\n      0x05\n      0x40\n      dup5\n      add\n      mstore\n      0x4572726f72000000000000000000000000000000000000000000000000000000\n      0x60\n      dup5\n      add\n      mstore\n      0x80\n      0x20\n      dup5\n      add\n      mstore\n      0x80\n      dup4\n      add\n      swap1\n      tag_10\n      jump\t// in\n    tag_2020:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5122:5152  log_named_string(\"Error\", err) */\n      sub\n      swap1\n      log1\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":4810:5010  if (a != b) {... */\n      tag_2021\n      jumpi\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5091:5191  if (a != b) {... */\n    tag_2022:\n      dup1\n      dup1\n      jump(tag_1944)\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":4810:5010  if (a != b) {... */\n    tag_2021:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":4841:4881  log(\"Error: a == b not satisfied [int]\") */\n      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x80\n      mload(0x40)\n      0x20\n      dup2\n      mstore\n      0x21\n      0x20\n      dup3\n      add\n      mstore\n      0x4572726f723a2061203d3d2062206e6f7420736174697366696564205b696e74\n      0x40\n      dup3\n      add\n      mstore\n      0x5d00000000000000000000000000000000000000000000000000000000000000\n      0x60\n      dup3\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":4841:4881  log(\"Error: a == b not satisfied [int]\") */\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      swap1\n      0x40\n      dup3\n      mstore\n      tag_2023\n      0x40\n      dup4\n      add\n      0x40\n      swap1\n      0x0a\n      dup2\n      mstore\n      0x2020457870656374656400000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_2023:\n      0x00\n      0x20\n      dup5\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":4900:4930  log_named_int(\"  Expected\", b) */\n      dup3\n      0x2fe632779174374378442a8e978bccfbdcc1d6b2b0d81f7e8eb776ab2286f168\n      swap4\n      dup5\n      swap3\n      sub\n      swap1\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      dup1\n      swap2\n      0x40\n      dup3\n      mstore\n      tag_2024\n      0x40\n      dup4\n      add\n      0x40\n      swap1\n      0x0a\n      dup2\n      mstore\n      0x2020202041637475616c00000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_2024:\n      swap1\n      0x20\n      dup4\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":4949:4979  log_named_int(\"    Actual\", a) */\n      sub\n      swap1\n      log1\n      tag_2025\n      tag_42\n      jump\t// in\n    tag_2025:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":4810:5010  if (a != b) {... */\n      codesize\n      jump(tag_2022)\n        /* \"test/unit/ConstantProductPair.t.sol\":18963:19013  _oracleCaller.observation(_constantProductPair, 2) */\n    tag_1940:\n      tag_2026\n      swap2\n      swap3\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x80\n        /* \"test/unit/ConstantProductPair.t.sol\":18963:19013  _oracleCaller.observation(_constantProductPair, 2) */\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x80\n        /* \"test/unit/ConstantProductPair.t.sol\":18963:19013  _oracleCaller.observation(_constantProductPair, 2) */\n      gt\n      tag_320\n      jumpi\n      tag_322\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_2026:\n      swap1\n      codesize\n      jump(tag_1941)\n        /* \"test/unit/ConstantProductPair.t.sol\":18876:18926  _oracleCaller.observation(_constantProductPair, 1) */\n    tag_1936:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x80\n        /* \"test/unit/ConstantProductPair.t.sol\":18876:18926  _oracleCaller.observation(_constantProductPair, 1) */\n      swap4\n      pop\n      tag_2030\n      swap1\n      dup5\n      returndatasize\n      dup7\n      gt\n      tag_320\n      jumpi\n      tag_322\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_2030:\n      swap3\n      jump(tag_1937)\n        /* \"test/unit/ConstantProductPair.t.sol\":18789:18839  _oracleCaller.observation(_constantProductPair, 0) */\n    tag_1930:\n      tag_2034\n      swap2\n      swap5\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x80\n        /* \"test/unit/ConstantProductPair.t.sol\":18789:18839  _oracleCaller.observation(_constantProductPair, 0) */\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x80\n        /* \"test/unit/ConstantProductPair.t.sol\":18789:18839  _oracleCaller.observation(_constantProductPair, 0) */\n      gt\n      tag_320\n      jumpi\n      tag_322\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_2034:\n      swap3\n      codesize\n      jump(tag_1931)\n        /* \"test/unit/ConstantProductPair.t.sol\":18706:18733  _constantProductPair.sync() */\n    tag_1925:\n      tag_2038\n      swap1\n      tag_1\n      jump\t// in\n    tag_2038:\n      codesize\n      jump(tag_1926)\n        /* \"test/unit/ConstantProductPair.t.sol\":18624:18673  _constantProductPair.swap(200e18, true, _bob, \"\") */\n    tag_1918:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":18624:18673  _constantProductPair.swap(200e18, true, _bob, \"\") */\n      swap1\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_2039\n      jumpi\n    tag_2040:\n      tag_2041\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_2041:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":18624:18673  _constantProductPair.swap(200e18, true, _bob, \"\") */\n      codesize\n      jump(tag_1919)\n    tag_2039:\n      pop\n      returndatasize\n      jump(tag_2040)\n        /* \"test/unit/ConstantProductPair.t.sol\":18563:18614  _tokenA.mint(address(_constantProductPair), 200e18) */\n    tag_1914:\n      tag_2044\n      swap1\n      tag_1\n      jump\t// in\n    tag_2044:\n      codesize\n      jump(tag_1915)\n        /* \"test/unit/ConstantProductPair.t.sol\":18458:18507  _constantProductPair.swap(100e18, true, _bob, \"\") */\n    tag_1907:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":18458:18507  _constantProductPair.swap(100e18, true, _bob, \"\") */\n      swap1\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_2045\n      jumpi\n    tag_2046:\n      tag_2047\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_2047:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":18458:18507  _constantProductPair.swap(100e18, true, _bob, \"\") */\n      codesize\n      jump(tag_1908)\n    tag_2045:\n      pop\n      returndatasize\n      jump(tag_2046)\n        /* \"test/unit/ConstantProductPair.t.sol\":18397:18448  _tokenA.mint(address(_constantProductPair), 100e18) */\n    tag_1903:\n      tag_2050\n      swap1\n      tag_1\n      jump\t// in\n    tag_2050:\n      codesize\n      jump(tag_1904)\n        /* \"test/unit/ConstantProductPair.t.sol\":18265:18305  _constantProductPair.setCustomSwapFee(0) */\n    tag_1895:\n      tag_2051\n      swap1\n      tag_1\n      jump\t// in\n    tag_2051:\n      codesize\n      jump(tag_1896)\n        /* \"test/unit/ConstantProductPair.t.sol\":18228:18255  vm.prank(address(_factory)) */\n    tag_1889:\n      tag_2052\n      swap1\n      tag_1\n      jump\t// in\n    tag_2052:\n      codesize\n      jump(tag_1890)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_148:\n      pop\n      jumpi(tag_196, callvalue)\n      dup1\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_196\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":23734:23746  _stepTime(5) */\n      tag_2057\n      tag_77\n      jump\t// in\n    tag_2057:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n        /* \"test/unit/ConstantProductPair.t.sol\":23918:23925  _tokenB */\n      0x1a\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":23939:23959  _constantProductPair */\n      dup3\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap2\n      dup4\n      dup4\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":23918:23971  _tokenB.mint(address(_constantProductPair), lSwapAmt) */\n      dup2\n      extcodesize\n      iszero\n      tag_291\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      swap2\n      0x44\n      dup4\n      swap3\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":23918:23971  _tokenB.mint(address(_constantProductPair), lSwapAmt) */\n      swap5\n      dup6\n      swap4\n      dup5\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40c10f1900000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":23918:23971  _tokenB.mint(address(_constantProductPair), lSwapAmt) */\n      dup5\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":23918:23971  _tokenB.mint(address(_constantProductPair), lSwapAmt) */\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":23888:23908  0.125109637135501e18 */\n      0x01bc7a8d577086c8\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      dup5\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":23918:23971  _tokenB.mint(address(_constantProductPair), lSwapAmt) */\n      gas\n      call\n      dup1\n      iszero\n      tag_219\n      jumpi\n      tag_2062\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2063:\n      pop\n      pop\n      dup1\n      dup3\n      tag_2064\n      swap3\n      sload\n      and\n      mload(0x40)\n      tag_2065\n      dup2\n      tag_2\n      jump\t// in\n    tag_2065:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      dup6\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":23981:24057  _constantProductPair.swap(-int256(lSwapAmt), true, address(this), bytes(\"\")) */\n      dup1\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xe12bd9d800000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":23981:24057  _constantProductPair.swap(-int256(lSwapAmt), true, address(this), bytes(\"\")) */\n      dup3\n      mstore\n        /* \"lib/forge-std/src/StdMath.sol\":124:202  -57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffe438572a88f7938\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":23981:24057  _constantProductPair.swap(-int256(lSwapAmt), true, address(this), bytes(\"\")) */\n      dup4\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":24026:24030  true */\n      0x01\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      dup4\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":24040:24044  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x44\n      dup4\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x80\n      0x64\n      dup4\n      add\n      mstore\n      dup2\n      dup9\n      dup2\n      0x20\n      swap9\n      dup10\n      swap7\n      0x84\n      dup4\n      add\n      swap1\n      tag_10\n      jump\t// in\n    tag_2064:\n        /* \"test/unit/ConstantProductPair.t.sol\":23981:24057  _constantProductPair.swap(-int256(lSwapAmt), true, address(this), bytes(\"\")) */\n      sub\n      swap3\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_201\n      jumpi\n      dup4\n      swap2\n      tag_2068\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2069:\n      pop\n      pop\n      dup3\n      dup2\n      sload\n      and\n      swap3\n      mload(0x40)\n      dup4\n      dup2\n      0x04\n      dup2\n      0x495bc0fb00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":24095:24134  _constantProductPair.prevClampedPrice() */\n      swap9\n      dup10\n      dup3\n      mstore\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_376\n      jumpi\n      dup7\n      swap1\n      tag_2072\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2073:\n        /* \"test/unit/ConstantProductPair.t.sol\":24086:24141  assertEq(_constantProductPair.prevClampedPrice(), 1e18) */\n      tag_2074\n      swap2\n      pop\n      tag_33\n      jump\t// in\n    tag_2074:\n        /* \"test/unit/ConstantProductPair.t.sol\":24167:24179  _stepTime(5) */\n      tag_2075\n      tag_77\n      jump\t// in\n    tag_2075:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup5\n      dup2\n      dup4\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":24189:24216  _constantProductPair.sync() */\n      dup1\n      extcodesize\n      iszero\n      tag_255\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      dup1\n      swap2\n      0x04\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":24189:24216  _constantProductPair.sync() */\n      dup1\n      swap5\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xfff6cae900000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":24189:24216  _constantProductPair.sync() */\n      dup4\n      mstore\n      gas\n      call\n      dup1\n      iszero\n      tag_219\n      jumpi\n      tag_2080\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2081:\n      pop\n      pop\n      dup1\n      dup4\n      sload\n      and\n      swap2\n      0x80\n      dup3\n      dup3\n      sload\n      and\n      0x44\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":24272:24322  _oracleCaller.observation(_constantProductPair, 1) */\n      dup1\n      swap7\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xc9d163d100000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":24272:24322  _oracleCaller.observation(_constantProductPair, 1) */\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":24272:24322  _oracleCaller.observation(_constantProductPair, 1) */\n      dup4\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":24026:24030  true */\n      0x01\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      dup4\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":24272:24322  _oracleCaller.observation(_constantProductPair, 1) */\n      gas\n      staticcall\n      swap3\n      dup4\n      iszero\n      tag_376\n      jumpi\n      dup5\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":24382:24438  assertEq(lObs1.logAccClampedPrice, lObs1.logAccRawPrice) */\n      tag_2084\n        /* \"test/unit/ConstantProductPair.t.sol\":24272:24322  _oracleCaller.observation(_constantProductPair, 1) */\n      swap2\n      dup9\n      swap2\n      tag_2085\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2086:\n        /* \"test/unit/ConstantProductPair.t.sol\":24391:24415  lObs1.logAccClampedPrice */\n      pop\n      dup5\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n      0x06\n      signextend\n      swap1\n      mload\n      0x0d\n      signextend\n        /* \"test/unit/ConstantProductPair.t.sol\":24382:24438  assertEq(lObs1.logAccClampedPrice, lObs1.logAccRawPrice) */\n      swap1\n      tag_58\n      jump\t// in\n    tag_2084:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      swap3\n      0x04\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":24457:24496  _constantProductPair.prevClampedPrice() */\n      dup1\n      swap6\n      dup2\n      swap4\n      dup3\n      mstore\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_215\n      jumpi\n      dup4\n      swap2\n      tag_2089\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2090:\n        /* \"test/unit/ConstantProductPair.t.sol\":24448:24508  assertLt(_constantProductPair.prevClampedPrice(), 1.0025e18) */\n      dup4\n      tag_316\n      dup4\n      tag_103\n      jump\t// in\n        /* \"test/unit/ConstantProductPair.t.sol\":24457:24496  _constantProductPair.prevClampedPrice() */\n    tag_2089:\n      swap1\n      pop\n      dup2\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_2092\n      jumpi\n    tag_2093:\n      tag_2094\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_2094:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":24448:24508  assertLt(_constantProductPair.prevClampedPrice(), 1.0025e18) */\n      tag_316\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":24457:24496  _constantProductPair.prevClampedPrice() */\n      codesize\n      jump(tag_2090)\n    tag_2092:\n      pop\n      returndatasize\n      jump(tag_2093)\n        /* \"test/unit/ConstantProductPair.t.sol\":24272:24322  _oracleCaller.observation(_constantProductPair, 1) */\n    tag_2085:\n      tag_2097\n      swap2\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x80\n        /* \"test/unit/ConstantProductPair.t.sol\":24272:24322  _oracleCaller.observation(_constantProductPair, 1) */\n      returndatasize\n      dup2\n      gt\n      tag_320\n      jumpi\n      tag_322\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_2097:\n      codesize\n      jump(tag_2086)\n        /* \"test/unit/ConstantProductPair.t.sol\":24189:24216  _constantProductPair.sync() */\n    tag_2080:\n      tag_2101\n      swap1\n      tag_1\n      jump\t// in\n    tag_2101:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_249\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":24189:24216  _constantProductPair.sync() */\n      dup5\n      codesize\n      jump(tag_2081)\n        /* \"test/unit/ConstantProductPair.t.sol\":24095:24134  _constantProductPair.prevClampedPrice() */\n    tag_2072:\n      pop\n      dup4\n      dup2\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_2104\n      jumpi\n    tag_2105:\n      tag_2106\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_2106:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":24086:24141  assertEq(_constantProductPair.prevClampedPrice(), 1e18) */\n      tag_2074\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":24095:24134  _constantProductPair.prevClampedPrice() */\n      jump(tag_2073)\n    tag_2104:\n      pop\n      returndatasize\n      jump(tag_2105)\n        /* \"test/unit/ConstantProductPair.t.sol\":23981:24057  _constantProductPair.swap(-int256(lSwapAmt), true, address(this), bytes(\"\")) */\n    tag_2068:\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_2109\n      jumpi\n    tag_2110:\n      tag_2111\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_2111:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":23981:24057  _constantProductPair.swap(-int256(lSwapAmt), true, address(this), bytes(\"\")) */\n      dup2\n      codesize\n      jump(tag_2069)\n    tag_2109:\n      pop\n      returndatasize\n      jump(tag_2110)\n        /* \"test/unit/ConstantProductPair.t.sol\":23918:23971  _tokenB.mint(address(_constantProductPair), lSwapAmt) */\n    tag_2062:\n      tag_2114\n      swap1\n      tag_1\n      jump\t// in\n    tag_2114:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_291\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":23918:23971  _tokenB.mint(address(_constantProductPair), lSwapAmt) */\n      dup3\n      codesize\n      jump(tag_2063)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_146:\n      pop\n      jumpi(tag_196, callvalue)\n      dup1\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_196\n      jumpi\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":2500:2520  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      swap2\n      mload(0x40)\n      0x18160ddd00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":2500:2534  _constantProductPair.totalSupply() */\n      dup2\n      mstore\n      0x20\n      swap1\n      dup2\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":2500:2534  _constantProductPair.totalSupply() */\n      dup2\n      dup9\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_841\n      jumpi\n      dup5\n      swap2\n      tag_2123\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2124:\n      pop\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":2608:2642  _constantProductPair.getReserves() */\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x0902f1ac00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":2608:2642  _constantProductPair.getReserves() */\n      dup3\n      mstore\n      0x80\n      dup3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":2608:2642  _constantProductPair.getReserves() */\n      dup2\n      dup10\n      gas\n      staticcall\n      swap2\n      dup3\n      iszero\n      tag_201\n      jumpi\n      dup6\n      swap3\n      tag_2127\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2128:\n      pop\n      dup4\n        /* \"test/unit/ConstantProductPair.t.sol\":2668:2675  _tokenA */\n      0x19\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":2668:2728  _tokenA.mint(address(_constantProductPair), lLiquidityToAdd) */\n      swap6\n      dup7\n      extcodesize\n      iszero\n      tag_1565\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      0x40c10f1900000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":2668:2728  _tokenA.mint(address(_constantProductPair), lLiquidityToAdd) */\n      swap2\n      dup3\n      dup3\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":2668:2728  _tokenA.mint(address(_constantProductPair), lLiquidityToAdd) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":2570:2574  5e18 */\n      dup7\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x44\n        /* \"test/unit/ConstantProductPair.t.sol\":2570:2574  5e18 */\n      dup2\n      dup4\n      0x4563918244f40000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap13\n      dup14\n      0x24\n      dup5\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":2668:2728  _tokenA.mint(address(_constantProductPair), lLiquidityToAdd) */\n      gas\n      call\n      dup1\n      iszero\n      tag_1089\n      jumpi\n      swap1\n      dup8\n      swap2\n      tag_2133\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2134:\n      pop\n      pop\n      dup5\n        /* \"test/unit/ConstantProductPair.t.sol\":2738:2745  _tokenB */\n      0x1a\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      swap1\n      dup6\n        /* \"test/unit/ConstantProductPair.t.sol\":2500:2520  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":2738:2798  _tokenB.mint(address(_constantProductPair), lLiquidityToAdd) */\n      swap1\n      dup3\n      extcodesize\n      iszero\n      tag_1227\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      0x44\n      dup9\n      swap3\n      dup4\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":2738:2798  _tokenB.mint(address(_constantProductPair), lLiquidityToAdd) */\n      swap6\n      dup7\n      swap5\n      dup6\n      swap4\n      dup5\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":2738:2798  _tokenB.mint(address(_constantProductPair), lLiquidityToAdd) */\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup13\n      0x24\n      dup5\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":2738:2798  _tokenB.mint(address(_constantProductPair), lLiquidityToAdd) */\n      gas\n      call\n      dup1\n      iszero\n      tag_376\n      jumpi\n      swap1\n      dup7\n      swap2\n      tag_2139\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2140:\n      pop\n      dup4\n      dup6\n        /* \"test/unit/ConstantProductPair.t.sol\":2500:2520  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      0x24\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":2808:2848  _constantProductPair.mint(address(this)) */\n      dup1\n      swap5\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x6a62784200000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":2808:2848  _constantProductPair.mint(address(this)) */\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":2842:2846  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":2808:2848  _constantProductPair.mint(address(this)) */\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":2808:2848  _constantProductPair.mint(address(this)) */\n      gas\n      call\n      dup1\n      iszero\n      tag_376\n      jumpi\n      swap1\n      dup5\n      swap2\n      tag_2143\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2144:\n      pop\n      pop\n      dup1\n      dup7\n      mul\n      swap6\n      dup7\n      div\n      sub\n      tag_2145\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":2907:2955  lLiquidityToAdd * lTotalSupplyLpToken / reserve0 */\n      tag_2147\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      swap5\n      swap6\n      0xffffffffffffffffffffffffff\n      dup5\n      swap4\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":2907:2955  lLiquidityToAdd * lTotalSupplyLpToken / reserve0 */\n      swap1\n      tag_21\n      jump\t// in\n    tag_2147:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":2500:2520  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":2974:3019  _constantProductPair.balanceOf(address(this)) */\n      swap5\n      dup6\n      dup1\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":2974:3019  _constantProductPair.balanceOf(address(this)) */\n      dup3\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":2842:2846  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":2974:3019  _constantProductPair.balanceOf(address(this)) */\n      dup4\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":2974:3019  _constantProductPair.balanceOf(address(this)) */\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_841\n      jumpi\n      dup5\n      swap2\n      tag_2150\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2151:\n        /* \"test/unit/ConstantProductPair.t.sol\":3021:3040  lAdditionalLpTokens */\n      pop\n      tag_316\n      swap3\n      pop\n      tag_39\n      jump\t// in\n        /* \"test/unit/ConstantProductPair.t.sol\":2974:3019  _constantProductPair.balanceOf(address(this)) */\n    tag_2150:\n      swap1\n      pop\n      dup3\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_2153\n      jumpi\n    tag_2154:\n      tag_2155\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_2155:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":3021:3040  lAdditionalLpTokens */\n      tag_316\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap2\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":2974:3019  _constantProductPair.balanceOf(address(this)) */\n      codesize\n      jump(tag_2151)\n    tag_2153:\n      pop\n      returndatasize\n      jump(tag_2154)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2145:\n      0x24\n      dup5\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      mstore(0x04, 0x11)\n      revert\n        /* \"test/unit/ConstantProductPair.t.sol\":2808:2848  _constantProductPair.mint(address(this)) */\n    tag_2143:\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_2158\n      jumpi\n    tag_2159:\n      tag_2160\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_2160:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":2808:2848  _constantProductPair.mint(address(this)) */\n      dup3\n      codesize\n      jump(tag_2144)\n    tag_2158:\n      pop\n      returndatasize\n      jump(tag_2159)\n        /* \"test/unit/ConstantProductPair.t.sol\":2738:2798  _tokenB.mint(address(_constantProductPair), lLiquidityToAdd) */\n    tag_2139:\n      tag_2163\n      swap1\n      tag_1\n      jump\t// in\n    tag_2163:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_249\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":2738:2798  _tokenB.mint(address(_constantProductPair), lLiquidityToAdd) */\n      dup5\n      codesize\n      jump(tag_2140)\n        /* \"test/unit/ConstantProductPair.t.sol\":2668:2728  _tokenA.mint(address(_constantProductPair), lLiquidityToAdd) */\n    tag_2133:\n      tag_2166\n      swap1\n      tag_1\n      jump\t// in\n    tag_2166:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_1565\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":2668:2728  _tokenA.mint(address(_constantProductPair), lLiquidityToAdd) */\n      dup6\n      codesize\n      jump(tag_2134)\n        /* \"test/unit/ConstantProductPair.t.sol\":2608:2642  _constantProductPair.getReserves() */\n    tag_2127:\n      tag_2169\n      swap2\n      swap3\n      pop\n      0x80\n      returndatasize\n      dup2\n      gt\n      tag_328\n      jumpi\n      tag_330\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_2169:\n      pop\n      pop\n      pop\n      swap1\n      codesize\n      jump(tag_2128)\n        /* \"test/unit/ConstantProductPair.t.sol\":2500:2534  _constantProductPair.totalSupply() */\n    tag_2123:\n      swap1\n      pop\n      dup2\n      dup2\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_2173\n      jumpi\n    tag_2174:\n      tag_2175\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_2175:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":2500:2534  _constantProductPair.totalSupply() */\n      codesize\n      jump(tag_2124)\n    tag_2173:\n      pop\n      returndatasize\n      jump(tag_2174)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_144:\n      pop\n      jumpi(tag_196, callvalue)\n      dup1\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_196\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":12254:12267  uint256 i = 0 */\n      dup1\n        /* \"test/unit/ConstantProductPair.t.sol\":12337:12338  1 */\n      0x01\n        /* \"test/unit/ConstantProductPair.t.sol\":12322:12334  block.number */\n      number\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":12322:12334  block.number */\n      dup1\n      number\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      gt\n        /* \"test/unit/ConstantProductPair.t.sol\":12361:12376  block.timestamp */\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":12379:12380  5 */\n      0x05\n        /* \"test/unit/ConstantProductPair.t.sol\":12361:12376  block.timestamp */\n      timestamp\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":12361:12376  block.timestamp */\n      dup1\n      timestamp\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      gt\n        /* \"test/unit/ConstantProductPair.t.sol\":12249:12551  for (uint256 i = 0; i < lMaxObservations + 4; ++i) {... */\n      swap2\n        /* \"test/unit/ConstantProductPair.t.sol\":12269:12293  i < lMaxObservations + 4 */\n    tag_2182:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x010004\n        /* \"test/unit/ConstantProductPair.t.sol\":12269:12293  i < lMaxObservations + 4 */\n      dup2\n      lt\n      tag_2183\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup5\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":12602:12636  _constantProductPair.getReserves() */\n      0x80\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":12416:12436  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":12602:12636  _constantProductPair.getReserves() */\n      swap3\n      dup4\n      dup1\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x0902f1ac00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":12602:12636  _constantProductPair.getReserves() */\n      dup3\n      mstore\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_219\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffff\n      swap2\n      dup4\n        /* \"test/unit/ConstantProductPair.t.sol\":12602:12636  _constantProductPair.getReserves() */\n      swap2\n      tag_2187\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":12249:12551  for (uint256 i = 0; i < lMaxObservations + 4; ++i) {... */\n    tag_2188:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      pop\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":12663:12664  3 */\n      0x03\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5259:5265  a != b */\n      dup2\n      sub\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5255:5458  if (a != b) {... */\n      tag_2189\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      pop\n      dup1\n      return\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5255:5458  if (a != b) {... */\n    tag_2189:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5286:5327  log(\"Error: a == b not satisfied [uint]\") */\n      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50\n        /* \"test/unit/ConstantProductPair.t.sol\":12602:12636  _constantProductPair.getReserves() */\n      0x80\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      0x20\n      dup2\n      mstore\n      0x22\n      0x20\n      dup3\n      add\n      mstore\n      0x4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e\n      0x40\n      dup3\n      add\n      mstore\n      0x745d000000000000000000000000000000000000000000000000000000000000\n      0x60\n      dup3\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5286:5327  log(\"Error: a == b not satisfied [uint]\") */\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      swap1\n      0x40\n      dup3\n      mstore\n      tag_2191\n      0x40\n      dup4\n      add\n      0x40\n      swap1\n      0x0a\n      dup2\n      mstore\n      0x2020457870656374656400000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_2191:\n        /* \"test/unit/ConstantProductPair.t.sol\":12663:12664  3 */\n      0x03\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n      dup5\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5346:5377  log_named_uint(\"  Expected\", b) */\n      dup3\n      0xb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8\n      swap4\n      dup5\n      swap3\n      sub\n      swap1\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      dup1\n      swap2\n      0x40\n      dup3\n      mstore\n      tag_2192\n      0x40\n      dup4\n      add\n      0x40\n      swap1\n      0x0a\n      dup2\n      mstore\n      0x2020202041637475616c00000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_2192:\n      swap1\n      0x20\n      dup4\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5396:5427  log_named_uint(\"    Actual\", a) */\n      sub\n      swap1\n      log1\n      tag_316\n      tag_42\n      jump\t// in\n        /* \"test/unit/ConstantProductPair.t.sol\":12602:12636  _constantProductPair.getReserves() */\n    tag_2187:\n      tag_2194\n      swap2\n      pop\n      0x80\n      returndatasize\n      dup2\n      gt\n      tag_328\n      jumpi\n      tag_330\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_2194:\n      swap3\n      pop\n      pop\n      pop\n      dup4\n      jump(tag_2188)\n        /* \"test/unit/ConstantProductPair.t.sol\":12295:12298  ++i */\n    tag_2183:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup6\n      tag_2198\n      jumpi\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"test/unit/ConstantProductPair.t.sol\":12314:12339  vm.roll(block.number + 1) */\n      dup1\n      extcodesize\n      iszero\n      tag_1565\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":12314:12339  vm.roll(block.number + 1) */\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x1f7b4f3000000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":12314:12339  vm.roll(block.number + 1) */\n      dup3\n      mstore\n      dup6\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":12314:12339  vm.roll(block.number + 1) */\n      dup4\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":12314:12339  vm.roll(block.number + 1) */\n      swap2\n      dup8\n      dup2\n      dup5\n      dup2\n      dup4\n      dup7\n      gas\n      call\n      dup1\n      iszero\n      tag_1200\n      jumpi\n      dup7\n      swap2\n      dup10\n      swap2\n      tag_2204\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":12295:12298  ++i */\n    tag_2205:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      pop\n      pop\n      tag_2206\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":12353:12381  vm.warp(block.timestamp + 5) */\n      dup1\n      extcodesize\n      iszero\n      tag_1219\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup7\n      dup1\n      swap2\n      dup4\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":12353:12381  vm.warp(block.timestamp + 5) */\n      dup1\n      swap5\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xe5d6bf0200000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":12353:12381  vm.warp(block.timestamp + 5) */\n      dup4\n      mstore\n      dup10\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":12353:12381  vm.warp(block.timestamp + 5) */\n      dup5\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":12353:12381  vm.warp(block.timestamp + 5) */\n      gas\n      call\n      dup1\n      iszero\n      tag_1089\n      jumpi\n      swap1\n      dup8\n      swap2\n      tag_2212\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":12295:12298  ++i */\n    tag_2213:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      pop\n      pop\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":12395:12402  _tokenA */\n      0x19\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":12416:12436  _constantProductPair */\n      swap1\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap2\n      dup4\n      dup4\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":12395:12453  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */\n      swap1\n      dup1\n      extcodesize\n      iszero\n      tag_2214\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap2\n      0x44\n      dup11\n      swap3\n      dup4\n        /* \"test/unit/ConstantProductPair.t.sol\":12175:12179  1e17 */\n      0x016345785d8a0000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap6\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":12395:12453  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */\n      swap7\n      dup8\n      swap6\n      dup7\n      swap5\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40c10f1900000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":12395:12453  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */\n      dup7\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":12395:12453  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */\n      dup7\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup5\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":12395:12453  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */\n      gas\n      call\n      dup1\n      iszero\n      tag_1200\n      jumpi\n      swap1\n      dup9\n      swap2\n      tag_2218\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":12295:12298  ++i */\n    tag_2219:\n      pop\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      mload(0x40)\n      0xe12bd9d800000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":12467:12540  _constantProductPair.swap(int256(lAmountToSwap), true, address(this), \"\") */\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":12175:12179  1e17 */\n      0x016345785d8a0000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":12467:12540  _constantProductPair.swap(int256(lAmountToSwap), true, address(this), \"\") */\n      dup3\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":12337:12338  1 */\n      0x01\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      dup3\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":12530:12534  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x44\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x80\n      0x64\n      dup3\n      add\n      mstore\n      0x00\n      0x84\n      dup3\n      add\n      mstore\n      0x20\n      swap3\n      swap1\n      swap2\n      dup4\n      swap2\n      dup4\n      swap2\n      0xa4\n      swap2\n      dup4\n      swap2\n        /* \"test/unit/ConstantProductPair.t.sol\":12530:12534  this */\n      dup13\n      swap2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":12467:12540  _constantProductPair.swap(int256(lAmountToSwap), true, address(this), \"\") */\n      gas\n      call\n      dup1\n      iszero\n      tag_1089\n      jumpi\n      tag_2223\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":12295:12298  ++i */\n    tag_2224:\n      pop\n      pop\n      tag_2225\n      swap1\n      tag_19\n      jump\t// in\n    tag_2225:\n        /* \"test/unit/ConstantProductPair.t.sol\":12254:12267  uint256 i = 0 */\n      jump(tag_2182)\n        /* \"test/unit/ConstantProductPair.t.sol\":12467:12540  _constantProductPair.swap(int256(lAmountToSwap), true, address(this), \"\") */\n    tag_2223:\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_2226\n      jumpi\n    tag_2227:\n      tag_2228\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_2228:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":12467:12540  _constantProductPair.swap(int256(lAmountToSwap), true, address(this), \"\") */\n      codesize\n      dup1\n      jump(tag_2224)\n    tag_2226:\n      pop\n      returndatasize\n      jump(tag_2227)\n        /* \"test/unit/ConstantProductPair.t.sol\":12395:12453  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */\n    tag_2218:\n      tag_2231\n      swap1\n      tag_1\n      jump\t// in\n    tag_2231:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_1219\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":12395:12453  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */\n      dup7\n      codesize\n      jump(tag_2219)\n    tag_2214:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup10\n      dup1\n      revert\n        /* \"test/unit/ConstantProductPair.t.sol\":12353:12381  vm.warp(block.timestamp + 5) */\n    tag_2212:\n      tag_2234\n      swap1\n      tag_1\n      jump\t// in\n    tag_2234:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_1565\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":12353:12381  vm.warp(block.timestamp + 5) */\n      dup6\n      codesize\n      jump(tag_2213)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2206:\n      pop\n      dup6\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      mstore(0x04, 0x11)\n      revert\n        /* \"test/unit/ConstantProductPair.t.sol\":12314:12339  vm.roll(block.number + 1) */\n    tag_2204:\n      tag_2237\n      swap2\n      swap3\n      pop\n      tag_1\n      jump\t// in\n    tag_2237:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_1219\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":12314:12339  vm.roll(block.number + 1) */\n      dup5\n      dup8\n      codesize\n      jump(tag_2205)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2198:\n      0x24\n      dup6\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      mstore(0x04, 0x11)\n      revert\n    tag_142:\n      pop\n      jumpi(tag_196, callvalue)\n      dup1\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_196\n      jumpi\n      0x20\n      mload(0x40)\n        /* \"test/__fixtures/BaseTest.sol\":795:799  3000 */\n      0x0bb8\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      mstore\n      return\n    tag_140:\n      pop\n      jumpi(tag_196, callvalue)\n      dup1\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_196\n      jumpi\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n        /* \"test/unit/ConstantProductPair.t.sol\":4654:4674  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":4654:4688  _constantProductPair.getReserves() */\n      swap2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x0902f1ac00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":4654:4688  _constantProductPair.getReserves() */\n      dup4\n      mstore\n      0x80\n      dup4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":4654:4688  _constantProductPair.getReserves() */\n      dup2\n      dup6\n      gas\n      staticcall\n      swap2\n      dup3\n      iszero\n      tag_841\n      jumpi\n      dup5\n      swap4\n      dup6\n      swap4\n      tag_2250\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2251:\n      pop\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":1428:1463  _constantProductPair.FEE_ACCURACY() */\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xdb6488dc00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":1428:1463  _constantProductPair.FEE_ACCURACY() */\n      dup3\n      mstore\n      0x20\n      swap4\n      dup5\n      dup4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":1428:1463  _constantProductPair.FEE_ACCURACY() */\n      dup2\n      dup6\n      gas\n      staticcall\n      swap3\n      dup4\n      iszero\n      tag_1089\n      jumpi\n      dup8\n      swap4\n      tag_2254\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2255:\n      pop\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff448\n      dup4\n      add\n      swap1\n      dup4\n      dup3\n      gt\n      tag_505\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":4760:4764  1e18 */\n      0x0de0b6b3a7640000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap7\n      dup3\n      dup9\n      mul\n      swap3\n      dup9\n      dup5\n      div\n      sub\n      tag_505\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":1622:1661  aReserveIn * lMaxFee + lAmountInWithFee */\n      tag_2260\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup10\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":1622:1642  aReserveIn * lMaxFee */\n      tag_2261\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup9\n      swap8\n        /* \"test/unit/ConstantProductPair.t.sol\":1687:1712  lNumerator / lDenominator */\n      tag_2262\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap6\n        /* \"test/unit/ConstantProductPair.t.sol\":1559:1589  lAmountInWithFee * aReserveOut */\n      tag_2263\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffff\n      dup1\n      swap3\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":1559:1589  lAmountInWithFee * aReserveOut */\n      dup6\n      tag_17\n      jump\t// in\n    tag_2263:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap6\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":1622:1642  aReserveIn * lMaxFee */\n      tag_17\n      jump\t// in\n    tag_2261:\n        /* \"test/unit/ConstantProductPair.t.sol\":1622:1661  aReserveIn * lMaxFee + lAmountInWithFee */\n      tag_25\n      jump\t// in\n    tag_2260:\n        /* \"test/unit/ConstantProductPair.t.sol\":1687:1712  lNumerator / lDenominator */\n      swap1\n      tag_21\n      jump\t// in\n    tag_2262:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap2\n        /* \"test/unit/ConstantProductPair.t.sol\":4879:4931  _getToken0Token1(address(_tokenA), address(_tokenB)) */\n      tag_2264\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup5\n        /* \"test/unit/ConstantProductPair.t.sol\":4904:4911  _tokenA */\n      0x19\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      dup6\n        /* \"test/unit/ConstantProductPair.t.sol\":4922:4929  _tokenB */\n      0x1a\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":4879:4931  _getToken0Token1(address(_tokenA), address(_tokenB)) */\n      swap1\n      tag_49\n      jump\t// in\n    tag_2264:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap5\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":4942:5005  MintableERC20(token0).mint(address(_constantProductPair), 1e18) */\n      swap7\n      dup8\n      extcodesize\n      iszero\n      tag_291\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":4942:5005  MintableERC20(token0).mint(address(_constantProductPair), 1e18) */\n      swap2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40c10f1900000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":4942:5005  MintableERC20(token0).mint(address(_constantProductPair), 1e18) */\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":4942:5005  MintableERC20(token0).mint(address(_constantProductPair), 1e18) */\n      dup4\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      dup3\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":4942:5005  MintableERC20(token0).mint(address(_constantProductPair), 1e18) */\n      dup2\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x44\n        /* \"test/unit/ConstantProductPair.t.sol\":4942:5005  MintableERC20(token0).mint(address(_constantProductPair), 1e18) */\n      dup2\n      dup4\n      dup12\n      gas\n      call\n      dup1\n      iszero\n      tag_219\n      jumpi\n      tag_2269\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2270:\n      pop\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":4654:4674  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      mload(0x40)\n      0xe12bd9d800000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":5015:5071  _constantProductPair.swap(1e18, true, address(this), \"\") */\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":5471:5475  1e18 */\n      0x0de0b6b3a7640000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":5015:5071  _constantProductPair.swap(1e18, true, address(this), \"\") */\n      dup3\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":15394:15398  true */\n      0x01\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      dup3\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":5061:5065  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x44\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x80\n      0x64\n      dup3\n      add\n      mstore\n      0x00\n      0x84\n      dup3\n      add\n      mstore\n      swap1\n      dup6\n      swap1\n      dup3\n      swap1\n      0xa4\n      swap1\n      dup3\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":5061:5065  this */\n      dup12\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup10\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":5015:5071  _constantProductPair.swap(1e18, true, address(this), \"\") */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_1089\n      jumpi\n      dup6\n      swap2\n      tag_2274\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2275:\n      pop\n      0x24\n      swap4\n      mload(0x40)\n      swap5\n      dup6\n      dup1\n      swap3\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":5109:5155  MintableERC20(token1).balanceOf(address(this)) */\n      swap7\n      dup8\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":5061:5065  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":5109:5155  MintableERC20(token1).balanceOf(address(this)) */\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":5109:5155  MintableERC20(token1).balanceOf(address(this)) */\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_376\n      jumpi\n      dup5\n      swap4\n      dup8\n      swap2\n      tag_2278\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2279:\n        /* \"test/unit/ConstantProductPair.t.sol\":5157:5171  expectedOutput */\n      pop\n      swap1\n      tag_2280\n      swap2\n      tag_39\n      jump\t// in\n    tag_2280:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":5191:5237  MintableERC20(token0).balanceOf(address(this)) */\n      dup1\n      swap6\n      dup2\n      swap4\n      dup3\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":5061:5065  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":5191:5237  MintableERC20(token0).balanceOf(address(this)) */\n      dup4\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":5191:5237  MintableERC20(token0).balanceOf(address(this)) */\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_215\n      jumpi\n      dup4\n      swap2\n      tag_2283\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2284:\n        /* \"test/unit/ConstantProductPair.t.sol\":5182:5241  assertEq(MintableERC20(token0).balanceOf(address(this)), 0) */\n      dup4\n      tag_316\n      dup4\n      tag_36\n      jump\t// in\n        /* \"test/unit/ConstantProductPair.t.sol\":5191:5237  MintableERC20(token0).balanceOf(address(this)) */\n    tag_2283:\n      swap1\n      pop\n      dup2\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_2286\n      jumpi\n    tag_2287:\n      tag_2288\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_2288:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":5182:5241  assertEq(MintableERC20(token0).balanceOf(address(this)), 0) */\n      tag_316\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":5191:5237  MintableERC20(token0).balanceOf(address(this)) */\n      codesize\n      jump(tag_2284)\n    tag_2286:\n      pop\n      returndatasize\n      jump(tag_2287)\n        /* \"test/unit/ConstantProductPair.t.sol\":5109:5155  MintableERC20(token1).balanceOf(address(this)) */\n    tag_2278:\n      dup5\n      dup2\n      swap4\n      swap6\n      swap3\n      pop\n      returndatasize\n      dup4\n      gt\n      tag_2291\n      jumpi\n    tag_2292:\n      tag_2293\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_2293:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n      mload\n      dup4\n      swap3\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":5157:5171  expectedOutput */\n      tag_2280\n        /* \"test/unit/ConstantProductPair.t.sol\":5109:5155  MintableERC20(token1).balanceOf(address(this)) */\n      jump(tag_2279)\n    tag_2291:\n      pop\n      returndatasize\n      jump(tag_2292)\n        /* \"test/unit/ConstantProductPair.t.sol\":5015:5071  _constantProductPair.swap(1e18, true, address(this), \"\") */\n    tag_2274:\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_2296\n      jumpi\n    tag_2297:\n      tag_2298\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_2298:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":5015:5071  _constantProductPair.swap(1e18, true, address(this), \"\") */\n      dup4\n      codesize\n      jump(tag_2275)\n    tag_2296:\n      pop\n      returndatasize\n      jump(tag_2297)\n        /* \"test/unit/ConstantProductPair.t.sol\":4942:5005  MintableERC20(token0).mint(address(_constantProductPair), 1e18) */\n    tag_2269:\n      tag_2301\n      swap1\n      tag_1\n      jump\t// in\n    tag_2301:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_1565\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":4942:5005  MintableERC20(token0).mint(address(_constantProductPair), 1e18) */\n      dup6\n      codesize\n      jump(tag_2270)\n        /* \"test/unit/ConstantProductPair.t.sol\":1428:1463  _constantProductPair.FEE_ACCURACY() */\n    tag_2254:\n      swap1\n      swap3\n      pop\n      dup5\n      dup2\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_2304\n      jumpi\n    tag_2305:\n      tag_2306\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_2306:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":1428:1463  _constantProductPair.FEE_ACCURACY() */\n      swap2\n      codesize\n      jump(tag_2255)\n    tag_2304:\n      pop\n      returndatasize\n      jump(tag_2305)\n        /* \"test/unit/ConstantProductPair.t.sol\":4654:4688  _constantProductPair.getReserves() */\n    tag_2250:\n      swap1\n      swap3\n      pop\n      tag_2309\n      swap2\n      swap4\n      pop\n      0x80\n      returndatasize\n      dup2\n      gt\n      tag_328\n      jumpi\n      tag_330\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_2309:\n      pop\n      pop\n      swap3\n      swap1\n      swap3\n      swap2\n      codesize\n      jump(tag_2251)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_138:\n      pop\n      jumpi(tag_196, callvalue)\n      dup1\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_196\n      jumpi\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":15317:15337  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      swap2\n      mload(0x40)\n      swap3\n      0x0902f1ac00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":15317:15351  _constantProductPair.getReserves() */\n      dup1\n      dup6\n      mstore\n      0x80\n      swap3\n      dup4\n      dup7\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":15317:15351  _constantProductPair.getReserves() */\n      dup2\n      dup7\n      gas\n      staticcall\n      swap6\n      dup7\n      iszero\n      tag_201\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup6\n        /* \"test/unit/ConstantProductPair.t.sol\":15317:15351  _constantProductPair.getReserves() */\n      swap7\n      tag_2319\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2320:\n        /* \"test/__fixtures/BaseTest.sol\":5270:5993  function _writeObservation(... */\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x00\n        /* \"test/__fixtures/BaseTest.sol\":5488:5495  2 ** 31 */\n      0x80000000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":15439:15454  block.timestamp */\n      timestamp\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      and\n        /* \"test/__fixtures/BaseTest.sol\":5480:5495  aTime < 2 ** 31 */\n      lt\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      iszero\n      tag_1149\n      jumpi\n      mload(0x40)\n      swap4\n      0x20\n      swap5\n      dup6\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":15439:15454  block.timestamp */\n      swap1\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":15439:15454  block.timestamp */\n      timestamp\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xe0\n      shl\n      and\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      dup3\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x7fffffffffffff00000000000000000000000000000000000000000000000000\n      0x24\n      dup3\n      add\n      mstore\n      dup4\n      0x2b\n      dup3\n      add\n      mstore\n      dup4\n      0x32\n      dup3\n      add\n      mstore\n      dup7\n      dup2\n      mstore\n      tag_2323\n      dup2\n      tag_4\n      jump\t// in\n    tag_2323:\n      mload\n      swap1\n      mload\n      swap1\n      dup7\n      dup2\n      lt\n      tag_2324\n      jumpi\n    tag_2325:\n      pop\n      swap1\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"test/__fixtures/BaseTest.sol\":5727:5738  vm.record() */\n      swap1\n      dup2\n      extcodesize\n      iszero\n      tag_285\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      0x266cf10900000000000000000000000000000000000000000000000000000000\n        /* \"test/__fixtures/BaseTest.sol\":5727:5738  vm.record() */\n      dup2\n      mstore\n      dup5\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/__fixtures/BaseTest.sol\":5727:5738  vm.record() */\n      dup2\n      dup4\n      dup8\n      gas\n      call\n      dup1\n      iszero\n      tag_201\n      jumpi\n      swap1\n      dup12\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      tag_2330\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2331:\n      pop\n      0x44\n      dup10\n      dup8\n      dup11\n      sload\n      and\n      mload(0x40)\n      swap3\n      dup4\n      dup1\n      swap3\n      0xffff\n      0xc9d163d100000000000000000000000000000000000000000000000000000000\n        /* \"test/__fixtures/BaseTest.sol\":5748:5788  _oracleCaller.observation(aPair, aIndex) */\n      swap12\n      dup13\n      dup5\n      mstore\n      dup9\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/__fixtures/BaseTest.sol\":5748:5788  _oracleCaller.observation(aPair, aIndex) */\n      dup6\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n      and\n      0x24\n      dup4\n      add\n      mstore\n        /* \"test/__fixtures/BaseTest.sol\":5748:5788  _oracleCaller.observation(aPair, aIndex) */\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_201\n      jumpi\n      tag_2334\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2335:\n      pop\n      mload(0x40)\n      0x65bc948100000000000000000000000000000000000000000000000000000000\n        /* \"test/__fixtures/BaseTest.sol\":5830:5857  vm.accesses(address(aPair)) */\n      dup2\n      mstore\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/__fixtures/BaseTest.sol\":5830:5857  vm.accesses(address(aPair)) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/__fixtures/BaseTest.sol\":5830:5857  vm.accesses(address(aPair)) */\n      dup5\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n        /* \"test/__fixtures/BaseTest.sol\":5830:5857  vm.accesses(address(aPair)) */\n      dup2\n      dup4\n      dup8\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_201\n      jumpi\n      dup6\n      swap2\n      tag_2338\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2339:\n      pop\n        /* \"test/__fixtures/BaseTest.sol\":5895:5896  2 */\n      0x02\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      mload\n        /* \"test/__fixtures/BaseTest.sol\":5875:5896  lAccesses.length == 2 */\n      sub\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_2340\n      jumpi\n        /* \"test/__fixtures/BaseTest.sol\":5963:5975  lAccesses[1] */\n      tag_2342\n      swap1\n      tag_82\n      jump\t// in\n    tag_2342:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n        /* \"test/__fixtures/BaseTest.sol\":5938:5986  vm.store(address(aPair), lAccesses[1], lEncoded) */\n      swap1\n      dup3\n      extcodesize\n      iszero\n      tag_249\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      0x70ca10bb00000000000000000000000000000000000000000000000000000000\n        /* \"test/__fixtures/BaseTest.sol\":5938:5986  vm.store(address(aPair), lAccesses[1], lEncoded) */\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap2\n      swap1\n      swap2\n      and\n      0x04\n        /* \"test/__fixtures/BaseTest.sol\":5938:5986  vm.store(address(aPair), lAccesses[1], lEncoded) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x44\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      dup3\n      swap1\n      dup3\n      swap1\n      0x64\n      swap1\n      dup3\n      swap1\n      dup5\n      swap1\n        /* \"test/__fixtures/BaseTest.sol\":5938:5986  vm.store(address(aPair), lAccesses[1], lEncoded) */\n      gas\n      call\n      dup1\n      iszero\n      tag_219\n      jumpi\n      tag_2348\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2349:\n      pop\n      pop\n      dup5\n        /* \"test/unit/ConstantProductPair.t.sol\":15496:15551  _oracleCaller.observation(_constantProductPair, lIndex) */\n      tag_2350\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap6\n      swap7\n      swap8\n      dup4\n      dup7\n      sload\n      and\n      dup5\n        /* \"test/unit/ConstantProductPair.t.sol\":15317:15337  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":15496:15551  _oracleCaller.observation(_constantProductPair, lIndex) */\n      dup1\n      swap10\n      dup2\n      swap5\n      dup3\n      swap4\n      dup9\n      dup5\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":15496:15551  _oracleCaller.observation(_constantProductPair, lIndex) */\n      dup5\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      swap3\n      swap2\n      0xffff\n      0x20\n      swap2\n      0xffffffffffffffffffffffffffffffffffffffff\n      0x40\n      dup6\n      add\n      swap7\n      and\n      dup5\n      mstore\n      and\n      swap2\n      add\n      mstore\n      jump\n        /* \"test/unit/ConstantProductPair.t.sol\":15496:15551  _oracleCaller.observation(_constantProductPair, lIndex) */\n    tag_2350:\n      sub\n      swap2\n      gas\n      staticcall\n      swap5\n      dup6\n      iszero\n      tag_1089\n      jumpi\n      dup8\n      swap6\n      tag_2353\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2354:\n        /* \"test/unit/ConstantProductPair.t.sol\":15577:15589  _stepTime(5) */\n      pop\n      tag_2355\n      tag_77\n      jump\t// in\n    tag_2355:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup7\n      dup3\n        /* \"test/unit/ConstantProductPair.t.sol\":15317:15337  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":15599:15626  _constantProductPair.sync() */\n      dup1\n      extcodesize\n      iszero\n      tag_255\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      dup1\n      swap2\n      0x04\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":15599:15626  _constantProductPair.sync() */\n      dup1\n      swap5\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xfff6cae900000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":15599:15626  _constantProductPair.sync() */\n      dup4\n      mstore\n      gas\n      call\n      dup1\n      iszero\n      tag_219\n      jumpi\n      tag_2360\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2361:\n      pop\n      pop\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":15317:15337  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":15670:15704  _constantProductPair.getReserves() */\n      swap4\n      dup5\n      mstore\n      dup7\n      dup5\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":15670:15704  _constantProductPair.getReserves() */\n      dup2\n      dup5\n      gas\n      staticcall\n      swap3\n      dup4\n      iszero\n      tag_1200\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":15744:15799  _oracleCaller.observation(_constantProductPair, lIndex) */\n      tag_2364\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap6\n      dup9\n      swap6\n      dup11\n        /* \"test/unit/ConstantProductPair.t.sol\":15670:15704  _constantProductPair.getReserves() */\n      swap6\n      tag_1203\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      pop\n      sload\n      and\n      swap2\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":15744:15799  _oracleCaller.observation(_constantProductPair, lIndex) */\n      swap6\n      dup7\n      swap5\n      dup6\n      swap4\n      dup5\n      swap4\n      dup5\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":15744:15799  _oracleCaller.observation(_constantProductPair, lIndex) */\n      dup5\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      swap3\n      swap2\n      0xffff\n      0x20\n      swap2\n      0xffffffffffffffffffffffffffffffffffffffff\n      0x40\n      dup6\n      add\n      swap7\n      and\n      dup5\n      mstore\n      and\n      swap2\n      add\n      mstore\n      jump\n        /* \"test/unit/ConstantProductPair.t.sol\":15744:15799  _oracleCaller.observation(_constantProductPair, lIndex) */\n    tag_2364:\n      sub\n      swap2\n      gas\n      staticcall\n      swap3\n      dup4\n      iszero\n      tag_841\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":15809:15869  assertLt(lCurrObs.logAccLiquidity, lPrevObs.logAccLiquidity) */\n      tag_316\n        /* \"test/unit/ConstantProductPair.t.sol\":15744:15799  _oracleCaller.observation(_constantProductPair, lIndex) */\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40\n        /* \"test/unit/ConstantProductPair.t.sol\":15744:15799  _oracleCaller.observation(_constantProductPair, lIndex) */\n      swap3\n      dup4\n      swap3\n      dup8\n      swap3\n      tag_2370\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2371:\n        /* \"test/unit/ConstantProductPair.t.sol\":15818:15842  lCurrObs.logAccLiquidity */\n      pop\n      pop\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":15844:15868  lPrevObs.logAccLiquidity */\n      swap2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n      0x06\n      signextend\n      swap1\n      0x06\n      signextend\n        /* \"test/unit/ConstantProductPair.t.sol\":15809:15869  assertLt(lCurrObs.logAccLiquidity, lPrevObs.logAccLiquidity) */\n      tag_86\n      jump\t// in\n        /* \"test/unit/ConstantProductPair.t.sol\":15744:15799  _oracleCaller.observation(_constantProductPair, lIndex) */\n    tag_2370:\n      tag_2372\n      swap3\n      pop\n      dup1\n      returndatasize\n      lt\n      tag_320\n      jumpi\n      tag_322\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_2372:\n      codesize\n      dup1\n      jump(tag_2371)\n        /* \"test/unit/ConstantProductPair.t.sol\":15599:15626  _constantProductPair.sync() */\n    tag_2360:\n      tag_2380\n      swap1\n      tag_1\n      jump\t// in\n    tag_2380:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_1219\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":15599:15626  _constantProductPair.sync() */\n      dup7\n      codesize\n      jump(tag_2361)\n        /* \"test/unit/ConstantProductPair.t.sol\":15496:15551  _oracleCaller.observation(_constantProductPair, lIndex) */\n    tag_2353:\n      tag_2383\n      swap2\n      swap6\n      pop\n      dup7\n      returndatasize\n      dup9\n      gt\n      tag_320\n      jumpi\n      tag_322\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_2383:\n      swap4\n      codesize\n      jump(tag_2354)\n        /* \"test/__fixtures/BaseTest.sol\":5938:5986  vm.store(address(aPair), lAccesses[1], lEncoded) */\n    tag_2348:\n      tag_2387\n      dup3\n      swap2\n      tag_1\n      jump\t// in\n    tag_2387:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_196\n      jumpi\n        /* \"test/__fixtures/BaseTest.sol\":5938:5986  vm.store(address(aPair), lAccesses[1], lEncoded) */\n      dup1\n      jump(tag_2349)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2340:\n      0x64\n      dup10\n      mload(0x40)\n      swap1\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup3\n      mstore\n      0x04\n      dup3\n      add\n      mstore\n      0x1a\n      0x24\n      dup3\n      add\n      mstore\n      0x696e76616c6964206e756d626572206f66206163636573736573000000000000\n      0x44\n      dup3\n      add\n      mstore\n      revert\n        /* \"test/__fixtures/BaseTest.sol\":5830:5857  vm.accesses(address(aPair)) */\n    tag_2338:\n      tag_2390\n      swap2\n      pop\n      returndatasize\n      dup1\n      dup8\n      dup4\n      returndatacopy\n      tag_1237\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_2390:\n      pop\n      codesize\n      jump(tag_2339)\n        /* \"test/__fixtures/BaseTest.sol\":5748:5788  _oracleCaller.observation(aPair, aIndex) */\n    tag_2334:\n      tag_2392\n      swap1\n      dup11\n      returndatasize\n      dup13\n      gt\n      tag_320\n      jumpi\n      tag_322\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_2392:\n      pop\n      codesize\n      jump(tag_2335)\n        /* \"test/__fixtures/BaseTest.sol\":5727:5738  vm.record() */\n    tag_2330:\n      tag_2396\n      swap1\n      swap5\n      swap2\n      swap5\n      tag_1\n      jump\t// in\n    tag_2396:\n      swap3\n      codesize\n      jump(tag_2331)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2324:\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      swap1\n      dup8\n      sub\n      0x03\n      shl\n      shl\n      and\n      codesize\n      jump(tag_2325)\n        /* \"test/unit/ConstantProductPair.t.sol\":15317:15351  _constantProductPair.getReserves() */\n    tag_2319:\n      tag_2397\n      swap2\n      swap7\n      pop\n      dup5\n      returndatasize\n      dup7\n      gt\n      tag_328\n      jumpi\n      tag_330\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_2397:\n      swap3\n      pop\n      pop\n      pop\n      swap5\n      codesize\n      jump(tag_2320)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_136:\n      pop\n      jumpi(tag_196, callvalue)\n      0x80\n      dup1\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_255\n      jumpi\n      calldataload(0x04)\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap2\n      dup3\n      dup3\n      and\n      dup1\n      swap3\n      sub\n      tag_285\n      jumpi\n      calldataload(0x24)\n      calldataload(0x44)\n      swap1\n      calldataload(0x64)\n      swap1\n      0xffffffffffffffff\n      swap5\n      dup6\n      dup4\n      gt\n      tag_1227\n      jumpi\n      calldatasize\n      0x23\n      dup5\n      add\n      slt\n      iszero\n      tag_1227\n      jumpi\n      dup3\n      0x04\n      add\n      calldataload\n      swap6\n      dup1\n      dup8\n      gt\n      tag_2413\n      jumpi\n      calldatasize\n      0x24\n      dup9\n      dup7\n      add\n      add\n      gt\n      tag_2413\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":1163:1180  _validateCallback */\n      0x21\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      0xa0\n      shr\n      and\n      0x01\n      eq\n      tag_2415\n      jumpi\n      0x24\n      dup9\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      mstore(0x04, 0x51)\n      revert\n    tag_2415:\n        /* \"test/unit/ConstantProductPair.t.sol\":5394:5398  this */\n      address\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":3678:3684  a != b */\n      dup2\n      sub\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":3674:3886  if (a != b) {... */\n      tag_2417\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2418:\n        /* \"test/unit/ConstantProductPair.t.sol\":5428:5433  -1e18 */\n      pop\n      0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":4814:4820  a != b */\n      swap1\n      dup2\n      dup2\n      sub\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":4810:5010  if (a != b) {... */\n      tag_2419\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2420:\n        /* \"lib/forge-std/src/StdMath.sol\":1268:1279  delta(a, b) */\n      pop\n      pop\n      tag_2421\n      dup3\n      tag_57\n      jump\t// in\n    tag_2421:\n        /* \"test/unit/ConstantProductPair.t.sol\":5471:5475  1e18 */\n      swap2\n      0x0de0b6b3a7640000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      dup2\n      dup5\n      mul\n      swap4\n      dup1\n      dup6\n      div\n      dup4\n      eq\n      swap1\n      iszero\n      or\n      iszero\n      tag_505\n      jumpi\n      dup2\n      tag_2424\n      swap5\n      div\n        /* \"test/unit/ConstantProductPair.t.sol\":5477:5485  0.013e18 */\n      0x2e2f6e5e148000\n        /* \"lib/forge-std/src/StdAssertions.sol\":6563:6593  percentDelta > maxPercentDelta */\n      dup1\n      dup3\n      gt\n        /* \"lib/forge-std/src/StdAssertions.sol\":6559:6940  if (percentDelta > maxPercentDelta) {... */\n      tag_2425\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2426:\n      pop\n      pop\n      pop\n      pop\n      tag_2427\n      tag_50\n      jump\t// in\n    tag_2427:\n      swap4\n      0x24\n      calldatasize\n      swap3\n      add\n      tag_8\n      jump\t// in\n    tag_2424:\n      0x01\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":15389:15398  ok = true */\n      dup1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      mload\n      dup6\n      mload\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":15412:15432  a.length == b.length */\n      eq\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":15408:15636  if (a.length == b.length) {... */\n      0x00\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":15424:15432  b.length */\n      eq\n      tag_2428\n      jumpi\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":15453:15463  uint i = 0 */\n      dup7\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2430:\n      tag_2431\n      jumpi\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":15448:15585  for (uint i = 0; i < a.length; i++) {... */\n    tag_2432:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":15408:15636  if (a.length == b.length) {... */\n      pop\n      pop\n    tag_2433:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":15721:15736  !checkEq0(a, b) */\n      iszero\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":15717:15932  if (!checkEq0(a, b)) {... */\n      tag_2434\n      jumpi\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":15408:15636  if (a.length == b.length) {... */\n    tag_2435:\n      pop\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":5538:5558  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      mload(0x40)\n      0xe12bd9d800000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":5538:5594  _constantProductPair.swap(1e18, true, address(this), \"\") */\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":5471:5475  1e18 */\n      0x0de0b6b3a7640000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":5538:5594  _constantProductPair.swap(1e18, true, address(this), \"\") */\n      dup3\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":15394:15398  true */\n      0x01\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      dup3\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":5394:5398  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x44\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x80\n      0x64\n      dup3\n      add\n      mstore\n      0x00\n      0x84\n      dup3\n      add\n      mstore\n      swap3\n      0x20\n      swap3\n      pop\n      dup4\n      swap2\n      and\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":5394:5398  this */\n      dup6\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      0xa4\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":5538:5594  _constantProductPair.swap(1e18, true, address(this), \"\") */\n      tag_1840\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      jump\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":15717:15932  if (!checkEq0(a, b)) {... */\n    tag_2434:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":15757:15799  log(\"Error: a == b not satisfied [bytes]\") */\n      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_2446\n      swap3\n      mload(0x40)\n      0x20\n      dup2\n      mstore\n      0x23\n      0x20\n      dup3\n      add\n      mstore\n      0x4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974\n      0x40\n      dup3\n      add\n      mstore\n      0x65735d0000000000000000000000000000000000000000000000000000000000\n      0x60\n      dup3\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":15757:15799  log(\"Error: a == b not satisfied [bytes]\") */\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      swap3\n      0x40\n      dup5\n      mstore\n      tag_2447\n      0x40\n      dup6\n      add\n      0x40\n      swap1\n      0x0a\n      dup2\n      mstore\n      0x2020457870656374656400000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_2447:\n      swap4\n      dup1\n      dup6\n      sub\n      0x20\n      dup3\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":15818:15850  log_named_bytes(\"  Expected\", b) */\n      dup1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_2448\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":15818:15850  log_named_bytes(\"  Expected\", b) */\n      0xd26e16cad4548705e4c9e2d94f98ee91c289085ee425594fd5635fa2964ccf18\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap7\n      dup8\n      swap5\n      tag_10\n      jump\t// in\n    tag_2448:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":15818:15850  log_named_bytes(\"  Expected\", b) */\n      sub\n      swap1\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      swap2\n      dup3\n      swap2\n      0x40\n      dup4\n      mstore\n      tag_2449\n      0x40\n      dup5\n      add\n      0x40\n      swap1\n      0x0a\n      dup2\n      mstore\n      0x2020202041637475616c00000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_2449:\n      swap1\n      dup4\n      dup3\n      sub\n      0x20\n      dup6\n      add\n      mstore\n      tag_10\n      jump\t// in\n    tag_2446:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":15869:15901  log_named_bytes(\"    Actual\", a) */\n      sub\n      swap1\n      log1\n      tag_2450\n      tag_42\n      jump\t// in\n    tag_2450:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":15717:15932  if (!checkEq0(a, b)) {... */\n      codesize\n      dup1\n      dup1\n      jump(tag_2435)\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":15479:15482  i++ */\n    tag_2431:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup4\n      mload\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":15465:15477  i < a.length */\n      dup2\n      lt\n      iszero\n      tag_2451\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xff00000000000000000000000000000000000000000000000000000000000000\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":15506:15510  a[i] */\n      dup1\n      tag_2453\n      dup4\n      dup8\n      tag_20\n      jump\t// in\n    tag_2453:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n      and\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":15514:15518  b[i] */\n      swap1\n      tag_2454\n      dup4\n      dup10\n      tag_20\n      jump\t// in\n    tag_2454:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n      and\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":15506:15518  a[i] != b[i] */\n      sub\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":15502:15571  if (a[i] != b[i]) {... */\n      tag_2455\n      jumpi\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":15479:15482  i++ */\n    tag_2456:\n      tag_2457\n      swap1\n      tag_19\n      jump\t// in\n    tag_2457:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":15453:15463  uint i = 0 */\n      dup2\n      jump(tag_2430)\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":15502:15571  if (a[i] != b[i]) {... */\n    tag_2455:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":15542:15552  ok = false */\n      dup8\n      swap3\n      pop\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":15502:15571  if (a[i] != b[i]) {... */\n      jump(tag_2456)\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":15465:15477  i < a.length */\n    tag_2451:\n      jump(tag_2432)\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":15408:15636  if (a.length == b.length) {... */\n    tag_2428:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":15615:15625  ok = false */\n      pop\n      pop\n      dup5\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":15408:15636  if (a.length == b.length) {... */\n      jump(tag_2433)\n        /* \"lib/forge-std/src/StdAssertions.sol\":6559:6940  if (percentDelta > maxPercentDelta) {... */\n    tag_2425:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xa0\n      swap4\n        /* \"lib/forge-std/src/StdAssertions.sol\":6853:6909  log_named_decimal_uint(\"     % Delta\", percentDelta, 18) */\n      tag_2458\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap4\n        /* \"lib/forge-std/src/StdAssertions.sol\":6614:6654  log(\"Error: a ~= b not satisfied [int]\") */\n      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup10\n      mload(0x40)\n      0x20\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":1163:1180  _validateCallback */\n      0x21\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n      dup3\n      add\n      mstore\n      0x4572726f723a2061207e3d2062206e6f7420736174697366696564205b696e74\n      0x40\n      dup3\n      add\n      mstore\n      0x5d00000000000000000000000000000000000000000000000000000000000000\n      0x60\n      dup3\n      add\n      mstore\n        /* \"lib/forge-std/src/StdAssertions.sol\":6614:6654  log(\"Error: a ~= b not satisfied [int]\") */\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      swap2\n      0x40\n      dup4\n      mstore\n      tag_2459\n      0x40\n      dup5\n      add\n      0x40\n      swap1\n      0x0c\n      dup2\n      mstore\n      0x2020202045787065637465640000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_2459:\n      swap1\n      0x20\n      dup5\n      add\n      mstore\n        /* \"lib/forge-std/src/StdAssertions.sol\":6673:6705  log_named_int(\"    Expected\", b) */\n      dup3\n      0x2fe632779174374378442a8e978bccfbdcc1d6b2b0d81f7e8eb776ab2286f168\n      swap4\n      dup5\n      swap3\n      sub\n      swap1\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      dup1\n      swap2\n      0x40\n      dup3\n      mstore\n      tag_2460\n      0x40\n      dup4\n      add\n      0x40\n      swap1\n      0x0c\n      dup2\n      mstore\n      0x20202020202041637475616c0000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_2460:\n      swap1\n      0x20\n      dup4\n      add\n      mstore\n        /* \"lib/forge-std/src/StdAssertions.sol\":6724:6756  log_named_int(\"      Actual\", a) */\n      sub\n      swap1\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      swap1\n      0x60\n      dup3\n      mstore\n      0x0c\n      0x60\n      dup4\n      add\n      mstore\n      0x204d617820252044656c74610000000000000000000000000000000000000000\n      dup9\n      dup4\n      add\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n        /* \"lib/forge-std/src/StdAssertions.sol\":6831:6833  18 */\n      0x12\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40\n      dup3\n      add\n      mstore\n        /* \"lib/forge-std/src/StdAssertions.sol\":6775:6834  log_named_decimal_uint(\" Max % Delta\", maxPercentDelta, 18) */\n      0xeb8ba43ced7537421946bd43e828b8b2b8428927aa8f801c13d934bf11aca57b\n      swap4\n      dup5\n      swap2\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"lib/forge-std/src/StdAssertions.sol\":6853:6909  log_named_decimal_uint(\"     % Delta\", percentDelta, 18) */\n      swap2\n      dup3\n      swap2\n      dup3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40\n        /* \"lib/forge-std/src/StdAssertions.sol\":6831:6833  18 */\n      0x12\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap2\n      swap4\n      swap3\n      swap4\n      0x60\n      dup2\n      mstore\n      0x0c\n      0x60\n      dup3\n      add\n      mstore\n      0x2020202020252044656c74610000000000000000000000000000000000000000\n      0x80\n      dup3\n      add\n      mstore\n      0xa0\n      dup2\n      add\n      swap5\n      0x20\n      dup3\n      add\n      mstore\n      add\n      mstore\n      jump\n        /* \"lib/forge-std/src/StdAssertions.sol\":6853:6909  log_named_decimal_uint(\"     % Delta\", percentDelta, 18) */\n    tag_2458:\n      sub\n      swap1\n      log1\n      tag_2461\n      tag_42\n      jump\t// in\n    tag_2461:\n        /* \"lib/forge-std/src/StdAssertions.sol\":6559:6940  if (percentDelta > maxPercentDelta) {... */\n      codesize\n      dup1\n      dup1\n      dup1\n      jump(tag_2426)\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":4810:5010  if (a != b) {... */\n    tag_2419:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":4841:4881  log(\"Error: a == b not satisfied [int]\") */\n      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup6\n      mload(0x40)\n      0x20\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":1163:1180  _validateCallback */\n      0x21\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n      dup3\n      add\n      mstore\n      0x4572726f723a2061203d3d2062206e6f7420736174697366696564205b696e74\n      0x40\n      dup3\n      add\n      mstore\n      0x5d00000000000000000000000000000000000000000000000000000000000000\n      0x60\n      dup3\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":4841:4881  log(\"Error: a == b not satisfied [int]\") */\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      swap2\n      0x40\n      dup4\n      mstore\n      tag_2462\n      0x40\n      dup5\n      add\n      0x40\n      swap1\n      0x0a\n      dup2\n      mstore\n      0x2020457870656374656400000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_2462:\n      swap1\n      0x20\n      dup5\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":4900:4930  log_named_int(\"  Expected\", b) */\n      dup3\n      0x2fe632779174374378442a8e978bccfbdcc1d6b2b0d81f7e8eb776ab2286f168\n      swap4\n      dup5\n      swap3\n      sub\n      swap1\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      dup1\n      swap2\n      0x40\n      dup3\n      mstore\n      tag_2463\n      0x40\n      dup4\n      add\n      0x40\n      swap1\n      0x0a\n      dup2\n      mstore\n      0x2020202041637475616c00000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_2463:\n      swap1\n      0x20\n      dup4\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":4949:4979  log_named_int(\"    Actual\", a) */\n      sub\n      swap1\n      log1\n      tag_2464\n      tag_42\n      jump\t// in\n    tag_2464:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":4810:5010  if (a != b) {... */\n      codesize\n      dup1\n      jump(tag_2420)\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":3674:3886  if (a != b) {... */\n    tag_2417:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":3705:3749  log(\"Error: a == b not satisfied [address]\") */\n      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup6\n      mload(0x40)\n      0x20\n      dup2\n      mstore\n      0x25\n      0x20\n      dup3\n      add\n      mstore\n      0x4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464\n      0x40\n      dup3\n      add\n      mstore\n      0x726573735d000000000000000000000000000000000000000000000000000000\n      0x60\n      dup3\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":3705:3749  log(\"Error: a == b not satisfied [address]\") */\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      swap1\n      0x40\n      dup3\n      mstore\n      tag_2465\n      0x40\n      dup4\n      add\n      0x40\n      swap1\n      0x0a\n      dup2\n      mstore\n      0x2020457870656374656400000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_2465:\n        /* \"test/unit/ConstantProductPair.t.sol\":5394:5398  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":3768:3802  log_named_address(\"  Expected\", b) */\n      dup3\n      0x9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f\n      swap4\n      dup5\n      swap3\n      sub\n      swap1\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      dup1\n      swap2\n      0x40\n      dup3\n      mstore\n      tag_2466\n      0x40\n      dup4\n      add\n      0x40\n      swap1\n      0x0a\n      dup2\n      mstore\n      0x2020202041637475616c00000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_2466:\n      swap1\n      0x20\n      dup4\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":3821:3855  log_named_address(\"    Actual\", a) */\n      sub\n      swap1\n      log1\n      tag_2467\n      tag_42\n      jump\t// in\n    tag_2467:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":3674:3886  if (a != b) {... */\n      codesize\n      jump(tag_2418)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2413:\n      dup9\n      dup1\n      revert\n    tag_134:\n      pop\n      jumpi(tag_196, callvalue)\n      0x20\n      dup1\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_255\n      jumpi\n      calldataload(0x04)\n      swap2\n      0xffffffffffffffff\n      dup4\n      gt\n      tag_196\n      jumpi\n      calldatasize\n      0x23\n      dup5\n      add\n      slt\n      iszero\n      tag_196\n      jumpi\n      tag_2476\n      0x24\n      swap4\n      calldatasize\n      swap1\n      dup6\n      dup2\n      0x04\n      add\n      calldataload\n      swap2\n      add\n      tag_8\n      jump\t// in\n    tag_2476:\n      swap3\n      dup4\n      mload\n      swap2\n      0x01\n      swap2\n      dup4\n      dup4\n      shl\n        /* \"test/__fixtures/BaseTest.sol\":4405:4406  2 */\n      0x02\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap5\n      dup1\n      dup3\n      div\n      dup7\n      eq\n      swap1\n      iszero\n      or\n      iszero\n      tag_2477\n      jumpi\n        /* \"test/__fixtures/BaseTest.sol\":4379:4407  new bytes(buffer.length * 2) */\n      dup4\n      dup8\n      swap4\n      dup8\n      swap4\n      tag_2479\n      dup9\n      swap5\n      tag_18\n      jump\t// in\n    tag_2479:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap6\n      mload(0x40)\n      tag_2480\n      dup2\n      tag_4\n      jump\t// in\n    tag_2480:\n      0x10\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n      dup8\n      dup3\n      add\n      mstore\n        /* \"test/__fixtures/BaseTest.sol\":4473:4486  uint256 i = 0 */\n      dup4\n        /* \"test/__fixtures/BaseTest.sol\":4468:4669  for (uint256 i = 0; i < buffer.length; i++) {... */\n      swap9\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2481:\n      tag_2482\n      jumpi\n        /* \"test/__fixtures/BaseTest.sol\":4468:4669  for (uint256 i = 0; i < buffer.length; i++) {... */\n    tag_2483:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup8\n      dup8\n        /* \"test/__fixtures/BaseTest.sol\":4693:4726  abi.encodePacked(\"0x\", converted) */\n      tag_2484\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x22\n      dup10\n      mload(0x40)\n        /* \"test/__fixtures/BaseTest.sol\":4693:4726  abi.encodePacked(\"0x\", converted) */\n      dup1\n      swap6\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x3078000000000000000000000000000000000000000000000000000000000000\n        /* \"test/__fixtures/BaseTest.sol\":4693:4726  abi.encodePacked(\"0x\", converted) */\n      dup7\n      dup4\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      tag_2485\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      mload\n      dup1\n      swap3\n      dup9\n      dup8\n      dup7\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      swap2\n      add\n      tag_9\n      jump\t// in\n    tag_2485:\n      dup2\n      add\n        /* \"test/__fixtures/BaseTest.sol\":4693:4726  abi.encodePacked(\"0x\", converted) */\n      sub\n      swap1\n      dup2\n      add\n      dup6\n      mstore\n      add\n      dup4\n      tag_6\n      jump\t// in\n    tag_2484:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_2486\n      mload(0x40)\n      swap3\n      dup3\n      dup5\n      swap4\n      dup5\n      mstore\n      dup4\n      add\n      swap1\n      tag_10\n      jump\t// in\n    tag_2486:\n      sub\n      swap1\n      return\n        /* \"test/__fixtures/BaseTest.sol\":4507:4510  i++ */\n    tag_2482:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      mload\n        /* \"test/__fixtures/BaseTest.sol\":4488:4505  i < buffer.length */\n      dup10\n      lt\n      iszero\n      tag_2487\n      jumpi\n        /* \"test/__fixtures/BaseTest.sol\":4557:4566  buffer[i] */\n      tag_2489\n      dup10\n      dup4\n      tag_20\n      jump\t// in\n    tag_2489:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n      0xff00000000000000000000000000000000000000000000000000000000000000\n      dup1\n        /* \"test/__fixtures/BaseTest.sol\":4545:4583  _base[uint8(buffer[i]) / _base.length] */\n      tag_2490\n        /* \"test/__fixtures/BaseTest.sol\":4551:4582  uint8(buffer[i]) / _base.length */\n      tag_2491\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup6\n      mload\n      0xf8\n      swap6\n      dup7\n      shr\n        /* \"test/__fixtures/BaseTest.sol\":4551:4582  uint8(buffer[i]) / _base.length */\n      tag_21\n      jump\t// in\n    tag_2491:\n        /* \"test/__fixtures/BaseTest.sol\":4545:4583  _base[uint8(buffer[i]) / _base.length] */\n      dup6\n      tag_20\n      jump\t// in\n    tag_2490:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n      and\n      swap2\n      dup12\n      dup9\n      shl\n      swap3\n      dup13\n      dup5\n      div\n      dup11\n      eq\n      dup14\n      iszero\n      or\n      iszero\n      tag_2492\n      jumpi\n        /* \"test/__fixtures/BaseTest.sol\":4620:4658  _base[uint8(buffer[i]) % _base.length] */\n      tag_2494\n        /* \"test/__fixtures/BaseTest.sol\":4526:4583  converted[i * 2] = _base[uint8(buffer[i]) / _base.length] */\n      swap2\n        /* \"test/__fixtures/BaseTest.sol\":4632:4641  buffer[i] */\n      tag_2495\n        /* \"test/__fixtures/BaseTest.sol\":4526:4583  converted[i * 2] = _base[uint8(buffer[i]) / _base.length] */\n      dup15\n      dup15\n      tag_2496\n      dup9\n        /* \"test/__fixtures/BaseTest.sol\":4626:4657  uint8(buffer[i]) % _base.length */\n      tag_2497\n        /* \"test/__fixtures/BaseTest.sol\":4526:4583  converted[i * 2] = _base[uint8(buffer[i]) / _base.length] */\n      swap7\n      dup15\n      byte\n      swap3\n      tag_20\n      jump\t// in\n    tag_2496:\n      mstore8\n        /* \"test/__fixtures/BaseTest.sol\":4632:4641  buffer[i] */\n      dup9\n      tag_20\n      jump\t// in\n    tag_2495:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n      dup7\n      mload\n      swap2\n      shr\n        /* \"test/__fixtures/BaseTest.sol\":4626:4657  uint8(buffer[i]) % _base.length */\n      tag_22\n      jump\t// in\n    tag_2497:\n        /* \"test/__fixtures/BaseTest.sol\":4620:4658  _base[uint8(buffer[i]) % _base.length] */\n      dup5\n      tag_20\n      jump\t// in\n    tag_2494:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n      and\n      dup7\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_2498\n      jumpi\n        /* \"test/__fixtures/BaseTest.sol\":4597:4658  converted[i * 2 + 1] = _base[uint8(buffer[i]) % _base.length] */\n      swap10\n        /* \"test/__fixtures/BaseTest.sol\":4507:4510  i++ */\n      tag_2500\n        /* \"test/__fixtures/BaseTest.sol\":4597:4658  converted[i * 2 + 1] = _base[uint8(buffer[i]) % _base.length] */\n      swap2\n      tag_2501\n      dup9\n      swap10\n      swap11\n      swap12\n      swap13\n      dup9\n      byte\n      swap2\n      dup14\n      tag_20\n      jump\t// in\n    tag_2501:\n      mstore8\n        /* \"test/__fixtures/BaseTest.sol\":4507:4510  i++ */\n      tag_19\n      jump\t// in\n    tag_2500:\n        /* \"test/__fixtures/BaseTest.sol\":4473:4486  uint256 i = 0 */\n      swap9\n      swap8\n      swap7\n      swap6\n      jump(tag_2481)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2498:\n      dup5\n      dup7\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      mstore(0x04, 0x11)\n      revert\n    tag_2492:\n      dup7\n      dup9\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      mstore(0x04, 0x11)\n      revert\n        /* \"test/__fixtures/BaseTest.sol\":4488:4505  i < buffer.length */\n    tag_2487:\n      jump(tag_2483)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2477:\n      pop\n      swap1\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      mstore(0x04, 0x11)\n      revert\n    tag_132:\n      pop\n      jumpi(tag_196, callvalue)\n      dup1\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_196\n      jumpi\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":3508:3558  _createPair(address(_tokenA), address(_tokenC), 0) */\n      tag_2506\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":3528:3535  _tokenA */\n      0x19\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      dup3\n        /* \"test/unit/ConstantProductPair.t.sol\":3546:3553  _tokenC */\n      0x1b\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":3508:3558  _createPair(address(_tokenA), address(_tokenC), 0) */\n      swap1\n      tag_46\n      jump\t// in\n    tag_2506:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      and\n      swap2\n      dup1\n        /* \"test/unit/ConstantProductPair.t.sol\":3528:3535  _tokenA */\n      0x19\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":3585:3619  _tokenA.mint(address(lPair), 1001) */\n      swap1\n      dup2\n      extcodesize\n      iszero\n      tag_291\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      swap1\n      0x40c10f1900000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":3585:3619  _tokenA.mint(address(lPair), 1001) */\n      swap2\n      dup3\n      dup2\n      mstore\n      dup6\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":3585:3619  _tokenA.mint(address(lPair), 1001) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":3614:3618  1001 */\n      dup5\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x44\n        /* \"test/unit/ConstantProductPair.t.sol\":3614:3618  1001 */\n      dup2\n      dup4\n      0x03e9\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap9\n      dup10\n      0x24\n      dup5\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":3585:3619  _tokenA.mint(address(lPair), 1001) */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_201\n      jumpi\n      dup6\n      swap2\n      tag_2511\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2512:\n      pop\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":3546:3553  _tokenC */\n      0x1b\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":3629:3663  _tokenC.mint(address(lPair), 1001) */\n      swap2\n      dup3\n      extcodesize\n      iszero\n      tag_285\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x44\n      dup5\n      swap3\n      dup4\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":3629:3663  _tokenC.mint(address(lPair), 1001) */\n      swap6\n      dup7\n      swap5\n      dup6\n      swap4\n      dup5\n      mstore\n      dup10\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":3629:3663  _tokenC.mint(address(lPair), 1001) */\n      dup6\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      dup5\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":3629:3663  _tokenC.mint(address(lPair), 1001) */\n      gas\n      call\n      dup1\n      iszero\n      tag_219\n      jumpi\n      tag_2517\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2518:\n      pop\n      pop\n      mload(0x40)\n      0x6a62784200000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":3673:3698  lPair.mint(address(this)) */\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":3692:3696  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":3673:3698  lPair.mint(address(this)) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":3673:3698  lPair.mint(address(this)) */\n      swap1\n      dup2\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":3673:3698  lPair.mint(address(this)) */\n      dup2\n      dup8\n      dup8\n      gas\n      call\n      dup1\n      iszero\n      tag_841\n      jumpi\n      tag_2521\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2522:\n      pop\n      dup1\n      0x24\n      swap3\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":3736:3766  lPair.balanceOf(address(this)) */\n      swap4\n      dup5\n      dup1\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":3736:3766  lPair.balanceOf(address(this)) */\n      dup3\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":3692:3696  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":3736:3766  lPair.balanceOf(address(this)) */\n      dup4\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":3736:3766  lPair.balanceOf(address(this)) */\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_215\n      jumpi\n      dup4\n      swap2\n      tag_2525\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2526:\n        /* \"test/unit/ConstantProductPair.t.sol\":3727:3770  assertEq(lPair.balanceOf(address(this)), 1) */\n      dup4\n      tag_316\n      dup4\n      tag_37\n      jump\t// in\n        /* \"test/unit/ConstantProductPair.t.sol\":3736:3766  lPair.balanceOf(address(this)) */\n    tag_2525:\n      swap1\n      pop\n      dup2\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_2528\n      jumpi\n    tag_2529:\n      tag_2530\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_2530:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":3727:3770  assertEq(lPair.balanceOf(address(this)), 1) */\n      tag_316\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":3736:3766  lPair.balanceOf(address(this)) */\n      codesize\n      jump(tag_2526)\n    tag_2528:\n      pop\n      returndatasize\n      jump(tag_2529)\n        /* \"test/unit/ConstantProductPair.t.sol\":3673:3698  lPair.mint(address(this)) */\n    tag_2521:\n      dup2\n      swap1\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_2533\n      jumpi\n    tag_2534:\n      tag_2535\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_2535:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":3673:3698  lPair.mint(address(this)) */\n      codesize\n      jump(tag_2522)\n    tag_2533:\n      pop\n      returndatasize\n      jump(tag_2534)\n        /* \"test/unit/ConstantProductPair.t.sol\":3629:3663  _tokenC.mint(address(lPair), 1001) */\n    tag_2517:\n      tag_2538\n      swap1\n      tag_1\n      jump\t// in\n    tag_2538:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_255\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":3629:3663  _tokenC.mint(address(lPair), 1001) */\n      dup2\n      codesize\n      jump(tag_2518)\n        /* \"test/unit/ConstantProductPair.t.sol\":3585:3619  _tokenA.mint(address(lPair), 1001) */\n    tag_2511:\n      tag_2541\n      swap1\n      tag_1\n      jump\t// in\n    tag_2541:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_285\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":3585:3619  _tokenA.mint(address(lPair), 1001) */\n      dup4\n      codesize\n      jump(tag_2512)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_130:\n      pop\n      jumpi(tag_196, callvalue)\n      dup1\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_196\n      jumpi\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25443  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      swap3\n      dup4\n      dup1\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x26232a2e00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      dup3\n      mstore\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_219\n      jumpi\n      dup3\n      swap1\n      tag_2550\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2551:\n        /* \"test/unit/ConstantProductPair.t.sol\":25414:25461  assertGt(_constantProductPair.platformFee(), 0) */\n      tag_2552\n      swap2\n      pop\n      tag_68\n      jump\t// in\n    tag_2552:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup1\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25443  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":25471:25498  _constantProductPair.sync() */\n      dup1\n      extcodesize\n      iszero\n      tag_229\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      dup1\n      swap2\n      0x04\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":25471:25498  _constantProductPair.sync() */\n      dup1\n      swap5\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xfff6cae900000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":25471:25498  _constantProductPair.sync() */\n      dup4\n      mstore\n      gas\n      call\n      dup1\n      iszero\n      tag_219\n      jumpi\n      tag_2557\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2558:\n      pop\n      pop\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25443  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      swap1\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":25524:25553  _constantProductPair.token0() */\n      swap2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x0dfe168100000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":25524:25553  _constantProductPair.token0() */\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":25524:25553  _constantProductPair.token0() */\n      dup4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":25524:25553  _constantProductPair.token0() */\n      dup2\n      dup5\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_219\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":25524:25553  _constantProductPair.token0() */\n      swap4\n      dup4\n      swap3\n      tag_2561\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2562:\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":25579:25608  _constantProductPair.token1() */\n      swap5\n      dup6\n      dup1\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xd21220a700000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":25579:25608  _constantProductPair.token1() */\n      dup3\n      mstore\n      gas\n      staticcall\n      swap3\n      dup4\n      iszero\n      tag_219\n      jumpi\n      dup3\n      swap4\n      tag_2565\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2566:\n      pop\n      dup2\n      dup1\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */\n      dup2\n      add\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */\n      dup3\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":25704:25708  this */\n      address\n        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */\n      0x24\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */\n      0x24\n      dup2\n      mstore\n      tag_2567\n      dup2\n      tag_5\n      jump\t// in\n    tag_2567:\n        /* \"lib/forge-std/src/StdCheats.sol\":19719:19769  token.call(abi.encodeWithSelector(0x70a08231, to)) */\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup7\n      and\n        /* \"lib/forge-std/src/StdCheats.sol\":19719:19769  token.call(abi.encodeWithSelector(0x70a08231, to)) */\n      gas\n      call\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"lib/forge-std/src/StdCheats.sol\":19719:19769  token.call(abi.encodeWithSelector(0x70a08231, to)) */\n      tag_2568\n      tag_13\n      jump\t// in\n    tag_2568:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup1\n      mload\n        /* \"lib/forge-std/src/StdCheats.sol\":19797:19827  abi.decode(balData, (uint256)) */\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n        /* \"lib/forge-std/src/StdStorage.sol\":4581:4593  self._target */\n      0x0a\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      or\n        /* \"lib/forge-std/src/StdStorage.sol\":4581:4593  self._target */\n      0x0a\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sstore\n        /* \"lib/forge-std/src/StdCheats.sol\":19753:19763  0x70a08231 */\n      0x70a08231\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000\n        /* \"lib/forge-std/src/StdStorage.sol\":4736:4745  self._sig */\n      0x08\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      or\n        /* \"lib/forge-std/src/StdStorage.sol\":4736:4745  self._sig */\n      0x08\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sstore\n        /* \"lib/forge-std/src/StdStorage.sol\":5052:5062  self._keys */\n      0x07\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      0x010000000000000000\n      dup2\n      lt\n      iszero\n      tag_2571\n      jumpi\n      0x01\n      dup2\n      add\n      dup1\n        /* \"lib/forge-std/src/StdStorage.sol\":5052:5062  self._keys */\n      0x07\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sstore\n      dup2\n      lt\n      iszero\n      tag_2573\n      jumpi\n        /* \"lib/forge-std/src/StdStorage.sol\":5052:5062  self._keys */\n      0x07\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":25704:25708  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688\n      add\n      sstore\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"lib/forge-std/src/StdStorage.sol\":4581:4593  self._target */\n      0x0a\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      swap3\n        /* \"lib/forge-std/src/StdStorage.sol\":4736:4745  self._sig */\n      0x08\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      0xe0\n      shl\n        /* \"lib/forge-std/src/StdStorage.sol\":9476:9487  self._depth */\n      0x09\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      swap5\n      dup5\n      dup1\n      tag_2575\n      tag_104\n      jump\t// in\n    tag_2575:\n        /* \"lib/forge-std/src/StdStorage.sol\":9584:9596  flatten(ins) */\n      swap4\n      tag_2576\n      dup6\n      tag_113\n      jump\t// in\n    tag_2576:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      mload(0x40)\n        /* \"lib/forge-std/src/StdStorage.sol\":9561:9597  abi.encodePacked(fsig, flatten(ins)) */\n      swap6\n      dup7\n      tag_2577\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"lib/forge-std/src/StdStorage.sol\":9561:9597  abi.encodePacked(fsig, flatten(ins)) */\n      dup3\n      add\n      swap5\n      dup5\n      dup7\n      tag_12\n      jump\t// in\n    tag_2577:\n      sub\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap2\n        /* \"lib/forge-std/src/StdStorage.sol\":9561:9597  abi.encodePacked(fsig, flatten(ins)) */\n      tag_2578\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"lib/forge-std/src/StdStorage.sol\":9561:9597  abi.encodePacked(fsig, flatten(ins)) */\n      swap4\n      dup5\n      dup2\n      add\n      dup11\n      mstore\n      dup10\n      tag_6\n      jump\t// in\n    tag_2578:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"lib/forge-std/src/StdStorage.sol\":9612:9627  self.finds[who] */\n      tag_2579\n      dup9\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x00\n      mstore\n        /* \"lib/forge-std/src/StdStorage.sol\":9612:9622  self.finds */\n      0x06\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap1\n      jump\n        /* \"lib/forge-std/src/StdStorage.sol\":9612:9627  self.finds[who] */\n    tag_2579:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      swap2\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      dup2\n      dup7\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n      0x40\n      dup6\n      keccak256\n      dup13\n      mload(0x40)\n        /* \"lib/forge-std/src/StdStorage.sol\":9644:9678  abi.encodePacked(ins, field_depth) */\n      tag_2580\n      dup2\n      tag_662\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"lib/forge-std/src/StdStorage.sol\":9644:9678  abi.encodePacked(ins, field_depth) */\n      dup3\n      add\n      swap5\n      dup9\n      dup7\n      tag_107\n      jump\t// in\n    tag_2580:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n        /* \"lib/forge-std/src/StdStorage.sol\":9634:9679  keccak256(abi.encodePacked(ins, field_depth)) */\n      swap1\n      keccak256\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup7\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n      0xff\n      0x40\n      dup7\n      keccak256\n      sload\n      and\n        /* \"lib/forge-std/src/StdStorage.sol\":9611:9680  !self.finds[who][fsig][keccak256(abi.encodePacked(ins, field_depth))] */\n      iszero\n        /* \"lib/forge-std/src/StdStorage.sol\":9607:9717  if (!self.finds[who][fsig][keccak256(abi.encodePacked(ins, field_depth))]) {... */\n      tag_2582\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2583:\n        /* \"lib/forge-std/src/StdStorage.sol\":9749:9764  self.slots[who] */\n      tag_2584\n      dup8\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x00\n      mstore\n        /* \"lib/forge-std/src/StdCheats.sol\":19864:19872  stdstore */\n      0x05\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      swap1\n      jump\n        /* \"lib/forge-std/src/StdStorage.sol\":9749:9764  self.slots[who] */\n    tag_2584:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      dup6\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"lib/forge-std/src/StdStorage.sol\":9781:9815  abi.encodePacked(ins, field_depth) */\n      tag_667\n      tag_2586\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40\n      dup7\n      keccak256\n      swap4\n      dup14\n      mload(0x40)\n        /* \"lib/forge-std/src/StdStorage.sol\":9781:9815  abi.encodePacked(ins, field_depth) */\n      swap4\n      dup5\n      swap2\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"lib/forge-std/src/StdStorage.sol\":9781:9815  abi.encodePacked(ins, field_depth) */\n      dup4\n      add\n      swap7\n      dup8\n      tag_107\n      jump\t// in\n    tag_2586:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n        /* \"lib/forge-std/src/StdStorage.sol\":9771:9816  keccak256(abi.encodePacked(ins, field_depth)) */\n      swap1\n      keccak256\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n      0x40\n      dup3\n      keccak256\n      sload\n        /* \"lib/forge-std/src/StdStorage.sol\":9889:9909  who.staticcall(cald) */\n      swap5\n      mload\n      swap1\n      dup5\n      gas\n      staticcall\n      pop\n      tag_2587\n      tag_13\n      jump\t// in\n    tag_2587:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap6\n      0x07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n      dup2\n      sub\n      tag_2588\n      jumpi\n      dup6\n      swap7\n        /* \"lib/forge-std/src/StdStorage.sol\":9930:9968  bytesToBytes32(rdat, 32 * field_depth) */\n      tag_2590\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap2\n        /* \"lib/forge-std/src/StdCheats.sol\":19864:19872  stdstore */\n      0x05\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      shl\n        /* \"lib/forge-std/src/StdStorage.sol\":9930:9968  bytesToBytes32(rdat, 32 * field_depth) */\n      swap1\n      tag_112\n      jump\t// in\n    tag_2590:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      0x667f9d7000000000000000000000000000000000000000000000000000000000\n        /* \"lib/forge-std/src/StdStorage.sol\":10003:10021  vm.load(who, slot) */\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      0x04\n        /* \"lib/forge-std/src/StdStorage.sol\":10003:10021  vm.load(who, slot) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n      0x24\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup5\n      swap1\n      mstore\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      0x44\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"lib/forge-std/src/StdStorage.sol\":10003:10021  vm.load(who, slot) */\n      gas\n      staticcall\n      swap2\n      dup3\n      iszero\n      tag_1089\n      jumpi\n      dup8\n      swap3\n      tag_2594\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2595:\n        /* \"lib/forge-std/src/StdStorage.sol\":10036:10048  fdat != curr */\n      pop\n      sub\n        /* \"lib/forge-std/src/StdStorage.sol\":10032:10250  if (fdat != curr) {... */\n      tag_2596\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2597:\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"lib/forge-std/src/StdStorage.sol\":10259:10283  vm.store(who, slot, set) */\n      extcodesize\n      iszero\n      tag_249\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      0x70ca10bb00000000000000000000000000000000000000000000000000000000\n        /* \"lib/forge-std/src/StdStorage.sol\":10259:10283  vm.store(who, slot, set) */\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap2\n      swap1\n      swap2\n      and\n      0x04\n        /* \"lib/forge-std/src/StdStorage.sol\":10259:10283  vm.store(who, slot, set) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x02b5e3af16b1880000\n      0x44\n      dup3\n      add\n      mstore\n      dup4\n      dup2\n      0x64\n      dup2\n      dup4\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"lib/forge-std/src/StdStorage.sol\":10259:10283  vm.store(who, slot, set) */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_841\n      jumpi\n      dup5\n      swap2\n      tag_2603\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2604:\n        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      pop\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n        /* \"lib/forge-std/src/StdStorage.sol\":4581:4593  self._target */\n      0x0a\n        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      sload\n      and\n        /* \"lib/forge-std/src/StdStorage.sol\":4581:4593  self._target */\n      0x0a\n        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      sstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000\n        /* \"lib/forge-std/src/StdStorage.sol\":4736:4745  self._sig */\n      0x08\n        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      sload\n      and\n        /* \"lib/forge-std/src/StdStorage.sol\":4736:4745  self._sig */\n      0x08\n        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      sstore\n        /* \"lib/forge-std/src/StdStorage.sol\":10348:10365  delete self._keys */\n      tag_2605\n      tag_109\n      jump\t// in\n    tag_2605:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x00\n        /* \"lib/forge-std/src/StdStorage.sol\":9476:9487  self._depth */\n      0x09\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sstore\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25443  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      mload(0x40)\n      0xa9059cbb00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":25777:25837  lToken0.transfer(address(_constantProductPair), lSwapAmount) */\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":25777:25837  lToken0.transfer(address(_constantProductPair), lSwapAmount) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x02b5e3af16b1880000\n      0x24\n      dup3\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      dup1\n      0x44\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":25777:25837  lToken0.transfer(address(_constantProductPair), lSwapAmount) */\n      sub\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      dup8\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup9\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":25777:25837  lToken0.transfer(address(_constantProductPair), lSwapAmount) */\n      gas\n      call\n      dup1\n      iszero\n      tag_841\n      jumpi\n      tag_2609\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2610:\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":25868:25946  _constantProductPair.swap(int256(lSwapAmount), true, address(this), bytes(\"\")) */\n      tag_2611\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25443  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      mload(0x40)\n      tag_2612\n      dup2\n      tag_2\n      jump\t// in\n    tag_2612:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      dup7\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":25868:25946  _constantProductPair.swap(int256(lSwapAmount), true, address(this), bytes(\"\")) */\n      swap7\n      dup8\n      dup1\n      swap5\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xe12bd9d800000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":25868:25946  _constantProductPair.swap(int256(lSwapAmount), true, address(this), bytes(\"\")) */\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":25704:25708  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":25868:25946  _constantProductPair.swap(int256(lSwapAmount), true, address(this), bytes(\"\")) */\n      dup5\n      add\n      tag_61\n      jump\t// in\n    tag_2611:\n      sub\n      swap3\n      gas\n      call\n      dup1\n      iszero\n      tag_841\n      jumpi\n      dup5\n      swap1\n      tag_2615\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2616:\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25443  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      mload(0x40)\n      0xa9059cbb00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":25956:26015  lToken1.transfer(address(_constantProductPair), lAmountOut) */\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":25956:26015  lToken1.transfer(address(_constantProductPair), lAmountOut) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n      0x24\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      swap1\n      mstore\n      swap4\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup5\n      dup1\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      0x44\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":25956:26015  lToken1.transfer(address(_constantProductPair), lAmountOut) */\n    tag_2617:\n      sub\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      dup9\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup8\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":25956:26015  lToken1.transfer(address(_constantProductPair), lAmountOut) */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_201\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":26038:26116  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n      tag_2620\n        /* \"test/unit/ConstantProductPair.t.sol\":25956:26015  lToken1.transfer(address(_constantProductPair), lAmountOut) */\n      swap5\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":25956:26015  lToken1.transfer(address(_constantProductPair), lAmountOut) */\n      swap3\n      tag_2621\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2622:\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":26064:26083  -int256(lAmountOut) */\n      tag_2623\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25443  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":26064:26083  -int256(lAmountOut) */\n      swap2\n      tag_55\n      jump\t// in\n    tag_2623:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      mload(0x40)\n      swap2\n      tag_2624\n      dup4\n      tag_2\n      jump\t// in\n    tag_2624:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      dup8\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup8\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":26038:26116  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n      dup1\n      swap9\n      dup2\n      swap6\n      dup3\n      swap5\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xe12bd9d800000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":26038:26116  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n      dup5\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":25704:25708  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":26038:26116  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":26038:26116  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n      dup6\n      add\n      tag_62\n      jump\t// in\n    tag_2620:\n      sub\n      swap3\n      gas\n      call\n      swap3\n      dup4\n      iszero\n      tag_841\n      jumpi\n      dup5\n      swap4\n      tag_2627\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2628:\n      pop\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25443  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":26127:26154  _constantProductPair.sync() */\n      dup1\n      extcodesize\n      iszero\n      tag_255\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      dup1\n      swap2\n      0x04\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":26127:26154  _constantProductPair.sync() */\n      dup1\n      swap5\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xfff6cae900000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":26127:26154  _constantProductPair.sync() */\n      dup4\n      mstore\n      gas\n      call\n      dup1\n      iszero\n      tag_219\n      jumpi\n      tag_2633\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2634:\n      pop\n      pop\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25443  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":26173:26221  lToken0.balanceOf(address(_constantProductPair)) */\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":26173:26221  lToken0.balanceOf(address(_constantProductPair)) */\n      dup3\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":26173:26221  lToken0.balanceOf(address(_constantProductPair)) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup8\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":26173:26221  lToken0.balanceOf(address(_constantProductPair)) */\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_201\n      jumpi\n      dup6\n      swap1\n      tag_2637\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2638:\n        /* \"test/unit/ConstantProductPair.t.sol\":26223:26242  INITIAL_MINT_AMOUNT */\n      tag_2639\n      swap2\n      pop\n      tag_69\n      jump\t// in\n    tag_2639:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25443  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":26262:26310  lToken1.balanceOf(address(_constantProductPair)) */\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":26262:26310  lToken1.balanceOf(address(_constantProductPair)) */\n      dup3\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":26262:26310  lToken1.balanceOf(address(_constantProductPair)) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup7\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":26262:26310  lToken1.balanceOf(address(_constantProductPair)) */\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_201\n      jumpi\n      dup6\n      swap1\n      tag_2642\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2643:\n        /* \"test/unit/ConstantProductPair.t.sol\":26312:26331  INITIAL_MINT_AMOUNT */\n      tag_2644\n      swap2\n      pop\n      tag_34\n      jump\t// in\n    tag_2644:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25443  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":26351:26385  _constantProductPair.platformFee() */\n      swap3\n      dup4\n      dup1\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x26232a2e00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":26351:26385  _constantProductPair.platformFee() */\n      dup3\n      mstore\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_201\n      jumpi\n      dup6\n      swap1\n      tag_2647\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2648:\n        /* \"test/unit/ConstantProductPair.t.sol\":26387:26407  DEFAULT_PLATFORM_FEE */\n      tag_2649\n      swap2\n      pop\n      tag_35\n      jump\t// in\n    tag_2649:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25443  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":26466:26480  _platformFeeTo */\n      0x15\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":26427:26482  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      dup1\n      swap5\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":26427:26482  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":26427:26482  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      dup4\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":26427:26482  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_201\n      jumpi\n      dup6\n      swap1\n      tag_2652\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2653:\n        /* \"test/unit/ConstantProductPair.t.sol\":26418:26486  assertEq(_constantProductPair.balanceOf(address(_platformFeeTo)), 0) */\n      tag_2654\n      swap2\n      pop\n      tag_36\n      jump\t// in\n    tag_2654:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup4\n      0x40\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25443  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":26497:26537  _constantProductPair.burn(address(this)) */\n      dup1\n      swap5\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x89afcb4400000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":26497:26537  _constantProductPair.burn(address(this)) */\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":25704:25708  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":26497:26537  _constantProductPair.burn(address(this)) */\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":26497:26537  _constantProductPair.burn(address(this)) */\n      gas\n      call\n      dup1\n      iszero\n      tag_201\n      jumpi\n      tag_2657\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2658:\n      pop\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25443  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":26466:26480  _platformFeeTo */\n      0x15\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":26573:26628  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      dup1\n      swap8\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":26573:26628  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":26573:26628  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      dup4\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":26573:26628  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      gas\n      staticcall\n      swap4\n      dup5\n      iszero\n      tag_201\n      jumpi\n      dup6\n      swap5\n      tag_2661\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2662:\n        /* \"test/unit/ConstantProductPair.t.sol\":26638:26666  assertGt(lPlatformShares, 0) */\n      pop\n      tag_2663\n      dup5\n      tag_68\n      jump\t// in\n    tag_2663:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":26713:26721  _factory */\n      0x13\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"test/unit/ConstantProductPair.t.sol\":26696:26723  vm.prank(address(_factory)) */\n      extcodesize\n      iszero\n      tag_255\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":26696:26723  vm.prank(address(_factory)) */\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xca669fa700000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":26696:26723  vm.prank(address(_factory)) */\n      dup3\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":26696:26723  vm.prank(address(_factory)) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":26696:26723  vm.prank(address(_factory)) */\n      dup2\n      dup2\n        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":26696:26723  vm.prank(address(_factory)) */\n      dup2\n      dup4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"test/unit/ConstantProductPair.t.sol\":26696:26723  vm.prank(address(_factory)) */\n      gas\n      call\n      dup1\n      iszero\n      tag_219\n      jumpi\n      tag_2668\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2669:\n      pop\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25443  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":26733:26777  _constantProductPair.setCustomPlatformFee(0) */\n      dup1\n      extcodesize\n      iszero\n      tag_255\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      dup1\n      swap2\n        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":26733:26777  _constantProductPair.setCustomPlatformFee(0) */\n      dup1\n      swap5\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xafb4a43b00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":26733:26777  _constantProductPair.setCustomPlatformFee(0) */\n      dup4\n      mstore\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":26733:26777  _constantProductPair.setCustomPlatformFee(0) */\n      dup5\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":26733:26777  _constantProductPair.setCustomPlatformFee(0) */\n      gas\n      call\n      dup1\n      iszero\n      tag_219\n      jumpi\n      tag_2674\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2675:\n      pop\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25443  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      mload(0x40)\n      0xa9059cbb00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":26803:26862  lToken0.transfer(address(_constantProductPair), lAmountOut) */\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap2\n      dup3\n      and\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":26803:26862  lToken0.transfer(address(_constantProductPair), lAmountOut) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n      0x24\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup4\n      swap1\n      mstore\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n      swap2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup6\n      swap2\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      0x44\n      swap2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup4\n      swap2\n      dup11\n      swap2\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":26803:26862  lToken0.transfer(address(_constantProductPair), lAmountOut) */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_201\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":26885:26962  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */\n      tag_2679\n        /* \"test/unit/ConstantProductPair.t.sol\":26803:26862  lToken0.transfer(address(_constantProductPair), lAmountOut) */\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":26803:26862  lToken0.transfer(address(_constantProductPair), lAmountOut) */\n      swap3\n      tag_833\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      pop\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25443  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      mload(0x40)\n      swap2\n      tag_835\n      dup4\n      tag_2\n      jump\t// in\n        /* \"test/unit/ConstantProductPair.t.sol\":26885:26962  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */\n    tag_2679:\n      sub\n      swap3\n      gas\n      call\n      swap2\n      dup3\n      iszero\n      tag_841\n      jumpi\n      dup5\n      swap3\n      tag_2685\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2686:\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25443  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      mload(0x40)\n      0xa9059cbb00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":26972:27031  lToken1.transfer(address(_constantProductPair), lAmountOut) */\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap2\n      dup3\n      and\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":26972:27031  lToken1.transfer(address(_constantProductPair), lAmountOut) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n      0x24\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup5\n      swap1\n      mstore\n      swap3\n      swap2\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n      swap2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup5\n      swap2\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      0x44\n      swap2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup4\n      swap2\n      dup10\n      swap2\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":26972:27031  lToken1.transfer(address(_constantProductPair), lAmountOut) */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_841\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":27041:27119  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n      tag_2690\n        /* \"test/unit/ConstantProductPair.t.sol\":26972:27031  lToken1.transfer(address(_constantProductPair), lAmountOut) */\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":26972:27031  lToken1.transfer(address(_constantProductPair), lAmountOut) */\n      swap3\n      tag_844\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":27067:27086  -int256(lAmountOut) */\n      tag_846\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25443  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":27067:27086  -int256(lAmountOut) */\n      swap2\n      tag_55\n      jump\t// in\n        /* \"test/unit/ConstantProductPair.t.sol\":27041:27119  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n    tag_2690:\n      sub\n      swap3\n      gas\n      call\n      dup1\n      iszero\n      tag_215\n      jumpi\n      tag_2697\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2698:\n      pop\n      dup2\n      0x40\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25443  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":27148:27188  _constantProductPair.burn(address(this)) */\n      dup1\n      swap5\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x89afcb4400000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":27148:27188  _constantProductPair.burn(address(this)) */\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":25704:25708  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":27148:27188  _constantProductPair.burn(address(this)) */\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":27148:27188  _constantProductPair.burn(address(this)) */\n      gas\n      call\n      dup1\n      iszero\n      tag_215\n      jumpi\n      tag_2701\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2702:\n      pop\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25443  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":26466:26480  _platformFeeTo */\n      0x15\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":27207:27262  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      dup1\n      swap6\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":27207:27262  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":27207:27262  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      dup4\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":27207:27262  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_215\n      jumpi\n      dup4\n      swap1\n      tag_2705\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2706:\n        /* \"test/unit/ConstantProductPair.t.sol\":27264:27279  lPlatformShares */\n      tag_316\n      swap3\n      pop\n      tag_39\n      jump\t// in\n        /* \"test/unit/ConstantProductPair.t.sol\":27207:27262  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n    tag_2705:\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":27207:27262  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      dup3\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":27207:27262  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      gt\n      tag_2708\n      jumpi\n    tag_2709:\n      dup2\n      tag_2710\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":27207:27262  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      swap4\n      dup4\n      tag_6\n      jump\t// in\n    tag_2710:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":27264:27279  lPlatformShares */\n      tag_316\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap2\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":27207:27262  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      jump(tag_2706)\n    tag_2708:\n      returndatasize\n      swap2\n      pop\n      jump(tag_2709)\n        /* \"test/unit/ConstantProductPair.t.sol\":27148:27188  _constantProductPair.burn(address(this)) */\n    tag_2701:\n      tag_2713\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40\n        /* \"test/unit/ConstantProductPair.t.sol\":27148:27188  _constantProductPair.burn(address(this)) */\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40\n        /* \"test/unit/ConstantProductPair.t.sol\":27148:27188  _constantProductPair.burn(address(this)) */\n      gt\n      tag_407\n      jumpi\n      tag_409\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_2713:\n      pop\n      jump(tag_2702)\n        /* \"test/unit/ConstantProductPair.t.sol\":27041:27119  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n    tag_2697:\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":27041:27119  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n      swap1\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_2717\n      jumpi\n    tag_2718:\n      tag_2719\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_2719:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":27041:27119  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n      codesize\n      jump(tag_2698)\n    tag_2717:\n      pop\n      returndatasize\n      jump(tag_2718)\n        /* \"test/unit/ConstantProductPair.t.sol\":26885:26962  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */\n    tag_2685:\n      swap2\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":26885:26962  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */\n      dup3\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":26885:26962  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */\n      gt\n      tag_2726\n      jumpi\n    tag_2727:\n      dup2\n      tag_2728\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":26885:26962  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */\n      swap4\n      dup4\n      tag_6\n      jump\t// in\n    tag_2728:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n      swap1\n      mload\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":26885:26962  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */\n      jump(tag_2686)\n    tag_2726:\n      returndatasize\n      swap2\n      pop\n      jump(tag_2727)\n        /* \"test/unit/ConstantProductPair.t.sol\":26733:26777  _constantProductPair.setCustomPlatformFee(0) */\n    tag_2674:\n      tag_2735\n      swap1\n      tag_1\n      jump\t// in\n    tag_2735:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_249\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":26733:26777  _constantProductPair.setCustomPlatformFee(0) */\n      dup5\n      codesize\n      jump(tag_2675)\n        /* \"test/unit/ConstantProductPair.t.sol\":26696:26723  vm.prank(address(_factory)) */\n    tag_2668:\n      tag_2738\n      swap1\n      tag_1\n      jump\t// in\n    tag_2738:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_249\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":26696:26723  vm.prank(address(_factory)) */\n      dup5\n      codesize\n      jump(tag_2669)\n        /* \"test/unit/ConstantProductPair.t.sol\":26573:26628  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n    tag_2661:\n      swap1\n      swap4\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":26573:26628  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      dup2\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":26573:26628  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      gt\n      tag_2741\n      jumpi\n    tag_2742:\n      dup2\n      tag_2743\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":26573:26628  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      swap4\n      dup4\n      tag_6\n      jump\t// in\n    tag_2743:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":26573:26628  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      swap3\n      codesize\n      jump(tag_2662)\n    tag_2741:\n      returndatasize\n      swap2\n      pop\n      jump(tag_2742)\n        /* \"test/unit/ConstantProductPair.t.sol\":26497:26537  _constantProductPair.burn(address(this)) */\n    tag_2657:\n      tag_2746\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40\n        /* \"test/unit/ConstantProductPair.t.sol\":26497:26537  _constantProductPair.burn(address(this)) */\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40\n        /* \"test/unit/ConstantProductPair.t.sol\":26497:26537  _constantProductPair.burn(address(this)) */\n      gt\n      tag_407\n      jumpi\n      tag_409\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_2746:\n      pop\n      jump(tag_2658)\n        /* \"test/unit/ConstantProductPair.t.sol\":26427:26482  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n    tag_2652:\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":26427:26482  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      dup2\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":26427:26482  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      gt\n      tag_2750\n      jumpi\n    tag_2751:\n      dup2\n      tag_2752\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":26427:26482  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      swap4\n      dup4\n      tag_6\n      jump\t// in\n    tag_2752:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":26418:26486  assertEq(_constantProductPair.balanceOf(address(_platformFeeTo)), 0) */\n      tag_2654\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":26427:26482  _constantProductPair.balanceOf(address(_platformFeeTo)) */\n      jump(tag_2653)\n    tag_2750:\n      returndatasize\n      swap2\n      pop\n      jump(tag_2751)\n        /* \"test/unit/ConstantProductPair.t.sol\":26351:26385  _constantProductPair.platformFee() */\n    tag_2647:\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":26351:26385  _constantProductPair.platformFee() */\n      dup2\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":26351:26385  _constantProductPair.platformFee() */\n      gt\n      tag_2755\n      jumpi\n    tag_2756:\n      dup2\n      tag_2757\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":26351:26385  _constantProductPair.platformFee() */\n      swap4\n      dup4\n      tag_6\n      jump\t// in\n    tag_2757:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":26387:26407  DEFAULT_PLATFORM_FEE */\n      tag_2649\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":26351:26385  _constantProductPair.platformFee() */\n      jump(tag_2648)\n    tag_2755:\n      returndatasize\n      swap2\n      pop\n      jump(tag_2756)\n        /* \"test/unit/ConstantProductPair.t.sol\":26262:26310  lToken1.balanceOf(address(_constantProductPair)) */\n    tag_2642:\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":26262:26310  lToken1.balanceOf(address(_constantProductPair)) */\n      dup2\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":26262:26310  lToken1.balanceOf(address(_constantProductPair)) */\n      gt\n      tag_2760\n      jumpi\n    tag_2761:\n      dup2\n      tag_2762\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":26262:26310  lToken1.balanceOf(address(_constantProductPair)) */\n      swap4\n      dup4\n      tag_6\n      jump\t// in\n    tag_2762:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":26312:26331  INITIAL_MINT_AMOUNT */\n      tag_2644\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":26262:26310  lToken1.balanceOf(address(_constantProductPair)) */\n      jump(tag_2643)\n    tag_2760:\n      returndatasize\n      swap2\n      pop\n      jump(tag_2761)\n        /* \"test/unit/ConstantProductPair.t.sol\":26173:26221  lToken0.balanceOf(address(_constantProductPair)) */\n    tag_2637:\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":26173:26221  lToken0.balanceOf(address(_constantProductPair)) */\n      dup2\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":26173:26221  lToken0.balanceOf(address(_constantProductPair)) */\n      gt\n      tag_2765\n      jumpi\n    tag_2766:\n      dup2\n      tag_2767\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":26173:26221  lToken0.balanceOf(address(_constantProductPair)) */\n      swap4\n      dup4\n      tag_6\n      jump\t// in\n    tag_2767:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":26223:26242  INITIAL_MINT_AMOUNT */\n      tag_2639\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":26173:26221  lToken0.balanceOf(address(_constantProductPair)) */\n      jump(tag_2638)\n    tag_2765:\n      returndatasize\n      swap2\n      pop\n      jump(tag_2766)\n        /* \"test/unit/ConstantProductPair.t.sol\":26127:26154  _constantProductPair.sync() */\n    tag_2633:\n      tag_2770\n      swap1\n      tag_1\n      jump\t// in\n    tag_2770:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_285\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":26127:26154  _constantProductPair.sync() */\n      dup4\n      codesize\n      jump(tag_2634)\n        /* \"test/unit/ConstantProductPair.t.sol\":26038:26116  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n    tag_2627:\n      swap1\n      swap3\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":26038:26116  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n      dup2\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":26038:26116  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n      gt\n      tag_2773\n      jumpi\n    tag_2774:\n      dup2\n      tag_2775\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":26038:26116  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n      swap4\n      dup4\n      tag_6\n      jump\t// in\n    tag_2775:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":26038:26116  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */\n      swap2\n      codesize\n      jump(tag_2628)\n    tag_2773:\n      returndatasize\n      swap2\n      pop\n      jump(tag_2774)\n        /* \"test/unit/ConstantProductPair.t.sol\":25956:26015  lToken1.transfer(address(_constantProductPair), lAmountOut) */\n    tag_2621:\n      tag_2778\n      swap1\n      dup4\n      returndatasize\n      dup6\n      gt\n      tag_547\n      jumpi\n      tag_549\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_2778:\n      pop\n      codesize\n      jump(tag_2622)\n        /* \"test/unit/ConstantProductPair.t.sol\":25868:25946  _constantProductPair.swap(int256(lSwapAmount), true, address(this), bytes(\"\")) */\n    tag_2615:\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":25868:25946  _constantProductPair.swap(int256(lSwapAmount), true, address(this), bytes(\"\")) */\n      dup4\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":25868:25946  _constantProductPair.swap(int256(lSwapAmount), true, address(this), bytes(\"\")) */\n      gt\n      tag_2782\n      jumpi\n    tag_2783:\n      dup2\n      tag_2784\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":25868:25946  _constantProductPair.swap(int256(lSwapAmount), true, address(this), bytes(\"\")) */\n      swap4\n      dup4\n      tag_6\n      jump\t// in\n    tag_2784:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":25956:26015  lToken1.transfer(address(_constantProductPair), lAmountOut) */\n      tag_2617\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap3\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":25868:25946  _constantProductPair.swap(int256(lSwapAmount), true, address(this), bytes(\"\")) */\n      jump(tag_2616)\n    tag_2782:\n      returndatasize\n      swap2\n      pop\n      jump(tag_2783)\n        /* \"test/unit/ConstantProductPair.t.sol\":25777:25837  lToken0.transfer(address(_constantProductPair), lSwapAmount) */\n    tag_2609:\n      tag_2787\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":25777:25837  lToken0.transfer(address(_constantProductPair), lSwapAmount) */\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":25777:25837  lToken0.transfer(address(_constantProductPair), lSwapAmount) */\n      gt\n      tag_547\n      jumpi\n      tag_549\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_2787:\n      pop\n      codesize\n      jump(tag_2610)\n        /* \"lib/forge-std/src/StdStorage.sol\":10259:10283  vm.store(who, slot, set) */\n    tag_2603:\n      tag_2791\n      swap1\n      tag_1\n      jump\t// in\n    tag_2791:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_1862\n      jumpi\n        /* \"lib/forge-std/src/StdStorage.sol\":10259:10283  vm.store(who, slot, set) */\n      dup3\n      codesize\n      jump(tag_2604)\n        /* \"lib/forge-std/src/StdStorage.sol\":10032:10250  if (fdat != curr) {... */\n    tag_2596:\n        /* \"lib/forge-std/src/StdStorage.sol\":10064:10239  require(... */\n      tag_2794\n      tag_108\n      jump\t// in\n    tag_2794:\n        /* \"lib/forge-std/src/StdStorage.sol\":10032:10250  if (fdat != curr) {... */\n      jump(tag_2597)\n        /* \"lib/forge-std/src/StdStorage.sol\":10003:10021  vm.load(who, slot) */\n    tag_2594:\n      swap7\n      pop\n      swap1\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"lib/forge-std/src/StdStorage.sol\":10003:10021  vm.load(who, slot) */\n      dup7\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"lib/forge-std/src/StdStorage.sol\":10003:10021  vm.load(who, slot) */\n      gt\n      tag_2795\n      jumpi\n    tag_2796:\n      dup2\n      tag_2797\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"lib/forge-std/src/StdStorage.sol\":10003:10021  vm.load(who, slot) */\n      swap4\n      dup4\n      tag_6\n      jump\t// in\n    tag_2797:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n      dup7\n      swap6\n      mload\n        /* \"lib/forge-std/src/StdStorage.sol\":10003:10021  vm.load(who, slot) */\n      swap1\n      codesize\n      jump(tag_2595)\n    tag_2795:\n      returndatasize\n      swap2\n      pop\n      jump(tag_2796)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2588:\n        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup7\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      mstore(0x04, 0x11)\n      revert\n        /* \"lib/forge-std/src/StdStorage.sol\":9607:9717  if (!self.finds[who][fsig][keccak256(abi.encodePacked(ins, field_depth))]) {... */\n    tag_2582:\n        /* \"lib/forge-std/src/StdStorage.sol\":7670:7695  stdStorageSafe.find(self) */\n      tag_2800\n      tag_111\n      jump\t// in\n    tag_2800:\n      pop\n        /* \"lib/forge-std/src/StdStorage.sol\":9607:9717  if (!self.finds[who][fsig][keccak256(abi.encodePacked(ins, field_depth))]) {... */\n      jump(tag_2583)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2573:\n        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup4\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      mstore(0x04, 0x32)\n      revert\n    tag_2571:\n        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup4\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      mstore(0x04, 0x41)\n      revert\n        /* \"test/unit/ConstantProductPair.t.sol\":25579:25608  _constantProductPair.token1() */\n    tag_2565:\n      tag_2801\n      swap2\n      swap4\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":25579:25608  _constantProductPair.token1() */\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":25579:25608  _constantProductPair.token1() */\n      gt\n      tag_1018\n      jumpi\n      tag_1020\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_2801:\n      swap2\n      codesize\n      jump(tag_2566)\n        /* \"test/unit/ConstantProductPair.t.sol\":25524:25553  _constantProductPair.token0() */\n    tag_2561:\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":25524:25553  _constantProductPair.token0() */\n      swap2\n      swap3\n      pop\n      tag_2805\n      swap1\n      dup3\n      returndatasize\n      dup5\n      gt\n      tag_1018\n      jumpi\n      tag_1020\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_2805:\n      swap2\n      swap1\n      jump(tag_2562)\n        /* \"test/unit/ConstantProductPair.t.sol\":25471:25498  _constantProductPair.sync() */\n    tag_2557:\n      tag_2809\n      swap1\n      tag_1\n      jump\t// in\n    tag_2809:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_196\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":25471:25498  _constantProductPair.sync() */\n      dup1\n      codesize\n      jump(tag_2558)\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n    tag_2550:\n      pop\n      0x20\n      dup2\n      jumpi(tag_2812, gt(0x20, returndatasize))\n    tag_2813:\n      dup2\n      tag_2814\n      0x20\n      swap4\n      dup4\n      tag_6\n      jump\t// in\n    tag_2814:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":25414:25461  assertGt(_constantProductPair.platformFee(), 0) */\n      tag_2552\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */\n      jump(tag_2551)\n    tag_2812:\n      returndatasize\n      swap2\n      pop\n      jump(tag_2813)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_128:\n      pop\n      jumpi(tag_196, callvalue)\n      dup1\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_196\n      jumpi\n      dup1\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n        /* \"test/unit/ConstantProductPair.t.sol\":3904:3954  _createPair(address(_tokenA), address(_tokenC), 0) */\n      tag_2821\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":3924:3931  _tokenA */\n      0x19\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      dup3\n        /* \"test/unit/ConstantProductPair.t.sol\":3942:3949  _tokenC */\n      0x1b\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":3904:3954  _createPair(address(_tokenA), address(_tokenC), 0) */\n      swap1\n      tag_46\n      jump\t// in\n    tag_2821:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      and\n      swap1\n      dup1\n        /* \"test/unit/ConstantProductPair.t.sol\":3924:3931  _tokenA */\n      0x19\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":3965:3999  _tokenA.mint(address(lPair), 1000) */\n      swap1\n      dup2\n      extcodesize\n      iszero\n      tag_212\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      swap1\n      0x40c10f1900000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":3965:3999  _tokenA.mint(address(lPair), 1000) */\n      swap2\n      dup3\n      dup2\n      mstore\n      dup5\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":3965:3999  _tokenA.mint(address(lPair), 1000) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":3994:3998  1000 */\n      dup6\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x44\n        /* \"test/unit/ConstantProductPair.t.sol\":3994:3998  1000 */\n      dup2\n      dup4\n      0x03e8\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap9\n      dup10\n      0x24\n      dup5\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":3965:3999  _tokenA.mint(address(lPair), 1000) */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_376\n      jumpi\n      dup7\n      swap2\n      tag_2826\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2827:\n      pop\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":3942:3949  _tokenC */\n      0x1b\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":4009:4043  _tokenC.mint(address(lPair), 1000) */\n      swap2\n      dup3\n      extcodesize\n      iszero\n      tag_249\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x44\n      dup6\n      swap3\n      dup4\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":4009:4043  _tokenC.mint(address(lPair), 1000) */\n      swap6\n      dup7\n      swap5\n      dup6\n      swap4\n      dup5\n      mstore\n      dup9\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":4009:4043  _tokenC.mint(address(lPair), 1000) */\n      dup6\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      dup5\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":4009:4043  _tokenC.mint(address(lPair), 1000) */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_215\n      jumpi\n      dup4\n      swap2\n      tag_2832\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2833:\n      pop\n      pop\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"test/unit/ConstantProductPair.t.sol\":4078:4124  vm.expectRevert(\"CP: INSUFFICIENT_LIQ_MINTED\") */\n      dup1\n      extcodesize\n      iszero\n      tag_1862\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      dup1\n      swap2\n        /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n      0x64\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":4078:4124  vm.expectRevert(\"CP: INSUFFICIENT_LIQ_MINTED\") */\n      dup1\n      swap5\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xf28dceb300000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":4078:4124  vm.expectRevert(\"CP: INSUFFICIENT_LIQ_MINTED\") */\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":4078:4124  vm.expectRevert(\"CP: INSUFFICIENT_LIQ_MINTED\") */\n      dup5\n      add\n        /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":3942:3949  _tokenC */\n      0x1b\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n        /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n      dup5\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n      0x43503a20494e53554646494349454e545f4c49515f4d494e5445440000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x44\n      dup5\n      add\n        /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":4078:4124  vm.expectRevert(\"CP: INSUFFICIENT_LIQ_MINTED\") */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_215\n      jumpi\n      dup4\n      swap2\n      tag_217\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      pop\n      pop\n      0x20\n      swap1\n      0x24\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":4134:4159  lPair.mint(address(this)) */\n      dup1\n      swap5\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x6a62784200000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":4134:4159  lPair.mint(address(this)) */\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":4153:4157  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":4134:4159  lPair.mint(address(this)) */\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":4134:4159  lPair.mint(address(this)) */\n      gas\n      call\n      dup1\n      iszero\n      tag_219\n      jumpi\n      tag_221\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      pop\n      dup1\n      return\n        /* \"test/unit/ConstantProductPair.t.sol\":4009:4043  _tokenC.mint(address(lPair), 1000) */\n    tag_2832:\n      tag_2852\n      swap1\n      tag_1\n      jump\t// in\n    tag_2852:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_229\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":4009:4043  _tokenC.mint(address(lPair), 1000) */\n      dup2\n      codesize\n      jump(tag_2833)\n        /* \"test/unit/ConstantProductPair.t.sol\":3965:3999  _tokenA.mint(address(lPair), 1000) */\n    tag_2826:\n      tag_2855\n      swap1\n      tag_1\n      jump\t// in\n    tag_2855:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_249\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":3965:3999  _tokenA.mint(address(lPair), 1000) */\n      dup5\n      codesize\n      jump(tag_2827)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_126:\n      pop\n      jumpi(tag_196, callvalue)\n      0x20\n      dup1\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_255\n      jumpi\n      0xffffffffffffffffffffffffff\n      swap1\n      dup2\n      tag_2862\n      tag_43\n      jump\t// in\n    tag_2862:\n      div\n      0x01\n      dup2\n      add\n      dup2\n      gt\n      tag_2145\n      jumpi\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */\n      0x056bc75e2d63100000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap2\n      dup3\n      sub\n      add\n      swap1\n      dup2\n      gt\n      tag_2145\n      jumpi\n        /* \"lib/forge-std/src/StdUtils.sol\":1998:2017  _bound(x, min, max) */\n      tag_2867\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      calldataload(0x04)\n        /* \"lib/forge-std/src/StdUtils.sol\":1998:2017  _bound(x, min, max) */\n      tag_65\n      jump\t// in\n    tag_2867:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      dup4\n      dup1\n      mload(0x40)\n      tag_2868\n      dup2\n      tag_4\n      jump\t// in\n    tag_2868:\n      0x0c\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x426f756e6420526573756c740000000000000000000000000000000000000000\n      dup5\n      dup3\n      add\n      mstore\n      mload(0x40)\n        /* \"lib/forge-std/src/StdUtils.sol\":6436:6490  abi.encodeWithSignature(\"log(string,uint256)\", p0, p1) */\n      tag_2869\n      dup2\n        /* \"lib/forge-std/src/StdUtils.sol\":297:339  0x000000000000000000636F6e736F6c652e6c6f67 */\n      tag_2870\n        /* \"lib/forge-std/src/StdUtils.sol\":6436:6490  abi.encodeWithSignature(\"log(string,uint256)\", p0, p1) */\n      dup8\n      dup3\n      add\n      swap5\n      0xb60e72cc00000000000000000000000000000000000000000000000000000000\n      dup7\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40\n        /* \"lib/forge-std/src/StdUtils.sol\":6436:6490  abi.encodeWithSignature(\"log(string,uint256)\", p0, p1) */\n      0x24\n      dup5\n      add\n        /* \"lib/forge-std/src/StdUtils.sol\":297:339  0x000000000000000000636F6e736F6c652e6c6f67 */\n      mstore\n      0x64\n      dup4\n      add\n      swap1\n      tag_10\n      jump\t// in\n    tag_2870:\n      dup9\n      0x44\n      dup4\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"lib/forge-std/src/StdUtils.sol\":6436:6490  abi.encodeWithSignature(\"log(string,uint256)\", p0, p1) */\n      sub\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      dup2\n      add\n      dup4\n      mstore\n      dup3\n      tag_6\n      jump\t// in\n    tag_2869:\n        /* \"lib/forge-std/src/StdUtils.sol\":6399:6491  address(CONSOLE2_ADDRESS).staticcall(abi.encodeWithSignature(\"log(string,uint256)\", p0, p1)) */\n      mload\n      swap1\n        /* \"lib/forge-std/src/StdUtils.sol\":297:339  0x000000000000000000636F6e736F6c652e6c6f67 */\n      0x636f6e736f6c652e6c6f67\n        /* \"lib/forge-std/src/StdUtils.sol\":6399:6491  address(CONSOLE2_ADDRESS).staticcall(abi.encodeWithSignature(\"log(string,uint256)\", p0, p1)) */\n      gas\n      staticcall\n      pop\n      tag_2871\n      tag_13\n      jump\t// in\n    tag_2871:\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap3\n      dup5\n      dup5\n        /* \"test/unit/ConstantProductPair.t.sol\":8271:8279  _factory */\n      0x13\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"test/unit/ConstantProductPair.t.sol\":8254:8281  vm.prank(address(_factory)) */\n      swap1\n      dup2\n      extcodesize\n      iszero\n      tag_291\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      swap2\n        /* \"lib/forge-std/src/StdUtils.sol\":6436:6490  abi.encodeWithSignature(\"log(string,uint256)\", p0, p1) */\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup4\n      swap3\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":8254:8281  vm.prank(address(_factory)) */\n      swap5\n      dup6\n      swap4\n      dup5\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xca669fa700000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":8254:8281  vm.prank(address(_factory)) */\n      dup5\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":8254:8281  vm.prank(address(_factory)) */\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":8254:8281  vm.prank(address(_factory)) */\n      gas\n      call\n      dup1\n      iszero\n      tag_219\n      jumpi\n      tag_2876\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2877:\n      pop\n      dup5\n        /* \"test/unit/ConstantProductPair.t.sol\":8291:8311  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":8291:8331  _constantProductPair.setCustomSwapFee(0) */\n      dup1\n      extcodesize\n      iszero\n      tag_255\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      dup1\n      swap2\n        /* \"lib/forge-std/src/StdUtils.sol\":6436:6490  abi.encodeWithSignature(\"log(string,uint256)\", p0, p1) */\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":8291:8331  _constantProductPair.setCustomSwapFee(0) */\n      dup1\n      swap5\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x9568e73b00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":8291:8331  _constantProductPair.setCustomSwapFee(0) */\n      dup4\n      mstore\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":8291:8331  _constantProductPair.setCustomSwapFee(0) */\n      dup5\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":8291:8331  _constantProductPair.setCustomSwapFee(0) */\n      gas\n      call\n      dup1\n      iszero\n      tag_219\n      jumpi\n      tag_2882\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2883:\n      pop\n      pop\n      dup4\n        /* \"test/unit/ConstantProductPair.t.sol\":8291:8311  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      swap1\n      dup6\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":8384:8418  _constantProductPair.getReserves() */\n      swap2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x0902f1ac00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":8384:8418  _constantProductPair.getReserves() */\n      dup4\n      mstore\n      0x80\n      dup4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":8384:8418  _constantProductPair.getReserves() */\n      dup2\n      dup8\n      gas\n      staticcall\n      swap3\n      dup4\n      iszero\n      tag_219\n      jumpi\n      dup3\n      swap1\n      dup4\n      swap5\n      tag_2886\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2887:\n      pop\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":8498:8528  _constantProductPair.swapFee() */\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x54cf2aeb00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":8498:8528  _constantProductPair.swapFee() */\n      dup3\n      mstore\n      dup7\n      dup3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":8498:8528  _constantProductPair.swapFee() */\n      dup2\n      dup10\n      gas\n      staticcall\n      swap3\n      dup4\n      iszero\n      tag_841\n      jumpi\n      dup9\n      swap3\n      dup6\n      swap5\n      tag_2890\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2891:\n      pop\n      dup1\n        /* \"test/unit/ConstantProductPair.t.sol\":8448:8529  _calculateInput(lReserve0, lReserve1, lAmountOut, _constantProductPair.swapFee()) */\n      tag_2892\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap6\n      swap7\n      and\n      swap2\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":8448:8529  _calculateInput(lReserve0, lReserve1, lAmountOut, _constantProductPair.swapFee()) */\n      tag_70\n      jump\t// in\n    tag_2892:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap2\n      dup6\n        /* \"test/unit/ConstantProductPair.t.sol\":8574:8581  _tokenA */\n      0x19\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":8574:8628  _tokenA.mint(address(_constantProductPair), lAmountIn) */\n      dup1\n      extcodesize\n      iszero\n      tag_291\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      0x40c10f1900000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":8574:8628  _tokenA.mint(address(_constantProductPair), lAmountIn) */\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap3\n      swap1\n      swap3\n      and\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":8574:8628  _tokenA.mint(address(_constantProductPair), lAmountIn) */\n      dup4\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n      0x24\n      dup3\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup5\n      swap1\n      mstore\n      dup3\n      swap1\n      dup3\n      swap1\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      0x44\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      swap1\n      dup5\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":8574:8628  _tokenA.mint(address(_constantProductPair), lAmountIn) */\n      gas\n      call\n      dup1\n      iszero\n      tag_219\n      jumpi\n      tag_2898\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2899:\n      pop\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":8665:8744  _constantProductPair.swap(-int256(lAmountOut), false, address(this), bytes(\"\")) */\n      tag_2900\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      dup3\n      dup6\n        /* \"test/unit/ConstantProductPair.t.sol\":8291:8311  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":8691:8710  -int256(lAmountOut) */\n      tag_2901\n      dup7\n      tag_55\n      jump\t// in\n    tag_2901:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      mload(0x40)\n      swap2\n      tag_2902\n      dup4\n      tag_2\n      jump\t// in\n    tag_2902:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      dup10\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup10\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":8665:8744  _constantProductPair.swap(-int256(lAmountOut), false, address(this), bytes(\"\")) */\n      dup1\n      swap8\n      dup2\n      swap6\n      dup3\n      swap5\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xe12bd9d800000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":8665:8744  _constantProductPair.swap(-int256(lAmountOut), false, address(this), bytes(\"\")) */\n      dup5\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":8727:8731  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":8665:8744  _constantProductPair.swap(-int256(lAmountOut), false, address(this), bytes(\"\")) */\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":8665:8744  _constantProductPair.swap(-int256(lAmountOut), false, address(this), bytes(\"\")) */\n      dup6\n      add\n      tag_60\n      jump\t// in\n    tag_2900:\n      sub\n      swap3\n      gas\n      call\n      swap2\n      dup3\n      iszero\n      tag_376\n      jumpi\n      dup7\n      swap3\n      tag_2905\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2906:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":6813:6819  a <= b */\n      pop\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":8841:8851  lAmountOut */\n      tag_2907\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":6813:6819  a <= b */\n      dup5\n      dup5\n      swap4\n      dup8\n      dup3\n        /* \"lib/forge-std/src/StdUtils.sol\":6436:6490  abi.encodeWithSignature(\"log(string,uint256)\", p0, p1) */\n      0x24\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":6813:6819  a <= b */\n      swap10\n      gt\n      iszero\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":6809:7009  if (a <= b) {... */\n      tag_2908\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2909:\n        /* \"test/unit/ConstantProductPair.t.sol\":8841:8851  lAmountOut */\n      pop\n      tag_39\n      jump\t// in\n    tag_2907:\n        /* \"test/unit/ConstantProductPair.t.sol\":8871:8878  _tokenB */\n      0x1a\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":8871:8903  _tokenB.balanceOf(address(this)) */\n      swap5\n      dup6\n      dup1\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":8871:8903  _tokenB.balanceOf(address(this)) */\n      dup3\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":8727:8731  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":8871:8903  _tokenB.balanceOf(address(this)) */\n      dup4\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":8871:8903  _tokenB.balanceOf(address(this)) */\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_841\n      jumpi\n      dup5\n      swap2\n      tag_2150\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":8905:8915  lAmountOut */\n      pop\n      tag_316\n      swap3\n      pop\n      tag_39\n      jump\t// in\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":6809:7009  if (a <= b) {... */\n    tag_2908:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":6840:6880  log(\"Error: a > b not satisfied [uint]\") */\n      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50\n        /* \"test/unit/ConstantProductPair.t.sol\":8384:8418  _constantProductPair.getReserves() */\n      0x80\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      dup9\n      dup2\n      mstore\n      0x21\n      dup10\n      dup3\n      add\n      mstore\n      0x4572726f723a2061203e2062206e6f7420736174697366696564205b75696e74\n      0x40\n      dup3\n      add\n      mstore\n      0x5d00000000000000000000000000000000000000000000000000000000000000\n      0x60\n      dup3\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":6840:6880  log(\"Error: a > b not satisfied [uint]\") */\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      swap1\n      0x40\n      dup3\n      mstore\n      tag_2920\n      0x40\n      dup4\n      add\n      0x40\n      swap1\n      0x09\n      dup2\n      mstore\n      0x202056616c756520610000000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_2920:\n      swap1\n      dup8\n      dup4\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":6899:6929  log_named_uint(\"  Value a\", a) */\n      dup2\n      0xb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8\n      swap3\n      dup4\n      swap3\n      sub\n      swap1\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      0x40\n      dup2\n      mstore\n      dup1\n      tag_2921\n      0x40\n      dup3\n      add\n      0x40\n      swap1\n      0x09\n      dup2\n      mstore\n      0x202056616c756520620000000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_2921:\n      dup6\n      dup10\n      dup4\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":6948:6978  log_named_uint(\"  Value b\", b) */\n      sub\n      swap1\n      log1\n      tag_2922\n      tag_42\n      jump\t// in\n    tag_2922:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":6809:7009  if (a <= b) {... */\n      codesize\n      jump(tag_2909)\n        /* \"test/unit/ConstantProductPair.t.sol\":8665:8744  _constantProductPair.swap(-int256(lAmountOut), false, address(this), bytes(\"\")) */\n    tag_2905:\n      swap2\n      pop\n      swap4\n      dup3\n      dup3\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_2923\n      jumpi\n    tag_2924:\n      tag_2925\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_2925:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n      swap1\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":8665:8744  _constantProductPair.swap(-int256(lAmountOut), false, address(this), bytes(\"\")) */\n      swap1\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":8841:8851  lAmountOut */\n      tag_2907\n        /* \"test/unit/ConstantProductPair.t.sol\":8665:8744  _constantProductPair.swap(-int256(lAmountOut), false, address(this), bytes(\"\")) */\n      jump(tag_2906)\n    tag_2923:\n      pop\n      returndatasize\n      jump(tag_2924)\n        /* \"test/unit/ConstantProductPair.t.sol\":8574:8628  _tokenA.mint(address(_constantProductPair), lAmountIn) */\n    tag_2898:\n      tag_2928\n      swap1\n      tag_1\n      jump\t// in\n    tag_2928:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_249\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":8574:8628  _tokenA.mint(address(_constantProductPair), lAmountIn) */\n      dup5\n      codesize\n      jump(tag_2899)\n        /* \"test/unit/ConstantProductPair.t.sol\":8498:8528  _constantProductPair.swapFee() */\n    tag_2890:\n      swap3\n      pop\n      swap4\n      pop\n      swap4\n      swap2\n      pop\n      dup6\n      dup2\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_2931\n      jumpi\n    tag_2932:\n      tag_2933\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_2933:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":8498:8528  _constantProductPair.swapFee() */\n      swap1\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup9\n      swap3\n      dup8\n      swap2\n      swap1\n      dup1\n        /* \"test/unit/ConstantProductPair.t.sol\":8498:8528  _constantProductPair.swapFee() */\n      jump(tag_2891)\n    tag_2931:\n      pop\n      returndatasize\n      jump(tag_2932)\n        /* \"test/unit/ConstantProductPair.t.sol\":8384:8418  _constantProductPair.getReserves() */\n    tag_2886:\n      swap1\n      pop\n      tag_2936\n      swap2\n      swap4\n      pop\n      0x80\n      returndatasize\n      dup2\n      gt\n      tag_328\n      jumpi\n      tag_330\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_2936:\n      pop\n      pop\n      swap3\n      swap1\n      codesize\n      jump(tag_2887)\n        /* \"test/unit/ConstantProductPair.t.sol\":8291:8331  _constantProductPair.setCustomSwapFee(0) */\n    tag_2882:\n      tag_2940\n      swap1\n      tag_1\n      jump\t// in\n    tag_2940:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_249\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":8291:8331  _constantProductPair.setCustomSwapFee(0) */\n      dup5\n      codesize\n      jump(tag_2883)\n        /* \"test/unit/ConstantProductPair.t.sol\":8254:8281  vm.prank(address(_factory)) */\n    tag_2876:\n      tag_2943\n      swap1\n      tag_1\n      jump\t// in\n    tag_2943:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_249\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":8254:8281  vm.prank(address(_factory)) */\n      dup5\n      codesize\n      jump(tag_2877)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_124:\n      pop\n      jumpi(tag_196, callvalue)\n      dup1\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_196\n      jumpi\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n        /* \"test/unit/ConstantProductPair.t.sol\":9036:9044  _factory */\n      0x13\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"test/unit/ConstantProductPair.t.sol\":9019:9046  vm.prank(address(_factory)) */\n      dup1\n      extcodesize\n      iszero\n      tag_285\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":9019:9046  vm.prank(address(_factory)) */\n      swap2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xca669fa700000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":9019:9046  vm.prank(address(_factory)) */\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":9019:9046  vm.prank(address(_factory)) */\n      dup4\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup4\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":9019:9046  vm.prank(address(_factory)) */\n      swap3\n      dup2\n      dup2\n      dup6\n      dup2\n      dup4\n      dup8\n      gas\n      call\n      dup1\n      iszero\n      tag_219\n      jumpi\n      tag_2954\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2955:\n      pop\n      dup4\n        /* \"test/unit/ConstantProductPair.t.sol\":9056:9076  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":9056:9096  _constantProductPair.setCustomSwapFee(0) */\n      dup1\n      extcodesize\n      iszero\n      tag_255\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      dup1\n      swap2\n      dup6\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":9056:9096  _constantProductPair.setCustomSwapFee(0) */\n      dup1\n      swap5\n      dup2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x9568e73b00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":9056:9096  _constantProductPair.setCustomSwapFee(0) */\n      dup4\n      mstore\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":9056:9096  _constantProductPair.setCustomSwapFee(0) */\n      dup5\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":9056:9096  _constantProductPair.setCustomSwapFee(0) */\n      gas\n      call\n      dup1\n      iszero\n      tag_219\n      jumpi\n      tag_2960\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2961:\n      pop\n      pop\n      0xffffffffffffffffffffffffff\n      swap3\n      dup4\n      tag_2962\n      tag_43\n      jump\t// in\n    tag_2962:\n      div\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":9182:9183  1 */\n      0x01\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup5\n      add\n      dup5\n      gt\n      tag_2967\n      jumpi\n        /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */\n      0x056bc75e2d63100000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap4\n      dup5\n      sub\n      swap4\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup6\n      add\n      swap1\n      dup2\n      gt\n      tag_2206\n      jumpi\n      dup5\n      lt\n      tag_2967\n      jumpi\n      dup6\n      swap1\n      dup3\n        /* \"test/unit/ConstantProductPair.t.sol\":9056:9076  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      mload(0x40)\n      0x0902f1ac00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":9389:9423  _constantProductPair.getReserves() */\n      dup2\n      mstore\n      0x80\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":9389:9423  _constantProductPair.getReserves() */\n      dup2\n      dup6\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_841\n      jumpi\n      dup5\n      swap1\n      dup6\n      swap3\n      tag_2971\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2972:\n      pop\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":9503:9533  _constantProductPair.swapFee() */\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x54cf2aeb00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":9503:9533  _constantProductPair.swapFee() */\n      dup3\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":9503:9533  _constantProductPair.swapFee() */\n      swap10\n      dup11\n      dup4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":9503:9533  _constantProductPair.swapFee() */\n      dup2\n      dup9\n      gas\n      staticcall\n      swap4\n      dup5\n      iszero\n      tag_1089\n      jumpi\n      dup11\n      swap4\n      dup9\n      swap6\n      tag_2975\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2976:\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":9453:9534  _calculateInput(lReserve0, lReserve1, lAmountOut, _constantProductPair.swapFee()) */\n      tag_2977\n      swap5\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap4\n      swap3\n      swap1\n      dup3\n      and\n      swap2\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":9453:9534  _calculateInput(lReserve0, lReserve1, lAmountOut, _constantProductPair.swapFee()) */\n      tag_70\n      jump\t// in\n    tag_2977:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      dup5\n        /* \"test/unit/ConstantProductPair.t.sol\":9569:9576  _tokenA */\n      0x19\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":9569:9623  _tokenA.mint(address(_constantProductPair), lAmountIn) */\n      swap2\n      dup3\n      extcodesize\n      iszero\n      tag_249\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      0x40c10f1900000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":9569:9623  _tokenA.mint(address(_constantProductPair), lAmountIn) */\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap3\n      swap1\n      swap3\n      and\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":9569:9623  _tokenA.mint(address(_constantProductPair), lAmountIn) */\n      dup4\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n      0x24\n      dup3\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n      swap1\n      dup4\n      swap1\n      dup3\n      swap1\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      0x44\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      swap1\n      dup5\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":9569:9623  _tokenA.mint(address(_constantProductPair), lAmountIn) */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_215\n      jumpi\n      dup4\n      swap2\n      tag_2983\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2984:\n        /* \"test/unit/ConstantProductPair.t.sol\":9633:9664  vm.expectRevert(\"RP: OVERFLOW\") */\n      pop\n      pop\n      dup4\n      extcodesize\n      iszero\n      tag_255\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x0c\n      0x64\n      dup4\n      swap3\n      dup4\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":9633:9664  vm.expectRevert(\"RP: OVERFLOW\") */\n      swap8\n      dup9\n      swap5\n      dup6\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xf28dceb300000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":9633:9664  vm.expectRevert(\"RP: OVERFLOW\") */\n      dup6\n      mstore\n      dup13\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":9633:9664  vm.expectRevert(\"RP: OVERFLOW\") */\n      dup7\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n      dup5\n      add\n      mstore\n      0x52503a204f564552464c4f570000000000000000000000000000000000000000\n      0x44\n      dup5\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":9633:9664  vm.expectRevert(\"RP: OVERFLOW\") */\n      gas\n      call\n      swap3\n      dup4\n      iszero\n      tag_1474\n      jumpi\n      dup6\n      swap4\n      tag_2989\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2990:\n      pop\n      pop\n      swap2\n        /* \"test/unit/ConstantProductPair.t.sol\":9700:9719  -int256(lAmountOut) */\n      tag_2991\n        /* \"test/unit/ConstantProductPair.t.sol\":9674:9753  _constantProductPair.swap(-int256(lAmountOut), false, address(this), bytes(\"\")) */\n      tag_1478\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":9056:9076  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":9700:9719  -int256(lAmountOut) */\n      swap2\n      tag_55\n      jump\t// in\n    tag_2991:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      mload(0x40)\n      swap2\n      tag_2993\n      dup4\n      tag_2\n      jump\t// in\n    tag_2993:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      dup7\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup7\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":9674:9753  _constantProductPair.swap(-int256(lAmountOut), false, address(this), bytes(\"\")) */\n      dup1\n      swap7\n      dup2\n      swap6\n      dup3\n      swap5\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xe12bd9d800000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":9674:9753  _constantProductPair.swap(-int256(lAmountOut), false, address(this), bytes(\"\")) */\n      dup5\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":9736:9740  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":9674:9753  _constantProductPair.swap(-int256(lAmountOut), false, address(this), bytes(\"\")) */\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":9674:9753  _constantProductPair.swap(-int256(lAmountOut), false, address(this), bytes(\"\")) */\n      dup6\n      add\n      tag_60\n      jump\t// in\n        /* \"test/unit/ConstantProductPair.t.sol\":9633:9664  vm.expectRevert(\"RP: OVERFLOW\") */\n    tag_2989:\n      tag_3003\n      swap2\n      swap3\n      swap4\n      pop\n      tag_1\n      jump\t// in\n    tag_3003:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_285\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":9633:9664  vm.expectRevert(\"RP: OVERFLOW\") */\n      dup3\n      swap1\n      dup5\n      codesize\n      jump(tag_2990)\n        /* \"test/unit/ConstantProductPair.t.sol\":9569:9623  _tokenA.mint(address(_constantProductPair), lAmountIn) */\n    tag_2983:\n      tag_3006\n      swap1\n      tag_1\n      jump\t// in\n    tag_3006:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_255\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":9569:9623  _tokenA.mint(address(_constantProductPair), lAmountIn) */\n      dup2\n      codesize\n      jump(tag_2984)\n        /* \"test/unit/ConstantProductPair.t.sol\":9503:9533  _constantProductPair.swapFee() */\n    tag_2975:\n      swap3\n      swap8\n      pop\n      swap3\n      pop\n      swap3\n      pop\n      dup10\n      dup2\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_3009\n      jumpi\n    tag_3010:\n      tag_3011\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_3011:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n      mload\n      dup11\n      swap6\n      swap1\n      swap3\n      dup10\n      swap3\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":9503:9533  _constantProductPair.swapFee() */\n      jump(tag_2976)\n    tag_3009:\n      pop\n      returndatasize\n      jump(tag_3010)\n        /* \"test/unit/ConstantProductPair.t.sol\":9389:9423  _constantProductPair.getReserves() */\n    tag_2971:\n      swap1\n      pop\n      tag_3014\n      swap2\n      pop\n      0x80\n      returndatasize\n      dup2\n      gt\n      tag_328\n      jumpi\n      tag_330\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_3014:\n      pop\n      pop\n      swap1\n      codesize\n      jump(tag_2972)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_2967:\n      dup6\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      mstore(0x04, 0x11)\n      revert\n        /* \"test/unit/ConstantProductPair.t.sol\":9056:9096  _constantProductPair.setCustomSwapFee(0) */\n    tag_2960:\n      tag_3018\n      swap1\n      tag_1\n      jump\t// in\n    tag_3018:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_285\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":9056:9096  _constantProductPair.setCustomSwapFee(0) */\n      dup4\n      codesize\n      jump(tag_2961)\n        /* \"test/unit/ConstantProductPair.t.sol\":9019:9046  vm.prank(address(_factory)) */\n    tag_2954:\n      tag_3021\n      swap1\n      tag_1\n      jump\t// in\n    tag_3021:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_285\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":9019:9046  vm.prank(address(_factory)) */\n      dup4\n      codesize\n      jump(tag_2955)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_122:\n      pop\n      jumpi(tag_196, callvalue)\n      dup1\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_196\n      jumpi\n      0x20\n      mload(0x40)\n        /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */\n      0x056bc75e2d63100000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      mstore\n      return\n    tag_120:\n      pop\n      jumpi(tag_196, callvalue)\n      dup1\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_196\n      jumpi\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n        /* \"test/unit/ConstantProductPair.t.sol\":3146:3166  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":3177:3183  _alice */\n      0x16\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":3146:3184  _constantProductPair.balanceOf(_alice) */\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":3146:3184  _constantProductPair.balanceOf(_alice) */\n      dup3\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":3146:3184  _constantProductPair.balanceOf(_alice) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":3146:3184  _constantProductPair.balanceOf(_alice) */\n      0x20\n      dup1\n      dup3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":3146:3184  _constantProductPair.balanceOf(_alice) */\n      dup2\n      dup7\n      gas\n      staticcall\n      swap2\n      dup3\n      iszero\n      tag_841\n      jumpi\n      dup5\n      swap3\n      tag_3034\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_3035:\n      pop\n      0x04\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":3228:3263  Math.sqrt(INITIAL_MINT_AMOUNT ** 2) */\n      tag_3036\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_3037\n      tag_43\n      jump\t// in\n    tag_3037:\n        /* \"test/unit/ConstantProductPair.t.sol\":3228:3263  Math.sqrt(INITIAL_MINT_AMOUNT ** 2) */\n      tag_45\n      jump\t// in\n    tag_3036:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap5\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":3266:3306  _constantProductPair.MINIMUM_LIQUIDITY() */\n      swap3\n      dup4\n      dup1\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xba9a7a5600000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":3266:3306  _constantProductPair.MINIMUM_LIQUIDITY() */\n      dup3\n      mstore\n      gas\n      staticcall\n      swap2\n      dup3\n      iszero\n      tag_201\n      jumpi\n      dup6\n      swap3\n      tag_3040\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_3041:\n        /* \"test/unit/ConstantProductPair.t.sol\":3228:3306  Math.sqrt(INITIAL_MINT_AMOUNT ** 2) - _constantProductPair.MINIMUM_LIQUIDITY() */\n      pop\n      pop\n      tag_1086\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":3341:3364  lExpectedLpTokenBalance */\n      tag_316\n        /* \"test/unit/ConstantProductPair.t.sol\":3228:3306  Math.sqrt(INITIAL_MINT_AMOUNT ** 2) - _constantProductPair.MINIMUM_LIQUIDITY() */\n      swap4\n      tag_44\n      jump\t// in\n        /* \"test/unit/ConstantProductPair.t.sol\":3266:3306  _constantProductPair.MINIMUM_LIQUIDITY() */\n    tag_3040:\n      swap1\n      dup1\n      swap3\n      pop\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_3044\n      jumpi\n    tag_3045:\n      tag_3046\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_3046:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n      mload\n      dup3\n        /* \"test/unit/ConstantProductPair.t.sol\":3228:3306  Math.sqrt(INITIAL_MINT_AMOUNT ** 2) - _constantProductPair.MINIMUM_LIQUIDITY() */\n      tag_1086\n        /* \"test/unit/ConstantProductPair.t.sol\":3266:3306  _constantProductPair.MINIMUM_LIQUIDITY() */\n      jump(tag_3041)\n    tag_3044:\n      pop\n      returndatasize\n      jump(tag_3045)\n        /* \"test/unit/ConstantProductPair.t.sol\":3146:3184  _constantProductPair.balanceOf(_alice) */\n    tag_3034:\n      swap1\n      dup1\n      swap3\n      pop\n      dup2\n      dup2\n      returndatasize\n      dup4\n      gt\n      tag_3049\n      jumpi\n    tag_3050:\n      tag_3051\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_3051:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":3146:3184  _constantProductPair.balanceOf(_alice) */\n      swap1\n      codesize\n      jump(tag_3035)\n    tag_3049:\n      pop\n      returndatasize\n      jump(tag_3050)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_118:\n      pop\n      jumpi(tag_196, callvalue)\n      dup1\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_196\n      jumpi\n      0x20\n      mload(0x40)\n        /* \"test/__fixtures/BaseTest.sol\":988:992  1000 */\n      0x03e8\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      mstore\n      return\n    tag_116:\n      pop\n      jumpi(tag_196, callvalue)\n      dup1\n      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n      slt\n      tag_196\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":22992:23004  _stepTime(5) */\n      tag_3062\n      tag_77\n      jump\t// in\n    tag_3062:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n        /* \"test/unit/ConstantProductPair.t.sol\":23050:23057  _tokenB */\n      0x1a\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":23071:23091  _constantProductPair */\n      dup3\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap2\n      dup4\n      dup4\n      sload\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":23050:23103  _tokenB.mint(address(_constantProductPair), lSwapAmt) */\n      swap1\n      dup1\n      extcodesize\n      iszero\n      tag_291\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x44\n      dup4\n      swap3\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":23050:23103  _tokenB.mint(address(_constantProductPair), lSwapAmt) */\n      swap5\n      dup6\n      swap4\n      dup5\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40c10f1900000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":23050:23103  _tokenB.mint(address(_constantProductPair), lSwapAmt) */\n      dup5\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":23050:23103  _tokenB.mint(address(_constantProductPair), lSwapAmt) */\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":23033:23040  0.12e18 */\n      0x01aa535d3d0c0000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      dup5\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":23050:23103  _tokenB.mint(address(_constantProductPair), lSwapAmt) */\n      gas\n      call\n      dup1\n      iszero\n      tag_841\n      jumpi\n      tag_3067\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_3068:\n      pop\n      dup1\n      dup3\n      tag_2064\n      swap3\n      sload\n      and\n      mload(0x40)\n      tag_3070\n      dup2\n      tag_2\n      jump\t// in\n    tag_3070:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      dup6\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":23113:23189  _constantProductPair.swap(-int256(lSwapAmt), true, address(this), bytes(\"\")) */\n      dup1\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xe12bd9d800000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":23113:23189  _constantProductPair.swap(-int256(lSwapAmt), true, address(this), bytes(\"\")) */\n      dup3\n      mstore\n        /* \"lib/forge-std/src/StdMath.sol\":124:202  -57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffe55aca2c2f40000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":23113:23189  _constantProductPair.swap(-int256(lSwapAmt), true, address(this), bytes(\"\")) */\n      dup4\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":23158:23162  true */\n      0x01\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      dup4\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":23172:23176  this */\n      address\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x44\n      dup4\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x80\n      0x64\n      dup4\n      add\n      mstore\n      dup2\n      dup9\n      dup2\n      0x20\n      swap9\n      dup10\n      swap7\n      0x84\n      dup4\n      add\n      swap1\n      tag_10\n      jump\t// in\n        /* \"test/unit/ConstantProductPair.t.sol\":23050:23103  _tokenB.mint(address(_constantProductPair), lSwapAmt) */\n    tag_3067:\n      swap3\n      tag_3119\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_2064\n        /* \"test/unit/ConstantProductPair.t.sol\":23050:23103  _tokenB.mint(address(_constantProductPair), lSwapAmt) */\n      swap3\n      swap5\n      tag_1\n      jump\t// in\n    tag_3119:\n      swap3\n      swap1\n      jump(tag_3068)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_1:\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_3120\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_3120:\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_2:\n      0x20\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_3120\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_4:\n      0x40\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_3120\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_5:\n      0x60\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_3120\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_6:\n      swap1\n      0x1f\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_3120\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_7:\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_3120\n      jumpi\n      0x1f\n      add\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      and\n      0x20\n      add\n      swap1\n      jump\t// out\n    tag_8:\n      swap3\n      swap2\n      swap3\n      tag_3134\n      dup3\n      tag_7\n      jump\t// in\n    tag_3134:\n      swap2\n      tag_3135\n      mload(0x40)\n      swap4\n      dup5\n      tag_6\n      jump\t// in\n    tag_3135:\n      dup3\n      swap5\n      dup2\n      dup5\n      mstore\n      dup2\n      dup4\n      add\n      gt\n      tag_226\n      jumpi\n      dup3\n      dup2\n      0x20\n      swap4\n      dup5\n      0x00\n      swap7\n      add\n      calldatacopy\n      add\n      add\n      mstore\n      jump\t// out\n    tag_9:\n      0x00\n    tag_3138:\n      dup4\n      dup2\n      lt\n      tag_3139\n      jumpi\n      pop\n      pop\n      0x00\n      swap2\n      add\n      mstore\n      jump\t// out\n    tag_3139:\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_3138)\n    tag_10:\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      0x1f\n      0x20\n      swap4\n      tag_3141\n      dup2\n      mload\n      dup1\n      swap3\n      dup2\n      dup8\n      mstore\n      dup8\n      dup1\n      dup9\n      add\n      swap2\n      add\n      tag_9\n      jump\t// in\n    tag_3141:\n      add\n      and\n      add\n      add\n      swap1\n      jump\t// out\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n    tag_12:\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      0x04\n      swap4\n      swap3\n      and\n      dup2\n      mstore\n      tag_3142\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      mload\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      dup1\n      swap4\n      0x20\n      dup7\n      dup6\n      add\n      swap2\n      add\n      tag_9\n      jump\t// in\n    tag_3142:\n      add\n      add\n      swap1\n      jump\t// out\n    tag_13:\n      jumpi(tag_3143, iszero(returndatasize))\n      returndatasize\n      swap1\n      tag_3145\n      dup3\n      tag_7\n      jump\t// in\n    tag_3145:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap2\n      tag_3146\n      mload(0x40)\n      swap4\n      dup5\n      tag_6\n      jump\t// in\n    tag_3146:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump\t// out\n    tag_3143:\n      0x60\n      swap1\n      jump\t// out\n    tag_14:\n      swap1\n      dup2\n      0x20\n      swap2\n      sub\n      slt\n      tag_226\n      jumpi\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup1\n      iszero\n      iszero\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      dup2\n      sub\n      tag_226\n      jumpi\n      swap1\n      jump\t// out\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1819:2403  function failed() public returns (bool) {... */\n    tag_15:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1873:1880  _failed */\n      0x00\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup1\n      sload\n      0x08\n      shr\n      0xff\n      and\n      iszero\n      tag_3152\n      jumpi\n      sload\n      0x08\n      shr\n      0xff\n      and\n      swap1\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1896:1910  return _failed */\n      jump\t// out\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1869:2397  if (_failed) {... */\n    tag_3152:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1941:1966  bool globalFailed = false */\n      dup1\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":2939:3043  assembly {... */\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n      dup1\n      extcodesize\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1980:2354  if (hasHEVMContext()) {... */\n      tag_3154\n      jumpi\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":2367:2386  return globalFailed */\n      pop\n      pop\n      swap1\n      jump\t// out\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1980:2354  if (hasHEVMContext()) {... */\n    tag_3154:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      swap3\n      pop\n      mload(0x40)\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":2196:2239  abi.encode(HEVM_ADDRESS, bytes32(\"failed\")) */\n      dup3\n      0x20\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      dup4\n      dup2\n      mstore\n      0x6661696c65640000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      dup5\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n      0x40\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":2196:2239  abi.encode(HEVM_ADDRESS, bytes32(\"failed\")) */\n      dup4\n      mstore\n      tag_3156\n      dup4\n      tag_5\n      jump\t// in\n    tag_3156:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":2086:2261  abi.encodePacked(... */\n      tag_3157\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":2086:2261  abi.encodePacked(... */\n      dup1\n      swap4\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      tag_3158\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":2196:2239  abi.encode(HEVM_ADDRESS, bytes32(\"failed\")) */\n      0x20\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":2086:2261  abi.encodePacked(... */\n      dup4\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      swap8\n      0x667f9d7000000000000000000000000000000000000000000000000000000000\n      dup10\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      dup1\n      swap3\n      dup6\n      dup6\n      add\n      swap1\n      tag_9\n      jump\t// in\n    tag_3158:\n      dup2\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":2086:2261  abi.encodePacked(... */\n      sub\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      0x04\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":2086:2261  abi.encodePacked(... */\n      dup2\n      add\n      dup5\n      mstore\n      add\n      dup3\n      tag_6\n      jump\t// in\n    tag_3157:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":2047:2279  HEVM_ADDRESS.call(... */\n      mload\n      swap3\n      gas\n      call\n      pop\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":2312:2339  abi.decode(retdata, (bool)) */\n      tag_3159\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":2047:2279  HEVM_ADDRESS.call(... */\n      tag_3160\n      tag_13\n      jump\t// in\n    tag_3160:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":2196:2239  abi.encode(HEVM_ADDRESS, bytes32(\"failed\")) */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup1\n      dup3\n      mload\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":2312:2339  abi.decode(retdata, (bool)) */\n      dup4\n      add\n      add\n      swap2\n      add\n      tag_14\n      jump\t// in\n    tag_3159:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":2367:2386  return globalFailed */\n      swap1\n      jump\t// out\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_16:\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":15977:15981  1e18 */\n      0x0de0b6b3a7640000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap2\n      dup3\n      dup2\n      mul\n      swap3\n      dup2\n      dup5\n      div\n      eq\n      swap1\n      iszero\n      or\n      iszero\n      tag_505\n      jumpi\n      jump\t// out\n    tag_17:\n      dup2\n      dup2\n      mul\n      swap3\n      swap2\n      dup2\n      iszero\n      swap2\n      dup5\n      div\n      eq\n      or\n      iszero\n      tag_505\n      jumpi\n      jump\t// out\n    tag_18:\n      swap1\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      tag_3165\n      dup3\n      tag_7\n      jump\t// in\n    tag_3165:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_3166\n      mload(0x40)\n      swap2\n      dup3\n      tag_6\n      jump\t// in\n    tag_3166:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      dup3\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      tag_3167\n      dup3\n      swap5\n      tag_7\n      jump\t// in\n    tag_3167:\n      add\n      swap1\n      0x20\n      calldatasize\n      swap2\n      add\n      calldatacopy\n      jump\t// out\n    tag_19:\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup2\n      eq\n      tag_505\n      jumpi\n      0x01\n      add\n      swap1\n      jump\t// out\n    tag_20:\n      swap1\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      tag_3170\n      jumpi\n      add\n      0x20\n      add\n      swap1\n      jump\t// out\n    tag_3170:\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_21:\n      dup2\n      iszero\n      tag_3172\n      jumpi\n      div\n      swap1\n      jump\t// out\n    tag_3172:\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x12)\n      revert(0x00, 0x24)\n    tag_22:\n      dup2\n      iszero\n      tag_3172\n      jumpi\n      mod\n      swap1\n      jump\t// out\n    tag_23:\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":20511:20512  1 */\n      0x01\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_505\n      jumpi\n      jump\t// out\n    tag_24:\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":20549:20550  5 */\n      0x05\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_505\n      jumpi\n      jump\t// out\n    tag_25:\n      swap2\n      swap1\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_505\n      jumpi\n      jump\t// out\n    tag_26:\n      mload\n      swap1\n      0xffffffffffffffffffffffffff\n      dup3\n      and\n      dup3\n      sub\n      tag_226\n      jumpi\n      jump\t// out\n    tag_27:\n      mload\n      swap1\n      0xffffffff\n      dup3\n      and\n      dup3\n      sub\n      tag_226\n      jumpi\n      jump\t// out\n    tag_28:\n      swap2\n      swap1\n      dup3\n      0x80\n      swap2\n      sub\n      slt\n      tag_226\n      jumpi\n      tag_3188\n      dup3\n      tag_26\n      jump\t// in\n    tag_3188:\n      swap2\n      tag_3189\n      0x20\n      dup3\n      add\n      tag_26\n      jump\t// in\n    tag_3189:\n      swap2\n      0x60\n      tag_3190\n      0x40\n      dup5\n      add\n      tag_27\n      jump\t// in\n    tag_3190:\n      swap3\n      add\n      mload\n      0xffff\n      dup2\n      and\n      dup2\n      sub\n      tag_226\n      jumpi\n      swap1\n      jump\t// out\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5202:5464  function assertEq(uint a, uint b) internal {... */\n    tag_33:\n        /* \"test/unit/ConstantProductPair.t.sol\":23268:23272  1e18 */\n      0x0de0b6b3a7640000\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5259:5265  a != b */\n      swap1\n      dup2\n      dup2\n      sub\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5255:5458  if (a != b) {... */\n      tag_3193\n      jumpi\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5202:5464  function assertEq(uint a, uint b) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5255:5458  if (a != b) {... */\n    tag_3193:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_3195\n      swap1\n      0x40\n      swap1\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5286:5327  log(\"Error: a == b not satisfied [uint]\") */\n      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x80\n      dup4\n      mload\n      0x20\n      dup2\n      mstore\n      0x22\n      0x20\n      dup3\n      add\n      mstore\n      0x4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e\n      dup6\n      dup3\n      add\n      mstore\n      0x745d000000000000000000000000000000000000000000000000000000000000\n      0x60\n      dup3\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5286:5327  log(\"Error: a == b not satisfied [uint]\") */\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      mload\n      swap4\n      dup3\n      dup6\n      mstore\n      tag_3196\n      dup4\n      dup7\n      add\n      0x40\n      swap1\n      0x0a\n      dup2\n      mstore\n      0x2020457870656374656400000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_3196:\n      swap1\n      0x20\n      dup7\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5346:5377  log_named_uint(\"  Expected\", b) */\n      dup5\n      0xb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8\n      swap6\n      dup7\n      swap3\n      sub\n      swap1\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      mload\n      swap3\n      dup3\n      dup5\n      swap4\n      dup5\n      mstore\n      dup4\n      add\n      0x40\n      swap1\n      0x0a\n      dup2\n      mstore\n      0x2020202041637475616c00000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_3195:\n      swap1\n      0x20\n      dup4\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5396:5427  log_named_uint(\"    Actual\", a) */\n      sub\n      swap1\n      log1\n      tag_3197\n      tag_42\n      jump\t// in\n    tag_3197:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5202:5464  function assertEq(uint a, uint b) internal {... */\n      jump\t// out\n    tag_34:\n        /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */\n      0x056bc75e2d63100000\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5259:5265  a != b */\n      swap1\n      dup2\n      dup2\n      sub\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5255:5458  if (a != b) {... */\n      tag_3193\n      jumpi\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5202:5464  function assertEq(uint a, uint b) internal {... */\n      pop\n      pop\n      jump\t// out\n    tag_35:\n        /* \"test/__fixtures/BaseTest.sol\":924:931  250_000 */\n      0x03d090\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5259:5265  a != b */\n      swap1\n      dup2\n      dup2\n      sub\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5255:5458  if (a != b) {... */\n      tag_3193\n      jumpi\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5202:5464  function assertEq(uint a, uint b) internal {... */\n      pop\n      pop\n      jump\t// out\n    tag_36:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5259:5265  a != b */\n      dup1\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5255:5458  if (a != b) {... */\n      tag_3208\n      jumpi\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5202:5464  function assertEq(uint a, uint b) internal {... */\n      pop\n      jump\t// out\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5255:5458  if (a != b) {... */\n    tag_3208:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_3195\n      0x40\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5286:5327  log(\"Error: a == b not satisfied [uint]\") */\n      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x80\n      dup3\n      mload\n      0x20\n      dup2\n      mstore\n      0x22\n      0x20\n      dup3\n      add\n      mstore\n      0x4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e\n      dup5\n      dup3\n      add\n      mstore\n      0x745d000000000000000000000000000000000000000000000000000000000000\n      0x60\n      dup3\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5286:5327  log(\"Error: a == b not satisfied [uint]\") */\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup1\n      mload\n      swap3\n      dup2\n      dup5\n      mstore\n      tag_3211\n      dup3\n      dup6\n      add\n      0x40\n      swap1\n      0x0a\n      dup2\n      mstore\n      0x2020457870656374656400000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_3211:\n      0x00\n      0x20\n      dup7\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5346:5377  log_named_uint(\"  Expected\", b) */\n      dup5\n      0xb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8\n      swap6\n      dup7\n      swap3\n      sub\n      swap1\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      mload\n      swap3\n      dup3\n      dup5\n      swap4\n      dup5\n      mstore\n      dup4\n      add\n      0x40\n      swap1\n      0x0a\n      dup2\n      mstore\n      0x2020202041637475616c00000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5202:5464  function assertEq(uint a, uint b) internal {... */\n    tag_37:\n        /* \"test/unit/ConstantProductPair.t.sol\":3768:3769  1 */\n      0x01\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5259:5265  a != b */\n      dup2\n      sub\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5255:5458  if (a != b) {... */\n      tag_3213\n      jumpi\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5202:5464  function assertEq(uint a, uint b) internal {... */\n      pop\n      jump\t// out\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5255:5458  if (a != b) {... */\n    tag_3213:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_3195\n      0x40\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5286:5327  log(\"Error: a == b not satisfied [uint]\") */\n      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x80\n      dup3\n      mload\n      0x20\n      dup2\n      mstore\n      0x22\n      0x20\n      dup3\n      add\n      mstore\n      0x4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e\n      dup5\n      dup3\n      add\n      mstore\n      0x745d000000000000000000000000000000000000000000000000000000000000\n      0x60\n      dup3\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5286:5327  log(\"Error: a == b not satisfied [uint]\") */\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup1\n      mload\n      swap3\n      dup2\n      dup5\n      mstore\n      tag_3216\n      dup3\n      dup6\n      add\n      0x40\n      swap1\n      0x0a\n      dup2\n      mstore\n      0x2020457870656374656400000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_3216:\n        /* \"test/unit/ConstantProductPair.t.sol\":3768:3769  1 */\n      0x01\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n      dup7\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5346:5377  log_named_uint(\"  Expected\", b) */\n      dup5\n      0xb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8\n      swap6\n      dup7\n      swap3\n      sub\n      swap1\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      mload\n      swap3\n      dup3\n      dup5\n      swap4\n      dup5\n      mstore\n      dup4\n      add\n      0x40\n      swap1\n      0x0a\n      dup2\n      mstore\n      0x2020202041637475616c00000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5202:5464  function assertEq(uint a, uint b) internal {... */\n    tag_38:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffff\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5259:5265  a != b */\n      swap1\n      dup2\n      dup2\n      sub\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5255:5458  if (a != b) {... */\n      tag_3193\n      jumpi\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5202:5464  function assertEq(uint a, uint b) internal {... */\n      pop\n      pop\n      jump\t// out\n    tag_39:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5259:5265  a != b */\n      dup2\n      dup2\n      sub\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5255:5458  if (a != b) {... */\n      tag_3193\n      jumpi\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5202:5464  function assertEq(uint a, uint b) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":2410:2834  function fail() internal {... */\n    tag_42:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":2939:3043  assembly {... */\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n      dup1\n      extcodesize\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":2445:2804  if (hasHEVMContext()) {... */\n      tag_3228\n      jumpi\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":2410:2834  function fail() internal {... */\n    tag_3229:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      pop\n      0x0100\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":2928:2929  0 */\n      0x00\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      or\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":2928:2929  0 */\n      0x00\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":2410:2834  function fail() internal {... */\n      jump\t// out\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":2445:2804  if (hasHEVMContext()) {... */\n    tag_3228:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":2645:2712  abi.encode(HEVM_ADDRESS, bytes32(\"failed\"), bytes32(uint256(0x01))) */\n      swap1\n      0x20\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      swap1\n      dup1\n      dup3\n      mstore\n      0x6661696c65640000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40\n      dup5\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":2705:2709  0x01 */\n      0x01\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x60\n      dup5\n      add\n      mstore\n      0x60\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":2645:2712  abi.encode(HEVM_ADDRESS, bytes32(\"failed\"), bytes32(uint256(0x01))) */\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x80\n      dup4\n      add\n      swap2\n      dup4\n      dup4\n      lt\n      0xffffffffffffffff\n      dup5\n      gt\n      or\n      tag_3120\n      jumpi\n      0x00\n      dup4\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":2534:2730  abi.encodePacked(... */\n      tag_3232\n      0x24\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup4\n      swap8\n      dup5\n      swap8\n      0x40\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":2534:2730  abi.encodePacked(... */\n      0xa0\n      dup2\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      swap6\n      0x70ca10bb00000000000000000000000000000000000000000000000000000000\n      dup8\n      mstore\n      tag_3158\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      mload\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      dup1\n      swap3\n      0xa4\n      dup6\n      add\n      swap1\n      tag_9\n      jump\t// in\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":2534:2730  abi.encodePacked(... */\n    tag_3232:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":2499:2744  HEVM_ADDRESS.call(... */\n      mload\n      swap3\n      gas\n      call\n      pop\n      tag_3234\n      tag_13\n      jump\t// in\n    tag_3234:\n      pop\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":2445:2804  if (hasHEVMContext()) {... */\n      codesize\n      jump(tag_3229)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_43:\n        /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */\n      0x056bc75e2d63100000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x01\n      0x02\n      dup2\n    tag_3235:\n      dup1\n      dup3\n      gt\n      tag_3236\n      jumpi\n      pop\n      pop\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      div\n      dup2\n      gt\n      tag_505\n      jumpi\n      mul\n      swap1\n      jump\t// out\n    tag_3236:\n      swap1\n      swap3\n      dup1\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      div\n      dup2\n      gt\n      tag_505\n      jumpi\n      dup2\n      dup5\n      and\n      tag_3242\n      jumpi\n    tag_3243:\n      dup1\n      mul\n      swap3\n      dup2\n      shr\n      swap1\n      jump(tag_3235)\n    tag_3242:\n      dup1\n      swap3\n      mul\n      swap2\n      jump(tag_3243)\n    tag_44:\n      swap2\n      swap1\n      dup3\n      sub\n      swap2\n      dup3\n      gt\n      tag_505\n      jumpi\n      jump\t// out\n        /* \"test/__fixtures/Math.sol\":153:454  function sqrt(uint256 y) internal pure returns (uint256 z) {... */\n    tag_45:\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x00\n        /* \"test/__fixtures/Math.sol\":230:231  3 */\n      0x03\n        /* \"test/__fixtures/Math.sol\":226:231  y > 3 */\n      dup4\n      gt\n        /* \"test/__fixtures/Math.sol\":230:231  3 */\n      iszero\n      tag_3246\n      jumpi\n        /* \"test/__fixtures/Math.sol\":247:252  z = y */\n      pop\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x01\n      swap1\n      dup1\n      dup3\n      shr\n      dup3\n      dup2\n      add\n      dup1\n      swap2\n      gt\n      tag_505\n      jumpi\n        /* \"test/__fixtures/Math.sol\":266:287  uint256 x = y / 2 + 1 */\n      swap2\n      swap1\n        /* \"test/__fixtures/Math.sol\":308:313  x < z */\n    tag_3250:\n      dup5\n      dup4\n      lt\n      tag_3251\n      jumpi\n        /* \"test/__fixtures/Math.sol\":222:448  if (y > 3) {... */\n      pop\n      pop\n      pop\n        /* \"test/__fixtures/Math.sol\":153:454  function sqrt(uint256 y) internal pure returns (uint256 z) {... */\n      jump\t// out\n        /* \"test/__fixtures/Math.sol\":301:390  while (x < z) {... */\n    tag_3251:\n        /* \"test/__fixtures/Math.sol\":333:338  z = x */\n      swap1\n      swap2\n      swap4\n      pop\n        /* \"test/__fixtures/Math.sol\":361:370  y / x + x */\n      tag_3254\n        /* \"test/__fixtures/Math.sol\":333:338  z = x */\n      dup5\n        /* \"test/__fixtures/Math.sol\":361:366  y / x */\n      tag_2261\n      dup2\n      dup5\n      tag_21\n      jump\t// in\n        /* \"test/__fixtures/Math.sol\":361:370  y / x + x */\n    tag_3254:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      shr\n      swap2\n      swap1\n        /* \"test/__fixtures/Math.sol\":301:390  while (x < z) {... */\n      jump(tag_3250)\n        /* \"test/__fixtures/Math.sol\":222:448  if (y > 3) {... */\n    tag_3246:\n        /* \"test/__fixtures/Math.sol\":410:416  y != 0 */\n      swap2\n        /* \"test/__fixtures/Math.sol\":406:448  if (y != 0) {... */\n      tag_3256\n      jumpi\n        /* \"test/__fixtures/Math.sol\":153:454  function sqrt(uint256 y) internal pure returns (uint256 z) {... */\n      jump\t// out\n        /* \"test/__fixtures/Math.sol\":406:448  if (y != 0) {... */\n    tag_3256:\n        /* \"test/__fixtures/Math.sol\":436:437  1 */\n      0x01\n      swap2\n      pop\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5202:5464  function assertEq(uint a, uint b) internal {... */\n      jump\t// out\n        /* \"test/__fixtures/BaseTest.sol\":4974:5152  function _createPair(address aTokenA, address aTokenB, uint256 aCurveId) internal returns (address rPair) {... */\n    tag_46:\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      dup2\n      dup1\n        /* \"test/__fixtures/BaseTest.sol\":5098:5106  _factory */\n      0x13\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      swap2\n      dup2\n      mload(0x40)\n        /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */\n      swap6\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x6b600d1c00000000000000000000000000000000000000000000000000000000\n        /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */\n      dup8\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      and\n        /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */\n      0x04\n      dup7\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      and\n      0x24\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup4\n      0x64\n      dup2\n      0x00\n      dup1\n      swap6\n      dup2\n      0x44\n      dup5\n      add\n      mstore\n        /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */\n      gas\n      call\n      swap3\n      dup4\n      iszero\n      tag_1474\n      jumpi\n      dup2\n      swap4\n      tag_3260\n      jumpi\n        /* \"test/__fixtures/BaseTest.sol\":4974:5152  function _createPair(address aTokenA, address aTokenB, uint256 aCurveId) internal returns (address rPair) {... */\n    tag_3261:\n        /* \"test/__fixtures/BaseTest.sol\":5090:5145  rPair = _factory.createPair(aTokenA, aTokenB, aCurveId) */\n      pop\n      pop\n      pop\n        /* \"test/__fixtures/BaseTest.sol\":4974:5152  function _createPair(address aTokenA, address aTokenB, uint256 aCurveId) internal returns (address rPair) {... */\n      swap1\n      jump\t// out\n        /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */\n    tag_3260:\n      swap1\n      swap2\n      swap3\n      pop\n      0x20\n      dup2\n      returndatasize\n      dup3\n      gt\n      tag_3262\n      jumpi\n    tag_3263:\n      dup2\n      tag_3264\n      0x20\n      swap4\n      dup4\n      tag_6\n      jump\t// in\n    tag_3264:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_255\n      jumpi\n      mload\n      swap2\n      dup3\n      and\n      dup3\n      sub\n      tag_196\n      jumpi\n        /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */\n      pop\n      codesize\n      dup1\n      dup1\n      jump(tag_3261)\n    tag_3262:\n      returndatasize\n      swap2\n      pop\n      jump(tag_3263)\n        /* \"lib/forge-std/src/StdError.sol\":277:364  bytes public constant arithmeticError = abi.encodeWithSignature(\"Panic(uint256)\", 0x11) */\n    tag_47:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"lib/forge-std/src/StdError.sol\":317:364  abi.encodeWithSignature(\"Panic(uint256)\", 0x11) */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n        /* \"lib/forge-std/src/StdError.sol\":359:363  0x11 */\n      0x11\n        /* \"lib/forge-std/src/StdError.sol\":317:364  abi.encodeWithSignature(\"Panic(uint256)\", 0x11) */\n      0x24\n      dup3\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"lib/forge-std/src/StdError.sol\":317:364  abi.encodeWithSignature(\"Panic(uint256)\", 0x11) */\n      0x24\n      dup2\n      mstore\n      tag_3159\n      dup2\n      tag_5\n      jump\t// in\n        /* \"test/unit/ConstantProductPair.t.sol\":2167:2408  function _getToken0Token1(address aTokenA, address aTokenB)... */\n    tag_49:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      dup2\n      and\n      swap1\n      dup3\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":2342:2359  aTokenA < aTokenB */\n      lt\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      iszero\n      tag_3270\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":2167:2408  function _getToken0Token1(address aTokenA, address aTokenB)... */\n      swap2\n      jump\t// out\n        /* \"test/unit/ConstantProductPair.t.sol\":2342:2401  aTokenA < aTokenB ? (aTokenA, aTokenB) : (aTokenB, aTokenA) */\n    tag_3270:\n        /* \"test/unit/ConstantProductPair.t.sol\":2321:2401  (rToken0, rToken1) = aTokenA < aTokenB ? (aTokenA, aTokenB) : (aTokenB, aTokenA) */\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":2167:2408  function _getToken0Token1(address aTokenA, address aTokenB)... */\n      swap2\n      jump\t// out\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_50:\n      mload(0x40)\n      swap1\n      tag_3273\n      dup3\n      tag_4\n      jump\t// in\n    tag_3273:\n      0x01\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      dup3\n      mstore\n      0x00\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n      dup4\n      add\n      mstore\n      jump\t// out\n        /* \"lib/forge-std/src/StdMath.sol\":124:202  -57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n    tag_55:\n      0x8000000000000000000000000000000000000000000000000000000000000000\n      dup2\n      eq\n      tag_505\n      jumpi\n      0x00\n      sub\n      swap1\n      jump\t// out\n        /* \"lib/forge-std/src/StdMath.sol\":209:515  function abs(int256 a) internal pure returns (uint256) {... */\n    tag_56:\n        /* \"lib/forge-std/src/StdMath.sol\":124:202  -57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"lib/forge-std/src/StdMath.sol\":342:357  a == INT256_MIN */\n      dup1\n      dup3\n      eq\n        /* \"lib/forge-std/src/StdMath.sol\":338:468  if (a == INT256_MIN) {... */\n      tag_3276\n      jumpi\n      pop\n        /* \"lib/forge-std/src/StdMath.sol\":497:498  0 */\n      0x00\n        /* \"lib/forge-std/src/StdMath.sol\":493:498  a > 0 */\n      dup2\n      sgt\n        /* \"lib/forge-std/src/StdMath.sol\":497:498  0 */\n      iszero\n      tag_3278\n      jumpi\n        /* \"lib/forge-std/src/StdMath.sol\":209:515  function abs(int256 a) internal pure returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"lib/forge-std/src/StdMath.sol\":493:507  a > 0 ? a : -a */\n    tag_3278:\n        /* \"lib/forge-std/src/StdMath.sol\":505:507  -a */\n      tag_3159\n      swap1\n      tag_55\n      jump\t// in\n        /* \"lib/forge-std/src/StdMath.sol\":338:468  if (a == INT256_MIN) {... */\n    tag_3276:\n        /* \"lib/forge-std/src/StdMath.sol\":373:457  return 57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n      swap1\n      pop\n      swap1\n      jump\t// out\n        /* \"lib/forge-std/src/StdMath.sol\":641:993  function delta(int256 a, int256 b) internal pure returns (uint256) {... */\n    tag_57:\n        /* \"test/unit/ConstantProductPair.t.sol\":5471:5475  1e18 */\n      0x0de0b6b3a7640000\n        /* \"lib/forge-std/src/StdMath.sol\":847:852  a ^ b */\n      swap1\n        /* \"lib/forge-std/src/StdMath.sol\":856:858  -1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"lib/forge-std/src/StdMath.sol\":847:852  a ^ b */\n      dup3\n      dup3\n      xor\n        /* \"lib/forge-std/src/StdMath.sol\":846:858  (a ^ b) > -1 */\n      sgt\n        /* \"lib/forge-std/src/StdMath.sol\":842:913  if ((a ^ b) > -1) {... */\n      tag_3282\n      jumpi\n        /* \"lib/forge-std/src/StdMath.sol\":971:977  abs(a) */\n      tag_3284\n      swap1\n      tag_56\n      jump\t// in\n    tag_3284:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      dup2\n      add\n      dup1\n      swap2\n      gt\n      tag_505\n      jumpi\n        /* \"lib/forge-std/src/StdMath.sol\":641:993  function delta(int256 a, int256 b) internal pure returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"lib/forge-std/src/StdMath.sol\":842:913  if ((a ^ b) > -1) {... */\n    tag_3282:\n        /* \"lib/forge-std/src/StdMath.sol\":887:893  abs(a) */\n      tag_3287\n      swap1\n      tag_56\n      jump\t// in\n    tag_3287:\n        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */\n      swap1\n      0x00\n        /* \"lib/forge-std/src/StdMath.sol\":607:612  a > b */\n      dup2\n      dup4\n      gt\n        /* \"test/unit/ConstantProductPair.t.sol\":5471:5475  1e18 */\n      iszero\n      tag_3288\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      pop\n      pop\n      0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000\n      dup2\n      add\n      swap1\n      dup2\n      gt\n      tag_505\n      jumpi\n        /* \"lib/forge-std/src/StdMath.sol\":874:902  return delta(abs(a), abs(b)) */\n      swap1\n      jump\t// out\n        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */\n    tag_3288:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      swap2\n      dup3\n      sub\n      swap2\n      dup3\n      gt\n      tag_514\n      jumpi\n        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */\n      pop\n        /* \"lib/forge-std/src/StdMath.sol\":874:902  return delta(abs(a), abs(b)) */\n      swap1\n      jump\t// out\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":4759:5016  function assertEq(int a, int b) internal {... */\n    tag_58:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":4814:4820  a != b */\n      dup2\n      dup2\n      sub\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":4810:5010  if (a != b) {... */\n      tag_3295\n      jumpi\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":4759:5016  function assertEq(int a, int b) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":4810:5010  if (a != b) {... */\n    tag_3295:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_3195\n      swap1\n      0x40\n      swap1\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":4841:4881  log(\"Error: a == b not satisfied [int]\") */\n      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x80\n      dup4\n      mload\n      0x20\n      dup2\n      mstore\n      0x21\n      0x20\n      dup3\n      add\n      mstore\n      0x4572726f723a2061203d3d2062206e6f7420736174697366696564205b696e74\n      dup6\n      dup3\n      add\n      mstore\n      0x5d00000000000000000000000000000000000000000000000000000000000000\n      0x60\n      dup3\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":4841:4881  log(\"Error: a == b not satisfied [int]\") */\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      mload\n      swap4\n      dup3\n      dup6\n      mstore\n      tag_3298\n      dup4\n      dup7\n      add\n      0x40\n      swap1\n      0x0a\n      dup2\n      mstore\n      0x2020457870656374656400000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_3298:\n      swap1\n      0x20\n      dup7\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":4900:4930  log_named_int(\"  Expected\", b) */\n      dup5\n      0x2fe632779174374378442a8e978bccfbdcc1d6b2b0d81f7e8eb776ab2286f168\n      swap6\n      dup7\n      swap3\n      sub\n      swap1\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      mload\n      swap3\n      dup3\n      dup5\n      swap4\n      dup5\n      mstore\n      dup4\n      add\n      0x40\n      swap1\n      0x0a\n      dup2\n      mstore\n      0x2020202041637475616c00000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_59:\n      swap1\n      dup2\n      0x20\n      swap2\n      sub\n      slt\n      tag_226\n      jumpi\n      mload\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n      dup2\n      sub\n      tag_226\n      jumpi\n      swap1\n      jump\t// out\n    tag_60:\n      0xffffffffffffffffffffffffffffffffffffffff\n      tag_3159\n      swap5\n      swap4\n      0x80\n      swap4\n      dup4\n      mstore\n      0x00\n      0x20\n      dup5\n      add\n      mstore\n      and\n      0x40\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      0x60\n      dup3\n      add\n      mstore\n      add\n      swap1\n      tag_10\n      jump\t// in\n    tag_61:\n      0x80\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      tag_3159\n      swap5\n      swap4\n      0x02b5e3af16b1880000\n      dup4\n      mstore\n      0x01\n      0x20\n      dup5\n      add\n      mstore\n      and\n      0x40\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      0x60\n      dup3\n      add\n      mstore\n      add\n      swap1\n      tag_10\n      jump\t// in\n    tag_62:\n      0xffffffffffffffffffffffffffffffffffffffff\n      tag_3159\n      swap5\n      swap4\n      0x80\n      swap4\n      dup4\n      mstore\n      0x01\n      0x20\n      dup5\n      add\n      mstore\n      and\n      0x40\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      0x60\n      dup3\n      add\n      mstore\n      add\n      swap1\n      tag_10\n      jump\t// in\n        /* \"lib/forge-std/src/StdUtils.sol\":611:1874  function _bound(uint256 x, uint256 min, uint256 max) internal pure virtual returns (uint256 result) {... */\n    tag_65:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x00\n      dup1\n        /* \"test/unit/ConstantProductPair.t.sol\":7982:7983  1 */\n      swap2\n      0x01\n        /* \"lib/forge-std/src/StdUtils.sol\":729:739  min <= max */\n      swap2\n      dup5\n      dup4\n      gt\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_3307\n      jumpi\n        /* \"lib/forge-std/src/StdUtils.sol\":1035:1043  x >= min */\n      dup3\n      dup3\n      lt\n      dup1\n      iszero\n        /* \"lib/forge-std/src/StdUtils.sol\":1035:1055  x >= min && x <= max */\n      dup1\n      tag_3309\n      jumpi\n        /* \"lib/forge-std/src/StdUtils.sol\":611:1874  function _bound(uint256 x, uint256 min, uint256 max) internal pure virtual returns (uint256 result) {... */\n    tag_3310:\n        /* \"lib/forge-std/src/StdUtils.sol\":1031:1065  if (x >= min && x <= max) return x */\n      tag_3311\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup2\n      add\n      gt\n      tag_2198\n      jumpi\n        /* \"lib/forge-std/src/StdUtils.sol\":1299:1300  3 */\n      0x03\n        /* \"lib/forge-std/src/StdUtils.sol\":1294:1300  x <= 3 */\n      dup4\n      gt\n      iszero\n        /* \"lib/forge-std/src/StdUtils.sol\":1294:1312  x <= 3 && size > x */\n      dup1\n      tag_3315\n      jumpi\n        /* \"lib/forge-std/src/StdUtils.sol\":611:1874  function _bound(uint256 x, uint256 min, uint256 max) internal pure virtual returns (uint256 result) {... */\n    tag_3316:\n        /* \"lib/forge-std/src/StdUtils.sol\":1290:1328  if (x <= 3 && size > x) return min + x */\n      tag_3317\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\n        /* \"lib/forge-std/src/StdUtils.sol\":1342:1362  x >= UINT256_MAX - 3 */\n      dup4\n      lt\n      iszero\n        /* \"lib/forge-std/src/StdUtils.sol\":1342:1388  x >= UINT256_MAX - 3 && size > UINT256_MAX - x */\n      dup1\n      tag_3319\n      jumpi\n        /* \"lib/forge-std/src/StdUtils.sol\":611:1874  function _bound(uint256 x, uint256 min, uint256 max) internal pure virtual returns (uint256 result) {... */\n    tag_3320:\n        /* \"lib/forge-std/src/StdUtils.sol\":1338:1420  if (x >= UINT256_MAX - 3 && size > UINT256_MAX - x) return max - (UINT256_MAX - x) */\n      tag_3321\n      jumpi\n        /* \"lib/forge-std/src/StdUtils.sol\":1520:1527  x > max */\n      dup6\n      dup4\n      gt\n      iszero\n      tag_3323\n      jumpi\n        /* \"lib/forge-std/src/StdUtils.sol\":1558:1565  x - max */\n      pop\n      pop\n      dup4\n      tag_3325\n      dup2\n        /* \"lib/forge-std/src/StdUtils.sol\":1593:1604  diff % size */\n      tag_3326\n        /* \"lib/forge-std/src/StdUtils.sol\":1558:1565  x - max */\n      swap4\n      tag_44\n      jump\t// in\n    tag_3325:\n        /* \"lib/forge-std/src/StdUtils.sol\":1593:1604  diff % size */\n      tag_22\n      jump\t// in\n    tag_3326:\n        /* \"lib/forge-std/src/StdUtils.sol\":1622:1630  rem == 0 */\n      swap3\n      dup4\n      iszero\n        /* \"lib/forge-std/src/StdUtils.sol\":1618:1642  if (rem == 0) return max */\n      tag_3327\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      pop\n      dup3\n      dup2\n      add\n      dup1\n      swap2\n      gt\n      tag_3329\n      jumpi\n      dup3\n      gt\n      tag_514\n      jumpi\n        /* \"lib/forge-std/src/StdUtils.sol\":1656:1678  result = min + rem - 1 */\n      pop\n        /* \"lib/forge-std/src/StdUtils.sol\":1516:1868  if (x > max) {... */\n      swap1\n        /* \"lib/forge-std/src/StdUtils.sol\":611:1874  function _bound(uint256 x, uint256 min, uint256 max) internal pure virtual returns (uint256 result) {... */\n      jump\t// out\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_3329:\n      0x24\n      dup3\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      mstore(0x04, 0x11)\n      revert\n        /* \"lib/forge-std/src/StdUtils.sol\":1618:1642  if (rem == 0) return max */\n    tag_3327:\n        /* \"lib/forge-std/src/StdUtils.sol\":1632:1642  return max */\n      swap3\n      pop\n      pop\n      pop\n      swap1\n      jump\t// out\n        /* \"lib/forge-std/src/StdUtils.sol\":1516:1868  if (x > max) {... */\n    tag_3323:\n        /* \"lib/forge-std/src/StdUtils.sol\":1695:1868  if (x < min) {... */\n      swap6\n      swap5\n      swap2\n      swap1\n      swap6\n      swap4\n      swap3\n      swap4\n      tag_3334\n      jumpi\n        /* \"lib/forge-std/src/StdUtils.sol\":1516:1868  if (x > max) {... */\n    tag_3335:\n      pop\n      pop\n      pop\n      pop\n        /* \"lib/forge-std/src/StdUtils.sol\":611:1874  function _bound(uint256 x, uint256 min, uint256 max) internal pure virtual returns (uint256 result) {... */\n      jump\t// out\n        /* \"lib/forge-std/src/StdUtils.sol\":1695:1868  if (x < min) {... */\n    tag_3334:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      swap2\n      swap3\n      dup1\n      swap5\n      swap6\n      pop\n      sub\n      dup4\n      dup2\n      gt\n      tag_3336\n      jumpi\n        /* \"lib/forge-std/src/StdUtils.sol\":1772:1783  diff % size */\n      dup2\n      tag_3338\n      swap2\n      tag_22\n      jump\t// in\n    tag_3338:\n        /* \"lib/forge-std/src/StdUtils.sol\":1801:1809  rem == 0 */\n      dup1\n      iszero\n        /* \"lib/forge-std/src/StdUtils.sol\":1797:1821  if (rem == 0) return min */\n      tag_3261\n      jumpi\n        /* \"lib/forge-std/src/StdUtils.sol\":1844:1853  max - rem */\n      tag_3341\n      swap2\n      tag_44\n      jump\t// in\n    tag_3341:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap2\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_514\n      jumpi\n        /* \"lib/forge-std/src/StdUtils.sol\":1835:1857  result = max - rem + 1 */\n      pop\n        /* \"lib/forge-std/src/StdUtils.sol\":1695:1868  if (x < min) {... */\n      swap1\n      codesize\n      dup1\n      dup1\n      dup1\n      jump(tag_3335)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_3336:\n      0x24\n      dup4\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      mstore(0x04, 0x11)\n      revert\n        /* \"lib/forge-std/src/StdUtils.sol\":1338:1420  if (x >= UINT256_MAX - 3 && size > UINT256_MAX - x) return max - (UINT256_MAX - x) */\n    tag_3321:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      pop\n      pop\n      swap1\n      pop\n        /* \"lib/forge-std/src/StdUtils.sol\":1397:1420  max - (UINT256_MAX - x) */\n      tag_3159\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap3\n      swap2\n      pop\n      not\n        /* \"lib/forge-std/src/StdUtils.sol\":1397:1420  max - (UINT256_MAX - x) */\n      swap1\n      tag_44\n      jump\t// in\n        /* \"lib/forge-std/src/StdUtils.sol\":1342:1388  x >= UINT256_MAX - 3 && size > UINT256_MAX - x */\n    tag_3319:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      pop\n      dup3\n      not\n        /* \"lib/forge-std/src/StdUtils.sol\":1366:1388  size > UINT256_MAX - x */\n      dup7\n      gt\n        /* \"lib/forge-std/src/StdUtils.sol\":1342:1388  x >= UINT256_MAX - 3 && size > UINT256_MAX - x */\n      jump(tag_3320)\n        /* \"lib/forge-std/src/StdUtils.sol\":1290:1328  if (x <= 3 && size > x) return min + x */\n    tag_3317:\n      pop\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      add\n      swap3\n      pop\n      dup3\n      lt\n      tag_514\n      jumpi\n        /* \"lib/forge-std/src/StdUtils.sol\":1314:1328  return min + x */\n      pop\n      swap1\n      jump\t// out\n        /* \"lib/forge-std/src/StdUtils.sol\":1294:1312  x <= 3 && size > x */\n    tag_3315:\n        /* \"lib/forge-std/src/StdUtils.sol\":1304:1312  size > x */\n      pop\n      dup3\n      dup7\n      gt\n        /* \"lib/forge-std/src/StdUtils.sol\":1294:1312  x <= 3 && size > x */\n      jump(tag_3316)\n        /* \"lib/forge-std/src/StdUtils.sol\":1031:1065  if (x >= min && x <= max) return x */\n    tag_3311:\n        /* \"lib/forge-std/src/StdUtils.sol\":1057:1065  return x */\n      pop\n      pop\n      swap3\n      pop\n      pop\n      pop\n      swap1\n      jump\t// out\n        /* \"lib/forge-std/src/StdUtils.sol\":1035:1055  x >= min && x <= max */\n    tag_3309:\n        /* \"lib/forge-std/src/StdUtils.sol\":1047:1055  x <= max */\n      pop\n      dup6\n      dup4\n      gt\n      iszero\n        /* \"lib/forge-std/src/StdUtils.sol\":1035:1055  x >= min && x <= max */\n      jump(tag_3310)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_3307:\n      0x84\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x3e\n      0x24\n      dup3\n      add\n      mstore\n      0x5374645574696c7320626f756e642875696e743235362c75696e743235362c75\n      0x44\n      dup3\n      add\n      mstore\n      0x696e74323536293a204d6178206973206c657373207468616e206d696e2e0000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":6756:7015  function assertGt(uint a, uint b) internal {... */\n    tag_68:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":6813:6819  a <= b */\n      dup1\n      iszero\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":6809:7009  if (a <= b) {... */\n      tag_3347\n      jumpi\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":6756:7015  function assertGt(uint a, uint b) internal {... */\n      pop\n      jump\t// out\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":6809:7009  if (a <= b) {... */\n    tag_3347:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_3349\n      0x40\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":6840:6880  log(\"Error: a > b not satisfied [uint]\") */\n      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x80\n      dup3\n      mload\n      0x20\n      dup2\n      mstore\n      0x21\n      0x20\n      dup3\n      add\n      mstore\n      0x4572726f723a2061203e2062206e6f7420736174697366696564205b75696e74\n      dup5\n      dup3\n      add\n      mstore\n      0x5d00000000000000000000000000000000000000000000000000000000000000\n      0x60\n      dup3\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":6840:6880  log(\"Error: a > b not satisfied [uint]\") */\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup1\n      mload\n      swap3\n      dup2\n      dup5\n      mstore\n      tag_3350\n      dup3\n      dup6\n      add\n      0x40\n      swap1\n      0x09\n      dup2\n      mstore\n      0x202056616c756520610000000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_3350:\n      swap1\n      0x20\n      dup6\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":6899:6929  log_named_uint(\"  Value a\", a) */\n      dup4\n      0xb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8\n      swap5\n      dup6\n      swap3\n      sub\n      swap1\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup1\n      mload\n      swap2\n      dup2\n      dup4\n      swap3\n      dup4\n      mstore\n      dup3\n      add\n      0x40\n      swap1\n      0x09\n      dup2\n      mstore\n      0x202056616c756520620000000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_3349:\n      0x00\n      0x20\n      dup4\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":6948:6978  log_named_uint(\"  Value b\", b) */\n      sub\n      swap1\n      log1\n      tag_3197\n      tag_42\n      jump\t// in\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":6756:7015  function assertGt(uint a, uint b) internal {... */\n    tag_69:\n        /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */\n      0x056bc75e2d63100000\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":6813:6819  a <= b */\n      dup1\n      dup3\n      gt\n      iszero\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":6809:7009  if (a <= b) {... */\n      tag_3352\n      jumpi\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":6756:7015  function assertGt(uint a, uint b) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":6809:7009  if (a <= b) {... */\n    tag_3352:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_3195\n      swap1\n      0x40\n      swap1\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":6840:6880  log(\"Error: a > b not satisfied [uint]\") */\n      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x80\n      dup4\n      mload\n      0x20\n      dup2\n      mstore\n      0x21\n      0x20\n      dup3\n      add\n      mstore\n      0x4572726f723a2061203e2062206e6f7420736174697366696564205b75696e74\n      dup6\n      dup3\n      add\n      mstore\n      0x5d00000000000000000000000000000000000000000000000000000000000000\n      0x60\n      dup3\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":6840:6880  log(\"Error: a > b not satisfied [uint]\") */\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      mload\n      swap4\n      dup3\n      dup6\n      mstore\n      tag_3355\n      dup4\n      dup7\n      add\n      0x40\n      swap1\n      0x09\n      dup2\n      mstore\n      0x202056616c756520610000000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_3355:\n      swap1\n      0x20\n      dup7\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":6899:6929  log_named_uint(\"  Value a\", a) */\n      dup5\n      0xb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8\n      swap6\n      dup7\n      swap3\n      sub\n      swap1\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      mload\n      swap3\n      dup3\n      dup5\n      swap4\n      dup5\n      mstore\n      dup4\n      add\n      0x40\n      swap1\n      0x09\n      dup2\n      mstore\n      0x202056616c756520620000000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n        /* \"test/unit/ConstantProductPair.t.sol\":1725:2161  function _calculateInput(uint256 aReserveIn, uint256 aReserveOut, uint256 aAmountOut, uint256 aFee)... */\n    tag_70:\n      swap2\n        /* \"test/unit/ConstantProductPair.t.sol\":1924:1959  _constantProductPair.FEE_ACCURACY() */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":1725:2161  function _calculateInput(uint256 aReserveIn, uint256 aReserveOut, uint256 aAmountOut, uint256 aFee)... */\n      swap3\n      swap4\n      swap2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":1924:1959  _constantProductPair.FEE_ACCURACY() */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"test/unit/ConstantProductPair.t.sol\":1924:1944  _constantProductPair */\n      0x1e\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      and\n      mload(0x40)\n        /* \"test/unit/ConstantProductPair.t.sol\":1924:1959  _constantProductPair.FEE_ACCURACY() */\n      swap6\n      dup7\n      dup1\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xdb6488dc00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":1924:1959  _constantProductPair.FEE_ACCURACY() */\n      dup3\n      mstore\n      gas\n      staticcall\n      swap4\n      dup5\n      iszero\n      tag_312\n      jumpi\n      0x00\n      swap5\n      tag_3359\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":1725:2161  function _calculateInput(uint256 aReserveIn, uint256 aReserveOut, uint256 aAmountOut, uint256 aFee)... */\n    tag_3360:\n        /* \"test/unit/ConstantProductPair.t.sol\":1990:2013  aReserveIn * aAmountOut */\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":2056:2101  (aReserveOut - aAmountOut) * (lMaxFee - aFee) */\n      tag_2260\n        /* \"test/unit/ConstantProductPair.t.sol\":1990:2013  aReserveIn * aAmountOut */\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":2057:2081  aReserveOut - aAmountOut */\n      tag_3362\n        /* \"test/unit/ConstantProductPair.t.sol\":1990:2013  aReserveIn * aAmountOut */\n      dup4\n        /* \"test/unit/ConstantProductPair.t.sol\":1990:2023  aReserveIn * aAmountOut * lMaxFee */\n      tag_3363\n        /* \"test/unit/ConstantProductPair.t.sol\":1990:2013  aReserveIn * aAmountOut */\n      dup8\n      tag_3364\n        /* \"test/unit/ConstantProductPair.t.sol\":2125:2150  lNumerator / lDenominator */\n      tag_3365\n        /* \"test/unit/ConstantProductPair.t.sol\":1990:2013  aReserveIn * aAmountOut */\n      swap11\n      swap10\n      swap8\n        /* \"test/unit/ConstantProductPair.t.sol\":2086:2100  lMaxFee - aFee */\n      tag_3366\n        /* \"test/unit/ConstantProductPair.t.sol\":1990:2013  aReserveIn * aAmountOut */\n      swap8\n      tag_17\n      jump\t// in\n    tag_3364:\n        /* \"test/unit/ConstantProductPair.t.sol\":1990:2023  aReserveIn * aAmountOut * lMaxFee */\n      tag_17\n      jump\t// in\n    tag_3363:\n        /* \"test/unit/ConstantProductPair.t.sol\":2057:2081  aReserveOut - aAmountOut */\n      swap7\n      tag_44\n      jump\t// in\n    tag_3362:\n        /* \"test/unit/ConstantProductPair.t.sol\":2086:2100  lMaxFee - aFee */\n      swap3\n      tag_44\n      jump\t// in\n    tag_3366:\n        /* \"test/unit/ConstantProductPair.t.sol\":2056:2101  (aReserveOut - aAmountOut) * (lMaxFee - aFee) */\n      swap1\n      tag_17\n      jump\t// in\n        /* \"test/unit/ConstantProductPair.t.sol\":2125:2150  lNumerator / lDenominator */\n    tag_3365:\n        /* \"test/unit/ConstantProductPair.t.sol\":2153:2154  1 */\n      0x01\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      add\n      dup1\n      swap2\n      gt\n      tag_505\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":1725:2161  function _calculateInput(uint256 aReserveIn, uint256 aReserveOut, uint256 aAmountOut, uint256 aFee)... */\n      swap1\n      jump\t// out\n        /* \"test/unit/ConstantProductPair.t.sol\":1924:1959  _constantProductPair.FEE_ACCURACY() */\n    tag_3359:\n      swap1\n      swap2\n      swap4\n      0x20\n      dup3\n      returndatasize\n      dup3\n      gt\n      tag_3369\n      jumpi\n    tag_3370:\n      dup2\n      tag_3371\n      0x20\n      swap4\n      dup4\n      tag_6\n      jump\t// in\n    tag_3371:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_196\n      jumpi\n      pop\n      mload\n      swap3\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":2056:2101  (aReserveOut - aAmountOut) * (lMaxFee - aFee) */\n      tag_2260\n        /* \"test/unit/ConstantProductPair.t.sol\":1924:1959  _constantProductPair.FEE_ACCURACY() */\n      jump(tag_3360)\n    tag_3369:\n      returndatasize\n      swap2\n      pop\n      jump(tag_3370)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_71:\n      swap2\n      swap1\n      dup3\n      0x40\n      swap2\n      sub\n      slt\n      tag_226\n      jumpi\n      0x20\n      dup3\n      mload\n      swap3\n      add\n      mload\n      swap1\n      jump\t// out\n    tag_72:\n      mload\n      swap1\n      dup2\n      0x06\n      signextend\n      dup3\n      sub\n      tag_226\n      jumpi\n      jump\t// out\n    tag_73:\n      swap1\n      dup2\n      0x80\n      swap2\n      sub\n      slt\n      tag_226\n      jumpi\n      mload(0x40)\n      swap1\n      0x80\n      dup3\n      add\n      dup3\n      dup2\n      lt\n      0xffffffffffffffff\n      dup3\n      gt\n      or\n      tag_3120\n      jumpi\n      0x40\n      mstore\n      dup1\n      mload\n      dup1\n      0x0d\n      signextend\n      dup2\n      sub\n      tag_226\n      jumpi\n      tag_3384\n      swap2\n      0x60\n      swap2\n      dup5\n      mstore\n      tag_3385\n      0x20\n      dup3\n      add\n      tag_72\n      jump\t// in\n    tag_3385:\n      0x20\n      dup6\n      add\n      mstore\n      tag_3386\n      0x40\n      dup3\n      add\n      tag_72\n      jump\t// in\n    tag_3386:\n      0x40\n      dup6\n      add\n      mstore\n      add\n      tag_27\n      jump\t// in\n    tag_3384:\n      0x60\n      dup3\n      add\n      mstore\n      swap1\n      jump\t// out\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":3255:3412  function assertTrue(bool condition) internal {... */\n    tag_76:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":3314:3324  !condition */\n      iszero\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":3310:3406  if (!condition) {... */\n      tag_3387\n      jumpi\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":3255:3412  function assertTrue(bool condition) internal {... */\n      jump\t// out\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":3310:3406  if (!condition) {... */\n    tag_3387:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":3345:3375  log(\"Error: Assertion Failed\") */\n      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x60\n      mload(0x40)\n      0x20\n      dup2\n      mstore\n      0x17\n      0x20\n      dup3\n      add\n      mstore\n      0x4572726f723a20417373657274696f6e204661696c6564000000000000000000\n      0x40\n      dup3\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":3345:3375  log(\"Error: Assertion Failed\") */\n      log1\n      tag_3197\n      tag_42\n      jump\t// in\n        /* \"test/__fixtures/BaseTest.sol\":5158:5264  function _stepTime(uint256 aTime) internal {... */\n    tag_77:\n      0x00\n        /* \"test/__fixtures/BaseTest.sol\":5234:5235  1 */\n      0x01\n        /* \"test/__fixtures/BaseTest.sol\":5219:5231  block.number */\n      number\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      add\n        /* \"test/__fixtures/BaseTest.sol\":5219:5231  block.number */\n      swap1\n      dup2\n      number\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      gt\n      tag_514\n      jumpi\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"test/__fixtures/BaseTest.sol\":5211:5236  vm.roll(block.number + 1) */\n      swap2\n      dup3\n      extcodesize\n      iszero\n      tag_255\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/__fixtures/BaseTest.sol\":5211:5236  vm.roll(block.number + 1) */\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x1f7b4f3000000000000000000000000000000000000000000000000000000000\n        /* \"test/__fixtures/BaseTest.sol\":5211:5236  vm.roll(block.number + 1) */\n      dup3\n      mstore\n      0x04\n      dup3\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"test/__fixtures/BaseTest.sol\":5211:5236  vm.roll(block.number + 1) */\n      dup2\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n        /* \"test/__fixtures/BaseTest.sol\":5211:5236  vm.roll(block.number + 1) */\n      dup2\n      dup4\n      dup8\n      gas\n      call\n      dup1\n      iszero\n      tag_219\n      jumpi\n      tag_3396\n      jumpi\n        /* \"test/__fixtures/BaseTest.sol\":5158:5264  function _stepTime(uint256 aTime) internal {... */\n    tag_3397:\n        /* \"lib/forge-std/src/StdCheats.sol\":17583:17598  block.timestamp */\n      pop\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":23002:23003  5 */\n      0x05\n        /* \"lib/forge-std/src/StdCheats.sol\":17583:17598  block.timestamp */\n      timestamp\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      add\n        /* \"lib/forge-std/src/StdCheats.sol\":17583:17598  block.timestamp */\n      dup1\n      timestamp\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      gt\n      tag_505\n      jumpi\n        /* \"lib/forge-std/src/StdCheats.sol\":17575:17606  vm.warp(block.timestamp + time) */\n      dup2\n      extcodesize\n      iszero\n      tag_291\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      swap2\n      0x24\n      dup4\n      swap3\n      mload(0x40)\n        /* \"lib/forge-std/src/StdCheats.sol\":17575:17606  vm.warp(block.timestamp + time) */\n      swap5\n      dup6\n      swap4\n      dup5\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xe5d6bf0200000000000000000000000000000000000000000000000000000000\n        /* \"lib/forge-std/src/StdCheats.sol\":17575:17606  vm.warp(block.timestamp + time) */\n      dup5\n      mstore\n        /* \"test/__fixtures/BaseTest.sol\":5211:5236  vm.roll(block.number + 1) */\n      0x04\n        /* \"lib/forge-std/src/StdCheats.sol\":17575:17606  vm.warp(block.timestamp + time) */\n      dup5\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"lib/forge-std/src/StdCheats.sol\":17575:17606  vm.warp(block.timestamp + time) */\n      gas\n      call\n      dup1\n      iszero\n      tag_219\n      jumpi\n      tag_3404\n      jumpi\n        /* \"test/__fixtures/BaseTest.sol\":5158:5264  function _stepTime(uint256 aTime) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"lib/forge-std/src/StdCheats.sol\":17575:17606  vm.warp(block.timestamp + time) */\n    tag_3404:\n      tag_3406\n      dup3\n      swap2\n      tag_1\n      jump\t// in\n    tag_3406:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_196\n      jumpi\n        /* \"test/__fixtures/BaseTest.sol\":5158:5264  function _stepTime(uint256 aTime) internal {... */\n      pop\n      jump\t// out\n        /* \"test/__fixtures/BaseTest.sol\":5211:5236  vm.roll(block.number + 1) */\n    tag_3396:\n      tag_3409\n      swap1\n      tag_1\n      jump\t// in\n    tag_3409:\n      codesize\n      jump(tag_3397)\n        /* \"test/__fixtures/BaseTest.sol\":5158:5264  function _stepTime(uint256 aTime) internal {... */\n    tag_78:\n      0x00\n        /* \"test/__fixtures/BaseTest.sol\":5234:5235  1 */\n      0x01\n        /* \"test/__fixtures/BaseTest.sol\":5219:5231  block.number */\n      number\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      add\n        /* \"test/__fixtures/BaseTest.sol\":5219:5231  block.number */\n      swap1\n      dup2\n      number\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      gt\n      tag_514\n      jumpi\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"test/__fixtures/BaseTest.sol\":5211:5236  vm.roll(block.number + 1) */\n      swap2\n      dup3\n      extcodesize\n      iszero\n      tag_255\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/__fixtures/BaseTest.sol\":5211:5236  vm.roll(block.number + 1) */\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x1f7b4f3000000000000000000000000000000000000000000000000000000000\n        /* \"test/__fixtures/BaseTest.sol\":5211:5236  vm.roll(block.number + 1) */\n      dup3\n      mstore\n      0x04\n      dup3\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"test/__fixtures/BaseTest.sol\":5211:5236  vm.roll(block.number + 1) */\n      dup2\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n        /* \"test/__fixtures/BaseTest.sol\":5211:5236  vm.roll(block.number + 1) */\n      dup2\n      dup4\n      dup8\n      gas\n      call\n      dup1\n      iszero\n      tag_219\n      jumpi\n      tag_3416\n      jumpi\n        /* \"test/__fixtures/BaseTest.sol\":5158:5264  function _stepTime(uint256 aTime) internal {... */\n    tag_3417:\n        /* \"lib/forge-std/src/StdCheats.sol\":17583:17598  block.timestamp */\n      pop\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":18347:18349  10 */\n      0x0a\n        /* \"lib/forge-std/src/StdCheats.sol\":17583:17598  block.timestamp */\n      timestamp\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      add\n        /* \"lib/forge-std/src/StdCheats.sol\":17583:17598  block.timestamp */\n      dup1\n      timestamp\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      gt\n      tag_505\n      jumpi\n        /* \"lib/forge-std/src/StdCheats.sol\":17575:17606  vm.warp(block.timestamp + time) */\n      dup2\n      extcodesize\n      iszero\n      tag_291\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      swap2\n      0x24\n      dup4\n      swap3\n      mload(0x40)\n        /* \"lib/forge-std/src/StdCheats.sol\":17575:17606  vm.warp(block.timestamp + time) */\n      swap5\n      dup6\n      swap4\n      dup5\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xe5d6bf0200000000000000000000000000000000000000000000000000000000\n        /* \"lib/forge-std/src/StdCheats.sol\":17575:17606  vm.warp(block.timestamp + time) */\n      dup5\n      mstore\n        /* \"test/__fixtures/BaseTest.sol\":5211:5236  vm.roll(block.number + 1) */\n      0x04\n        /* \"lib/forge-std/src/StdCheats.sol\":17575:17606  vm.warp(block.timestamp + time) */\n      dup5\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"lib/forge-std/src/StdCheats.sol\":17575:17606  vm.warp(block.timestamp + time) */\n      gas\n      call\n      dup1\n      iszero\n      tag_219\n      jumpi\n      tag_3404\n      jumpi\n        /* \"test/__fixtures/BaseTest.sol\":5158:5264  function _stepTime(uint256 aTime) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"test/__fixtures/BaseTest.sol\":5211:5236  vm.roll(block.number + 1) */\n    tag_3416:\n      tag_3429\n      swap1\n      tag_1\n      jump\t// in\n    tag_3429:\n      codesize\n      jump(tag_3417)\n        /* \"test/__fixtures/BaseTest.sol\":5158:5264  function _stepTime(uint256 aTime) internal {... */\n    tag_79:\n      0x00\n        /* \"test/unit/ConstantProductPair.t.sol\":12777:12778  1 */\n      0x01\n        /* \"test/__fixtures/BaseTest.sol\":5219:5231  block.number */\n      number\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      add\n        /* \"test/__fixtures/BaseTest.sol\":5219:5231  block.number */\n      swap1\n      dup2\n      number\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      gt\n      tag_514\n      jumpi\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"test/__fixtures/BaseTest.sol\":5211:5236  vm.roll(block.number + 1) */\n      swap2\n      dup3\n      extcodesize\n      iszero\n      tag_255\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"test/__fixtures/BaseTest.sol\":5211:5236  vm.roll(block.number + 1) */\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x1f7b4f3000000000000000000000000000000000000000000000000000000000\n        /* \"test/__fixtures/BaseTest.sol\":5211:5236  vm.roll(block.number + 1) */\n      dup3\n      mstore\n      0x04\n      dup3\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"test/__fixtures/BaseTest.sol\":5211:5236  vm.roll(block.number + 1) */\n      dup2\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n        /* \"test/__fixtures/BaseTest.sol\":5211:5236  vm.roll(block.number + 1) */\n      dup2\n      dup4\n      dup8\n      gas\n      call\n      dup1\n      iszero\n      tag_219\n      jumpi\n      tag_3436\n      jumpi\n        /* \"test/__fixtures/BaseTest.sol\":5158:5264  function _stepTime(uint256 aTime) internal {... */\n    tag_3437:\n        /* \"lib/forge-std/src/StdCheats.sol\":17583:17598  block.timestamp */\n      pop\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":12777:12778  1 */\n      0x01\n        /* \"lib/forge-std/src/StdCheats.sol\":17583:17598  block.timestamp */\n      timestamp\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      add\n        /* \"lib/forge-std/src/StdCheats.sol\":17583:17598  block.timestamp */\n      dup1\n      timestamp\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      gt\n      tag_505\n      jumpi\n        /* \"lib/forge-std/src/StdCheats.sol\":17575:17606  vm.warp(block.timestamp + time) */\n      dup2\n      extcodesize\n      iszero\n      tag_291\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      swap2\n      0x24\n      dup4\n      swap3\n      mload(0x40)\n        /* \"lib/forge-std/src/StdCheats.sol\":17575:17606  vm.warp(block.timestamp + time) */\n      swap5\n      dup6\n      swap4\n      dup5\n      swap3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xe5d6bf0200000000000000000000000000000000000000000000000000000000\n        /* \"lib/forge-std/src/StdCheats.sol\":17575:17606  vm.warp(block.timestamp + time) */\n      dup5\n      mstore\n        /* \"test/__fixtures/BaseTest.sol\":5211:5236  vm.roll(block.number + 1) */\n      0x04\n        /* \"lib/forge-std/src/StdCheats.sol\":17575:17606  vm.warp(block.timestamp + time) */\n      dup5\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"lib/forge-std/src/StdCheats.sol\":17575:17606  vm.warp(block.timestamp + time) */\n      gas\n      call\n      dup1\n      iszero\n      tag_219\n      jumpi\n      tag_3404\n      jumpi\n        /* \"test/__fixtures/BaseTest.sol\":5158:5264  function _stepTime(uint256 aTime) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"test/__fixtures/BaseTest.sol\":5211:5236  vm.roll(block.number + 1) */\n    tag_3436:\n      tag_3449\n      swap1\n      tag_1\n      jump\t// in\n    tag_3449:\n      codesize\n      jump(tag_3437)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_80:\n      swap1\n      dup1\n      0x1f\n      dup4\n      add\n      slt\n      iszero\n      tag_226\n      jumpi\n      dup2\n      mload\n      swap1\n      0xffffffffffffffff\n      dup3\n      gt\n      tag_3120\n      jumpi\n      dup2\n      0x05\n      shl\n      mload(0x40)\n      swap4\n      0x20\n      swap4\n      tag_3454\n      dup6\n      dup5\n      add\n      dup8\n      tag_6\n      jump\t// in\n    tag_3454:\n      dup6\n      mstore\n      dup4\n      dup1\n      dup7\n      add\n      swap3\n      dup3\n      add\n      add\n      swap3\n      dup4\n      gt\n      tag_226\n      jumpi\n      dup4\n      add\n      swap1\n    tag_3457:\n      dup3\n      dup3\n      lt\n      tag_3458\n      jumpi\n      pop\n      pop\n      pop\n      pop\n      swap1\n      jump\t// out\n    tag_3458:\n      dup2\n      mload\n      dup2\n      mstore\n      swap1\n      dup4\n      add\n      swap1\n      dup4\n      add\n      jump(tag_3457)\n    tag_81:\n      swap2\n      swap1\n      swap2\n      0x40\n      dup2\n      dup5\n      sub\n      slt\n      tag_226\n      jumpi\n      dup1\n      mload\n      swap3\n      0xffffffffffffffff\n      swap4\n      dup5\n      dup2\n      gt\n      tag_226\n      jumpi\n      dup2\n      tag_3464\n      swap2\n      dup5\n      add\n      tag_80\n      jump\t// in\n    tag_3464:\n      swap4\n      0x20\n      dup4\n      add\n      mload\n      swap1\n      dup2\n      gt\n      tag_226\n      jumpi\n      tag_3159\n      swap3\n      add\n      tag_80\n      jump\t// in\n    tag_82:\n      dup1\n      mload\n        /* \"test/__fixtures/BaseTest.sol\":5973:5974  1 */\n      0x01\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      lt\n      iszero\n      tag_3170\n      jumpi\n      0x40\n      add\n      swap1\n      jump\t// out\n    tag_83:\n      dup1\n      mload\n      iszero\n      tag_3170\n      jumpi\n      0x20\n      add\n      swap1\n      jump\t// out\n    tag_84:\n      dup1\n      mload\n      dup3\n      lt\n      iszero\n      tag_3170\n      jumpi\n      0x20\n      swap2\n      0x05\n      shl\n      add\n      add\n      swap1\n      jump\t// out\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":11169:11423  function assertLt(int a, int b) internal {... */\n    tag_86:\n      swap1\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":11224:11230  a >= b */\n      dup1\n      dup3\n      slt\n      iszero\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":11220:11417  if (a >= b) {... */\n      tag_3474\n      jumpi\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":11169:11423  function assertLt(int a, int b) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":11220:11417  if (a >= b) {... */\n    tag_3474:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_3195\n      swap1\n      0x40\n      swap1\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":11251:11290  log(\"Error: a < b not satisfied [int]\") */\n      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x60\n      dup4\n      mload\n      0x20\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      mstore\n      0x4572726f723a2061203c2062206e6f7420736174697366696564205b696e745d\n      dup6\n      dup3\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":11251:11290  log(\"Error: a < b not satisfied [int]\") */\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      mload\n      swap4\n      dup3\n      dup6\n      mstore\n      tag_3477\n      dup4\n      dup7\n      add\n      0x40\n      swap1\n      0x09\n      dup2\n      mstore\n      0x202056616c756520610000000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_3477:\n      swap1\n      0x20\n      dup7\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":11309:11338  log_named_int(\"  Value a\", a) */\n      dup5\n      0x2fe632779174374378442a8e978bccfbdcc1d6b2b0d81f7e8eb776ab2286f168\n      swap6\n      dup7\n      swap3\n      sub\n      swap1\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      mload\n      swap3\n      dup3\n      dup5\n      swap4\n      dup5\n      mstore\n      dup4\n      add\n      0x40\n      swap1\n      0x09\n      dup2\n      mstore\n      0x202056616c756520620000000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_88:\n      swap1\n      0x0d\n      signextend\n      swap1\n      0x0d\n      signextend\n      sub\n      swap1\n      0x7fffffffffffffffffffffffffff\n      dup3\n      sgt\n      0xffffffffffffffffffffffffffffffffffff8000000000000000000000000000\n      dup4\n      slt\n      or\n      tag_505\n      jumpi\n      jump\t// out\n    tag_89:\n      0xffffffff\n      swap2\n      dup3\n      and\n      swap1\n      dup3\n      and\n      sub\n      swap2\n      swap1\n      dup3\n      gt\n      tag_505\n      jumpi\n      jump\t// out\n    tag_90:\n      0x0d\n      signextend\n      swap1\n      0x0d\n      signextend\n      swap1\n      dup2\n      iszero\n      tag_3172\n      jumpi\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup3\n      eq\n      0xffffffffffffffffffffffffffffffffffff8000000000000000000000000000\n      dup3\n      eq\n      and\n      tag_505\n      jumpi\n      sdiv\n      swap1\n      jump\t// out\n        /* \"lib/forge-std/src/StdAssertions.sol\":5049:5775  function assertApproxEqRel(... */\n    tag_91:\n      swap1\n        /* \"lib/forge-std/src/StdAssertions.sol\":5240:5246  b == 0 */\n      dup1\n      iszero\n        /* \"lib/forge-std/src/StdAssertions.sol\":5236:5269  if (b == 0) return assertEq(a, b) */\n      tag_3487\n      jumpi\n        /* \"lib/forge-std/src/StdMath.sol\":607:612  a > b */\n      dup1\n      dup3\n      gt\n      iszero\n      tag_3489\n      jumpi\n        /* \"lib/forge-std/src/StdMath.sol\":615:620  a - b */\n      tag_3491\n      dup2\n      dup4\n      tag_44\n      jump\t// in\n    tag_3491:\n        /* \"lib/forge-std/src/StdMath.sol\":1144:1148  1e18 */\n      0x0de0b6b3a7640000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      dup2\n      dup2\n      mul\n      swap2\n      dup2\n      dup4\n      div\n      eq\n      swap1\n      iszero\n      or\n      iszero\n      tag_505\n      jumpi\n        /* \"lib/forge-std/src/StdMath.sol\":1133:1152  absDelta * 1e18 / b */\n      dup2\n      tag_3495\n      swap2\n      tag_21\n      jump\t// in\n    tag_3495:\n        /* \"test/unit/ConstantProductPair.t.sol\":17212:17221  0.0001e18 */\n      0x5af3107a4000\n        /* \"lib/forge-std/src/StdAssertions.sol\":5389:5419  percentDelta > maxPercentDelta */\n      dup2\n      gt\n        /* \"lib/forge-std/src/StdAssertions.sol\":5385:5769  if (percentDelta > maxPercentDelta) {... */\n      tag_3496\n      jumpi\n        /* \"lib/forge-std/src/StdAssertions.sol\":5049:5775  function assertApproxEqRel(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/forge-std/src/StdAssertions.sol\":5385:5769  if (percentDelta > maxPercentDelta) {... */\n    tag_3496:\n        /* \"lib/forge-std/src/StdAssertions.sol\":5682:5738  log_named_decimal_uint(\"     % Delta\", percentDelta, 18) */\n      tag_3498\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap2\n      0x40\n      swap4\n        /* \"lib/forge-std/src/StdAssertions.sol\":5440:5481  log(\"Error: a ~= b not satisfied [uint]\") */\n      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x80\n      dup7\n      mload\n      0x20\n      dup2\n      mstore\n      0x22\n      0x20\n      dup3\n      add\n      mstore\n      0x4572726f723a2061207e3d2062206e6f7420736174697366696564205b75696e\n      dup9\n      dup3\n      add\n      mstore\n      0x745d000000000000000000000000000000000000000000000000000000000000\n      0x60\n      dup3\n      add\n      mstore\n        /* \"lib/forge-std/src/StdAssertions.sol\":5440:5481  log(\"Error: a ~= b not satisfied [uint]\") */\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup5\n      mload\n      swap2\n      dup6\n      dup4\n      mstore\n      tag_3499\n      dup7\n      dup5\n      add\n      0x40\n      swap1\n      0x0c\n      dup2\n      mstore\n      0x2020202045787065637465640000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_3499:\n      swap1\n      0x20\n      dup5\n      add\n      mstore\n        /* \"lib/forge-std/src/StdAssertions.sol\":5500:5533  log_named_uint(\"    Expected\", b) */\n      dup3\n      0xb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8\n      swap4\n      dup5\n      swap3\n      sub\n      swap1\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup5\n      mload\n      dup1\n      swap2\n      dup7\n      dup3\n      mstore\n      tag_3500\n      dup8\n      dup4\n      add\n      0x40\n      swap1\n      0x0c\n      dup2\n      mstore\n      0x20202020202041637475616c0000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_3500:\n      swap1\n      0x20\n      dup4\n      add\n      mstore\n        /* \"lib/forge-std/src/StdAssertions.sol\":5552:5585  log_named_uint(\"      Actual\", a) */\n      sub\n      swap1\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      mload\n        /* \"lib/forge-std/src/StdAssertions.sol\":5604:5663  log_named_decimal_uint(\" Max % Delta\", maxPercentDelta, 18) */\n      swap3\n      0xeb8ba43ced7537421946bd43e828b8b2b8428927aa8f801c13d934bf11aca57b\n      dup5\n      dup1\n      tag_3501\n      dup4\n      swap8\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      0x60\n      dup3\n      mstore\n      0x0c\n      0x60\n      dup4\n      add\n      mstore\n      0x204d617820252044656c74610000000000000000000000000000000000000000\n      0x80\n      dup4\n      add\n      mstore\n        /* \"lib/forge-std/src/StdAssertions.sol\":6831:6833  18 */\n      0x12\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40\n      0xa0\n      dup5\n      add\n      swap4\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      0x5af3107a4000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n      dup3\n      add\n      mstore\n      add\n      mstore\n      jump\n        /* \"lib/forge-std/src/StdAssertions.sol\":5604:5663  log_named_decimal_uint(\" Max % Delta\", maxPercentDelta, 18) */\n    tag_3501:\n      sub\n      swap1\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n        /* \"lib/forge-std/src/StdAssertions.sol\":5682:5738  log_named_decimal_uint(\"     % Delta\", percentDelta, 18) */\n      swap2\n      dup3\n      swap2\n      dup3\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40\n        /* \"lib/forge-std/src/StdAssertions.sol\":6831:6833  18 */\n      0x12\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap2\n      swap4\n      swap3\n      swap4\n      0x60\n      dup2\n      mstore\n      0x0c\n      0x60\n      dup3\n      add\n      mstore\n      0x2020202020252044656c74610000000000000000000000000000000000000000\n      0x80\n      dup3\n      add\n      mstore\n      0xa0\n      dup2\n      add\n      swap5\n      0x20\n      dup3\n      add\n      mstore\n      add\n      mstore\n      jump\n        /* \"lib/forge-std/src/StdAssertions.sol\":5682:5738  log_named_decimal_uint(\"     % Delta\", percentDelta, 18) */\n    tag_3498:\n      sub\n      swap1\n      log1\n      tag_3197\n      tag_42\n      jump\t// in\n        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */\n    tag_3489:\n        /* \"lib/forge-std/src/StdMath.sol\":623:628  b - a */\n      tag_3503\n      dup3\n      dup3\n      tag_44\n      jump\t// in\n    tag_3503:\n        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */\n      jump(tag_3491)\n        /* \"lib/forge-std/src/StdAssertions.sol\":5236:5269  if (b == 0) return assertEq(a, b) */\n    tag_3487:\n        /* \"lib/forge-std/src/StdAssertions.sol\":5267:5268  b */\n      tag_3197\n      swap2\n      tag_39\n      jump\t// in\n        /* \"lib/forge-std/src/StdAssertions.sol\":5049:5775  function assertApproxEqRel(... */\n    tag_92:\n        /* \"lib/forge-std/src/StdAssertions.sol\":5240:5246  b == 0 */\n      dup1\n      iszero\n        /* \"lib/forge-std/src/StdAssertions.sol\":5236:5269  if (b == 0) return assertEq(a, b) */\n      tag_3505\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffff\n      swap1\n      0x00\n        /* \"lib/forge-std/src/StdMath.sol\":607:612  a > b */\n      dup2\n      dup4\n      gt\n      iszero\n      tag_3507\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      pop\n      dup1\n      dup3\n      sub\n      dup3\n      dup2\n      gt\n      tag_505\n      jumpi\n        /* \"lib/forge-std/src/StdMath.sol\":1144:1148  1e18 */\n      0x0de0b6b3a7640000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      dup2\n      dup2\n      mul\n      swap2\n      dup2\n      dup4\n      div\n      eq\n      swap1\n      iszero\n      or\n      iszero\n      tag_505\n      jumpi\n        /* \"lib/forge-std/src/StdMath.sol\":1133:1152  absDelta * 1e18 / b */\n      dup2\n      tag_3495\n      swap2\n      tag_21\n      jump\t// in\n        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */\n    tag_3507:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffff00000000000000000000000001\n      dup3\n      add\n      swap1\n      dup3\n      dup3\n      gt\n      tag_514\n      jumpi\n        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */\n      pop\n      jump(tag_3491)\n        /* \"lib/forge-std/src/StdAssertions.sol\":5236:5269  if (b == 0) return assertEq(a, b) */\n    tag_3505:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffff\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5259:5265  a != b */\n      dup2\n      dup2\n      sub\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5255:5458  if (a != b) {... */\n      tag_3193\n      jumpi\n        /* \"lib/forge-std/src/StdAssertions.sol\":5248:5269  return assertEq(a, b) */\n      pop\n      pop\n      jump\t// out\n        /* \"src/libraries/LogExpMath.sol\":2685:2691  130e18 */\n    tag_93:\n      iszero\n      tag_3529\n      jumpi\n      jump\t// out\n    tag_3529:\n      0x64\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"src/libraries/LogExpMath.sol\":2685:2691  130e18 */\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"src/libraries/LogExpMath.sol\":2685:2691  130e18 */\n      0x454d3a20494e56414c49445f4558504f4e454e54000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x44\n      dup3\n      add\n        /* \"src/libraries/LogExpMath.sol\":2685:2691  130e18 */\n      mstore\n      revert\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n    tag_94:\n      dup1\n      iszero\n      tag_3172\n      jumpi\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      0xc097ce7bc90715b34b9f1000000000\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      sdiv\n      swap1\n      jump\t// out\n    tag_95:\n      dup2\n      iszero\n      tag_3172\n      jumpi\n      sdiv\n      swap1\n      jump\t// out\n        /* \"src/libraries/LogExpMath.sol\":7623:13596  function exp(int256 x) internal pure returns (int256) {... */\n    tag_96:\n        /* \"src/libraries/LogExpMath.sol\":2736:2742  -41e18 */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffdc702bd3a30fc0000\n        /* \"src/libraries/LogExpMath.sol\":7719:7744  x >= MIN_NATURAL_EXPONENT */\n      dup2\n      slt\n      iszero\n        /* \"src/libraries/LogExpMath.sol\":7719:7773  x >= MIN_NATURAL_EXPONENT && x <= MAX_NATURAL_EXPONENT */\n      dup1\n      tag_3535\n      jumpi\n        /* \"src/libraries/LogExpMath.sol\":7623:13596  function exp(int256 x) internal pure returns (int256) {... */\n    tag_3536:\n        /* \"src/libraries/LogExpMath.sol\":7711:7798  require(x >= MIN_NATURAL_EXPONENT && x <= MAX_NATURAL_EXPONENT, \"EM: INVALID_EXPONENT\") */\n      tag_3537\n      swap1\n      tag_93\n      jump\t// in\n    tag_3537:\n        /* \"src/libraries/LogExpMath.sol\":7820:7821  0 */\n      0x00\n        /* \"src/libraries/LogExpMath.sol\":7816:7821  x < 0 */\n      dup2\n      slt\n        /* \"src/libraries/LogExpMath.sol\":7812:8204  if (x < 0) {... */\n      tag_3538\n      jumpi\n        /* \"src/libraries/LogExpMath.sol\":10072:10075  100 */\n      0x64\n      swap1\n        /* \"src/libraries/LogExpMath.sol\":3125:3152  128_000_000_000_000_000_000 */\n      0x06f05b59d3b2000000\n        /* \"src/libraries/LogExpMath.sol\":9657:9664  x >= x0 */\n      dup2\n      slt\n        /* \"src/libraries/LogExpMath.sol\":3125:3152  128_000_000_000_000_000_000 */\n      tag_3540\n      jumpi\n        /* \"src/libraries/LogExpMath.sol\":3324:3350  64_000_000_000_000_000_000 */\n      0xfffffffffffffffffffffffffffffffffffffffffffffff90fa4a62c4e000000\n      add\n        /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n      0x056bc75e2d63100000\n        /* \"src/libraries/LogExpMath.sol\":9709:9721  firstAN = a0 */\n      dup3\n        /* \"src/libraries/LogExpMath.sol\":3187:3261  38_877_084_059_945_950_922_200_000_000_000_000_000_000_000_000_000_000_000 */\n      0x0195e54c5dd42177f53a27172fa9ec630262827000000000\n        /* \"src/libraries/LogExpMath.sol\":9653:9905  if (x >= x0) {... */\n      swap3\n    tag_3542:\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      mul\n        /* \"src/libraries/LogExpMath.sol\":10315:10338  int256 product = ONE_20 */\n      dup2\n        /* \"src/libraries/LogExpMath.sol\":10357:10364  x >= x2 */\n      swap1\n        /* \"src/libraries/LogExpMath.sol\":3503:3532  3_200_000_000_000_000_000_000 */\n      0xad78ebc5ac62000000\n        /* \"src/libraries/LogExpMath.sol\":10357:10364  x >= x2 */\n      dup2\n      slt\n      iszero\n        /* \"src/libraries/LogExpMath.sol\":10353:10457  if (x >= x2) {... */\n      tag_3543\n      jumpi\n        /* \"src/libraries/LogExpMath.sol\":9653:9905  if (x >= x0) {... */\n    tag_3544:\n        /* \"src/libraries/LogExpMath.sol\":10474:10481  x >= x3 */\n      dup1\n        /* \"src/libraries/LogExpMath.sol\":3650:3679  1_600_000_000_000_000_000_000 */\n      0x56bc75e2d631000000\n        /* \"src/libraries/LogExpMath.sol\":10474:10481  x >= x3 */\n      dup5\n      swap3\n      slt\n      iszero\n        /* \"src/libraries/LogExpMath.sol\":10470:10574  if (x >= x3) {... */\n      tag_3545\n      jumpi\n        /* \"src/libraries/LogExpMath.sol\":9653:9905  if (x >= x0) {... */\n    tag_3546:\n        /* \"src/libraries/LogExpMath.sol\":3787:3814  800_000_000_000_000_000_000 */\n      0x2b5e3af16b18800000\n        /* \"src/libraries/LogExpMath.sol\":10591:10598  x >= x4 */\n      dup2\n      slt\n      iszero\n        /* \"src/libraries/LogExpMath.sol\":10587:10691  if (x >= x4) {... */\n      tag_3547\n      jumpi\n        /* \"src/libraries/LogExpMath.sol\":9653:9905  if (x >= x0) {... */\n    tag_3548:\n        /* \"src/libraries/LogExpMath.sol\":3918:3945  400_000_000_000_000_000_000 */\n      0x15af1d78b58c400000\n        /* \"src/libraries/LogExpMath.sol\":10708:10715  x >= x5 */\n      dup2\n      slt\n      iszero\n        /* \"src/libraries/LogExpMath.sol\":10704:10808  if (x >= x5) {... */\n      tag_3549\n      jumpi\n        /* \"src/libraries/LogExpMath.sol\":9653:9905  if (x >= x0) {... */\n    tag_3550:\n        /* \"src/libraries/LogExpMath.sol\":4047:4074  200_000_000_000_000_000_000 */\n      0x0ad78ebc5ac6200000\n        /* \"src/libraries/LogExpMath.sol\":10825:10832  x >= x6 */\n      dup2\n      slt\n      iszero\n        /* \"src/libraries/LogExpMath.sol\":10821:10925  if (x >= x6) {... */\n      tag_3551\n      jumpi\n        /* \"src/libraries/LogExpMath.sol\":9653:9905  if (x >= x0) {... */\n    tag_3552:\n        /* \"src/libraries/LogExpMath.sol\":10942:10949  x >= x7 */\n      dup2\n      dup2\n      slt\n      iszero\n        /* \"src/libraries/LogExpMath.sol\":10938:11042  if (x >= x7) {... */\n      tag_3553\n      jumpi\n        /* \"src/libraries/LogExpMath.sol\":9653:9905  if (x >= x0) {... */\n    tag_3554:\n        /* \"src/libraries/LogExpMath.sol\":4301:4327  50_000_000_000_000_000_000 */\n      0x02b5e3af16b1880000\n        /* \"src/libraries/LogExpMath.sol\":11059:11066  x >= x8 */\n      dup2\n      slt\n      iszero\n        /* \"src/libraries/LogExpMath.sol\":11055:11159  if (x >= x8) {... */\n      tag_3555\n      jumpi\n        /* \"src/libraries/LogExpMath.sol\":9653:9905  if (x >= x0) {... */\n    tag_3556:\n        /* \"src/libraries/LogExpMath.sol\":4428:4454  25_000_000_000_000_000_000 */\n      0x015af1d78b58c40000\n        /* \"src/libraries/LogExpMath.sol\":11176:11183  x >= x9 */\n      dup2\n      slt\n      iszero\n        /* \"src/libraries/LogExpMath.sol\":11172:11276  if (x >= x9) {... */\n      tag_3557\n      jumpi\n        /* \"src/libraries/LogExpMath.sol\":9653:9905  if (x >= x0) {... */\n    tag_3558:\n        /* \"src/libraries/LogExpMath.sol\":12152:12153  2 */\n      0x02\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      dup3\n      dup3\n      dup1\n      mul\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      sdiv\n      sdiv\n        /* \"src/libraries/LogExpMath.sol\":12230:12231  3 */\n      0x03\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      dup4\n      dup4\n      dup4\n      mul\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      sdiv\n      sdiv\n        /* \"src/libraries/LogExpMath.sol\":12308:12309  4 */\n      0x04\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      dup5\n      dup5\n      dup4\n      mul\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      sdiv\n      sdiv\n        /* \"src/libraries/LogExpMath.sol\":12386:12387  5 */\n      0x05\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      dup6\n      dup6\n      dup4\n      mul\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      sdiv\n      sdiv\n        /* \"src/libraries/LogExpMath.sol\":12464:12465  6 */\n      0x06\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      dup7\n      dup7\n      dup4\n      mul\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      sdiv\n      sdiv\n        /* \"src/libraries/LogExpMath.sol\":12542:12543  7 */\n      0x07\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      dup8\n      dup8\n      dup4\n      mul\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      sdiv\n      sdiv\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      swap1\n        /* \"src/libraries/LogExpMath.sol\":12620:12621  8 */\n      0x08\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      dup9\n      dup9\n      dup5\n      mul\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      sdiv\n      sdiv\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      swap3\n        /* \"src/libraries/LogExpMath.sol\":12698:12699  9 */\n      0x09\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      dup10\n      dup10\n      dup7\n      mul\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      sdiv\n      sdiv\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      swap5\n        /* \"src/libraries/LogExpMath.sol\":12776:12778  10 */\n      0x0a\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      dup11\n      dup11\n      dup9\n      mul\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      sdiv\n      sdiv\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      swap7\n        /* \"src/libraries/LogExpMath.sol\":12855:12857  11 */\n      0x0b\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      dup12\n      dup12\n      dup11\n      mul\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      sdiv\n      sdiv\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      swap9\n        /* \"src/libraries/LogExpMath.sol\":12934:12936  12 */\n      0x0c\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      dup13\n      dup13\n      dup13\n      mul\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      sdiv\n      sdiv\n        /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */\n      swap11\n      add\n      add\n      add\n      add\n      add\n      add\n      add\n      add\n      add\n      add\n      add\n      add\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      mul\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      sdiv\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      mul\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      sdiv\n        /* \"src/libraries/LogExpMath.sol\":7623:13596  function exp(int256 x) internal pure returns (int256) {... */\n      swap1\n      jump\t// out\n        /* \"src/libraries/LogExpMath.sol\":11172:11276  if (x >= x9) {... */\n    tag_3557:\n        /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */\n      0x06f5f1775788937937\n        /* \"src/libraries/LogExpMath.sol\":3324:3350  64_000_000_000_000_000_000 */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffea50e2874a73c0000\n      dup4\n      swap3\n      add\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      swap4\n      mul\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      sdiv\n        /* \"src/libraries/LogExpMath.sol\":11172:11276  if (x >= x9) {... */\n      swap2\n      jump(tag_3558)\n        /* \"src/libraries/LogExpMath.sol\":11055:11159  if (x >= x8) {... */\n    tag_3555:\n        /* \"src/libraries/LogExpMath.sol\":4363:4390  164_872_127_070_012_814_685 */\n      0x08f00f760a4b2db55d\n        /* \"src/libraries/LogExpMath.sol\":3324:3350  64_000_000_000_000_000_000 */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffd4a1c50e94e780000\n      dup4\n      swap3\n      add\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      swap4\n      mul\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      sdiv\n        /* \"src/libraries/LogExpMath.sol\":11055:11159  if (x >= x8) {... */\n      swap2\n      jump(tag_3556)\n        /* \"src/libraries/LogExpMath.sol\":10938:11042  if (x >= x7) {... */\n    tag_3553:\n        /* \"src/libraries/LogExpMath.sol\":4236:4263  271_828_182_845_904_523_536 */\n      0x0ebc5fb41746121110\n        /* \"src/libraries/LogExpMath.sol\":3324:3350  64_000_000_000_000_000_000 */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffa9438a1d29cf00000\n      dup4\n      swap3\n      add\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      swap4\n      mul\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      sdiv\n        /* \"src/libraries/LogExpMath.sol\":10938:11042  if (x >= x7) {... */\n      swap2\n      jump(tag_3554)\n        /* \"src/libraries/LogExpMath.sol\":10821:10925  if (x >= x6) {... */\n    tag_3551:\n        /* \"src/libraries/LogExpMath.sol\":4109:4136  738_905_609_893_065_022_723 */\n      0x280e60114edb805d03\n        /* \"src/libraries/LogExpMath.sol\":3324:3350  64_000_000_000_000_000_000 */\n      0xfffffffffffffffffffffffffffffffffffffffffffffff5287143a539e00000\n      dup4\n      swap3\n      add\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      swap4\n      mul\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      sdiv\n        /* \"src/libraries/LogExpMath.sol\":10821:10925  if (x >= x6) {... */\n      swap2\n      jump(tag_3552)\n        /* \"src/libraries/LogExpMath.sol\":10704:10808  if (x >= x5) {... */\n    tag_3549:\n        /* \"src/libraries/LogExpMath.sol\":3980:4009  5_459_815_003_314_423_907_810 */\n      0x0127fa27722cc06cc5e2\n        /* \"src/libraries/LogExpMath.sol\":3324:3350  64_000_000_000_000_000_000 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffea50e2874a73c00000\n      dup4\n      swap3\n      add\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      swap4\n      mul\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      sdiv\n        /* \"src/libraries/LogExpMath.sol\":10704:10808  if (x >= x5) {... */\n      swap2\n      jump(tag_3550)\n        /* \"src/libraries/LogExpMath.sol\":10587:10691  if (x >= x4) {... */\n    tag_3547:\n        /* \"src/libraries/LogExpMath.sol\":3849:3880  298_095_798_704_172_827_474_000 */\n      0x3f1fce3da636ea5cf850\n        /* \"src/libraries/LogExpMath.sol\":3324:3350  64_000_000_000_000_000_000 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffd4a1c50e94e7800000\n      dup4\n      swap3\n      add\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      swap4\n      mul\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      sdiv\n        /* \"src/libraries/LogExpMath.sol\":10587:10691  if (x >= x4) {... */\n      swap2\n      jump(tag_3548)\n        /* \"src/libraries/LogExpMath.sol\":10470:10574  if (x >= x3) {... */\n    tag_3545:\n        /* \"src/libraries/LogExpMath.sol\":3714:3749  888_611_052_050_787_263_676_000_000 */\n      0x02df0ab5a80a22c61ab5a700\n        /* \"src/libraries/LogExpMath.sol\":3324:3350  64_000_000_000_000_000_000 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffa9438a1d29cf000000\n      dup4\n      swap3\n      add\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      swap4\n      mul\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      sdiv\n        /* \"src/libraries/LogExpMath.sol\":10470:10574  if (x >= x3) {... */\n      swap2\n      jump(tag_3546)\n        /* \"src/libraries/LogExpMath.sol\":10353:10457  if (x >= x2) {... */\n    tag_3543:\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      0x01855144814a7ff805980ff0084000\n      swap2\n      pop\n        /* \"src/libraries/LogExpMath.sol\":3324:3350  64_000_000_000_000_000_000 */\n      0xffffffffffffffffffffffffffffffffffffffffffffff5287143a539e000000\n      add\n        /* \"src/libraries/LogExpMath.sol\":10353:10457  if (x >= x2) {... */\n      jump(tag_3544)\n        /* \"src/libraries/LogExpMath.sol\":9653:9905  if (x >= x0) {... */\n    tag_3540:\n        /* \"src/libraries/LogExpMath.sol\":3324:3350  64_000_000_000_000_000_000 */\n      0x03782dace9d9000000\n        /* \"src/libraries/LogExpMath.sol\":9746:9753  x >= x1 */\n      dup2\n      slt\n        /* \"src/libraries/LogExpMath.sol\":3324:3350  64_000_000_000_000_000_000 */\n      tag_3559\n      jumpi\n      0xfffffffffffffffffffffffffffffffffffffffffffffffc87d2531627000000\n      add\n        /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n      0x056bc75e2d63100000\n        /* \"src/libraries/LogExpMath.sol\":9798:9810  firstAN = a1 */\n      dup3\n        /* \"src/libraries/LogExpMath.sol\":3385:3422  6_235_149_080_811_616_882_910_000_000 */\n      0x1425982cf597cd205cef7380\n        /* \"src/libraries/LogExpMath.sol\":9742:9905  if (x >= x1) {... */\n      swap3\n        /* \"src/libraries/LogExpMath.sol\":9653:9905  if (x >= x0) {... */\n      jump(tag_3542)\n        /* \"src/libraries/LogExpMath.sol\":9742:9905  if (x >= x1) {... */\n    tag_3559:\n        /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n      0x056bc75e2d63100000\n        /* \"src/libraries/LogExpMath.sol\":9849:9860  firstAN = 1 */\n      dup3\n        /* \"src/libraries/LogExpMath.sol\":9859:9860  1 */\n      0x01\n        /* \"src/libraries/LogExpMath.sol\":9742:9905  if (x >= x1) {... */\n      swap3\n        /* \"src/libraries/LogExpMath.sol\":9653:9905  if (x >= x0) {... */\n      jump(tag_3542)\n        /* \"src/libraries/LogExpMath.sol\":7812:8204  if (x < 0) {... */\n    tag_3538:\n        /* \"src/libraries/LogExpMath.sol\":8181:8188  exp(-x) */\n      tag_3562\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      swap1\n        /* \"src/libraries/LogExpMath.sol\":7820:7821  0 */\n      0x00\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      sub\n        /* \"src/libraries/LogExpMath.sol\":8181:8188  exp(-x) */\n      tag_96\n      jump\t// in\n    tag_3562:\n        /* \"src/libraries/LogExpMath.sol\":8161:8188  (ONE_18 * ONE_18) / exp(-x) */\n      tag_3159\n      swap1\n      tag_94\n      jump\t// in\n        /* \"src/libraries/LogExpMath.sol\":7719:7773  x >= MIN_NATURAL_EXPONENT && x <= MAX_NATURAL_EXPONENT */\n    tag_3535:\n      pop\n        /* \"src/libraries/LogExpMath.sol\":2685:2691  130e18 */\n      0x070c1cc73b00c80000\n        /* \"src/libraries/LogExpMath.sol\":7748:7773  x <= MAX_NATURAL_EXPONENT */\n      dup2\n      sgt\n      iszero\n        /* \"src/libraries/LogExpMath.sol\":7719:7773  x >= MIN_NATURAL_EXPONENT && x <= MAX_NATURAL_EXPONENT */\n      jump(tag_3536)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_98:\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":18347:18349  10 */\n      0x0a\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      mul\n      swap2\n      dup1\n      dup4\n      sdiv\n        /* \"test/unit/ConstantProductPair.t.sol\":18347:18349  10 */\n      0x0a\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      eq\n      swap1\n      iszero\n      or\n      iszero\n      tag_505\n      jumpi\n      jump\t// out\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5021:5197  function assertEq(int a, int b, string memory err) internal {... */\n    tag_99:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5095:5101  a != b */\n      dup2\n      dup2\n      sub\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5091:5191  if (a != b) {... */\n      tag_3566\n      jumpi\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5021:5197  function assertEq(int a, int b, string memory err) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5091:5191  if (a != b) {... */\n    tag_3566:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5122:5152  log_named_string(\"Error\", err) */\n      0x280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_3568\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5178:5179  b */\n      tag_3197\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap5\n      mload(0x40)\n      swap2\n      dup3\n      swap2\n      0x40\n      dup4\n      mstore\n      0x05\n      0x40\n      dup5\n      add\n      mstore\n      0x4572726f72000000000000000000000000000000000000000000000000000000\n      0x60\n      dup5\n      add\n      mstore\n      0x80\n      0x20\n      dup5\n      add\n      mstore\n      0x80\n      dup4\n      add\n      swap1\n      tag_10\n      jump\t// in\n    tag_3568:\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5122:5152  log_named_string(\"Error\", err) */\n      sub\n      swap1\n      log1\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":5178:5179  b */\n      tag_58\n      jump\t// in\n        /* \"src/libraries/LogCompression.sol\":2015:2401  function toLowResLog(uint256 value) internal pure returns (int256) {... */\n    tag_100:\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      0x5af3107a4000\n        /* \"src/libraries/LogExpMath.sol\":15101:15107  _ln(a) */\n      tag_3570\n        /* \"test/unit/ConstantProductPair.t.sol\":19219:19226  0.25e18 */\n      0x03782dace9d90000\n        /* \"src/libraries/LogExpMath.sol\":15101:15107  _ln(a) */\n      tag_101\n      jump\t// in\n    tag_3570:\n        /* \"src/libraries/LogCompression.sol\":2252:2253  0 */\n      0x00\n        /* \"src/libraries/LogCompression.sol\":2247:2253  ln > 0 */\n      dup2\n      sgt\n        /* \"src/libraries/LogCompression.sol\":2252:2253  0 */\n      iszero\n      tag_3571\n      jumpi\n        /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n      0x2d79883d2000\n        /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */\n      add\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      sdiv\n        /* \"src/libraries/LogCompression.sol\":2015:2401  function toLowResLog(uint256 value) internal pure returns (int256) {... */\n      swap1\n      jump\t// out\n        /* \"src/libraries/LogCompression.sol\":2247:2325  ln > 0 ? ln + _HALF_LOG_COMPRESSION_FACTOR : ln - _HALF_LOG_COMPRESSION_FACTOR */\n    tag_3571:\n        /* \"src/libraries/LogExpMath.sol\":3324:3350  64_000_000_000_000_000_000 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffd28677c2e000\n      add\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      sdiv\n        /* \"src/libraries/LogCompression.sol\":2015:2401  function toLowResLog(uint256 value) internal pure returns (int256) {... */\n      swap1\n      jump\t// out\n        /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n    tag_101:\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      0x0de0b6b3a7640000\n        /* \"src/libraries/LogExpMath.sol\":15343:15353  a < ONE_18 */\n      dup2\n      slt\n        /* \"src/libraries/LogExpMath.sol\":15339:15760  if (a < ONE_18) {... */\n      tag_3574\n      jumpi\n        /* \"src/libraries/LogExpMath.sol\":17686:17689  100 */\n      0x64\n        /* \"src/libraries/LogExpMath.sol\":17231:17245  int256 sum = 0 */\n      swap1\n        /* \"src/libraries/LogExpMath.sol\":17244:17245  0 */\n      0x00\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      0x1600ef3172e58d2e933ec884fde10064c63b5372d805e203c0000000000000\n        /* \"src/libraries/LogExpMath.sol\":17263:17279  a >= a0 * ONE_18 */\n      dup3\n      slt\n      iszero\n        /* \"src/libraries/LogExpMath.sol\":17259:17385  if (a >= a0 * ONE_18) {... */\n      tag_3576\n      jumpi\n        /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n    tag_3577:\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      0x011798004d755d3c8bc8e03204cf44619e000000\n        /* \"src/libraries/LogExpMath.sol\":17403:17419  a >= a1 * ONE_18 */\n      dup3\n      slt\n      iszero\n        /* \"src/libraries/LogExpMath.sol\":17399:17525  if (a >= a1 * ONE_18) {... */\n      tag_3578\n      jumpi\n        /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n    tag_3579:\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      dup3\n      mul\n      swap1\n      dup3\n      mul\n      dup2\n        /* \"src/libraries/LogExpMath.sol\":3567:3612  7_896_296_018_268_069_516_100_000_000_000_000 */\n      0x01855144814a7ff805980ff0084000\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      dup3\n        /* \"src/libraries/LogExpMath.sol\":17846:17853  a >= a2 */\n      dup2\n      dup2\n      slt\n      iszero\n        /* \"src/libraries/LogExpMath.sol\":17842:17936  if (a >= a2) {... */\n      tag_3580\n      jumpi\n        /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n    tag_3581:\n        /* \"src/libraries/LogExpMath.sol\":3714:3749  888_611_052_050_787_263_676_000_000 */\n      pop\n      pop\n      pop\n      0x02df0ab5a80a22c61ab5a700\n        /* \"src/libraries/LogExpMath.sol\":17954:17961  a >= a3 */\n      dup1\n      dup3\n      slt\n      iszero\n        /* \"src/libraries/LogExpMath.sol\":17950:18044  if (a >= a3) {... */\n      tag_3582\n      jumpi\n        /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n    tag_3583:\n        /* \"src/libraries/LogExpMath.sol\":3849:3880  298_095_798_704_172_827_474_000 */\n      pop\n      0x3f1fce3da636ea5cf850\n        /* \"src/libraries/LogExpMath.sol\":18062:18069  a >= a4 */\n      dup1\n      dup3\n      slt\n      iszero\n        /* \"src/libraries/LogExpMath.sol\":18058:18152  if (a >= a4) {... */\n      tag_3584\n      jumpi\n        /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n    tag_3585:\n        /* \"src/libraries/LogExpMath.sol\":3980:4009  5_459_815_003_314_423_907_810 */\n      pop\n      0x0127fa27722cc06cc5e2\n        /* \"src/libraries/LogExpMath.sol\":18170:18177  a >= a5 */\n      dup1\n      dup3\n      slt\n      iszero\n        /* \"src/libraries/LogExpMath.sol\":18166:18260  if (a >= a5) {... */\n      tag_3586\n      jumpi\n        /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n    tag_3587:\n        /* \"src/libraries/LogExpMath.sol\":4109:4136  738_905_609_893_065_022_723 */\n      pop\n      0x280e60114edb805d03\n        /* \"src/libraries/LogExpMath.sol\":18278:18285  a >= a6 */\n      dup1\n      dup3\n      slt\n      iszero\n        /* \"src/libraries/LogExpMath.sol\":18274:18368  if (a >= a6) {... */\n      tag_3588\n      jumpi\n        /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n    tag_3589:\n        /* \"src/libraries/LogExpMath.sol\":4236:4263  271_828_182_845_904_523_536 */\n      pop\n      0x0ebc5fb41746121110\n        /* \"src/libraries/LogExpMath.sol\":18386:18393  a >= a7 */\n      dup1\n      dup3\n      slt\n      iszero\n        /* \"src/libraries/LogExpMath.sol\":18382:18476  if (a >= a7) {... */\n      tag_3590\n      jumpi\n        /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n    tag_3591:\n        /* \"src/libraries/LogExpMath.sol\":4363:4390  164_872_127_070_012_814_685 */\n      pop\n      0x08f00f760a4b2db55d\n        /* \"src/libraries/LogExpMath.sol\":18494:18501  a >= a8 */\n      dup1\n      dup3\n      slt\n      iszero\n        /* \"src/libraries/LogExpMath.sol\":18490:18584  if (a >= a8) {... */\n      tag_3592\n      jumpi\n        /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n    tag_3593:\n        /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */\n      pop\n      0x06f5f1775788937937\n        /* \"src/libraries/LogExpMath.sol\":18602:18609  a >= a9 */\n      dup1\n      dup3\n      slt\n      iszero\n        /* \"src/libraries/LogExpMath.sol\":18598:18692  if (a >= a9) {... */\n      tag_3594\n      jumpi\n        /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n    tag_3595:\n        /* \"src/libraries/LogExpMath.sol\":4619:4646  113_314_845_306_682_631_683 */\n      pop\n      0x06248f33704b286603\n        /* \"src/libraries/LogExpMath.sol\":18710:18718  a >= a10 */\n      dup1\n      dup3\n      slt\n      iszero\n        /* \"src/libraries/LogExpMath.sol\":18706:18803  if (a >= a10) {... */\n      tag_3596\n      jumpi\n        /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n    tag_3597:\n        /* \"src/libraries/LogExpMath.sol\":4748:4775  106_449_445_891_785_942_956 */\n      pop\n      0x05c548670b9510e7ac\n        /* \"src/libraries/LogExpMath.sol\":18821:18829  a >= a11 */\n      dup1\n      dup3\n      slt\n      iszero\n        /* \"src/libraries/LogExpMath.sol\":18817:18914  if (a >= a11) {... */\n      tag_3598\n      jumpi\n        /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n    tag_3599:\n        /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n      pop\n        /* \"src/libraries/LogExpMath.sol\":19470:19508  ((a - ONE_20) * ONE_20) / (a + ONE_20) */\n      tag_3600\n        /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n      0x056bc75e2d63100000\n        /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */\n      swap2\n      dup3\n        /* \"src/libraries/LogExpMath.sol\":3324:3350  64_000_000_000_000_000_000 */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffa9438a1d29cf00000\n        /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */\n      dup2\n      dup4\n      add\n        /* \"src/libraries/LogExpMath.sol\":3324:3350  64_000_000_000_000_000_000 */\n      swap3\n      add\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      mul\n        /* \"src/libraries/LogExpMath.sol\":19470:19508  ((a - ONE_20) * ONE_20) / (a + ONE_20) */\n      tag_95\n      jump\t// in\n    tag_3600:\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      swap1\n      dup1\n      dup3\n      dup1\n      mul\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      sdiv\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      swap2\n      dup2\n      dup4\n      dup3\n      mul\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      sdiv\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      dup3\n      dup5\n      dup3\n      mul\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      sdiv\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      swap2\n        /* \"src/libraries/LogExpMath.sol\":19948:19949  3 */\n      0x03\n        /* \"src/libraries/LogExpMath.sol\":20029:20030  5 */\n      0x05\n        /* \"src/libraries/LogExpMath.sol\":20110:20111  7 */\n      0x07\n        /* \"src/libraries/LogExpMath.sol\":20191:20192  9 */\n      0x09\n        /* \"src/libraries/LogExpMath.sol\":20272:20274  11 */\n      0x0b\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      dup9\n      dup11\n      dup10\n      mul\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      sdiv\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      swap9\n      dup1\n      dup12\n      dup12\n      mul\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      sdiv\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      swap11\n      dup12\n      mul\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      sdiv\n      sdiv\n      swap9\n      sdiv\n      swap7\n      sdiv\n      swap5\n      sdiv\n      swap3\n      sdiv\n        /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */\n      add\n      add\n      add\n      add\n      add\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      0x01\n      shl\n        /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */\n      add\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      sdiv\n        /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n      swap1\n      jump\t// out\n        /* \"src/libraries/LogExpMath.sol\":18817:18914  if (a >= a11) {... */\n    tag_3598:\n        /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n      0x056bc75e2d63100000\n        /* \"src/libraries/LogExpMath.sol\":4686:4711  6_250_000_000_000_000_000 */\n      0x56bc75e2d6310000\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      swap3\n      mul\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      sdiv\n        /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */\n      swap2\n      add\n        /* \"src/libraries/LogExpMath.sol\":18817:18914  if (a >= a11) {... */\n      swap1\n      codesize\n      jump(tag_3599)\n        /* \"src/libraries/LogExpMath.sol\":18706:18803  if (a >= a10) {... */\n    tag_3596:\n        /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n      0x056bc75e2d63100000\n        /* \"src/libraries/LogExpMath.sol\":4556:4582  12_500_000_000_000_000_000 */\n      0xad78ebc5ac620000\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      swap3\n      mul\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      sdiv\n        /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */\n      swap2\n      add\n        /* \"src/libraries/LogExpMath.sol\":18706:18803  if (a >= a10) {... */\n      swap1\n      codesize\n      jump(tag_3597)\n        /* \"src/libraries/LogExpMath.sol\":18598:18692  if (a >= a9) {... */\n    tag_3594:\n        /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n      0x056bc75e2d63100000\n        /* \"src/libraries/LogExpMath.sol\":4428:4454  25_000_000_000_000_000_000 */\n      0x015af1d78b58c40000\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      swap3\n      mul\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      sdiv\n        /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */\n      swap2\n      add\n        /* \"src/libraries/LogExpMath.sol\":18598:18692  if (a >= a9) {... */\n      swap1\n      codesize\n      jump(tag_3595)\n        /* \"src/libraries/LogExpMath.sol\":18490:18584  if (a >= a8) {... */\n    tag_3592:\n        /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n      0x056bc75e2d63100000\n        /* \"src/libraries/LogExpMath.sol\":4301:4327  50_000_000_000_000_000_000 */\n      0x02b5e3af16b1880000\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      swap3\n      mul\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      sdiv\n        /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */\n      swap2\n      add\n        /* \"src/libraries/LogExpMath.sol\":18490:18584  if (a >= a8) {... */\n      swap1\n      codesize\n      jump(tag_3593)\n        /* \"src/libraries/LogExpMath.sol\":18382:18476  if (a >= a7) {... */\n    tag_3590:\n        /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n      0x056bc75e2d63100000\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      dup1\n      swap3\n      mul\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      sdiv\n        /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */\n      swap2\n      add\n        /* \"src/libraries/LogExpMath.sol\":18382:18476  if (a >= a7) {... */\n      swap1\n      codesize\n      jump(tag_3591)\n        /* \"src/libraries/LogExpMath.sol\":18274:18368  if (a >= a6) {... */\n    tag_3588:\n        /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n      0x056bc75e2d63100000\n        /* \"src/libraries/LogExpMath.sol\":4047:4074  200_000_000_000_000_000_000 */\n      0x0ad78ebc5ac6200000\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      swap3\n      mul\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      sdiv\n        /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */\n      swap2\n      add\n        /* \"src/libraries/LogExpMath.sol\":18274:18368  if (a >= a6) {... */\n      swap1\n      codesize\n      jump(tag_3589)\n        /* \"src/libraries/LogExpMath.sol\":18166:18260  if (a >= a5) {... */\n    tag_3586:\n        /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n      0x056bc75e2d63100000\n        /* \"src/libraries/LogExpMath.sol\":3918:3945  400_000_000_000_000_000_000 */\n      0x15af1d78b58c400000\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      swap3\n      mul\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      sdiv\n        /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */\n      swap2\n      add\n        /* \"src/libraries/LogExpMath.sol\":18166:18260  if (a >= a5) {... */\n      swap1\n      codesize\n      jump(tag_3587)\n        /* \"src/libraries/LogExpMath.sol\":18058:18152  if (a >= a4) {... */\n    tag_3584:\n        /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n      0x056bc75e2d63100000\n        /* \"src/libraries/LogExpMath.sol\":3787:3814  800_000_000_000_000_000_000 */\n      0x2b5e3af16b18800000\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      swap3\n      mul\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      sdiv\n        /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */\n      swap2\n      add\n        /* \"src/libraries/LogExpMath.sol\":18058:18152  if (a >= a4) {... */\n      swap1\n      codesize\n      jump(tag_3585)\n        /* \"src/libraries/LogExpMath.sol\":17950:18044  if (a >= a3) {... */\n    tag_3582:\n        /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n      0x056bc75e2d63100000\n        /* \"src/libraries/LogExpMath.sol\":3650:3679  1_600_000_000_000_000_000_000 */\n      0x56bc75e2d631000000\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      swap3\n      mul\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      sdiv\n        /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */\n      swap2\n      add\n        /* \"src/libraries/LogExpMath.sol\":17950:18044  if (a >= a3) {... */\n      swap1\n      codesize\n      jump(tag_3583)\n        /* \"src/libraries/LogExpMath.sol\":17842:17936  if (a >= a2) {... */\n    tag_3580:\n        /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n      0x056bc75e2d63100000\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      swap2\n      swap3\n      swap5\n      pop\n        /* \"src/libraries/LogExpMath.sol\":3503:3532  3_200_000_000_000_000_000_000 */\n      0xad78ebc5ac62000000\n        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n      swap4\n      pop\n      mul\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      sdiv\n        /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */\n      swap2\n      add\n        /* \"src/libraries/LogExpMath.sol\":17842:17936  if (a >= a2) {... */\n      swap1\n      codesize\n      dup1\n      dup1\n      jump(tag_3581)\n        /* \"src/libraries/LogExpMath.sol\":17399:17525  if (a >= a1 * ONE_18) {... */\n    tag_3578:\n        /* \"src/libraries/LogExpMath.sol\":3385:3422  6_235_149_080_811_616_882_910_000_000 */\n      0x1425982cf597cd205cef7380\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      swap1\n      swap2\n      sdiv\n      swap1\n        /* \"src/libraries/LogExpMath.sol\":3324:3350  64_000_000_000_000_000_000 */\n      0x03782dace9d9000000\n        /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */\n      add\n        /* \"src/libraries/LogExpMath.sol\":17399:17525  if (a >= a1 * ONE_18) {... */\n      jump(tag_3579)\n        /* \"src/libraries/LogExpMath.sol\":17259:17385  if (a >= a0 * ONE_18) {... */\n    tag_3576:\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      pop\n        /* \"src/libraries/LogExpMath.sol\":3187:3261  38_877_084_059_945_950_922_200_000_000_000_000_000_000_000_000_000_000_000 */\n      0x0195e54c5dd42177f53a27172fa9ec630262827000000000\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      swap1\n      sdiv\n        /* \"src/libraries/LogExpMath.sol\":3125:3152  128_000_000_000_000_000_000 */\n      0x06f05b59d3b2000000\n        /* \"src/libraries/LogExpMath.sol\":17259:17385  if (a >= a0 * ONE_18) {... */\n      jump(tag_3577)\n        /* \"src/libraries/LogExpMath.sol\":15339:15760  if (a < ONE_18) {... */\n    tag_3574:\n        /* \"src/libraries/LogExpMath.sol\":15722:15743  (ONE_18 * ONE_18) / a */\n      tag_3601\n        /* \"src/libraries/LogExpMath.sol\":15718:15744  _ln((ONE_18 * ONE_18) / a) */\n      tag_3602\n        /* \"src/libraries/LogExpMath.sol\":15722:15743  (ONE_18 * ONE_18) / a */\n      swap2\n      tag_94\n      jump\t// in\n    tag_3601:\n        /* \"src/libraries/LogExpMath.sol\":15718:15744  _ln((ONE_18 * ONE_18) / a) */\n      tag_101\n      jump\t// in\n    tag_3602:\n      0x00\n        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n      sub\n        /* \"src/libraries/LogExpMath.sol\":15709:15745  return (-_ln((ONE_18 * ONE_18) / a)) */\n      swap1\n      jump\t// out\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_102:\n      swap1\n      0x06\n      signextend\n      swap1\n      0x06\n      signextend\n      sub\n      swap1\n      0x7fffffffffffff\n      dup3\n      sgt\n      0xffffffffffffffffffffffffffffffffffffffffffffffffff80000000000000\n      dup4\n      slt\n      or\n      tag_505\n      jumpi\n      jump\t// out\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":10722:10981  function assertLt(uint a, uint b) internal {... */\n    tag_103:\n        /* \"test/unit/ConstantProductPair.t.sol\":23630:23639  1.0025e18 */\n      0x0de9987043544000\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":10779:10785  a >= b */\n      dup1\n      dup3\n      lt\n      iszero\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":10775:10975  if (a >= b) {... */\n      tag_3605\n      jumpi\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":10722:10981  function assertLt(uint a, uint b) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":10775:10975  if (a >= b) {... */\n    tag_3605:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_3195\n      swap1\n      0x40\n      swap1\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":10806:10846  log(\"Error: a < b not satisfied [uint]\") */\n      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x80\n      dup4\n      mload\n      0x20\n      dup2\n      mstore\n      0x21\n      0x20\n      dup3\n      add\n      mstore\n      0x4572726f723a2061203c2062206e6f7420736174697366696564205b75696e74\n      dup6\n      dup3\n      add\n      mstore\n      0x5d00000000000000000000000000000000000000000000000000000000000000\n      0x60\n      dup3\n      add\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":10806:10846  log(\"Error: a < b not satisfied [uint]\") */\n      log1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      mload\n      swap4\n      dup3\n      dup6\n      mstore\n      tag_3355\n      dup4\n      dup7\n      add\n      0x40\n      swap1\n      0x09\n      dup2\n      mstore\n      0x202056616c756520610000000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      add\n      swap1\n      jump\n    tag_104:\n      mload(0x40)\n      swap1\n        /* \"lib/forge-std/src/StdStorage.sol\":5052:5062  self._keys */\n      0x07\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      dup1\n      dup4\n      mstore\n      dup3\n      0x20\n      swap2\n      dup3\n      dup3\n      add\n      swap1\n        /* \"lib/forge-std/src/StdStorage.sol\":5052:5062  self._keys */\n      0x07\n      0x00\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n      0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688\n      swap4\n      0x00\n      swap1\n    tag_3610:\n      dup3\n      dup3\n      lt\n      tag_3611\n      jumpi\n      pop\n      pop\n      pop\n      tag_3197\n      swap3\n      pop\n      sub\n      dup4\n      tag_6\n      jump\t// in\n    tag_3611:\n      dup6\n      sload\n      dup5\n      mstore\n      0x01\n      swap6\n      dup7\n      add\n      swap6\n      dup9\n      swap6\n      pop\n      swap4\n      dup2\n      add\n      swap4\n      swap1\n      swap2\n      add\n      swap1\n      jump(tag_3610)\n    tag_107:\n      swap1\n      swap2\n      dup3\n      mload\n      0x20\n      dup1\n      swap5\n      add\n      swap1\n      0x00\n    tag_3614:\n      dup6\n      dup3\n      dup3\n      lt\n      tag_3615\n      jumpi\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      add\n      swap1\n      jump\t// out\n    tag_3615:\n      dup4\n      mload\n      dup7\n      mstore\n      swap5\n      dup6\n      add\n      swap5\n      swap1\n      swap3\n      add\n      swap2\n      0x01\n      add\n      jump(tag_3614)\n        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n    tag_108:\n      pop\n      0xc4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x6f\n      0x24\n      dup3\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      0x73746453746f726167652066696e642853746453746f72616765293a20506163\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x44\n      dup3\n      add\n        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      mstore\n      0x6b656420736c6f742e205468697320776f756c642063617573652064616e6765\n      0x64\n      dup3\n      add\n      mstore\n      0x726f7573206f76657277726974696e6720616e642063757272656e746c792069\n      0x84\n      dup3\n      add\n      mstore\n      0x736e277420737570706f727465642e0000000000000000000000000000000000\n      0xa4\n      dup3\n      add\n      mstore\n      revert\n    tag_109:\n        /* \"lib/forge-std/src/StdStorage.sol\":5052:5062  self._keys */\n      0x07\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      0x00\n        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      dup1\n        /* \"lib/forge-std/src/StdStorage.sol\":5052:5062  self._keys */\n      0x07\n        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      sstore\n      dup2\n      tag_3617\n      jumpi\n      pop\n      pop\n      jump\t// out\n    tag_3617:\n        /* \"lib/forge-std/src/StdStorage.sol\":5052:5062  self._keys */\n      0x07\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      mstore\n      0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688\n        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      swap2\n      dup3\n      add\n      swap2\n    tag_3619:\n      dup3\n      dup2\n      lt\n      tag_3620\n      jumpi\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_3620:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      dup2\n      sstore\n        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      0x01\n      add\n      jump(tag_3619)\n        /* \"lib/forge-std/src/StdStorage.sol\":1264:4469  function find(StdStorage storage self) internal returns (uint256) {... */\n    tag_111:\n        /* \"lib/forge-std/src/StdStorage.sol\":1354:1366  self._target */\n      0x0a\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      0x00\n        /* \"lib/forge-std/src/StdStorage.sol\":1390:1399  self._sig */\n      0x08\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      0xe0\n      shl\n        /* \"lib/forge-std/src/StdStorage.sol\":1431:1442  self._depth */\n      0x09\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sload\n      swap1\n      tag_3622\n      tag_104\n      jump\t// in\n    tag_3622:\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      dup5\n      mstore\n        /* \"lib/forge-std/src/StdStorage.sol\":1536:1546  self.finds */\n      0x06\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n      mstore\n      0x40\n      dup5\n      keccak256\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup3\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup6\n      mstore\n      0x20\n      mstore\n      0x40\n      dup5\n      keccak256\n      mload(0x40)\n      0x20\n        /* \"lib/forge-std/src/StdStorage.sol\":1568:1602  abi.encodePacked(ins, field_depth) */\n      dup2\n      add\n      swap1\n      tag_3623\n      dup2\n      tag_3624\n      dup9\n      dup9\n      dup7\n      tag_107\n      jump\t// in\n    tag_3624:\n      sub\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      dup2\n      add\n      dup4\n      mstore\n      dup3\n      tag_6\n      jump\t// in\n    tag_3623:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n        /* \"lib/forge-std/src/StdStorage.sol\":1558:1603  keccak256(abi.encodePacked(ins, field_depth)) */\n      swap1\n      keccak256\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup6\n      mstore\n      0x20\n      mstore\n      0xff\n      0x40\n      dup6\n      keccak256\n      sload\n      and\n        /* \"lib/forge-std/src/StdStorage.sol\":1532:1706  if (self.finds[who][fsig][keccak256(abi.encodePacked(ins, field_depth))]) {... */\n      tag_3625\n      jumpi\n        /* \"lib/forge-std/src/StdStorage.sol\":1735:1771  abi.encodePacked(fsig, flatten(ins)) */\n      tag_3624\n      tag_3628\n        /* \"lib/forge-std/src/StdStorage.sol\":1758:1770  flatten(ins) */\n      tag_3629\n      dup5\n      tag_113\n      jump\t// in\n    tag_3629:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"lib/forge-std/src/StdStorage.sol\":1735:1771  abi.encodePacked(fsig, flatten(ins)) */\n      swap3\n      dup4\n      swap2\n      dup6\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n        /* \"lib/forge-std/src/StdStorage.sol\":1735:1771  abi.encodePacked(fsig, flatten(ins)) */\n      dup5\n      add\n      tag_12\n      jump\t// in\n    tag_3628:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"lib/forge-std/src/StdStorage.sol\":1781:1792  vm.record() */\n      extcodesize\n      iszero\n      tag_249\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      0x266cf10900000000000000000000000000000000000000000000000000000000\n        /* \"lib/forge-std/src/StdStorage.sol\":1781:1792  vm.record() */\n      dup2\n      mstore\n      dup6\n      dup2\n        /* \"lib/forge-std/src/StdStorage.sol\":1431:1442  self._depth */\n      0x04\n        /* \"lib/forge-std/src/StdStorage.sol\":1781:1792  vm.record() */\n      dup2\n      dup4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"lib/forge-std/src/StdStorage.sol\":1781:1792  vm.record() */\n      gas\n      call\n      dup1\n      iszero\n      tag_376\n      jumpi\n      tag_3634\n      jumpi\n        /* \"lib/forge-std/src/StdStorage.sol\":1264:4469  function find(StdStorage storage self) internal returns (uint256) {... */\n    tag_3635:\n        /* \"lib/forge-std/src/StdStorage.sol\":1862:1882  who.staticcall(cald) */\n      pop\n      dup5\n      dup1\n      dup3\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n        /* \"lib/forge-std/src/StdStorage.sol\":1735:1771  abi.encodePacked(fsig, flatten(ins)) */\n      dup5\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup11\n      and\n        /* \"lib/forge-std/src/StdStorage.sol\":1862:1882  who.staticcall(cald) */\n      gas\n      staticcall\n      pop\n      tag_3636\n      tag_13\n      jump\t// in\n    tag_3636:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      dup6\n      sub\n      tag_2588\n      jumpi\n        /* \"lib/forge-std/src/StdStorage.sol\":1903:1941  bytesToBytes32(rdat, 32 * field_depth) */\n      tag_3639\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      dup6\n        /* \"lib/forge-std/src/StdCheats.sol\":19864:19872  stdstore */\n      0x05\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      shl\n        /* \"lib/forge-std/src/StdStorage.sol\":1903:1941  bytesToBytes32(rdat, 32 * field_depth) */\n      swap1\n      tag_112\n      jump\t// in\n    tag_3639:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"lib/forge-std/src/StdStorage.sol\":1990:2015  vm.accesses(address(who)) */\n      swap2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x65bc948100000000000000000000000000000000000000000000000000000000\n        /* \"lib/forge-std/src/StdStorage.sol\":1990:2015  vm.accesses(address(who)) */\n      dup4\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup9\n      and\n        /* \"lib/forge-std/src/StdStorage.sol\":1431:1442  self._depth */\n      0x04\n        /* \"lib/forge-std/src/StdStorage.sol\":1990:2015  vm.accesses(address(who)) */\n      dup5\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"lib/forge-std/src/StdStorage.sol\":1990:2015  vm.accesses(address(who)) */\n      dup7\n      dup4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n        /* \"lib/forge-std/src/StdStorage.sol\":1990:2015  vm.accesses(address(who)) */\n      dup2\n      dup4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"lib/forge-std/src/StdStorage.sol\":1990:2015  vm.accesses(address(who)) */\n      gas\n      call\n      swap3\n      dup4\n      iszero\n      tag_1089\n      jumpi\n      dup8\n      swap4\n      tag_3642\n      jumpi\n        /* \"lib/forge-std/src/StdStorage.sol\":1264:4469  function find(StdStorage storage self) internal returns (uint256) {... */\n    tag_3643:\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      mload\n        /* \"lib/forge-std/src/StdStorage.sol\":1536:1546  self.finds */\n      0x01\n        /* \"lib/forge-std/src/StdStorage.sol\":2029:2046  reads.length == 1 */\n      dup2\n      sub\n        /* \"lib/forge-std/src/StdStorage.sol\":1536:1546  self.finds */\n      tag_3644\n      jumpi\n        /* \"lib/forge-std/src/StdStorage.sol\":2090:2098  reads[0] */\n      pop\n      pop\n      swap1\n        /* \"lib/forge-std/src/StdStorage.sol\":2077:2099  vm.load(who, reads[0]) */\n      tag_3646\n        /* \"lib/forge-std/src/StdStorage.sol\":2090:2098  reads[0] */\n      swap2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n        /* \"lib/forge-std/src/StdStorage.sol\":2090:2098  reads[0] */\n      tag_3647\n      dup4\n      tag_83\n      jump\t// in\n    tag_3647:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n      mload(0x40)\n      0x667f9d7000000000000000000000000000000000000000000000000000000000\n        /* \"lib/forge-std/src/StdStorage.sol\":2077:2099  vm.load(who, reads[0]) */\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup12\n      and\n        /* \"lib/forge-std/src/StdStorage.sol\":1431:1442  self._depth */\n      0x04\n        /* \"lib/forge-std/src/StdStorage.sol\":2077:2099  vm.load(who, reads[0]) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n      0x24\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap2\n      swap1\n      swap2\n      mstore\n      swap4\n      dup5\n      swap1\n      dup2\n      swap1\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      0x44\n      dup3\n      add\n      swap1\n      jump\n        /* \"lib/forge-std/src/StdStorage.sol\":2077:2099  vm.load(who, reads[0]) */\n    tag_3646:\n      sub\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"lib/forge-std/src/StdStorage.sol\":2077:2099  vm.load(who, reads[0]) */\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_1089\n      jumpi\n      dup8\n      swap2\n      tag_3650\n      jumpi\n        /* \"lib/forge-std/src/StdStorage.sol\":2025:4093  if (reads.length == 1) {... */\n    tag_3651:\n        /* \"lib/forge-std/src/StdStorage.sol\":2667:2675  reads[0] */\n      tag_3652\n        /* \"lib/forge-std/src/StdStorage.sol\":2117:2135  curr == bytes32(0) */\n      swap4\n      pop\n      dup2\n      iszero\n        /* \"lib/forge-std/src/StdStorage.sol\":2113:2219  if (curr == bytes32(0)) {... */\n      tag_3653\n      jumpi\n        /* \"lib/forge-std/src/StdStorage.sol\":2025:4093  if (reads.length == 1) {... */\n    tag_3654:\n        /* \"lib/forge-std/src/StdStorage.sol\":2236:2248  fdat != curr */\n      sub\n        /* \"lib/forge-std/src/StdStorage.sol\":2232:2470  if (fdat != curr) {... */\n      tag_3655\n      jumpi\n        /* \"lib/forge-std/src/StdStorage.sol\":2025:4093  if (reads.length == 1) {... */\n    tag_3656:\n        /* \"lib/forge-std/src/StdStorage.sol\":2488:2574  SlotFound(who, fsig, keccak256(abi.encodePacked(ins, field_depth)), uint256(reads[0])) */\n      0x9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup9\n        /* \"lib/forge-std/src/StdStorage.sol\":2488:2574  SlotFound(who, fsig, keccak256(abi.encodePacked(ins, field_depth)), uint256(reads[0])) */\n      tag_3657\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      0x20\n        /* \"lib/forge-std/src/StdStorage.sol\":2519:2553  abi.encodePacked(ins, field_depth) */\n      dup2\n      add\n      swap1\n      tag_3658\n      dup2\n      tag_3624\n      dup14\n      dup14\n      dup7\n      tag_107\n      jump\t// in\n    tag_3658:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n        /* \"lib/forge-std/src/StdStorage.sol\":2509:2554  keccak256(abi.encodePacked(ins, field_depth)) */\n      swap1\n      keccak256\n        /* \"lib/forge-std/src/StdStorage.sol\":2564:2572  reads[0] */\n      tag_3660\n      dup7\n      tag_83\n      jump\t// in\n    tag_3660:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n      swap1\n      dup9\n      mload(0x40)\n      swap6\n      dup7\n      swap6\n      and\n        /* \"lib/forge-std/src/StdStorage.sol\":2488:2574  SlotFound(who, fsig, keccak256(abi.encodePacked(ins, field_depth)), uint256(reads[0])) */\n      dup6\n        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      swap1\n      swap5\n      swap4\n      swap3\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      0x60\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      0x80\n      dup6\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap9\n      and\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      dup5\n      mstore\n      and\n        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      0x20\n      dup4\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      0x40\n      dup3\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      jump\n        /* \"lib/forge-std/src/StdStorage.sol\":2488:2574  SlotFound(who, fsig, keccak256(abi.encodePacked(ins, field_depth)), uint256(reads[0])) */\n    tag_3657:\n      sub\n      swap1\n      log1\n        /* \"lib/forge-std/src/StdStorage.sol\":2667:2675  reads[0] */\n      tag_83\n      jump\t// in\n    tag_3652:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup7\n      and\n      0x00\n      mstore\n        /* \"lib/forge-std/src/StdCheats.sol\":19864:19872  stdstore */\n      0x05\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup4\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup7\n      mstore\n      0x20\n      mstore\n      0x40\n      dup6\n      keccak256\n      mload(0x40)\n      0x20\n        /* \"lib/forge-std/src/StdStorage.sol\":2620:2654  abi.encodePacked(ins, field_depth) */\n      dup2\n      add\n      swap1\n      tag_3661\n      dup2\n      tag_3624\n      dup10\n      dup10\n      dup7\n      tag_107\n      jump\t// in\n    tag_3661:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n        /* \"lib/forge-std/src/StdStorage.sol\":2610:2655  keccak256(abi.encodePacked(ins, field_depth)) */\n      swap1\n      keccak256\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup7\n      mstore\n      0x20\n      mstore\n      0x40\n      dup6\n      keccak256\n        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      sstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      0x00\n      mstore\n        /* \"lib/forge-std/src/StdStorage.sol\":1536:1546  self.finds */\n      0x06\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup3\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup6\n      mstore\n      0x20\n      mstore\n      0x40\n      dup5\n      keccak256\n      mload(0x40)\n      0x20\n        /* \"lib/forge-std/src/StdStorage.sol\":2722:2756  abi.encodePacked(ins, field_depth) */\n      dup2\n      add\n      swap1\n      tag_3663\n      dup2\n      tag_3624\n      dup9\n      dup9\n      dup7\n      tag_107\n      jump\t// in\n    tag_3663:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n        /* \"lib/forge-std/src/StdStorage.sol\":2712:2757  keccak256(abi.encodePacked(ins, field_depth)) */\n      swap1\n      keccak256\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup6\n      mstore\n      0x20\n      mstore\n      0x40\n      dup5\n      keccak256\n        /* \"lib/forge-std/src/StdStorage.sol\":1536:1546  self.finds */\n      0x01\n        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n        /* \"lib/forge-std/src/StdStorage.sol\":2025:4093  if (reads.length == 1) {... */\n    tag_3665:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      0x00\n      mstore\n        /* \"lib/forge-std/src/StdStorage.sol\":1536:1546  self.finds */\n      0x06\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup3\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup6\n      mstore\n      0x20\n      mstore\n      0x40\n      dup5\n      keccak256\n      mload(0x40)\n      0x20\n        /* \"lib/forge-std/src/StdStorage.sol\":4156:4190  abi.encodePacked(ins, field_depth) */\n      dup2\n      add\n      swap1\n      tag_3666\n      dup2\n      tag_3624\n      dup9\n      dup9\n      dup7\n      tag_107\n      jump\t// in\n    tag_3666:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n        /* \"lib/forge-std/src/StdStorage.sol\":4146:4191  keccak256(abi.encodePacked(ins, field_depth)) */\n      swap1\n      keccak256\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup6\n      mstore\n      0x20\n      mstore\n      0xff\n      0x40\n      dup6\n      keccak256\n      sload\n      and\n        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      iszero\n      tag_3668\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      0x40\n        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      swap6\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n        /* \"lib/forge-std/src/StdStorage.sol\":1354:1366  self._target */\n      0x0a\n        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      sload\n      and\n        /* \"lib/forge-std/src/StdStorage.sol\":1354:1366  self._target */\n      0x0a\n        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      sstore\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000\n        /* \"lib/forge-std/src/StdStorage.sol\":1390:1399  self._sig */\n      0x08\n        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      sload\n      and\n        /* \"lib/forge-std/src/StdStorage.sol\":1390:1399  self._sig */\n      0x08\n        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      sstore\n        /* \"lib/forge-std/src/StdStorage.sol\":4331:4348  delete self._keys */\n      tag_3670\n      tag_109\n      jump\t// in\n    tag_3670:\n      0x00\n        /* \"lib/forge-std/src/StdStorage.sol\":1431:1442  self._depth */\n      0x09\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sstore\n      and\n      0x00\n      mstore\n        /* \"lib/forge-std/src/StdCheats.sol\":19864:19872  stdstore */\n      0x05\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup6\n      0x00\n      keccak256\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      swap2\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup5\n      mstore\n      0x20\n      mstore\n        /* \"lib/forge-std/src/StdStorage.sol\":4426:4460  abi.encodePacked(ins, field_depth) */\n      tag_3624\n      tag_3672\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup6\n      dup6\n      keccak256\n      swap4\n      dup7\n      mload\n        /* \"lib/forge-std/src/StdStorage.sol\":4426:4460  abi.encodePacked(ins, field_depth) */\n      swap3\n      dup4\n      swap2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n        /* \"lib/forge-std/src/StdStorage.sol\":4426:4460  abi.encodePacked(ins, field_depth) */\n      dup4\n      add\n      swap6\n      dup7\n      tag_107\n      jump\t// in\n    tag_3672:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n        /* \"lib/forge-std/src/StdStorage.sol\":4416:4461  keccak256(abi.encodePacked(ins, field_depth)) */\n      swap1\n      keccak256\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup3\n      mstore\n      0x20\n      mstore\n      keccak256\n      sload\n        /* \"lib/forge-std/src/StdStorage.sol\":1264:4469  function find(StdStorage storage self) internal returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n    tag_3668:\n      0x84\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n        /* \"lib/forge-std/src/StdStorage.sol\":1431:1442  self._depth */\n      0x04\n        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      dup3\n      add\n      mstore\n      0x2f\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      dup3\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      0x73746453746f726167652066696e642853746453746f72616765293a20536c6f\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x44\n      dup3\n      add\n        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      mstore\n      0x74287329206e6f7420666f756e642e0000000000000000000000000000000000\n      0x64\n      dup3\n      add\n      mstore\n      revert\n        /* \"lib/forge-std/src/StdStorage.sol\":2232:2470  if (fdat != curr) {... */\n    tag_3655:\n        /* \"lib/forge-std/src/StdStorage.sol\":2268:2455  require(... */\n      tag_3673\n      tag_108\n      jump\t// in\n    tag_3673:\n        /* \"lib/forge-std/src/StdStorage.sol\":2232:2470  if (fdat != curr) {... */\n      jump(tag_3656)\n        /* \"lib/forge-std/src/StdStorage.sol\":2113:2219  if (curr == bytes32(0)) {... */\n    tag_3653:\n        /* \"lib/forge-std/src/StdStorage.sol\":2160:2204  WARNING_UninitedSlot(who, uint256(reads[0])) */\n      0x080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"lib/forge-std/src/StdStorage.sol\":2194:2202  reads[0] */\n      dup11\n        /* \"lib/forge-std/src/StdStorage.sol\":2160:2204  WARNING_UninitedSlot(who, uint256(reads[0])) */\n      tag_3674\n        /* \"lib/forge-std/src/StdStorage.sol\":2194:2202  reads[0] */\n      tag_3675\n      dup8\n      tag_83\n      jump\t// in\n    tag_3675:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n      mload(0x40)\n      swap4\n      dup5\n      swap4\n      and\n        /* \"lib/forge-std/src/StdStorage.sol\":2160:2204  WARNING_UninitedSlot(who, uint256(reads[0])) */\n      dup4\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      0x20\n      swap1\n      swap4\n      swap3\n      swap2\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      0x40\n      dup3\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap6\n      and\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      dup2\n      mstore\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      jump\n        /* \"lib/forge-std/src/StdStorage.sol\":2160:2204  WARNING_UninitedSlot(who, uint256(reads[0])) */\n    tag_3674:\n      sub\n      swap1\n      log1\n        /* \"lib/forge-std/src/StdStorage.sol\":2113:2219  if (curr == bytes32(0)) {... */\n      jump(tag_3654)\n        /* \"lib/forge-std/src/StdStorage.sol\":2077:2099  vm.load(who, reads[0]) */\n    tag_3650:\n      swap1\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n        /* \"lib/forge-std/src/StdStorage.sol\":2077:2099  vm.load(who, reads[0]) */\n      dup4\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n        /* \"lib/forge-std/src/StdStorage.sol\":2077:2099  vm.load(who, reads[0]) */\n      gt\n      tag_3676\n      jumpi\n    tag_3677:\n      dup2\n      tag_3678\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n        /* \"lib/forge-std/src/StdStorage.sol\":2077:2099  vm.load(who, reads[0]) */\n      swap4\n      dup4\n      tag_6\n      jump\t// in\n    tag_3678:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n        /* \"lib/forge-std/src/StdStorage.sol\":2667:2675  reads[0] */\n      tag_3652\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap3\n      mload\n        /* \"lib/forge-std/src/StdStorage.sol\":2077:2099  vm.load(who, reads[0]) */\n      swap1\n      jump(tag_3651)\n    tag_3676:\n      returndatasize\n      swap2\n      pop\n      jump(tag_3677)\n        /* \"lib/forge-std/src/StdStorage.sol\":2025:4093  if (reads.length == 1) {... */\n    tag_3644:\n        /* \"lib/forge-std/src/StdStorage.sol\":1536:1546  self.finds */\n      0x01\n        /* \"lib/forge-std/src/StdStorage.sol\":2786:2802  reads.length > 1 */\n      swap2\n      swap7\n      swap4\n      swap6\n      swap3\n      pop\n      swap9\n      swap4\n      swap8\n      swap7\n      swap9\n      gt\n        /* \"lib/forge-std/src/StdStorage.sol\":2782:4093  if (reads.length > 1) {... */\n      0x00\n        /* \"lib/forge-std/src/StdStorage.sol\":1536:1546  self.finds */\n      eq\n      tag_3681\n      jumpi\n        /* \"lib/forge-std/src/StdStorage.sol\":2823:2836  uint256 i = 0 */\n      dup8\n        /* \"lib/forge-std/src/StdStorage.sol\":2856:2859  i++ */\n    tag_3683:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup5\n      mload\n        /* \"lib/forge-std/src/StdStorage.sol\":2838:2854  i < reads.length */\n      dup2\n      lt\n      iszero\n      tag_3684\n      jumpi\n        /* \"lib/forge-std/src/StdStorage.sol\":2894:2916  vm.load(who, reads[i]) */\n      tag_3686\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n        /* \"lib/forge-std/src/StdStorage.sol\":2907:2915  reads[i] */\n      tag_3687\n      dup4\n      dup9\n      tag_84\n      jump\t// in\n    tag_3687:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n      mload(0x40)\n      0x667f9d7000000000000000000000000000000000000000000000000000000000\n        /* \"lib/forge-std/src/StdStorage.sol\":2894:2916  vm.load(who, reads[i]) */\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup12\n      and\n        /* \"lib/forge-std/src/StdStorage.sol\":1431:1442  self._depth */\n      0x04\n        /* \"lib/forge-std/src/StdStorage.sol\":2894:2916  vm.load(who, reads[i]) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n      0x24\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap2\n      swap1\n      swap2\n      mstore\n      swap2\n      dup3\n      swap1\n      dup2\n      swap1\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      0x44\n      dup3\n      add\n      swap1\n      jump\n        /* \"lib/forge-std/src/StdStorage.sol\":2894:2916  vm.load(who, reads[i]) */\n    tag_3686:\n      sub\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"lib/forge-std/src/StdStorage.sol\":2894:2916  vm.load(who, reads[i]) */\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_3688\n      jumpi\n      dup11\n      swap2\n      tag_3690\n      jumpi\n        /* \"lib/forge-std/src/StdStorage.sol\":2856:2859  i++ */\n    tag_3691:\n        /* \"lib/forge-std/src/StdStorage.sol\":2938:2956  prev == bytes32(0) */\n      pop\n      dup1\n      iszero\n        /* \"lib/forge-std/src/StdStorage.sol\":2934:3048  if (prev == bytes32(0)) {... */\n      tag_3692\n      jumpi\n        /* \"lib/forge-std/src/StdStorage.sol\":2856:2859  i++ */\n    tag_3693:\n        /* \"lib/forge-std/src/StdStorage.sol\":3104:3112  reads[i] */\n      dup10\n      tag_3694\n      dup4\n      dup9\n      tag_84\n      jump\t// in\n    tag_3694:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"lib/forge-std/src/StdStorage.sol\":3090:3133  vm.store(who, reads[i], bytes32(hex\"1337\")) */\n      extcodesize\n      iszero\n      tag_255\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"lib/forge-std/src/StdStorage.sol\":3090:3133  vm.store(who, reads[i], bytes32(hex\"1337\")) */\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x70ca10bb00000000000000000000000000000000000000000000000000000000\n        /* \"lib/forge-std/src/StdStorage.sol\":3090:3133  vm.store(who, reads[i], bytes32(hex\"1337\")) */\n      dup3\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup12\n      and\n        /* \"lib/forge-std/src/StdStorage.sol\":1431:1442  self._depth */\n      0x04\n        /* \"lib/forge-std/src/StdStorage.sol\":3090:3133  vm.store(who, reads[i], bytes32(hex\"1337\")) */\n      dup4\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      dup3\n      add\n      mstore\n        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      0x1337000000000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x44\n      dup3\n      add\n      mstore\n        /* \"lib/forge-std/src/StdStorage.sol\":3090:3133  vm.store(who, reads[i], bytes32(hex\"1337\")) */\n      dup2\n      dup2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x64\n        /* \"lib/forge-std/src/StdStorage.sol\":3090:3133  vm.store(who, reads[i], bytes32(hex\"1337\")) */\n      dup2\n      dup4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"lib/forge-std/src/StdStorage.sol\":3090:3133  vm.store(who, reads[i], bytes32(hex\"1337\")) */\n      gas\n      call\n      dup1\n      iszero\n      tag_219\n      jumpi\n      tag_3699\n      jumpi\n        /* \"lib/forge-std/src/StdStorage.sol\":2856:2859  i++ */\n    tag_3700:\n        /* \"lib/forge-std/src/StdStorage.sol\":3256:3276  who.staticcall(cald) */\n      pop\n      dup1\n      dup9\n      mload\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n        /* \"lib/forge-std/src/StdStorage.sol\":1735:1771  abi.encodePacked(fsig, flatten(ins)) */\n      dup11\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup13\n      and\n        /* \"lib/forge-std/src/StdStorage.sol\":3256:3276  who.staticcall(cald) */\n      gas\n      staticcall\n      tag_3701\n      tag_13\n      jump\t// in\n    tag_3701:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup7\n      and\n      dup7\n      sub\n      tag_3702\n      jumpi\n        /* \"lib/forge-std/src/StdStorage.sol\":3305:3343  bytesToBytes32(rdat, 32 * field_depth) */\n      tag_3704\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap1\n      dup7\n        /* \"lib/forge-std/src/StdCheats.sol\":19864:19872  stdstore */\n      0x05\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      shl\n        /* \"lib/forge-std/src/StdStorage.sol\":3305:3343  bytesToBytes32(rdat, 32 * field_depth) */\n      swap1\n      tag_112\n      jump\t// in\n    tag_3704:\n        /* \"lib/forge-std/src/StdStorage.sol\":3384:3421  success && fdat == bytes32(hex\"1337\") */\n      dup2\n      tag_3705\n      jumpi\n        /* \"lib/forge-std/src/StdStorage.sol\":2856:2859  i++ */\n    tag_3706:\n        /* \"lib/forge-std/src/StdStorage.sol\":3380:3909  if (success && fdat == bytes32(hex\"1337\")) {... */\n      pop\n      tag_3707\n      jumpi\n        /* \"lib/forge-std/src/StdStorage.sol\":3940:3948  reads[i] */\n      dup10\n      swap1\n      tag_3709\n      dup4\n      dup9\n      tag_84\n      jump\t// in\n    tag_3709:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n        /* \"lib/forge-std/src/StdStorage.sol\":3926:3955  vm.store(who, reads[i], prev) */\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"lib/forge-std/src/StdStorage.sol\":3926:3955  vm.store(who, reads[i], prev) */\n      extcodesize\n      iszero\n      tag_291\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      0x70ca10bb00000000000000000000000000000000000000000000000000000000\n        /* \"lib/forge-std/src/StdStorage.sol\":3926:3955  vm.store(who, reads[i], prev) */\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup12\n      and\n        /* \"lib/forge-std/src/StdStorage.sol\":1431:1442  self._depth */\n      0x04\n        /* \"lib/forge-std/src/StdStorage.sol\":3926:3955  vm.store(who, reads[i], prev) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      dup2\n      dup2\n      0x64\n      dup2\n      dup4\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"lib/forge-std/src/StdStorage.sol\":3926:3955  vm.store(who, reads[i], prev) */\n      gas\n      call\n      dup1\n      iszero\n      tag_219\n      jumpi\n      tag_3715\n      jumpi\n        /* \"lib/forge-std/src/StdStorage.sol\":2856:2859  i++ */\n    tag_3716:\n      pop\n      pop\n      tag_3717\n      swap1\n      tag_19\n      jump\t// in\n    tag_3717:\n        /* \"lib/forge-std/src/StdStorage.sol\":2823:2836  uint256 i = 0 */\n      jump(tag_3683)\n        /* \"lib/forge-std/src/StdStorage.sol\":3926:3955  vm.store(who, reads[i], prev) */\n    tag_3715:\n      tag_3718\n      swap1\n      tag_1\n      jump\t// in\n    tag_3718:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_2413\n      jumpi\n        /* \"lib/forge-std/src/StdStorage.sol\":3926:3955  vm.store(who, reads[i], prev) */\n      dup9\n      codesize\n      jump(tag_3716)\n        /* \"lib/forge-std/src/StdStorage.sol\":3380:3909  if (success && fdat == bytes32(hex\"1337\")) {... */\n    tag_3707:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap3\n      swap6\n      pop\n      dup2\n      swap5\n        /* \"lib/forge-std/src/StdStorage.sol\":3519:3605  SlotFound(who, fsig, keccak256(abi.encodePacked(ins, field_depth)), uint256(reads[i])) */\n      0x9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup10\n        /* \"lib/forge-std/src/StdStorage.sol\":3519:3605  SlotFound(who, fsig, keccak256(abi.encodePacked(ins, field_depth)), uint256(reads[i])) */\n      tag_3721\n        /* \"lib/forge-std/src/StdStorage.sol\":3848:3856  reads[i] */\n      tag_3722\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap7\n        /* \"lib/forge-std/src/StdStorage.sol\":3550:3584  abi.encodePacked(ins, field_depth) */\n      tag_3624\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap10\n      swap15\n      swap13\n      swap14\n      swap10\n        /* \"lib/forge-std/src/StdStorage.sol\":3550:3584  abi.encodePacked(ins, field_depth) */\n      tag_3724\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup14\n      mload(0x40)\n        /* \"lib/forge-std/src/StdStorage.sol\":3550:3584  abi.encodePacked(ins, field_depth) */\n      swap3\n      dup4\n      swap2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n        /* \"lib/forge-std/src/StdStorage.sol\":3550:3584  abi.encodePacked(ins, field_depth) */\n      dup4\n      add\n      swap6\n      dup7\n      tag_107\n      jump\t// in\n    tag_3724:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n        /* \"lib/forge-std/src/StdStorage.sol\":3540:3585  keccak256(abi.encodePacked(ins, field_depth)) */\n      swap1\n      keccak256\n        /* \"lib/forge-std/src/StdStorage.sol\":3595:3603  reads[i] */\n      tag_3725\n      dup8\n      dup8\n      tag_84\n      jump\t// in\n    tag_3725:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n      swap1\n      dup11\n      mload(0x40)\n      swap6\n      dup7\n      swap6\n      and\n        /* \"lib/forge-std/src/StdStorage.sol\":3519:3605  SlotFound(who, fsig, keccak256(abi.encodePacked(ins, field_depth)), uint256(reads[i])) */\n      dup6\n        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      swap1\n      swap5\n      swap4\n      swap3\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      0x60\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      0x80\n      dup6\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap9\n      and\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      dup5\n      mstore\n      and\n        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      0x20\n      dup4\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      0x40\n      dup3\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      jump\n        /* \"lib/forge-std/src/StdStorage.sol\":3519:3605  SlotFound(who, fsig, keccak256(abi.encodePacked(ins, field_depth)), uint256(reads[i])) */\n    tag_3721:\n      sub\n      swap1\n      log1\n        /* \"lib/forge-std/src/StdStorage.sol\":3706:3714  reads[i] */\n      tag_3726\n      dup3\n      dup3\n      tag_84\n      jump\t// in\n    tag_3726:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup11\n      and\n      0x00\n      mstore\n        /* \"lib/forge-std/src/StdCheats.sol\":19864:19872  stdstore */\n      0x05\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup8\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup11\n      mstore\n      0x20\n      mstore\n      0x40\n      dup10\n      keccak256\n      mload(0x40)\n      0x20\n        /* \"lib/forge-std/src/StdStorage.sol\":3659:3693  abi.encodePacked(ins, field_depth) */\n      dup2\n      add\n      swap1\n      tag_3727\n      dup2\n      tag_3624\n      dup14\n      dup14\n      dup7\n      tag_107\n      jump\t// in\n    tag_3727:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n        /* \"lib/forge-std/src/StdStorage.sol\":3649:3694  keccak256(abi.encodePacked(ins, field_depth)) */\n      swap1\n      keccak256\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup11\n      mstore\n      0x20\n      mstore\n      0x40\n      dup10\n      keccak256\n        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      sstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup10\n      and\n      0x00\n      mstore\n        /* \"lib/forge-std/src/StdStorage.sol\":1536:1546  self.finds */\n      0x06\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup7\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup10\n      mstore\n      0x20\n      mstore\n      0x40\n      dup9\n      keccak256\n      mload(0x40)\n      0x20\n        /* \"lib/forge-std/src/StdStorage.sol\":3769:3803  abi.encodePacked(ins, field_depth) */\n      dup2\n      add\n      swap1\n      tag_3729\n      dup2\n      tag_3624\n      dup13\n      dup13\n      dup7\n      tag_107\n      jump\t// in\n    tag_3729:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n        /* \"lib/forge-std/src/StdStorage.sol\":3759:3804  keccak256(abi.encodePacked(ins, field_depth)) */\n      swap1\n      keccak256\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup10\n      mstore\n      0x20\n      mstore\n      0x40\n      dup9\n      keccak256\n        /* \"lib/forge-std/src/StdStorage.sol\":1536:1546  self.finds */\n      0x01\n        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n        /* \"lib/forge-std/src/StdStorage.sol\":3848:3856  reads[i] */\n      tag_84\n      jump\t// in\n    tag_3722:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"lib/forge-std/src/StdStorage.sol\":3834:3863  vm.store(who, reads[i], prev) */\n      extcodesize\n      iszero\n      tag_1565\n      jumpi\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      0x70ca10bb00000000000000000000000000000000000000000000000000000000\n        /* \"lib/forge-std/src/StdStorage.sol\":3834:3863  vm.store(who, reads[i], prev) */\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup9\n      and\n        /* \"lib/forge-std/src/StdStorage.sol\":1431:1442  self._depth */\n      0x04\n        /* \"lib/forge-std/src/StdStorage.sol\":3834:3863  vm.store(who, reads[i], prev) */\n      dup3\n      add\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x24\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x44\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      dup5\n      dup2\n      0x64\n      dup2\n      dup4\n      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n        /* \"lib/forge-std/src/StdStorage.sol\":3834:3863  vm.store(who, reads[i], prev) */\n      gas\n      call\n      dup1\n      iszero\n      tag_201\n      jumpi\n      swap1\n      dup6\n      swap2\n      tag_3736\n      jumpi\n        /* \"lib/forge-std/src/StdStorage.sol\":3380:3909  if (success && fdat == bytes32(hex\"1337\")) {... */\n    tag_3737:\n        /* \"lib/forge-std/src/StdStorage.sol\":3885:3890  break */\n      pop\n      pop\n        /* \"lib/forge-std/src/StdStorage.sol\":2025:4093  if (reads.length == 1) {... */\n      jump(tag_3665)\n        /* \"lib/forge-std/src/StdStorage.sol\":3834:3863  vm.store(who, reads[i], prev) */\n    tag_3736:\n      tag_3739\n      swap1\n      tag_1\n      jump\t// in\n    tag_3739:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_285\n      jumpi\n        /* \"lib/forge-std/src/StdStorage.sol\":3834:3863  vm.store(who, reads[i], prev) */\n      dup4\n      codesize\n      jump(tag_3737)\n        /* \"lib/forge-std/src/StdStorage.sol\":3384:3421  success && fdat == bytes32(hex\"1337\") */\n    tag_3705:\n        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      0x1337000000000000000000000000000000000000000000000000000000000000\n        /* \"lib/forge-std/src/StdStorage.sol\":3395:3421  fdat == bytes32(hex\"1337\") */\n      swap2\n      pop\n      eq\n        /* \"lib/forge-std/src/StdStorage.sol\":3384:3421  success && fdat == bytes32(hex\"1337\") */\n      codesize\n      jump(tag_3706)\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n    tag_3702:\n      0x24\n      dup13\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x11\n        /* \"lib/forge-std/src/StdStorage.sol\":1431:1442  self._depth */\n      0x04\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n      revert\n        /* \"lib/forge-std/src/StdStorage.sol\":3090:3133  vm.store(who, reads[i], bytes32(hex\"1337\")) */\n    tag_3699:\n      tag_3742\n      swap1\n      tag_1\n      jump\t// in\n    tag_3742:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      tag_2214\n      jumpi\n        /* \"lib/forge-std/src/StdStorage.sol\":3090:3133  vm.store(who, reads[i], bytes32(hex\"1337\")) */\n      dup10\n      codesize\n      jump(tag_3700)\n        /* \"lib/forge-std/src/StdStorage.sol\":2934:3048  if (prev == bytes32(0)) {... */\n    tag_3692:\n        /* \"lib/forge-std/src/StdStorage.sol\":2985:3029  WARNING_UninitedSlot(who, uint256(reads[i])) */\n      0x080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5\n      tag_3745\n        /* \"lib/forge-std/src/StdStorage.sol\":3019:3027  reads[i] */\n      tag_3746\n      dup5\n      dup10\n      tag_84\n      jump\t// in\n    tag_3746:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n      0x40\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup14\n      and\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap3\n      swap1\n      swap3\n      mstore\n      swap1\n      swap2\n      dup3\n      swap2\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      dup3\n      add\n      swap1\n      jump\n        /* \"lib/forge-std/src/StdStorage.sol\":2985:3029  WARNING_UninitedSlot(who, uint256(reads[i])) */\n    tag_3745:\n      sub\n      swap1\n      log1\n        /* \"lib/forge-std/src/StdStorage.sol\":2934:3048  if (prev == bytes32(0)) {... */\n      jump(tag_3693)\n        /* \"lib/forge-std/src/StdStorage.sol\":2894:2916  vm.load(who, reads[i]) */\n    tag_3690:\n      swap1\n      pop\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n        /* \"lib/forge-std/src/StdStorage.sol\":2894:2916  vm.load(who, reads[i]) */\n      dup2\n      returndatasize\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n        /* \"lib/forge-std/src/StdStorage.sol\":2894:2916  vm.load(who, reads[i]) */\n      gt\n      tag_3747\n      jumpi\n    tag_3748:\n      dup2\n      tag_3749\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n        /* \"lib/forge-std/src/StdStorage.sol\":2894:2916  vm.load(who, reads[i]) */\n      swap4\n      dup4\n      tag_6\n      jump\t// in\n    tag_3749:\n      dup2\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      sub\n      slt\n      tag_226\n      jumpi\n      mload\n        /* \"lib/forge-std/src/StdStorage.sol\":2894:2916  vm.load(who, reads[i]) */\n      codesize\n      jump(tag_3691)\n    tag_3747:\n      returndatasize\n      swap2\n      pop\n      jump(tag_3748)\n    tag_3688:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n      returndatasize\n      dup13\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"lib/forge-std/src/StdStorage.sol\":2838:2854  i < reads.length */\n    tag_3684:\n      pop\n      swap3\n      pop\n      swap3\n      pop\n      swap5\n      swap3\n      swap4\n        /* \"lib/forge-std/src/StdStorage.sol\":2025:4093  if (reads.length == 1) {... */\n      jump(tag_3665)\n        /* \"lib/forge-std/src/StdStorage.sol\":2782:4093  if (reads.length > 1) {... */\n    tag_3681:\n        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      0x84\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload(0x40)\n        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n        /* \"lib/forge-std/src/StdStorage.sol\":1431:1442  self._depth */\n      0x04\n        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      dup3\n      add\n      mstore\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x40\n      0x24\n        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      dup3\n      add\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mstore\n        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      0x73746453746f726167652066696e642853746453746f72616765293a204e6f20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x44\n      dup3\n      add\n        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */\n      mstore\n      0x73746f726167652075736520646574656374656420666f72207461726765742e\n      0x64\n      dup3\n      add\n      mstore\n      revert\n        /* \"lib/forge-std/src/StdStorage.sol\":1990:2015  vm.accesses(address(who)) */\n    tag_3642:\n      tag_3752\n      swap2\n      swap4\n      pop\n      returndatasize\n      dup1\n      dup10\n      dup4\n      returndatacopy\n      tag_1237\n      dup2\n      dup4\n      tag_6\n      jump\t// in\n    tag_3752:\n      pop\n      swap2\n      codesize\n      jump(tag_3643)\n        /* \"lib/forge-std/src/StdStorage.sol\":1781:1792  vm.record() */\n    tag_3634:\n      tag_3754\n      swap1\n      swap6\n      swap2\n      swap6\n      tag_1\n      jump\t// in\n    tag_3754:\n      swap4\n      codesize\n      jump(tag_3635)\n        /* \"lib/forge-std/src/StdStorage.sol\":1532:1706  if (self.finds[who][fsig][keccak256(abi.encodePacked(ins, field_depth))]) {... */\n    tag_3625:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      0x40\n      swap6\n      and\n      dup5\n      mstore\n        /* \"lib/forge-std/src/StdCheats.sol\":19864:19872  stdstore */\n      0x05\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n      mstore\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup6\n      dup6\n      keccak256\n        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */\n      swap2\n      and\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup5\n      mstore\n      0x20\n      mstore\n        /* \"lib/forge-std/src/StdStorage.sol\":1659:1693  abi.encodePacked(ins, field_depth) */\n      tag_3624\n      tag_3672\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup6\n      dup6\n      keccak256\n      swap4\n      dup7\n      mload\n        /* \"lib/forge-std/src/StdStorage.sol\":1659:1693  abi.encodePacked(ins, field_depth) */\n      swap3\n      dup4\n      swap2\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x20\n        /* \"lib/forge-std/src/StdStorage.sol\":1659:1693  abi.encodePacked(ins, field_depth) */\n      dup4\n      add\n      swap6\n      dup7\n      tag_107\n      jump\t// in\n        /* \"lib/forge-std/src/StdStorage.sol\":6640:6944  function bytesToBytes32(bytes memory b, uint256 offset) private pure returns (bytes32) {... */\n    tag_112:\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0x00\n      swap2\n      dup1\n      mload\n        /* \"lib/forge-std/src/StdStorage.sol\":6784:6786  32 */\n      0x20\n        /* \"lib/forge-std/src/StdStorage.sol\":6773:6786  b.length > 32 */\n      dup2\n      gt\n        /* \"lib/forge-std/src/StdStorage.sol\":6773:6802  b.length > 32 ? 32 : b.length */\n      0x00\n        /* \"lib/forge-std/src/StdStorage.sol\":6784:6786  32 */\n      eq\n      tag_3757\n      jumpi\n        /* \"lib/forge-std/src/StdStorage.sol\":6773:6802  b.length > 32 ? 32 : b.length */\n      pop\n        /* \"lib/forge-std/src/StdStorage.sol\":6784:6786  32 */\n      0x20\n        /* \"lib/forge-std/src/StdStorage.sol\":6773:6802  b.length > 32 ? 32 : b.length */\n      swap1\n    tag_3759:\n        /* \"lib/forge-std/src/StdStorage.sol\":6817:6830  uint256 i = 0 */\n      dup4\n        /* \"lib/forge-std/src/StdStorage.sol\":6812:6918  for (uint256 i = 0; i < max; i++) {... */\n      swap3\n        /* \"lib/forge-std/src/StdStorage.sol\":6832:6839  i < max */\n    tag_3760:\n      dup3\n      dup5\n      lt\n      tag_3761\n      jumpi\n        /* \"lib/forge-std/src/StdStorage.sol\":6927:6937  return out */\n      pop\n      pop\n      pop\n      pop\n        /* \"lib/forge-std/src/StdStorage.sol\":6640:6944  function bytesToBytes32(bytes memory b, uint256 offset) private pure returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"lib/forge-std/src/StdStorage.sol\":6841:6844  i++ */\n    tag_3761:\n        /* \"lib/forge-std/src/StdStorage.sol\":6877:6887  offset + i */\n      swap1\n      swap2\n      swap3\n      swap4\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      0xff00000000000000000000000000000000000000000000000000000000000000\n        /* \"lib/forge-std/src/StdStorage.sol\":6875:6888  b[offset + i] */\n      tag_3763\n        /* \"lib/forge-std/src/StdStorage.sol\":6877:6887  offset + i */\n      tag_2491\n      dup8\n      dup6\n      tag_25\n      jump\t// in\n        /* \"lib/forge-std/src/StdStorage.sol\":6875:6888  b[offset + i] */\n    tag_3763:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n      and\n      swap1\n      dup6\n      0x03\n      shl\n      swap2\n      dup7\n      dup4\n      div\n        /* \"lib/forge-std/src/StdStorage.sol\":6905:6906  8 */\n      0x08\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      eq\n      dup8\n      iszero\n      or\n      iszero\n      tag_505\n      jumpi\n        /* \"lib/forge-std/src/StdStorage.sol\":6841:6844  i++ */\n      tag_3767\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap3\n      shr\n        /* \"lib/forge-std/src/StdStorage.sol\":6860:6907  out |= bytes32(b[offset + i] & 0xFF) >> (i * 8) */\n      or\n        /* \"lib/forge-std/src/StdStorage.sol\":6841:6844  i++ */\n      swap5\n      tag_19\n      jump\t// in\n    tag_3767:\n        /* \"lib/forge-std/src/StdStorage.sol\":6817:6830  uint256 i = 0 */\n      swap3\n      swap2\n      swap1\n      jump(tag_3760)\n        /* \"lib/forge-std/src/StdStorage.sol\":6773:6802  b.length > 32 ? 32 : b.length */\n    tag_3757:\n      swap1\n      jump(tag_3759)\n        /* \"lib/forge-std/src/StdStorage.sol\":6950:7343  function flatten(bytes32[] memory b) private pure returns (bytes memory) {... */\n    tag_113:\n      swap1\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup2\n      mload\n      0x05\n      swap1\n      dup1\n      dup3\n      shl\n        /* \"lib/forge-std/src/StdStorage.sol\":7076:7078  32 */\n      0x20\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      swap2\n      dup1\n      dup3\n      div\n      dup4\n      eq\n      swap1\n      iszero\n      or\n      iszero\n      tag_505\n      jumpi\n        /* \"lib/forge-std/src/StdStorage.sol\":7055:7079  new bytes(b.length * 32) */\n      tag_3770\n      swap1\n      tag_18\n      jump\t// in\n    tag_3770:\n      0x00\n        /* \"lib/forge-std/src/StdStorage.sol\":7123:7126  i++ */\n    tag_3771:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      dup6\n      mload\n        /* \"lib/forge-std/src/StdStorage.sol\":7109:7121  i < b.length */\n      dup2\n      lt\n      iszero\n      tag_3772\n      jumpi\n        /* \"lib/forge-std/src/StdStorage.sol\":7154:7158  b[i] */\n      dup1\n      tag_3774\n        /* \"lib/forge-std/src/StdStorage.sol\":7123:7126  i++ */\n      tag_3775\n        /* \"lib/forge-std/src/StdStorage.sol\":7154:7158  b[i] */\n      swap3\n      dup9\n      tag_84\n      jump\t// in\n    tag_3774:\n        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */\n      mload\n        /* \"lib/forge-std/src/StdStorage.sol\":7219:7303  assembly {... */\n      dup5\n      dup3\n      dup8\n      shl\n      dup6\n      add\n      add\n      mstore\n        /* \"lib/forge-std/src/StdStorage.sol\":7123:7126  i++ */\n      tag_19\n      jump\t// in\n    tag_3775:\n        /* \"lib/forge-std/src/StdStorage.sol\":7094:7107  uint256 i = 0 */\n      jump(tag_3771)\n        /* \"lib/forge-std/src/StdStorage.sol\":7109:7121  i < b.length */\n    tag_3772:\n      pop\n      swap4\n      pop\n      pop\n      pop\n        /* \"lib/forge-std/src/StdStorage.sol\":6950:7343  function flatten(bytes32[] memory b) private pure returns (bytes memory) {... */\n      jump\t// out\n\n    auxdata: 0xa164736f6c6343000811000a\n}\n\nsub_1: assembly {\n        /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n      0x80\n      jumpi(tag_7, callvalue)\n      0x1f\n      bytecodeSize\n      codesize\n      dup2\n      swap1\n      sub\n      swap2\n      dup3\n      add\n      not(0x1f)\n      and\n      dup4\n      add\n      swap2\n      sub(shl(0x40, 0x01), 0x01)\n      dup4\n      gt\n      dup5\n      dup5\n      lt\n      or\n      tag_3\n      jumpi\n      dup1\n      dup5\n      swap3\n      0x20\n      swap5\n      0x40\n      mstore\n      dup4\n      codecopy\n      dup2\n      add\n      sub\n      slt\n      tag_7\n      jumpi\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      swap1\n      dup2\n      swap1\n      sub\n      tag_7\n      jumpi\n      sload(0x00)\n      swap1\n      mload(0x40)\n        /* \"lib/solmate/src/auth/Owned.sol\":1075:1115  OwnershipTransferred(address(0), _owner) */\n      swap2\n      dup2\n      0x00\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      dup2\n      dup1\n      log3\n      not(sub(shl(0xa8, 0x01), 0x01))\n        /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n      and\n      or\n      0x00\n      sstore\n      dataSize(sub_0)\n      swap1\n      dup2\n      dataOffset(sub_0)\n      dup3\n      codecopy\n      return\n    tag_7:\n      0x00\n      dup1\n      revert\n    tag_3:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    stop\n\n    sub_0: assembly {\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          0x80\n          0x40\n          swap1\n          dup1\n          dup3\n          mstore\n          0x04\n          dup1\n          calldatasize\n          lt\n          iszero\n          tag_17\n          jumpi\n          0x00\n          dup1\n          revert\n        tag_17:\n          0x00\n          swap2\n          dup3\n          calldataload\n          0xe0\n          shr\n          swap1\n          dup2\n          0x5accf175\n          eq\n          tag_19\n          jumpi\n          pop\n          dup1\n          0x5eced480\n          eq\n          tag_21\n          jumpi\n          dup1\n          0x65d0123f\n          eq\n          tag_23\n          jumpi\n          dup1\n          0x66d3fede\n          eq\n          tag_25\n          jumpi\n          dup1\n          0x6b600d1c\n          eq\n          tag_27\n          jumpi\n          dup1\n          0x8da5cb5b\n          eq\n          tag_29\n          jumpi\n          dup1\n          0x8eaa6ac0\n          eq\n          tag_31\n          jumpi\n          dup1\n          0xc97682f8\n          eq\n          tag_33\n          jumpi\n          dup1\n          0xcf9d137c\n          eq\n          tag_35\n          jumpi\n            /* \"src/GenericFactory.sol\":8154:8548  assembly (\"memory-safe\") {... */\n          dup1\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          0xd025dde2\n            /* \"src/GenericFactory.sol\":8154:8548  assembly (\"memory-safe\") {... */\n          eq\n          tag_37\n          jumpi\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          dup1\n          0xd47e9c47\n          eq\n          tag_39\n          jumpi\n          dup1\n          0xf2fde38b\n          eq\n          tag_41\n          jumpi\n          dup1\n          0xf71f7a25\n          eq\n          tag_43\n          jumpi\n          0xff6eef52\n          eq\n          tag_45\n          jumpi\n          0x00\n          dup1\n          revert\n        tag_45:\n          jumpi(tag_49, callvalue)\n          jumpi(tag_49, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))\n          dup1\n          calldataload\n          0xffffffffffffffff\n          dup2\n          gt\n          tag_51\n          jumpi\n          tag_53\n          swap1\n          calldatasize\n          swap1\n          dup4\n          add\n          tag_6\n          jump\t// in\n        tag_53:\n          swap1\n            /* \"lib/solmate/src/auth/Owned.sol\":756:800  require(msg.sender == owner, \"UNAUTHORIZED\") */\n          tag_54\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup6\n          sload\n          and\n            /* \"lib/solmate/src/auth/Owned.sol\":764:774  msg.sender */\n          caller\n            /* \"lib/solmate/src/auth/Owned.sol\":764:783  msg.sender == owner */\n          eq\n            /* \"lib/solmate/src/auth/Owned.sol\":756:800  require(msg.sender == owner, \"UNAUTHORIZED\") */\n          tag_9\n          jump\t// in\n        tag_54:\n            /* \"src/GenericFactory.sol\":4409:4416  _curves */\n          0x03\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          sload\n          swap4\n          tag_55\n          calldatasize\n          dup5\n          dup5\n          tag_14\n          jump\t// in\n        tag_55:\n          0x20\n          dup2\n          mload\n          swap2\n          add\n            /* \"src/GenericFactory.sol\":4444:4464  keccak256(aInitCode) */\n          keccak256\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          swap4\n          0x010000000000000000\n          dup7\n          lt\n          iszero\n          tag_56\n          jumpi\n          pop\n          pop\n          swap1\n            /* \"src/GenericFactory.sol\":4532:4541  aInitCode */\n          tag_58\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          swap2\n          0x01\n          dup6\n          add\n            /* \"src/GenericFactory.sol\":4409:4416  _curves */\n          0x03\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          sstore\n          dup4\n          tag_59\n          dup7\n          tag_7\n          jump\t// in\n        tag_59:\n          dup2\n          swap3\n          swap2\n          sload\n          swap1\n            /* \"src/GenericFactory.sol\":4409:4416  _curves */\n          0x03\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          shl\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n            /* \"src/GenericFactory.sol\":389:399  0x6000 - 1 */\n          dup2\n          shl\n          swap3\n          dup4\n          swap2\n          shl\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          and\n          swap2\n          not\n          and\n          or\n          swap1\n          sstore\n            /* \"src/GenericFactory.sol\":4532:4541  aInitCode */\n          dup4\n          tag_15\n          jump\t// in\n        tag_58:\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          dup3\n          mload\n          swap2\n          dup3\n          mstore\n          0x20\n          dup3\n          add\n          mstore\n          return\n        tag_56:\n          swap1\n          0x41\n          0x24\n          swap3\n          0x4e487b7100000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          mstore\n          revert\n        tag_51:\n          dup3\n          dup1\n          revert\n        tag_49:\n          pop\n          dup1\n          revert\n        tag_43:\n          pop\n          dup3\n          swap1\n          jumpi(tag_51, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_51\n          jumpi\n            /* \"lib/solmate/src/auth/Owned.sol\":756:800  require(msg.sender == owner, \"UNAUTHORIZED\") */\n          tag_64\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup5\n          sload\n          and\n            /* \"lib/solmate/src/auth/Owned.sol\":764:774  msg.sender */\n          caller\n            /* \"lib/solmate/src/auth/Owned.sol\":764:783  msg.sender == owner */\n          eq\n            /* \"lib/solmate/src/auth/Owned.sol\":756:800  require(msg.sender == owner, \"UNAUTHORIZED\") */\n          tag_9\n          jump\t// in\n        tag_64:\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          calldataload\n          dup3\n          mstore\n          mstore(0x20, 0x01)\n          calldataload(0x24)\n          swap1\n          dup3\n          keccak256\n          sstore\n          dup1\n          return\n        tag_41:\n          dup3\n          jumpi(tag_67, callvalue)\n          jumpi(tag_67, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))\n          0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n          tag_69\n          tag_1\n          jump\t// in\n        tag_69:\n          dup3\n          sload\n          swap1\n          0xffffffffffffffffffffffffffffffffffffffff\n          swap1\n            /* \"lib/solmate/src/auth/Owned.sol\":756:800  require(msg.sender == owner, \"UNAUTHORIZED\") */\n          tag_70\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          dup3\n          dup5\n          and\n            /* \"lib/solmate/src/auth/Owned.sol\":764:774  msg.sender */\n          caller\n            /* \"lib/solmate/src/auth/Owned.sol\":764:783  msg.sender == owner */\n          eq\n            /* \"lib/solmate/src/auth/Owned.sol\":756:800  require(msg.sender == owner, \"UNAUTHORIZED\") */\n          tag_9\n          jump\t// in\n        tag_70:\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          and\n          swap2\n          dup3\n          swap2\n          and\n          or\n          dup3\n          sstore\n            /* \"lib/solmate/src/auth/Owned.sol\":764:774  msg.sender */\n          caller\n            /* \"lib/solmate/src/auth/Owned.sol\":1424:1466  OwnershipTransferred(msg.sender, newOwner) */\n          0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n          dup4\n          dup1\n          log3\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          dup1\n          return\n        tag_67:\n          dup1\n          revert\n        tag_39:\n          pop\n          dup3\n          swap1\n          jumpi(tag_51, callvalue)\n          jumpi(tag_51, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))\n          calldataload\n            /* \"src/GenericFactory.sol\":4153:4177  bytes32[] public _curves */\n          0x03\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          sload\n            /* \"src/GenericFactory.sol\":4153:4177  bytes32[] public _curves */\n          dup2\n          lt\n          iszero\n          tag_51\n          jumpi\n          0x03\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          0x20\n          swap4\n          mstore\n          0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b\n          add\n          sload\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_37:\n          pop\n          swap2\n          jumpi(tag_49, callvalue)\n          jumpi(tag_49, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))\n          dup3\n          calldataload\n          0xffffffffffffffff\n          dup2\n          gt\n          tag_51\n          jumpi\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"lib/solmate/src/auth/Owned.sol\":756:800  require(msg.sender == owner, \"UNAUTHORIZED\") */\n          tag_83\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          tag_84\n          0x20\n          swap7\n            /* \"src/GenericFactory.sol\":3924:3933  aInitCode */\n          tag_85\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          swap5\n          calldatasize\n          swap2\n          add\n          tag_6\n          jump\t// in\n        tag_84:\n          swap3\n          swap1\n          swap6\n          sload\n          and\n            /* \"lib/solmate/src/auth/Owned.sol\":764:774  msg.sender */\n          caller\n            /* \"lib/solmate/src/auth/Owned.sol\":764:783  msg.sender == owner */\n          eq\n            /* \"lib/solmate/src/auth/Owned.sol\":756:800  require(msg.sender == owner, \"UNAUTHORIZED\") */\n          tag_9\n          jump\t// in\n        tag_83:\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          tag_86\n          calldatasize\n          dup3\n          dup7\n          tag_14\n          jump\t// in\n        tag_86:\n          dup6\n          dup2\n          mload\n          swap2\n          add\n            /* \"src/GenericFactory.sol\":3868:3888  keccak256(aInitCode) */\n          keccak256\n            /* \"src/GenericFactory.sol\":3924:3933  aInitCode */\n          swap4\n          dup5\n          tag_15\n          jump\t// in\n        tag_85:\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_35:\n          pop\n          dup3\n          tag_87\n          calldatasize\n          tag_3\n          jump\t// in\n        tag_87:\n          swap2\n          swap4\n          0xff\n          dup7\n          sload\n          0xa0\n          shr\n          and\n          iszero\n          tag_88\n          jumpi\n            /* \"src/GenericFactory.sol\":8008:8047  getBytecode(aCodeKey, aToken0, aToken1) */\n          pop\n          dup5\n          swap2\n          tag_90\n          swap2\n          dup6\n          tag_11\n          jump\t// in\n        tag_90:\n            /* \"src/GenericFactory.sol\":8154:8548  assembly (\"memory-safe\") {... */\n          0x20\n          dup2\n          mload\n          swap2\n          add\n          callvalue\n          create2\n          swap3\n          dup4\n          extcodesize\n          iszero\n          tag_67\n          jumpi\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          pop\n            /* \"src/GenericFactory.sol\":8563:8592  Deployed(aCodeKey, rContract) */\n          0xe491e278e37782abe0872fe7c7b549cd7b0713d0c5c1e84a81899a5fdf32087b\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          dup2\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/GenericFactory.sol\":8154:8548  assembly (\"memory-safe\") {... */\n          0x20\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          swap6\n          dup3\n          mload\n          swap6\n          dup7\n          mstore\n          and\n          swap4\n          dup5\n          dup7\n          dup3\n          add\n          mstore\n            /* \"src/GenericFactory.sol\":8563:8592  Deployed(aCodeKey, rContract) */\n          log1\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_88:\n          0x64\n          swap1\n          0x20\n          dup6\n          mload\n          swap2\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          dup3\n          add\n          mstore\n          0x1f\n          0x24\n          dup3\n          add\n          mstore\n          0x464143544f52593a204f4e4c595f4348494c4452454e5f43414e5f43414c4c00\n          0x44\n          dup3\n          add\n          mstore\n          revert\n        tag_33:\n          pop\n          pop\n          jumpi(tag_67, callvalue)\n          dup1\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_67\n          jumpi\n          swap1\n          dup1\n          mload\n          swap2\n          dup3\n          swap1\n            /* \"src/GenericFactory.sol\":5287:5296  _allPairs */\n          0x05\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          sload\n          swap2\n          dup3\n          dup6\n          mstore\n          0x20\n          dup1\n          swap6\n          add\n          dup1\n          swap4\n            /* \"src/GenericFactory.sol\":5287:5296  _allPairs */\n          0x05\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          dup5\n          mstore\n          0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0\n          swap1\n          dup5\n        tag_97:\n          dup2\n          dup2\n          lt\n          tag_98\n          jumpi\n          pop\n          pop\n          pop\n          dup2\n          tag_100\n          swap2\n          sub\n          dup3\n          tag_12\n          jump\t// in\n        tag_100:\n          dup4\n          mload\n          swap5\n          dup6\n          swap5\n          dup2\n          dup7\n          add\n          swap3\n          dup3\n          dup8\n          mstore\n          mload\n          dup1\n          swap4\n          mstore\n          dup6\n          add\n          swap4\n          swap3\n        tag_101:\n          dup3\n          dup2\n          lt\n          tag_102\n          jumpi\n          pop\n          pop\n          pop\n          pop\n          sub\n          swap1\n          return\n        tag_102:\n          dup4\n          mload\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          dup6\n          mstore\n          dup7\n          swap6\n          pop\n          swap4\n          dup2\n          add\n          swap4\n          swap3\n          dup2\n          add\n          swap3\n          0x01\n          add\n          jump(tag_101)\n        tag_98:\n          dup3\n          sload\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          dup5\n          mstore\n          swap3\n          dup9\n          add\n          swap3\n          0x01\n          swap3\n          dup4\n          add\n          swap3\n          add\n          jump(tag_97)\n        tag_31:\n          pop\n          dup3\n          swap1\n          jumpi(tag_51, callvalue)\n          jumpi(tag_51, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))\n          0x20\n          swap3\n          dup3\n          swap2\n          calldataload\n          dup2\n          mstore\n          0x01\n          dup5\n          mstore\n          keccak256\n          sload\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_29:\n          dup3\n          dup5\n          jumpi(tag_49, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_49\n          jumpi\n          0xffffffffffffffffffffffffffffffffffffffff\n          0x20\n          swap3\n          sload\n          and\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_27:\n          pop\n          swap2\n          jumpi(tag_49, callvalue)\n          tag_114\n          calldatasize\n          tag_2\n          jump\t// in\n        tag_114:\n          swap1\n          swap4\n          swap2\n          swap5\n          0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff\n          swap2\n          0x010000000000000000000000000000000000000000\n          dup4\n          dup6\n          sload\n          and\n          or\n          dup5\n          sstore\n          0xffffffffffffffffffffffffffffffffffffffff\n          swap1\n          dup2\n          dup8\n          and\n          swap8\n          dup3\n          dup2\n          and\n            /* \"src/GenericFactory.sol\":5615:5633  aTokenA != aTokenB */\n          swap9\n          dup1\n          dup11\n          eq\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          tag_115\n          jumpi\n            /* \"src/GenericFactory.sol\":5684:5705  aTokenA != address(0) */\n          dup10\n          iszero\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          tag_117\n          jumpi\n          dup10\n          dup8\n          mstore\n          0x20\n          swap10\n          dup6\n          dup12\n          mstore\n          dup9\n          dup9\n          keccak256\n          dup3\n          dup10\n          mstore\n          dup12\n          mstore\n          dup9\n          dup9\n          keccak256\n          dup5\n          dup10\n          mstore\n          dup12\n          mstore\n          dup5\n          dup10\n          dup10\n          keccak256\n          sload\n          and\n          tag_119\n          jumpi\n            /* \"src/GenericFactory.sol\":5422:5427  a < b */\n          lt\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          iszero\n          tag_121\n          jumpi\n            /* \"src/GenericFactory.sol\":5422:5445  a < b ? (a, b) : (b, a) */\n          swap7\n          swap3\n        tag_123:\n            /* \"src/GenericFactory.sol\":4692:4709  _curves[aCurveId] */\n          dup3\n          dup7\n            /* \"src/GenericFactory.sol\":4727:4766  getBytecode(lCodeKey, aToken0, aToken1) */\n          tag_124\n            /* \"src/GenericFactory.sol\":4692:4709  _curves[aCurveId] */\n          dup7\n          dup12\n          tag_125\n          dup8\n          tag_7\n          jump\t// in\n        tag_125:\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          swap1\n          sload\n          swap1\n            /* \"src/GenericFactory.sol\":4692:4699  _curves */\n          0x03\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          shl\n          shr\n            /* \"src/GenericFactory.sol\":4727:4766  getBytecode(lCodeKey, aToken0, aToken1) */\n          tag_11\n          jump\t// in\n        tag_124:\n            /* \"src/GenericFactory.sol\":6150:6811  assembly (\"memory-safe\") {... */\n          dup12\n          dup2\n          mload\n          swap2\n          add\n          dup3\n          create2\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          and\n            /* \"src/GenericFactory.sol\":6828:6847  rPair != address(0) */\n          swap8\n          dup9\n          iszero\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          tag_126\n          jumpi\n          dup4\n          and\n          swap3\n          dup4\n          dup8\n          mstore\n          dup2\n          dup11\n          mstore\n          dup8\n          dup8\n          keccak256\n          swap5\n          and\n          swap4\n          dup5\n          dup8\n          mstore\n          dup10\n          mstore\n          dup7\n          dup7\n          keccak256\n          dup3\n          dup8\n          mstore\n          dup10\n          mstore\n          dup7\n          dup7\n          keccak256\n          swap1\n          0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n          swap2\n          dup10\n          dup4\n          dup3\n          sload\n          and\n          or\n          swap1\n          sstore\n          dup5\n          dup8\n          mstore\n          dup1\n          dup11\n          mstore\n          dup8\n          dup8\n          keccak256\n          dup5\n          dup9\n          mstore\n          dup11\n          mstore\n          dup8\n          dup8\n          keccak256\n          dup4\n          dup9\n          mstore\n          dup11\n          mstore\n          dup8\n          dup8\n          keccak256\n          dup10\n          dup4\n          dup3\n          sload\n          and\n          or\n          swap1\n          sstore\n            /* \"src/GenericFactory.sol\":7055:7064  _allPairs */\n          0x05\n            /* \"src/GenericFactory.sol\":389:399  0x6000 - 1 */\n          sload\n          swap1\n          0x010000000000000000\n          dup3\n          lt\n          iszero\n          tag_128\n          jumpi\n          0x01\n          dup3\n          add\n          dup1\n            /* \"src/GenericFactory.sol\":7055:7064  _allPairs */\n          0x05\n            /* \"src/GenericFactory.sol\":389:399  0x6000 - 1 */\n          sstore\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          dup3\n          lt\n          iszero\n          tag_130\n          jumpi\n          pop\n          swap2\n          dup8\n          swap2\n          dup10\n            /* \"src/GenericFactory.sol\":7092:7138  PairCreated(lToken0, lToken1, aCurveId, rPair) */\n          0xc3168168beb4136b347bbd2afd38adb2282984cdfba1e15b86d35942f015f4ca\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          swap5\n            /* \"src/GenericFactory.sol\":7055:7064  _allPairs */\n          0x05\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          dup11\n          mstore\n          0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0\n          add\n            /* \"src/GenericFactory.sol\":389:399  0x6000 - 1 */\n          swap2\n          dup3\n          sload\n          and\n          or\n          swap1\n          sstore\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          dup2\n          mload\n          swap1\n          dup2\n          mstore\n          dup9\n          dup11\n          dup3\n          add\n          mstore\n            /* \"src/GenericFactory.sol\":7092:7138  PairCreated(lToken0, lToken1, aCurveId, rPair) */\n          log3\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          dup2\n          sload\n          and\n          swap1\n          sstore\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_130:\n          dup8\n          0x32\n          0x24\n          swap3\n          0x4e487b7100000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          mstore\n          revert\n            /* \"src/GenericFactory.sol\":389:399  0x6000 - 1 */\n        tag_128:\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          dup8\n          0x41\n          0x24\n          swap3\n          0x4e487b7100000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          mstore\n          revert\n        tag_126:\n          0x64\n          dup3\n          dup12\n          dup11\n          mload\n          swap2\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          dup3\n          add\n          mstore\n          0x16\n          0x24\n          dup3\n          add\n          mstore\n          0x464143544f52593a204445504c4f595f4641494c454400000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n            /* \"src/GenericFactory.sol\":5422:5445  a < b ? (a, b) : (b, a) */\n        tag_121:\n          swap3\n          jump(tag_123)\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n        tag_119:\n          0x64\n          dup7\n          dup13\n          dup12\n          mload\n          swap2\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          dup3\n          add\n          mstore\n          0x14\n          0x24\n          dup3\n          add\n          mstore\n          0x464143544f52593a20504149525f455849535453000000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n        tag_117:\n          0x64\n          dup6\n          0x20\n          dup11\n          mload\n          swap2\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          dup3\n          add\n          mstore\n          0x15\n          0x24\n          dup3\n          add\n          mstore\n          0x464143544f52593a205a45524f5f414444524553530000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n        tag_115:\n          0x64\n          dup6\n          0x20\n          dup11\n          mload\n          swap2\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          dup3\n          add\n          mstore\n          0x1c\n          0x24\n          dup3\n          add\n          mstore\n          0x464143544f52593a204944454e544943414c5f41444452455353455300000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n        tag_25:\n          pop\n          swap1\n          jumpi(tag_67, callvalue)\n          jumpi(tag_67, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x60))\n          tag_136\n          tag_1\n          jump\t// in\n        tag_136:\n          0xffffffffffffffff\n          swap2\n          swap1\n          calldataload(0x24)\n          dup4\n          dup2\n          gt\n          tag_51\n          jumpi\n          swap1\n          tag_139\n          tag_140\n          swap3\n          calldatasize\n          swap1\n          dup8\n          add\n          tag_6\n          jump\t// in\n        tag_139:\n          swap3\n          swap1\n          calldataload(0x44)\n          swap4\n            /* \"lib/solmate/src/auth/Owned.sol\":756:800  require(msg.sender == owner, \"UNAUTHORIZED\") */\n          tag_141\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup8\n          sload\n          and\n            /* \"lib/solmate/src/auth/Owned.sol\":764:774  msg.sender */\n          caller\n            /* \"lib/solmate/src/auth/Owned.sol\":764:783  msg.sender == owner */\n          eq\n            /* \"lib/solmate/src/auth/Owned.sol\":756:800  require(msg.sender == owner, \"UNAUTHORIZED\") */\n          tag_9\n          jump\t// in\n        tag_141:\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          calldatasize\n          swap2\n          tag_14\n          jump\t// in\n        tag_140:\n          swap2\n          dup7\n          mload\n          swap5\n          dup8\n          dup7\n          add\n          swap1\n          dup7\n          dup3\n          lt\n          swap1\n          dup3\n          gt\n          or\n          tag_142\n          jumpi\n          dup8\n          mstore\n          0x1a\n          dup6\n          mstore\n          0x20\n          swap6\n          0x464143544f52593a205241575f43414c4c5f5245564552544544000000000000\n          dup8\n          dup8\n          add\n          mstore\n            /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":5145:5166  address(this).balance */\n          dup2\n          selfbalance\n            /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":5145:5175  address(this).balance >= value */\n          lt\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          tag_144\n          jumpi\n            /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":1465:1484  account.code.length */\n          dup3\n          extcodesize\n            /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n          iszero\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          tag_146\n          jumpi\n            /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":5341:5372  target.call{value: value}(data) */\n          pop\n          swap3\n          dup1\n          dup4\n          dup2\n          swap4\n            /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n          tag_148\n            /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":5341:5372  target.call{value: value}(data) */\n          swap7\n          dup10\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          tag_149\n            /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":5341:5372  target.call{value: value}(data) */\n          swap10\n          swap8\n          mload\n          swap4\n          add\n          swap2\n          gas\n          call\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          jumpi(tag_150, iszero(returndatasize))\n          returndatasize\n          tag_152\n          dup2\n          tag_13\n          jump\t// in\n        tag_152:\n          swap1\n          tag_153\n          dup10\n          mload\n          swap3\n          dup4\n          tag_12\n          jump\t// in\n        tag_153:\n          dup2\n          mstore\n          dup1\n          swap3\n          dup8\n          returndatasize\n          swap3\n          add\n          returndatacopy\n            /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n          tag_16\n          jump\t// in\n        tag_148:\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          swap3\n          mload\n          swap3\n          dup3\n          dup5\n          swap4\n          dup5\n          mstore\n          dup4\n          add\n          swap1\n          tag_5\n          jump\t// in\n        tag_149:\n          sub\n          swap1\n          return\n        tag_150:\n          0x60\n          swap2\n          pop\n            /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n          tag_16\n          jump\t// in\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n        tag_146:\n          0x64\n          swap1\n          dup8\n          dup10\n          mload\n          swap2\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          dup3\n          add\n          mstore\n          0x1d\n          0x24\n          dup3\n          add\n          mstore\n          0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n        tag_144:\n          0x84\n          swap1\n          dup8\n          dup10\n          mload\n          swap2\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          dup3\n          add\n          mstore\n          0x26\n          0x24\n          dup3\n          add\n          mstore\n          0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n          0x44\n          dup3\n          add\n          mstore\n          0x722063616c6c0000000000000000000000000000000000000000000000000000\n          0x64\n          dup3\n          add\n          mstore\n          revert\n        tag_142:\n          0x24\n          dup6\n          0x41\n          dup10\n          0x4e487b7100000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          mstore\n          revert\n        tag_23:\n          dup3\n          dup5\n          jumpi(tag_49, callvalue)\n          tag_149\n          swap1\n          tag_158\n          tag_159\n          calldatasize\n          tag_3\n          jump\t// in\n        tag_159:\n          swap2\n          tag_11\n          jump\t// in\n        tag_158:\n          swap1\n          mload\n          swap2\n          dup3\n          swap2\n          0x20\n          dup4\n          mstore\n          0x20\n          dup4\n          add\n          swap1\n          tag_5\n          jump\t// in\n        tag_21:\n          pop\n          dup3\n          swap1\n          jumpi(tag_51, callvalue)\n          dup2\n          0x20\n          swap4\n          tag_162\n          calldatasize\n          tag_2\n          jump\t// in\n        tag_162:\n          swap2\n          swap5\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup1\n          swap7\n          and\n          dup5\n          mstore\n          dup8\n          mstore\n          dup5\n          dup5\n          dup5\n          keccak256\n          swap2\n          and\n          dup4\n          mstore\n          dup7\n          mstore\n          dup3\n          dup3\n          keccak256\n          swap1\n          dup3\n          mstore\n          dup6\n          mstore\n          keccak256\n          sload\n          and\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_19:\n          swap2\n          pop\n          pop\n          jumpi(tag_49, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_49\n          jumpi\n          swap2\n          swap1\n            /* \"src/GenericFactory.sol\":4260:4267  _curves */\n          0x03\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          sload\n          swap1\n          dup2\n          dup5\n          mstore\n          0x20\n          swap4\n          dup5\n          dup2\n          add\n          dup1\n          swap4\n            /* \"src/GenericFactory.sol\":4260:4267  _curves */\n          0x03\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          dup5\n          mstore\n          0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b\n          swap1\n          dup5\n        tag_167:\n          dup2\n          dup2\n          lt\n          tag_168\n          jumpi\n          pop\n          pop\n          pop\n          dup2\n          tag_170\n          swap2\n          sub\n          dup3\n          tag_12\n          jump\t// in\n        tag_170:\n          dup4\n          mload\n          swap5\n          dup6\n          swap5\n          dup2\n          dup7\n          add\n          swap3\n          dup3\n          dup8\n          mstore\n          mload\n          dup1\n          swap4\n          mstore\n          dup6\n          add\n          swap4\n          swap3\n        tag_171:\n          dup3\n          dup2\n          lt\n          tag_172\n          jumpi\n          pop\n          pop\n          pop\n          pop\n          sub\n          swap1\n          return\n        tag_172:\n          dup4\n          mload\n          dup6\n          mstore\n          dup7\n          swap6\n          pop\n          swap4\n          dup2\n          add\n          swap4\n          swap3\n          dup2\n          add\n          swap3\n          0x01\n          add\n          jump(tag_171)\n        tag_168:\n          dup3\n          sload\n          dup5\n          mstore\n          swap3\n          dup9\n          add\n          swap3\n          0x01\n          swap3\n          dup4\n          add\n          swap3\n          add\n          jump(tag_167)\n        tag_1:\n          calldataload(0x04)\n          swap1\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup3\n          and\n          dup3\n          sub\n          tag_174\n          jumpi\n          jump\t// out\n        tag_174:\n          0x00\n          dup1\n          revert\n        tag_2:\n          0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\n          0x60\n          swap2\n          add\n          slt\n          tag_174\n          jumpi\n          0xffffffffffffffffffffffffffffffffffffffff\n          swap1\n          calldataload(0x04)\n          dup3\n          dup2\n          and\n          dup2\n          sub\n          tag_174\n          jumpi\n          swap2\n          calldataload(0x24)\n          swap1\n          dup2\n          and\n          dup2\n          sub\n          tag_174\n          jumpi\n          swap1\n          calldataload(0x44)\n          swap1\n          jump\t// out\n        tag_3:\n          0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\n          0x60\n          swap2\n          add\n          slt\n          tag_174\n          jumpi\n          calldataload(0x04)\n          swap1\n          0xffffffffffffffffffffffffffffffffffffffff\n          swap1\n          calldataload(0x24)\n          dup3\n          dup2\n          and\n          dup2\n          sub\n          tag_174\n          jumpi\n          swap2\n          calldataload(0x44)\n          swap1\n          dup2\n          and\n          dup2\n          sub\n          tag_174\n          jumpi\n          swap1\n          jump\t// out\n        tag_4:\n          0x00\n        tag_188:\n          dup4\n          dup2\n          lt\n          tag_189\n          jumpi\n          pop\n          pop\n          0x00\n          swap2\n          add\n          mstore\n          jump\t// out\n        tag_189:\n          dup2\n          dup2\n          add\n          mload\n          dup4\n          dup3\n          add\n          mstore\n          0x20\n          add\n          jump(tag_188)\n        tag_5:\n          swap1\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n          0x1f\n          0x20\n          swap4\n          tag_191\n          dup2\n          mload\n          dup1\n          swap3\n          dup2\n          dup8\n          mstore\n          dup8\n          dup1\n          dup9\n          add\n          swap2\n          add\n          tag_4\n          jump\t// in\n        tag_191:\n          add\n          and\n          add\n          add\n          swap1\n          jump\t// out\n        tag_6:\n          swap2\n          dup2\n          0x1f\n          dup5\n          add\n          slt\n          iszero\n          tag_174\n          jumpi\n          dup3\n          calldataload\n          swap2\n          0xffffffffffffffff\n          dup4\n          gt\n          tag_174\n          jumpi\n          0x20\n          dup4\n          dup2\n          dup7\n          add\n          swap6\n          add\n          add\n          gt\n          tag_174\n          jumpi\n          jump\t// out\n        tag_7:\n            /* \"src/GenericFactory.sol\":4692:4699  _curves */\n          0x03\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          sload\n          dup2\n          lt\n          iszero\n          tag_198\n          jumpi\n            /* \"src/GenericFactory.sol\":4692:4699  _curves */\n          0x03\n          0x00\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          mstore\n          0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b\n          add\n          swap1\n          0x00\n          swap1\n          jump\t// out\n        tag_198:\n          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n          mstore(0x04, 0x32)\n          revert(0x00, 0x24)\n        tag_8:\n          dup1\n          sload\n          dup3\n          lt\n          iszero\n          tag_198\n          jumpi\n          0x00\n          mstore\n          keccak256(0x00, 0x20)\n          add\n          swap1\n          0x00\n          swap1\n          jump\t// out\n        tag_9:\n          iszero\n          tag_202\n          jumpi\n          jump\t// out\n        tag_202:\n          0x64\n          mload(0x40)\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          0x20\n          0x04\n          dup3\n          add\n          mstore\n          0x0c\n          0x24\n          dup3\n          add\n          mstore\n          0x554e415554484f52495a45440000000000000000000000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n        tag_10:\n          swap2\n          swap1\n          dup3\n          add\n          dup1\n          swap3\n          gt\n          tag_204\n          jumpi\n          jump\t// out\n        tag_204:\n          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n          mstore(0x04, 0x11)\n          revert(0x00, 0x24)\n            /* \"src/GenericFactory.sol\":1959:3748  function getBytecode(bytes32 aCodeKey, address aToken0, address aToken1) public view returns (bytes memory) {... */\n        tag_11:\n          swap3\n          swap2\n          swap3\n          0x00\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          swap1\n          dup2\n          mstore\n            /* \"src/GenericFactory.sol\":2107:2119  _getByteCode */\n          0x02\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          0x20\n          mstore\n          0x40\n          swap1\n          dup2\n          dup2\n          keccak256\n            /* \"src/GenericFactory.sol\":2453:2571  assembly (\"memory-safe\") {... */\n          dup3\n          mload\n          swap4\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          0x20\n            /* \"src/GenericFactory.sol\":2453:2571  assembly (\"memory-safe\") {... */\n          dup6\n          add\n            /* \"src/GenericFactory.sol\":2581:2608  uint256 lByteCodeLength = 0 */\n          swap3\n          dup1\n            /* \"src/GenericFactory.sol\":2623:2636  uint256 i = 0 */\n          swap3\n          dup2\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          dup2\n          sload\n            /* \"src/GenericFactory.sol\":2618:3250  for (uint256 i = 0; i < lByteCode.length; ++i) {... */\n          swap2\n            /* \"src/GenericFactory.sol\":2638:2658  i < lByteCode.length */\n        tag_206:\n          dup3\n          dup5\n          lt\n          tag_207\n          jumpi\n            /* \"src/GenericFactory.sol\":3379:3715  assembly (\"memory-safe\") {... */\n          pop\n          pop\n          pop\n          pop\n          swap1\n          dup4\n          swap5\n          swap6\n          swap7\n          dup5\n          swap3\n          dup5\n          mstore\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          0x20\n            /* \"src/GenericFactory.sol\":3379:3715  assembly (\"memory-safe\") {... */\n          dup5\n          add\n          mstore\n          add\n          dup5\n          mstore\n          add\n          swap1\n          mstore\n            /* \"src/GenericFactory.sol\":1959:3748  function getBytecode(bytes32 aCodeKey, address aToken0, address aToken1) public view returns (bytes memory) {... */\n          swap1\n          jump\t// out\n            /* \"src/GenericFactory.sol\":2660:2663  ++i */\n        tag_207:\n            /* \"src/GenericFactory.sol\":2698:2710  lByteCode[i] */\n          swap1\n          swap2\n          swap3\n          swap5\n          swap6\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/GenericFactory.sol\":2698:2710  lByteCode[i] */\n          tag_209\n          dup8\n          dup5\n          tag_8\n          jump\t// in\n        tag_209:\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          swap1\n          sload\n          swap1\n          0x03\n          shl\n          shr\n          and\n            /* \"src/GenericFactory.sol\":2740:2760  lPointer.code.length */\n          swap1\n          dup2\n          extcodesize\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n          swap1\n          dup2\n          dup2\n          add\n          swap4\n          dup2\n          dup6\n          gt\n          tag_210\n          jumpi\n            /* \"src/GenericFactory.sol\":2914:3118  assembly (\"memory-safe\") {... */\n          swap3\n            /* \"src/GenericFactory.sol\":3132:3149  lFreeMem += lSize */\n          tag_212\n            /* \"src/GenericFactory.sol\":2914:3118  assembly (\"memory-safe\") {... */\n          swap3\n          dup6\n          swap5\n          swap3\n          dup6\n            /* \"src/GenericFactory.sol\":2763:2767  0x01 */\n          0x01\n            /* \"src/GenericFactory.sol\":2914:3118  assembly (\"memory-safe\") {... */\n          dup5\n            /* \"src/GenericFactory.sol\":3215:3239  lByteCodeLength += lSize */\n          tag_213\n            /* \"src/GenericFactory.sol\":2914:3118  assembly (\"memory-safe\") {... */\n          swap10\n          swap7\n          extcodecopy\n          dup3\n          add\n          add\n          dup13\n          mstore\n            /* \"src/GenericFactory.sol\":3132:3149  lFreeMem += lSize */\n          tag_10\n          jump\t// in\n        tag_212:\n            /* \"src/GenericFactory.sol\":3215:3239  lByteCodeLength += lSize */\n          swap8\n          tag_10\n          jump\t// in\n        tag_213:\n            /* \"src/GenericFactory.sol\":2660:2663  ++i */\n          swap5\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n          dup2\n          eq\n          tag_214\n          jumpi\n            /* \"src/GenericFactory.sol\":2763:2767  0x01 */\n          0x01\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          add\n            /* \"src/GenericFactory.sol\":2623:2636  uint256 i = 0 */\n          swap3\n          swap2\n          swap1\n          jump(tag_206)\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n        tag_214:\n          0x24\n          dup4\n          0x4e487b7100000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          mstore(0x04, 0x11)\n          revert\n        tag_210:\n          0x24\n          dup8\n          0x4e487b7100000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          mstore(0x04, 0x11)\n          revert\n        tag_12:\n          swap1\n          0x1f\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n          swap2\n          add\n          and\n          dup2\n          add\n          swap1\n          dup2\n          lt\n          0xffffffffffffffff\n          dup3\n          gt\n          or\n          tag_216\n          jumpi\n          0x40\n          mstore\n          jump\t// out\n        tag_216:\n          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n          mstore(0x04, 0x41)\n          revert(0x00, 0x24)\n        tag_13:\n          0xffffffffffffffff\n          dup2\n          gt\n          tag_216\n          jumpi\n          0x1f\n          add\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n          and\n          0x20\n          add\n          swap1\n          jump\t// out\n        tag_14:\n          swap3\n          swap2\n          swap3\n          tag_220\n          dup3\n          tag_13\n          jump\t// in\n        tag_220:\n          swap2\n          tag_221\n          mload(0x40)\n          swap4\n          dup5\n          tag_12\n          jump\t// in\n        tag_221:\n          dup3\n          swap5\n          dup2\n          dup5\n          mstore\n          dup2\n          dup4\n          add\n          gt\n          tag_174\n          jumpi\n          dup3\n          dup2\n          0x20\n          swap4\n          dup5\n          0x00\n          swap7\n          add\n          calldatacopy\n          add\n          add\n          mstore\n          jump\t// out\n            /* \"src/GenericFactory.sol\":1323:1953  function _writeBytecode(bytes32 aCodeKey, bytes calldata aInitCode) internal {... */\n        tag_15:\n          swap2\n            /* \"src/GenericFactory.sol\":1427:1428  0 */\n          0x00\n            /* \"src/GenericFactory.sol\":1438:1466  uint256 lInitCodePointer = 0 */\n          swap2\n          dup3\n            /* \"src/GenericFactory.sol\":1483:1518  lInitCodePointer < aInitCode.length */\n        tag_224:\n          dup3\n          dup5\n          lt\n          tag_225\n          jumpi\n            /* \"src/GenericFactory.sol\":1323:1953  function _writeBytecode(bytes32 aCodeKey, bytes calldata aInitCode) internal {... */\n          pop\n          pop\n          pop\n          pop\n          pop\n          jump\t// out\n            /* \"src/GenericFactory.sol\":1476:1947  while (lInitCodePointer < aInitCode.length) {... */\n        tag_225:\n            /* \"src/GenericFactory.sol\":389:399  0x6000 - 1 */\n          0x5fff\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          dup5\n          add\n          dup1\n          dup6\n          gt\n          tag_204\n          jumpi\n            /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":673:678  a < b */\n          dup1\n          dup5\n          lt\n          iszero\n          tag_229\n          jumpi\n            /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":673:686  a < b ? a : b */\n          pop\n          dup3\n          swap4\n        tag_231:\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          dup6\n            /* \"src/GenericFactory.sol\":1427:1428  0 */\n          0x00\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          mstore\n          0x20\n            /* \"src/GenericFactory.sol\":1787:1799  _getByteCode */\n          0x02\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          dup2\n          mstore\n          0x40\n          dup1\n            /* \"src/GenericFactory.sol\":1427:1428  0 */\n          0x00\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          keccak256\n            /* \"src/GenericFactory.sol\":389:399  0x6000 - 1 */\n          swap3\n          dup8\n          dup2\n          gt\n          tag_174\n          jumpi\n          dup7\n          dup9\n          gt\n          tag_174\n          jumpi\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          tag_236\n          swap1\n          calldatasize\n            /* \"src/GenericFactory.sol\":389:399  0x6000 - 1 */\n          swap1\n          dup1\n          dup11\n          sub\n          swap1\n          dup9\n          add\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          tag_14\n          jump\t// in\n        tag_236:\n          swap3\n          dup2\n          mload\n            /* \"lib/solmate/src/utils/SSTORE2.sol\":879:910  abi.encodePacked(hex\"00\", data) */\n          swap3\n          dup1\n          dup5\n          add\n            /* \"src/GenericFactory.sol\":1427:1428  0 */\n          0x00\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          dup2\n          mstore\n            /* \"lib/solmate/src/utils/SSTORE2.sol\":879:910  abi.encodePacked(hex\"00\", data) */\n          tag_237\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          dup6\n          dup8\n          mload\n          tag_238\n          dup2\n          0x21\n          swap11\n          dup8\n          dup13\n          dup7\n          add\n          swap2\n          add\n          tag_4\n          jump\t// in\n        tag_238:\n          dup2\n          add\n            /* \"lib/solmate/src/utils/SSTORE2.sol\":879:910  abi.encodePacked(hex\"00\", data) */\n          sub\n          swap7\n          0x01\n          swap8\n          dup9\n          dup2\n          add\n          dup9\n          mstore\n          add\n          dup7\n          tag_12\n          jump\t// in\n        tag_237:\n            /* \"lib/solmate/src/utils/SSTORE2.sol\":949:3033  abi.encodePacked(... */\n          tag_239\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          dup5\n          mload\n            /* \"lib/solmate/src/utils/SSTORE2.sol\":949:3033  abi.encodePacked(... */\n          swap2\n          dup3\n          dup5\n          dup2\n          add\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          swap8\n          0x600b5981380380925939f3000000000000000000000000000000000000000000\n          dup10\n          mstore\n          mload\n          tag_240\n          dup2\n          0x2b\n          swap5\n          dup6\n          dup6\n          add\n          swap1\n          tag_4\n          jump\t// in\n        tag_240:\n          dup2\n          add\n            /* \"lib/solmate/src/utils/SSTORE2.sol\":949:3033  abi.encodePacked(... */\n          sub\n          0x0b\n          dup2\n          add\n          dup5\n          mstore\n          add\n          dup3\n          tag_12\n          jump\t// in\n        tag_239:\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"lib/solmate/src/utils/SSTORE2.sol\":3087:3336  assembly {... */\n          swap5\n          dup6\n          swap2\n          mload\n          swap1\n            /* \"src/GenericFactory.sol\":1427:1428  0 */\n          0x00\n            /* \"lib/solmate/src/utils/SSTORE2.sol\":3087:3336  assembly {... */\n          create\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          and\n            /* \"lib/solmate/src/utils/SSTORE2.sol\":3354:3375  pointer != address(0) */\n          swap3\n          dup4\n          iszero\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          tag_241\n          jumpi\n            /* \"src/GenericFactory.sol\":389:399  0x6000 - 1 */\n          pop\n          pop\n          dup1\n          sload\n          0x010000000000000000\n          dup2\n          lt\n          iszero\n          tag_216\n          jumpi\n          tag_245\n          swap2\n          dup6\n          dup3\n          add\n          dup2\n          sstore\n          tag_8\n          jump\t// in\n        tag_245:\n          swap1\n          swap3\n          dup4\n          sload\n          swap2\n          0x03\n          shl\n          swap1\n          dup2\n          shl\n          swap3\n          dup4\n          swap2\n          shl\n          and\n          swap2\n          not\n          and\n          or\n          swap1\n          sstore\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          dup2\n          add\n          dup1\n          swap2\n          gt\n          iszero\n            /* \"src/GenericFactory.sol\":1476:1947  while (lInitCodePointer < aInitCode.length) {... */\n          tag_224\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          jumpi\n          0x4e487b7100000000000000000000000000000000000000000000000000000000\n            /* \"src/GenericFactory.sol\":1427:1428  0 */\n          0x00\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          mstore\n          mstore(0x04, 0x11)\n          0x24\n            /* \"src/GenericFactory.sol\":1427:1428  0 */\n          0x00\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          revert\n        tag_241:\n          0x64\n          swap3\n          pop\n          mload\n          swap1\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup3\n          mstore\n          0x04\n          dup3\n          add\n          mstore\n          0x11\n          0x24\n          dup3\n          add\n          mstore\n          0x4445504c4f594d454e545f4641494c4544000000000000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n            /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":673:686  a < b ? a : b */\n        tag_229:\n          swap4\n          jump(tag_231)\n            /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":7561:8303  function verifyCallResult(... */\n        tag_16:\n          swap1\n          swap2\n          swap1\n            /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":7731:8297  if (success) {... */\n          iszero\n          tag_248\n          jumpi\n            /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":7758:7775  return returndata */\n          pop\n          swap1\n          jump\t// out\n            /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":7731:8297  if (success) {... */\n        tag_248:\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          dup2\n          mload\n            /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":7876:7897  returndata.length > 0 */\n          iszero\n            /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":7876:7893  returndata.length */\n          tag_250\n          jumpi\n            /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":8060:8214  assembly {... */\n          pop\n          dup1\n          mload\n          swap1\n          0x20\n          add\n          revert\n            /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":7872:8287  if (returndata.length > 0) {... */\n        tag_250:\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          tag_252\n          swap1\n          mload(0x40)\n            /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":8252:8272  revert(errorMessage) */\n          swap2\n          dup3\n          swap2\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          0x20\n            /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":8252:8272  revert(errorMessage) */\n          0x04\n          dup5\n          add\n            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */\n          mstore\n          0x24\n          dup4\n          add\n          swap1\n          tag_5\n          jump\t// in\n        tag_252:\n            /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":8252:8272  revert(errorMessage) */\n          sub\n          swap1\n          revert\n\n        auxdata: 0xa164736f6c6343000811000a\n    }\n}\n\nsub_2: assembly {\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      0x01a0\n      0x40\n      dup2\n      dup2\n      mstore\n      jumpi(tag_15, callvalue)\n      dup1\n      dup3\n      bytecodeSize\n      dup1\n      codesize\n      sub\n      dup1\n      swap2\n      tag_14\n      dup3\n      dup6\n      tag_2\n      jump\t// in\n    tag_14:\n      dup4\n      codecopy\n      dup2\n      add\n      sub\n      slt\n      tag_15\n      jumpi\n      tag_17\n      dup3\n      tag_3\n      jump\t// in\n    tag_17:\n      swap1\n      tag_18\n      0x20\n      dup1\n      swap5\n      add\n      tag_3\n      jump\t// in\n    tag_18:\n      swap3\n      dup2\n      mload\n      swap4\n      tag_19\n      dup6\n      tag_1\n      jump\t// in\n    tag_19:\n      0x0b\n      dup6\n      mstore\n      shl(0xa8, 0x43503a3a73776170466565)\n      dup3\n      dup7\n      add\n      mstore\n      dup3\n      mload\n      swap1\n      tag_20\n      dup3\n      tag_1\n      jump\t// in\n    tag_20:\n      0x12\n      dup3\n      mstore\n      shl(0x71, 0x2932b9b2b93b37b4b9102628102a37b5b2b7)\n      dup4\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap4\n      tag_21\n      dup6\n      tag_1\n      jump\t// in\n    tag_21:\n      0x06\n      dup6\n      mstore\n      shl(0xd4, 0x05245532d4c5)\n      dup5\n      dup7\n      add\n      mstore\n      dup3\n      mload\n      swap5\n      sub(shl(0x40, 0x01), 0x01)\n      swap4\n      dup5\n      dup8\n      gt\n      tag_22\n      jumpi\n      0x00\n      swap7\n      dup1\n      tag_24\n      dup10\n      sload\n      tag_8\n      jump\t// in\n    tag_24:\n      swap3\n      0x1f\n      swap4\n      dup5\n      dup2\n      gt\n      tag_25\n      jumpi\n    tag_26:\n      pop\n      dup9\n      swap1\n      dup5\n      dup4\n      gt\n      0x01\n      eq\n      tag_27\n      jumpi\n      dup11\n      swap3\n      tag_29\n      jumpi\n    tag_30:\n      pop\n      pop\n      dup2\n      0x01\n      shl\n      swap2\n      not(0x00)\n      swap1\n      0x03\n      shl\n      shr\n      not\n      and\n      or\n      dup8\n      sstore\n    tag_31:\n      dup2\n      mload\n      swap1\n      dup6\n      dup3\n      gt\n      tag_50\n      jumpi\n      dup2\n      swap1\n      0x01\n      swap4\n      tag_34\n      dup6\n      sload\n      tag_8\n      jump\t// in\n    tag_34:\n      dup3\n      dup2\n      gt\n      tag_35\n      jumpi\n    tag_36:\n      pop\n      dup9\n      swap2\n      dup4\n      gt\n      0x01\n      eq\n      tag_37\n      jumpi\n      dup10\n      swap3\n      tag_39\n      jumpi\n    tag_40:\n      pop\n      pop\n      not(0x00)\n      0x03\n      dup4\n      swap1\n      shl\n      shr\n      not\n      and\n      swap1\n      dup3\n      shl\n      or\n      dup2\n      sstore\n    tag_41:\n      0x12\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2142:2162  decimals = _decimals */\n      0x80\n      mstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2192:2205  block.chainid */\n      chainid\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2173:2205  INITIAL_CHAIN_ID = block.chainid */\n      0xa0\n      mstore\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      dup2\n      mload\n      dup7\n      sload\n      swap2\n      dup2\n      dup9\n      tag_42\n      dup6\n      tag_8\n      jump\t// in\n    tag_42:\n      swap3\n      dup4\n      dup4\n      mstore\n      dup10\n      dup4\n      add\n      swap6\n      dup11\n      dup3\n      dup3\n      and\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2116:2132  symbol = _symbol */\n      swap2\n      dup3\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      0x00\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2116:2132  symbol = _symbol */\n      eq\n      tag_43\n      jumpi\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      pop\n      pop\n      0x01\n      eq\n      tag_45\n      jumpi\n    tag_46:\n      pop\n      tag_47\n      swap3\n      pop\n      sub\n      dup3\n      tag_2\n      jump\t// in\n    tag_47:\n      mload\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5789:5811  keccak256(bytes(name)) */\n      swap1\n      keccak256\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      swap2\n      dup2\n      mload\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5640:5935  abi.encode(... */\n      swap3\n      dup6\n      dup5\n      add\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      swap1\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5672:5767  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n      0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      dup3\n      mstore\n      dup4\n      dup6\n      add\n      mstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5833:5847  keccak256(\"1\") */\n      0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      0x60\n      dup6\n      add\n      mstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2192:2205  block.chainid */\n      chainid\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2142:2162  decimals = _decimals */\n      0x80\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      dup6\n      add\n      mstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5912:5916  this */\n      address\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2173:2205  INITIAL_CHAIN_ID = block.chainid */\n      0xa0\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      dup6\n      add\n      mstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2173:2205  INITIAL_CHAIN_ID = block.chainid */\n      0xa0\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5640:5935  abi.encode(... */\n      dup5\n      mstore\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      0xc0\n      dup5\n      add\n      swap1\n      dup5\n      dup3\n      lt\n      dup7\n      dup4\n      gt\n      or\n      tag_50\n      jumpi\n      dup2\n      dup5\n      mstore\n      dup5\n      mload\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5613:5949  keccak256(... */\n      swap1\n      keccak256\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      0xc0\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2215:2266  INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator() */\n      mstore\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      0x0140\n      swap5\n      dup6\n      dup6\n      add\n      swap1\n      dup2\n      gt\n      dup3\n      dup3\n      lt\n      or\n      tag_50\n      jumpi\n      swap1\n      dup8\n      swap2\n      dup5\n      mstore\n      mstore\n        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */\n      0xe0\n      swap8\n      dup7\n      dup10\n      dup6\n      add\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      mstore\n        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */\n      0x0100\n      swap8\n      dup8\n      dup10\n      dup7\n      add\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      mstore\n        /* \"src/ReservoirPair.sol\":3435:3451  type(uint16).max */\n      0xffff\n        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */\n      0x0120\n      dup1\n      swap7\n      add\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      mstore\n      sstore(0x06, shl(0xf0, 0xffff))\n      not(0x00)\n      dup1\n        /* \"src/ReservoirPair.sol\":3519:3536  type(uint256).max */\n      0x08\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      sstore\n        /* \"src/ReservoirPair.sol\":3654:3671  type(uint256).max */\n      0x0a\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      sstore\n        /* \"src/ReservoirPair.sol\":3899:3909  msg.sender */\n      caller\n        /* \"src/ReservoirPair.sol\":3874:3910  factory = GenericFactory(msg.sender) */\n      dup11\n      mstore\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      swap3\n      dup4\n      dup1\n      swap3\n      and\n        /* \"src/ReservoirPair.sol\":3920:3943  token0 = ERC20(aToken0) */\n      dup11\n      mstore\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      and\n        /* \"src/ReservoirPair.sol\":3953:3976  token1 = ERC20(aToken1) */\n      dup5\n      mstore\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      dup3\n      mload\n        /* \"src/ReservoirPair.sol\":4011:4041  abi.encodePacked(aSwapFeeName) */\n      tag_52\n      dup2\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      tag_53\n        /* \"src/ReservoirPair.sol\":4011:4041  abi.encodePacked(aSwapFeeName) */\n      dup10\n      dup3\n      add\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      dup1\n      swap6\n      tag_4\n      jump\t// in\n    tag_53:\n        /* \"src/ReservoirPair.sol\":4011:4041  abi.encodePacked(aSwapFeeName) */\n      sub\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      not(0x1f)\n        /* \"src/ReservoirPair.sol\":4011:4041  abi.encodePacked(aSwapFeeName) */\n      dup2\n      add\n      dup4\n      mstore\n      dup3\n      tag_2\n      jump\t// in\n    tag_52:\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      mload\n        /* \"src/ReservoirPair.sol\":4001:4042  keccak256(abi.encodePacked(aSwapFeeName)) */\n      swap1\n      keccak256\n        /* \"src/ReservoirPair.sol\":3987:4042  swapFeeName = keccak256(abi.encodePacked(aSwapFeeName)) */\n      swap6\n      0x0180\n      swap7\n      dup8\n      mstore\n      tag_54\n      tag_9\n      jump\t// in\n    tag_54:\n      tag_55\n      tag_10\n      jump\t// in\n    tag_55:\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      dup2\n      dup9\n      mload\n      and\n      dup4\n      mload\n      dup8\n      dup2\n        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */\n      0x04\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      dup2\n      shl(0xe0, 0x313ce567)\n        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */\n      swap6\n      dup7\n      dup3\n      mstore\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_56\n      jumpi\n        /* \"src/ReservoirPair.sol\":4151:4173  18 - token0.decimals() */\n      tag_58\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      tag_59\n        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */\n      swap3\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      0xff\n        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */\n      swap3\n      dup7\n      swap2\n      tag_60\n      jumpi\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n    tag_61:\n        /* \"src/ReservoirPair.sol\":4151:4173  18 - token0.decimals() */\n      pop\n      tag_6\n      jump\t// in\n    tag_58:\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      and\n      tag_7\n      jump\t// in\n    tag_59:\n        /* \"src/ReservoirPair.sol\":4107:4174  token0PrecisionMultiplier = uint128(10) ** (18 - token0.decimals()) */\n      dup7\n      mstore\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      dup7\n      dup4\n      dup7\n      mload\n      and\n      swap2\n        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */\n      0x04\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      dup7\n      mload\n        /* \"src/ReservoirPair.sol\":4233:4250  token1.decimals() */\n      dup1\n      swap5\n      dup2\n      swap4\n      dup3\n      mstore\n      gas\n      staticcall\n      swap2\n      dup3\n      iszero\n      tag_62\n      jumpi\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      tag_64\n        /* \"src/ReservoirPair.sol\":4233:4250  token1.decimals() */\n      swap3\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      0xff\n        /* \"src/ReservoirPair.sol\":4233:4250  token1.decimals() */\n      swap3\n        /* \"src/ReservoirPair.sol\":4228:4250  18 - token1.decimals() */\n      tag_58\n        /* \"src/ReservoirPair.sol\":4233:4250  token1.decimals() */\n      swap3\n      swap2\n      tag_66\n      jumpi\n        /* \"src/ReservoirPair.sol\":4228:4250  18 - token1.decimals() */\n      pop\n      tag_6\n      jump\t// in\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n    tag_64:\n        /* \"src/ReservoirPair.sol\":4184:4251  token1PrecisionMultiplier = uint128(10) ** (18 - token1.decimals()) */\n      swap5\n      0x0160\n      swap6\n      dup7\n      mstore\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      dup2\n        /* \"src/ReservoirPair.sol\":17490:17522  factory.read(ORACLE_CALLER_NAME) */\n      tag_68\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      dup2\n      dup12\n      mload\n      and\n      dup6\n      mload\n      swap1\n      tag_69\n      dup3\n      tag_1\n      jump\t// in\n    tag_69:\n      0x14\n      dup3\n      mstore\n      0x5368617265643a3a6f7261636c6543616c6c6572000000000000000000000000\n      dup6\n      dup4\n      add\n      mstore\n        /* \"src/ReservoirPair.sol\":17490:17522  factory.read(ORACLE_CALLER_NAME) */\n      tag_11\n      jump\t// in\n    tag_68:\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      and\n        /* \"src/ReservoirPair.sol\":17562:17574  oracleCaller */\n      0x01000f\n        /* \"src/ReservoirPair.sol\":16881:16903  \"Shared::oracleCaller\" */\n      swap1\n      dup2\n      sload\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      dup5\n      dup2\n      and\n        /* \"src/ReservoirPair.sol\":17548:17574  lNewCaller != oracleCaller */\n      dup7\n      dup2\n      dup5\n      sub\n        /* \"src/ReservoirPair.sol\":17544:17690  if (lNewCaller != oracleCaller) {... */\n      tag_70\n      jumpi\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n    tag_71:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"src/ReservoirPair.sol\":4309:4343  factory.read(MAX_CHANGE_RATE_NAME) */\n      tag_72\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      dup3\n      dup11\n      mload\n      and\n      dup5\n      mload\n      swap1\n      tag_73\n      dup3\n      tag_1\n      jump\t// in\n    tag_73:\n      0x15\n      dup3\n      mstore\n      0x5368617265643a3a6d61784368616e6765526174650000000000000000000000\n      dup5\n      dup4\n      add\n      mstore\n        /* \"src/ReservoirPair.sol\":4309:4343  factory.read(MAX_CHANGE_RATE_NAME) */\n      tag_11\n      jump\t// in\n    tag_72:\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      swap2\n      dup10\n      mload\n      and\n        /* \"src/ReservoirPair.sol\":3899:3909  msg.sender */\n      caller\n        /* \"src/ReservoirPair.sol\":3719:3749  msg.sender == address(factory) */\n      sub\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      tag_74\n      jumpi\n        /* \"src/ReservoirPair.sol\":17789:17807  0 < aMaxChangeRate */\n      dup2\n      iszero\n      iszero\n        /* \"src/ReservoirPair.sol\":17789:17847  0 < aMaxChangeRate && aMaxChangeRate <= MAX_CHANGE_PER_SEC */\n      dup1\n      tag_76\n      jumpi\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n    tag_77:\n        /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */\n      iszero\n      tag_78\n      jumpi\n        /* \"src/ReservoirPair.sol\":17896:17947  MaxChangeRateUpdated(maxChangeRate, aMaxChangeRate) */\n      0x807b9f5907da3f00bf587e77bc07247e1c7ff5ae46c93a584b3a075be0b1bac2\n        /* \"src/ReservoirPair.sol\":17917:17930  maxChangeRate */\n      dup4\n      0x01000d\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      swap3\n      dup5\n      dup5\n      sload\n      swap2\n      dup4\n      mload\n      swap3\n      dup4\n      mstore\n        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */\n      dup3\n      add\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      mstore\n        /* \"src/ReservoirPair.sol\":17896:17947  MaxChangeRateUpdated(maxChangeRate, aMaxChangeRate) */\n      log1\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      sstore\n      mload\n      swap5\n      dataSize(sub_0)\n      swap7\n      dup8\n      dataOffset(sub_0)\n      dup9\n      codecopy\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2142:2162  decimals = _decimals */\n      0x80\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      mload\n      dup8\n      assignImmutable(\"0xb7b2278e6c1d8d0abc309f6bf9256046dfb6cd1d61f6bb10388e8ea4928d3539\")\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2173:2205  INITIAL_CHAIN_ID = block.chainid */\n      0xa0\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      mload\n      dup8\n      assignImmutable(\"0x81290bb363e768cff9ff9a5d447e434874948b933698048b966fdf5d744bf636\")\n      mload(0xc0)\n      dup8\n      assignImmutable(\"0x34382e0db9f4d1365b2614bb97467901a574db9e05159d2f14a2053ade673b06\")\n      mload\n      dup7\n      assignImmutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")\n      mload\n      dup6\n      assignImmutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")\n      mload\n      dup5\n      assignImmutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")\n      mload\n      dup4\n      assignImmutable(\"0x372e991e4284f7d12d6b2461cce9899511b05ac053845de253542adb96f2dca0\")\n      mload\n      dup3\n      assignImmutable(\"0xc4ba931b733b92a51f51c0955dd7716c7a38f3de911d23a5d0fbd5d23c0fbe8c\")\n      mload\n      dup2\n      assignImmutable(\"0x4c21324e1a4fdca228db96f937188124acece199982b123b328bdd8fee41b354\")\n      return\n        /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */\n    tag_78:\n      0x64\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      swap1\n      dup4\n      mload\n      swap1\n      shl(0xe5, 0x461bcd)\n        /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */\n      dup3\n      mstore\n        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */\n      0x04\n        /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */\n      dup3\n      add\n      mstore\n      0x1d\n      0x24\n      dup3\n      add\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      mstore\n        /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */\n      0x4f573a20494e56414c49445f4348414e47455f5045525f5345434f4e44000000\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      0x44\n      dup3\n      add\n        /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */\n      mstore\n      revert\n        /* \"src/ReservoirPair.sol\":17789:17847  0 < aMaxChangeRate && aMaxChangeRate <= MAX_CHANGE_PER_SEC */\n    tag_76:\n        /* \"src/ReservoirPair.sol\":17811:17847  aMaxChangeRate <= MAX_CHANGE_PER_SEC */\n      pop\n        /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */\n      0x2386f26fc10000\n        /* \"src/ReservoirPair.sol\":17811:17847  aMaxChangeRate <= MAX_CHANGE_PER_SEC */\n      dup3\n      gt\n      iszero\n        /* \"src/ReservoirPair.sol\":17789:17847  0 < aMaxChangeRate && aMaxChangeRate <= MAX_CHANGE_PER_SEC */\n      jump(tag_77)\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n    tag_74:\n      0x64\n      swap1\n      dup4\n      mload\n      swap1\n      shl(0xe5, 0x461bcd)\n      dup3\n      mstore\n        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */\n      0x04\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa1, 0x281d102327a92124a22222a7)\n      0x44\n      dup3\n      add\n      mstore\n      revert\n        /* \"src/ReservoirPair.sol\":17544:17690  if (lNewCaller != oracleCaller) {... */\n    tag_70:\n        /* \"src/ReservoirPair.sol\":17595:17640  OracleCallerUpdated(oracleCaller, lNewCaller) */\n      0x262681b3b01b61ff6d02569759105771205cdd274fb3c45535b50632e0a3523f\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      swap2\n      dup2\n      mload\n      swap1\n      dup2\n      mstore\n        /* \"src/ReservoirPair.sol\":16881:16903  \"Shared::oracleCaller\" */\n      dup5\n      dup8\n      dup3\n      add\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      mstore\n        /* \"src/ReservoirPair.sol\":17595:17640  OracleCallerUpdated(oracleCaller, lNewCaller) */\n      log1\n      not(sub(shl(0xa0, 0x01), 0x01))\n        /* \"src/ReservoirPair.sol\":16881:16903  \"Shared::oracleCaller\" */\n      and\n      or\n      swap1\n      sstore\n        /* \"src/ReservoirPair.sol\":17544:17690  if (lNewCaller != oracleCaller) {... */\n      codesize\n      dup1\n      dup1\n      dup1\n      dup7\n      jump(tag_71)\n        /* \"src/ReservoirPair.sol\":4233:4250  token1.decimals() */\n    tag_66:\n      tag_80\n      swap2\n      pop\n      dup10\n      returndatasize\n      dup12\n      gt\n      tag_81\n      jumpi\n    tag_82:\n      tag_83\n      dup2\n      dup4\n      tag_2\n      jump\t// in\n    tag_83:\n      dup2\n      add\n      swap1\n      tag_5\n      jump\t// in\n    tag_80:\n      codesize\n      jump(tag_61)\n    tag_81:\n      pop\n      returndatasize\n      jump(tag_82)\n    tag_62:\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      dup5\n      mload\n      swap1\n      returndatasize\n      swap1\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */\n    tag_60:\n      tag_80\n      swap2\n      pop\n      dup12\n      returndatasize\n      dup14\n      gt\n      tag_81\n      jumpi\n      tag_83\n      dup2\n      dup4\n      tag_2\n      jump\t// in\n    tag_56:\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      dup6\n      mload\n      returndatasize\n      dup6\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n    tag_50:\n      shl(0xe0, 0x4e487b71)\n      dup9\n      mstore\n      mstore(0x04, 0x41)\n      0x24\n      dup9\n      revert\n    tag_45:\n      dup10\n      swap2\n      pop\n      dup11\n      dup1\n      mstore\n      dup2\n      dup12\n      keccak256\n      swap1\n      dup12\n      swap2\n    tag_88:\n      dup6\n      dup4\n      lt\n      tag_89\n      jumpi\n      pop\n      pop\n      tag_47\n      swap4\n      pop\n      dup3\n      add\n      add\n      codesize\n      jump(tag_46)\n    tag_89:\n      dup1\n      sload\n      dup4\n      dup9\n      add\n      dup6\n      add\n      mstore\n      dup7\n      swap5\n      pop\n      dup12\n      swap4\n      swap1\n      swap3\n      add\n      swap2\n      dup2\n      add\n      jump(tag_88)\n    tag_43:\n      not(0xff)\n      and\n      dup9\n      mstore\n      tag_47\n      swap6\n      iszero\n      iszero\n      0x05\n      shl\n      dup6\n      add\n      add\n      swap3\n      pop\n      codesize\n      swap2\n      pop\n      tag_46\n      swap1\n      pop\n      jump\n    tag_39:\n      add\n      mload\n      swap1\n      pop\n      codesize\n      dup1\n      jump(tag_40)\n    tag_37:\n      dup5\n      dup11\n      mstore\n      dup9\n      dup11\n      keccak256\n      dup6\n      swap5\n      pop\n      swap2\n      swap1\n      not(0x1f)\n      dup5\n      and\n      dup12\n    tag_91:\n      dup12\n      dup3\n      dup3\n      lt\n      tag_92\n      jumpi\n      pop\n      pop\n      dup5\n      gt\n      tag_94\n      jumpi\n    tag_95:\n      pop\n      pop\n      pop\n      dup2\n      shl\n      add\n      dup2\n      sstore\n      jump(tag_41)\n    tag_94:\n      add\n      mload\n      not(0x00)\n      0xf8\n      dup5\n      0x03\n      shl\n      and\n      shr\n      not\n      and\n      swap1\n      sstore\n      codesize\n      dup1\n      dup1\n      jump(tag_95)\n    tag_92:\n      dup4\n      dup6\n      add\n      mload\n      dup7\n      sstore\n      dup9\n      swap8\n      swap1\n      swap6\n      add\n      swap5\n      swap4\n      dup5\n      add\n      swap4\n      add\n      jump(tag_91)\n    tag_35:\n      swap1\n      swap2\n      swap3\n      pop\n      dup5\n      dup11\n      mstore\n      dup9\n      dup11\n      keccak256\n      dup4\n      dup1\n      dup7\n      add\n      0x05\n      shr\n      dup3\n      add\n      swap3\n      dup12\n      dup8\n      lt\n      tag_96\n      jumpi\n    tag_97:\n      swap2\n      dup7\n      swap6\n      dup9\n      swap3\n      swap6\n      swap5\n      swap4\n      add\n      0x05\n      shr\n      add\n      swap2\n    tag_98:\n      dup3\n      dup2\n      lt\n      tag_99\n      jumpi\n      pop\n      pop\n      jump(tag_36)\n    tag_99:\n      dup13\n      dup2\n      sstore\n      dup7\n      swap6\n      pop\n      dup8\n      swap2\n      add\n      jump(tag_98)\n    tag_96:\n      swap3\n      pop\n      dup2\n      swap3\n      jump(tag_97)\n    tag_29:\n      add\n      mload\n      swap1\n      pop\n      codesize\n      dup1\n      jump(tag_30)\n    tag_27:\n      dup11\n      dup1\n      mstore\n      dup10\n      dup12\n      keccak256\n      swap3\n      pop\n      not(0x1f)\n      dup5\n      and\n      dup12\n    tag_101:\n      dup12\n      dup3\n      dup3\n      lt\n      tag_102\n      jumpi\n      pop\n      pop\n      swap1\n      dup5\n      0x01\n      swap6\n      swap5\n      swap4\n      swap3\n      lt\n      tag_104\n      jumpi\n    tag_105:\n      pop\n      pop\n      pop\n      dup2\n      shl\n      add\n      dup8\n      sstore\n      jump(tag_31)\n    tag_104:\n      add\n      mload\n      not(0x00)\n      0xf8\n      dup5\n      0x03\n      shl\n      and\n      shr\n      not\n      and\n      swap1\n      sstore\n      codesize\n      dup1\n      dup1\n      jump(tag_105)\n    tag_102:\n      0x01\n      dup6\n      swap7\n      dup3\n      swap4\n      swap7\n      dup7\n      add\n      mload\n      dup2\n      sstore\n      add\n      swap6\n      add\n      swap4\n      add\n      jump(tag_101)\n    tag_25:\n      swap1\n      swap2\n      pop\n      dup10\n      dup1\n      mstore\n      dup9\n      dup11\n      keccak256\n      dup5\n      dup1\n      dup6\n      add\n      0x05\n      shr\n      dup3\n      add\n      swap3\n      dup12\n      dup7\n      lt\n      tag_106\n      jumpi\n    tag_107:\n      swap1\n      dup6\n      swap5\n      swap4\n      swap3\n      swap2\n      add\n      0x05\n      shr\n      add\n      swap1\n    tag_108:\n      dup2\n      dup2\n      lt\n      tag_109\n      jumpi\n      pop\n      jump(tag_26)\n    tag_109:\n      dup12\n      dup2\n      sstore\n      dup5\n      swap4\n      pop\n      0x01\n      add\n      jump(tag_108)\n    tag_106:\n      swap3\n      pop\n      dup2\n      swap3\n      jump(tag_107)\n    tag_22:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_15:\n      0x00\n      dup1\n      revert\n    tag_1:\n      0x40\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      or\n      tag_22\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_2:\n      0x1f\n      swap1\n      swap2\n      add\n      not(0x1f)\n      and\n      dup2\n      add\n      swap1\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      swap1\n      dup3\n      lt\n      or\n      tag_22\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_3:\n      mload\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_15\n      jumpi\n      jump\t// out\n    tag_4:\n      swap1\n      dup2\n      mload\n      swap2\n      0x00\n    tag_117:\n      dup4\n      dup2\n      lt\n      tag_118\n      jumpi\n      pop\n      pop\n      add\n      0x00\n      dup2\n      mstore\n      swap1\n      jump\t// out\n    tag_118:\n      dup1\n      0x20\n      dup1\n      swap3\n      dup5\n      add\n      add\n      mload\n      dup2\n      dup6\n      add\n      mstore\n      add\n      jump(tag_117)\n    tag_5:\n      swap1\n      dup2\n      0x20\n      swap2\n      sub\n      slt\n      tag_15\n      jumpi\n      mload\n      0xff\n      dup2\n      and\n      dup2\n      sub\n      tag_15\n      jumpi\n      swap1\n      jump\t// out\n    tag_6:\n      0xff\n      and\n      0x12\n      sub\n      swap1\n      0xff\n      dup3\n      gt\n      tag_124\n      jumpi\n      jump\t// out\n    tag_124:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n    tag_7:\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x01\n      swap1\n      0x20\n      dup2\n      lt\n      dup3\n      and\n      0x4e\n      dup3\n      lt\n      dup4\n      and\n      or\n      tag_128\n      jumpi\n      dup2\n      swap1\n      0x0a\n      swap3\n    tag_130:\n      dup1\n      dup3\n      gt\n      tag_131\n      jumpi\n      pop\n      pop\n      sub(shl(0x80, 0x01), 0x01)\n      dup3\n      swap1\n      div\n      dup2\n      gt\n      tag_124\n      jumpi\n      mul\n      swap1\n      jump\t// out\n    tag_131:\n      swap1\n      swap3\n      sub(shl(0x80, 0x01), 0x01)\n      dup2\n      swap1\n      div\n      dup2\n      gt\n      tag_124\n      jumpi\n      dup2\n      dup5\n      and\n      tag_137\n      jumpi\n    tag_138:\n      dup1\n      mul\n      swap3\n      dup2\n      shr\n      swap1\n      jump(tag_130)\n    tag_137:\n      dup1\n      swap3\n      mul\n      swap2\n      jump(tag_138)\n    tag_128:\n      0x0a\n      exp\n      swap2\n      swap1\n      pop\n      sub(shl(0x80, 0x01), 0x01)\n      dup3\n      gt\n      tag_124\n      jumpi\n      jump\t// out\n    tag_126:\n      pop\n      0x01\n      swap1\n      jump\t// out\n    tag_8:\n      swap1\n      0x01\n      dup3\n      dup2\n      shr\n      swap3\n      and\n      dup1\n      iszero\n      tag_141\n      jumpi\n    tag_142:\n      0x20\n      dup4\n      lt\n      eq\n      tag_143\n      jumpi\n      jump\t// out\n    tag_143:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x22)\n      revert(0x00, 0x24)\n    tag_141:\n      swap2\n      0x7f\n      and\n      swap2\n      jump(tag_142)\n        /* \"src/ReservoirPair.sol\":7293:7635  function updateSwapFee() public {... */\n    tag_9:\n        /* \"src/ReservoirPair.sol\":7354:7367  customSwapFee */\n      0x08\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      sload\n      0x00\n      not(0x00)\n        /* \"src/ReservoirPair.sol\":7354:7388  customSwapFee != type(uint256).max */\n      dup3\n      eq\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      tag_145\n      jumpi\n        /* \"src/ReservoirPair.sol\":7354:7443  customSwapFee != type(uint256).max ? customSwapFee : factory.get(swapFeeName).toUint256() */\n      pop\n    tag_147:\n        /* \"src/ReservoirPair.sol\":7469:7476  swapFee */\n      0x07\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      sload\n        /* \"src/ReservoirPair.sol\":7457:7476  _swapFee == swapFee */\n      dup1\n      dup3\n      eq\n        /* \"src/ReservoirPair.sol\":7453:7485  if (_swapFee == swapFee) return; */\n      tag_148\n      jumpi\n        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */\n      0x4e20\n        /* \"src/ReservoirPair.sol\":7503:7527  _swapFee <= MAX_SWAP_FEE */\n      dup3\n      gt\n        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */\n      tag_150\n      jumpi\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      0x40\n        /* \"src/ReservoirPair.sol\":7567:7600  SwapFeeChanged(swapFee, _swapFee) */\n      0xad321f810529281bbb90384fd6fecbdda41509a5ccd7bd5aed986ed827f6a026\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      swap2\n      dup2\n      mload\n      swap1\n      dup2\n      mstore\n        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */\n      dup4\n      0x20\n      dup3\n      add\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      mstore\n        /* \"src/ReservoirPair.sol\":7567:7600  SwapFeeChanged(swapFee, _swapFee) */\n      log1\n        /* \"src/ReservoirPair.sol\":7469:7476  swapFee */\n      0x07\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      sstore\n        /* \"src/ReservoirPair.sol\":7293:7635  function updateSwapFee() public {... */\n      jump\t// out\n        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */\n    tag_150:\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x13\n      0x24\n      dup3\n      add\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      mstore\n        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */\n      0x503a20494e56414c49445f535741505f46454500000000000000000000000000\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      0x44\n      dup3\n      add\n        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"src/ReservoirPair.sol\":7453:7485  if (_swapFee == swapFee) return; */\n    tag_148:\n        /* \"src/ReservoirPair.sol\":7478:7485  return; */\n      pop\n      pop\n      jump\t// out\n        /* \"src/ReservoirPair.sol\":7354:7443  customSwapFee != type(uint256).max ? customSwapFee : factory.get(swapFeeName).toUint256() */\n    tag_145:\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      swap1\n      pop\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n        /* \"src/ReservoirPair.sol\":7407:7414  factory */\n      0xe0\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      mload\n      and\n        /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */\n      0x20\n        /* \"src/ReservoirPair.sol\":7419:7430  swapFeeName */\n      0x0180\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      mload\n      0x24\n      mload(0x40)\n      dup1\n      swap5\n      dup2\n      swap4\n      shl(0xe6, 0x023aa9ab)\n        /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */\n      dup4\n      mstore\n      0x04\n      dup4\n      add\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      mstore\n        /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */\n      gas\n      staticcall\n      swap2\n      dup3\n      iszero\n      tag_152\n      jumpi\n      dup1\n      swap3\n      tag_154\n      jumpi\n        /* \"src/ReservoirPair.sol\":7354:7443  customSwapFee != type(uint256).max ? customSwapFee : factory.get(swapFeeName).toUint256() */\n    tag_155:\n      pop\n      pop\n      jump(tag_147)\n        /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */\n    tag_154:\n      swap1\n      swap2\n      pop\n      0x20\n      dup3\n      returndatasize\n      dup3\n      gt\n      tag_156\n      jumpi\n    tag_157:\n      dup2\n      tag_158\n      0x20\n      swap4\n      dup4\n      tag_2\n      jump\t// in\n    tag_158:\n      dup2\n      add\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      sub\n      slt\n      tag_159\n      jumpi\n      pop\n      mload\n        /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */\n      codesize\n      dup1\n      jump(tag_155)\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n    tag_159:\n      dup1\n      revert\n        /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */\n    tag_156:\n      returndatasize\n      swap2\n      pop\n      jump(tag_157)\n    tag_152:\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      mload(0x40)\n      swap1\n      returndatasize\n      swap1\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"src/ReservoirPair.sol\":7641:8058  function updatePlatformFee() public {... */\n    tag_10:\n        /* \"src/ReservoirPair.sol\":7722:7739  customPlatformFee */\n      0x0a\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      sload\n      not(0x00)\n        /* \"src/ReservoirPair.sol\":7722:7760  customPlatformFee != type(uint256).max */\n      dup2\n      eq\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      tag_161\n      jumpi\n        /* \"src/ReservoirPair.sol\":7722:7826  customPlatformFee != type(uint256).max ? customPlatformFee : factory.read(PLATFORM_FEE_NAME).toUint256() */\n    tag_163:\n        /* \"src/ReservoirPair.sol\":7856:7867  platformFee */\n      0x09\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      sload\n        /* \"src/ReservoirPair.sol\":7840:7867  _platformFee == platformFee */\n      dup1\n      dup3\n      eq\n        /* \"src/ReservoirPair.sol\":7836:7876  if (_platformFee == platformFee) return; */\n      tag_148\n      jumpi\n        /* \"src/ReservoirPair.sol\":2789:2796  500_000 */\n      0x07a120\n        /* \"src/ReservoirPair.sol\":7894:7926  _platformFee <= MAX_PLATFORM_FEE */\n      dup3\n      gt\n        /* \"src/ReservoirPair.sol\":2789:2796  500_000 */\n      tag_166\n      jumpi\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      0x40\n        /* \"src/ReservoirPair.sol\":7970:8015  PlatformFeeChanged(platformFee, _platformFee) */\n      0xc98a8b10b63c929f7799380bb4a0c444c713ebf74d8732f944c915034121aad1\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      swap2\n      dup2\n      mload\n      swap1\n      dup2\n      mstore\n        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */\n      dup4\n      0x20\n      dup3\n      add\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      mstore\n        /* \"src/ReservoirPair.sol\":7970:8015  PlatformFeeChanged(platformFee, _platformFee) */\n      log1\n        /* \"src/ReservoirPair.sol\":7856:7867  platformFee */\n      0x09\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      sstore\n        /* \"src/ReservoirPair.sol\":7641:8058  function updatePlatformFee() public {... */\n      jump\t// out\n        /* \"src/ReservoirPair.sol\":2789:2796  500_000 */\n    tag_166:\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n        /* \"src/ReservoirPair.sol\":2789:2796  500_000 */\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x17\n      0x24\n      dup3\n      add\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      mstore\n        /* \"src/ReservoirPair.sol\":2789:2796  500_000 */\n      0x503a20494e56414c49445f504c4154464f524d5f464545000000000000000000\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      0x44\n      dup3\n      add\n        /* \"src/ReservoirPair.sol\":2789:2796  500_000 */\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"src/ReservoirPair.sol\":7722:7826  customPlatformFee != type(uint256).max ? customPlatformFee : factory.read(PLATFORM_FEE_NAME).toUint256() */\n    tag_161:\n      pop\n        /* \"src/ReservoirPair.sol\":7783:7790  factory */\n      0xe0\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      mload\n      mload(0x40)\n        /* \"src/ReservoirPair.sol\":7783:7814  factory.read(PLATFORM_FEE_NAME) */\n      tag_168\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      and\n      tag_169\n      dup3\n      tag_1\n      jump\t// in\n    tag_169:\n      0x13\n      dup3\n      mstore\n      0x5368617265643a3a706c6174666f726d46656500000000000000000000000000\n      0x20\n      dup4\n      add\n      mstore\n        /* \"src/ReservoirPair.sol\":7783:7814  factory.read(PLATFORM_FEE_NAME) */\n      tag_11\n      jump\t// in\n    tag_168:\n        /* \"src/ReservoirPair.sol\":7722:7826  customPlatformFee != type(uint256).max ? customPlatformFee : factory.read(PLATFORM_FEE_NAME).toUint256() */\n      jump(tag_163)\n        /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */\n    tag_11:\n      swap1\n        /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */\n      0x20\n        /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */\n      swap1\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      mload(0x40)\n        /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */\n      tag_170\n      dup2\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      tag_53\n        /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */\n      dup6\n      dup3\n      add\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      dup1\n      swap6\n      tag_4\n      jump\t// in\n        /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */\n    tag_170:\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      mload\n        /* \"src/libraries/FactoryStore.sol\":476:509  keccak256(abi.encodePacked(aKey)) */\n      swap1\n      keccak256\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      mload(0x40)\n      shl(0xe6, 0x023aa9ab)\n        /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      swap2\n      swap1\n      swap2\n      mstore\n      swap2\n      dup3\n      swap1\n      0x24\n      swap1\n      dup3\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_172\n      jumpi\n      0x00\n      swap2\n      tag_174\n      jumpi\n        /* \"src/libraries/FactoryStore.sol\":456:510  return aFactory.get(keccak256(abi.encodePacked(aKey))) */\n      pop\n        /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */\n    tag_174:\n      swap1\n        /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */\n      0x20\n        /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */\n      dup3\n      returndatasize\n      dup3\n      gt\n      tag_176\n      jumpi\n    tag_177:\n      dup2\n      tag_178\n        /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */\n      0x20\n        /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */\n      swap4\n      dup4\n      tag_2\n      jump\t// in\n    tag_178:\n      dup2\n      add\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      sub\n      slt\n      tag_159\n      jumpi\n      pop\n      mload\n        /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */\n    tag_176:\n      returndatasize\n      swap2\n      pop\n      jump(tag_177)\n    tag_172:\n        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n    stop\n\n    sub_0: assembly {\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0xa0\n          0x40\n          swap1\n          dup1\n          dup3\n          mstore\n          0x04\n          swap2\n          dup3\n          calldatasize\n          lt\n          iszero\n          tag_55\n          jumpi\n          0x00\n          dup1\n          revert\n        tag_55:\n          0x00\n          swap3\n          dup4\n          calldataload\n          0xe0\n          shr\n          swap3\n          dup4\n          0x06fdde03\n          eq\n          tag_57\n          jumpi\n          pop\n          dup3\n          0x0902f1ac\n          eq\n          tag_59\n          jumpi\n          dup3\n          0x095ea7b3\n          eq\n          tag_61\n          jumpi\n          dup3\n          0x0c472afd\n          eq\n          tag_63\n          jumpi\n          dup3\n          0x0dfe1681\n          eq\n          tag_65\n          jumpi\n          dup3\n          0x18160ddd\n          eq\n          tag_67\n          jumpi\n          dup3\n          0x23b872dd\n          eq\n          tag_69\n          jumpi\n          dup3\n          0x26232a2e\n          eq\n          tag_71\n          jumpi\n          dup3\n          0x313ce567\n          eq\n          tag_73\n          jumpi\n          dup3\n          0x31c49074\n          eq\n          tag_75\n          jumpi\n          dup3\n          0x3644e515\n          eq\n          tag_77\n          jumpi\n          dup3\n          0x3998a681\n          eq\n          tag_79\n          jumpi\n          dup3\n          0x48ee4332\n          eq\n          tag_81\n          jumpi\n          dup3\n          0x495bc0fb\n          eq\n          tag_83\n          jumpi\n          dup3\n          0x4dfa1ff9\n          eq\n          tag_85\n          jumpi\n          dup3\n          0x54cf2aeb\n          eq\n          tag_87\n          jumpi\n          dup3\n          0x6a627842\n          eq\n          tag_89\n          jumpi\n          dup3\n          0x70a08231\n          eq\n          tag_91\n          jumpi\n          dup3\n          0x7464fc3d\n          eq\n          tag_93\n          jumpi\n          dup3\n          0x7c3cbc7c\n          eq\n          tag_95\n          jumpi\n          dup3\n          0x7ecebe00\n          eq\n          tag_97\n          jumpi\n          dup3\n          0x85faf624\n          eq\n          tag_99\n          jumpi\n          dup3\n          0x89afcb44\n          eq\n          tag_101\n          jumpi\n          dup3\n          0x94217ad1\n          eq\n          tag_103\n          jumpi\n          dup3\n          0x9568e73b\n          eq\n          tag_105\n          jumpi\n          dup3\n          0x95d89b41\n          eq\n          tag_107\n          jumpi\n          dup3\n          0x97e37764\n          eq\n          tag_109\n          jumpi\n          dup3\n          0x9be65a60\n          eq\n          tag_111\n          jumpi\n          dup3\n          0x9d62a694\n          eq\n          tag_113\n          jumpi\n          dup3\n          0xa9059cbb\n          eq\n          tag_115\n          jumpi\n          dup3\n          0xab3d8544\n          eq\n          tag_117\n          jumpi\n          dup3\n          0xad7853e9\n          eq\n          tag_119\n          jumpi\n          dup3\n          0xafb4a43b\n          eq\n          tag_121\n          jumpi\n          dup3\n          0xb62221e0\n          eq\n          tag_123\n          jumpi\n          dup3\n          0xba9a7a56\n          eq\n          tag_125\n          jumpi\n          dup3\n          0xbc25cf77\n          eq\n          tag_127\n          jumpi\n          dup3\n          0xc45a0155\n          eq\n          tag_129\n          jumpi\n          dup3\n          0xc58771ef\n          eq\n          tag_131\n          jumpi\n          dup3\n          0xd0ebdbe7\n          eq\n          tag_133\n          jumpi\n          dup3\n          0xd21220a7\n          eq\n          tag_135\n          jumpi\n          dup3\n          0xd505accf\n          eq\n          tag_137\n          jumpi\n          dup3\n          0xdb6488dc\n          eq\n          tag_139\n          jumpi\n          dup3\n          0xdbc781bc\n          eq\n          tag_141\n          jumpi\n          dup3\n          0xdd62ed3e\n          eq\n          tag_143\n          jumpi\n          dup3\n          0xe12bd9d8\n          eq\n          tag_145\n          jumpi\n          pop\n          dup2\n          0xe9bdf7b8\n          eq\n          tag_147\n          jumpi\n          dup2\n          0xfbcd9b05\n          eq\n          tag_149\n          jumpi\n          pop\n          0xfff6cae9\n          eq\n          tag_151\n          jumpi\n          0x00\n          dup1\n          revert\n        tag_151:\n          jumpi(tag_155, callvalue)\n          dup1\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_155\n          jumpi\n            /* \"src/ReservoirPair.sol\":6307:6326  lBlockTimestampLast */\n          tag_157\n            /* \"src/ReservoirPair.sol\":6191:6225  _syncManaged(lReserve0, lReserve1) */\n          tag_158\n            /* \"src/ReservoirPair.sol\":6142:6156  _lockAndLoad() */\n          tag_159\n          tag_13\n          jump\t// in\n        tag_159:\n          pop\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap3\n          swap2\n          0xffffffffffffffffffffffffff\n          swap2\n          dup3\n          and\n          swap2\n          and\n            /* \"src/ReservoirPair.sol\":6191:6225  _syncManaged(lReserve0, lReserve1) */\n          tag_27\n          jump\t// in\n        tag_158:\n            /* \"src/ReservoirPair.sol\":6253:6267  _totalToken0() */\n          swap1\n          tag_160\n          tag_24\n          jump\t// in\n        tag_160:\n            /* \"src/ReservoirPair.sol\":6269:6283  _totalToken1() */\n          tag_161\n          tag_25\n          jump\t// in\n        tag_161:\n            /* \"src/ReservoirPair.sol\":6307:6326  lBlockTimestampLast */\n          swap1\n          tag_22\n          jump\t// in\n        tag_157:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup1\n          return\n        tag_155:\n          dup1\n          revert\n        tag_149:\n          swap1\n          pop\n          jumpi(tag_164, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_164\n          jumpi\n          0x20\n          swap1\n          mload\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":1117:1121  1e38 */\n          0x4b3b4ca85a86c47a098a224000000000\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup2\n          mstore\n          return\n        tag_164:\n          pop\n          dup1\n          revert\n        tag_147:\n          swap1\n          pop\n          jumpi(tag_164, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_164\n          jumpi\n          0x20\n          swap1\n          0xffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":12800:12828  uint104 public token0Managed */\n          0x0c\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n          and\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_145:\n          swap2\n          pop\n          jumpi(tag_176, callvalue)\n          jumpi(tag_176, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x80))\n          0x24\n          swap3\n          dup4\n          calldataload\n          dup4\n          calldataload\n          dup2\n          iszero\n          iszero\n          dup3\n          sub\n          tag_176\n          jumpi\n          calldataload(0x44)\n          swap3\n          0xffffffffffffffffffffffffffffffffffffffff\n          swap3\n          dup4\n          dup6\n          and\n          swap5\n          dup6\n          dup2\n          sub\n          tag_176\n          jumpi\n          calldataload(0x64)\n          swap9\n          0xffffffffffffffff\n          swap9\n          dup10\n          dup12\n          gt\n          tag_184\n          jumpi\n          calldatasize\n          0x23\n          dup13\n          add\n          slt\n          iszero\n          tag_184\n          jumpi\n          dup11\n          dup2\n          add\n          calldataload\n          swap10\n          dup11\n          gt\n          tag_184\n          jumpi\n          calldatasize\n          dup3\n          dup12\n          dup14\n          add\n          add\n          gt\n          tag_184\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":8669:8683  _lockAndLoad() */\n          tag_186\n          tag_13\n          jump\t// in\n        tag_186:\n          pop\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap13\n          0xffffffffffffffffffffffffff\n          swap3\n          dup4\n          and\n          swap13\n          swap2\n          swap1\n          swap3\n          and\n          swap6\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":8701:8713  aAmount != 0 */\n          dup9\n          iszero\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          tag_187\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":8743:8760  uint256 lAmountIn */\n          dup13\n          swap6\n          swap5\n          swap4\n          swap3\n          swap2\n          swap1\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":8816:10099  if (aInOrOut) {... */\n          iszero\n          tag_189\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":8908:8919  aAmount > 0 */\n          dup8\n          dup10\n          sgt\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          iszero\n          tag_191\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":8951:8957  token1 */\n          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":8975:9003  lAmountIn = uint256(aAmount) */\n          swap5\n          dup8\n          dup11\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup9\n          dup3\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":9081:9088  swapFee */\n          0x07\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":9034:9089  _getAmountOut(lAmountIn, lReserve0, lReserve1, swapFee) */\n          swap2\n          tag_193\n          swap4\n          tag_45\n          jump\t// in\n        tag_193:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":8904:9366  if (aAmount > 0) {... */\n          swap15\n          dup16\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10208:10217  lReserve1 */\n          tag_194\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":8904:9366  if (aAmount > 0) {... */\n          swap4\n        tag_195:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10208:10217  lReserve1 */\n          dup10\n          tag_20\n          jump\t// in\n        tag_194:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10233:10249  aData.length > 0 */\n          dup1\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10229:10534  if (aData.length > 0) {... */\n          tag_197\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":8816:10099  if (aInOrOut) {... */\n        tag_198:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10564:10578  _totalToken0() */\n          pop\n          pop\n          tag_199\n          tag_24\n          jump\t// in\n        tag_199:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10608:10622  _totalToken1() */\n          swap2\n          dup9\n          tag_200\n          tag_25\n          jump\t// in\n        tag_200:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap5\n          and\n          swap7\n          pop\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10666:10672  token0 */\n          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup10\n          and\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10653:10672  lTokenOut == token0 */\n          dup8\n          sub\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          tag_201\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10675:10696  lBalance1 - lReserve1 */\n          tag_203\n          dup7\n          dup6\n          tag_10\n          jump\t// in\n        tag_203:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10653:10720  lTokenOut == token0 ? lBalance1 - lReserve1 : lBalance0 - lReserve0 */\n          dup1\n          swap9\n        tag_204:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10738:10760  lAmountIn <= lReceived */\n          gt\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          tag_205\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10863:10882  lBlockTimestampLast */\n          pop\n          pop\n          swap2\n          tag_207\n          swap4\n          swap2\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0x20\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10863:10882  lBlockTimestampLast */\n          swap12\n          swap4\n          tag_22\n          jump\t// in\n        tag_207:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup5\n          mload\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10928:10934  token1 */\n          swap3\n          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          and\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10915:10934  lTokenOut == token1 */\n          eq\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup3\n          mstore\n          dup6\n          dup3\n          add\n          mstore\n          dup4\n          dup4\n          dup3\n          add\n          mstore\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10898:10963  Swap(msg.sender, lTokenOut == token1, lReceived, rAmountOut, aTo) */\n          0x66251e495e6e69e208ab08e2bc259dbe2ef482a8c4a93b8984b03a1eb27e1b9e\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0x60\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10903:10913  msg.sender */\n          caller\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10898:10963  Swap(msg.sender, lTokenOut == token1, lReceived, rAmountOut, aTo) */\n          swap3\n          log3\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_205:\n          swap1\n          0x1a\n          0x64\n          swap3\n          0x20\n          dup14\n          mload\n          swap4\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup6\n          mstore\n          dup5\n          add\n          mstore\n          dup3\n          add\n          mstore\n          0x43503a20494e53554646494349454e545f414d4f554e545f494e000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10653:10720  lTokenOut == token0 ? lBalance1 - lReserve1 : lBalance0 - lReserve0 */\n        tag_201:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10699:10720  lBalance0 - lReserve0 */\n          tag_208\n          dup6\n          dup5\n          tag_10\n          jump\t// in\n        tag_208:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10653:10720  lTokenOut == token0 ? lBalance1 - lReserve1 : lBalance0 - lReserve0 */\n          dup1\n          swap9\n          jump(tag_204)\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10229:10534  if (aData.length > 0) {... */\n        tag_197:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup5\n          dup11\n          and\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10359:10365  token0 */\n          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup12\n          and\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10346:10365  lTokenOut == token0 */\n          dup2\n          sub\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          tag_209\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10346:10407  lTokenOut == token0 ? int256(rAmountOut) : -int256(lAmountIn) */\n          dup14\n          swap1\n        tag_211:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10438:10444  token1 */\n          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup13\n          and\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10425:10444  lTokenOut == token1 */\n          sub\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          tag_212\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10425:10486  lTokenOut == token1 ? int256(rAmountOut) : -int256(lAmountIn) */\n          dup14\n          swap2\n        tag_214:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10265:10523  IReservoirCallee(aTo).reservoirCall(... */\n          dup13\n          extcodesize\n          iszero\n          tag_215\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup10\n          swap3\n          swap2\n          dup4\n          dup16\n          dup16\n          swap4\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n          0x1f\n          dup3\n          dup12\n          swap4\n          dup14\n          0xa4\n          swap7\n          mload\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10265:10523  IReservoirCallee(aTo).reservoirCall(... */\n          swap13\n          dup14\n          swap12\n          dup13\n          swap11\n          dup12\n          swap9\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0x4fc7c21700000000000000000000000000000000000000000000000000000000\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10265:10523  IReservoirCallee(aTo).reservoirCall(... */\n          dup11\n          mstore\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10318:10328  msg.sender */\n          caller\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10265:10523  IReservoirCallee(aTo).reservoirCall(... */\n          swap1\n          dup11\n          add\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mstore\n          dup4\n          dup10\n          add\n          mstore\n          0x44\n          dup9\n          add\n          mstore\n          0x80\n          0x64\n          dup9\n          add\n          mstore\n          dup3\n          0x84\n          dup9\n          add\n          mstore\n          add\n          dup7\n          dup7\n          add\n          calldatacopy\n          dup6\n          dup6\n          dup3\n          dup7\n          add\n          add\n          mstore\n          add\n          and\n          dup2\n          add\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10265:10523  IReservoirCallee(aTo).reservoirCall(... */\n          sub\n          add\n          swap3\n          gas\n          call\n          dup1\n          iszero\n          tag_217\n          jumpi\n          tag_219\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10425:10486  lTokenOut == token1 ? int256(rAmountOut) : -int256(lAmountIn) */\n        tag_220:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10229:10534  if (aData.length > 0) {... */\n          dup1\n          jump(tag_198)\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10265:10523  IReservoirCallee(aTo).reservoirCall(... */\n        tag_219:\n          tag_221\n          swap1\n          tag_3\n          jump\t// in\n        tag_221:\n          codesize\n          jump(tag_220)\n        tag_217:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup12\n          mload\n          returndatasize\n          dup10\n          dup3\n          returndatacopy\n          returndatasize\n          swap1\n          revert\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10265:10523  IReservoirCallee(aTo).reservoirCall(... */\n        tag_215:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup10\n          dup1\n          revert\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10425:10486  lTokenOut == token1 ? int256(rAmountOut) : -int256(lAmountIn) */\n        tag_212:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10468:10486  -int256(lAmountIn) */\n          tag_222\n          dup11\n          tag_31\n          jump\t// in\n        tag_222:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10425:10486  lTokenOut == token1 ? int256(rAmountOut) : -int256(lAmountIn) */\n          swap2\n          jump(tag_214)\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10346:10407  lTokenOut == token0 ? int256(rAmountOut) : -int256(lAmountIn) */\n        tag_209:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10389:10407  -int256(lAmountIn) */\n          tag_223\n          dup11\n          tag_31\n          jump\t// in\n        tag_223:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10346:10407  lTokenOut == token0 ? int256(rAmountOut) : -int256(lAmountIn) */\n          swap1\n          jump(tag_211)\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":8904:9366  if (aAmount > 0) {... */\n        tag_191:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":9212:9218  token0 */\n          swap8\n          swap4\n          swap8\n          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":9256:9264  -aAmount */\n          swap5\n          tag_224\n          swap1\n          tag_31\n          jump\t// in\n        tag_224:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap9\n          dup8\n          dup11\n          dup2\n          dup10\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":9343:9350  swapFee */\n          0x07\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":9296:9351  _getAmountOut(lAmountIn, lReserve1, lReserve0, swapFee) */\n          swap2\n          tag_225\n          swap4\n          tag_45\n          jump\t// in\n        tag_225:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":8904:9366  if (aAmount > 0) {... */\n          swap15\n          dup16\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10208:10217  lReserve1 */\n          tag_194\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":8904:9366  if (aAmount > 0) {... */\n          swap4\n          jump(tag_195)\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":8816:10099  if (aInOrOut) {... */\n        tag_189:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":9489:9500  aAmount > 0 */\n          swap1\n          swap2\n          swap3\n          swap4\n          swap8\n          swap5\n          pop\n          dup7\n          dup6\n          sgt\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":9485:10089  if (aAmount > 0) {... */\n          0x00\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          eq\n          tag_226\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":9520:9549  rAmountOut = uint256(aAmount) */\n          swap1\n          dup5\n          swap4\n          swap3\n          swap2\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10208:10217  lReserve1 */\n          tag_194\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":9520:9549  rAmountOut = uint256(aAmount) */\n          dup8\n          dup15\n          swap8\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":9575:9597  rAmountOut < lReserve0 */\n          swap15\n          dup16\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":9567:9620  require(rAmountOut < lReserve0, \"CP: NOT_ENOUGH_LIQ\") */\n          tag_228\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":9575:9597  rAmountOut < lReserve0 */\n          dup3\n          dup11\n          lt\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":9567:9620  require(rAmountOut < lReserve0, \"CP: NOT_ENOUGH_LIQ\") */\n          tag_43\n          jump\t// in\n        tag_228:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":9686:9741  _getAmountIn(rAmountOut, lReserve1, lReserve0, swapFee) */\n          tag_229\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":9650:9656  token0 */\n          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap10\n          dup4\n          dup6\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":9733:9740  swapFee */\n          0x07\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":9686:9741  _getAmountIn(rAmountOut, lReserve1, lReserve0, swapFee) */\n          swap3\n          tag_46\n          jump\t// in\n        tag_229:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":9485:10089  if (aAmount > 0) {... */\n          swap13\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":8816:10099  if (aInOrOut) {... */\n          jump(tag_195)\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":9485:10089  if (aAmount > 0) {... */\n        tag_226:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":9873:9881  -aAmount */\n          swap3\n          swap2\n          swap1\n          swap11\n          swap4\n          tag_231\n          swap1\n          tag_31\n          jump\t// in\n        tag_231:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":9908:9930  rAmountOut < lReserve1 */\n          swap11\n          dup12\n          swap4\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":9900:9953  require(rAmountOut < lReserve1, \"CP: NOT_ENOUGH_LIQ\") */\n          tag_232\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":9908:9930  rAmountOut < lReserve1 */\n          dup8\n          dup7\n          lt\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":9900:9953  require(rAmountOut < lReserve1, \"CP: NOT_ENOUGH_LIQ\") */\n          tag_43\n          jump\t// in\n        tag_232:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10208:10217  lReserve1 */\n          tag_194\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":9983:9989  token1 */\n          dup8\n          dup8\n          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap8\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10019:10074  _getAmountIn(rAmountOut, lReserve0, lReserve1, swapFee) */\n          tag_229\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10066:10073  swapFee */\n          0x07\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":10019:10074  _getAmountIn(rAmountOut, lReserve0, lReserve1, swapFee) */\n          dup5\n          dup5\n          dup5\n          tag_46\n          jump\t// in\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n        tag_187:\n          pop\n          0x64\n          dup4\n          0x0f\n          dup7\n          0x20\n          dup16\n          mload\n          swap4\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup6\n          mstore\n          dup5\n          add\n          mstore\n          dup3\n          add\n          mstore\n          0x43503a20414d4f554e545f5a45524f0000000000000000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n        tag_184:\n          dup5\n          dup1\n          revert\n        tag_176:\n          dup3\n          dup1\n          revert\n        tag_143:\n          swap1\n          swap2\n          pop\n          jumpi(tag_176, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_176\n          jumpi\n          0x20\n          swap3\n          dup3\n          swap2\n          tag_238\n          tag_8\n          jump\t// in\n        tag_238:\n          tag_239\n          tag_9\n          jump\t// in\n        tag_239:\n          swap2\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup1\n          swap3\n          and\n          dup5\n          mstore\n          dup7\n          mstore\n          dup4\n          dup4\n          keccak256\n          swap2\n          and\n          dup3\n          mstore\n          dup5\n          mstore\n          keccak256\n          sload\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_141:\n          dup4\n          jumpi(tag_155, callvalue)\n          dup1\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_155\n          jumpi\n          tag_157\n          tag_17\n          jump\t// in\n        tag_139:\n          dup4\n          dup3\n          jumpi(tag_164, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_164\n          jumpi\n          0x20\n          swap1\n          mload\n            /* \"src/ReservoirPair.sol\":2723:2732  1_000_000 */\n          0x0f4240\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup2\n          mstore\n          return\n        tag_137:\n          dup4\n          dup3\n          jumpi(tag_164, callvalue)\n          jumpi(tag_164, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0xe0))\n          tag_253\n          tag_8\n          jump\t// in\n        tag_253:\n          tag_254\n          tag_9\n          jump\t// in\n        tag_254:\n          calldataload(0x44)\n          calldataload(0x64)\n          swap4\n          calldataload(0x84)\n          swap4\n          0xff\n          dup6\n          and\n          dup1\n          swap6\n          sub\n          tag_255\n          jumpi\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4057:4072  block.timestamp */\n          timestamp\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4045:4072  deadline >= block.timestamp */\n          dup7\n          lt\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          tag_257\n          jumpi\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4428:4446  DOMAIN_SEPARATOR() */\n          tag_259\n          tag_11\n          jump\t// in\n        tag_259:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap5\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup1\n          swap3\n          and\n          swap6\n          dup7\n          dup10\n          mstore\n          0x20\n          swap6\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4873:4879  nonces */\n          0x05\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup8\n          mstore\n          dup5\n          dup11\n          keccak256\n          swap9\n          dup10\n          sload\n          swap10\n          0x01\n          dup12\n          add\n          swap1\n          sstore\n          dup6\n          mload\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4511:4960  abi.encode(... */\n          swap1\n          dup6\n          dup10\n          dup4\n          add\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap4\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4555:4720  keccak256(... */\n          0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup6\n          mstore\n          dup12\n          dup10\n          dup6\n          add\n          mstore\n          and\n          swap11\n          dup12\n          0x60\n          dup5\n          add\n          mstore\n          dup9\n          0x80\n          dup5\n          add\n          mstore\n          0xa0\n          dup4\n          add\n          mstore\n          0xc0\n          dup3\n          add\n          mstore\n          0xc0\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4511:4960  abi.encode(... */\n          dup2\n          mstore\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0xe0\n          dup2\n          add\n          swap2\n          dup2\n          dup4\n          lt\n          0xffffffffffffffff\n          dup5\n          gt\n          or\n          tag_260\n          jumpi\n          swap3\n          dup3\n          dup10\n          swap6\n          swap3\n          0x0122\n          dup15\n          swap7\n          0x80\n          swap7\n          dup12\n          mstore\n          dup3\n          mload\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4472:4986  keccak256(... */\n          swap1\n          keccak256\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4350:5008  abi.encodePacked(... */\n          swap2\n          0x0100\n          dup2\n          add\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap5\n          0x1901000000000000000000000000000000000000000000000000000000000000\n          dup7\n          mstore\n          0x0102\n          dup3\n          add\n          mstore\n          add\n          mstore\n          0x42\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4350:5008  abi.encodePacked(... */\n          dup2\n          mstore\n          tag_262\n          dup2\n          tag_2\n          jump\t// in\n        tag_262:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mload\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4319:5026  keccak256(... */\n          swap1\n          keccak256\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap1\n          dup7\n          mload\n          swap2\n          dup3\n          mstore\n          dup5\n          dup3\n          add\n          mstore\n          calldataload(0xa4)\n          dup7\n          dup3\n          add\n          mstore\n          calldataload(0xc4)\n          0x60\n          dup3\n          add\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4292:5097  ecrecover(... */\n          dup3\n          dup1\n          mstore\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0x01\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4292:5097  ecrecover(... */\n          gas\n          staticcall\n          iszero\n          tag_263\n          jumpi\n          dup7\n          mload\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          and\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5120:5150  recoveredAddress != address(0) */\n          swap7\n          dup8\n          iszero\n          iszero\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5120:5179  recoveredAddress != address(0) && recoveredAddress == owner */\n          dup1\n          tag_265\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n        tag_266:\n          iszero\n          tag_267\n          jumpi\n          dup7\n          swap8\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5283:5314  Approval(owner, spender, value) */\n          0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap6\n          swap7\n          swap8\n          mstore\n          dup4\n          mstore\n          dup1\n          dup8\n          keccak256\n          dup7\n          dup9\n          mstore\n          dup4\n          mstore\n          dup2\n          dup2\n          dup9\n          keccak256\n          sstore\n          mload\n          swap1\n          dup2\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5283:5314  Approval(owner, spender, value) */\n          log3\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup1\n          return\n        tag_267:\n          dup4\n          0x64\n          swap3\n          mload\n          swap2\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          dup3\n          add\n          mstore\n          0x0e\n          0x24\n          dup3\n          add\n          mstore\n          0x494e56414c49445f5349474e4552000000000000000000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5120:5179  recoveredAddress != address(0) && recoveredAddress == owner */\n        tag_265:\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5154:5179  recoveredAddress == owner */\n          pop\n          dup5\n          dup9\n          eq\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5120:5179  recoveredAddress != address(0) && recoveredAddress == owner */\n          jump(tag_266)\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4292:5097  ecrecover(... */\n        tag_263:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup2\n          mload\n          returndatasize\n          dup9\n          dup3\n          returndatacopy\n          returndatasize\n          swap1\n          revert\n        tag_260:\n          0x24\n          dup13\n          0x41\n          dup16\n          0x4e487b7100000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          mstore\n          revert\n        tag_257:\n          0x64\n          dup9\n          0x20\n          dup5\n          mload\n          swap2\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          dup3\n          add\n          mstore\n          0x17\n          0x24\n          dup3\n          add\n          mstore\n          0x5045524d49545f444541444c494e455f45585049524544000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n        tag_255:\n          dup7\n          dup1\n          revert\n        tag_135:\n          dup4\n          dup3\n          jumpi(tag_164, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_164\n          jumpi\n          0x20\n          swap1\n          mload\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":2950:2979  ERC20 public immutable token1 */\n          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          and\n          dup2\n          mstore\n          return\n        tag_133:\n          swap1\n          swap2\n          pop\n          jumpi(tag_176, callvalue)\n          jumpi(tag_176, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))\n          dup1\n          calldataload\n          swap2\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup1\n          dup5\n          and\n          dup1\n          swap5\n          sub\n          tag_184\n          jumpi\n            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */\n          tag_279\n            /* \"src/ReservoirPair.sol\":3741:3748  factory */\n          swap1\n          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":3719:3729  msg.sender */\n          caller\n            /* \"src/ReservoirPair.sol\":3719:3749  msg.sender == address(factory) */\n          eq\n            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */\n          tag_15\n          jump\t// in\n        tag_279:\n            /* \"src/ReservoirPair.sol\":12690:12703  token0Managed */\n          0x0c\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n          0xffffffffffffffffffffffffff\n          dup1\n          dup3\n          and\n            /* \"src/ReservoirPair.sol\":12690:12708  token0Managed == 0 */\n          iszero\n            /* \"src/ReservoirPair.sol\":12690:12730  token0Managed == 0 && token1Managed == 0 */\n          swap2\n          dup3\n          tag_280\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n        tag_281:\n          pop\n          pop\n          iszero\n          tag_282\n          jumpi\n          pop\n          pop\n          0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n            /* \"src/ReservoirPair.sol\":12765:12787  assetManager = manager */\n          0x0b\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n          and\n          or\n            /* \"src/ReservoirPair.sol\":12765:12787  assetManager = manager */\n          0x0b\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sstore\n          dup1\n          return\n        tag_282:\n          swap1\n          0x20\n          0x64\n          swap3\n          mload\n          swap2\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          dup3\n          add\n          mstore\n          0x14\n          0x24\n          dup3\n          add\n          mstore\n          0x414d503a20414d5f5354494c4c5f414354495645000000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n            /* \"src/ReservoirPair.sol\":12690:12730  token0Managed == 0 && token1Managed == 0 */\n        tag_280:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0x68\n          shr\n          and\n            /* \"src/ReservoirPair.sol\":12712:12730  token1Managed == 0 */\n          iszero\n          swap1\n          pop\n            /* \"src/ReservoirPair.sol\":12690:12730  token0Managed == 0 && token1Managed == 0 */\n          codesize\n          dup1\n          jump(tag_281)\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n        tag_131:\n          dup4\n          dup3\n          jumpi(tag_164, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_164\n          jumpi\n          0x20\n          swap1\n            /* \"src/ReservoirPair.sol\":3488:3536  uint256 public customSwapFee = type(uint256).max */\n          0x08\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_129:\n          dup4\n          dup3\n          jumpi(tag_164, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_164\n          jumpi\n          0x20\n          swap1\n          mload\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":2870:2909  GenericFactory public immutable factory */\n          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          and\n          dup2\n          mstore\n          return\n        tag_127:\n          dup4\n          jumpi(tag_155, callvalue)\n          jumpi(tag_155, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))\n            /* \"src/ReservoirPair.sol\":5579:5584  false */\n          tag_157\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          tag_297\n          tag_8\n          jump\t// in\n        tag_297:\n            /* \"src/ReservoirPair.sol\":6689:6698  lReserve1 */\n          tag_298\n            /* \"src/ReservoirPair.sol\":6506:6520  _lockAndLoad() */\n          tag_299\n          tag_13\n          jump\t// in\n        tag_299:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          pop\n          swap4\n          swap2\n          0xffffffffffffffffffffffffff\n          dup1\n          swap2\n          and\n          swap2\n          and\n            /* \"src/ReservoirPair.sol\":6561:6575  _totalToken0() */\n          swap2\n            /* \"src/ReservoirPair.sol\":6600:6609  lReserve1 */\n          tag_300\n            /* \"src/ReservoirPair.sol\":6561:6575  _totalToken0() */\n          dup4\n          dup4\n            /* \"src/ReservoirPair.sol\":6561:6587  _totalToken0() - lReserve0 */\n          tag_301\n            /* \"src/ReservoirPair.sol\":6561:6575  _totalToken0() */\n          dup2\n          tag_302\n          tag_24\n          jump\t// in\n        tag_302:\n            /* \"src/ReservoirPair.sol\":6561:6587  _totalToken0() - lReserve0 */\n          tag_10\n          jump\t// in\n        tag_301:\n            /* \"src/ReservoirPair.sol\":6548:6554  token0 */\n          dup5\n          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")\n            /* \"src/ReservoirPair.sol\":6600:6609  lReserve1 */\n          tag_20\n          jump\t// in\n        tag_300:\n            /* \"src/ReservoirPair.sol\":6650:6676  _totalToken1() - lReserve1 */\n          tag_303\n            /* \"src/ReservoirPair.sol\":6650:6664  _totalToken1() */\n          dup4\n          tag_302\n          tag_25\n          jump\t// in\n            /* \"src/ReservoirPair.sol\":6650:6676  _totalToken1() - lReserve1 */\n        tag_303:\n            /* \"src/ReservoirPair.sol\":6637:6643  token1 */\n          swap1\n          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")\n            /* \"src/ReservoirPair.sol\":6689:6698  lReserve1 */\n          tag_20\n          jump\t// in\n        tag_298:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0xffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffff\n          0xffffffff0000000000000000000000000000000000000000000000000000\n            /* \"src/ReservoirPair.sol\":4847:4853  _slot0 */\n          0x06\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n          swap3\n          0xd0\n          shl\n          and\n          swap2\n          and\n          or\n            /* \"src/ReservoirPair.sol\":4847:4853  _slot0 */\n          0x06\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sstore\n            /* \"src/ReservoirPair.sol\":4701:4899  function _writeSlot0Timestamp(uint32 aTimestamp, bool aLocked) internal {... */\n          jump\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n        tag_125:\n          dup4\n          dup3\n          jumpi(tag_164, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_164\n          jumpi\n          0x20\n          swap1\n          mload\n            /* \"src/ReservoirPair.sol\":2671:2678  10 ** 3 */\n          0x03e8\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup2\n          mstore\n          return\n        tag_123:\n          dup4\n          dup3\n          jumpi(tag_164, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_164\n          jumpi\n          0x20\n          swap1\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":17166:17193  address public oracleCaller */\n          0x01000f\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n          and\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_121:\n          swap1\n          swap2\n          pop\n          jumpi(tag_176, callvalue)\n          jumpi(tag_176, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))\n            /* \"src/ReservoirPair.sol\":7139:7202  CustomPlatformFeeChanged(customPlatformFee, aCustomPlatformFee) */\n          0xe044af8ebdaeeed3e95065fac857c503c7eabb71acfbcdcb7823ec6ca603c26e\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap1\n          calldataload\n            /* \"src/ReservoirPair.sol\":3741:3748  factory */\n          swap2\n            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */\n          tag_317\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":3741:3748  factory */\n          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":3719:3729  msg.sender */\n          caller\n            /* \"src/ReservoirPair.sol\":3719:3749  msg.sender == address(factory) */\n          eq\n            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */\n          tag_15\n          jump\t// in\n        tag_317:\n            /* \"src/ReservoirPair.sol\":7164:7181  customPlatformFee */\n          0x0a\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n          dup2\n          mload\n          swap1\n          dup2\n          mstore\n          dup4\n          0x20\n          dup3\n          add\n          mstore\n            /* \"src/ReservoirPair.sol\":7139:7202  CustomPlatformFeeChanged(customPlatformFee, aCustomPlatformFee) */\n          log1\n            /* \"src/ReservoirPair.sol\":7164:7181  customPlatformFee */\n          0x0a\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sstore\n            /* \"src/ReservoirPair.sol\":7212:7250  customPlatformFee = aCustomPlatformFee */\n          tag_157\n          tag_17\n          jump\t// in\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n        tag_119:\n          dup4\n          dup3\n          jumpi(tag_164, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_164\n          jumpi\n          0x20\n          swap1\n          0xffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":12834:12862  uint104 public token1Managed */\n          0x0c\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n          0x68\n          shr\n          and\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_117:\n          dup4\n          dup3\n          jumpi(tag_164, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_164\n          jumpi\n          0x20\n          swap1\n          mload\n            /* \"src/ReservoirPair.sol\":2849:2855  20_000 */\n          0x4e20\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup2\n          mstore\n          return\n        tag_115:\n          dup4\n          dup3\n          jumpi(tag_164, callvalue)\n          dup1\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_164\n          jumpi\n          0x20\n          swap2\n          tag_331\n          tag_8\n          jump\t// in\n        tag_331:\n          dup3\n          0xffffffffffffffffffffffffffffffffffffffff\n          calldataload(0x24)\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2774:2784  msg.sender */\n          swap3\n          caller\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup6\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2764:2773  balanceOf */\n          0x03\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup8\n          mstore\n          dup3\n          dup6\n          keccak256\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2764:2795  balanceOf[msg.sender] -= amount */\n          tag_332\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup6\n          dup3\n          sload\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2764:2795  balanceOf[msg.sender] -= amount */\n          tag_10\n          jump\t// in\n        tag_332:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap1\n          sstore\n          and\n          swap3\n          dup4\n          dup2\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2764:2773  balanceOf */\n          0x03\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup7\n          mstore\n          keccak256\n          dup2\n          dup2\n          sload\n          add\n          swap1\n          sstore\n          dup3\n          mload\n          swap1\n          dup2\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2990:3022  Transfer(msg.sender, to, amount) */\n          0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2774:2784  msg.sender */\n          dup5\n          caller\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2990:3022  Transfer(msg.sender, to, amount) */\n          swap3\n          log3\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mload\n          0x01\n          dup2\n          mstore\n          return\n        tag_113:\n          dup4\n          jumpi(tag_155, callvalue)\n          jumpi(tag_155, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))\n          dup2\n          calldataload\n          swap2\n          dup2\n          0x60\n          dup6\n          mload\n          tag_337\n          dup2\n          tag_2\n          jump\t// in\n        tag_337:\n          dup3\n          dup2\n          mstore\n          dup3\n          0x20\n          dup3\n          add\n          mstore\n          dup3\n          dup8\n          dup3\n          add\n          mstore\n          add\n          mstore\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":17325:17337  oracleCaller */\n          0x01000f\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n          and\n            /* \"src/ReservoirPair.sol\":17311:17321  msg.sender */\n          caller\n            /* \"src/ReservoirPair.sol\":17311:17337  msg.sender == oracleCaller */\n          sub\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          tag_338\n          jumpi\n          0x010000\n          dup4\n          lt\n          iszero\n          tag_340\n          jumpi\n          0x80\n          dup4\n          0xffffffff\n          dup7\n          dup1\n          mload\n          swap3\n          tag_342\n          dup5\n          tag_2\n          jump\t// in\n        tag_342:\n            /* \"src/ReservoirPair.sol\":17388:17401  _observations */\n          0x0d\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          add\n          sload\n          swap1\n          dup2\n            /* \"src/ReservoirPair.sol\":17388:17401  _observations */\n          0x0d\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          signextend\n          swap4\n          dup5\n          dup2\n          mstore\n          0x20\n          dup2\n          add\n          dup4\n          0x70\n          shr\n          0x06\n          signextend\n          dup2\n          mstore\n          0x60\n          dup4\n          dup4\n          add\n          swap3\n          dup6\n          0xa8\n          shr\n          0x06\n          signextend\n          dup5\n          mstore\n          add\n          swap4\n          0xe0\n          shr\n          dup5\n          mstore\n          dup3\n          mload\n          swap6\n          dup7\n          mstore\n          mload\n          0x06\n          signextend\n          0x20\n          dup7\n          add\n          mstore\n          mload\n          0x06\n          signextend\n          swap1\n          dup5\n          add\n          mstore\n          mload\n          and\n          0x60\n          dup3\n          add\n          mstore\n          return\n        tag_340:\n          swap1\n          0x32\n          0x24\n          swap3\n          0x4e487b7100000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          mstore\n          revert\n        tag_338:\n          0x64\n          swap1\n          0x20\n          dup6\n          mload\n          swap2\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          dup3\n          add\n          mstore\n          0x15\n          0x24\n          dup3\n          add\n          mstore\n          0x4f573a204e4f545f4f5241434c455f43414c4c45520000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n        tag_111:\n          swap2\n          pop\n          jumpi(tag_176, callvalue)\n          0x20\n          swap2\n          dup3\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_364\n          jumpi\n            /* \"src/ReservoirPair.sol\":8142:8170  factory.read(RECOVERER_NAME) */\n          tag_347\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap3\n          tag_348\n          tag_8\n          jump\t// in\n        tag_348:\n          swap1\n          dup4\n          mload\n          tag_349\n          dup2\n          tag_4\n          jump\t// in\n        tag_349:\n          0x18\n          dup2\n          mstore\n          0x5368617265643a3a64656661756c745265636f76657265720000000000000000\n          dup3\n          dup3\n          add\n          mstore\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":8142:8149  factory */\n          swap6\n          dup7\n          swap2\n          dup3\n          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":8142:8170  factory.read(RECOVERER_NAME) */\n          tag_49\n          jump\t// in\n        tag_347:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          and\n          swap3\n          dup6\n          dup4\n          and\n            /* \"src/ReservoirPair.sol\":8218:8224  token0 */\n          swap6\n          dup1\n          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":8200:8225  aToken != address(token0) */\n          dup8\n          eq\n          iszero\n            /* \"src/ReservoirPair.sol\":8200:8254  aToken != address(token0) && aToken != address(token1) */\n          swap1\n          dup2\n          tag_350\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n        tag_351:\n            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */\n          pop\n          iszero\n          tag_352\n          jumpi\n            /* \"src/ReservoirPair.sol\":8304:8328  _recoverer != address(0) */\n          dup4\n          iszero\n            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */\n          tag_354\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup2\n          swap1\n          0x24\n          dup7\n          mload\n            /* \"src/ReservoirPair.sol\":8396:8434  ERC20(aToken).balanceOf(address(this)) */\n          dup1\n          swap9\n          dup2\n          swap4\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0x70a0823100000000000000000000000000000000000000000000000000000000\n            /* \"src/ReservoirPair.sol\":8396:8434  ERC20(aToken).balanceOf(address(this)) */\n          dup4\n          mstore\n            /* \"src/ReservoirPair.sol\":8428:8432  this */\n          address\n            /* \"src/ReservoirPair.sol\":8396:8434  ERC20(aToken).balanceOf(address(this)) */\n          swap1\n          dup4\n          add\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mstore\n            /* \"src/ReservoirPair.sol\":8396:8434  ERC20(aToken).balanceOf(address(this)) */\n          gas\n          staticcall\n          swap4\n          dup5\n          iszero\n          tag_356\n          jumpi\n          pop\n          dup6\n          swap4\n          tag_358\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n        tag_359:\n            /* \"src/ReservoirPair.sol\":8445:8496  _safeTransfer(aToken, _recoverer, _amountToRecover) */\n          pop\n          tag_360\n          swap4\n          pop\n          tag_18\n          jump\t// in\n        tag_360:\n          pop\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup1\n          return\n            /* \"src/ReservoirPair.sol\":8396:8434  ERC20(aToken).balanceOf(address(this)) */\n        tag_358:\n          swap1\n          swap3\n          pop\n          dup4\n          dup2\n          returndatasize\n          dup4\n          gt\n          tag_361\n          jumpi\n        tag_362:\n          tag_363\n          dup2\n          dup4\n          tag_5\n          jump\t// in\n        tag_363:\n          dup2\n          add\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sub\n          slt\n          tag_364\n          jumpi\n            /* \"src/ReservoirPair.sol\":8445:8496  _safeTransfer(aToken, _recoverer, _amountToRecover) */\n          tag_360\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap3\n          mload\n            /* \"src/ReservoirPair.sol\":8396:8434  ERC20(aToken).balanceOf(address(this)) */\n          swap2\n          codesize\n          jump(tag_359)\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n        tag_364:\n          dup4\n          dup1\n          revert\n            /* \"src/ReservoirPair.sol\":8396:8434  ERC20(aToken).balanceOf(address(this)) */\n        tag_361:\n          pop\n          returndatasize\n          jump(tag_362)\n        tag_356:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mload\n          returndatasize\n          dup8\n          dup3\n          returndatacopy\n          returndatasize\n          swap1\n          revert\n            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */\n        tag_354:\n          0x64\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap2\n          dup6\n          mload\n            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */\n          swap2\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          dup3\n          add\n          mstore\n          0x19\n          0x24\n          dup3\n          add\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mstore\n            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */\n          0x503a205245434f56455245525f5a45524f5f4144445245535300000000000000\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0x44\n          dup3\n          add\n            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */\n          mstore\n          revert\n        tag_352:\n          0x64\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap2\n          dup6\n          mload\n            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */\n          swap2\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          dup3\n          add\n          mstore\n          0x1b\n          0x24\n          dup3\n          add\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mstore\n            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */\n          0x503a20494e56414c49445f544f4b454e5f544f5f5245434f5645520000000000\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0x44\n          dup3\n          add\n            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */\n          mstore\n          revert\n            /* \"src/ReservoirPair.sol\":8200:8254  aToken != address(token0) && aToken != address(token1) */\n        tag_350:\n            /* \"src/ReservoirPair.sol\":8247:8253  token1 */\n          swap1\n          pop\n          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":8229:8254  aToken != address(token1) */\n          dup7\n          eq\n          iszero\n            /* \"src/ReservoirPair.sol\":8200:8254  aToken != address(token0) && aToken != address(token1) */\n          codesize\n          jump(tag_351)\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n        tag_109:\n          swap1\n          swap2\n          pop\n          jumpi(tag_176, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_176\n          jumpi\n          dup1\n          calldataload\n          swap1\n          calldataload(0x24)\n          swap3\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":14884:14896  assetManager */\n          0x0b\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n          and\n            /* \"src/ReservoirPair.sol\":14862:14872  msg.sender */\n          caller\n            /* \"src/ReservoirPair.sol\":14862:14897  msg.sender == address(assetManager) */\n          sub\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          tag_370\n          jumpi\n          pop\n          pop\n            /* \"src/ReservoirPair.sol\":14938:14955  aToken0Change > 0 */\n          dup3\n          dup2\n          sgt\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          iszero\n          tag_372\n          jumpi\n            /* \"src/ReservoirPair.sol\":14988:15022  uint256(aToken0Change).toUint104() */\n          tag_374\n            /* \"src/ReservoirPair.sol\":15073:15112  token0.safeTransfer(msg.sender, lDelta) */\n          tag_375\n            /* \"src/ReservoirPair.sol\":14988:15022  uint256(aToken0Change).toUint104() */\n          swap2\n          tag_28\n          jump\t// in\n        tag_374:\n            /* \"src/ReservoirPair.sol\":15036:15059  token0Managed += lDelta */\n          0x0c\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n          swap1\n          0xffffffffffffffffffffffffff\n          swap2\n          0xffffffffffffffffffffffffffffffffffffff00000000000000000000000000\n          dup4\n            /* \"src/ReservoirPair.sol\":15036:15059  token0Managed += lDelta */\n          tag_376\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup5\n          dup3\n          dup6\n          and\n            /* \"src/ReservoirPair.sol\":15036:15059  token0Managed += lDelta */\n          tag_33\n          jump\t// in\n        tag_376:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          and\n          swap2\n          and\n          or\n            /* \"src/ReservoirPair.sol\":15036:15059  token0Managed += lDelta */\n          0x0c\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sstore\n          and\n            /* \"src/ReservoirPair.sol\":14862:14872  msg.sender */\n          caller\n            /* \"src/ReservoirPair.sol\":15073:15079  token0 */\n          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")\n            /* \"src/ReservoirPair.sol\":15073:15112  token0.safeTransfer(msg.sender, lDelta) */\n          tag_35\n          jump\t// in\n        tag_375:\n            /* \"src/ReservoirPair.sol\":15406:15423  aToken1Change > 0 */\n          dup2\n          dup2\n          sgt\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          iszero\n          tag_378\n          jumpi\n            /* \"src/ReservoirPair.sol\":15456:15490  uint256(aToken1Change).toUint104() */\n          tag_380\n            /* \"src/ReservoirPair.sol\":15595:15634  token1.safeTransfer(msg.sender, lDelta) */\n          tag_157\n            /* \"src/ReservoirPair.sol\":15456:15490  uint256(aToken1Change).toUint104() */\n          swap2\n          tag_28\n          jump\t// in\n        tag_380:\n            /* \"src/ReservoirPair.sol\":15557:15580  token1Managed += lDelta */\n          0x0c\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n          swap1\n          0xffffffffffffffffffffffffff\n          swap2\n          0xffffffffffff00000000000000000000000000ffffffffffffffffffffffffff\n          0xffffffffffffffffffffffffff00000000000000000000000000\n            /* \"src/ReservoirPair.sol\":15557:15580  token1Managed += lDelta */\n          tag_382\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup5\n          dup7\n          dup6\n          0x68\n          shr\n          and\n            /* \"src/ReservoirPair.sol\":15557:15580  token1Managed += lDelta */\n          tag_33\n          jump\t// in\n        tag_382:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0x68\n          shl\n          and\n          swap2\n          and\n          or\n            /* \"src/ReservoirPair.sol\":15557:15580  token1Managed += lDelta */\n          0x0c\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sstore\n          and\n            /* \"src/ReservoirPair.sol\":14862:14872  msg.sender */\n          caller\n            /* \"src/ReservoirPair.sol\":15595:15601  token1 */\n          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")\n            /* \"src/ReservoirPair.sol\":15595:15634  token1.safeTransfer(msg.sender, lDelta) */\n          tag_35\n          jump\t// in\n            /* \"src/ReservoirPair.sol\":15402:15914  if (aToken1Change > 0) {... */\n        tag_378:\n            /* \"src/ReservoirPair.sol\":15655:15672  aToken1Change < 0 */\n          dup2\n          dup2\n          slt\n            /* \"src/ReservoirPair.sol\":15651:15914  if (aToken1Change < 0) {... */\n          tag_384\n          jumpi\n            /* \"src/ReservoirPair.sol\":15402:15914  if (aToken1Change > 0) {... */\n          pop\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup1\n          return\n            /* \"src/ReservoirPair.sol\":15651:15914  if (aToken1Change < 0) {... */\n        tag_384:\n            /* \"src/ReservoirPair.sol\":15705:15740  uint256(-aToken1Change).toUint104() */\n          tag_386\n            /* \"src/ReservoirPair.sol\":15713:15727  -aToken1Change */\n          tag_387\n            /* \"src/ReservoirPair.sol\":15845:15903  token1.safeTransferFrom(msg.sender, address(this), lDelta) */\n          tag_157\n            /* \"src/ReservoirPair.sol\":15713:15727  -aToken1Change */\n          swap3\n          tag_31\n          jump\t// in\n        tag_387:\n            /* \"src/ReservoirPair.sol\":15705:15740  uint256(-aToken1Change).toUint104() */\n          tag_28\n          jump\t// in\n        tag_386:\n            /* \"src/ReservoirPair.sol\":15807:15830  token1Managed -= lDelta */\n          0x0c\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n          swap1\n          0xffffffffffffffffffffffffff\n          swap2\n          0xffffffffffff00000000000000000000000000ffffffffffffffffffffffffff\n          0xffffffffffffffffffffffffff00000000000000000000000000\n            /* \"src/ReservoirPair.sol\":15807:15830  token1Managed -= lDelta */\n          tag_389\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup5\n          dup7\n          dup6\n          0x68\n          shr\n          and\n            /* \"src/ReservoirPair.sol\":15807:15830  token1Managed -= lDelta */\n          tag_32\n          jump\t// in\n        tag_389:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0x68\n          shl\n          and\n          swap2\n          and\n          or\n            /* \"src/ReservoirPair.sol\":15807:15830  token1Managed -= lDelta */\n          0x0c\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sstore\n          and\n            /* \"src/ReservoirPair.sol\":15889:15893  this */\n          address\n            /* \"src/ReservoirPair.sol\":14862:14872  msg.sender */\n          caller\n            /* \"src/ReservoirPair.sol\":15845:15851  token1 */\n          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")\n            /* \"src/ReservoirPair.sol\":15845:15903  token1.safeTransferFrom(msg.sender, address(this), lDelta) */\n          tag_34\n          jump\t// in\n            /* \"src/ReservoirPair.sol\":14934:15392  if (aToken0Change > 0) {... */\n        tag_372:\n            /* \"src/ReservoirPair.sol\":15133:15150  aToken0Change < 0 */\n          dup3\n          dup2\n          slt\n            /* \"src/ReservoirPair.sol\":15129:15392  if (aToken0Change < 0) {... */\n          tag_390\n          jumpi\n            /* \"src/ReservoirPair.sol\":14934:15392  if (aToken0Change > 0) {... */\n        tag_391:\n          pop\n          jump(tag_375)\n            /* \"src/ReservoirPair.sol\":15129:15392  if (aToken0Change < 0) {... */\n        tag_390:\n            /* \"src/ReservoirPair.sol\":15183:15218  uint256(-aToken0Change).toUint104() */\n          tag_392\n            /* \"src/ReservoirPair.sol\":15191:15205  -aToken0Change */\n          tag_387\n            /* \"src/ReservoirPair.sol\":15323:15381  token0.safeTransferFrom(msg.sender, address(this), lDelta) */\n          tag_394\n            /* \"src/ReservoirPair.sol\":15191:15205  -aToken0Change */\n          swap3\n          tag_31\n          jump\t// in\n            /* \"src/ReservoirPair.sol\":15183:15218  uint256(-aToken0Change).toUint104() */\n        tag_392:\n            /* \"src/ReservoirPair.sol\":15285:15308  token0Managed -= lDelta */\n          0x0c\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n          swap1\n          0xffffffffffffffffffffffffff\n          swap2\n          0xffffffffffffffffffffffffffffffffffffff00000000000000000000000000\n          dup4\n            /* \"src/ReservoirPair.sol\":15285:15308  token0Managed -= lDelta */\n          tag_395\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup5\n          dup3\n          dup6\n          and\n            /* \"src/ReservoirPair.sol\":15285:15308  token0Managed -= lDelta */\n          tag_32\n          jump\t// in\n        tag_395:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          and\n          swap2\n          and\n          or\n            /* \"src/ReservoirPair.sol\":15285:15308  token0Managed -= lDelta */\n          0x0c\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sstore\n          and\n            /* \"src/ReservoirPair.sol\":15367:15371  this */\n          address\n            /* \"src/ReservoirPair.sol\":14862:14872  msg.sender */\n          caller\n            /* \"src/ReservoirPair.sol\":15323:15329  token0 */\n          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")\n            /* \"src/ReservoirPair.sol\":15323:15381  token0.safeTransferFrom(msg.sender, address(this), lDelta) */\n          tag_34\n          jump\t// in\n        tag_394:\n            /* \"src/ReservoirPair.sol\":15129:15392  if (aToken0Change < 0) {... */\n          codesize\n          jump(tag_391)\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n        tag_370:\n          swap1\n          0x20\n          0x64\n          swap3\n          mload\n          swap2\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          dup3\n          add\n          mstore\n          0x15\n          0x24\n          dup3\n          add\n          mstore\n          0x414d503a20415554485f4e4f545f4d414e414745520000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n        tag_107:\n          dup4\n          dup3\n          jumpi(tag_164, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_164\n          jumpi\n          dup1\n          mload\n          swap1\n          dup3\n            /* \"lib/solmate/src/tokens/ERC20.sol\":1056:1076  string public symbol */\n          0x01\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup1\n          sload\n          swap2\n          tag_400\n          dup4\n          tag_1\n          jump\t// in\n        tag_400:\n          dup1\n          dup7\n          mstore\n          swap3\n          dup3\n          dup2\n          and\n          swap1\n            /* \"lib/solmate/src/tokens/ERC20.sol\":1056:1076  string public symbol */\n          dup2\n          iszero\n          tag_401\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          pop\n          0x01\n          eq\n          tag_403\n          jumpi\n        tag_404:\n          pop\n          pop\n          pop\n          tag_405\n          dup3\n          tag_406\n          swap5\n          sub\n          dup4\n          tag_5\n          jump\t// in\n        tag_405:\n          mload\n          swap2\n          dup3\n          swap2\n          dup3\n          tag_7\n          jump\t// in\n        tag_406:\n          sub\n          swap1\n          return\n        tag_403:\n          swap5\n          pop\n          dup1\n          dup6\n          mstore\n          0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6\n        tag_407:\n          dup3\n          dup7\n          lt\n          tag_408\n          jumpi\n          pop\n          pop\n          pop\n          tag_405\n          dup3\n          0x20\n          tag_406\n          swap6\n          dup3\n          add\n          add\n          swap5\n          jump(tag_404)\n        tag_408:\n          dup1\n          sload\n          0x20\n          dup8\n          dup8\n          add\n          dup2\n          add\n          swap2\n          swap1\n          swap2\n          mstore\n          swap1\n          swap6\n          add\n          swap5\n          dup2\n          add\n          jump(tag_407)\n        tag_401:\n          tag_406\n          swap8\n          pop\n          dup7\n          swap4\n          pop\n          0x20\n          swap3\n          pop\n          tag_405\n          swap5\n          swap2\n          pop\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n          and\n          dup3\n          dup5\n          add\n          mstore\n          iszero\n          iszero\n          0x05\n          shl\n          dup3\n          add\n          add\n          swap5\n          jump(tag_404)\n        tag_105:\n          swap1\n          swap2\n          pop\n          jumpi(tag_176, callvalue)\n          jumpi(tag_176, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))\n            /* \"src/ReservoirPair.sol\":6915:6966  CustomSwapFeeChanged(customSwapFee, aCustomSwapFee) */\n          0x27f958341e42705d80835b6391cbe111df34533c7061beebb873bdb3454cc697\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap1\n          calldataload\n            /* \"src/ReservoirPair.sol\":3741:3748  factory */\n          swap2\n            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */\n          tag_414\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":3741:3748  factory */\n          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":3719:3729  msg.sender */\n          caller\n            /* \"src/ReservoirPair.sol\":3719:3749  msg.sender == address(factory) */\n          eq\n            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */\n          tag_15\n          jump\t// in\n        tag_414:\n            /* \"src/ReservoirPair.sol\":6936:6949  customSwapFee */\n          0x08\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n          dup2\n          mload\n          swap1\n          dup2\n          mstore\n          dup4\n          0x20\n          dup3\n          add\n          mstore\n            /* \"src/ReservoirPair.sol\":6915:6966  CustomSwapFeeChanged(customSwapFee, aCustomSwapFee) */\n          log1\n            /* \"src/ReservoirPair.sol\":6936:6949  customSwapFee */\n          0x08\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sstore\n            /* \"src/ReservoirPair.sol\":6976:7006  customSwapFee = aCustomSwapFee */\n          tag_157\n          tag_16\n          jump\t// in\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n        tag_103:\n          dup4\n          dup3\n          jumpi(tag_164, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_164\n          jumpi\n          0x20\n          swap1\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":12568:12601  IAssetManager public assetManager */\n          0x0b\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n          and\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_101:\n          pop\n          dup3\n          jumpi(tag_155, callvalue)\n          0x20\n          dup1\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_164\n          jumpi\n          tag_424\n          tag_8\n          jump\t// in\n        tag_424:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":7293:7307  _lockAndLoad() */\n          swap1\n          tag_425\n          tag_13\n          jump\t// in\n        tag_425:\n          pop\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap2\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":7342:7394  _syncManaged(uint104(lReserve0), uint104(lReserve1)) */\n          tag_426\n          swap2\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0xffffffffffffffffffffffffff\n          swap1\n          dup2\n          and\n          swap2\n          and\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":7342:7394  _syncManaged(uint104(lReserve0), uint104(lReserve1)) */\n          tag_27\n          jump\t// in\n        tag_426:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":7470:7474  this */\n          swap2\n          swap1\n          swap2\n          address\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup7\n          mstore\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":7452:7461  balanceOf */\n          0x03\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup5\n          mstore\n          dup7\n          dup7\n          keccak256\n          sload\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":7487:7517  _mintFee(lReserve0, lReserve1) */\n          swap5\n          tag_427\n          dup3\n          dup6\n          tag_42\n          jump\t// in\n        tag_427:\n          pop\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":7550:7561  totalSupply */\n          0x02\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":7672:7686  _totalToken0() */\n          swap7\n          dup6\n          dup9\n          tag_428\n          tag_24\n          jump\t// in\n        tag_428:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":7660:7686  liquidity * _totalToken0() */\n          tag_429\n          swap1\n          dup11\n          tag_37\n          jump\t// in\n        tag_429:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":7660:7701  liquidity * _totalToken0() / lTotalSupply */\n          swap1\n          tag_430\n          swap2\n          tag_38\n          jump\t// in\n        tag_430:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":7782:7796  _totalToken1() */\n          swap9\n          tag_431\n          tag_25\n          jump\t// in\n        tag_431:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":7770:7796  liquidity * _totalToken1() */\n          tag_432\n          swap1\n          dup11\n          tag_37\n          jump\t// in\n        tag_432:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":7770:7811  liquidity * _totalToken1() / lTotalSupply */\n          swap1\n          tag_433\n          swap2\n          tag_38\n          jump\t// in\n        tag_433:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":7470:7474  this */\n          swap8\n          address\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup4\n          mstore\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":7452:7461  balanceOf */\n          0x03\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup3\n          mstore\n          dup11\n          dup4\n          keccak256\n          dup2\n          dup2\n          sload\n            /* \"lib/solmate/src/tokens/ERC20.sol\":6553:6578  balanceOf[from] -= amount */\n          swap1\n          tag_434\n          swap2\n          tag_10\n          jump\t// in\n        tag_434:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap1\n          sstore\n          dup1\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":7550:7561  totalSupply */\n          0x02\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n          sub\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":7550:7561  totalSupply */\n          0x02\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sstore\n          dup11\n          mload\n          swap1\n          dup2\n          mstore\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":7470:7474  this */\n          address\n            /* \"lib/solmate/src/tokens/ERC20.sol\":6768:6802  Transfer(from, address(0), amount) */\n          swap2\n          0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n          swap2\n          log3\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":7962:7971  lReserve1 */\n          tag_435\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":7928:7934  token0 */\n          dup3\n          dup6\n          dup10\n          dup5\n          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":7962:7971  lReserve1 */\n          tag_20\n          jump\t// in\n        tag_435:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":7999:8005  token1 */\n          dup2\n          dup5\n          dup8\n          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":8033:8042  lReserve1 */\n          swap4\n          tag_436\n          swap5\n          tag_20\n          jump\t// in\n        tag_436:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":8074:8088  _totalToken0() */\n          tag_437\n          tag_24\n          jump\t// in\n        tag_437:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":8118:8132  _totalToken1() */\n          swap3\n          tag_438\n          tag_25\n          jump\t// in\n        tag_438:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":8229:8250  lBalance0 * lBalance1 */\n          tag_439\n          dup2\n          dup7\n          tag_37\n          jump\t// in\n        tag_439:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":6845:6874  kLast = lBalance0 * lBalance1 */\n          0x010010\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sstore\n          dup9\n          dup1\n          mload\n          dup10\n          dup2\n          mstore\n          dup9\n          dup9\n          dup3\n          add\n          mstore\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":8270:8280  msg.sender */\n          caller\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":8265:8301  Burn(msg.sender, rAmount0, rAmount1) */\n          swap2\n          0x49995e5dd6158cf69ad3e9777c46755a1a826a446c6416992167462dad033b2a\n          swap2\n          log2\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":8373:8392  lBlockTimestampLast */\n          tag_440\n          swap5\n          tag_22\n          jump\t// in\n        tag_440:\n          tag_441\n          tag_41\n          jump\t// in\n        tag_441:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup4\n          mload\n          swap3\n          dup4\n          mstore\n          dup3\n          add\n          mstore\n          return\n        tag_99:\n          dup4\n          dup3\n          jumpi(tag_164, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_164\n          jumpi\n          0x20\n          swap1\n            /* \"src/ReservoirPair.sol\":17094:17122  uint256 public maxChangeRate */\n          0x01000d\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_97:\n          dup4\n          dup3\n          jumpi(tag_164, callvalue)\n          jumpi(tag_164, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))\n          dup1\n          0x20\n          swap3\n          0xffffffffffffffffffffffffffffffffffffffff\n          tag_450\n          tag_8\n          jump\t// in\n        tag_450:\n          and\n          dup2\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":1751:1792  mapping(address => uint256) public nonces */\n          0x05\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup5\n          mstore\n          keccak256\n          sload\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_95:\n          dup4\n          dup3\n          jumpi(tag_164, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_164\n          jumpi\n          0x20\n          swap1\n            /* \"src/ReservoirPair.sol\":3619:3671  uint256 public customPlatformFee = type(uint256).max */\n          0x0a\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_93:\n          dup4\n          dup3\n          jumpi(tag_164, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_164\n          jumpi\n          0x20\n          swap1\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":1193:1213  uint256 public kLast */\n          0x010010\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_91:\n          dup4\n          dup3\n          jumpi(tag_164, callvalue)\n          jumpi(tag_164, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))\n          dup1\n          0x20\n          swap3\n          0xffffffffffffffffffffffffffffffffffffffff\n          tag_463\n          tag_8\n          jump\t// in\n        tag_463:\n          and\n          dup2\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":1337:1381  mapping(address => uint256) public balanceOf */\n          0x03\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup5\n          mstore\n          keccak256\n          sload\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_89:\n          swap1\n          dup4\n          jumpi(tag_155, callvalue)\n          0x20\n          swap2\n          dup3\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_164\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":5865:5917  _syncManaged(uint104(lReserve0), uint104(lReserve1)) */\n          tag_468\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          tag_469\n          tag_8\n          jump\t// in\n        tag_469:\n          swap5\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":5816:5830  _lockAndLoad() */\n          tag_470\n          tag_13\n          jump\t// in\n        tag_470:\n          pop\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap4\n          swap2\n          0xffffffffffffffffffffffffff\n          swap2\n          dup3\n          and\n          swap2\n          and\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":5865:5917  _syncManaged(uint104(lReserve0), uint104(lReserve1)) */\n          tag_27\n          jump\t// in\n        tag_468:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":5975:5989  _totalToken0() */\n          swap2\n          tag_471\n          tag_24\n          jump\t// in\n        tag_471:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":6019:6033  _totalToken1() */\n          tag_472\n          tag_25\n          jump\t// in\n        tag_472:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":6062:6083  lBalance0 - lReserve0 */\n          swap2\n          tag_473\n          dup5\n          dup4\n          tag_10\n          jump\t// in\n        tag_473:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":6112:6133  lBalance1 - lReserve1 */\n          swap1\n          tag_474\n          dup7\n          dup6\n          tag_10\n          jump\t// in\n        tag_474:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":6144:6174  _mintFee(lReserve0, lReserve1) */\n          swap1\n          tag_475\n          dup8\n          dup8\n          tag_42\n          jump\t// in\n        tag_475:\n          pop\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":6207:6218  totalSupply */\n          0x02\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n          swap10\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":6310:6327  lTotalSupply == 0 */\n          dup11\n          tag_476\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":6356:6399  FixedPointMathLib.sqrt(lAmount0 * lAmount1) */\n          tag_478\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":6379:6398  lAmount0 * lAmount1 */\n          tag_479\n          dup5\n          dup7\n          tag_37\n          jump\t// in\n        tag_479:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":6356:6399  FixedPointMathLib.sqrt(lAmount0 * lAmount1) */\n          tag_40\n          jump\t// in\n        tag_478:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc18\n          dup2\n          add\n          swap1\n          dup2\n          gt\n          tag_480\n          jumpi\n            /* \"src/ReservoirPair.sol\":2671:2678  10 ** 3 */\n          swap11\n          0x03e8\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap1\n          dup2\n          dup2\n          add\n          dup1\n          swap2\n          gt\n          tag_482\n          jumpi\n          dup14\n          dup4\n          swap3\n            /* \"lib/solmate/src/tokens/ERC20.sol\":6436:6468  Transfer(address(0), to, amount) */\n          0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap3\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":6207:6218  totalSupply */\n          0x02\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sstore\n          dup4\n          dup1\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":6387:6396  balanceOf */\n          0x03\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup3\n          mstore\n          dup14\n          dup5\n          keccak256\n          dup2\n          dup2\n          sload\n          add\n          swap1\n          sstore\n          dup14\n          mload\n          swap1\n          dup2\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":6436:6468  Transfer(address(0), to, amount) */\n          log3\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":6306:6661  if (lTotalSupply == 0) {... */\n        tag_484:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":6678:6692  rLiquidity > 0 */\n          dup10\n          iszero\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          tag_485\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":6745:6755  rLiquidity */\n          pop\n          tag_487\n          dup10\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":6997:7016  lBlockTimestampLast */\n          tag_488\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":6745:6755  rLiquidity */\n          swap10\n          swap11\n          swap12\n          swap13\n          tag_39\n          jump\t// in\n        tag_487:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":6853:6874  lBalance0 * lBalance1 */\n          tag_489\n          dup5\n          dup5\n          tag_37\n          jump\t// in\n        tag_489:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":6845:6874  kLast = lBalance0 * lBalance1 */\n          0x010010\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sstore\n          dup9\n          mload\n          swap2\n          dup3\n          mstore\n          dup11\n          dup3\n          add\n          mstore\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":6889:6925  Mint(msg.sender, lAmount0, lAmount1) */\n          0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":6894:6904  msg.sender */\n          dup9\n          caller\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":6889:6925  Mint(msg.sender, lAmount0, lAmount1) */\n          swap3\n          log2\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":6997:7016  lBlockTimestampLast */\n          tag_22\n          jump\t// in\n        tag_488:\n          tag_490\n          tag_41\n          jump\t// in\n        tag_490:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_485:\n          0x64\n          swap1\n          dup12\n          dup11\n          mload\n          swap2\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          dup3\n          add\n          mstore\n          0x1b\n          0x24\n          dup3\n          add\n          mstore\n          0x43503a20494e53554646494349454e545f4c49515f4d494e5445440000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n        tag_482:\n          0x24\n          dup4\n          0x11\n          dup7\n          0x4e487b7100000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          mstore\n          revert\n        tag_480:\n          pop\n          0x11\n          0x24\n          swap3\n          0x4e487b7100000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          mstore\n          revert\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":6306:6661  if (lTotalSupply == 0) {... */\n        tag_476:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":6614:6649  lAmount1 * lTotalSupply / lReserve1 */\n          tag_491\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":6577:6600  lAmount0 * lTotalSupply */\n          dup9\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":6614:6637  lAmount1 * lTotalSupply */\n          tag_494\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":6577:6612  lAmount0 * lTotalSupply / lReserve0 */\n          tag_493\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":6577:6600  lAmount0 * lTotalSupply */\n          dup11\n          dup16\n          swap7\n          swap16\n          tag_494\n          swap1\n          dup11\n          tag_37\n          jump\t// in\n        tag_494:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":6577:6612  lAmount0 * lTotalSupply / lReserve0 */\n          tag_38\n          jump\t// in\n        tag_493:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":6614:6637  lAmount1 * lTotalSupply */\n          swap5\n          dup7\n          tag_37\n          jump\t// in\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":6614:6649  lAmount1 * lTotalSupply / lReserve1 */\n        tag_491:\n            /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":673:686  a < b ? a : b */\n          swap1\n          pop\n            /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":673:678  a < b */\n          dup1\n          dup3\n          lt\n          iszero\n          tag_495\n          jumpi\n            /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":673:686  a < b ? a : b */\n          pop\n        tag_497:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":6306:6661  if (lTotalSupply == 0) {... */\n          swap9\n          jump(tag_484)\n            /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":673:686  a < b ? a : b */\n        tag_495:\n          swap1\n          pop\n          jump(tag_497)\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n        tag_87:\n          dup4\n          dup3\n          jumpi(tag_164, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_164\n          jumpi\n          0x20\n          swap1\n            /* \"src/ReservoirPair.sol\":3460:3482  uint256 public swapFee */\n          0x07\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_85:\n          swap2\n          pop\n          jumpi(tag_176, callvalue)\n          jumpi(tag_176, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))\n          dup2\n          calldataload\n            /* \"src/ReservoirPair.sol\":3741:3748  factory */\n          swap2\n            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */\n          tag_506\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":3741:3748  factory */\n          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":3719:3729  msg.sender */\n          caller\n            /* \"src/ReservoirPair.sol\":3719:3749  msg.sender == address(factory) */\n          eq\n            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */\n          tag_15\n          jump\t// in\n        tag_506:\n            /* \"src/ReservoirPair.sol\":17789:17807  0 < aMaxChangeRate */\n          dup3\n          iszero\n          iszero\n            /* \"src/ReservoirPair.sol\":17789:17847  0 < aMaxChangeRate && aMaxChangeRate <= MAX_CHANGE_PER_SEC */\n          dup1\n          tag_507\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n        tag_508:\n            /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */\n          iszero\n          tag_509\n          jumpi\n            /* \"src/ReservoirPair.sol\":17917:17930  maxChangeRate */\n          pop\n            /* \"src/ReservoirPair.sol\":17896:17947  MaxChangeRateUpdated(maxChangeRate, aMaxChangeRate) */\n          0x807b9f5907da3f00bf587e77bc07247e1c7ff5ae46c93a584b3a075be0b1bac2\n            /* \"src/ReservoirPair.sol\":17917:17930  maxChangeRate */\n          0x01000d\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap2\n          dup3\n          sload\n          dup2\n          mload\n          swap1\n          dup2\n          mstore\n          dup5\n          0x20\n          dup3\n          add\n          mstore\n            /* \"src/ReservoirPair.sol\":17896:17947  MaxChangeRateUpdated(maxChangeRate, aMaxChangeRate) */\n          log1\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sstore\n          dup1\n          return\n            /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */\n        tag_509:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0x20\n            /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */\n          0x64\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap3\n          mload\n            /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */\n          swap2\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          dup3\n          add\n          mstore\n          0x1d\n          0x24\n          dup3\n          add\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mstore\n            /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */\n          0x4f573a20494e56414c49445f4348414e47455f5045525f5345434f4e44000000\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0x44\n          dup3\n          add\n            /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */\n          mstore\n          revert\n            /* \"src/ReservoirPair.sol\":17789:17847  0 < aMaxChangeRate && aMaxChangeRate <= MAX_CHANGE_PER_SEC */\n        tag_507:\n            /* \"src/ReservoirPair.sol\":17811:17847  aMaxChangeRate <= MAX_CHANGE_PER_SEC */\n          pop\n            /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */\n          0x2386f26fc10000\n            /* \"src/ReservoirPair.sol\":17811:17847  aMaxChangeRate <= MAX_CHANGE_PER_SEC */\n          dup4\n          gt\n          iszero\n            /* \"src/ReservoirPair.sol\":17789:17847  0 < aMaxChangeRate && aMaxChangeRate <= MAX_CHANGE_PER_SEC */\n          jump(tag_508)\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n        tag_83:\n          dup4\n          dup3\n          jumpi(tag_164, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_164\n          jumpi\n          0x20\n          swap1\n            /* \"src/ReservoirPair.sol\":17128:17159  uint256 public prevClampedPrice */\n          0x01000e\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_81:\n          dup4\n          dup3\n          jumpi(tag_164, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_164\n          jumpi\n          0x20\n          swap1\n          mload\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":1003:1007  1e76 */\n          0x161bcca7119915b50764b4abe86529797775a5f1719510000000000000000000\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup2\n          mstore\n          return\n        tag_79:\n          dup4\n          dup3\n          jumpi(tag_164, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_164\n          jumpi\n          0x20\n          swap1\n          mload\n            /* \"src/ReservoirPair.sol\":2789:2796  500_000 */\n          0x07a120\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup2\n          mstore\n          return\n        tag_77:\n          dup4\n          dup3\n          jumpi(tag_164, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_164\n          jumpi\n          0x20\n          swap1\n          tag_527\n          tag_11\n          jump\t// in\n        tag_527:\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_75:\n          dup4\n          dup3\n          jumpi(tag_164, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_164\n          jumpi\n          dup1\n            /* \"src/ReservoirPair.sol\":17490:17522  factory.read(ORACLE_CALLER_NAME) */\n          tag_532\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap2\n          mload\n          tag_533\n          dup2\n          tag_4\n          jump\t// in\n        tag_533:\n          0x14\n          dup2\n          mstore\n          0x5368617265643a3a6f7261636c6543616c6c6572000000000000000000000000\n          0x20\n          dup3\n          add\n          mstore\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":17490:17497  factory */\n          swap3\n          dup4\n          swap2\n          dup3\n          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":17490:17522  factory.read(ORACLE_CALLER_NAME) */\n          tag_49\n          jump\t// in\n        tag_532:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":17562:17574  oracleCaller */\n          swap1\n          0x01000f\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap3\n          dup4\n          sload\n          swap1\n          dup2\n          and\n            /* \"src/ReservoirPair.sol\":17548:17574  lNewCaller != oracleCaller */\n          dup1\n          dup5\n          sub\n            /* \"src/ReservoirPair.sol\":17544:17690  if (lNewCaller != oracleCaller) {... */\n          tag_534\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup6\n          dup1\n          return\n            /* \"src/ReservoirPair.sol\":17544:17690  if (lNewCaller != oracleCaller) {... */\n        tag_534:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup3\n            /* \"src/ReservoirPair.sol\":17595:17640  OracleCallerUpdated(oracleCaller, lNewCaller) */\n          0x262681b3b01b61ff6d02569759105771205cdd274fb3c45535b50632e0a3523f\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap2\n          0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n          swap5\n          mload\n          swap1\n          dup2\n          mstore\n            /* \"src/ReservoirPair.sol\":16881:16903  \"Shared::oracleCaller\" */\n          dup6\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0x20\n            /* \"src/ReservoirPair.sol\":16881:16903  \"Shared::oracleCaller\" */\n          dup3\n          add\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mstore\n            /* \"src/ReservoirPair.sol\":17595:17640  OracleCallerUpdated(oracleCaller, lNewCaller) */\n          log1\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          and\n          or\n          swap1\n          sstore\n            /* \"src/ReservoirPair.sol\":17544:17690  if (lNewCaller != oracleCaller) {... */\n          dup2\n          dup1\n          dup1\n          dup1\n          dup1\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup6\n          dup1\n          return\n        tag_73:\n          dup4\n          dup3\n          jumpi(tag_164, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_164\n          jumpi\n          0x20\n          swap1\n          mload\n          0xff\n            /* \"lib/solmate/src/tokens/ERC20.sol\":1083:1114  uint8 public immutable decimals */\n          immutable(\"0xb7b2278e6c1d8d0abc309f6bf9256046dfb6cd1d61f6bb10388e8ea4928d3539\")\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          and\n          dup2\n          mstore\n          return\n        tag_71:\n          dup4\n          dup3\n          jumpi(tag_164, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_164\n          jumpi\n          0x20\n          swap1\n            /* \"src/ReservoirPair.sol\":3587:3613  uint256 public platformFee */\n          0x09\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_69:\n          swap1\n          dup4\n          jumpi(tag_155, callvalue)\n          jumpi(tag_155, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x60))\n          tag_548\n          tag_8\n          jump\t// in\n        tag_548:\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3594:3620  Transfer(from, to, amount) */\n          0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          tag_549\n          tag_9\n          jump\t// in\n        tag_549:\n          swap5\n          calldataload(0x44)\n          dup6\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup1\n          swap6\n          and\n          swap5\n          dup6\n          dup8\n          mstore\n          0x20\n          swap9\n          dup5\n          dup11\n          swap6\n          dup7\n          mstore\n          dup4\n          dup10\n          keccak256\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3225:3235  msg.sender */\n          caller\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup11\n          mstore\n          dup7\n          mstore\n          dup4\n          dup10\n          keccak256\n          sload\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3287:3315  allowed != type(uint256).max */\n          dup6\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3298:3315  type(uint256).max */\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3287:3315  allowed != type(uint256).max */\n          dup3\n          sub\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3283:3363  if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount */\n          tag_550\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n        tag_551:\n          pop\n          pop\n          pop\n          dup7\n          dup9\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3374:3383  balanceOf */\n          0x03\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup6\n          mstore\n          dup3\n          dup9\n          keccak256\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3374:3399  balanceOf[from] -= amount */\n          tag_552\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup6\n          dup3\n          sload\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3374:3399  balanceOf[from] -= amount */\n          tag_10\n          jump\t// in\n        tag_552:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap1\n          sstore\n          and\n          swap6\n          dup7\n          dup2\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3374:3383  balanceOf */\n          0x03\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup5\n          mstore\n          keccak256\n          dup2\n          dup2\n          sload\n          add\n          swap1\n          sstore\n          dup6\n          mload\n          swap1\n          dup2\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3594:3620  Transfer(from, to, amount) */\n          log3\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mload\n          0x01\n          dup2\n          mstore\n          return\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3283:3363  if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount */\n        tag_550:\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3347:3363  allowed - amount */\n          tag_553\n          swap2\n          tag_10\n          jump\t// in\n        tag_553:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap1\n          dup9\n          dup11\n          mstore\n          dup7\n          mstore\n          dup4\n          dup10\n          keccak256\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3225:3235  msg.sender */\n          caller\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup11\n          mstore\n          dup7\n          mstore\n          dup4\n          dup10\n          keccak256\n          sstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3283:3363  if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount */\n          dup11\n          dup1\n          dup6\n          jump(tag_551)\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n        tag_67:\n          dup4\n          dup3\n          jumpi(tag_164, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_164\n          jumpi\n          0x20\n          swap1\n            /* \"lib/solmate/src/tokens/ERC20.sol\":1304:1330  uint256 public totalSupply */\n          0x02\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_65:\n          dup4\n          dup3\n          jumpi(tag_164, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_164\n          jumpi\n          0x20\n          swap1\n          mload\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":2915:2944  ERC20 public immutable token0 */\n          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          and\n          dup2\n          mstore\n          return\n        tag_63:\n          dup4\n          jumpi(tag_155, callvalue)\n          dup1\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_155\n          jumpi\n          tag_157\n          tag_16\n          jump\t// in\n        tag_61:\n          swap1\n          swap2\n          pop\n          jumpi(tag_176, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_176\n          jumpi\n          0x20\n          swap3\n          tag_571\n          tag_8\n          jump\t// in\n        tag_571:\n          swap2\n          dup4\n          calldataload(0x24)\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2561:2571  msg.sender */\n          swap3\n          dup4\n          swap3\n          caller\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup3\n          mstore\n          dup8\n          mstore\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup3\n          dup3\n          keccak256\n          swap6\n          and\n          swap5\n          dup6\n          dup3\n          mstore\n          dup8\n          mstore\n          keccak256\n          sstore\n          dup3\n          mload\n          swap1\n          dup2\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2606:2643  Approval(msg.sender, spender, amount) */\n          0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2561:2571  msg.sender */\n          dup5\n          caller\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2606:2643  Approval(msg.sender, spender, amount) */\n          swap3\n          log3\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mload\n          0x01\n          dup2\n          mstore\n          return\n        tag_59:\n          dup4\n          dup3\n          jumpi(tag_164, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_164\n          jumpi\n          0x80\n          swap1\n          tag_576\n          tag_12\n          jump\t// in\n        tag_576:\n          swap1\n          0xffffffffffffffffffffffffff\n          swap2\n          dup3\n          dup2\n          mload\n          and\n            /* \"src/ReservoirPair.sol\":5849:5864  lSlot0.reserve1 */\n          swap3\n          0x20\n          dup3\n          add\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mload\n          and\n            /* \"src/ReservoirPair.sol\":5920:5942  lSlot0.packedTimestamp */\n          swap2\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0xffff\n            /* \"src/ReservoirPair.sol\":5962:5974  lSlot0.index */\n          0x60\n            /* \"src/ReservoirPair.sol\":4678:4688  0x7FFFFFFF */\n          0x7fffffff\n            /* \"src/ReservoirPair.sol\":5920:5942  lSlot0.packedTimestamp */\n          dup4\n          dup6\n          add\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mload\n            /* \"src/ReservoirPair.sol\":4662:4688  aRawTimestamp & 0x7FFFFFFF */\n          and\n            /* \"src/ReservoirPair.sol\":5962:5974  lSlot0.index */\n          swap4\n          add\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mload\n          and\n          swap3\n          dup2\n          mload\n          swap5\n          dup6\n          mstore\n            /* \"src/ReservoirPair.sol\":5849:5864  lSlot0.reserve1 */\n          0x20\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup6\n          add\n          mstore\n          dup4\n          add\n          mstore\n            /* \"src/ReservoirPair.sol\":5962:5974  lSlot0.index */\n          0x60\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup3\n          add\n          mstore\n          return\n        tag_57:\n          swap3\n          pop\n          pop\n          jumpi(tag_176, callvalue)\n          dup3\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_176\n          jumpi\n          dup3\n          dup1\n          sload\n          tag_581\n          dup2\n          tag_1\n          jump\t// in\n        tag_581:\n          dup1\n          dup6\n          mstore\n          swap2\n          0x01\n          swap2\n          dup1\n          dup4\n          and\n          swap1\n          dup2\n          iszero\n          tag_401\n          jumpi\n          pop\n          0x01\n          eq\n          tag_584\n          jumpi\n          pop\n          pop\n          pop\n          tag_405\n          dup3\n          tag_406\n          swap5\n          sub\n          dup4\n          tag_5\n          jump\t// in\n        tag_584:\n          dup1\n          dup1\n          swap7\n          pop\n          mstore\n          0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563\n        tag_588:\n          dup3\n          dup7\n          lt\n          tag_589\n          jumpi\n          pop\n          pop\n          pop\n          tag_405\n          dup3\n          0x20\n          tag_406\n          swap6\n          dup3\n          add\n          add\n          swap5\n          jump(tag_404)\n        tag_589:\n          dup1\n          sload\n          0x20\n          dup8\n          dup8\n          add\n          dup2\n          add\n          swap2\n          swap1\n          swap2\n          mstore\n          swap1\n          swap6\n          add\n          swap5\n          dup2\n          add\n          jump(tag_588)\n        tag_1:\n          swap1\n          0x01\n          dup3\n          dup2\n          shr\n          swap3\n          and\n          dup1\n          iszero\n          tag_591\n          jumpi\n        tag_592:\n          0x20\n          dup4\n          lt\n          eq\n          tag_593\n          jumpi\n          jump\t// out\n        tag_593:\n          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n          mstore(0x04, 0x22)\n          revert(0x00, 0x24)\n        tag_591:\n          swap2\n          0x7f\n          and\n          swap2\n          jump(tag_592)\n        tag_2:\n          0x80\n          dup2\n          add\n          swap1\n          dup2\n          lt\n          0xffffffffffffffff\n          dup3\n          gt\n          or\n          tag_595\n          jumpi\n          0x40\n          mstore\n          jump\t// out\n        tag_595:\n          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n          mstore(0x04, 0x41)\n          revert(0x00, 0x24)\n        tag_3:\n          0xffffffffffffffff\n          dup2\n          gt\n          tag_595\n          jumpi\n          0x40\n          mstore\n          jump\t// out\n        tag_4:\n          0x40\n          dup2\n          add\n          swap1\n          dup2\n          lt\n          0xffffffffffffffff\n          dup3\n          gt\n          or\n          tag_595\n          jumpi\n          0x40\n          mstore\n          jump\t// out\n        tag_5:\n          swap1\n          0x1f\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n          swap2\n          add\n          and\n          dup2\n          add\n          swap1\n          dup2\n          lt\n          0xffffffffffffffff\n          dup3\n          gt\n          or\n          tag_595\n          jumpi\n          0x40\n          mstore\n          jump\t// out\n        tag_6:\n          0x00\n        tag_603:\n          dup4\n          dup2\n          lt\n          tag_604\n          jumpi\n          pop\n          pop\n          0x00\n          swap2\n          add\n          mstore\n          jump\t// out\n        tag_604:\n          dup2\n          dup2\n          add\n          mload\n          dup4\n          dup3\n          add\n          mstore\n          0x20\n          add\n          jump(tag_603)\n        tag_7:\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n          0x1f\n          0x40\n          swap4\n          0x20\n          dup5\n          mstore\n          tag_606\n          dup2\n          mload\n          dup1\n          swap3\n          dup2\n          0x20\n          dup9\n          add\n          mstore\n          0x20\n          dup9\n          dup9\n          add\n          swap2\n          add\n          tag_6\n          jump\t// in\n        tag_606:\n          add\n          and\n          add\n          add\n          swap1\n          jump\t// out\n        tag_8:\n          calldataload(0x04)\n          swap1\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup3\n          and\n          dup3\n          sub\n          tag_607\n          jumpi\n          jump\t// out\n        tag_607:\n          0x00\n          dup1\n          revert\n        tag_9:\n          calldataload(0x24)\n          swap1\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup3\n          and\n          dup3\n          sub\n          tag_607\n          jumpi\n          jump\t// out\n        tag_10:\n          swap2\n          swap1\n          dup3\n          sub\n          swap2\n          dup3\n          gt\n          tag_611\n          jumpi\n          jump\t// out\n        tag_611:\n          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n          mstore(0x04, 0x11)\n          revert(0x00, 0x24)\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5327:5504  function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {... */\n        tag_11:\n          0x00\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5410:5423  block.chainid */\n          chainid\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5427:5443  INITIAL_CHAIN_ID */\n          immutable(\"0x81290bb363e768cff9ff9a5d447e434874948b933698048b966fdf5d744bf636\")\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5410:5443  block.chainid == INITIAL_CHAIN_ID */\n          sub\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5427:5443  INITIAL_CHAIN_ID */\n          tag_613\n          jumpi\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5446:5470  INITIAL_DOMAIN_SEPARATOR */\n          pop\n          immutable(\"0x34382e0db9f4d1365b2614bb97467901a574db9e05159d2f14a2053ade673b06\")\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5327:5504  function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {... */\n          swap1\n          jump\t// out\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5410:5497  block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator() */\n        tag_613:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mload(0x40)\n          dup2\n          sload\n          dup3\n          swap2\n          tag_616\n          dup3\n          tag_1\n          jump\t// in\n        tag_616:\n          dup1\n          dup3\n          mstore\n          dup2\n          0x20\n          swap5\n          dup6\n          dup3\n          add\n          swap5\n          0x01\n          swap1\n          dup8\n          dup3\n          dup3\n          and\n          swap2\n          dup3\n          0x00\n          eq\n          tag_617\n          jumpi\n          pop\n          pop\n          0x01\n          eq\n          tag_619\n          jumpi\n        tag_620:\n          pop\n          tag_621\n          swap3\n          pop\n          sub\n          dup3\n          tag_5\n          jump\t// in\n        tag_621:\n          mload\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5789:5811  keccak256(bytes(name)) */\n          swap1\n          keccak256\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap2\n          mload(0x40)\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5640:5935  abi.encode(... */\n          swap2\n          dup3\n          add\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap3\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5672:5767  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n          0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup5\n          mstore\n          0x40\n          dup4\n          add\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5833:5847  keccak256(\"1\") */\n          0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0x60\n          dup4\n          add\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5410:5423  block.chainid */\n          chainid\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0x80\n          dup4\n          add\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5912:5916  this */\n          address\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0xa0\n          dup4\n          add\n          mstore\n          0xa0\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5640:5935  abi.encode(... */\n          dup3\n          mstore\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0xc0\n          dup3\n          add\n          swap1\n          dup3\n          dup3\n          lt\n          0xffffffffffffffff\n          dup4\n          gt\n          or\n          tag_622\n          jumpi\n          pop\n          0x40\n          mstore\n          mload\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5613:5949  keccak256(... */\n          swap1\n          keccak256\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5327:5504  function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {... */\n          swap1\n          jump\t// out\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n        tag_622:\n          dup1\n          0x4e487b7100000000000000000000000000000000000000000000000000000000\n          0x24\n          swap3\n          mstore\n          mstore(0x04, 0x41)\n          revert\n        tag_619:\n          dup8\n          dup1\n          mstore\n          dup7\n          swap2\n          pop\n          dup8\n          swap1\n          0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563\n        tag_624:\n          dup6\n          dup4\n          lt\n          tag_625\n          jumpi\n          pop\n          pop\n          tag_621\n          swap4\n          pop\n          dup3\n          add\n          add\n          codesize\n          jump(tag_620)\n        tag_625:\n          dup1\n          sload\n          dup4\n          dup9\n          add\n          dup6\n          add\n          mstore\n          dup7\n          swap5\n          pop\n          dup9\n          swap4\n          swap1\n          swap3\n          add\n          swap2\n          dup2\n          add\n          jump(tag_624)\n        tag_617:\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n          and\n          dup9\n          mstore\n          tag_621\n          swap6\n          iszero\n          iszero\n          0x05\n          shl\n          dup6\n          add\n          add\n          swap3\n          pop\n          codesize\n          swap2\n          pop\n          tag_620\n          swap1\n          pop\n          jump\n        tag_12:\n          mload(0x40)\n          swap1\n          tag_627\n          dup3\n          tag_2\n          jump\t// in\n        tag_627:\n          dup2\n          0x60\n            /* \"src/ReservoirPair.sol\":5783:5789  _slot0 */\n          0x06\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n          0xffffffffffffffffffffffffff\n          dup1\n          dup3\n          and\n          dup5\n          mstore\n          dup2\n          0x68\n          shr\n          and\n          0x20\n          dup5\n          add\n          mstore\n          0xffffffff\n          dup2\n          0xd0\n          shr\n          and\n          0x40\n          dup5\n          add\n          mstore\n          0xf0\n          shr\n          swap2\n          add\n          mstore\n          jump\t// out\n            /* \"src/ReservoirPair.sol\":4905:5467  function _lockAndLoad()... */\n        tag_13:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          tag_628\n          tag_12\n          jump\t// in\n        tag_628:\n          swap1\n          0xffffffffffffffffffffffffff\n          swap2\n          dup3\n          dup2\n          mload\n          and\n            /* \"src/ReservoirPair.sol\":5196:5211  lSlot0.reserve1 */\n          swap3\n          0x20\n          dup3\n          add\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mload\n          and\n            /* \"src/ReservoirPair.sol\":5273:5295  lSlot0.packedTimestamp */\n          swap2\n          0x40\n          dup3\n          add\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mload\n            /* \"src/ReservoirPair.sol\":4662:4688  aRawTimestamp & 0x7FFFFFFF */\n          swap1\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0x01\n            /* \"src/ReservoirPair.sol\":4662:4688  aRawTimestamp & 0x7FFFFFFF */\n          dup1\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0xffff\n            /* \"src/ReservoirPair.sol\":5315:5327  lSlot0.index */\n          0x60\n            /* \"src/ReservoirPair.sol\":4678:4688  0x7FFFFFFF */\n          0x7fffffff\n            /* \"src/ReservoirPair.sol\":4662:4688  aRawTimestamp & 0x7FFFFFFF */\n          dup7\n          and\n            /* \"src/ReservoirPair.sol\":5315:5327  lSlot0.index */\n          swap7\n          add\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mload\n          and\n          swap4\n            /* \"src/ReservoirPair.sol\":4632:4634  31 */\n          0x1f\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          shr\n          and\n            /* \"src/ReservoirPair.sol\":4615:4639  aRawTimestamp >> 31 == 1 */\n          eq\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          tag_629\n          jumpi\n            /* \"src/ReservoirPair.sol\":4847:4853  _slot0 */\n          0x06\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n          0xffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffff\n          0xffffffff0000000000000000000000000000000000000000000000000000\n            /* \"src/ReservoirPair.sol\":4817:4824  1 << 31 */\n          0x80000000\n            /* \"src/ReservoirPair.sol\":4872:4892  aTimestamp | lLocked */\n          dup7\n          or\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0xd0\n          shl\n          and\n          swap2\n          and\n          or\n            /* \"src/ReservoirPair.sol\":4847:4853  _slot0 */\n          0x06\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sstore\n            /* \"src/ReservoirPair.sol\":4905:5467  function _lockAndLoad()... */\n          jump\t// out\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n        tag_629:\n          0x64\n            /* \"src/ReservoirPair.sol\":5273:5295  lSlot0.packedTimestamp */\n          0x40\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mload\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n            /* \"src/ReservoirPair.sol\":5196:5211  lSlot0.reserve1 */\n          0x20\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0x04\n          dup3\n          add\n          mstore\n          0x0a\n          0x24\n          dup3\n          add\n          mstore\n          0x5245454e5452414e435900000000000000000000000000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n        tag_15:\n          iszero\n          tag_631\n          jumpi\n          jump\t// out\n        tag_631:\n          0x64\n          mload(0x40)\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          0x20\n          0x04\n          dup3\n          add\n          mstore\n          0x0c\n          0x24\n          dup3\n          add\n          mstore\n          0x503a20464f5242494444454e0000000000000000000000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n            /* \"src/ReservoirPair.sol\":7293:7635  function updateSwapFee() public {... */\n        tag_16:\n            /* \"src/ReservoirPair.sol\":7354:7367  customSwapFee */\n          0x08\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n          0x00\n            /* \"src/ReservoirPair.sol\":7371:7388  type(uint256).max */\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":7354:7388  customSwapFee != type(uint256).max */\n          dup3\n          eq\n            /* \"src/ReservoirPair.sol\":7371:7388  type(uint256).max */\n          tag_633\n          jumpi\n            /* \"src/ReservoirPair.sol\":7354:7443  customSwapFee != type(uint256).max ? customSwapFee : factory.get(swapFeeName).toUint256() */\n          pop\n        tag_635:\n            /* \"src/ReservoirPair.sol\":7469:7476  swapFee */\n          0x07\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n            /* \"src/ReservoirPair.sol\":7457:7476  _swapFee == swapFee */\n          dup1\n          dup3\n          eq\n            /* \"src/ReservoirPair.sol\":7453:7485  if (_swapFee == swapFee) return; */\n          tag_636\n          jumpi\n            /* \"src/ReservoirPair.sol\":2849:2855  20_000 */\n          0x4e20\n            /* \"src/ReservoirPair.sol\":7503:7527  _swapFee <= MAX_SWAP_FEE */\n          dup3\n          gt\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          tag_638\n          jumpi\n          0x40\n            /* \"src/ReservoirPair.sol\":7567:7600  SwapFeeChanged(swapFee, _swapFee) */\n          0xad321f810529281bbb90384fd6fecbdda41509a5ccd7bd5aed986ed827f6a026\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap2\n          dup2\n          mload\n          swap1\n          dup2\n          mstore\n          dup4\n          0x20\n          dup3\n          add\n          mstore\n            /* \"src/ReservoirPair.sol\":7567:7600  SwapFeeChanged(swapFee, _swapFee) */\n          log1\n            /* \"src/ReservoirPair.sol\":7469:7476  swapFee */\n          0x07\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sstore\n            /* \"src/ReservoirPair.sol\":7293:7635  function updateSwapFee() public {... */\n          jump\t// out\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n        tag_638:\n          0x64\n          mload(0x40)\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          0x20\n          0x04\n          dup3\n          add\n          mstore\n          0x13\n          0x24\n          dup3\n          add\n          mstore\n          0x503a20494e56414c49445f535741505f46454500000000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n            /* \"src/ReservoirPair.sol\":7453:7485  if (_swapFee == swapFee) return; */\n        tag_636:\n            /* \"src/ReservoirPair.sol\":7478:7485  return; */\n          pop\n          pop\n          jump\t// out\n            /* \"src/ReservoirPair.sol\":7354:7443  customSwapFee != type(uint256).max ? customSwapFee : factory.get(swapFeeName).toUint256() */\n        tag_633:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap1\n          pop\n          mload(0x40)\n          0x8eaa6ac000000000000000000000000000000000000000000000000000000000\n            /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */\n          dup2\n          mstore\n            /* \"src/ReservoirPair.sol\":7419:7430  swapFeeName */\n          immutable(\"0x4c21324e1a4fdca228db96f937188124acece199982b123b328bdd8fee41b354\")\n            /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */\n          0x04\n          dup3\n          add\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mstore\n            /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */\n          0x20\n            /* \"src/ReservoirPair.sol\":7407:7414  factory */\n          dup2\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0x24\n            /* \"src/ReservoirPair.sol\":7407:7414  factory */\n          dup2\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":7407:7414  factory */\n          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */\n          gas\n          staticcall\n          swap2\n          dup3\n          iszero\n          tag_640\n          jumpi\n          dup1\n          swap3\n          tag_642\n          jumpi\n            /* \"src/ReservoirPair.sol\":7354:7443  customSwapFee != type(uint256).max ? customSwapFee : factory.get(swapFeeName).toUint256() */\n        tag_643:\n          pop\n          pop\n          jump(tag_635)\n            /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */\n        tag_642:\n          swap1\n          swap2\n          pop\n          0x20\n          dup3\n          returndatasize\n          dup3\n          gt\n          tag_644\n          jumpi\n        tag_645:\n          dup2\n          tag_646\n          0x20\n          swap4\n          dup4\n          tag_5\n          jump\t// in\n        tag_646:\n          dup2\n          add\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sub\n          slt\n          tag_155\n          jumpi\n          pop\n          mload\n            /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */\n          codesize\n          dup1\n          jump(tag_643)\n        tag_644:\n          returndatasize\n          swap2\n          pop\n          jump(tag_645)\n        tag_640:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mload(0x40)\n          swap1\n          returndatasize\n          swap1\n          dup3\n          returndatacopy\n          returndatasize\n          swap1\n          revert\n            /* \"src/ReservoirPair.sol\":7641:8058  function updatePlatformFee() public {... */\n        tag_17:\n            /* \"src/ReservoirPair.sol\":7722:7739  customPlatformFee */\n          0x0a\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n            /* \"src/ReservoirPair.sol\":7743:7760  type(uint256).max */\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":7722:7760  customPlatformFee != type(uint256).max */\n          dup2\n          eq\n            /* \"src/ReservoirPair.sol\":7743:7760  type(uint256).max */\n          tag_649\n          jumpi\n            /* \"src/ReservoirPair.sol\":7722:7826  customPlatformFee != type(uint256).max ? customPlatformFee : factory.read(PLATFORM_FEE_NAME).toUint256() */\n        tag_651:\n            /* \"src/ReservoirPair.sol\":7856:7867  platformFee */\n          0x09\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n            /* \"src/ReservoirPair.sol\":7840:7867  _platformFee == platformFee */\n          dup1\n          dup3\n          eq\n            /* \"src/ReservoirPair.sol\":7836:7876  if (_platformFee == platformFee) return; */\n          tag_636\n          jumpi\n            /* \"src/ReservoirPair.sol\":2789:2796  500_000 */\n          0x07a120\n            /* \"src/ReservoirPair.sol\":7894:7926  _platformFee <= MAX_PLATFORM_FEE */\n          dup3\n          gt\n            /* \"src/ReservoirPair.sol\":2439:2460  \"Shared::platformFee\" */\n          tag_654\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0x40\n            /* \"src/ReservoirPair.sol\":7970:8015  PlatformFeeChanged(platformFee, _platformFee) */\n          0xc98a8b10b63c929f7799380bb4a0c444c713ebf74d8732f944c915034121aad1\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap2\n          dup2\n          mload\n          swap1\n          dup2\n          mstore\n          dup4\n          0x20\n          dup3\n          add\n          mstore\n            /* \"src/ReservoirPair.sol\":7970:8015  PlatformFeeChanged(platformFee, _platformFee) */\n          log1\n            /* \"src/ReservoirPair.sol\":7856:7867  platformFee */\n          0x09\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sstore\n            /* \"src/ReservoirPair.sol\":7641:8058  function updatePlatformFee() public {... */\n          jump\t// out\n            /* \"src/ReservoirPair.sol\":2439:2460  \"Shared::platformFee\" */\n        tag_654:\n          0x64\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mload(0x40)\n            /* \"src/ReservoirPair.sol\":2439:2460  \"Shared::platformFee\" */\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          0x20\n          0x04\n          dup3\n          add\n          mstore\n          0x17\n          0x24\n          dup3\n          add\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mstore\n            /* \"src/ReservoirPair.sol\":2439:2460  \"Shared::platformFee\" */\n          0x503a20494e56414c49445f504c4154464f524d5f464545000000000000000000\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0x44\n          dup3\n          add\n            /* \"src/ReservoirPair.sol\":2439:2460  \"Shared::platformFee\" */\n          mstore\n          revert\n            /* \"src/ReservoirPair.sol\":7722:7826  customPlatformFee != type(uint256).max ? customPlatformFee : factory.read(PLATFORM_FEE_NAME).toUint256() */\n        tag_649:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          pop\n            /* \"src/ReservoirPair.sol\":7783:7814  factory.read(PLATFORM_FEE_NAME) */\n          tag_656\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mload(0x40)\n          tag_657\n          dup2\n          tag_4\n          jump\t// in\n        tag_657:\n          0x13\n          dup2\n          mstore\n          0x5368617265643a3a706c6174666f726d46656500000000000000000000000000\n          0x20\n          dup3\n          add\n          mstore\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":7783:7790  factory */\n          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":7783:7814  factory.read(PLATFORM_FEE_NAME) */\n          tag_49\n          jump\t// in\n        tag_656:\n            /* \"src/ReservoirPair.sol\":7722:7826  customPlatformFee != type(uint256).max ? customPlatformFee : factory.read(PLATFORM_FEE_NAME).toUint256() */\n          jump(tag_651)\n            /* \"src/ReservoirPair.sol\":8509:8845  function _safeTransfer(address aToken, address aTo, uint256 aValue) internal returns (bool) {... */\n        tag_18:\n          swap2\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mload(0x40)\n            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */\n          swap1\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */\n          0x20\n          dup4\n          add\n          swap4\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0xa9059cbb00000000000000000000000000000000000000000000000000000000\n            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */\n          dup6\n          mstore\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */\n          0x24\n          dup4\n          add\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mstore\n            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */\n          0x44\n          dup3\n          add\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mstore\n            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */\n          0x44\n            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */\n          dup2\n          mstore\n          tag_658\n          dup2\n          tag_2\n          jump\t// in\n        tag_658:\n          0x00\n            /* \"src/ReservoirPair.sol\":8706:8764  aToken.call(abi.encodeWithSelector(SELECTOR, aTo, aValue)) */\n          swap3\n          dup4\n          swap3\n          dup4\n          dup1\n          swap4\n          mload\n          swap3\n          gas\n          call\n          swap1\n            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */\n          jumpi(tag_659, iszero(returndatasize))\n          returndatasize\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap1\n          0xffffffffffffffff\n          dup3\n          gt\n          tag_622\n          jumpi\n          mload(0x40)\n          swap2\n          tag_663\n            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */\n          0x20\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n          0x1f\n          dup5\n          add\n          and\n          add\n          dup5\n          tag_5\n          jump\t// in\n        tag_663:\n          dup3\n          mstore\n            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */\n          returndatasize\n          dup2\n            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */\n          0x20\n            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */\n          dup5\n          add\n          returndatacopy\n        tag_664:\n            /* \"src/ReservoirPair.sol\":8781:8838  success && (data.length == 0 || abi.decode(data, (bool))) */\n          dup3\n          tag_665\n          jumpi\n            /* \"src/ReservoirPair.sol\":8774:8838  return success && (data.length == 0 || abi.decode(data, (bool))) */\n          pop\n          pop\n            /* \"src/ReservoirPair.sol\":8509:8845  function _safeTransfer(address aToken, address aTo, uint256 aValue) internal returns (bool) {... */\n          swap1\n          jump\t// out\n            /* \"src/ReservoirPair.sol\":8781:8838  success && (data.length == 0 || abi.decode(data, (bool))) */\n        tag_665:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap1\n          dup1\n          swap3\n          pop\n          mload\n            /* \"src/ReservoirPair.sol\":8793:8809  data.length == 0 */\n          swap2\n          dup3\n          iszero\n            /* \"src/ReservoirPair.sol\":8793:8837  data.length == 0 || abi.decode(data, (bool)) */\n          swap3\n          dup4\n          iszero\n          tag_667\n          jumpi\n            /* \"src/ReservoirPair.sol\":8781:8838  success && (data.length == 0 || abi.decode(data, (bool))) */\n        tag_668:\n          pop\n          pop\n          pop\n            /* \"src/ReservoirPair.sol\":8509:8845  function _safeTransfer(address aToken, address aTo, uint256 aValue) internal returns (bool) {... */\n          swap1\n          jump\t// out\n            /* \"src/ReservoirPair.sol\":8793:8837  data.length == 0 || abi.decode(data, (bool)) */\n        tag_667:\n            /* \"src/ReservoirPair.sol\":8813:8837  abi.decode(data, (bool)) */\n          dup2\n          swap3\n          swap4\n          pop\n          swap1\n            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */\n          0x20\n            /* \"src/ReservoirPair.sol\":8813:8837  abi.decode(data, (bool)) */\n          swap2\n          dup2\n          add\n            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */\n          sub\n          slt\n          tag_164\n          jumpi\n            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */\n          0x20\n            /* \"src/ReservoirPair.sol\":8813:8837  abi.decode(data, (bool)) */\n          add\n            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */\n          mload\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap1\n          dup2\n          iszero\n          iszero\n          dup3\n          sub\n          tag_155\n          jumpi\n            /* \"src/ReservoirPair.sol\":8793:8837  data.length == 0 || abi.decode(data, (bool)) */\n          pop\n          codesize\n          dup1\n          dup1\n          jump(tag_668)\n            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */\n        tag_659:\n          0x60\n          swap1\n          jump(tag_664)\n            /* \"src/ReservoirPair.sol\":8981:9714  function _checkedTransfer(ERC20 aToken, address aDestination, uint256 aAmount, uint256 aReserve0, uint256 aReserve1)... */\n        tag_20:\n          swap4\n          swap1\n          swap2\n          swap3\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup1\n          swap6\n          and\n            /* \"src/ReservoirPair.sol\":9134:9187  _safeTransfer(address(aToken), aDestination, aAmount) */\n          swap2\n          tag_673\n          dup6\n          dup6\n          dup6\n          tag_18\n          jump\t// in\n        tag_673:\n            /* \"src/ReservoirPair.sol\":9133:9187  !_safeTransfer(address(aToken), aDestination, aAmount) */\n          iszero\n            /* \"src/ReservoirPair.sol\":9129:9708  if (!_safeTransfer(address(aToken), aDestination, aAmount)) {... */\n          tag_674\n          jumpi\n            /* \"src/ReservoirPair.sol\":8981:9714  function _checkedTransfer(ERC20 aToken, address aDestination, uint256 aAmount, uint256 aReserve0, uint256 aReserve1)... */\n        tag_675:\n          pop\n          pop\n          pop\n          pop\n          pop\n          pop\n          jump\t// out\n            /* \"src/ReservoirPair.sol\":9129:9708  if (!_safeTransfer(address(aToken), aDestination, aAmount)) {... */\n        tag_674:\n            /* \"src/ReservoirPair.sol\":9239:9245  token0 */\n          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup7\n          and\n            /* \"src/ReservoirPair.sol\":9229:9245  aToken == token0 */\n          dup4\n          eq\n          swap2\n            /* \"src/ReservoirPair.sol\":9229:9277  aToken == token0 ? token0Managed : token1Managed */\n          dup3\n          iszero\n          tag_676\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0xffffffffffffffffffffffffff\n          dup1\n            /* \"src/ReservoirPair.sol\":9248:9261  token0Managed */\n          0x0c\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n          and\n            /* \"src/ReservoirPair.sol\":9229:9277  aToken == token0 ? token0Managed : token1Managed */\n        tag_678:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          and\n          swap2\n            /* \"src/ReservoirPair.sol\":9312:9352  aToken == token0 ? aReserve0 : aReserve1 */\n          dup4\n          iszero\n          tag_679\n          jumpi\n          pop\n          swap6\n        tag_681:\n            /* \"src/ReservoirPair.sol\":9370:9398  reserveOut - tokenOutManaged */\n          dup6\n          tag_682\n          dup4\n          dup10\n          tag_10\n          jump\t// in\n        tag_682:\n            /* \"src/ReservoirPair.sol\":9370:9408  reserveOut - tokenOutManaged < aAmount */\n          lt\n          iszero\n          tag_694\n          jumpi\n            /* \"src/ReservoirPair.sol\":9471:9511  aAmount - (reserveOut - tokenOutManaged) */\n          tag_685\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap2\n            /* \"src/ReservoirPair.sol\":9482:9510  reserveOut - tokenOutManaged */\n          tag_686\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap2\n            /* \"src/ReservoirPair.sol\":9428:9440  assetManager */\n          0x0b\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n          and\n            /* \"src/ReservoirPair.sol\":9482:9510  reserveOut - tokenOutManaged */\n          swap8\n          tag_10\n          jump\t// in\n        tag_686:\n            /* \"src/ReservoirPair.sol\":9471:9511  aAmount - (reserveOut - tokenOutManaged) */\n          dup6\n          tag_10\n          jump\t// in\n        tag_685:\n            /* \"src/ReservoirPair.sol\":9428:9512  assetManager.returnAsset(aToken == token0, aAmount - (reserveOut - tokenOutManaged)) */\n          dup6\n          extcodesize\n          iszero\n          tag_607\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0x44\n          0x00\n          swap3\n          dup4\n          mload(0x40)\n            /* \"src/ReservoirPair.sol\":9428:9512  assetManager.returnAsset(aToken == token0, aAmount - (reserveOut - tokenOutManaged)) */\n          swap9\n          dup10\n          swap5\n          dup6\n          swap4\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0x1566d96d00000000000000000000000000000000000000000000000000000000\n            /* \"src/ReservoirPair.sol\":9428:9512  assetManager.returnAsset(aToken == token0, aAmount - (reserveOut - tokenOutManaged)) */\n          dup6\n          mstore\n          0x04\n          dup6\n          add\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mstore\n          0x24\n          dup5\n          add\n          mstore\n            /* \"src/ReservoirPair.sol\":9428:9512  assetManager.returnAsset(aToken == token0, aAmount - (reserveOut - tokenOutManaged)) */\n          gas\n          call\n          swap4\n          dup5\n          iszero\n          tag_689\n          jumpi\n            /* \"src/ReservoirPair.sol\":9538:9591  _safeTransfer(address(aToken), aDestination, aAmount) */\n          tag_691\n            /* \"src/ReservoirPair.sol\":9428:9512  assetManager.returnAsset(aToken == token0, aAmount - (reserveOut - tokenOutManaged)) */\n          swap5\n          tag_692\n          jumpi\n            /* \"src/ReservoirPair.sol\":9366:9698  if (reserveOut - tokenOutManaged < aAmount) {... */\n        tag_693:\n            /* \"src/ReservoirPair.sol\":9538:9591  _safeTransfer(address(aToken), aDestination, aAmount) */\n          pop\n          tag_18\n          jump\t// in\n        tag_691:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          iszero\n          tag_694\n          jumpi\n            /* \"src/ReservoirPair.sol\":9129:9708  if (!_safeTransfer(address(aToken), aDestination, aAmount)) {... */\n          codesize\n          dup1\n          dup1\n          dup1\n          dup1\n          dup1\n          jump(tag_675)\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n        tag_694:\n          mload(0x40)\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          0x20\n            /* \"src/ReservoirPair.sol\":9428:9512  assetManager.returnAsset(aToken == token0, aAmount - (reserveOut - tokenOutManaged)) */\n          0x04\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup3\n          add\n          mstore\n          0x13\n          0x24\n          dup3\n          add\n          mstore\n          0x52503a205452414e534645525f4641494c454400000000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          0x64\n          swap1\n          revert\n            /* \"src/ReservoirPair.sol\":9428:9512  assetManager.returnAsset(aToken == token0, aAmount - (reserveOut - tokenOutManaged)) */\n        tag_692:\n          tag_697\n          swap1\n          tag_3\n          jump\t// in\n        tag_697:\n          codesize\n          jump(tag_693)\n        tag_689:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mload(0x40)\n          returndatasize\n          0x00\n          dup3\n          returndatacopy\n          returndatasize\n          swap1\n          revert\n            /* \"src/ReservoirPair.sol\":9312:9352  aToken == token0 ? aReserve0 : aReserve1 */\n        tag_679:\n          swap1\n          pop\n          swap6\n          jump(tag_681)\n            /* \"src/ReservoirPair.sol\":9229:9277  aToken == token0 ? token0Managed : token1Managed */\n        tag_676:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0xffffffffffffffffffffffffff\n          dup1\n            /* \"src/ReservoirPair.sol\":9264:9277  token1Managed */\n          0x0c\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n          0x68\n          shr\n          and\n            /* \"src/ReservoirPair.sol\":9229:9277  aToken == token0 ? token0Managed : token1Managed */\n          jump(tag_678)\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n        tag_21:\n          iszero\n          tag_699\n          jumpi\n          jump\t// out\n        tag_699:\n          0x64\n          mload(0x40)\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          0x20\n          0x04\n          dup3\n          add\n          mstore\n          0x0c\n          0x24\n          dup3\n          add\n          mstore\n          0x52503a204f564552464c4f570000000000000000000000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n            /* \"src/ReservoirPair.sol\":9804:10769  function _updateAndUnlock(... */\n        tag_22:\n          swap4\n          swap3\n          swap2\n          swap1\n          swap3\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0xffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":10007:10037  aBalance0 <= type(uint104).max */\n          dup6\n          gt\n          iszero\n            /* \"src/ReservoirPair.sol\":10007:10071  aBalance0 <= type(uint104).max && aBalance1 <= type(uint104).max */\n          dup1\n          tag_701\n          jumpi\n            /* \"src/ReservoirPair.sol\":9804:10769  function _updateAndUnlock(... */\n        tag_702:\n            /* \"src/ReservoirPair.sol\":9999:10088  require(aBalance0 <= type(uint104).max && aBalance1 <= type(uint104).max, \"RP: OVERFLOW\") */\n          tag_703\n          swap1\n          tag_21\n          jump\t// in\n        tag_703:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0xffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":10106:10136  aReserve0 <= type(uint104).max */\n          dup3\n          gt\n          iszero\n            /* \"src/ReservoirPair.sol\":10106:10170  aReserve0 <= type(uint104).max && aReserve1 <= type(uint104).max */\n          dup1\n          tag_704\n          jumpi\n            /* \"src/ReservoirPair.sol\":9804:10769  function _updateAndUnlock(... */\n        tag_705:\n            /* \"src/ReservoirPair.sol\":10098:10187  require(aReserve0 <= type(uint104).max && aReserve1 <= type(uint104).max, \"RP: OVERFLOW\") */\n          tag_706\n          swap1\n          tag_21\n          jump\t// in\n        tag_706:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0xffffffff\n            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */\n          dup1\n          dup3\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0x7fffffff\n            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */\n          timestamp\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          and\n          sub\n          and\n            /* \"src/ReservoirPair.sol\":10407:10423  lTimeElapsed > 0 */\n          iszero\n          iszero\n            /* \"src/ReservoirPair.sol\":10407:10441  lTimeElapsed > 0 && aReserve0 != 0 */\n          dup1\n          tag_707\n          jumpi\n            /* \"src/ReservoirPair.sol\":9804:10769  function _updateAndUnlock(... */\n        tag_708:\n            /* \"src/ReservoirPair.sol\":10407:10459  lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0 */\n          dup1\n          tag_709\n          jumpi\n            /* \"src/ReservoirPair.sol\":9804:10769  function _updateAndUnlock(... */\n        tag_710:\n            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */\n          tag_711\n          jumpi\n            /* \"src/ReservoirPair.sol\":9804:10769  function _updateAndUnlock(... */\n        tag_712:\n          pop\n          pop\n            /* \"src/ReservoirPair.sol\":10566:10572  _slot0 */\n          0x06\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup1\n          sload\n          0xffff000000000000000000000000000000000000000000000000000000000000\n          and\n          0xffffffffffffffffffffffffff\n          swap6\n          dup7\n          and\n          swap1\n          dup2\n          or\n          0x68\n          dup7\n          swap1\n          shl\n          0xffffffffffffffffffffffffff00000000000000000000000000\n          and\n          or\n          0x7fffffff0000000000000000000000000000000000000000000000000000\n            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */\n          timestamp\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0xd0\n          shl\n          and\n          or\n          swap1\n          swap2\n          sstore\n            /* \"src/ReservoirPair.sol\":10718:10762  Sync(uint104(aBalance0), uint104(aBalance1)) */\n          0xff388a12130349259b5ae24af90448f511c2340be808f2c371230fc2da175c44\n          swap5\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0x40\n          swap5\n          swap2\n          swap4\n          pop\n          swap2\n          pop\n          dup4\n          mload\n          swap3\n          dup4\n          mstore\n          and\n          0x20\n          dup3\n          add\n          mstore\n            /* \"src/ReservoirPair.sol\":10718:10762  Sync(uint104(aBalance0), uint104(aBalance1)) */\n          log1\n            /* \"src/ReservoirPair.sol\":9804:10769  function _updateAndUnlock(... */\n          jump\t// out\n            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */\n        tag_711:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap1\n          swap2\n          swap4\n          swap3\n          swap5\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":11384:11390  _slot0 */\n          0x06\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n          swap2\n          dup3\n          0xf0\n          shr\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":11370:11397  _observations[_slot0.index] */\n          swap3\n          tag_714\n          dup5\n          tag_36\n          jump\t// in\n        tag_714:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          pop\n          swap2\n          0xffffffffffffffffffffffffffffffff\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":11522:11547  token0PrecisionMultiplier */\n          swap3\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":11549:11586  aReserve1 * token1PrecisionMultiplier */\n          tag_715\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":11510:11547  aReserve0 * token0PrecisionMultiplier */\n          tag_716\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":11522:11547  token0PrecisionMultiplier */\n          dup6\n          immutable(\"0x372e991e4284f7d12d6b2461cce9899511b05ac053845de253542adb96f2dca0\")\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          and\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":11510:11547  aReserve0 * token0PrecisionMultiplier */\n          dup12\n          tag_37\n          jump\t// in\n        tag_716:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":11561:11586  token1PrecisionMultiplier */\n          swap5\n          immutable(\"0xc4ba931b733b92a51f51c0955dd7716c7a38f3de911d23a5d0fbd5d23c0fbe8c\")\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          and\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":11549:11586  aReserve1 * token1PrecisionMultiplier */\n          dup12\n          tag_37\n          jump\t// in\n        tag_715:\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":655:659  1e18 */\n          swap4\n          0x0de0b6b3a7640000\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":2274:2762  assembly {... */\n          0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21\n          dup7\n          gt\n          dup2\n          mul\n          iszero\n          dup3\n          mul\n          iszero\n          tag_607\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":12514:12541  _observations[_slot0.index] */\n          tag_719\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":2274:2762  assembly {... */\n          swap6\n          mul\n          swap1\n          dup1\n          dup3\n          div\n          swap2\n          mod\n          iszero\n          iszero\n          add\n            /* \"src/libraries/ConstantProductOracleMath.sol\":1620:1657  LogCompression.toLowResLog(spotPrice) */\n          swap9\n          tag_720\n          dup11\n          tag_52\n          jump\t// in\n        tag_720:\n          0x80\n          mstore\n            /* \"src/libraries/ConstantProductOracleMath.sol\":2163:2196  LogCompression.toLowResLog(sqrtK) */\n          tag_721\n            /* \"src/libraries/ConstantProductOracleMath.sol\":2090:2133  FixedPointMathLib.sqrt(reserve0 * reserve1) */\n          tag_722\n            /* \"src/libraries/ConstantProductOracleMath.sol\":2113:2132  reserve0 * reserve1 */\n          tag_479\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":11834:11898  _calcClampedPrice(lCurrRawPrice, prevClampedPrice, aTimeElapsed) */\n          tag_724\n            /* \"src/libraries/ConstantProductOracleMath.sol\":1687:1703  type(int112).min */\n          0xffffffffffffffffffffffffffffffffffff8000000000000000000000000000\n            /* \"src/libraries/ConstantProductOracleMath.sol\":1674:1703  rawResult >= type(int112).min */\n          swap14\n          dup15\n          mload(0x80)\n          slt\n          iszero\n            /* \"src/libraries/ConstantProductOracleMath.sol\":1674:1736  rawResult >= type(int112).min && rawResult <= type(int112).max */\n          dup1\n          tag_725\n          jumpi\n            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */\n        tag_726:\n            /* \"src/libraries/ConstantProductOracleMath.sol\":1667:1737  assert(rawResult >= type(int112).min && rawResult <= type(int112).max) */\n          tag_727\n          swap1\n          tag_47\n          jump\t// in\n        tag_727:\n            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */\n          dup8\n          dup14\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0x7fffffff\n            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */\n          timestamp\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          and\n          sub\n          and\n          swap1\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":11867:11883  prevClampedPrice */\n          0x01000e\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":11834:11898  _calcClampedPrice(lCurrRawPrice, prevClampedPrice, aTimeElapsed) */\n          swap1\n          tag_48\n          jump\t// in\n        tag_724:\n            /* \"src/libraries/ConstantProductOracleMath.sol\":2113:2132  reserve0 * reserve1 */\n          swap15\n          swap1\n          swap5\n          tag_37\n          jump\t// in\n            /* \"src/libraries/ConstantProductOracleMath.sol\":2090:2133  FixedPointMathLib.sqrt(reserve0 * reserve1) */\n        tag_722:\n            /* \"src/libraries/ConstantProductOracleMath.sol\":2163:2196  LogCompression.toLowResLog(sqrtK) */\n          tag_52\n          jump\t// in\n        tag_721:\n            /* \"src/libraries/ConstantProductOracleMath.sol\":2213:2242  rawResult >= type(int112).min */\n          swap10\n          dup11\n          slt\n          iszero\n            /* \"src/libraries/ConstantProductOracleMath.sol\":2213:2275  rawResult >= type(int112).min && rawResult <= type(int112).max */\n          dup1\n          tag_728\n          jumpi\n            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */\n        tag_729:\n            /* \"src/libraries/ConstantProductOracleMath.sol\":2206:2276  assert(rawResult >= type(int112).min && rawResult <= type(int112).max) */\n          tag_730\n          swap1\n          tag_47\n          jump\t// in\n        tag_730:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":11867:11883  prevClampedPrice */\n          0x01000e\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sstore\n          sload\n            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */\n          swap2\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n          0xffff000000000000000000000000000000000000000000000000000000000000\n          0x01\n            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */\n          dup5\n          dup11\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0x7fffffff\n            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */\n          timestamp\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          and\n          sub\n          and\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":11384:11390  _slot0 */\n          0x06\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          signextend\n          swap9\n          add\n          0xf0\n          shl\n          and\n          swap2\n          and\n          or\n          swap2\n          dup3\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":11384:11390  _slot0 */\n          0x06\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sstore\n          mload(0x40)\n          swap6\n          tag_731\n          dup8\n          tag_2\n          jump\t// in\n        tag_731:\n            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */\n          dup3\n          dup9\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0x7fffffff\n            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */\n          timestamp\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          and\n          sub\n          and\n          0x0d\n          signextend\n            /* \"src/libraries/ConstantProductOracleMath.sol\":1762:1779  int112(rawResult) */\n          mload(0x80)\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0x0d\n          signextend\n          mul\n          0x0d\n          signextend\n          dup3\n          0x0d\n          signextend\n          add\n          0x0d\n          signextend\n          dup8\n          mstore\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":12544:12618  Observation(logAccRawPrice, logAccClampedPrice, logAccLiq, aTimestampLast) */\n          dup1\n          0x20\n          dup9\n          add\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap12\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":11384:11390  _slot0 */\n          0x06\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          signextend\n          mul\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":11384:11390  _slot0 */\n          0x06\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          signextend\n          dup3\n          0x70\n          shr\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":11384:11390  _slot0 */\n          0x06\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          signextend\n          add\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":11384:11390  _slot0 */\n          0x06\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          signextend\n          dup12\n          mstore\n          0x40\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":12544:12618  Observation(logAccRawPrice, logAccClampedPrice, logAccLiq, aTimestampLast) */\n          dup8\n          add\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap10\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":11384:11390  _slot0 */\n          0x06\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          signextend\n          mul\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":11384:11390  _slot0 */\n          0x06\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          signextend\n          swap1\n          0xa8\n          shr\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":11384:11390  _slot0 */\n          0x06\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          signextend\n          add\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":11384:11390  _slot0 */\n          0x06\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          signextend\n          dup9\n          mstore\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":12544:12618  Observation(logAccRawPrice, logAccClampedPrice, logAccLiq, aTimestampLast) */\n          0x60\n          dup6\n          add\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap6\n          and\n          dup6\n          mstore\n          0xf0\n          shr\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":12514:12541  _observations[_slot0.index] */\n          tag_36\n          jump\t// in\n        tag_719:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          tag_732\n          jumpi\n          swap2\n          mload\n          swap6\n          mload\n          swap5\n          mload\n          swap3\n          mload\n          0xffffffff00000000000000000000000000000000000000000000000000000000\n          0xe0\n          swap2\n          swap1\n          swap2\n          shl\n          and\n          0xa8\n          swap4\n          swap1\n          swap4\n          shl\n          0xffffffffffffff000000000000000000000000000000000000000000\n          and\n          0xffffffffffffffffffffffffffff\n          swap1\n          swap7\n          and\n          0x70\n          swap6\n          swap1\n          swap6\n          shl\n          0xffffffffffffff0000000000000000000000000000\n          and\n          swap5\n          swap1\n          swap5\n          or\n          swap5\n          swap1\n          swap5\n          or\n          or\n          swap1\n          swap3\n          sstore\n          swap1\n          dup1\n          0xffffffffffffffffffffffffff\n          dup1\n            /* \"src/ReservoirPair.sol\":10718:10762  Sync(uint104(aBalance0), uint104(aBalance1)) */\n          0xff388a12130349259b5ae24af90448f511c2340be808f2c371230fc2da175c44\n            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */\n          jump(tag_712)\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n        tag_732:\n          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n          mstore(0x04, 0x00)\n          revert(0x00, 0x24)\n            /* \"src/libraries/ConstantProductOracleMath.sol\":2213:2275  rawResult >= type(int112).min && rawResult <= type(int112).max */\n        tag_728:\n          pop\n            /* \"src/libraries/ConstantProductOracleMath.sol\":2259:2275  type(int112).max */\n          0x7fffffffffffffffffffffffffff\n            /* \"src/libraries/ConstantProductOracleMath.sol\":2246:2275  rawResult <= type(int112).max */\n          dup11\n          sgt\n          iszero\n            /* \"src/libraries/ConstantProductOracleMath.sol\":2213:2275  rawResult >= type(int112).min && rawResult <= type(int112).max */\n          jump(tag_729)\n            /* \"src/libraries/ConstantProductOracleMath.sol\":1674:1736  rawResult >= type(int112).min && rawResult <= type(int112).max */\n        tag_725:\n          pop\n            /* \"src/libraries/ConstantProductOracleMath.sol\":1707:1736  rawResult <= type(int112).max */\n          mload(0x80)\n            /* \"src/libraries/ConstantProductOracleMath.sol\":1720:1736  type(int112).max */\n          0x7fffffffffffffffffffffffffff\n          slt\n            /* \"src/libraries/ConstantProductOracleMath.sol\":1707:1736  rawResult <= type(int112).max */\n          iszero\n            /* \"src/libraries/ConstantProductOracleMath.sol\":1674:1736  rawResult >= type(int112).min && rawResult <= type(int112).max */\n          jump(tag_726)\n            /* \"src/ReservoirPair.sol\":10407:10459  lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0 */\n        tag_709:\n            /* \"src/ReservoirPair.sol\":10445:10459  aReserve1 != 0 */\n          pop\n          dup4\n          iszero\n          iszero\n            /* \"src/ReservoirPair.sol\":10407:10459  lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0 */\n          jump(tag_710)\n            /* \"src/ReservoirPair.sol\":10407:10441  lTimeElapsed > 0 && aReserve0 != 0 */\n        tag_707:\n            /* \"src/ReservoirPair.sol\":10427:10441  aReserve0 != 0 */\n          pop\n          dup3\n          iszero\n          iszero\n            /* \"src/ReservoirPair.sol\":10407:10441  lTimeElapsed > 0 && aReserve0 != 0 */\n          jump(tag_708)\n            /* \"src/ReservoirPair.sol\":10106:10170  aReserve0 <= type(uint104).max && aReserve1 <= type(uint104).max */\n        tag_704:\n          pop\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0xffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":10140:10170  aReserve1 <= type(uint104).max */\n          dup4\n          gt\n          iszero\n            /* \"src/ReservoirPair.sol\":10106:10170  aReserve0 <= type(uint104).max && aReserve1 <= type(uint104).max */\n          jump(tag_705)\n            /* \"src/ReservoirPair.sol\":10007:10071  aBalance0 <= type(uint104).max && aBalance1 <= type(uint104).max */\n        tag_701:\n          pop\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0xffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":10041:10071  aBalance1 <= type(uint104).max */\n          dup5\n          gt\n          iszero\n            /* \"src/ReservoirPair.sol\":10007:10071  aBalance0 <= type(uint104).max && aBalance1 <= type(uint104).max */\n          jump(tag_702)\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n        tag_23:\n          swap2\n          swap1\n          dup3\n          add\n          dup1\n          swap3\n          gt\n          tag_611\n          jumpi\n          jump\t// out\n            /* \"src/ReservoirPair.sol\":12869:13005  function _totalToken0() internal view returns (uint256) {... */\n        tag_24:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mload(0x40)\n          0x70a0823100000000000000000000000000000000000000000000000000000000\n            /* \"src/ReservoirPair.sol\":12942:12973  token0.balanceOf(address(this)) */\n          dup2\n          mstore\n            /* \"src/ReservoirPair.sol\":12967:12971  this */\n          address\n            /* \"src/ReservoirPair.sol\":12942:12973  token0.balanceOf(address(this)) */\n          0x04\n          dup3\n          add\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mstore\n            /* \"src/ReservoirPair.sol\":12942:12973  token0.balanceOf(address(this)) */\n          0x20\n            /* \"src/ReservoirPair.sol\":12942:12948  token0 */\n          dup2\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0x24\n            /* \"src/ReservoirPair.sol\":12942:12948  token0 */\n          dup2\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":12942:12948  token0 */\n          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":12942:12973  token0.balanceOf(address(this)) */\n          gas\n          staticcall\n          dup1\n          iszero\n          tag_689\n          jumpi\n          0x00\n          swap1\n          tag_738\n          jumpi\n            /* \"src/ReservoirPair.sol\":12869:13005  function _totalToken0() internal view returns (uint256) {... */\n        tag_739:\n            /* \"src/ReservoirPair.sol\":12942:12998  token0.balanceOf(address(this)) + uint256(token0Managed) */\n          tag_740\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap2\n          pop\n          0xffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":12984:12997  token0Managed */\n          0x0c\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n          and\n            /* \"src/ReservoirPair.sol\":12942:12998  token0.balanceOf(address(this)) + uint256(token0Managed) */\n          swap1\n          tag_23\n          jump\t// in\n        tag_740:\n            /* \"src/ReservoirPair.sol\":12869:13005  function _totalToken0() internal view returns (uint256) {... */\n          swap1\n          jump\t// out\n            /* \"src/ReservoirPair.sol\":12942:12973  token0.balanceOf(address(this)) */\n        tag_738:\n          0x20\n          dup3\n          returndatasize\n          dup3\n          gt\n          tag_741\n          jumpi\n        tag_742:\n          dup2\n          tag_743\n          0x20\n          swap4\n          dup4\n          tag_5\n          jump\t// in\n        tag_743:\n          dup2\n          add\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sub\n          slt\n          tag_155\n          jumpi\n          pop\n            /* \"src/ReservoirPair.sol\":12942:12998  token0.balanceOf(address(this)) + uint256(token0Managed) */\n          tag_740\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap1\n          mload\n            /* \"src/ReservoirPair.sol\":12942:12973  token0.balanceOf(address(this)) */\n          jump(tag_739)\n        tag_741:\n          returndatasize\n          swap2\n          pop\n          jump(tag_742)\n            /* \"src/ReservoirPair.sol\":13011:13147  function _totalToken1() internal view returns (uint256) {... */\n        tag_25:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mload(0x40)\n          0x70a0823100000000000000000000000000000000000000000000000000000000\n            /* \"src/ReservoirPair.sol\":13084:13115  token1.balanceOf(address(this)) */\n          dup2\n          mstore\n            /* \"src/ReservoirPair.sol\":13109:13113  this */\n          address\n            /* \"src/ReservoirPair.sol\":13084:13115  token1.balanceOf(address(this)) */\n          0x04\n          dup3\n          add\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mstore\n            /* \"src/ReservoirPair.sol\":13084:13115  token1.balanceOf(address(this)) */\n          0x20\n            /* \"src/ReservoirPair.sol\":13084:13090  token1 */\n          dup2\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0x24\n            /* \"src/ReservoirPair.sol\":13084:13090  token1 */\n          dup2\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":13084:13090  token1 */\n          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":13084:13115  token1.balanceOf(address(this)) */\n          gas\n          staticcall\n          dup1\n          iszero\n          tag_689\n          jumpi\n          0x00\n          swap1\n          tag_748\n          jumpi\n            /* \"src/ReservoirPair.sol\":13011:13147  function _totalToken1() internal view returns (uint256) {... */\n        tag_749:\n            /* \"src/ReservoirPair.sol\":13084:13140  token1.balanceOf(address(this)) + uint256(token1Managed) */\n          tag_740\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap2\n          pop\n          0xffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":13126:13139  token1Managed */\n          0x0c\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n          0x68\n          shr\n          and\n            /* \"src/ReservoirPair.sol\":13084:13140  token1.balanceOf(address(this)) + uint256(token1Managed) */\n          swap1\n          tag_23\n          jump\t// in\n            /* \"src/ReservoirPair.sol\":13084:13115  token1.balanceOf(address(this)) */\n        tag_748:\n          0x20\n          dup3\n          returndatasize\n          dup3\n          gt\n          tag_751\n          jumpi\n        tag_752:\n          dup2\n          tag_753\n          0x20\n          swap4\n          dup4\n          tag_5\n          jump\t// in\n        tag_753:\n          dup2\n          add\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sub\n          slt\n          tag_155\n          jumpi\n          pop\n            /* \"src/ReservoirPair.sol\":13084:13140  token1.balanceOf(address(this)) + uint256(token1Managed) */\n          tag_740\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap1\n          mload\n            /* \"src/ReservoirPair.sol\":13084:13115  token1.balanceOf(address(this)) */\n          jump(tag_749)\n        tag_751:\n          returndatasize\n          swap2\n          pop\n          jump(tag_752)\n            /* \"src/ReservoirPair.sol\":13916:14584  function _syncManaged(uint256 aReserve0, uint256 aReserve1)... */\n        tag_27:\n          swap1\n          swap2\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n          swap2\n          dup3\n            /* \"src/ReservoirPair.sol\":14074:14086  assetManager */\n          0x0b\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n          and\n            /* \"src/ReservoirPair.sol\":14066:14101  address(assetManager) == address(0) */\n          swap3\n          dup4\n          iszero\n            /* \"src/ReservoirPair.sol\":14062:14157  if (address(assetManager) == address(0)) {... */\n          tag_756\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mload(0x40)\n          0xd4fac45d00000000000000000000000000000000000000000000000000000000\n            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */\n          dup1\n          dup3\n          mstore\n            /* \"src/ReservoirPair.sol\":14216:14220  this */\n          address\n            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */\n          0x04\n          dup4\n          add\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mstore\n            /* \"src/ReservoirPair.sol\":14222:14228  token0 */\n          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup2\n          and\n          0x24\n          dup5\n          add\n          mstore\n          swap2\n          swap6\n            /* \"src/ReservoirPair.sol\":14222:14228  token0 */\n          swap2\n          swap4\n            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */\n          0x20\n          swap4\n            /* \"src/ReservoirPair.sol\":14222:14228  token0 */\n          swap1\n          swap3\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap1\n            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */\n          dup5\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup9\n          dup1\n          0x44\n          dup2\n          add\n            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */\n          sub\n          dup2\n          0x00\n          dup1\n          swap7\n          gas\n          call\n          swap8\n          dup9\n          iszero\n          tag_759\n          jumpi\n          dup3\n          swap9\n          tag_761\n          jumpi\n            /* \"src/ReservoirPair.sol\":13916:14584  function _syncManaged(uint256 aReserve0, uint256 aReserve1)... */\n        tag_762:\n          pop\n            /* \"src/ReservoirPair.sol\":14074:14086  assetManager */\n          0x0b\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n          mload(0x40)\n            /* \"src/ReservoirPair.sol\":14264:14301  assetManager.getBalance(this, token1) */\n          swap4\n          dup5\n          mstore\n            /* \"src/ReservoirPair.sol\":14216:14220  this */\n          address\n            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */\n          0x04\n            /* \"src/ReservoirPair.sol\":14264:14301  assetManager.getBalance(this, token1) */\n          dup6\n          add\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mstore\n            /* \"src/ReservoirPair.sol\":14294:14300  token1 */\n          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup2\n          and\n          0x24\n          dup7\n          add\n          mstore\n            /* \"src/ReservoirPair.sol\":14294:14300  token1 */\n          swap4\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap3\n          swap2\n            /* \"src/ReservoirPair.sol\":14294:14300  token1 */\n          dup7\n          swap2\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup5\n          swap2\n          0x44\n          swap2\n          dup4\n          swap2\n          dup7\n          swap2\n          and\n            /* \"src/ReservoirPair.sol\":14264:14301  assetManager.getBalance(this, token1) */\n          gas\n          call\n          swap5\n          dup6\n          iszero\n          tag_764\n          jumpi\n          dup2\n          swap6\n          tag_766\n          jumpi\n            /* \"src/ReservoirPair.sol\":13916:14584  function _syncManaged(uint256 aReserve0, uint256 aReserve1)... */\n        tag_767:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          pop\n          pop\n          pop\n            /* \"src/ReservoirPair.sol\":14551:14577  lToken1Managed.toUint104() */\n          tag_768\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0xffffffffffff0000000000000000000000000000000000000000000000000000\n          swap3\n            /* \"src/ReservoirPair.sol\":14499:14525  lToken0Managed.toUint104() */\n          tag_769\n            /* \"src/ReservoirPair.sol\":14409:14472  _handleReport(token1, aReserve1, token1Managed, lToken1Managed) */\n          tag_770\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup7\n          0xffffffffffffffffffffffffff00000000000000000000000000\n          swap6\n            /* \"src/ReservoirPair.sol\":14324:14387  _handleReport(token0, aReserve0, token0Managed, lToken0Managed) */\n          tag_771\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup13\n            /* \"src/ReservoirPair.sol\":14357:14370  token0Managed */\n          0x0c\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n          swap12\n          dup13\n          swap8\n          0xffffffffffffffffffffffffff\n          dup1\n          swap10\n          and\n            /* \"src/ReservoirPair.sol\":14324:14387  _handleReport(token0, aReserve0, token0Managed, lToken0Managed) */\n          swap2\n          tag_30\n          jump\t// in\n        tag_771:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap13\n          dup6\n          dup12\n          0x68\n          shr\n          and\n            /* \"src/ReservoirPair.sol\":14409:14472  _handleReport(token1, aReserve1, token1Managed, lToken1Managed) */\n          swap2\n          tag_30\n          jump\t// in\n        tag_770:\n            /* \"src/ReservoirPair.sol\":14499:14525  lToken0Managed.toUint104() */\n          swap9\n          tag_28\n          jump\t// in\n        tag_769:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":14551:14577  lToken1Managed.toUint104() */\n          swap4\n          tag_28\n          jump\t// in\n        tag_768:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0x68\n          shl\n          and\n          swap3\n          and\n          or\n          or\n            /* \"src/ReservoirPair.sol\":14357:14370  token0Managed */\n          0x0c\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sstore\n            /* \"src/ReservoirPair.sol\":13916:14584  function _syncManaged(uint256 aReserve0, uint256 aReserve1)... */\n          jump\t// out\n            /* \"src/ReservoirPair.sol\":14264:14301  assetManager.getBalance(this, token1) */\n        tag_766:\n          swap1\n          swap2\n          dup1\n          swap4\n          swap6\n          pop\n          dup2\n          returndatasize\n          dup4\n          gt\n          tag_772\n          jumpi\n        tag_773:\n          tag_774\n          dup2\n          dup4\n          tag_5\n          jump\t// in\n        tag_774:\n          dup2\n          add\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sub\n          slt\n          tag_155\n          jumpi\n          pop\n          mload\n          swap2\n            /* \"src/ReservoirPair.sol\":14551:14577  lToken1Managed.toUint104() */\n          tag_768\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup3\n            /* \"src/ReservoirPair.sol\":14499:14525  lToken0Managed.toUint104() */\n          tag_769\n            /* \"src/ReservoirPair.sol\":14264:14301  assetManager.getBalance(this, token1) */\n          jump(tag_767)\n        tag_772:\n          pop\n          returndatasize\n          jump(tag_773)\n        tag_764:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          pop\n          mload(0x40)\n          swap1\n          returndatasize\n          swap1\n          dup3\n          returndatacopy\n          returndatasize\n          swap1\n          revert\n            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */\n        tag_761:\n          swap1\n          swap8\n          pop\n          dup5\n          dup2\n          dup2\n          returndatasize\n          dup4\n          gt\n          tag_777\n          jumpi\n        tag_778:\n          tag_779\n          dup2\n          dup4\n          tag_5\n          jump\t// in\n        tag_779:\n          dup2\n          add\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sub\n          slt\n          tag_164\n          jumpi\n          mload\n            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */\n          swap7\n          codesize\n          jump(tag_762)\n        tag_777:\n          pop\n          returndatasize\n          jump(tag_778)\n        tag_759:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mload(0x40)\n          returndatasize\n          dup5\n          dup3\n          returndatacopy\n          returndatasize\n          swap1\n          revert\n            /* \"src/ReservoirPair.sol\":14062:14157  if (address(assetManager) == address(0)) {... */\n        tag_756:\n          pop\n            /* \"src/ReservoirPair.sol\":14117:14146  return (aReserve0, aReserve1) */\n          swap3\n          swap2\n          pop\n          jump\t// out\n            /* \"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":10566:10758  function toUint104(uint256 value) internal pure returns (uint104) {... */\n        tag_28:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0xffffffffffffffffffffffffff\n            /* \"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":10650:10676  value <= type(uint104).max */\n          swap1\n          dup2\n          dup2\n          gt\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          tag_782\n          jumpi\n          and\n            /* \"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":10566:10758  function toUint104(uint256 value) internal pure returns (uint104) {... */\n          swap1\n          jump\t// out\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n        tag_782:\n          0x84\n          mload(0x40)\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          0x20\n          0x04\n          dup3\n          add\n          mstore\n          0x27\n          0x24\n          dup3\n          add\n          mstore\n          0x53616665436173743a2076616c756520646f65736e27742066697420696e2031\n          0x44\n          dup3\n          add\n          mstore\n          0x3034206269747300000000000000000000000000000000000000000000000000\n          0x64\n          dup3\n          add\n          mstore\n          revert\n            /* \"src/ReservoirPair.sol\":13153:13910  function _handleReport(ERC20 aToken, uint256 aReserve, uint256 aPrevBalance, uint256 aNewBalance)... */\n        tag_30:\n          swap2\n          swap1\n          swap3\n            /* \"src/ReservoirPair.sol\":13327:13353  aNewBalance > aPrevBalance */\n          dup2\n          dup2\n          gt\n            /* \"src/ReservoirPair.sol\":13323:13904  if (aNewBalance > aPrevBalance) {... */\n          0x00\n            /* \"src/ReservoirPair.sol\":13327:13353  aNewBalance > aPrevBalance */\n          eq\n          tag_784\n          jumpi\n            /* \"src/ReservoirPair.sol\":13416:13442  aNewBalance - aPrevBalance */\n          tag_786\n            /* \"src/ReservoirPair.sol\":13526:13544  aReserve + lProfit */\n          tag_740\n            /* \"src/ReservoirPair.sol\":13416:13442  aNewBalance - aPrevBalance */\n          swap5\n          swap3\n            /* \"src/ReservoirPair.sol\":13462:13493  ProfitReported(aToken, lProfit) */\n          0xd85f20827037d49bc45762fefff2ddfe9a1a5412ad3dfc1cdca78d2e52f4ba23\n            /* \"src/ReservoirPair.sol\":13416:13442  aNewBalance - aPrevBalance */\n          swap3\n          tag_10\n          jump\t// in\n        tag_786:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0x40\n          dup1\n          mload\n          0xffffffffffffffffffffffffffffffffffffffff\n          swap6\n          swap1\n          swap6\n          and\n          dup6\n          mstore\n          0x20\n          dup6\n          add\n          dup3\n          swap1\n          mstore\n          swap1\n          swap4\n            /* \"src/ReservoirPair.sol\":13462:13493  ProfitReported(aToken, lProfit) */\n          log1\n            /* \"src/ReservoirPair.sol\":13526:13544  aReserve + lProfit */\n          tag_23\n          jump\t// in\n            /* \"src/ReservoirPair.sol\":13323:13904  if (aNewBalance > aPrevBalance) {... */\n        tag_784:\n            /* \"src/ReservoirPair.sol\":13565:13591  aNewBalance < aPrevBalance */\n          swap1\n          dup1\n          dup3\n          lt\n          iszero\n          tag_668\n          jumpi\n            /* \"src/ReservoirPair.sol\":13650:13676  aPrevBalance - aNewBalance */\n          tag_792\n            /* \"src/ReservoirPair.sol\":13756:13772  aReserve - lLoss */\n          tag_740\n            /* \"src/ReservoirPair.sol\":13650:13676  aPrevBalance - aNewBalance */\n          swap5\n          swap3\n            /* \"src/ReservoirPair.sol\":13696:13723  LossReported(aToken, lLoss) */\n          0x3ffa9beb41b46c88b16758ef6c236ebd4d07cdfd4d22471030eb6b2d662482d9\n            /* \"src/ReservoirPair.sol\":13650:13676  aPrevBalance - aNewBalance */\n          swap3\n          tag_10\n          jump\t// in\n        tag_792:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0x40\n          dup1\n          mload\n          0xffffffffffffffffffffffffffffffffffffffff\n          swap6\n          swap1\n          swap6\n          and\n          dup6\n          mstore\n          0x20\n          dup6\n          add\n          dup3\n          swap1\n          mstore\n          swap1\n          swap4\n            /* \"src/ReservoirPair.sol\":13696:13723  LossReported(aToken, lLoss) */\n          log1\n            /* \"src/ReservoirPair.sol\":13756:13772  aReserve - lLoss */\n          tag_10\n          jump\t// in\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n        tag_31:\n          0x8000000000000000000000000000000000000000000000000000000000000000\n          dup2\n          eq\n          tag_611\n          jumpi\n          0x00\n          sub\n          swap1\n          jump\t// out\n        tag_32:\n          0xffffffffffffffffffffffffff\n          swap2\n          dup3\n          and\n          swap1\n          dup3\n          and\n          sub\n          swap2\n          swap1\n          dup3\n          gt\n          tag_611\n          jumpi\n          jump\t// out\n        tag_33:\n          swap2\n          swap1\n          swap2\n          0xffffffffffffffffffffffffff\n          dup1\n          dup1\n          swap5\n          and\n          swap2\n          and\n          add\n          swap2\n          dup3\n          gt\n          tag_611\n          jumpi\n          jump\t// out\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1328:2944  function safeTransferFrom(... */\n        tag_34:\n          swap1\n          0x00\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1532:2887  assembly {... */\n          0x64\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1328:2944  function safeTransferFrom(... */\n          swap3\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1532:2887  assembly {... */\n          0x20\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1328:2944  function safeTransferFrom(... */\n          swap6\n          dup3\n          swap6\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1532:2887  assembly {... */\n          mload(0x40)\n          swap5\n          0x23b872dd00000000000000000000000000000000000000000000000000000000\n          dup7\n          mstore\n          0x04\n          dup7\n          add\n          mstore\n          0x24\n          dup6\n          add\n          mstore\n          0x44\n          dup5\n          add\n          mstore\n          gas\n          call\n          or(and(eq(mload(0x00), 0x01), gt(returndatasize, 0x1f)), iszero(returndatasize))\n          and\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          iszero\n          tag_802\n          jumpi\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1328:2944  function safeTransferFrom(... */\n          jump\t// out\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n        tag_802:\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1532:2887  assembly {... */\n          0x64\n          0x40\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mload\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1532:2887  assembly {... */\n          0x20\n          0x04\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup3\n          add\n          mstore\n          0x14\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1532:2887  assembly {... */\n          0x24\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup3\n          add\n          mstore\n          0x5452414e534645525f46524f4d5f4641494c4544000000000000000000000000\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1532:2887  assembly {... */\n          0x44\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup3\n          add\n          mstore\n          revert\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":2950:4449  function safeTransfer(... */\n        tag_35:\n          0x00\n          swap2\n          dup3\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":3128:4397  assembly {... */\n          0x44\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":2950:4449  function safeTransfer(... */\n          swap3\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":3128:4397  assembly {... */\n          0x20\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":2950:4449  function safeTransfer(... */\n          swap6\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":3128:4397  assembly {... */\n          mload(0x40)\n          swap4\n          0xa9059cbb00000000000000000000000000000000000000000000000000000000\n          dup6\n          mstore\n          0x04\n          dup6\n          add\n          mstore\n          0x24\n          dup5\n          add\n          mstore\n          gas\n          call\n          or(and(eq(mload(0x00), 0x01), gt(returndatasize, 0x1f)), iszero(returndatasize))\n          and\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          iszero\n          tag_804\n          jumpi\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":2950:4449  function safeTransfer(... */\n          jump\t// out\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n        tag_804:\n          0x64\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":3128:4397  assembly {... */\n          0x40\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mload\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":3128:4397  assembly {... */\n          0x20\n          0x04\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup3\n          add\n          mstore\n          0x0f\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":3128:4397  assembly {... */\n          0x24\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup3\n          add\n          mstore\n          0x5452414e534645525f4641494c45440000000000000000000000000000000000\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":3128:4397  assembly {... */\n          0x44\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup3\n          add\n          mstore\n          revert\n        tag_36:\n          0x010000\n          dup2\n          lt\n          iszero\n          tag_806\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":11370:11383  _observations */\n          0x0d\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          add\n          swap1\n          0x00\n          swap1\n          jump\t// out\n        tag_806:\n          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n          mstore(0x04, 0x32)\n          revert(0x00, 0x24)\n        tag_37:\n          dup2\n          dup2\n          mul\n          swap3\n          swap2\n          dup2\n          iszero\n          swap2\n          dup5\n          div\n          eq\n          or\n          iszero\n          tag_611\n          jumpi\n          jump\t// out\n        tag_38:\n          dup2\n          iszero\n          tag_810\n          jumpi\n          div\n          swap1\n          jump\t// out\n        tag_810:\n          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n          mstore(0x04, 0x12)\n          revert(0x00, 0x24)\n            /* \"lib/solmate/src/tokens/ERC20.sol\":6150:6475  function _mint(address to, uint256 amount) internal virtual {... */\n        tag_39:\n            /* \"lib/solmate/src/tokens/ERC20.sol\":6436:6468  Transfer(address(0), to, amount) */\n          0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0x20\n          0xffffffffffffffffffffffffffffffffffffffff\n          0x00\n            /* \"lib/solmate/src/tokens/ERC20.sol\":6150:6475  function _mint(address to, uint256 amount) internal virtual {... */\n          swap4\n            /* \"lib/solmate/src/tokens/ERC20.sol\":6220:6241  totalSupply += amount */\n          tag_812\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup7\n            /* \"lib/solmate/src/tokens/ERC20.sol\":6220:6241  totalSupply += amount */\n          0x02\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n            /* \"lib/solmate/src/tokens/ERC20.sol\":6220:6241  totalSupply += amount */\n          tag_23\n          jump\t// in\n        tag_812:\n          0x02\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sstore\n          and\n          swap4\n          dup5\n          dup5\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":6387:6396  balanceOf */\n          0x03\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup3\n          mstore\n          0x40\n          dup5\n          keccak256\n          dup2\n          dup2\n          sload\n          add\n          swap1\n          sstore\n          mload(0x40)\n          swap1\n          dup2\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":6436:6468  Transfer(address(0), to, amount) */\n          log3\n            /* \"lib/solmate/src/tokens/ERC20.sol\":6150:6475  function _mint(address to, uint256 amount) internal virtual {... */\n          jump\t// out\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5746:9142  function sqrt(uint256 x) internal pure returns (uint256 z) {... */\n        tag_40:\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */\n          0xb5\n          dup2\n          0x010000000000000000000000000000000000\n          dup2\n          lt\n          iszero\n          tag_813\n          jumpi\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5746:9142  function sqrt(uint256 x) internal pure returns (uint256 z) {... */\n        tag_814:\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */\n          dup1\n          0x01000000000000000000\n          0x010000\n          swap3\n          lt\n          iszero\n          tag_815\n          jumpi\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5746:9142  function sqrt(uint256 x) internal pure returns (uint256 z) {... */\n        tag_816:\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */\n          0x010000000000\n          dup2\n          lt\n          iszero\n          tag_817\n          jumpi\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5746:9142  function sqrt(uint256 x) internal pure returns (uint256 z) {... */\n        tag_818:\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */\n          0x01000000\n          dup2\n          lt\n          iszero\n          tag_819\n          jumpi\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5746:9142  function sqrt(uint256 x) internal pure returns (uint256 z) {... */\n        tag_820:\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */\n          add\n          mul\n          0x12\n          shr\n          0x01\n          swap1\n          dup1\n          dup4\n          div\n          add\n          dup2\n          shr\n          dup1\n          dup4\n          div\n          add\n          dup2\n          shr\n          dup1\n          dup4\n          div\n          add\n          dup2\n          shr\n          dup1\n          dup4\n          div\n          add\n          dup2\n          shr\n          dup1\n          dup4\n          div\n          add\n          dup2\n          shr\n          dup1\n          dup4\n          div\n          add\n          dup2\n          shr\n          dup1\n          dup4\n          div\n          add\n          swap1\n          shr\n          dup1\n          dup1\n          swap3\n          div\n          lt\n          swap1\n          sub\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5746:9142  function sqrt(uint256 x) internal pure returns (uint256 z) {... */\n          swap1\n          jump\t// out\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */\n        tag_819:\n          0x10\n          shr\n          swap2\n          0x08\n          shl\n          swap2\n          jump(tag_820)\n        tag_817:\n          0x20\n          shr\n          swap2\n          0x10\n          shl\n          swap2\n          jump(tag_818)\n        tag_815:\n          0x40\n          shr\n          swap2\n          0x20\n          shl\n          swap2\n          jump(tag_816)\n        tag_813:\n          pop\n          0xb50000000000000000\n          swap1\n          pop\n          0x80\n          dup3\n          swap1\n          shr\n          jump(tag_814)\n            /* \"src/ReservoirPair.sol\":14590:14759  function _managerCallback() internal {... */\n        tag_41:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":14649:14661  assetManager */\n          0x0b\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n          and\n            /* \"src/ReservoirPair.sol\":14641:14676  address(assetManager) == address(0) */\n          dup1\n          iszero\n            /* \"src/ReservoirPair.sol\":14637:14709  if (address(assetManager) == address(0)) {... */\n          tag_821\n          jumpi\n            /* \"src/ReservoirPair.sol\":14718:14752  assetManager.afterLiquidityEvent() */\n          dup1\n          extcodesize\n          iszero\n          tag_607\n          jumpi\n          0x00\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup1\n          swap2\n            /* \"src/ReservoirPair.sol\":14718:14752  assetManager.afterLiquidityEvent() */\n          0x04\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mload(0x40)\n            /* \"src/ReservoirPair.sol\":14718:14752  assetManager.afterLiquidityEvent() */\n          dup1\n          swap5\n          dup2\n          swap4\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0x016312bd00000000000000000000000000000000000000000000000000000000\n            /* \"src/ReservoirPair.sol\":14718:14752  assetManager.afterLiquidityEvent() */\n          dup4\n          mstore\n          gas\n          call\n          dup1\n          iszero\n          tag_689\n          jumpi\n          tag_3\n          jumpi\n            /* \"src/ReservoirPair.sol\":14590:14759  function _managerCallback() internal {... */\n          pop\n          jump\t// out\n            /* \"src/ReservoirPair.sol\":14637:14709  if (address(assetManager) == address(0)) {... */\n        tag_821:\n            /* \"src/ReservoirPair.sol\":14692:14699  return; */\n          pop\n          jump\t// out\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":4888:5656  function _mintFee(uint256 aReserve0, uint256 aReserve1) private returns (bool rFeeOn) {... */\n        tag_42:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":4993:5004  platformFee */\n          0x09\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":4993:5008  platformFee > 0 */\n          iszero\n          dup1\n          iszero\n          swap4\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":4888:5656  function _mintFee(uint256 aReserve0, uint256 aReserve1) private returns (bool rFeeOn) {... */\n          swap3\n          swap1\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":5019:5650  if (rFeeOn) {... */\n          tag_831\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":5065:5094  FixedPointMathLib.sqrt(kLast) */\n          tag_833\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":5088:5093  kLast */\n          0x010010\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":5065:5094  FixedPointMathLib.sqrt(kLast) */\n          tag_40\n          jump\t// in\n        tag_833:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":5128:5142  lSqrtOldK != 0 */\n          swap2\n          dup3\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":5124:5584  if (lSqrtOldK != 0) {... */\n          tag_834\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":5019:5650  if (rFeeOn) {... */\n          pop\n          pop\n          pop\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":4888:5656  function _mintFee(uint256 aReserve0, uint256 aReserve1) private returns (bool rFeeOn) {... */\n          jump\t// out\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":5124:5584  if (lSqrtOldK != 0) {... */\n        tag_834:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":5182:5227  FixedPointMathLib.sqrt(aReserve0 * aReserve1) */\n          tag_837\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":5205:5226  aReserve0 * aReserve1 */\n          swap2\n          tag_479\n          swap2\n          tag_37\n          jump\t// in\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":5182:5227  FixedPointMathLib.sqrt(aReserve0 * aReserve1) */\n        tag_837:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":5250:5271  lSqrtNewK > lSqrtOldK */\n          dup2\n          dup2\n          gt\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":5246:5570  if (lSqrtNewK > lSqrtOldK) {... */\n          tag_839\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":5019:5650  if (rFeeOn) {... */\n          pop\n          pop\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":4888:5656  function _mintFee(uint256 aReserve0, uint256 aReserve1) private returns (bool rFeeOn) {... */\n          jump\t// out\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":5246:5570  if (lSqrtNewK > lSqrtOldK) {... */\n        tag_839:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":4993:5004  platformFee */\n          0x09\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n          swap2\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":4402:4434  aSqrtNewK * ACCURACY / aSqrtOldK */\n          tag_841\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":5364:5375  totalSupply */\n          0x02\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":1117:1121  1e38 */\n          swap2\n          0x4b3b4ca85a86c47a098a224000000000\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup1\n          swap5\n          mul\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":4402:4434  aSqrtNewK * ACCURACY / aSqrtOldK */\n          tag_38\n          jump\t// in\n        tag_841:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup1\n          iszero\n          tag_810\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":4739:4820  lScaledTargetOwnership * aCirculatingShares / (ACCURACY - lScaledTargetOwnership) */\n          tag_844\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap4\n            /* \"src/ReservoirPair.sol\":2723:2732  1_000_000 */\n          0x0f4240\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap2\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":1003:1007  1e76 */\n          0x161bcca7119915b50764b4abe86529797775a5f1719510000000000000000000\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          div\n          dup5\n          sub\n          mul\n          div\n          dup1\n          swap3\n          sub\n          swap2\n          mul\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":4739:4820  lScaledTargetOwnership * aCirculatingShares / (ACCURACY - lScaledTargetOwnership) */\n          tag_38\n          jump\t// in\n        tag_844:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mload(0x40)\n          tag_845\n          dup2\n          tag_4\n          jump\t// in\n        tag_845:\n          0x15\n          dup2\n          mstore\n          0x5368617265643a3a706c6174666f726d466565546f0000000000000000000000\n          0x20\n          dup3\n          add\n          mstore\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":5423:5457  factory.read(PLATFORM_FEE_TO_NAME) */\n          tag_846\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":5423:5430  factory */\n          swap2\n          dup3\n          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          and\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":5423:5457  factory.read(PLATFORM_FEE_TO_NAME) */\n          tag_49\n          jump\t// in\n        tag_846:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          and\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":5495:5513  lSharesToIssue > 0 */\n          swap1\n          dup1\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":5491:5551  if (lSharesToIssue > 0) _mint(platformFeeTo, lSharesToIssue) */\n          iszero\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":5246:5570  if (lSqrtNewK > lSqrtOldK) {... */\n          tag_636\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":5491:5551  if (lSharesToIssue > 0) _mint(platformFeeTo, lSharesToIssue) */\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":5536:5550  lSharesToIssue */\n          tag_849\n          swap2\n          tag_39\n          jump\t// in\n        tag_849:\n            /* \"src/ReservoirPair.sol\":7478:7485  return; */\n          jump\t// out\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":5019:5650  if (rFeeOn) {... */\n        tag_831:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":5604:5609  kLast */\n          pop\n          pop\n          0x010010\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup1\n          sload\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":5600:5650  if (kLast != 0) {... */\n          tag_850\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":5019:5650  if (rFeeOn) {... */\n          pop\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":4888:5656  function _mintFee(uint256 aReserve0, uint256 aReserve1) private returns (bool rFeeOn) {... */\n          jump\t// out\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":5600:5650  if (kLast != 0) {... */\n        tag_850:\n          0x00\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap1\n          sstore\n            /* \"src/ReservoirPair.sol\":14692:14699  return; */\n          jump\t// out\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n        tag_43:\n          iszero\n          tag_852\n          jumpi\n          jump\t// out\n        tag_852:\n          0x64\n          mload(0x40)\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          0x20\n          0x04\n          dup3\n          add\n          mstore\n          0x12\n          0x24\n          dup3\n          add\n          mstore\n          0x43503a204e4f545f454e4f5547485f4c49510000000000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n        tag_44:\n          iszero\n          tag_854\n          jumpi\n          jump\t// out\n        tag_854:\n          0x64\n          mload(0x40)\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          0x20\n          0x04\n          dup3\n          add\n          mstore\n          0x1a\n          0x24\n          dup3\n          add\n          mstore\n          0x43503a20494e53554646494349454e545f4c4951554944495459000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":1498:2085  function _getAmountOut(uint256 aAmountIn, uint256 aReserveIn, uint256 aReserveOut, uint256 aSwapFee)... */\n        tag_45:\n          swap3\n          swap2\n          swap3\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":1688:1701  aAmountIn > 0 */\n          dup1\n          iszero\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          tag_856\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":1753:1767  aReserveIn > 0 */\n          dup2\n          iszero\n          swap1\n          dup2\n          iszero\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":1753:1786  aReserveIn > 0 && aReserveOut > 0 */\n          dup1\n          tag_858\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":1498:2085  function _getAmountOut(uint256 aAmountIn, uint256 aReserveIn, uint256 aReserveOut, uint256 aSwapFee)... */\n        tag_859:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":1745:1817  require(aReserveIn > 0 && aReserveOut > 0, \"CP: INSUFFICIENT_LIQUIDITY\") */\n          tag_860\n          swap1\n          tag_44\n          jump\t// in\n        tag_860:\n            /* \"src/ReservoirPair.sol\":2723:2732  1_000_000 */\n          0x0f4240\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap4\n          dup5\n          sub\n          swap1\n          dup5\n          dup3\n          gt\n          tag_611\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":1923:1953  lAmountInWithFee * aReserveOut */\n          tag_863\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":1855:1892  aAmountIn * (FEE_ACCURACY - aSwapFee) */\n          swap2\n          tag_864\n          swap2\n          tag_37\n          jump\t// in\n        tag_864:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":1923:1953  lAmountInWithFee * aReserveOut */\n          swap5\n          dup6\n          tag_37\n          jump\t// in\n        tag_863:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap3\n          dup1\n          dup4\n          mul\n          swap3\n          dup4\n          div\n          eq\n          or\n          iszero\n          tag_611\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":2053:2078  lNumerator / lDenominator */\n          tag_740\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":1986:2030  aReserveIn * FEE_ACCURACY + lAmountInWithFee */\n          swap3\n          tag_868\n          swap2\n          tag_23\n          jump\t// in\n        tag_868:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":2053:2078  lNumerator / lDenominator */\n          swap1\n          tag_38\n          jump\t// in\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":1753:1786  aReserveIn > 0 && aReserveOut > 0 */\n        tag_858:\n          pop\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":1771:1786  aReserveOut > 0 */\n          dup5\n          iszero\n          iszero\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":1753:1786  aReserveIn > 0 && aReserveOut > 0 */\n          jump(tag_859)\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n        tag_856:\n          0x64\n          mload(0x40)\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          0x20\n          0x04\n          dup3\n          add\n          mstore\n          0x1d\n          0x24\n          dup3\n          add\n          mstore\n          0x43503a20494e53554646494349454e545f494e5055545f414d4f554e54000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":2133:2668  function _getAmountIn(uint256 aAmountOut, uint256 aReserveIn, uint256 aReserveOut, uint256 aSwapFee)... */\n        tag_46:\n          swap3\n          swap1\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":2322:2336  aAmountOut > 0 */\n          dup4\n          iszero\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          tag_869\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":2389:2403  aReserveIn > 0 */\n          dup4\n          dup2\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":2485:2508  aReserveIn * aAmountOut */\n          tag_871\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":2389:2403  aReserveIn > 0 */\n          swap3\n          iszero\n          iszero\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":2389:2422  aReserveIn > 0 && aReserveOut > 0 */\n          dup1\n          tag_872\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":2133:2668  function _getAmountIn(uint256 aAmountOut, uint256 aReserveIn, uint256 aReserveOut, uint256 aSwapFee)... */\n        tag_873:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":2381:2453  require(aReserveIn > 0 && aReserveOut > 0, \"CP: INSUFFICIENT_LIQUIDITY\") */\n          tag_874\n          swap1\n          tag_44\n          jump\t// in\n        tag_874:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":2485:2508  aReserveIn * aAmountOut */\n          tag_37\n          jump\t// in\n        tag_871:\n            /* \"src/ReservoirPair.sol\":2723:2732  1_000_000 */\n          swap2\n          0x0f4240\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap4\n          dup5\n          dup5\n          mul\n          swap4\n          dup1\n          dup6\n          div\n          dup7\n          eq\n          swap1\n          iszero\n          or\n          iszero\n          tag_611\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":2557:2581  aReserveOut - aAmountOut */\n          tag_877\n          swap2\n          tag_10\n          jump\t// in\n        tag_877:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap1\n          dup4\n          sub\n          swap3\n          dup4\n          gt\n          tag_611\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":2632:2657  lNumerator / lDenominator */\n          tag_880\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":2556:2610  (aReserveOut - aAmountOut) * (FEE_ACCURACY - aSwapFee) */\n          swap3\n          tag_868\n          swap2\n          tag_37\n          jump\t// in\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":2632:2657  lNumerator / lDenominator */\n        tag_880:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":2660:2661  1 */\n          0x01\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup2\n          add\n          dup1\n          swap2\n          gt\n          tag_611\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":2133:2668  function _getAmountIn(uint256 aAmountOut, uint256 aReserveIn, uint256 aReserveOut, uint256 aSwapFee)... */\n          swap1\n          jump\t// out\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":2389:2422  aReserveIn > 0 && aReserveOut > 0 */\n        tag_872:\n          pop\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":2407:2422  aReserveOut > 0 */\n          dup5\n          iszero\n          iszero\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":2389:2422  aReserveIn > 0 && aReserveOut > 0 */\n          jump(tag_873)\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n        tag_869:\n          0x64\n          mload(0x40)\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          0x20\n          0x04\n          dup3\n          add\n          mstore\n          0x1e\n          0x24\n          dup3\n          add\n          mstore\n          0x43503a20494e53554646494349454e545f4f55545055545f414d4f554e540000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n        tag_47:\n          iszero\n          tag_884\n          jumpi\n          jump\t// out\n        tag_884:\n          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n          mstore(0x04, 0x01)\n          revert(0x00, 0x24)\n            /* \"src/ReservoirPair.sol\":18000:19057  function _calcClampedPrice(uint256 aCurrRawPrice, uint256 aPrevClampedPrice, uint256 aTimeElapsed)... */\n        tag_48:\n            /* \"src/ReservoirPair.sol\":18215:18237  aPrevClampedPrice == 0 */\n          dup2\n          iszero\n            /* \"src/ReservoirPair.sol\":18211:18337  if (aPrevClampedPrice == 0) {... */\n          tag_886\n          jumpi\n            /* \"lib/forge-std/src/StdMath.sol\":607:612  a > b */\n          dup2\n          dup2\n          gt\n          swap3\n            /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */\n          dup4\n          iszero\n          tag_888\n          jumpi\n            /* \"lib/forge-std/src/StdMath.sol\":615:620  a - b */\n          tag_890\n          dup4\n          dup4\n          tag_10\n          jump\t// in\n        tag_890:\n            /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */\n          swap4\n        tag_891:\n            /* \"lib/forge-std/src/StdMath.sol\":1144:1148  1e18 */\n          0x0de0b6b3a7640000\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap5\n          dup6\n          dup2\n          mul\n          swap1\n          dup1\n          dup3\n          div\n          dup8\n          eq\n          swap1\n          iszero\n          or\n          iszero\n          tag_611\n          jumpi\n            /* \"lib/forge-std/src/StdMath.sol\":1133:1152  absDelta * 1e18 / b */\n          dup5\n          tag_894\n          swap2\n          tag_38\n          jump\t// in\n        tag_894:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap1\n            /* \"src/ReservoirPair.sol\":18408:18421  maxChangeRate */\n          0x01000d\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sload\n            /* \"src/ReservoirPair.sol\":18408:18436  maxChangeRate * aTimeElapsed */\n          swap2\n          tag_895\n          dup5\n          dup5\n          tag_37\n          jump\t// in\n        tag_895:\n          lt\n          iszero\n          tag_896\n          jumpi\n            /* \"src/ReservoirPair.sol\":18487:18520  aCurrRawPrice > aPrevClampedPrice */\n          iszero\n          tag_898\n          jumpi\n            /* \"src/ReservoirPair.sol\":18585:18613  maxChangeRate * aTimeElapsed */\n          tag_900\n          swap3\n          pop\n          tag_37\n          jump\t// in\n        tag_900:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup3\n          add\n          dup1\n          dup4\n          gt\n          tag_611\n          jumpi\n            /* \"src/ReservoirPair.sol\":18556:18615  aPrevClampedPrice * (1e18 + (maxChangeRate * aTimeElapsed)) */\n          tag_903\n          swap2\n          tag_37\n          jump\t// in\n        tag_903:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          div\n            /* \"src/ReservoirPair.sol\":18483:18817  if (aCurrRawPrice > aPrevClampedPrice) {... */\n          swap1\n        tag_904:\n            /* \"src/ReservoirPair.sol\":18856:18897  LogCompression.toLowResLog(rClampedPrice) */\n          tag_905\n          dup3\n          tag_52\n          jump\t// in\n        tag_905:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0x0d\n          signextend\n            /* \"src/ReservoirPair.sol\":18347:19051  if (stdMath.percentDelta(aCurrRawPrice, aPrevClampedPrice) > maxChangeRate * aTimeElapsed) {... */\n          swap1\n            /* \"src/ReservoirPair.sol\":18000:19057  function _calcClampedPrice(uint256 aCurrRawPrice, uint256 aPrevClampedPrice, uint256 aTimeElapsed)... */\n          jump\t// out\n            /* \"src/ReservoirPair.sol\":18483:18817  if (aCurrRawPrice > aPrevClampedPrice) {... */\n        tag_898:\n            /* \"src/ReservoirPair.sol\":18661:18702  assert(aPrevClampedPrice > aCurrRawPrice) */\n          tag_874\n            /* \"src/ReservoirPair.sol\":18765:18793  maxChangeRate * aTimeElapsed */\n          tag_908\n            /* \"src/ReservoirPair.sol\":18668:18701  aPrevClampedPrice > aCurrRawPrice */\n          swap4\n          dup6\n          gt\n            /* \"src/ReservoirPair.sol\":18661:18702  assert(aPrevClampedPrice > aCurrRawPrice) */\n          tag_47\n          jump\t// in\n            /* \"src/ReservoirPair.sol\":18765:18793  maxChangeRate * aTimeElapsed */\n        tag_908:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup3\n          sub\n          dup3\n          dup2\n          gt\n          tag_611\n          jumpi\n            /* \"src/ReservoirPair.sol\":18736:18795  aPrevClampedPrice * (1e18 - (maxChangeRate * aTimeElapsed)) */\n          tag_911\n          swap2\n          tag_37\n          jump\t// in\n        tag_911:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          div\n            /* \"src/ReservoirPair.sol\":18483:18817  if (aCurrRawPrice > aPrevClampedPrice) {... */\n          swap1\n          jump(tag_904)\n            /* \"src/ReservoirPair.sol\":18347:19051  if (stdMath.percentDelta(aCurrRawPrice, aPrevClampedPrice) > maxChangeRate * aTimeElapsed) {... */\n        tag_896:\n            /* \"src/ReservoirPair.sol\":18929:18958  rClampedPrice = aCurrRawPrice */\n          pop\n          pop\n          pop\n          dup1\n          swap4\n          swap3\n          pop\n            /* \"src/ReservoirPair.sol\":18998:19039  LogCompression.toLowResLog(aCurrRawPrice) */\n          tag_905\n            /* \"src/ReservoirPair.sol\":18929:18958  rClampedPrice = aCurrRawPrice */\n          swap2\n          pop\n            /* \"src/ReservoirPair.sol\":18998:19039  LogCompression.toLowResLog(aCurrRawPrice) */\n          swap3\n          tag_52\n          jump\t// in\n            /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */\n        tag_888:\n            /* \"lib/forge-std/src/StdMath.sol\":623:628  b - a */\n          tag_913\n          dup3\n          dup5\n          tag_10\n          jump\t// in\n        tag_913:\n            /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */\n          swap4\n          jump(tag_891)\n            /* \"src/ReservoirPair.sol\":18211:18337  if (aPrevClampedPrice == 0) {... */\n        tag_886:\n            /* \"src/ReservoirPair.sol\":18283:18324  LogCompression.toLowResLog(aCurrRawPrice) */\n          dup1\n          swap4\n          swap3\n          pop\n          tag_905\n          swap2\n          pop\n          tag_52\n          jump\t// in\n            /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */\n        tag_49:\n          swap1\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */\n          swap2\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mload(0x40)\n            /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */\n          swap1\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0x24\n            /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */\n          0x20\n          swap4\n          dup4\n          tag_915\n          dup7\n          dup3\n          dup2\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          tag_916\n            /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */\n          dup2\n          dup1\n          swap11\n          add\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap7\n          dup8\n          dup2\n          mload\n          swap4\n          dup5\n          swap3\n          add\n          tag_6\n          jump\t// in\n        tag_916:\n          dup2\n          add\n            /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */\n          sub\n          dup1\n          dup5\n          mstore\n          add\n          dup3\n          tag_5\n          jump\t// in\n        tag_915:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mload\n            /* \"src/libraries/FactoryStore.sol\":476:509  keccak256(abi.encodePacked(aKey)) */\n          swap1\n          keccak256\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mload(0x40)\n            /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */\n          swap6\n          dup7\n          swap4\n          dup5\n          swap3\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0x8eaa6ac000000000000000000000000000000000000000000000000000000000\n            /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */\n          dup5\n          mstore\n          0x04\n          dup5\n          add\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mstore\n          and\n            /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */\n          gas\n          staticcall\n          swap1\n          dup2\n          iszero\n          tag_689\n          jumpi\n          0x00\n          swap2\n          tag_919\n          jumpi\n            /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */\n        tag_920:\n            /* \"src/libraries/FactoryStore.sol\":456:510  return aFactory.get(keccak256(abi.encodePacked(aKey))) */\n          pop\n          swap1\n          pop\n            /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */\n          swap1\n          jump\t// out\n            /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */\n        tag_919:\n          dup3\n          dup2\n          returndatasize\n          dup4\n          gt\n          tag_921\n          jumpi\n        tag_922:\n          tag_923\n          dup2\n          dup4\n          tag_5\n          jump\t// in\n        tag_923:\n          dup2\n          add\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sub\n          slt\n          tag_155\n          jumpi\n          pop\n          mload\n            /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */\n          dup1\n          codesize\n          jump(tag_920)\n        tag_921:\n          pop\n          returndatasize\n          jump(tag_922)\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n        tag_50:\n          dup1\n          iszero\n          tag_810\n          jumpi\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0xc097ce7bc90715b34b9f1000000000\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n          swap1\n          jump\t// out\n        tag_51:\n          dup2\n          iszero\n          tag_810\n          jumpi\n          sdiv\n          swap1\n          jump\t// out\n            /* \"src/libraries/LogCompression.sol\":2015:2401  function toLowResLog(uint256 value) internal pure returns (int256) {... */\n        tag_52:\n            /* \"src/libraries/LogCompression.sol\":2128:2156  LogExpMath.ln(int256(value)) */\n          tag_930\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          0x5af3107a4000\n            /* \"src/libraries/LogCompression.sol\":2015:2401  function toLowResLog(uint256 value) internal pure returns (int256) {... */\n          swap2\n            /* \"src/libraries/LogCompression.sol\":2128:2156  LogExpMath.ln(int256(value)) */\n          tag_53\n          jump\t// in\n        tag_930:\n            /* \"src/libraries/LogCompression.sol\":2252:2253  0 */\n          0x00\n            /* \"src/libraries/LogCompression.sol\":2247:2253  ln > 0 */\n          dup2\n          sgt\n            /* \"src/libraries/LogCompression.sol\":2252:2253  0 */\n          iszero\n          tag_931\n          jumpi\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          0x2d79883d2000\n          add\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogCompression.sol\":2015:2401  function toLowResLog(uint256 value) internal pure returns (int256) {... */\n          swap1\n          jump\t// out\n            /* \"src/libraries/LogCompression.sol\":2247:2325  ln > 0 ? ln + _HALF_LOG_COMPRESSION_FACTOR : ln - _HALF_LOG_COMPRESSION_FACTOR */\n        tag_931:\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffd28677c2e000\n          add\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogCompression.sol\":2015:2401  function toLowResLog(uint256 value) internal pure returns (int256) {... */\n          swap1\n          jump\t// out\n            /* \"src/libraries/LogExpMath.sol\":14736:15138  function ln(int256 a) internal pure returns (int256) {... */\n        tag_53:\n            /* \"src/libraries/LogExpMath.sol\":14922:14923  0 */\n          0x00\n            /* \"src/libraries/LogExpMath.sol\":14918:14923  a > 0 */\n          dup2\n          sgt\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          iszero\n          tag_934\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":14964:14985  LN_36_LOWER_BOUND < a */\n          dup1\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          0x0c7d713b49da0000\n            /* \"src/libraries/LogExpMath.sol\":14964:14985  LN_36_LOWER_BOUND < a */\n          slt\n            /* \"src/libraries/LogExpMath.sol\":14964:15010  LN_36_LOWER_BOUND < a && a < LN_36_UPPER_BOUND */\n          dup1\n          tag_936\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":14736:15138  function ln(int256 a) internal pure returns (int256) {... */\n        tag_937:\n            /* \"src/libraries/LogExpMath.sol\":14960:15122  if (LN_36_LOWER_BOUND < a && a < LN_36_UPPER_BOUND) {... */\n          iszero\n          tag_938\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n          0x0de0b6b3a7640000\n          swap1\n            /* \"src/libraries/LogExpMath.sol\":2125:2129  1e36 */\n          0xc097ce7bc90715b34b9f1000000000\n          swap1\n            /* \"src/libraries/LogExpMath.sol\":21785:21823  ((x - ONE_36) * ONE_36) / (x + ONE_36) */\n          tag_940\n          swap1\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup4\n          mul\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          dup3\n          dup2\n          add\n          swap1\n          0xffffffffffffffffffffffffffffffffff3f68318436f8ea4cb460f000000000\n          add\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup4\n          mul\n            /* \"src/libraries/LogExpMath.sol\":21785:21823  ((x - ONE_36) * ONE_36) / (x + ONE_36) */\n          tag_51\n          jump\t// in\n        tag_940:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap1\n          dup1\n          dup3\n          dup1\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap2\n          dup2\n          dup4\n          dup3\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup3\n          dup5\n          dup3\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup4\n          dup6\n          dup3\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap2\n          dup5\n          dup7\n          dup5\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap4\n          dup6\n          dup8\n          dup7\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap6\n          dup1\n          dup9\n          dup9\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap8\n          dup9\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogExpMath.sol\":22751:22753  15 */\n          0x0f\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          swap1\n          sdiv\n          swap7\n            /* \"src/libraries/LogExpMath.sol\":22669:22671  13 */\n          0x0d\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          swap1\n          sdiv\n          swap6\n            /* \"src/libraries/LogExpMath.sol\":22587:22589  11 */\n          0x0b\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          swap1\n          sdiv\n          swap5\n            /* \"src/libraries/LogExpMath.sol\":22506:22507  9 */\n          0x09\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          swap1\n          sdiv\n          swap4\n            /* \"src/libraries/LogExpMath.sol\":22425:22426  7 */\n          0x07\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          swap1\n          sdiv\n          swap3\n            /* \"src/libraries/LogExpMath.sol\":22344:22345  5 */\n          0x05\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          swap1\n          sdiv\n          swap2\n            /* \"src/libraries/LogExpMath.sol\":22263:22264  3 */\n          0x03\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          swap1\n          sdiv\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          add\n          add\n          add\n          add\n          add\n          add\n          add\n          0x01\n          shl\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogExpMath.sol\":15030:15055  return _ln_36(a) / ONE_18 */\n          swap1\n          jump\t// out\n            /* \"src/libraries/LogExpMath.sol\":14960:15122  if (LN_36_LOWER_BOUND < a && a < LN_36_UPPER_BOUND) {... */\n        tag_938:\n            /* \"src/libraries/LogExpMath.sol\":15101:15107  _ln(a) */\n          tag_740\n          swap1\n          tag_54\n          jump\t// in\n            /* \"src/libraries/LogExpMath.sol\":14964:15010  LN_36_LOWER_BOUND < a && a < LN_36_UPPER_BOUND */\n        tag_936:\n            /* \"src/libraries/LogExpMath.sol\":14989:15010  a < LN_36_UPPER_BOUND */\n          pop\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          0x0f43fc2c04ee0000\n            /* \"src/libraries/LogExpMath.sol\":14989:15010  a < LN_36_UPPER_BOUND */\n          dup2\n          slt\n            /* \"src/libraries/LogExpMath.sol\":14964:15010  LN_36_LOWER_BOUND < a && a < LN_36_UPPER_BOUND */\n          jump(tag_937)\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n        tag_934:\n          0x64\n          mload(0x40)\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          0x20\n          0x04\n          dup3\n          add\n          mstore\n          0x11\n          0x24\n          dup3\n          add\n          mstore\n          0x454d3a204f55545f4f465f424f554e4453000000000000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n        tag_54:\n            /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n          0x0de0b6b3a7640000\n            /* \"src/libraries/LogExpMath.sol\":15343:15353  a < ONE_18 */\n          dup2\n          slt\n            /* \"src/libraries/LogExpMath.sol\":15339:15760  if (a < ONE_18) {... */\n          tag_942\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":17686:17689  100 */\n          0x64\n            /* \"src/libraries/LogExpMath.sol\":17231:17245  int256 sum = 0 */\n          swap1\n            /* \"src/libraries/LogExpMath.sol\":17244:17245  0 */\n          0x00\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0x1600ef3172e58d2e933ec884fde10064c63b5372d805e203c0000000000000\n            /* \"src/libraries/LogExpMath.sol\":17263:17279  a >= a0 * ONE_18 */\n          dup3\n          slt\n          iszero\n            /* \"src/libraries/LogExpMath.sol\":17259:17385  if (a >= a0 * ONE_18) {... */\n          tag_944\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n        tag_945:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          0x011798004d755d3c8bc8e03204cf44619e000000\n            /* \"src/libraries/LogExpMath.sol\":17403:17419  a >= a1 * ONE_18 */\n          dup3\n          slt\n          iszero\n            /* \"src/libraries/LogExpMath.sol\":17399:17525  if (a >= a1 * ONE_18) {... */\n          tag_946\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n        tag_947:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup3\n          mul\n          swap1\n          dup3\n          mul\n          dup2\n            /* \"src/libraries/LogExpMath.sol\":3567:3612  7_896_296_018_268_069_516_100_000_000_000_000 */\n          0x01855144814a7ff805980ff0084000\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup3\n            /* \"src/libraries/LogExpMath.sol\":17846:17853  a >= a2 */\n          dup2\n          dup2\n          slt\n          iszero\n            /* \"src/libraries/LogExpMath.sol\":17842:17936  if (a >= a2) {... */\n          tag_948\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n        tag_949:\n            /* \"src/libraries/LogExpMath.sol\":3714:3749  888_611_052_050_787_263_676_000_000 */\n          pop\n          pop\n          pop\n          0x02df0ab5a80a22c61ab5a700\n            /* \"src/libraries/LogExpMath.sol\":17954:17961  a >= a3 */\n          dup1\n          dup3\n          slt\n          iszero\n            /* \"src/libraries/LogExpMath.sol\":17950:18044  if (a >= a3) {... */\n          tag_950\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n        tag_951:\n            /* \"src/libraries/LogExpMath.sol\":3849:3880  298_095_798_704_172_827_474_000 */\n          pop\n          0x3f1fce3da636ea5cf850\n            /* \"src/libraries/LogExpMath.sol\":18062:18069  a >= a4 */\n          dup1\n          dup3\n          slt\n          iszero\n            /* \"src/libraries/LogExpMath.sol\":18058:18152  if (a >= a4) {... */\n          tag_952\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n        tag_953:\n            /* \"src/libraries/LogExpMath.sol\":3980:4009  5_459_815_003_314_423_907_810 */\n          pop\n          0x0127fa27722cc06cc5e2\n            /* \"src/libraries/LogExpMath.sol\":18170:18177  a >= a5 */\n          dup1\n          dup3\n          slt\n          iszero\n            /* \"src/libraries/LogExpMath.sol\":18166:18260  if (a >= a5) {... */\n          tag_954\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n        tag_955:\n            /* \"src/libraries/LogExpMath.sol\":4109:4136  738_905_609_893_065_022_723 */\n          pop\n          0x280e60114edb805d03\n            /* \"src/libraries/LogExpMath.sol\":18278:18285  a >= a6 */\n          dup1\n          dup3\n          slt\n          iszero\n            /* \"src/libraries/LogExpMath.sol\":18274:18368  if (a >= a6) {... */\n          tag_956\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n        tag_957:\n            /* \"src/libraries/LogExpMath.sol\":4236:4263  271_828_182_845_904_523_536 */\n          pop\n          0x0ebc5fb41746121110\n            /* \"src/libraries/LogExpMath.sol\":18386:18393  a >= a7 */\n          dup1\n          dup3\n          slt\n          iszero\n            /* \"src/libraries/LogExpMath.sol\":18382:18476  if (a >= a7) {... */\n          tag_958\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n        tag_959:\n            /* \"src/libraries/LogExpMath.sol\":4363:4390  164_872_127_070_012_814_685 */\n          pop\n          0x08f00f760a4b2db55d\n            /* \"src/libraries/LogExpMath.sol\":18494:18501  a >= a8 */\n          dup1\n          dup3\n          slt\n          iszero\n            /* \"src/libraries/LogExpMath.sol\":18490:18584  if (a >= a8) {... */\n          tag_960\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n        tag_961:\n            /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */\n          pop\n          0x06f5f1775788937937\n            /* \"src/libraries/LogExpMath.sol\":18602:18609  a >= a9 */\n          dup1\n          dup3\n          slt\n          iszero\n            /* \"src/libraries/LogExpMath.sol\":18598:18692  if (a >= a9) {... */\n          tag_962\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n        tag_963:\n            /* \"src/libraries/LogExpMath.sol\":4619:4646  113_314_845_306_682_631_683 */\n          pop\n          0x06248f33704b286603\n            /* \"src/libraries/LogExpMath.sol\":18710:18718  a >= a10 */\n          dup1\n          dup3\n          slt\n          iszero\n            /* \"src/libraries/LogExpMath.sol\":18706:18803  if (a >= a10) {... */\n          tag_964\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n        tag_965:\n            /* \"src/libraries/LogExpMath.sol\":4748:4775  106_449_445_891_785_942_956 */\n          pop\n          0x05c548670b9510e7ac\n            /* \"src/libraries/LogExpMath.sol\":18821:18829  a >= a11 */\n          dup1\n          dup3\n          slt\n          iszero\n            /* \"src/libraries/LogExpMath.sol\":18817:18914  if (a >= a11) {... */\n          tag_966\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n        tag_967:\n            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n          pop\n            /* \"src/libraries/LogExpMath.sol\":19470:19508  ((a - ONE_20) * ONE_20) / (a + ONE_20) */\n          tag_968\n            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n          0x056bc75e2d63100000\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          swap2\n          dup3\n          0xfffffffffffffffffffffffffffffffffffffffffffffffa9438a1d29cf00000\n          dup2\n          dup4\n          add\n          swap3\n          add\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          mul\n            /* \"src/libraries/LogExpMath.sol\":19470:19508  ((a - ONE_20) * ONE_20) / (a + ONE_20) */\n          tag_51\n          jump\t// in\n        tag_968:\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap1\n          dup1\n          dup3\n          dup1\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap2\n          dup2\n          dup4\n          dup3\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup3\n          dup5\n          dup3\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap2\n            /* \"src/libraries/LogExpMath.sol\":19948:19949  3 */\n          0x03\n            /* \"src/libraries/LogExpMath.sol\":20029:20030  5 */\n          0x05\n            /* \"src/libraries/LogExpMath.sol\":20110:20111  7 */\n          0x07\n            /* \"src/libraries/LogExpMath.sol\":20191:20192  9 */\n          0x09\n            /* \"src/libraries/LogExpMath.sol\":20272:20274  11 */\n          0x0b\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup9\n          dup11\n          dup10\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap9\n          dup1\n          dup12\n          dup12\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap11\n          dup12\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n          sdiv\n          swap9\n          sdiv\n          swap7\n          sdiv\n          swap5\n          sdiv\n          swap3\n          sdiv\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          add\n          add\n          add\n          add\n          add\n          0x01\n          shl\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          add\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n          swap1\n          jump\t// out\n            /* \"src/libraries/LogExpMath.sol\":18817:18914  if (a >= a11) {... */\n        tag_966:\n            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n          0x056bc75e2d63100000\n            /* \"src/libraries/LogExpMath.sol\":4686:4711  6_250_000_000_000_000_000 */\n          0x56bc75e2d6310000\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap3\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          swap2\n          add\n            /* \"src/libraries/LogExpMath.sol\":18817:18914  if (a >= a11) {... */\n          swap1\n          codesize\n          jump(tag_967)\n            /* \"src/libraries/LogExpMath.sol\":18706:18803  if (a >= a10) {... */\n        tag_964:\n            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n          0x056bc75e2d63100000\n            /* \"src/libraries/LogExpMath.sol\":4556:4582  12_500_000_000_000_000_000 */\n          0xad78ebc5ac620000\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap3\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          swap2\n          add\n            /* \"src/libraries/LogExpMath.sol\":18706:18803  if (a >= a10) {... */\n          swap1\n          codesize\n          jump(tag_965)\n            /* \"src/libraries/LogExpMath.sol\":18598:18692  if (a >= a9) {... */\n        tag_962:\n            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n          0x056bc75e2d63100000\n            /* \"src/libraries/LogExpMath.sol\":4428:4454  25_000_000_000_000_000_000 */\n          0x015af1d78b58c40000\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap3\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          swap2\n          add\n            /* \"src/libraries/LogExpMath.sol\":18598:18692  if (a >= a9) {... */\n          swap1\n          codesize\n          jump(tag_963)\n            /* \"src/libraries/LogExpMath.sol\":18490:18584  if (a >= a8) {... */\n        tag_960:\n            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n          0x056bc75e2d63100000\n            /* \"src/libraries/LogExpMath.sol\":4301:4327  50_000_000_000_000_000_000 */\n          0x02b5e3af16b1880000\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap3\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          swap2\n          add\n            /* \"src/libraries/LogExpMath.sol\":18490:18584  if (a >= a8) {... */\n          swap1\n          codesize\n          jump(tag_961)\n            /* \"src/libraries/LogExpMath.sol\":18382:18476  if (a >= a7) {... */\n        tag_958:\n            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n          0x056bc75e2d63100000\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          dup1\n          swap3\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          swap2\n          add\n            /* \"src/libraries/LogExpMath.sol\":18382:18476  if (a >= a7) {... */\n          swap1\n          codesize\n          jump(tag_959)\n            /* \"src/libraries/LogExpMath.sol\":18274:18368  if (a >= a6) {... */\n        tag_956:\n            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n          0x056bc75e2d63100000\n            /* \"src/libraries/LogExpMath.sol\":4047:4074  200_000_000_000_000_000_000 */\n          0x0ad78ebc5ac6200000\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap3\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          swap2\n          add\n            /* \"src/libraries/LogExpMath.sol\":18274:18368  if (a >= a6) {... */\n          swap1\n          codesize\n          jump(tag_957)\n            /* \"src/libraries/LogExpMath.sol\":18166:18260  if (a >= a5) {... */\n        tag_954:\n            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n          0x056bc75e2d63100000\n            /* \"src/libraries/LogExpMath.sol\":3918:3945  400_000_000_000_000_000_000 */\n          0x15af1d78b58c400000\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap3\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          swap2\n          add\n            /* \"src/libraries/LogExpMath.sol\":18166:18260  if (a >= a5) {... */\n          swap1\n          codesize\n          jump(tag_955)\n            /* \"src/libraries/LogExpMath.sol\":18058:18152  if (a >= a4) {... */\n        tag_952:\n            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n          0x056bc75e2d63100000\n            /* \"src/libraries/LogExpMath.sol\":3787:3814  800_000_000_000_000_000_000 */\n          0x2b5e3af16b18800000\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap3\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          swap2\n          add\n            /* \"src/libraries/LogExpMath.sol\":18058:18152  if (a >= a4) {... */\n          swap1\n          codesize\n          jump(tag_953)\n            /* \"src/libraries/LogExpMath.sol\":17950:18044  if (a >= a3) {... */\n        tag_950:\n            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n          0x056bc75e2d63100000\n            /* \"src/libraries/LogExpMath.sol\":3650:3679  1_600_000_000_000_000_000_000 */\n          0x56bc75e2d631000000\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap3\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          swap2\n          add\n            /* \"src/libraries/LogExpMath.sol\":17950:18044  if (a >= a3) {... */\n          swap1\n          codesize\n          jump(tag_951)\n            /* \"src/libraries/LogExpMath.sol\":17842:17936  if (a >= a2) {... */\n        tag_948:\n            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n          0x056bc75e2d63100000\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap2\n          swap3\n          swap5\n          pop\n            /* \"src/libraries/LogExpMath.sol\":3503:3532  3_200_000_000_000_000_000_000 */\n          0xad78ebc5ac62000000\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          swap4\n          pop\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          swap2\n          add\n            /* \"src/libraries/LogExpMath.sol\":17842:17936  if (a >= a2) {... */\n          swap1\n          codesize\n          dup1\n          dup1\n          jump(tag_949)\n            /* \"src/libraries/LogExpMath.sol\":17399:17525  if (a >= a1 * ONE_18) {... */\n        tag_946:\n            /* \"src/libraries/LogExpMath.sol\":3385:3422  6_235_149_080_811_616_882_910_000_000 */\n          0x1425982cf597cd205cef7380\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          swap1\n          swap2\n          sdiv\n          swap1\n            /* \"src/libraries/LogExpMath.sol\":3324:3350  64_000_000_000_000_000_000 */\n          0x03782dace9d9000000\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          add\n            /* \"src/libraries/LogExpMath.sol\":17399:17525  if (a >= a1 * ONE_18) {... */\n          jump(tag_947)\n            /* \"src/libraries/LogExpMath.sol\":17259:17385  if (a >= a0 * ONE_18) {... */\n        tag_944:\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          pop\n            /* \"src/libraries/LogExpMath.sol\":3187:3261  38_877_084_059_945_950_922_200_000_000_000_000_000_000_000_000_000_000_000 */\n          0x0195e54c5dd42177f53a27172fa9ec630262827000000000\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          swap1\n          sdiv\n            /* \"src/libraries/LogExpMath.sol\":3125:3152  128_000_000_000_000_000_000 */\n          0x06f05b59d3b2000000\n            /* \"src/libraries/LogExpMath.sol\":17259:17385  if (a >= a0 * ONE_18) {... */\n          jump(tag_945)\n            /* \"src/libraries/LogExpMath.sol\":15339:15760  if (a < ONE_18) {... */\n        tag_942:\n            /* \"src/libraries/LogExpMath.sol\":15722:15743  (ONE_18 * ONE_18) / a */\n          tag_969\n            /* \"src/libraries/LogExpMath.sol\":15718:15744  _ln((ONE_18 * ONE_18) / a) */\n          tag_970\n            /* \"src/libraries/LogExpMath.sol\":15722:15743  (ONE_18 * ONE_18) / a */\n          swap2\n          tag_50\n          jump\t// in\n        tag_969:\n            /* \"src/libraries/LogExpMath.sol\":15718:15744  _ln((ONE_18 * ONE_18) / a) */\n          tag_54\n          jump\t// in\n        tag_970:\n          0x00\n            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */\n          sub\n            /* \"src/libraries/LogExpMath.sol\":15709:15745  return (-_ln((ONE_18 * ONE_18) / a)) */\n          swap1\n          jump\t// out\n\n        auxdata: 0xa164736f6c6343000811000a\n    }\n}\n\nsub_3: assembly {\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      0x01a0\n      dup1\n      0x40\n      mstore\n      jumpi(tag_15, callvalue)\n      0x40\n      dup2\n      bytecodeSize\n      dup1\n      codesize\n      sub\n      dup1\n      swap2\n      tag_14\n      dup3\n      dup6\n      tag_2\n      jump\t// in\n    tag_14:\n      dup4\n      codecopy\n      dup2\n      add\n      sub\n      slt\n      tag_15\n      jumpi\n      tag_17\n      0x20\n      tag_18\n      dup4\n      tag_3\n      jump\t// in\n    tag_18:\n      swap3\n      add\n      tag_3\n      jump\t// in\n    tag_17:\n      swap1\n      mload(0x40)\n      tag_19\n      dup2\n      tag_1\n      jump\t// in\n    tag_19:\n      0x0b\n      dup2\n      mstore\n      shl(0xa8, 0x53503a3a73776170466565)\n      0x20\n      dup3\n      add\n      mstore\n      mload(0x40)\n      swap3\n      tag_20\n      dup5\n      tag_1\n      jump\t// in\n    tag_20:\n      0x12\n      dup5\n      mstore\n      shl(0x71, 0x2932b9b2b93b37b4b9102628102a37b5b2b7)\n      0x20\n      dup6\n      add\n      mstore\n      mload(0x40)\n      tag_21\n      dup2\n      tag_1\n      jump\t// in\n    tag_21:\n      0x06\n      dup2\n      mstore\n      shl(0xd4, 0x05245532d4c5)\n      0x20\n      dup3\n      add\n      mstore\n      dup5\n      mload\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      gt\n      tag_50\n      jumpi\n      dup1\n      tag_24\n      sload(0x00)\n      tag_8\n      jump\t// in\n    tag_24:\n      swap7\n      0x1f\n      swap8\n      dup9\n      dup2\n      gt\n      tag_25\n      jumpi\n    tag_26:\n      pop\n      0x20\n      swap1\n      dup9\n      dup4\n      gt\n      0x01\n      eq\n      tag_27\n      jumpi\n      0x00\n      swap3\n      tag_29\n      jumpi\n    tag_30:\n      pop\n      pop\n      dup2\n      0x01\n      shl\n      swap2\n      not(0x00)\n      swap1\n      0x03\n      shl\n      shr\n      not\n      and\n      or\n      0x00\n      sstore\n    tag_31:\n      dup1\n      mload\n      swap1\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      tag_50\n      jumpi\n      tag_34\n      sload(0x01)\n      tag_8\n      jump\t// in\n    tag_34:\n      dup7\n      dup2\n      gt\n      tag_35\n      jumpi\n    tag_36:\n      pop\n      0x20\n      swap6\n      dup3\n      gt\n      0x01\n      eq\n      tag_37\n      jumpi\n      swap5\n      dup2\n      swap3\n      swap4\n      swap5\n      swap6\n      0x00\n      swap3\n      tag_39\n      jumpi\n    tag_40:\n      pop\n      pop\n      dup2\n      0x01\n      shl\n      swap2\n      not(0x00)\n      swap1\n      0x03\n      shl\n      shr\n      not\n      and\n      or\n      0x01\n      sstore\n    tag_41:\n      0x12\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2142:2162  decimals = _decimals */\n      0x80\n      mstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2192:2205  block.chainid */\n      chainid\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2173:2205  INITIAL_CHAIN_ID = block.chainid */\n      0xa0\n      mstore\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      mload(0x40)\n      0x00\n      swap1\n      sload(0x00)\n      swap2\n      dup2\n      tag_42\n      dup5\n      tag_8\n      jump\t// in\n    tag_42:\n        /* \"src/libraries/StableMath.sol\":607:613  10_000 */\n      swap2\n      dup3\n      dup3\n      mstore\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      0x20\n        /* \"src/libraries/StableMath.sol\":607:613  10_000 */\n      dup3\n      add\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      swap5\n      0x01\n      dup2\n      and\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2116:2132  symbol = _symbol */\n      swap1\n      dup2\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      0x00\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2116:2132  symbol = _symbol */\n      eq\n      tag_43\n      jumpi\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      pop\n      0x01\n      eq\n      tag_45\n      jumpi\n    tag_46:\n      tag_47\n      swap3\n      pop\n      sub\n      dup3\n      tag_2\n      jump\t// in\n    tag_47:\n      mload\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5789:5811  keccak256(bytes(name)) */\n      swap1\n      keccak256\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      swap3\n      mload(0x40)\n      0x20\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5640:5935  abi.encode(... */\n      dup2\n      add\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      swap5\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5672:5767  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n      0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      dup7\n      mstore\n      0x40\n      dup3\n      add\n      mstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5833:5847  keccak256(\"1\") */\n      0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      0x60\n      dup3\n      add\n      mstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2192:2205  block.chainid */\n      chainid\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2142:2162  decimals = _decimals */\n      0x80\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      dup3\n      add\n      mstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5912:5916  this */\n      address\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2173:2205  INITIAL_CHAIN_ID = block.chainid */\n      0xa0\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      dup3\n      add\n      mstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2173:2205  INITIAL_CHAIN_ID = block.chainid */\n      0xa0\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5640:5935  abi.encode(... */\n      dup2\n      mstore\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      0xc0\n      dup2\n      add\n      swap5\n      dup2\n      dup7\n      lt\n      0x01\n      dup1\n      0x40\n      shl\n      sub\n      dup8\n      gt\n      or\n      tag_50\n      jumpi\n      0x40\n      dup7\n      swap1\n      mstore\n      dup2\n      mload\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5613:5949  keccak256(... */\n      swap1\n      keccak256\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      0xc0\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2215:2266  INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator() */\n      mstore\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      0x0140\n      swap5\n      dup6\n      dup3\n      add\n      swap2\n      sub(shl(0x40, 0x01), 0x01)\n      dup4\n      gt\n      dup3\n      dup5\n      lt\n      or\n      tag_50\n      jumpi\n      0x00\n        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */\n      0x0120\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      swap3\n        /* \"src/ReservoirPair.sol\":3435:3451  type(uint16).max */\n      0xffff\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      swap5\n      0x40\n      mstore\n      mstore\n      0x00\n        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */\n      0xe0\n      dup3\n      add\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      mstore\n      0x00\n        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */\n      0x0100\n      dup3\n      add\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      mstore\n        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */\n      add\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      mstore\n      sstore(0x06, shl(0xf0, 0xffff))\n      not(0x00)\n        /* \"src/curve/stable/StableMintBurn.sol\":1286:1299  \"SP::swapFee\" */\n      dup1\n        /* \"src/ReservoirPair.sol\":3519:3536  type(uint256).max */\n      0x08\n        /* \"src/curve/stable/StableMintBurn.sol\":1286:1299  \"SP::swapFee\" */\n      sstore\n        /* \"src/ReservoirPair.sol\":3654:3671  type(uint256).max */\n      0x0a\n        /* \"src/curve/stable/StableMintBurn.sol\":1286:1299  \"SP::swapFee\" */\n      sstore\n        /* \"src/ReservoirPair.sol\":3899:3909  msg.sender */\n      caller\n        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */\n      0xe0\n        /* \"src/ReservoirPair.sol\":3874:3910  factory = GenericFactory(msg.sender) */\n      mstore\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */\n      0x0100\n        /* \"src/ReservoirPair.sol\":3920:3943  token0 = ERC20(aToken0) */\n      mstore\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */\n      0x0120\n        /* \"src/ReservoirPair.sol\":3953:3976  token1 = ERC20(aToken1) */\n      mstore\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      mload(0x40)\n        /* \"src/ReservoirPair.sol\":4011:4041  abi.encodePacked(aSwapFeeName) */\n      tag_52\n      dup2\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      tag_53\n      0x20\n        /* \"src/ReservoirPair.sol\":4011:4041  abi.encodePacked(aSwapFeeName) */\n      dup3\n      add\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      dup1\n      swap6\n      tag_4\n      jump\t// in\n    tag_53:\n        /* \"src/ReservoirPair.sol\":4011:4041  abi.encodePacked(aSwapFeeName) */\n      sub\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      not(0x1f)\n        /* \"src/ReservoirPair.sol\":4011:4041  abi.encodePacked(aSwapFeeName) */\n      dup2\n      add\n      dup4\n      mstore\n      dup3\n      tag_2\n      jump\t// in\n    tag_52:\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      mload\n        /* \"src/ReservoirPair.sol\":4001:4042  keccak256(abi.encodePacked(aSwapFeeName)) */\n      swap1\n      keccak256\n        /* \"src/ReservoirPair.sol\":3987:4042  swapFeeName = keccak256(abi.encodePacked(aSwapFeeName)) */\n      0x0180\n      mstore\n      tag_54\n      tag_9\n      jump\t// in\n    tag_54:\n      tag_55\n      tag_10\n      jump\t// in\n    tag_55:\n        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */\n      0x0100\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      mload\n      mload(0x40)\n      shl(0xe0, 0x313ce567)\n        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */\n      dup2\n      mstore\n      0x04\n      swap2\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      0x20\n      swap1\n      dup3\n      swap1\n        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */\n      dup5\n      swap1\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      dup3\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_62\n      jumpi\n        /* \"src/ReservoirPair.sol\":4151:4173  18 - token0.decimals() */\n      tag_58\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      0xff\n        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */\n      swap2\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      tag_59\n        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */\n      swap4\n      0x00\n      swap2\n      tag_66\n      jumpi\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n    tag_61:\n        /* \"src/ReservoirPair.sol\":4151:4173  18 - token0.decimals() */\n      pop\n      tag_6\n      jump\t// in\n    tag_58:\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      and\n      tag_7\n      jump\t// in\n    tag_59:\n        /* \"src/ReservoirPair.sol\":4107:4174  token0PrecisionMultiplier = uint128(10) ** (18 - token0.decimals()) */\n      dup3\n      mstore\n        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */\n      0x0120\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      mload\n      mload(0x40)\n      shl(0xe0, 0x313ce567)\n        /* \"src/ReservoirPair.sol\":4233:4250  token1.decimals() */\n      dup2\n      mstore\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      swap1\n      0x20\n      swap1\n      dup3\n      swap1\n      dup5\n      swap1\n      dup3\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"src/ReservoirPair.sol\":4233:4250  token1.decimals() */\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_62\n      jumpi\n        /* \"src/ReservoirPair.sol\":4228:4250  18 - token1.decimals() */\n      tag_58\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      0xff\n        /* \"src/ReservoirPair.sol\":4233:4250  token1.decimals() */\n      swap2\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      tag_65\n        /* \"src/ReservoirPair.sol\":4233:4250  token1.decimals() */\n      swap4\n      0x00\n      swap2\n      tag_66\n      jumpi\n        /* \"src/ReservoirPair.sol\":4228:4250  18 - token1.decimals() */\n      pop\n      tag_6\n      jump\t// in\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n    tag_65:\n        /* \"src/ReservoirPair.sol\":4184:4251  token1PrecisionMultiplier = uint128(10) ** (18 - token1.decimals()) */\n      swap1\n      0x0160\n      swap2\n      dup3\n      mstore\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */\n      0xe0\n        /* \"src/curve/stable/StableMintBurn.sol\":1286:1299  \"SP::swapFee\" */\n      mload\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      and\n        /* \"src/ReservoirPair.sol\":17490:17522  factory.read(ORACLE_CALLER_NAME) */\n      tag_68\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      mload(0x40)\n      tag_69\n      dup2\n      tag_1\n      jump\t// in\n    tag_69:\n      0x14\n      dup2\n      mstore\n      0x5368617265643a3a6f7261636c6543616c6c6572000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n        /* \"src/ReservoirPair.sol\":17490:17522  factory.read(ORACLE_CALLER_NAME) */\n      tag_11\n      jump\t// in\n    tag_68:\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      and\n        /* \"src/ReservoirPair.sol\":17562:17574  oracleCaller */\n      0x01000f\n        /* \"src/ReservoirPair.sol\":16881:16903  \"Shared::oracleCaller\" */\n      swap1\n      dup2\n      sload\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup2\n      and\n        /* \"src/ReservoirPair.sol\":17548:17574  lNewCaller != oracleCaller */\n      dup1\n      dup4\n      sub\n        /* \"src/ReservoirPair.sol\":17544:17690  if (lNewCaller != oracleCaller) {... */\n      tag_70\n      jumpi\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n    tag_71:\n      pop\n      pop\n        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */\n      0xe0\n        /* \"src/curve/stable/StableMintBurn.sol\":1286:1299  \"SP::swapFee\" */\n      mload\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      mload(0x40)\n        /* \"src/ReservoirPair.sol\":4309:4343  factory.read(MAX_CHANGE_RATE_NAME) */\n      tag_72\n      swap4\n      pop\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_73\n      dup3\n      tag_1\n      jump\t// in\n    tag_73:\n      0x15\n      dup3\n      mstore\n      0x5368617265643a3a6d61784368616e6765526174650000000000000000000000\n      0x20\n      dup4\n      add\n      mstore\n        /* \"src/ReservoirPair.sol\":4309:4343  factory.read(MAX_CHANGE_RATE_NAME) */\n      tag_11\n      jump\t// in\n    tag_72:\n        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */\n      0xe0\n        /* \"src/curve/stable/StableMintBurn.sol\":1286:1299  \"SP::swapFee\" */\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      and\n        /* \"src/ReservoirPair.sol\":3899:3909  msg.sender */\n      caller\n        /* \"src/ReservoirPair.sol\":3719:3749  msg.sender == address(factory) */\n      sub\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      tag_74\n      jumpi\n        /* \"src/ReservoirPair.sol\":17789:17807  0 < aMaxChangeRate */\n      dup1\n      iszero\n      iszero\n        /* \"src/ReservoirPair.sol\":17789:17847  0 < aMaxChangeRate && aMaxChangeRate <= MAX_CHANGE_PER_SEC */\n      dup1\n      tag_76\n      jumpi\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n    tag_77:\n        /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */\n      iszero\n      tag_78\n      jumpi\n        /* \"src/ReservoirPair.sol\":17917:17930  maxChangeRate */\n      0x01000d\n        /* \"src/ReservoirPair.sol\":17896:17947  MaxChangeRateUpdated(maxChangeRate, aMaxChangeRate) */\n      0x807b9f5907da3f00bf587e77bc07247e1c7ff5ae46c93a584b3a075be0b1bac2\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      0x40\n      dup3\n      sload\n      dup2\n      mload\n      swap1\n      dup2\n      mstore\n        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */\n      dup5\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      0x20\n        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */\n      dup3\n      add\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      mstore\n        /* \"src/ReservoirPair.sol\":17896:17947  MaxChangeRateUpdated(maxChangeRate, aMaxChangeRate) */\n      log1\n        /* \"src/curve/stable/StableMintBurn.sol\":1286:1299  \"SP::swapFee\" */\n      sstore\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      0x01\n        /* \"src/curve/stable/StableMintBurn.sol\":1464:1465  1 */\n      0x010011\n        /* \"src/curve/stable/StableMintBurn.sol\":1286:1299  \"SP::swapFee\" */\n      sstore\n        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */\n      0xe0\n        /* \"src/curve/stable/StableMintBurn.sol\":1286:1299  \"SP::swapFee\" */\n      mload\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      mload(0x40)\n        /* \"src/libraries/StableMath.sol\":320:323  100 */\n      0x64\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      and\n      swap1\n        /* \"src/curve/stable/StableMintBurn.sol\":1826:1870  factory.read(AMPLIFICATION_COEFFICIENT_NAME) */\n      tag_80\n      swap1\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      tag_81\n      dup2\n      tag_1\n      jump\t// in\n    tag_81:\n        /* \"src/curve/stable/StableMintBurn.sol\":1286:1299  \"SP::swapFee\" */\n      0x1c\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      dup2\n      mstore\n        /* \"src/curve/stable/StableMintBurn.sol\":1286:1299  \"SP::swapFee\" */\n      0x53503a3a616d706c696669636174696f6e436f656666696369656e7400000000\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      0x20\n        /* \"src/curve/stable/StableMintBurn.sol\":1286:1299  \"SP::swapFee\" */\n      dup3\n      add\n      mstore\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      swap3\n        /* \"src/curve/stable/StableMintBurn.sol\":1826:1870  factory.read(AMPLIFICATION_COEFFICIENT_NAME) */\n      tag_11\n      jump\t// in\n    tag_80:\n        /* \"src/libraries/StableMath.sol\":320:323  100 */\n      and\n      mul\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      0x01\n      dup1\n      0x40\n      shl\n      sub\n        /* \"src/libraries/StableMath.sol\":320:323  100 */\n      dup2\n      and\n      swap1\n      dup2\n      sub\n      tag_82\n      jumpi\n        /* \"src/curve/stable/StableMintBurn.sol\":1807:1814  ampData */\n      0x010010\n        /* \"src/libraries/StableMath.sol\":320:323  100 */\n      dup1\n      sload\n        /* \"src/curve/stable/StableMintBurn.sol\":1998:2013  block.timestamp */\n      timestamp\n        /* \"src/libraries/StableMath.sol\":320:323  100 */\n      0x80\n      dup2\n      swap1\n      shl\n      sub(shl(0xc0, 0x01), shl(0x80, 0x01))\n      and\n      not(sub(shl(0x40, 0x01), 0x01))\n      swap3\n      swap1\n      swap3\n      and\n      dup5\n      or\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      0x40\n        /* \"src/libraries/StableMath.sol\":320:323  100 */\n      shl\n      0xffffffffffffffff0000000000000000\n      and\n      dup5\n      or\n      swap2\n      swap1\n      swap2\n      or\n      0xc0\n      swap2\n      swap1\n      swap2\n      shl\n      not(sub(shl(0xc0, 0x01), 0x01))\n      and\n      or\n      swap1\n      sstore\n      0x64\n        /* \"src/curve/stable/StableMintBurn.sol\":2101:2170  ampData.initialA >= StableMath.MIN_A * uint64(StableMath.A_PRECISION) */\n      dup2\n      lt\n      iszero\n      swap1\n      dup2\n        /* \"src/curve/stable/StableMintBurn.sol\":2101:2259  ampData.initialA >= StableMath.MIN_A * uint64(StableMath.A_PRECISION)... */\n      tag_84\n      jumpi\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n    tag_85:\n        /* \"src/libraries/StableMath.sol\":607:613  10_000 */\n      pop\n      iszero\n      tag_86\n      jumpi\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      pop\n      mload(0x40)\n      swap1\n      dataSize(sub_0)\n      swap3\n      dup4\n      dataOffset(sub_0)\n      dup5\n      codecopy\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2142:2162  decimals = _decimals */\n      0x80\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      mload\n      dup4\n      assignImmutable(\"0xb7b2278e6c1d8d0abc309f6bf9256046dfb6cd1d61f6bb10388e8ea4928d3539\")\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2173:2205  INITIAL_CHAIN_ID = block.chainid */\n      0xa0\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      mload\n      dup4\n      assignImmutable(\"0x81290bb363e768cff9ff9a5d447e434874948b933698048b966fdf5d744bf636\")\n      mload(0xc0)\n      dup4\n      assignImmutable(\"0x34382e0db9f4d1365b2614bb97467901a574db9e05159d2f14a2053ade673b06\")\n        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */\n      0xe0\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      mload\n      dup4\n      assignImmutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")\n        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */\n      0x0100\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      mload\n      dup4\n      assignImmutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")\n        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */\n      0x0120\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      mload\n      dup4\n      assignImmutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")\n      mload\n      dup3\n      assignImmutable(\"0x372e991e4284f7d12d6b2461cce9899511b05ac053845de253542adb96f2dca0\")\n      mload\n      dup2\n      assignImmutable(\"0xc4ba931b733b92a51f51c0955dd7716c7a38f3de911d23a5d0fbd5d23c0fbe8c\")\n        /* \"src/ReservoirPair.sol\":3987:4042  swapFeeName = keccak256(abi.encodePacked(aSwapFeeName)) */\n      0x0180\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      mload\n      dup2\n      assignImmutable(\"0x4c21324e1a4fdca228db96f937188124acece199982b123b328bdd8fee41b354\")\n      return\n        /* \"src/libraries/StableMath.sol\":607:613  10_000 */\n    tag_86:\n        /* \"src/libraries/StableMath.sol\":320:323  100 */\n      0x64\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      swap1\n      0x20\n      mload(0x40)\n      swap2\n      shl(0xe5, 0x461bcd)\n        /* \"src/libraries/StableMath.sol\":607:613  10_000 */\n      dup4\n      mstore\n      dup3\n      add\n      mstore\n      0x0d\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x98, 0x53503a20494e56414c49445f41)\n      0x44\n      dup3\n      add\n      mstore\n      revert\n        /* \"src/curve/stable/StableMintBurn.sol\":2101:2259  ampData.initialA >= StableMath.MIN_A * uint64(StableMath.A_PRECISION)... */\n    tag_84:\n        /* \"src/libraries/StableMath.sol\":521:522  1 */\n      0x0f4240\n        /* \"src/curve/stable/StableMintBurn.sol\":2190:2259  ampData.initialA <= StableMath.MAX_A * uint64(StableMath.A_PRECISION) */\n      swap2\n      pop\n      gt\n      iszero\n        /* \"src/curve/stable/StableMintBurn.sol\":2101:2259  ampData.initialA >= StableMath.MIN_A * uint64(StableMath.A_PRECISION)... */\n      codesize\n      jump(tag_85)\n        /* \"src/libraries/StableMath.sol\":320:323  100 */\n    tag_82:\n      0x11\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      dup3\n      shl(0xe0, 0x4e487b71)\n      0x00\n        /* \"src/libraries/StableMath.sol\":320:323  100 */\n      mstore\n      mstore\n      revert(0x00, 0x24)\n        /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */\n    tag_78:\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n        /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */\n      dup2\n      mstore\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      0x20\n        /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */\n      dup2\n      dup5\n      add\n      mstore\n      0x1d\n      0x24\n      dup3\n      add\n        /* \"src/libraries/StableMath.sol\":607:613  10_000 */\n      mstore\n        /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */\n      0x4f573a20494e56414c49445f4348414e47455f5045525f5345434f4e44000000\n        /* \"src/libraries/StableMath.sol\":607:613  10_000 */\n      0x44\n      dup3\n      add\n        /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"src/ReservoirPair.sol\":17789:17847  0 < aMaxChangeRate && aMaxChangeRate <= MAX_CHANGE_PER_SEC */\n    tag_76:\n        /* \"src/ReservoirPair.sol\":17811:17847  aMaxChangeRate <= MAX_CHANGE_PER_SEC */\n      pop\n        /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */\n      0x2386f26fc10000\n        /* \"src/ReservoirPair.sol\":17811:17847  aMaxChangeRate <= MAX_CHANGE_PER_SEC */\n      dup2\n      gt\n      iszero\n        /* \"src/ReservoirPair.sol\":17789:17847  0 < aMaxChangeRate && aMaxChangeRate <= MAX_CHANGE_PER_SEC */\n      jump(tag_77)\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n    tag_74:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      dup2\n      dup5\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n        /* \"src/libraries/StableMath.sol\":607:613  10_000 */\n      mstore\n      shl(0xa1, 0x281d102327a92124a22222a7)\n      0x44\n      dup3\n      add\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"src/ReservoirPair.sol\":17544:17690  if (lNewCaller != oracleCaller) {... */\n    tag_70:\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      0x40\n        /* \"src/ReservoirPair.sol\":17595:17640  OracleCallerUpdated(oracleCaller, lNewCaller) */\n      0x262681b3b01b61ff6d02569759105771205cdd274fb3c45535b50632e0a3523f\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      swap2\n      dup2\n      mload\n      swap1\n      dup2\n      mstore\n        /* \"src/ReservoirPair.sol\":16881:16903  \"Shared::oracleCaller\" */\n      dup5\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      0x20\n        /* \"src/ReservoirPair.sol\":16881:16903  \"Shared::oracleCaller\" */\n      dup3\n      add\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      mstore\n        /* \"src/ReservoirPair.sol\":17595:17640  OracleCallerUpdated(oracleCaller, lNewCaller) */\n      log1\n      not(sub(shl(0xa0, 0x01), 0x01))\n        /* \"src/ReservoirPair.sol\":16881:16903  \"Shared::oracleCaller\" */\n      and\n      or\n      swap1\n      sstore\n        /* \"src/ReservoirPair.sol\":17544:17690  if (lNewCaller != oracleCaller) {... */\n      codesize\n      dup1\n      dup1\n      dup1\n      jump(tag_71)\n        /* \"src/ReservoirPair.sol\":4233:4250  token1.decimals() */\n    tag_66:\n      tag_88\n      swap2\n      pop\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      0x20\n        /* \"src/ReservoirPair.sol\":4233:4250  token1.decimals() */\n      returndatasize\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      0x20\n        /* \"src/ReservoirPair.sol\":4233:4250  token1.decimals() */\n      gt\n      tag_89\n      jumpi\n    tag_90:\n      tag_91\n      dup2\n      dup4\n      tag_2\n      jump\t// in\n    tag_91:\n      dup2\n      add\n      swap1\n      tag_5\n      jump\t// in\n    tag_88:\n      codesize\n      jump(tag_61)\n    tag_89:\n      pop\n      returndatasize\n      jump(tag_90)\n    tag_62:\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n    tag_50:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_45:\n      pop\n      0x00\n      dup1\n      dup1\n      mstore\n      swap1\n      swap2\n      0x00\n      dup1\n      mload\n      0x20\n      data_510e4e770828ddbf7f7b00ab00a9f6adaf81c0dc9cc85f1f8249c256942d61d9\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n    tag_96:\n      dup2\n      dup4\n      lt\n      tag_97\n      jumpi\n      pop\n      pop\n      swap1\n      0x20\n      tag_47\n      swap3\n      dup3\n      add\n      add\n      jump(tag_46)\n    tag_97:\n      0x20\n      swap2\n      swap4\n      pop\n      dup1\n      0x01\n      swap2\n      sload\n      dup4\n      dup6\n      dup9\n      add\n      add\n      mstore\n      add\n      swap2\n      add\n      swap1\n      swap2\n      dup4\n      swap3\n      jump(tag_96)\n    tag_43:\n      not(0xff)\n      and\n      dup7\n      mstore\n      pop\n      tag_47\n      swap3\n      iszero\n      iszero\n      0x05\n      shl\n      dup3\n      add\n      0x20\n      add\n      swap1\n      pop\n      jump(tag_46)\n    tag_39:\n      add\n      mload\n      swap1\n      pop\n      codesize\n      dup1\n      jump(tag_40)\n    tag_37:\n      not(0x1f)\n      dup3\n      and\n      swap6\n      mstore(0x00, 0x01)\n      keccak256(0x00, 0x20)\n      swap2\n      0x00\n    tag_99:\n      dup9\n      dup2\n      lt\n      tag_100\n      jumpi\n      pop\n      dup4\n      0x01\n      swap6\n      swap7\n      swap8\n      swap9\n      lt\n      tag_102\n      jumpi\n    tag_103:\n      pop\n      pop\n      pop\n      dup2\n      shl\n      add\n      0x01\n      sstore\n      jump(tag_41)\n    tag_102:\n      add\n      mload\n      not(0x00)\n      0xf8\n      dup5\n      0x03\n      shl\n      and\n      shr\n      not\n      and\n      swap1\n      sstore\n      codesize\n      dup1\n      dup1\n      jump(tag_103)\n    tag_100:\n      swap2\n      swap3\n      0x20\n      0x01\n      dup2\n      swap3\n      dup7\n      dup6\n      add\n      mload\n      dup2\n      sstore\n      add\n      swap5\n      add\n      swap3\n      add\n      jump(tag_99)\n    tag_35:\n      mstore(0x00, 0x01)\n      keccak256(0x00, 0x20)\n      dup8\n      dup1\n      dup6\n      add\n      0x05\n      shr\n      dup3\n      add\n      swap3\n      0x20\n      dup7\n      lt\n      tag_104\n      jumpi\n    tag_105:\n      add\n      0x05\n      shr\n      add\n      swap1\n    tag_106:\n      dup2\n      dup2\n      lt\n      tag_107\n      jumpi\n      pop\n      jump(tag_36)\n    tag_107:\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_106)\n    tag_104:\n      swap3\n      pop\n      dup2\n      swap3\n      jump(tag_105)\n    tag_29:\n      add\n      mload\n      swap1\n      pop\n      codesize\n      dup1\n      jump(tag_30)\n    tag_27:\n      0x00\n      dup1\n      dup1\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_510e4e770828ddbf7f7b00ab00a9f6adaf81c0dc9cc85f1f8249c256942d61d9\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap4\n      pop\n      not(0x1f)\n      dup6\n      and\n      swap1\n    tag_109:\n      dup2\n      dup2\n      lt\n      tag_110\n      jumpi\n      pop\n      swap1\n      dup5\n      0x01\n      swap6\n      swap5\n      swap4\n      swap3\n      lt\n      tag_112\n      jumpi\n    tag_113:\n      pop\n      pop\n      pop\n      dup2\n      shl\n      add\n      0x00\n      sstore\n      jump(tag_31)\n    tag_112:\n      add\n      mload\n      not(0x00)\n      0xf8\n      dup5\n      0x03\n      shl\n      and\n      shr\n      not\n      and\n      swap1\n      sstore\n      codesize\n      dup1\n      dup1\n      jump(tag_113)\n    tag_110:\n      swap3\n      swap4\n      0x20\n      0x01\n      dup2\n      swap3\n      dup8\n      dup7\n      add\n      mload\n      dup2\n      sstore\n      add\n      swap6\n      add\n      swap4\n      add\n      jump(tag_109)\n    tag_25:\n      swap1\n      swap2\n      pop\n      0x00\n      dup1\n      mstore\n      keccak256(0x00, 0x20)\n      dup9\n      dup1\n      dup6\n      add\n      0x05\n      shr\n      dup3\n      add\n      swap3\n      0x20\n      dup7\n      lt\n      tag_114\n      jumpi\n    tag_115:\n      swap1\n      dup6\n      swap5\n      swap4\n      swap3\n      swap2\n      add\n      0x05\n      shr\n      add\n      swap1\n    tag_116:\n      dup2\n      dup2\n      lt\n      tag_117\n      jumpi\n      pop\n      jump(tag_26)\n    tag_117:\n      0x00\n      dup2\n      sstore\n      dup5\n      swap4\n      pop\n      0x01\n      add\n      jump(tag_116)\n    tag_114:\n      swap3\n      pop\n      dup2\n      swap3\n      jump(tag_115)\n    tag_15:\n      0x00\n      dup1\n      revert\n    tag_1:\n      0x40\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      or\n      tag_50\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_2:\n      0x1f\n      swap1\n      swap2\n      add\n      not(0x1f)\n      and\n      dup2\n      add\n      swap1\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      swap1\n      dup3\n      lt\n      or\n      tag_50\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_3:\n      mload\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_15\n      jumpi\n      jump\t// out\n    tag_4:\n      swap1\n      dup2\n      mload\n      swap2\n      0x00\n    tag_125:\n      dup4\n      dup2\n      lt\n      tag_126\n      jumpi\n      pop\n      pop\n      add\n      0x00\n      dup2\n      mstore\n      swap1\n      jump\t// out\n    tag_126:\n      dup1\n      0x20\n      dup1\n      swap3\n      dup5\n      add\n      add\n      mload\n      dup2\n      dup6\n      add\n      mstore\n      add\n      jump(tag_125)\n    tag_5:\n      swap1\n      dup2\n      0x20\n      swap2\n      sub\n      slt\n      tag_15\n      jumpi\n      mload\n      0xff\n      dup2\n      and\n      dup2\n      sub\n      tag_15\n      jumpi\n      swap1\n      jump\t// out\n    tag_6:\n      0xff\n      and\n      0x12\n      sub\n      swap1\n      0xff\n      dup3\n      gt\n      tag_132\n      jumpi\n      jump\t// out\n    tag_132:\n      shl(0xe0, 0x4e487b71)\n        /* \"src/libraries/StableMath.sol\":320:323  100 */\n      0x00\n      mstore\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n    tag_7:\n      dup1\n      iszero\n      tag_134\n      jumpi\n      0x01\n      swap1\n      0x20\n      dup2\n      lt\n      dup3\n      and\n      0x4e\n      dup3\n      lt\n      dup4\n      and\n      or\n      tag_136\n      jumpi\n      dup2\n      swap1\n      0x0a\n      swap3\n    tag_138:\n      dup1\n      dup3\n      gt\n      tag_139\n      jumpi\n      pop\n      pop\n      sub(shl(0x80, 0x01), 0x01)\n      dup3\n      swap1\n      div\n      dup2\n      gt\n      tag_132\n      jumpi\n      mul\n      swap1\n      jump\t// out\n    tag_139:\n      swap1\n      swap3\n      sub(shl(0x80, 0x01), 0x01)\n      dup2\n      swap1\n      div\n      dup2\n      gt\n      tag_132\n      jumpi\n      dup2\n      dup5\n      and\n      tag_145\n      jumpi\n    tag_146:\n      dup1\n      mul\n      swap3\n      dup2\n      shr\n      swap1\n      jump(tag_138)\n    tag_145:\n      dup1\n      swap3\n      mul\n      swap2\n      jump(tag_146)\n    tag_136:\n      0x0a\n      exp\n      swap2\n      swap1\n      pop\n      sub(shl(0x80, 0x01), 0x01)\n      dup3\n      gt\n      tag_132\n      jumpi\n      jump\t// out\n    tag_134:\n      pop\n      0x01\n      swap1\n      jump\t// out\n    tag_8:\n      swap1\n      0x01\n      dup3\n      dup2\n      shr\n      swap3\n      and\n      dup1\n      iszero\n      tag_149\n      jumpi\n    tag_150:\n      0x20\n      dup4\n      lt\n      eq\n      tag_151\n      jumpi\n      jump\t// out\n    tag_151:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x22)\n      revert(0x00, 0x24)\n    tag_149:\n      swap2\n      0x7f\n      and\n      swap2\n      jump(tag_150)\n        /* \"src/ReservoirPair.sol\":7293:7635  function updateSwapFee() public {... */\n    tag_9:\n        /* \"src/ReservoirPair.sol\":7354:7367  customSwapFee */\n      0x08\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      sload\n      0x00\n      not(0x00)\n        /* \"src/ReservoirPair.sol\":7354:7388  customSwapFee != type(uint256).max */\n      dup3\n      eq\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      tag_153\n      jumpi\n        /* \"src/ReservoirPair.sol\":7354:7443  customSwapFee != type(uint256).max ? customSwapFee : factory.get(swapFeeName).toUint256() */\n      pop\n    tag_155:\n        /* \"src/ReservoirPair.sol\":7469:7476  swapFee */\n      0x07\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      sload\n        /* \"src/ReservoirPair.sol\":7457:7476  _swapFee == swapFee */\n      dup1\n      dup3\n      eq\n        /* \"src/ReservoirPair.sol\":7453:7485  if (_swapFee == swapFee) return; */\n      tag_156\n      jumpi\n        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */\n      0x4e20\n        /* \"src/ReservoirPair.sol\":7503:7527  _swapFee <= MAX_SWAP_FEE */\n      dup3\n      gt\n        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */\n      tag_158\n      jumpi\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      0x40\n        /* \"src/ReservoirPair.sol\":7567:7600  SwapFeeChanged(swapFee, _swapFee) */\n      0xad321f810529281bbb90384fd6fecbdda41509a5ccd7bd5aed986ed827f6a026\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      swap2\n      dup2\n      mload\n      swap1\n      dup2\n      mstore\n        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */\n      dup4\n      0x20\n      dup3\n      add\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      mstore\n        /* \"src/ReservoirPair.sol\":7567:7600  SwapFeeChanged(swapFee, _swapFee) */\n      log1\n        /* \"src/ReservoirPair.sol\":7469:7476  swapFee */\n      0x07\n        /* \"src/curve/stable/StableMintBurn.sol\":1286:1299  \"SP::swapFee\" */\n      sstore\n        /* \"src/ReservoirPair.sol\":7293:7635  function updateSwapFee() public {... */\n      jump\t// out\n        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */\n    tag_158:\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x13\n      0x24\n      dup3\n      add\n        /* \"src/libraries/StableMath.sol\":607:613  10_000 */\n      mstore\n        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */\n      0x503a20494e56414c49445f535741505f46454500000000000000000000000000\n        /* \"src/libraries/StableMath.sol\":607:613  10_000 */\n      0x44\n      dup3\n      add\n        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"src/ReservoirPair.sol\":7453:7485  if (_swapFee == swapFee) return; */\n    tag_156:\n        /* \"src/ReservoirPair.sol\":7478:7485  return; */\n      pop\n      pop\n      jump\t// out\n        /* \"src/ReservoirPair.sol\":7354:7443  customSwapFee != type(uint256).max ? customSwapFee : factory.get(swapFeeName).toUint256() */\n    tag_153:\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      swap1\n      pop\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n        /* \"src/ReservoirPair.sol\":7407:7414  factory */\n      0xe0\n        /* \"src/curve/stable/StableMintBurn.sol\":1286:1299  \"SP::swapFee\" */\n      mload\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      and\n        /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */\n      0x20\n        /* \"src/ReservoirPair.sol\":7419:7430  swapFeeName */\n      0x0180\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      mload\n      0x24\n      mload(0x40)\n      dup1\n      swap5\n      dup2\n      swap4\n      shl(0xe6, 0x023aa9ab)\n        /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */\n      dup4\n      mstore\n      0x04\n      dup4\n      add\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      mstore\n        /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */\n      gas\n      staticcall\n      swap2\n      dup3\n      iszero\n      tag_160\n      jumpi\n      dup1\n      swap3\n      tag_162\n      jumpi\n        /* \"src/ReservoirPair.sol\":7354:7443  customSwapFee != type(uint256).max ? customSwapFee : factory.get(swapFeeName).toUint256() */\n    tag_163:\n      pop\n      pop\n      jump(tag_155)\n        /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */\n    tag_162:\n      swap1\n      swap2\n      pop\n      0x20\n      dup3\n      returndatasize\n      dup3\n      gt\n      tag_164\n      jumpi\n    tag_165:\n      dup2\n      tag_166\n      0x20\n      swap4\n      dup4\n      tag_2\n      jump\t// in\n    tag_166:\n      dup2\n      add\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      sub\n      slt\n      tag_167\n      jumpi\n      pop\n      mload\n        /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */\n      codesize\n      dup1\n      jump(tag_163)\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n    tag_167:\n      dup1\n      revert\n        /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */\n    tag_164:\n      returndatasize\n      swap2\n      pop\n      jump(tag_165)\n    tag_160:\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      mload(0x40)\n      swap1\n      returndatasize\n      swap1\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"src/ReservoirPair.sol\":7641:8058  function updatePlatformFee() public {... */\n    tag_10:\n        /* \"src/ReservoirPair.sol\":7722:7739  customPlatformFee */\n      0x0a\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      sload\n      not(0x00)\n        /* \"src/ReservoirPair.sol\":7722:7760  customPlatformFee != type(uint256).max */\n      dup2\n      eq\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      tag_169\n      jumpi\n        /* \"src/ReservoirPair.sol\":7722:7826  customPlatformFee != type(uint256).max ? customPlatformFee : factory.read(PLATFORM_FEE_NAME).toUint256() */\n    tag_171:\n        /* \"src/ReservoirPair.sol\":7856:7867  platformFee */\n      0x09\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      sload\n        /* \"src/ReservoirPair.sol\":7840:7867  _platformFee == platformFee */\n      dup1\n      dup3\n      eq\n        /* \"src/ReservoirPair.sol\":7836:7876  if (_platformFee == platformFee) return; */\n      tag_156\n      jumpi\n        /* \"src/ReservoirPair.sol\":2789:2796  500_000 */\n      0x07a120\n        /* \"src/ReservoirPair.sol\":7894:7926  _platformFee <= MAX_PLATFORM_FEE */\n      dup3\n      gt\n        /* \"src/ReservoirPair.sol\":2789:2796  500_000 */\n      tag_174\n      jumpi\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      0x40\n        /* \"src/ReservoirPair.sol\":7970:8015  PlatformFeeChanged(platformFee, _platformFee) */\n      0xc98a8b10b63c929f7799380bb4a0c444c713ebf74d8732f944c915034121aad1\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      swap2\n      dup2\n      mload\n      swap1\n      dup2\n      mstore\n        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */\n      dup4\n      0x20\n      dup3\n      add\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      mstore\n        /* \"src/ReservoirPair.sol\":7970:8015  PlatformFeeChanged(platformFee, _platformFee) */\n      log1\n        /* \"src/ReservoirPair.sol\":7856:7867  platformFee */\n      0x09\n        /* \"src/curve/stable/StableMintBurn.sol\":1286:1299  \"SP::swapFee\" */\n      sstore\n        /* \"src/ReservoirPair.sol\":7641:8058  function updatePlatformFee() public {... */\n      jump\t// out\n        /* \"src/ReservoirPair.sol\":2789:2796  500_000 */\n    tag_174:\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n        /* \"src/ReservoirPair.sol\":2789:2796  500_000 */\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x17\n      0x24\n      dup3\n      add\n        /* \"src/libraries/StableMath.sol\":607:613  10_000 */\n      mstore\n        /* \"src/ReservoirPair.sol\":2789:2796  500_000 */\n      0x503a20494e56414c49445f504c4154464f524d5f464545000000000000000000\n        /* \"src/libraries/StableMath.sol\":607:613  10_000 */\n      0x44\n      dup3\n      add\n        /* \"src/ReservoirPair.sol\":2789:2796  500_000 */\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"src/ReservoirPair.sol\":7722:7826  customPlatformFee != type(uint256).max ? customPlatformFee : factory.read(PLATFORM_FEE_NAME).toUint256() */\n    tag_169:\n      pop\n        /* \"src/ReservoirPair.sol\":7783:7790  factory */\n      0xe0\n        /* \"src/curve/stable/StableMintBurn.sol\":1286:1299  \"SP::swapFee\" */\n      mload\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      mload(0x40)\n        /* \"src/ReservoirPair.sol\":7783:7814  factory.read(PLATFORM_FEE_NAME) */\n      tag_176\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      and\n      tag_177\n      dup3\n      tag_1\n      jump\t// in\n    tag_177:\n      0x13\n      dup3\n      mstore\n      0x5368617265643a3a706c6174666f726d46656500000000000000000000000000\n      0x20\n      dup4\n      add\n      mstore\n        /* \"src/ReservoirPair.sol\":7783:7814  factory.read(PLATFORM_FEE_NAME) */\n      tag_11\n      jump\t// in\n    tag_176:\n        /* \"src/ReservoirPair.sol\":7722:7826  customPlatformFee != type(uint256).max ? customPlatformFee : factory.read(PLATFORM_FEE_NAME).toUint256() */\n      jump(tag_171)\n        /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */\n    tag_11:\n      swap1\n        /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */\n      0x20\n        /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */\n      swap1\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      mload(0x40)\n        /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */\n      tag_178\n      dup2\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      tag_53\n        /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */\n      dup6\n      dup3\n      add\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      dup1\n      swap6\n      tag_4\n      jump\t// in\n        /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */\n    tag_178:\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      mload\n        /* \"src/libraries/FactoryStore.sol\":476:509  keccak256(abi.encodePacked(aKey)) */\n      swap1\n      keccak256\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      mload(0x40)\n      shl(0xe6, 0x023aa9ab)\n        /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      swap2\n      swap1\n      swap2\n      mstore\n      swap2\n      dup3\n      swap1\n      0x24\n      swap1\n      dup3\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_62\n      jumpi\n      0x00\n      swap2\n      tag_182\n      jumpi\n        /* \"src/libraries/FactoryStore.sol\":456:510  return aFactory.get(keccak256(abi.encodePacked(aKey))) */\n      pop\n        /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */\n    tag_182:\n      swap1\n        /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */\n      0x20\n        /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */\n      dup3\n      returndatasize\n      dup3\n      gt\n      tag_184\n      jumpi\n    tag_185:\n      dup2\n      tag_186\n        /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */\n      0x20\n        /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */\n      swap4\n      dup4\n      tag_2\n      jump\t// in\n    tag_186:\n      dup2\n      add\n        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n      sub\n      slt\n      tag_167\n      jumpi\n      pop\n      mload\n        /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */\n    tag_184:\n      returndatasize\n      swap2\n      pop\n      jump(tag_185)\n    stop\n    data_510e4e770828ddbf7f7b00ab00a9f6adaf81c0dc9cc85f1f8249c256942d61d9 290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563\n\n    sub_0: assembly {\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x80\n          0x40\n          swap1\n          dup1\n          dup3\n          mstore\n          0x04\n          swap2\n          dup3\n          calldatasize\n          lt\n          iszero\n          tag_61\n          jumpi\n          0x00\n          dup1\n          revert\n        tag_61:\n          0x00\n          swap3\n          dup4\n          calldataload\n          0xe0\n          shr\n          swap3\n          dup4\n          0x06fdde03\n          eq\n          tag_63\n          jumpi\n          pop\n          dup3\n          0x0902f1ac\n          eq\n          tag_65\n          jumpi\n          dup3\n          0x095ea7b3\n          eq\n          tag_67\n          jumpi\n          dup3\n          0x0c472afd\n          eq\n          tag_69\n          jumpi\n          dup3\n          0x0dfe1681\n          eq\n          tag_71\n          jumpi\n          dup3\n          0x18160ddd\n          eq\n          tag_73\n          jumpi\n          dup3\n          0x23b872dd\n          eq\n          tag_75\n          jumpi\n          dup3\n          0x26232a2e\n          eq\n          tag_77\n          jumpi\n          dup3\n          0x313ce567\n          eq\n          tag_79\n          jumpi\n          dup3\n          0x31c49074\n          eq\n          tag_81\n          jumpi\n          dup3\n          0x3644e515\n          eq\n          tag_83\n          jumpi\n          dup3\n          0x3998a681\n          eq\n          tag_85\n          jumpi\n          dup3\n          0x495bc0fb\n          eq\n          tag_87\n          jumpi\n          dup3\n          0x4dfa1ff9\n          eq\n          tag_89\n          jumpi\n          dup3\n          0x54cf2aeb\n          eq\n          tag_91\n          jumpi\n          dup3\n          0x598362f0\n          eq\n          tag_93\n          jumpi\n          dup3\n          0x6a627842\n          eq\n          tag_95\n          jumpi\n          dup3\n          0x70a08231\n          eq\n          tag_97\n          jumpi\n          dup3\n          0x7c3cbc7c\n          eq\n          tag_99\n          jumpi\n          dup3\n          0x7ecebe00\n          eq\n          tag_101\n          jumpi\n          dup3\n          0x85faf624\n          eq\n          tag_103\n          jumpi\n          dup3\n          0x89afcb44\n          eq\n          tag_105\n          jumpi\n          dup3\n          0x94217ad1\n          eq\n          tag_107\n          jumpi\n          dup3\n          0x9568e73b\n          eq\n          tag_109\n          jumpi\n          dup3\n          0x95d89b41\n          eq\n          tag_111\n          jumpi\n          dup3\n          0x97e37764\n          eq\n          tag_113\n          jumpi\n          dup3\n          0x9be65a60\n          eq\n          tag_115\n          jumpi\n          dup3\n          0x9d62a694\n          eq\n          tag_117\n          jumpi\n          dup3\n          0xa9059cbb\n          eq\n          tag_119\n          jumpi\n          dup3\n          0xab3d8544\n          eq\n          tag_121\n          jumpi\n          dup3\n          0xad7853e9\n          eq\n          tag_123\n          jumpi\n          dup3\n          0xafb4a43b\n          eq\n          tag_125\n          jumpi\n          dup3\n          0xb62221e0\n          eq\n          tag_127\n          jumpi\n          dup3\n          0xba9a7a56\n          eq\n          tag_129\n          jumpi\n          dup3\n          0xbc25cf77\n          eq\n          tag_131\n          jumpi\n          dup3\n          0xc45a0155\n          eq\n          tag_133\n          jumpi\n          dup3\n          0xc58771ef\n          eq\n          tag_135\n          jumpi\n          dup3\n          0xd0ebdbe7\n          eq\n          tag_137\n          jumpi\n          dup3\n          0xd21220a7\n          eq\n          tag_139\n          jumpi\n          dup3\n          0xd505accf\n          eq\n          tag_141\n          jumpi\n          dup3\n          0xdb6488dc\n          eq\n          tag_143\n          jumpi\n          dup3\n          0xdbc781bc\n          eq\n          tag_145\n          jumpi\n          dup3\n          0xdd62ed3e\n          eq\n          tag_147\n          jumpi\n          dup3\n          0xe12bd9d8\n          eq\n          tag_149\n          jumpi\n          pop\n          dup2\n          0xe9bdf7b8\n          eq\n          tag_151\n          jumpi\n          pop\n          0xfff6cae9\n          eq\n          tag_153\n          jumpi\n          0x00\n          dup1\n          revert\n        tag_153:\n          jumpi(tag_157, callvalue)\n          dup1\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_157\n          jumpi\n            /* \"src/ReservoirPair.sol\":6307:6326  lBlockTimestampLast */\n          tag_159\n            /* \"src/ReservoirPair.sol\":6191:6225  _syncManaged(lReserve0, lReserve1) */\n          tag_160\n            /* \"src/ReservoirPair.sol\":6142:6156  _lockAndLoad() */\n          tag_161\n          tag_12\n          jump\t// in\n        tag_161:\n          pop\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap3\n          swap2\n          0xffffffffffffffffffffffffff\n          swap2\n          dup3\n          and\n          swap2\n          and\n            /* \"src/ReservoirPair.sol\":6191:6225  _syncManaged(lReserve0, lReserve1) */\n          tag_26\n          jump\t// in\n        tag_160:\n            /* \"src/ReservoirPair.sol\":6253:6267  _totalToken0() */\n          swap1\n          tag_162\n          tag_23\n          jump\t// in\n        tag_162:\n            /* \"src/ReservoirPair.sol\":6269:6283  _totalToken1() */\n          tag_163\n          tag_24\n          jump\t// in\n        tag_163:\n            /* \"src/ReservoirPair.sol\":6307:6326  lBlockTimestampLast */\n          swap1\n          tag_21\n          jump\t// in\n        tag_159:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup1\n          return\n        tag_157:\n          dup1\n          revert\n        tag_151:\n          swap1\n          pop\n          jumpi(tag_166, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_166\n          jumpi\n          0x20\n          swap1\n          0xffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":12800:12828  uint104 public token0Managed */\n          0x0c\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n          and\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_166:\n          pop\n          dup1\n          revert\n        tag_149:\n          dup4\n          jumpi(tag_157, callvalue)\n          jumpi(tag_157, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x80))\n          calldataload(0x24)\n          dup1\n          iszero\n          iszero\n          sub\n          tag_157\n          jumpi\n          calldataload(0x44)\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup2\n          and\n          sub\n          tag_157\n          jumpi\n          calldataload(0x64)\n          0xffffffffffffffff\n          dup1\n          dup3\n          gt\n          tag_180\n          jumpi\n          calldatasize\n          0x23\n          dup4\n          add\n          slt\n          iszero\n          tag_180\n          jumpi\n          dup2\n          dup5\n          add\n          calldataload\n          swap1\n          dup2\n          gt\n          tag_180\n          jumpi\n          calldatasize\n          swap2\n          add\n          0x24\n          add\n          gt\n          tag_157\n          jumpi\n          pop\n          0x20\n          0x64\n          swap3\n          mload\n            /* \"src/curve/stable/StableMintBurn.sol\":6123:6148  revert(\"SMB: IMPOSSIBLE\") */\n          swap2\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          dup3\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mstore\n          0x0f\n          0x24\n          dup3\n          add\n          mstore\n          0x534d423a20494d504f535349424c450000000000000000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n            /* \"src/curve/stable/StableMintBurn.sol\":6123:6148  revert(\"SMB: IMPOSSIBLE\") */\n          revert\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n        tag_180:\n          dup3\n          dup1\n          revert\n        tag_147:\n          swap1\n          swap2\n          pop\n          jumpi(tag_180, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_180\n          jumpi\n          0x20\n          swap3\n          dup3\n          swap2\n          tag_188\n          tag_7\n          jump\t// in\n        tag_188:\n          tag_189\n          tag_8\n          jump\t// in\n        tag_189:\n          swap2\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup1\n          swap3\n          and\n          dup5\n          mstore\n          dup7\n          mstore\n          dup4\n          dup4\n          keccak256\n          swap2\n          and\n          dup3\n          mstore\n          dup5\n          mstore\n          keccak256\n          sload\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_145:\n          dup4\n          jumpi(tag_157, callvalue)\n          dup1\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_157\n          jumpi\n          tag_159\n          tag_16\n          jump\t// in\n        tag_143:\n          dup4\n          dup3\n          jumpi(tag_166, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_166\n          jumpi\n          0x20\n          swap1\n          mload\n            /* \"src/ReservoirPair.sol\":2723:2732  1_000_000 */\n          0x0f4240\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup2\n          mstore\n          return\n        tag_141:\n          dup4\n          dup3\n          jumpi(tag_166, callvalue)\n          jumpi(tag_166, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0xe0))\n          tag_203\n          tag_7\n          jump\t// in\n        tag_203:\n          tag_204\n          tag_8\n          jump\t// in\n        tag_204:\n          calldataload(0x44)\n          calldataload(0x64)\n          swap4\n          calldataload(0x84)\n          swap4\n          0xff\n          dup6\n          and\n          dup1\n          swap6\n          sub\n          tag_205\n          jumpi\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4057:4072  block.timestamp */\n          timestamp\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4045:4072  deadline >= block.timestamp */\n          dup7\n          lt\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          tag_207\n          jumpi\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4428:4446  DOMAIN_SEPARATOR() */\n          tag_209\n          tag_10\n          jump\t// in\n        tag_209:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap5\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup1\n          swap3\n          and\n          swap6\n          dup7\n          dup10\n          mstore\n          0x20\n          swap6\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4873:4879  nonces */\n          0x05\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup8\n          mstore\n          dup5\n          dup11\n          keccak256\n          swap9\n          dup10\n          sload\n          swap10\n          0x01\n          dup12\n          add\n          swap1\n          sstore\n          dup6\n          mload\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4511:4960  abi.encode(... */\n          swap1\n          dup6\n          dup10\n          dup4\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap4\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4555:4720  keccak256(... */\n          0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup6\n          mstore\n          dup12\n          dup10\n          dup6\n          add\n          mstore\n          and\n          swap11\n          dup12\n          0x60\n          dup5\n          add\n          mstore\n          dup9\n          0x80\n          dup5\n          add\n          mstore\n          0xa0\n          dup4\n          add\n          mstore\n          0xc0\n          dup3\n          add\n          mstore\n          0xc0\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4511:4960  abi.encode(... */\n          dup2\n          mstore\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xe0\n          dup2\n          add\n          swap2\n          dup2\n          dup4\n          lt\n          0xffffffffffffffff\n          dup5\n          gt\n          or\n          tag_210\n          jumpi\n          swap3\n          dup3\n          dup10\n          swap6\n          swap3\n          0x0122\n          dup15\n          swap7\n          0x80\n          swap7\n          dup12\n          mstore\n          dup3\n          mload\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4472:4986  keccak256(... */\n          swap1\n          keccak256\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4350:5008  abi.encodePacked(... */\n          swap2\n          0x0100\n          dup2\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap5\n          0x1901000000000000000000000000000000000000000000000000000000000000\n          dup7\n          mstore\n          0x0102\n          dup3\n          add\n          mstore\n          add\n          mstore\n          0x42\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4350:5008  abi.encodePacked(... */\n          dup2\n          mstore\n          tag_212\n          dup2\n          tag_2\n          jump\t// in\n        tag_212:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mload\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4319:5026  keccak256(... */\n          swap1\n          keccak256\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap1\n          dup7\n          mload\n          swap2\n          dup3\n          mstore\n          dup5\n          dup3\n          add\n          mstore\n          calldataload(0xa4)\n          dup7\n          dup3\n          add\n          mstore\n          calldataload(0xc4)\n          0x60\n          dup3\n          add\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4292:5097  ecrecover(... */\n          dup3\n          dup1\n          mstore\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x01\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4292:5097  ecrecover(... */\n          gas\n          staticcall\n          iszero\n          tag_213\n          jumpi\n          dup7\n          mload\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          and\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5120:5150  recoveredAddress != address(0) */\n          swap7\n          dup8\n          iszero\n          iszero\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5120:5179  recoveredAddress != address(0) && recoveredAddress == owner */\n          dup1\n          tag_215\n          jumpi\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n        tag_216:\n          iszero\n          tag_217\n          jumpi\n          dup7\n          swap8\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5283:5314  Approval(owner, spender, value) */\n          0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap6\n          swap7\n          swap8\n          mstore\n          dup4\n          mstore\n          dup1\n          dup8\n          keccak256\n          dup7\n          dup9\n          mstore\n          dup4\n          mstore\n          dup2\n          dup2\n          dup9\n          keccak256\n          sstore\n          mload\n          swap1\n          dup2\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5283:5314  Approval(owner, spender, value) */\n          log3\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup1\n          return\n        tag_217:\n          dup4\n          0x64\n          swap3\n          mload\n          swap2\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          dup3\n          add\n          mstore\n          0x0e\n          0x24\n          dup3\n          add\n          mstore\n          0x494e56414c49445f5349474e4552000000000000000000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5120:5179  recoveredAddress != address(0) && recoveredAddress == owner */\n        tag_215:\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5154:5179  recoveredAddress == owner */\n          pop\n          dup5\n          dup9\n          eq\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5120:5179  recoveredAddress != address(0) && recoveredAddress == owner */\n          jump(tag_216)\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4292:5097  ecrecover(... */\n        tag_213:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup2\n          mload\n          returndatasize\n          dup9\n          dup3\n          returndatacopy\n          returndatasize\n          swap1\n          revert\n        tag_210:\n          0x24\n          dup13\n          0x41\n          dup16\n          0x4e487b7100000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          mstore\n          revert\n        tag_207:\n          0x64\n          dup9\n          0x20\n          dup5\n          mload\n          swap2\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          dup3\n          add\n          mstore\n          0x17\n          0x24\n          dup3\n          add\n          mstore\n          0x5045524d49545f444541444c494e455f45585049524544000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n        tag_205:\n          dup7\n          dup1\n          revert\n        tag_139:\n          dup4\n          dup3\n          jumpi(tag_166, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_166\n          jumpi\n          0x20\n          swap1\n          mload\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":2950:2979  ERC20 public immutable token1 */\n          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          and\n          dup2\n          mstore\n          return\n        tag_137:\n          swap1\n          swap2\n          pop\n          jumpi(tag_180, callvalue)\n          jumpi(tag_180, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))\n          dup1\n          calldataload\n          swap2\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup1\n          dup5\n          and\n          dup1\n          swap5\n          sub\n          tag_227\n          jumpi\n            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */\n          tag_229\n            /* \"src/ReservoirPair.sol\":3741:3748  factory */\n          swap1\n          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":3719:3729  msg.sender */\n          caller\n            /* \"src/ReservoirPair.sol\":3719:3749  msg.sender == address(factory) */\n          eq\n            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */\n          tag_14\n          jump\t// in\n        tag_229:\n            /* \"src/ReservoirPair.sol\":12690:12703  token0Managed */\n          0x0c\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n          0xffffffffffffffffffffffffff\n          dup1\n          dup3\n          and\n            /* \"src/ReservoirPair.sol\":12690:12708  token0Managed == 0 */\n          iszero\n            /* \"src/ReservoirPair.sol\":12690:12730  token0Managed == 0 && token1Managed == 0 */\n          swap2\n          dup3\n          tag_230\n          jumpi\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n        tag_231:\n          pop\n          pop\n          iszero\n          tag_232\n          jumpi\n          pop\n          pop\n          0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n            /* \"src/ReservoirPair.sol\":12765:12787  assetManager = manager */\n          0x0b\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n          and\n          or\n            /* \"src/ReservoirPair.sol\":12765:12787  assetManager = manager */\n          0x0b\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sstore\n          dup1\n          return\n        tag_232:\n          swap1\n          0x20\n          0x64\n          swap3\n          mload\n          swap2\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          dup3\n          add\n          mstore\n          0x14\n          0x24\n          dup3\n          add\n          mstore\n          0x414d503a20414d5f5354494c4c5f414354495645000000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n            /* \"src/ReservoirPair.sol\":12690:12730  token0Managed == 0 && token1Managed == 0 */\n        tag_230:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x68\n          shr\n          and\n            /* \"src/ReservoirPair.sol\":12712:12730  token1Managed == 0 */\n          iszero\n          swap1\n          pop\n            /* \"src/ReservoirPair.sol\":12690:12730  token0Managed == 0 && token1Managed == 0 */\n          codesize\n          dup1\n          jump(tag_231)\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n        tag_227:\n          dup5\n          dup1\n          revert\n        tag_135:\n          dup4\n          dup3\n          jumpi(tag_166, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_166\n          jumpi\n          0x20\n          swap1\n            /* \"src/ReservoirPair.sol\":3488:3536  uint256 public customSwapFee = type(uint256).max */\n          0x08\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_133:\n          dup4\n          dup3\n          jumpi(tag_166, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_166\n          jumpi\n          0x20\n          swap1\n          mload\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":2870:2909  GenericFactory public immutable factory */\n          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          and\n          dup2\n          mstore\n          return\n        tag_131:\n          dup4\n          jumpi(tag_157, callvalue)\n          jumpi(tag_157, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))\n            /* \"src/ReservoirPair.sol\":5579:5584  false */\n          tag_159\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          tag_247\n          tag_7\n          jump\t// in\n        tag_247:\n            /* \"src/ReservoirPair.sol\":6689:6698  lReserve1 */\n          tag_248\n            /* \"src/ReservoirPair.sol\":6506:6520  _lockAndLoad() */\n          tag_249\n          tag_12\n          jump\t// in\n        tag_249:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          pop\n          swap4\n          swap2\n          0xffffffffffffffffffffffffff\n          dup1\n          swap2\n          and\n          swap2\n          and\n            /* \"src/ReservoirPair.sol\":6561:6575  _totalToken0() */\n          swap2\n            /* \"src/ReservoirPair.sol\":6600:6609  lReserve1 */\n          tag_250\n            /* \"src/ReservoirPair.sol\":6561:6575  _totalToken0() */\n          dup4\n          dup4\n            /* \"src/ReservoirPair.sol\":6561:6587  _totalToken0() - lReserve0 */\n          tag_251\n            /* \"src/ReservoirPair.sol\":6561:6575  _totalToken0() */\n          dup2\n          tag_252\n          tag_23\n          jump\t// in\n        tag_252:\n            /* \"src/ReservoirPair.sol\":6561:6587  _totalToken0() - lReserve0 */\n          tag_9\n          jump\t// in\n        tag_251:\n            /* \"src/ReservoirPair.sol\":6548:6554  token0 */\n          dup5\n          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")\n            /* \"src/ReservoirPair.sol\":6600:6609  lReserve1 */\n          tag_19\n          jump\t// in\n        tag_250:\n            /* \"src/ReservoirPair.sol\":6650:6676  _totalToken1() - lReserve1 */\n          tag_253\n            /* \"src/ReservoirPair.sol\":6650:6664  _totalToken1() */\n          dup4\n          tag_252\n          tag_24\n          jump\t// in\n            /* \"src/ReservoirPair.sol\":6650:6676  _totalToken1() - lReserve1 */\n        tag_253:\n            /* \"src/ReservoirPair.sol\":6637:6643  token1 */\n          swap1\n          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")\n            /* \"src/ReservoirPair.sol\":6689:6698  lReserve1 */\n          tag_19\n          jump\t// in\n        tag_248:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffff\n          0xffffffff0000000000000000000000000000000000000000000000000000\n            /* \"src/ReservoirPair.sol\":4847:4853  _slot0 */\n          0x06\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n          swap3\n          0xd0\n          shl\n          and\n          swap2\n          and\n          or\n            /* \"src/ReservoirPair.sol\":4847:4853  _slot0 */\n          0x06\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sstore\n            /* \"src/ReservoirPair.sol\":4701:4899  function _writeSlot0Timestamp(uint32 aTimestamp, bool aLocked) internal {... */\n          jump\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n        tag_129:\n          dup4\n          dup3\n          jumpi(tag_166, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_166\n          jumpi\n          0x20\n          swap1\n          mload\n            /* \"src/ReservoirPair.sol\":2671:2678  10 ** 3 */\n          0x03e8\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup2\n          mstore\n          return\n        tag_127:\n          dup4\n          dup3\n          jumpi(tag_166, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_166\n          jumpi\n          0x20\n          swap1\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":17166:17193  address public oracleCaller */\n          0x01000f\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n          and\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_125:\n          swap1\n          swap2\n          pop\n          jumpi(tag_180, callvalue)\n          jumpi(tag_180, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))\n            /* \"src/ReservoirPair.sol\":7139:7202  CustomPlatformFeeChanged(customPlatformFee, aCustomPlatformFee) */\n          0xe044af8ebdaeeed3e95065fac857c503c7eabb71acfbcdcb7823ec6ca603c26e\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap1\n          calldataload\n            /* \"src/ReservoirPair.sol\":3741:3748  factory */\n          swap2\n            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */\n          tag_267\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":3741:3748  factory */\n          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":3719:3729  msg.sender */\n          caller\n            /* \"src/ReservoirPair.sol\":3719:3749  msg.sender == address(factory) */\n          eq\n            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */\n          tag_14\n          jump\t// in\n        tag_267:\n            /* \"src/ReservoirPair.sol\":7164:7181  customPlatformFee */\n          0x0a\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n          dup2\n          mload\n          swap1\n          dup2\n          mstore\n          dup4\n          0x20\n          dup3\n          add\n          mstore\n            /* \"src/ReservoirPair.sol\":7139:7202  CustomPlatformFeeChanged(customPlatformFee, aCustomPlatformFee) */\n          log1\n            /* \"src/ReservoirPair.sol\":7164:7181  customPlatformFee */\n          0x0a\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sstore\n            /* \"src/ReservoirPair.sol\":7212:7250  customPlatformFee = aCustomPlatformFee */\n          tag_159\n          tag_16\n          jump\t// in\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n        tag_123:\n          dup4\n          dup3\n          jumpi(tag_166, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_166\n          jumpi\n          0x20\n          swap1\n          0xffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":12834:12862  uint104 public token1Managed */\n          0x0c\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n          0x68\n          shr\n          and\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_121:\n          dup4\n          dup3\n          jumpi(tag_166, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_166\n          jumpi\n          0x20\n          swap1\n          mload\n            /* \"src/ReservoirPair.sol\":2849:2855  20_000 */\n          0x4e20\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup2\n          mstore\n          return\n        tag_119:\n          dup4\n          dup3\n          jumpi(tag_166, callvalue)\n          dup1\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_166\n          jumpi\n          0x20\n          swap2\n          tag_281\n          tag_7\n          jump\t// in\n        tag_281:\n          dup3\n          0xffffffffffffffffffffffffffffffffffffffff\n          calldataload(0x24)\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2774:2784  msg.sender */\n          swap3\n          caller\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup6\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2764:2773  balanceOf */\n          0x03\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup8\n          mstore\n          dup3\n          dup6\n          keccak256\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2764:2795  balanceOf[msg.sender] -= amount */\n          tag_282\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup6\n          dup3\n          sload\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2764:2795  balanceOf[msg.sender] -= amount */\n          tag_9\n          jump\t// in\n        tag_282:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap1\n          sstore\n          and\n          swap3\n          dup4\n          dup2\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2764:2773  balanceOf */\n          0x03\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup7\n          mstore\n          keccak256\n          dup2\n          dup2\n          sload\n          add\n          swap1\n          sstore\n          dup3\n          mload\n          swap1\n          dup2\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2990:3022  Transfer(msg.sender, to, amount) */\n          0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2774:2784  msg.sender */\n          dup5\n          caller\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2990:3022  Transfer(msg.sender, to, amount) */\n          swap3\n          log3\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mload\n          0x01\n          dup2\n          mstore\n          return\n        tag_117:\n          dup4\n          jumpi(tag_157, callvalue)\n          jumpi(tag_157, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))\n          dup2\n          calldataload\n          swap2\n          dup2\n          0x60\n          dup6\n          mload\n          tag_287\n          dup2\n          tag_2\n          jump\t// in\n        tag_287:\n          dup3\n          dup2\n          mstore\n          dup3\n          0x20\n          dup3\n          add\n          mstore\n          dup3\n          dup8\n          dup3\n          add\n          mstore\n          add\n          mstore\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":17325:17337  oracleCaller */\n          0x01000f\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n          and\n            /* \"src/ReservoirPair.sol\":17311:17321  msg.sender */\n          caller\n            /* \"src/ReservoirPair.sol\":17311:17337  msg.sender == oracleCaller */\n          sub\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          tag_288\n          jumpi\n          0x010000\n          dup4\n          lt\n          iszero\n          tag_290\n          jumpi\n          0x80\n          dup4\n          0xffffffff\n          dup7\n          dup1\n          mload\n          swap3\n          tag_292\n          dup5\n          tag_2\n          jump\t// in\n        tag_292:\n            /* \"src/ReservoirPair.sol\":17388:17401  _observations */\n          0x0d\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          add\n          sload\n          swap1\n          dup2\n            /* \"src/ReservoirPair.sol\":17388:17401  _observations */\n          0x0d\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          signextend\n          swap4\n          dup5\n          dup2\n          mstore\n          0x20\n          dup2\n          add\n          dup4\n          0x70\n          shr\n          0x06\n          signextend\n          dup2\n          mstore\n          0x60\n          dup4\n          dup4\n          add\n          swap3\n          dup6\n          0xa8\n          shr\n          0x06\n          signextend\n          dup5\n          mstore\n          add\n          swap4\n          0xe0\n          shr\n          dup5\n          mstore\n          dup3\n          mload\n          swap6\n          dup7\n          mstore\n          mload\n          0x06\n          signextend\n          0x20\n          dup7\n          add\n          mstore\n          mload\n          0x06\n          signextend\n          swap1\n          dup5\n          add\n          mstore\n          mload\n          and\n          0x60\n          dup3\n          add\n          mstore\n          return\n        tag_290:\n          swap1\n          0x32\n          0x24\n          swap3\n          0x4e487b7100000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          mstore\n          revert\n        tag_288:\n          0x64\n          swap1\n          0x20\n          dup6\n          mload\n          swap2\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          dup3\n          add\n          mstore\n          0x15\n          0x24\n          dup3\n          add\n          mstore\n          0x4f573a204e4f545f4f5241434c455f43414c4c45520000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n        tag_115:\n          swap2\n          pop\n          jumpi(tag_180, callvalue)\n          0x20\n          swap2\n          dup3\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_314\n          jumpi\n            /* \"src/ReservoirPair.sol\":8142:8170  factory.read(RECOVERER_NAME) */\n          tag_297\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap3\n          tag_298\n          tag_7\n          jump\t// in\n        tag_298:\n          swap1\n          dup4\n          mload\n          tag_299\n          dup2\n          tag_3\n          jump\t// in\n        tag_299:\n          0x18\n          dup2\n          mstore\n          0x5368617265643a3a64656661756c745265636f76657265720000000000000000\n          dup3\n          dup3\n          add\n          mstore\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":8142:8149  factory */\n          swap6\n          dup7\n          swap2\n          dup3\n          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":8142:8170  factory.read(RECOVERER_NAME) */\n          tag_52\n          jump\t// in\n        tag_297:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          and\n          swap3\n          dup6\n          dup4\n          and\n            /* \"src/ReservoirPair.sol\":8218:8224  token0 */\n          swap6\n          dup1\n          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":8200:8225  aToken != address(token0) */\n          dup8\n          eq\n          iszero\n            /* \"src/ReservoirPair.sol\":8200:8254  aToken != address(token0) && aToken != address(token1) */\n          swap1\n          dup2\n          tag_300\n          jumpi\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n        tag_301:\n            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */\n          pop\n          iszero\n          tag_302\n          jumpi\n            /* \"src/ReservoirPair.sol\":8304:8328  _recoverer != address(0) */\n          dup4\n          iszero\n            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */\n          tag_304\n          jumpi\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup2\n          swap1\n          0x24\n          dup7\n          mload\n            /* \"src/ReservoirPair.sol\":8396:8434  ERC20(aToken).balanceOf(address(this)) */\n          dup1\n          swap9\n          dup2\n          swap4\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x70a0823100000000000000000000000000000000000000000000000000000000\n            /* \"src/ReservoirPair.sol\":8396:8434  ERC20(aToken).balanceOf(address(this)) */\n          dup4\n          mstore\n            /* \"src/ReservoirPair.sol\":8428:8432  this */\n          address\n            /* \"src/ReservoirPair.sol\":8396:8434  ERC20(aToken).balanceOf(address(this)) */\n          swap1\n          dup4\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mstore\n            /* \"src/ReservoirPair.sol\":8396:8434  ERC20(aToken).balanceOf(address(this)) */\n          gas\n          staticcall\n          swap4\n          dup5\n          iszero\n          tag_306\n          jumpi\n          pop\n          dup6\n          swap4\n          tag_308\n          jumpi\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n        tag_309:\n            /* \"src/ReservoirPair.sol\":8445:8496  _safeTransfer(aToken, _recoverer, _amountToRecover) */\n          pop\n          tag_310\n          swap4\n          pop\n          tag_17\n          jump\t// in\n        tag_310:\n          pop\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup1\n          return\n            /* \"src/ReservoirPair.sol\":8396:8434  ERC20(aToken).balanceOf(address(this)) */\n        tag_308:\n          swap1\n          swap3\n          pop\n          dup4\n          dup2\n          returndatasize\n          dup4\n          gt\n          tag_311\n          jumpi\n        tag_312:\n          tag_313\n          dup2\n          dup4\n          tag_4\n          jump\t// in\n        tag_313:\n          dup2\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sub\n          slt\n          tag_314\n          jumpi\n            /* \"src/ReservoirPair.sol\":8445:8496  _safeTransfer(aToken, _recoverer, _amountToRecover) */\n          tag_310\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap3\n          mload\n            /* \"src/ReservoirPair.sol\":8396:8434  ERC20(aToken).balanceOf(address(this)) */\n          swap2\n          codesize\n          jump(tag_309)\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n        tag_314:\n          dup4\n          dup1\n          revert\n            /* \"src/ReservoirPair.sol\":8396:8434  ERC20(aToken).balanceOf(address(this)) */\n        tag_311:\n          pop\n          returndatasize\n          jump(tag_312)\n        tag_306:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mload\n          returndatasize\n          dup8\n          dup3\n          returndatacopy\n          returndatasize\n          swap1\n          revert\n            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */\n        tag_304:\n          0x64\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap2\n          dup6\n          mload\n            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */\n          swap2\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          dup3\n          add\n          mstore\n          0x19\n          0x24\n          dup3\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mstore\n            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */\n          0x503a205245434f56455245525f5a45524f5f4144445245535300000000000000\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x44\n          dup3\n          add\n            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */\n          mstore\n          revert\n        tag_302:\n          0x64\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap2\n          dup6\n          mload\n            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */\n          swap2\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          dup3\n          add\n          mstore\n          0x1b\n          0x24\n          dup3\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mstore\n            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */\n          0x503a20494e56414c49445f544f4b454e5f544f5f5245434f5645520000000000\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x44\n          dup3\n          add\n            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */\n          mstore\n          revert\n            /* \"src/ReservoirPair.sol\":8200:8254  aToken != address(token0) && aToken != address(token1) */\n        tag_300:\n            /* \"src/ReservoirPair.sol\":8247:8253  token1 */\n          swap1\n          pop\n          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":8229:8254  aToken != address(token1) */\n          dup7\n          eq\n          iszero\n            /* \"src/ReservoirPair.sol\":8200:8254  aToken != address(token0) && aToken != address(token1) */\n          codesize\n          jump(tag_301)\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n        tag_113:\n          swap1\n          swap2\n          pop\n          jumpi(tag_180, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_180\n          jumpi\n          dup1\n          calldataload\n          swap1\n          calldataload(0x24)\n          swap3\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":14884:14896  assetManager */\n          0x0b\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n          and\n            /* \"src/ReservoirPair.sol\":14862:14872  msg.sender */\n          caller\n            /* \"src/ReservoirPair.sol\":14862:14897  msg.sender == address(assetManager) */\n          sub\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          tag_320\n          jumpi\n          pop\n          pop\n            /* \"src/ReservoirPair.sol\":14938:14955  aToken0Change > 0 */\n          dup3\n          dup2\n          sgt\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          iszero\n          tag_322\n          jumpi\n            /* \"src/ReservoirPair.sol\":14988:15022  uint256(aToken0Change).toUint104() */\n          tag_324\n            /* \"src/ReservoirPair.sol\":15073:15112  token0.safeTransfer(msg.sender, lDelta) */\n          tag_325\n            /* \"src/ReservoirPair.sol\":14988:15022  uint256(aToken0Change).toUint104() */\n          swap2\n          tag_27\n          jump\t// in\n        tag_324:\n            /* \"src/ReservoirPair.sol\":15036:15059  token0Managed += lDelta */\n          0x0c\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n          swap1\n          0xffffffffffffffffffffffffff\n          swap2\n          0xffffffffffffffffffffffffffffffffffffff00000000000000000000000000\n          dup4\n            /* \"src/ReservoirPair.sol\":15036:15059  token0Managed += lDelta */\n          tag_326\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup5\n          dup3\n          dup6\n          and\n            /* \"src/ReservoirPair.sol\":15036:15059  token0Managed += lDelta */\n          tag_32\n          jump\t// in\n        tag_326:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          and\n          swap2\n          and\n          or\n            /* \"src/ReservoirPair.sol\":15036:15059  token0Managed += lDelta */\n          0x0c\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sstore\n          and\n            /* \"src/ReservoirPair.sol\":14862:14872  msg.sender */\n          caller\n            /* \"src/ReservoirPair.sol\":15073:15079  token0 */\n          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")\n            /* \"src/ReservoirPair.sol\":15073:15112  token0.safeTransfer(msg.sender, lDelta) */\n          tag_34\n          jump\t// in\n        tag_325:\n            /* \"src/ReservoirPair.sol\":15406:15423  aToken1Change > 0 */\n          dup2\n          dup2\n          sgt\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          iszero\n          tag_328\n          jumpi\n            /* \"src/ReservoirPair.sol\":15456:15490  uint256(aToken1Change).toUint104() */\n          tag_330\n            /* \"src/ReservoirPair.sol\":15595:15634  token1.safeTransfer(msg.sender, lDelta) */\n          tag_159\n            /* \"src/ReservoirPair.sol\":15456:15490  uint256(aToken1Change).toUint104() */\n          swap2\n          tag_27\n          jump\t// in\n        tag_330:\n            /* \"src/ReservoirPair.sol\":15557:15580  token1Managed += lDelta */\n          0x0c\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n          swap1\n          0xffffffffffffffffffffffffff\n          swap2\n          0xffffffffffff00000000000000000000000000ffffffffffffffffffffffffff\n          0xffffffffffffffffffffffffff00000000000000000000000000\n            /* \"src/ReservoirPair.sol\":15557:15580  token1Managed += lDelta */\n          tag_332\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup5\n          dup7\n          dup6\n          0x68\n          shr\n          and\n            /* \"src/ReservoirPair.sol\":15557:15580  token1Managed += lDelta */\n          tag_32\n          jump\t// in\n        tag_332:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x68\n          shl\n          and\n          swap2\n          and\n          or\n            /* \"src/ReservoirPair.sol\":15557:15580  token1Managed += lDelta */\n          0x0c\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sstore\n          and\n            /* \"src/ReservoirPair.sol\":14862:14872  msg.sender */\n          caller\n            /* \"src/ReservoirPair.sol\":15595:15601  token1 */\n          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")\n            /* \"src/ReservoirPair.sol\":15595:15634  token1.safeTransfer(msg.sender, lDelta) */\n          tag_34\n          jump\t// in\n            /* \"src/ReservoirPair.sol\":15402:15914  if (aToken1Change > 0) {... */\n        tag_328:\n            /* \"src/ReservoirPair.sol\":15655:15672  aToken1Change < 0 */\n          dup2\n          dup2\n          slt\n            /* \"src/ReservoirPair.sol\":15651:15914  if (aToken1Change < 0) {... */\n          tag_334\n          jumpi\n            /* \"src/ReservoirPair.sol\":15402:15914  if (aToken1Change > 0) {... */\n          pop\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup1\n          return\n            /* \"src/ReservoirPair.sol\":15651:15914  if (aToken1Change < 0) {... */\n        tag_334:\n            /* \"src/ReservoirPair.sol\":15705:15740  uint256(-aToken1Change).toUint104() */\n          tag_336\n            /* \"src/ReservoirPair.sol\":15713:15727  -aToken1Change */\n          tag_337\n            /* \"src/ReservoirPair.sol\":15845:15903  token1.safeTransferFrom(msg.sender, address(this), lDelta) */\n          tag_159\n            /* \"src/ReservoirPair.sol\":15713:15727  -aToken1Change */\n          swap3\n          tag_30\n          jump\t// in\n        tag_337:\n            /* \"src/ReservoirPair.sol\":15705:15740  uint256(-aToken1Change).toUint104() */\n          tag_27\n          jump\t// in\n        tag_336:\n            /* \"src/ReservoirPair.sol\":15807:15830  token1Managed -= lDelta */\n          0x0c\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n          swap1\n          0xffffffffffffffffffffffffff\n          swap2\n          0xffffffffffff00000000000000000000000000ffffffffffffffffffffffffff\n          0xffffffffffffffffffffffffff00000000000000000000000000\n            /* \"src/ReservoirPair.sol\":15807:15830  token1Managed -= lDelta */\n          tag_339\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup5\n          dup7\n          dup6\n          0x68\n          shr\n          and\n            /* \"src/ReservoirPair.sol\":15807:15830  token1Managed -= lDelta */\n          tag_31\n          jump\t// in\n        tag_339:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x68\n          shl\n          and\n          swap2\n          and\n          or\n            /* \"src/ReservoirPair.sol\":15807:15830  token1Managed -= lDelta */\n          0x0c\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sstore\n          and\n            /* \"src/ReservoirPair.sol\":15889:15893  this */\n          address\n            /* \"src/ReservoirPair.sol\":14862:14872  msg.sender */\n          caller\n            /* \"src/ReservoirPair.sol\":15845:15851  token1 */\n          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")\n            /* \"src/ReservoirPair.sol\":15845:15903  token1.safeTransferFrom(msg.sender, address(this), lDelta) */\n          tag_33\n          jump\t// in\n            /* \"src/ReservoirPair.sol\":14934:15392  if (aToken0Change > 0) {... */\n        tag_322:\n            /* \"src/ReservoirPair.sol\":15133:15150  aToken0Change < 0 */\n          dup3\n          dup2\n          slt\n            /* \"src/ReservoirPair.sol\":15129:15392  if (aToken0Change < 0) {... */\n          tag_340\n          jumpi\n            /* \"src/ReservoirPair.sol\":14934:15392  if (aToken0Change > 0) {... */\n        tag_341:\n          pop\n          jump(tag_325)\n            /* \"src/ReservoirPair.sol\":15129:15392  if (aToken0Change < 0) {... */\n        tag_340:\n            /* \"src/ReservoirPair.sol\":15183:15218  uint256(-aToken0Change).toUint104() */\n          tag_342\n            /* \"src/ReservoirPair.sol\":15191:15205  -aToken0Change */\n          tag_337\n            /* \"src/ReservoirPair.sol\":15323:15381  token0.safeTransferFrom(msg.sender, address(this), lDelta) */\n          tag_344\n            /* \"src/ReservoirPair.sol\":15191:15205  -aToken0Change */\n          swap3\n          tag_30\n          jump\t// in\n            /* \"src/ReservoirPair.sol\":15183:15218  uint256(-aToken0Change).toUint104() */\n        tag_342:\n            /* \"src/ReservoirPair.sol\":15285:15308  token0Managed -= lDelta */\n          0x0c\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n          swap1\n          0xffffffffffffffffffffffffff\n          swap2\n          0xffffffffffffffffffffffffffffffffffffff00000000000000000000000000\n          dup4\n            /* \"src/ReservoirPair.sol\":15285:15308  token0Managed -= lDelta */\n          tag_345\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup5\n          dup3\n          dup6\n          and\n            /* \"src/ReservoirPair.sol\":15285:15308  token0Managed -= lDelta */\n          tag_31\n          jump\t// in\n        tag_345:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          and\n          swap2\n          and\n          or\n            /* \"src/ReservoirPair.sol\":15285:15308  token0Managed -= lDelta */\n          0x0c\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sstore\n          and\n            /* \"src/ReservoirPair.sol\":15367:15371  this */\n          address\n            /* \"src/ReservoirPair.sol\":14862:14872  msg.sender */\n          caller\n            /* \"src/ReservoirPair.sol\":15323:15329  token0 */\n          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")\n            /* \"src/ReservoirPair.sol\":15323:15381  token0.safeTransferFrom(msg.sender, address(this), lDelta) */\n          tag_33\n          jump\t// in\n        tag_344:\n            /* \"src/ReservoirPair.sol\":15129:15392  if (aToken0Change < 0) {... */\n          codesize\n          jump(tag_341)\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n        tag_320:\n          swap1\n          0x20\n          0x64\n          swap3\n          mload\n          swap2\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          dup3\n          add\n          mstore\n          0x15\n          0x24\n          dup3\n          add\n          mstore\n          0x414d503a20415554485f4e4f545f4d414e414745520000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n        tag_111:\n          dup4\n          dup3\n          jumpi(tag_166, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_166\n          jumpi\n          dup1\n          mload\n          swap1\n          dup3\n            /* \"lib/solmate/src/tokens/ERC20.sol\":1056:1076  string public symbol */\n          0x01\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup1\n          sload\n          swap2\n          tag_350\n          dup4\n          tag_1\n          jump\t// in\n        tag_350:\n          dup1\n          dup7\n          mstore\n          swap3\n          dup3\n          dup2\n          and\n          swap1\n            /* \"lib/solmate/src/tokens/ERC20.sol\":1056:1076  string public symbol */\n          dup2\n          iszero\n          tag_351\n          jumpi\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          pop\n          0x01\n          eq\n          tag_353\n          jumpi\n        tag_354:\n          pop\n          pop\n          pop\n          tag_355\n          dup3\n          tag_356\n          swap5\n          sub\n          dup4\n          tag_4\n          jump\t// in\n        tag_355:\n          mload\n          swap2\n          dup3\n          swap2\n          dup3\n          tag_6\n          jump\t// in\n        tag_356:\n          sub\n          swap1\n          return\n        tag_353:\n          swap5\n          pop\n          dup1\n          dup6\n          mstore\n          0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6\n        tag_357:\n          dup3\n          dup7\n          lt\n          tag_358\n          jumpi\n          pop\n          pop\n          pop\n          tag_355\n          dup3\n          0x20\n          tag_356\n          swap6\n          dup3\n          add\n          add\n          swap5\n          jump(tag_354)\n        tag_358:\n          dup1\n          sload\n          0x20\n          dup8\n          dup8\n          add\n          dup2\n          add\n          swap2\n          swap1\n          swap2\n          mstore\n          swap1\n          swap6\n          add\n          swap5\n          dup2\n          add\n          jump(tag_357)\n        tag_351:\n          tag_356\n          swap8\n          pop\n          dup7\n          swap4\n          pop\n          0x20\n          swap3\n          pop\n          tag_355\n          swap5\n          swap2\n          pop\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n          and\n          dup3\n          dup5\n          add\n          mstore\n          iszero\n          iszero\n          0x05\n          shl\n          dup3\n          add\n          add\n          swap5\n          jump(tag_354)\n        tag_109:\n          swap1\n          swap2\n          pop\n          jumpi(tag_180, callvalue)\n          jumpi(tag_180, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))\n            /* \"src/ReservoirPair.sol\":6915:6966  CustomSwapFeeChanged(customSwapFee, aCustomSwapFee) */\n          0x27f958341e42705d80835b6391cbe111df34533c7061beebb873bdb3454cc697\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap1\n          calldataload\n            /* \"src/ReservoirPair.sol\":3741:3748  factory */\n          swap2\n            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */\n          tag_364\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":3741:3748  factory */\n          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":3719:3729  msg.sender */\n          caller\n            /* \"src/ReservoirPair.sol\":3719:3749  msg.sender == address(factory) */\n          eq\n            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */\n          tag_14\n          jump\t// in\n        tag_364:\n            /* \"src/ReservoirPair.sol\":6936:6949  customSwapFee */\n          0x08\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n          dup2\n          mload\n          swap1\n          dup2\n          mstore\n          dup4\n          0x20\n          dup3\n          add\n          mstore\n            /* \"src/ReservoirPair.sol\":6915:6966  CustomSwapFeeChanged(customSwapFee, aCustomSwapFee) */\n          log1\n            /* \"src/ReservoirPair.sol\":6936:6949  customSwapFee */\n          0x08\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sstore\n            /* \"src/ReservoirPair.sol\":6976:7006  customSwapFee = aCustomSwapFee */\n          tag_159\n          tag_15\n          jump\t// in\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n        tag_107:\n          dup4\n          dup3\n          jumpi(tag_166, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_166\n          jumpi\n          0x20\n          swap1\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":12568:12601  IAssetManager public assetManager */\n          0x0b\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n          and\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_105:\n          pop\n          dup3\n          jumpi(tag_157, callvalue)\n          0x20\n          dup1\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_166\n          jumpi\n          tag_374\n          tag_7\n          jump\t// in\n        tag_374:\n            /* \"src/curve/stable/StableMintBurn.sol\":5113:5127  _lockAndLoad() */\n          swap1\n          tag_375\n          tag_12\n          jump\t// in\n        tag_375:\n          pop\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap2\n            /* \"src/curve/stable/StableMintBurn.sol\":5162:5196  _syncManaged(lReserve0, lReserve1) */\n          tag_376\n          swap2\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xffffffffffffffffffffffffff\n          swap1\n          dup2\n          and\n          swap2\n          and\n            /* \"src/curve/stable/StableMintBurn.sol\":5162:5196  _syncManaged(lReserve0, lReserve1) */\n          tag_26\n          jump\t// in\n        tag_376:\n            /* \"src/curve/stable/StableMintBurn.sol\":5245:5249  this */\n          swap2\n          swap1\n          swap2\n          address\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup7\n          mstore\n            /* \"src/curve/stable/StableMintBurn.sol\":5227:5236  balanceOf */\n          0x03\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup5\n          mstore\n          dup7\n          dup7\n          keccak256\n          sload\n            /* \"src/curve/stable/StableMintBurn.sol\":5288:5318  _mintFee(lReserve0, lReserve1) */\n          swap5\n          tag_377\n          dup3\n          dup6\n          tag_45\n          jump\t// in\n        tag_377:\n            /* \"src/curve/stable/StableMintBurn.sol\":5341:5362  liquidity * lReserve0 */\n          pop\n          swap7\n          dup6\n          dup9\n          tag_378\n          dup8\n          dup11\n          tag_36\n          jump\t// in\n        tag_378:\n            /* \"src/curve/stable/StableMintBurn.sol\":5340:5378  (liquidity * lReserve0) / lTotalSupply */\n          swap1\n          tag_379\n          swap2\n          tag_37\n          jump\t// in\n        tag_379:\n            /* \"src/curve/stable/StableMintBurn.sol\":5400:5421  liquidity * lReserve1 */\n          swap9\n          tag_380\n          dup6\n          dup11\n          tag_36\n          jump\t// in\n        tag_380:\n            /* \"src/curve/stable/StableMintBurn.sol\":5399:5437  (liquidity * lReserve1) / lTotalSupply */\n          swap1\n          tag_381\n          swap2\n          tag_37\n          jump\t// in\n        tag_381:\n            /* \"src/curve/stable/StableMintBurn.sol\":5245:5249  this */\n          swap8\n          address\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup4\n          mstore\n            /* \"src/curve/stable/StableMintBurn.sol\":5227:5236  balanceOf */\n          0x03\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup3\n          mstore\n          dup11\n          dup4\n          keccak256\n          dup2\n          dup2\n          sload\n            /* \"lib/solmate/src/tokens/ERC20.sol\":6553:6578  balanceOf[from] -= amount */\n          swap1\n          tag_382\n          swap2\n          tag_9\n          jump\t// in\n        tag_382:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap1\n          sstore\n          dup1\n            /* \"lib/solmate/src/tokens/ERC20.sol\":6721:6742  totalSupply -= amount */\n          0x02\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n          sub\n            /* \"lib/solmate/src/tokens/ERC20.sol\":6721:6742  totalSupply -= amount */\n          0x02\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sstore\n          dup11\n          mload\n          swap1\n          dup2\n          mstore\n            /* \"src/curve/stable/StableMintBurn.sol\":5245:5249  this */\n          address\n            /* \"lib/solmate/src/tokens/ERC20.sol\":6768:6802  Transfer(from, address(0), amount) */\n          swap2\n          0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n          swap2\n          log3\n            /* \"src/curve/stable/StableMintBurn.sol\":5541:5550  lReserve1 */\n          tag_383\n            /* \"src/curve/stable/StableMintBurn.sol\":5507:5513  token0 */\n          dup3\n          dup6\n          dup10\n          dup5\n          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")\n            /* \"src/curve/stable/StableMintBurn.sol\":5541:5550  lReserve1 */\n          tag_19\n          jump\t// in\n        tag_383:\n            /* \"src/curve/stable/StableMintBurn.sol\":5578:5584  token1 */\n          dup2\n          dup5\n          dup8\n          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")\n            /* \"src/curve/stable/StableMintBurn.sol\":5612:5621  lReserve1 */\n          swap4\n          tag_384\n          swap5\n          tag_19\n          jump\t// in\n        tag_384:\n            /* \"src/curve/stable/StableMintBurn.sol\":5653:5667  _totalToken0() */\n          tag_385\n          tag_23\n          jump\t// in\n        tag_385:\n            /* \"src/curve/stable/StableMintBurn.sol\":5697:5711  _totalToken1() */\n          swap3\n          tag_386\n          tag_24\n          jump\t// in\n        tag_386:\n            /* \"src/curve/stable/StableMintBurn.sol\":9453:9474  _getCurrentAPrecise() */\n          tag_387\n          tag_48\n          jump\t// in\n        tag_387:\n            /* \"src/curve/stable/StableMintBurn.sol\":9449:9474  2 * _getCurrentAPrecise() */\n          tag_388\n          swap1\n          tag_43\n          jump\t// in\n        tag_388:\n            /* \"src/curve/stable/StableMintBurn.sol\":7029:7125  StableMath._computeLiquidityFromAdjustedBalances(lAdjustedReserve0, lAdjustedReserve1, _getNA()) */\n          tag_389\n          swap1\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xffffffffffffffff\n          and\n          0xffffffffffffffffffffffffffffffff\n            /* \"src/curve/stable/StableMintBurn.sol\":6961:6986  token1PrecisionMultiplier */\n          immutable(\"0xc4ba931b733b92a51f51c0955dd7716c7a38f3de911d23a5d0fbd5d23c0fbe8c\")\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup2\n          and\n          dup5\n          mul\n          swap1\n            /* \"src/curve/stable/StableMintBurn.sol\":6882:6907  token0PrecisionMultiplier */\n          immutable(\"0x372e991e4284f7d12d6b2461cce9899511b05ac053845de253542adb96f2dca0\")\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          and\n          dup9\n          mul\n            /* \"src/curve/stable/StableMintBurn.sol\":7029:7125  StableMath._computeLiquidityFromAdjustedBalances(lAdjustedReserve0, lAdjustedReserve1, _getNA()) */\n          tag_58\n          jump\t// in\n        tag_389:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffffffffffff\n          and\n            /* \"src/curve/stable/StableMintBurn.sol\":5721:5785  lastInvariant = uint192(_computeLiquidity(lBalance0, lBalance1)) */\n          tag_390\n          swap1\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffffffffffff\n            /* \"src/curve/stable/StableMintBurn.sol\":4611:4643  lastInvariant = uint192(lNewLiq) */\n          0x010012\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap2\n          and\n          0xffffffffffffffff000000000000000000000000000000000000000000000000\n          dup3\n          sload\n          and\n          or\n          swap1\n          sstore\n          jump\n            /* \"src/curve/stable/StableMintBurn.sol\":5721:5785  lastInvariant = uint192(_computeLiquidity(lBalance0, lBalance1)) */\n        tag_390:\n            /* \"src/curve/stable/StableMintBurn.sol\":5814:5835  _getCurrentAPrecise() */\n          tag_391\n          tag_48\n          jump\t// in\n        tag_391:\n            /* \"src/curve/stable/StableMintBurn.sol\":5795:5835  lastInvariantAmp = _getCurrentAPrecise() */\n          tag_392\n          swap1\n            /* \"src/curve/stable/StableMintBurn.sol\":4611:4643  lastInvariant = uint192(lNewLiq) */\n          0x010012\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap1\n          0xffffffffffffffffffffffffffffffffffffffffffffffff\n          0xffffffffffffffff000000000000000000000000000000000000000000000000\n          dup4\n          sload\n          swap3\n          0xc0\n          shl\n          and\n          swap2\n          and\n          or\n          swap1\n          sstore\n          jump\n            /* \"src/curve/stable/StableMintBurn.sol\":5795:5835  lastInvariantAmp = _getCurrentAPrecise() */\n        tag_392:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup9\n          dup1\n          mload\n          dup10\n          dup2\n          mstore\n          dup9\n          dup9\n          dup3\n          add\n          mstore\n            /* \"src/curve/stable/StableMintBurn.sol\":5855:5865  msg.sender */\n          caller\n            /* \"src/curve/stable/StableMintBurn.sol\":5850:5886  Burn(msg.sender, rAmount0, rAmount1) */\n          swap2\n          0x49995e5dd6158cf69ad3e9777c46755a1a826a446c6416992167462dad033b2a\n          swap2\n          log2\n            /* \"src/curve/stable/StableMintBurn.sol\":5958:5977  lBlockTimestampLast */\n          tag_393\n          swap5\n          tag_21\n          jump\t// in\n        tag_393:\n          tag_394\n          tag_41\n          jump\t// in\n        tag_394:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup4\n          mload\n          swap3\n          dup4\n          mstore\n          dup3\n          add\n          mstore\n          return\n        tag_103:\n          dup4\n          dup3\n          jumpi(tag_166, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_166\n          jumpi\n          0x20\n          swap1\n            /* \"src/ReservoirPair.sol\":17094:17122  uint256 public maxChangeRate */\n          0x01000d\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_101:\n          dup4\n          dup3\n          jumpi(tag_166, callvalue)\n          jumpi(tag_166, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))\n          dup1\n          0x20\n          swap3\n          0xffffffffffffffffffffffffffffffffffffffff\n          tag_403\n          tag_7\n          jump\t// in\n        tag_403:\n          and\n          dup2\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":1751:1792  mapping(address => uint256) public nonces */\n          0x05\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup5\n          mstore\n          keccak256\n          sload\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_99:\n          dup4\n          dup3\n          jumpi(tag_166, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_166\n          jumpi\n          0x20\n          swap1\n            /* \"src/ReservoirPair.sol\":3619:3671  uint256 public customPlatformFee = type(uint256).max */\n          0x0a\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_97:\n          dup4\n          dup3\n          jumpi(tag_166, callvalue)\n          jumpi(tag_166, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))\n          dup1\n          0x20\n          swap3\n          0xffffffffffffffffffffffffffffffffffffffff\n          tag_412\n          tag_7\n          jump\t// in\n        tag_412:\n          and\n          dup2\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":1337:1381  mapping(address => uint256) public balanceOf */\n          0x03\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup5\n          mstore\n          keccak256\n          sload\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_95:\n          swap1\n          dup4\n          jumpi(tag_157, callvalue)\n          0x20\n          swap2\n          dup3\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_166\n          jumpi\n            /* \"src/curve/stable/StableMintBurn.sol\":3443:3477  _syncManaged(lReserve0, lReserve1) */\n          tag_417\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          tag_418\n          tag_7\n          jump\t// in\n        tag_418:\n          swap5\n            /* \"src/curve/stable/StableMintBurn.sol\":3394:3408  _lockAndLoad() */\n          tag_419\n          tag_12\n          jump\t// in\n        tag_419:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          pop\n          swap4\n          swap1\n          swap2\n          0xffffffffffffffffffffffffff\n          dup1\n          dup1\n          swap5\n          and\n          swap2\n          and\n            /* \"src/curve/stable/StableMintBurn.sol\":3443:3477  _syncManaged(lReserve0, lReserve1) */\n          tag_26\n          jump\t// in\n        tag_417:\n            /* \"src/curve/stable/StableMintBurn.sol\":6265:6279  _totalToken0() */\n          tag_420\n          tag_23\n          jump\t// in\n        tag_420:\n            /* \"src/curve/stable/StableMintBurn.sol\":6301:6315  _totalToken1() */\n          swap1\n          tag_421\n          tag_24\n          jump\t// in\n        tag_421:\n            /* \"src/curve/stable/StableMintBurn.sol\":9453:9474  _getCurrentAPrecise() */\n          swap3\n            /* \"src/curve/stable/StableMintBurn.sol\":7029:7125  StableMath._computeLiquidityFromAdjustedBalances(lAdjustedReserve0, lAdjustedReserve1, _getNA()) */\n          tag_422\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xffffffffffffffff\n            /* \"src/curve/stable/StableMintBurn.sol\":9449:9474  2 * _getCurrentAPrecise() */\n          tag_423\n            /* \"src/curve/stable/StableMintBurn.sol\":9453:9474  _getCurrentAPrecise() */\n          tag_424\n          tag_48\n          jump\t// in\n        tag_424:\n            /* \"src/curve/stable/StableMintBurn.sol\":9449:9474  2 * _getCurrentAPrecise() */\n          tag_43\n          jump\t// in\n        tag_423:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          and\n          0xffffffffffffffffffffffffffffffff\n            /* \"src/curve/stable/StableMintBurn.sol\":6961:6986  token1PrecisionMultiplier */\n          dup1\n          immutable(\"0xc4ba931b733b92a51f51c0955dd7716c7a38f3de911d23a5d0fbd5d23c0fbe8c\")\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          and\n          dup8\n          mul\n            /* \"src/curve/stable/StableMintBurn.sol\":6882:6907  token0PrecisionMultiplier */\n          swap1\n          immutable(\"0x372e991e4284f7d12d6b2461cce9899511b05ac053845de253542adb96f2dca0\")\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          and\n          dup7\n          mul\n            /* \"src/curve/stable/StableMintBurn.sol\":7029:7125  StableMath._computeLiquidityFromAdjustedBalances(lAdjustedReserve0, lAdjustedReserve1, _getNA()) */\n          tag_58\n          jump\t// in\n        tag_422:\n            /* \"src/curve/stable/StableMintBurn.sol\":3637:3658  lBalance0 - lReserve0 */\n          swap11\n            /* \"src/curve/stable/StableMintBurn.sol\":3859:3886  lReserve1 += uint104(lFee1) */\n          tag_425\n            /* \"src/curve/stable/StableMintBurn.sol\":3637:3658  lBalance0 - lReserve0 */\n          tag_426\n          dup4\n          dup7\n          tag_9\n          jump\t// in\n        tag_426:\n            /* \"src/curve/stable/StableMintBurn.sol\":3687:3708  lBalance1 - lReserve1 */\n          swap4\n          dup8\n            /* \"src/curve/stable/StableMintBurn.sol\":3822:3849  lReserve0 += uint104(lFee0) */\n          tag_427\n            /* \"src/curve/stable/StableMintBurn.sol\":3687:3708  lBalance1 - lReserve1 */\n          tag_428\n          dup4\n          dup11\n          tag_9\n          jump\t// in\n        tag_428:\n            /* \"src/curve/stable/StableMintBurn.sol\":3752:3812  _nonOptimalMintFee(lAmount0, lAmount1, lReserve0, lReserve1) */\n          swap6\n          tag_429\n          dup5\n          dup3\n          dup10\n          dup12\n          tag_42\n          jump\t// in\n        tag_429:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap12\n          and\n            /* \"src/curve/stable/StableMintBurn.sol\":3822:3849  lReserve0 += uint104(lFee0) */\n          swap1\n          tag_22\n          jump\t// in\n        tag_427:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap9\n          and\n            /* \"src/curve/stable/StableMintBurn.sol\":3859:3886  lReserve1 += uint104(lFee1) */\n          swap1\n          tag_22\n          jump\t// in\n        tag_425:\n            /* \"src/curve/stable/StableMintBurn.sol\":3939:3969  _mintFee(lReserve0, lReserve1) */\n          swap7\n          dup13\n          tag_430\n          dup10\n          dup10\n          tag_45\n          jump\t// in\n        tag_430:\n            /* \"src/curve/stable/StableMintBurn.sol\":3984:4001  lTotalSupply == 0 */\n          swap2\n          dup2\n          tag_431\n          jumpi\n            /* \"src/curve/stable/StableMintBurn.sol\":4025:4037  lAmount0 > 0 */\n          pop\n          pop\n          pop\n          dup4\n          iszero\n          iszero\n            /* \"src/curve/stable/StableMintBurn.sol\":4025:4053  lAmount0 > 0 && lAmount1 > 0 */\n          dup1\n          tag_433\n          jumpi\n            /* \"src/curve/stable/StableMintBurn.sol\":3980:4282  if (lTotalSupply == 0) {... */\n        tag_434:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          iszero\n          tag_435\n          jumpi\n          0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc18\n          dup14\n          add\n          dup14\n          dup2\n          gt\n          tag_437\n          jumpi\n          swap11\n            /* \"lib/solmate/src/tokens/ERC20.sol\":6220:6241  totalSupply += amount */\n          0x02\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n            /* \"src/ReservoirPair.sol\":2671:2678  10 ** 3 */\n          0x03e8\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap1\n          dup2\n          dup2\n          add\n          dup1\n          swap2\n          gt\n          tag_439\n          jumpi\n          dup15\n          dup4\n          swap3\n          dup15\n            /* \"lib/solmate/src/tokens/ERC20.sol\":6436:6468  Transfer(address(0), to, amount) */\n          0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap4\n            /* \"lib/solmate/src/tokens/ERC20.sol\":6220:6241  totalSupply += amount */\n          0x02\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sstore\n          dup5\n          dup1\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":6387:6396  balanceOf */\n          0x03\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup4\n          mstore\n          dup1\n          dup6\n          keccak256\n          dup3\n          dup2\n          sload\n          add\n          swap1\n          sstore\n          mload\n          swap1\n          dup2\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":6436:6468  Transfer(address(0), to, amount) */\n          log3\n            /* \"src/curve/stable/StableMintBurn.sol\":3980:4282  if (lTotalSupply == 0) {... */\n        tag_441:\n            /* \"src/curve/stable/StableMintBurn.sol\":4299:4314  rLiquidity != 0 */\n          dup11\n          iszero\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          tag_442\n          jumpi\n            /* \"src/curve/stable/StableMintBurn.sol\":4367:4377  rLiquidity */\n          pop\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffffffffffff\n            /* \"src/curve/stable/StableMintBurn.sol\":4367:4377  rLiquidity */\n          dup11\n          swap12\n          swap13\n          tag_444\n            /* \"src/curve/stable/StableMintBurn.sol\":4817:4836  lBlockTimestampLast */\n          tag_445\n            /* \"src/curve/stable/StableMintBurn.sol\":4367:4377  rLiquidity */\n          swap12\n          swap13\n            /* \"src/curve/stable/StableMintBurn.sol\":4611:4643  lastInvariant = uint192(lNewLiq) */\n          tag_446\n            /* \"src/curve/stable/StableMintBurn.sol\":4367:4377  rLiquidity */\n          swap5\n          tag_40\n          jump\t// in\n        tag_444:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          and\n          0xffffffffffffffffffffffffffffffffffffffffffffffff\n            /* \"src/curve/stable/StableMintBurn.sol\":4611:4643  lastInvariant = uint192(lNewLiq) */\n          0x010012\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap2\n          and\n          0xffffffffffffffff000000000000000000000000000000000000000000000000\n          dup3\n          sload\n          and\n          or\n          swap1\n          sstore\n          jump\n            /* \"src/curve/stable/StableMintBurn.sol\":4611:4643  lastInvariant = uint192(lNewLiq) */\n        tag_446:\n            /* \"src/curve/stable/StableMintBurn.sol\":4653:4693  lastInvariantAmp = _getCurrentAPrecise() */\n          tag_447\n            /* \"src/curve/stable/StableMintBurn.sol\":4672:4693  _getCurrentAPrecise() */\n          tag_448\n          tag_48\n          jump\t// in\n        tag_448:\n            /* \"src/curve/stable/StableMintBurn.sol\":4611:4643  lastInvariant = uint192(lNewLiq) */\n          0x010012\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap1\n          0xffffffffffffffffffffffffffffffffffffffffffffffff\n          0xffffffffffffffff000000000000000000000000000000000000000000000000\n          dup4\n          sload\n          swap3\n          0xc0\n          shl\n          and\n          swap2\n          and\n          or\n          swap1\n          sstore\n          jump\n            /* \"src/curve/stable/StableMintBurn.sol\":4653:4693  lastInvariantAmp = _getCurrentAPrecise() */\n        tag_447:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup9\n          mload\n          swap2\n          dup3\n          mstore\n          dup11\n          dup3\n          add\n          mstore\n            /* \"src/curve/stable/StableMintBurn.sol\":4709:4745  Mint(msg.sender, lAmount0, lAmount1) */\n          0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\n            /* \"src/curve/stable/StableMintBurn.sol\":4714:4724  msg.sender */\n          dup9\n          caller\n            /* \"src/curve/stable/StableMintBurn.sol\":4709:4745  Mint(msg.sender, lAmount0, lAmount1) */\n          swap3\n          log2\n            /* \"src/curve/stable/StableMintBurn.sol\":4817:4836  lBlockTimestampLast */\n          tag_21\n          jump\t// in\n        tag_445:\n          tag_449\n          tag_41\n          jump\t// in\n        tag_449:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_442:\n          0x64\n          swap1\n          dup13\n          dup12\n          mload\n          swap2\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          dup3\n          add\n          mstore\n          0x1b\n          0x24\n          dup3\n          add\n          mstore\n          0x53503a20494e53554646494349454e545f4c49515f4d494e5445440000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n        tag_439:\n          0x24\n          dup4\n          0x11\n          dup7\n          0x4e487b7100000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          mstore\n          revert\n        tag_437:\n          0x24\n          dup13\n          0x11\n          dup5\n          0x4e487b7100000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          mstore\n          revert\n        tag_435:\n          0x64\n          swap1\n          dup13\n          dup12\n          mload\n          swap2\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          dup3\n          add\n          mstore\n          0x13\n          0x24\n          dup3\n          add\n          mstore\n          0x53503a20494e56414c49445f414d4f554e545300000000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n            /* \"src/curve/stable/StableMintBurn.sol\":4025:4053  lAmount0 > 0 && lAmount1 > 0 */\n        tag_433:\n            /* \"src/curve/stable/StableMintBurn.sol\":4041:4053  lAmount1 > 0 */\n          pop\n          dup3\n          iszero\n          iszero\n            /* \"src/curve/stable/StableMintBurn.sol\":4025:4053  lAmount0 > 0 && lAmount1 > 0 */\n          jump(tag_434)\n            /* \"src/curve/stable/StableMintBurn.sol\":3980:4282  if (lTotalSupply == 0) {... */\n        tag_431:\n            /* \"src/curve/stable/StableMintBurn.sol\":4225:4271  ((lNewLiq - lOldLiq) * lTotalSupply) / lOldLiq */\n          tag_450\n            /* \"src/curve/stable/StableMintBurn.sol\":4227:4244  lNewLiq - lOldLiq */\n          swap4\n          swap14\n          pop\n          swap1\n          tag_451\n          dup4\n            /* \"src/curve/stable/StableMintBurn.sol\":4226:4260  (lNewLiq - lOldLiq) * lTotalSupply */\n          tag_452\n            /* \"src/curve/stable/StableMintBurn.sol\":4227:4244  lNewLiq - lOldLiq */\n          swap4\n          tag_9\n          jump\t// in\n        tag_451:\n            /* \"src/curve/stable/StableMintBurn.sol\":4226:4260  (lNewLiq - lOldLiq) * lTotalSupply */\n          tag_36\n          jump\t// in\n        tag_452:\n            /* \"src/curve/stable/StableMintBurn.sol\":4225:4271  ((lNewLiq - lOldLiq) * lTotalSupply) / lOldLiq */\n          tag_37\n          jump\t// in\n        tag_450:\n            /* \"src/curve/stable/StableMintBurn.sol\":3980:4282  if (lTotalSupply == 0) {... */\n          swap10\n          jump(tag_441)\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n        tag_93:\n          dup4\n          dup3\n          jumpi(tag_166, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_166\n          jumpi\n          0x80\n          swap1\n            /* \"src/curve/stable/StableMintBurn.sol\":1399:1431  AmplificationData public ampData */\n          0x010010\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n          dup2\n          mload\n          swap2\n          0xffffffffffffffff\n          dup1\n          dup4\n          and\n          dup5\n          mstore\n          dup1\n          dup4\n          dup4\n          shr\n          and\n          0x20\n          dup6\n          add\n          mstore\n          dup3\n          dup6\n          shr\n          and\n          swap1\n          dup4\n          add\n          mstore\n          0xc0\n          shr\n          0x60\n          dup3\n          add\n          mstore\n          return\n        tag_91:\n          dup4\n          dup3\n          jumpi(tag_166, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_166\n          jumpi\n          0x20\n          swap1\n            /* \"src/ReservoirPair.sol\":3460:3482  uint256 public swapFee */\n          0x07\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_89:\n          swap2\n          pop\n          jumpi(tag_180, callvalue)\n          jumpi(tag_180, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))\n          dup2\n          calldataload\n            /* \"src/ReservoirPair.sol\":3741:3748  factory */\n          swap2\n            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */\n          tag_465\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":3741:3748  factory */\n          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":3719:3729  msg.sender */\n          caller\n            /* \"src/ReservoirPair.sol\":3719:3749  msg.sender == address(factory) */\n          eq\n            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */\n          tag_14\n          jump\t// in\n        tag_465:\n            /* \"src/ReservoirPair.sol\":17789:17807  0 < aMaxChangeRate */\n          dup3\n          iszero\n          iszero\n            /* \"src/ReservoirPair.sol\":17789:17847  0 < aMaxChangeRate && aMaxChangeRate <= MAX_CHANGE_PER_SEC */\n          dup1\n          tag_466\n          jumpi\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n        tag_467:\n            /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */\n          iszero\n          tag_468\n          jumpi\n            /* \"src/ReservoirPair.sol\":17917:17930  maxChangeRate */\n          pop\n            /* \"src/ReservoirPair.sol\":17896:17947  MaxChangeRateUpdated(maxChangeRate, aMaxChangeRate) */\n          0x807b9f5907da3f00bf587e77bc07247e1c7ff5ae46c93a584b3a075be0b1bac2\n            /* \"src/ReservoirPair.sol\":17917:17930  maxChangeRate */\n          0x01000d\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap2\n          dup3\n          sload\n          dup2\n          mload\n          swap1\n          dup2\n          mstore\n          dup5\n          0x20\n          dup3\n          add\n          mstore\n            /* \"src/ReservoirPair.sol\":17896:17947  MaxChangeRateUpdated(maxChangeRate, aMaxChangeRate) */\n          log1\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sstore\n          dup1\n          return\n            /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */\n        tag_468:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x20\n            /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */\n          0x64\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap3\n          mload\n            /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */\n          swap2\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          dup3\n          add\n          mstore\n          0x1d\n          0x24\n          dup3\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mstore\n            /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */\n          0x4f573a20494e56414c49445f4348414e47455f5045525f5345434f4e44000000\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x44\n          dup3\n          add\n            /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */\n          mstore\n          revert\n            /* \"src/ReservoirPair.sol\":17789:17847  0 < aMaxChangeRate && aMaxChangeRate <= MAX_CHANGE_PER_SEC */\n        tag_466:\n            /* \"src/ReservoirPair.sol\":17811:17847  aMaxChangeRate <= MAX_CHANGE_PER_SEC */\n          pop\n            /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */\n          0x2386f26fc10000\n            /* \"src/ReservoirPair.sol\":17811:17847  aMaxChangeRate <= MAX_CHANGE_PER_SEC */\n          dup4\n          gt\n          iszero\n            /* \"src/ReservoirPair.sol\":17789:17847  0 < aMaxChangeRate && aMaxChangeRate <= MAX_CHANGE_PER_SEC */\n          jump(tag_467)\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n        tag_87:\n          dup4\n          dup3\n          jumpi(tag_166, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_166\n          jumpi\n          0x20\n          swap1\n            /* \"src/ReservoirPair.sol\":17128:17159  uint256 public prevClampedPrice */\n          0x01000e\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_85:\n          dup4\n          dup3\n          jumpi(tag_166, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_166\n          jumpi\n          0x20\n          swap1\n          mload\n            /* \"src/ReservoirPair.sol\":2789:2796  500_000 */\n          0x07a120\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup2\n          mstore\n          return\n        tag_83:\n          dup4\n          dup3\n          jumpi(tag_166, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_166\n          jumpi\n          0x20\n          swap1\n          tag_482\n          tag_10\n          jump\t// in\n        tag_482:\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_81:\n          dup4\n          dup3\n          jumpi(tag_166, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_166\n          jumpi\n          dup1\n            /* \"src/ReservoirPair.sol\":17490:17522  factory.read(ORACLE_CALLER_NAME) */\n          tag_487\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap2\n          mload\n          tag_488\n          dup2\n          tag_3\n          jump\t// in\n        tag_488:\n          0x14\n          dup2\n          mstore\n          0x5368617265643a3a6f7261636c6543616c6c6572000000000000000000000000\n          0x20\n          dup3\n          add\n          mstore\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":17490:17497  factory */\n          swap3\n          dup4\n          swap2\n          dup3\n          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":17490:17522  factory.read(ORACLE_CALLER_NAME) */\n          tag_52\n          jump\t// in\n        tag_487:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":17562:17574  oracleCaller */\n          swap1\n          0x01000f\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap3\n          dup4\n          sload\n          swap1\n          dup2\n          and\n            /* \"src/ReservoirPair.sol\":17548:17574  lNewCaller != oracleCaller */\n          dup1\n          dup5\n          sub\n            /* \"src/ReservoirPair.sol\":17544:17690  if (lNewCaller != oracleCaller) {... */\n          tag_489\n          jumpi\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup6\n          dup1\n          return\n            /* \"src/ReservoirPair.sol\":17544:17690  if (lNewCaller != oracleCaller) {... */\n        tag_489:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup3\n            /* \"src/ReservoirPair.sol\":17595:17640  OracleCallerUpdated(oracleCaller, lNewCaller) */\n          0x262681b3b01b61ff6d02569759105771205cdd274fb3c45535b50632e0a3523f\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap2\n          0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n          swap5\n          mload\n          swap1\n          dup2\n          mstore\n            /* \"src/ReservoirPair.sol\":16881:16903  \"Shared::oracleCaller\" */\n          dup6\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x20\n            /* \"src/ReservoirPair.sol\":16881:16903  \"Shared::oracleCaller\" */\n          dup3\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mstore\n            /* \"src/ReservoirPair.sol\":17595:17640  OracleCallerUpdated(oracleCaller, lNewCaller) */\n          log1\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          and\n          or\n          swap1\n          sstore\n            /* \"src/ReservoirPair.sol\":17544:17690  if (lNewCaller != oracleCaller) {... */\n          dup2\n          dup1\n          dup1\n          dup1\n          dup1\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup6\n          dup1\n          return\n        tag_79:\n          dup4\n          dup3\n          jumpi(tag_166, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_166\n          jumpi\n          0x20\n          swap1\n          mload\n          0xff\n            /* \"lib/solmate/src/tokens/ERC20.sol\":1083:1114  uint8 public immutable decimals */\n          immutable(\"0xb7b2278e6c1d8d0abc309f6bf9256046dfb6cd1d61f6bb10388e8ea4928d3539\")\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          and\n          dup2\n          mstore\n          return\n        tag_77:\n          dup4\n          dup3\n          jumpi(tag_166, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_166\n          jumpi\n          0x20\n          swap1\n            /* \"src/ReservoirPair.sol\":3587:3613  uint256 public platformFee */\n          0x09\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_75:\n          swap1\n          dup4\n          jumpi(tag_157, callvalue)\n          jumpi(tag_157, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x60))\n          tag_503\n          tag_7\n          jump\t// in\n        tag_503:\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3594:3620  Transfer(from, to, amount) */\n          0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          tag_504\n          tag_8\n          jump\t// in\n        tag_504:\n          swap5\n          calldataload(0x44)\n          dup6\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup1\n          swap6\n          and\n          swap5\n          dup6\n          dup8\n          mstore\n          0x20\n          swap9\n          dup5\n          dup11\n          swap6\n          dup7\n          mstore\n          dup4\n          dup10\n          keccak256\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3225:3235  msg.sender */\n          caller\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup11\n          mstore\n          dup7\n          mstore\n          dup4\n          dup10\n          keccak256\n          sload\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3287:3315  allowed != type(uint256).max */\n          dup6\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3298:3315  type(uint256).max */\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3287:3315  allowed != type(uint256).max */\n          dup3\n          sub\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3283:3363  if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount */\n          tag_505\n          jumpi\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n        tag_506:\n          pop\n          pop\n          pop\n          dup7\n          dup9\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3374:3383  balanceOf */\n          0x03\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup6\n          mstore\n          dup3\n          dup9\n          keccak256\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3374:3399  balanceOf[from] -= amount */\n          tag_507\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup6\n          dup3\n          sload\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3374:3399  balanceOf[from] -= amount */\n          tag_9\n          jump\t// in\n        tag_507:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap1\n          sstore\n          and\n          swap6\n          dup7\n          dup2\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3374:3383  balanceOf */\n          0x03\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup5\n          mstore\n          keccak256\n          dup2\n          dup2\n          sload\n          add\n          swap1\n          sstore\n          dup6\n          mload\n          swap1\n          dup2\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3594:3620  Transfer(from, to, amount) */\n          log3\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mload\n          0x01\n          dup2\n          mstore\n          return\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3283:3363  if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount */\n        tag_505:\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3347:3363  allowed - amount */\n          tag_508\n          swap2\n          tag_9\n          jump\t// in\n        tag_508:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap1\n          dup9\n          dup11\n          mstore\n          dup7\n          mstore\n          dup4\n          dup10\n          keccak256\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3225:3235  msg.sender */\n          caller\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup11\n          mstore\n          dup7\n          mstore\n          dup4\n          dup10\n          keccak256\n          sstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3283:3363  if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount */\n          dup11\n          dup1\n          dup6\n          jump(tag_506)\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n        tag_73:\n          dup4\n          dup3\n          jumpi(tag_166, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_166\n          jumpi\n          0x20\n          swap1\n            /* \"lib/solmate/src/tokens/ERC20.sol\":1304:1330  uint256 public totalSupply */\n          0x02\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_71:\n          dup4\n          dup3\n          jumpi(tag_166, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_166\n          jumpi\n          0x20\n          swap1\n          mload\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":2915:2944  ERC20 public immutable token0 */\n          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          and\n          dup2\n          mstore\n          return\n        tag_69:\n          dup4\n          jumpi(tag_157, callvalue)\n          dup1\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_157\n          jumpi\n          tag_159\n          tag_15\n          jump\t// in\n        tag_67:\n          swap1\n          swap2\n          pop\n          jumpi(tag_180, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_180\n          jumpi\n          0x20\n          swap3\n          tag_526\n          tag_7\n          jump\t// in\n        tag_526:\n          swap2\n          dup4\n          calldataload(0x24)\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2561:2571  msg.sender */\n          swap3\n          dup4\n          swap3\n          caller\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup3\n          mstore\n          dup8\n          mstore\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup3\n          dup3\n          keccak256\n          swap6\n          and\n          swap5\n          dup6\n          dup3\n          mstore\n          dup8\n          mstore\n          keccak256\n          sstore\n          dup3\n          mload\n          swap1\n          dup2\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2606:2643  Approval(msg.sender, spender, amount) */\n          0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2561:2571  msg.sender */\n          dup5\n          caller\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2606:2643  Approval(msg.sender, spender, amount) */\n          swap3\n          log3\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mload\n          0x01\n          dup2\n          mstore\n          return\n        tag_65:\n          dup4\n          dup3\n          jumpi(tag_166, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_166\n          jumpi\n          0x80\n          swap1\n          tag_531\n          tag_11\n          jump\t// in\n        tag_531:\n          swap1\n          0xffffffffffffffffffffffffff\n          swap2\n          dup3\n          dup2\n          mload\n          and\n            /* \"src/ReservoirPair.sol\":5849:5864  lSlot0.reserve1 */\n          swap3\n          0x20\n          dup3\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mload\n          and\n            /* \"src/ReservoirPair.sol\":5920:5942  lSlot0.packedTimestamp */\n          swap2\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xffff\n            /* \"src/ReservoirPair.sol\":5962:5974  lSlot0.index */\n          0x60\n            /* \"src/ReservoirPair.sol\":4678:4688  0x7FFFFFFF */\n          0x7fffffff\n            /* \"src/ReservoirPair.sol\":5920:5942  lSlot0.packedTimestamp */\n          dup4\n          dup6\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mload\n            /* \"src/ReservoirPair.sol\":4662:4688  aRawTimestamp & 0x7FFFFFFF */\n          and\n            /* \"src/ReservoirPair.sol\":5962:5974  lSlot0.index */\n          swap4\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mload\n          and\n          swap3\n          dup2\n          mload\n          swap5\n          dup6\n          mstore\n            /* \"src/ReservoirPair.sol\":5849:5864  lSlot0.reserve1 */\n          0x20\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup6\n          add\n          mstore\n          dup4\n          add\n          mstore\n            /* \"src/ReservoirPair.sol\":5962:5974  lSlot0.index */\n          0x60\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup3\n          add\n          mstore\n          return\n        tag_63:\n          swap3\n          pop\n          pop\n          jumpi(tag_180, callvalue)\n          dup3\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_180\n          jumpi\n          dup3\n          dup1\n          sload\n          tag_536\n          dup2\n          tag_1\n          jump\t// in\n        tag_536:\n          dup1\n          dup6\n          mstore\n          swap2\n          0x01\n          swap2\n          dup1\n          dup4\n          and\n          swap1\n          dup2\n          iszero\n          tag_351\n          jumpi\n          pop\n          0x01\n          eq\n          tag_539\n          jumpi\n          pop\n          pop\n          pop\n          tag_355\n          dup3\n          tag_356\n          swap5\n          sub\n          dup4\n          tag_4\n          jump\t// in\n        tag_539:\n          dup1\n          dup1\n          swap7\n          pop\n          mstore\n          0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563\n        tag_543:\n          dup3\n          dup7\n          lt\n          tag_544\n          jumpi\n          pop\n          pop\n          pop\n          tag_355\n          dup3\n          0x20\n          tag_356\n          swap6\n          dup3\n          add\n          add\n          swap5\n          jump(tag_354)\n        tag_544:\n          dup1\n          sload\n          0x20\n          dup8\n          dup8\n          add\n          dup2\n          add\n          swap2\n          swap1\n          swap2\n          mstore\n          swap1\n          swap6\n          add\n          swap5\n          dup2\n          add\n          jump(tag_543)\n        tag_1:\n          swap1\n          0x01\n          dup3\n          dup2\n          shr\n          swap3\n          and\n          dup1\n          iszero\n          tag_546\n          jumpi\n        tag_547:\n          0x20\n          dup4\n          lt\n          eq\n          tag_548\n          jumpi\n          jump\t// out\n        tag_548:\n          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n          mstore(0x04, 0x22)\n          revert(0x00, 0x24)\n        tag_546:\n          swap2\n          0x7f\n          and\n          swap2\n          jump(tag_547)\n        tag_2:\n          0x80\n          dup2\n          add\n          swap1\n          dup2\n          lt\n          0xffffffffffffffff\n          dup3\n          gt\n          or\n          tag_550\n          jumpi\n          0x40\n          mstore\n          jump\t// out\n        tag_550:\n          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n          mstore(0x04, 0x41)\n          revert(0x00, 0x24)\n        tag_3:\n          0x40\n          dup2\n          add\n          swap1\n          dup2\n          lt\n          0xffffffffffffffff\n          dup3\n          gt\n          or\n          tag_550\n          jumpi\n          0x40\n          mstore\n          jump\t// out\n        tag_4:\n          swap1\n          0x1f\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n          swap2\n          add\n          and\n          dup2\n          add\n          swap1\n          dup2\n          lt\n          0xffffffffffffffff\n          dup3\n          gt\n          or\n          tag_550\n          jumpi\n          0x40\n          mstore\n          jump\t// out\n        tag_5:\n          0x00\n        tag_556:\n          dup4\n          dup2\n          lt\n          tag_557\n          jumpi\n          pop\n          pop\n          0x00\n          swap2\n          add\n          mstore\n          jump\t// out\n        tag_557:\n          dup2\n          dup2\n          add\n          mload\n          dup4\n          dup3\n          add\n          mstore\n          0x20\n          add\n          jump(tag_556)\n        tag_6:\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n          0x1f\n          0x40\n          swap4\n          0x20\n          dup5\n          mstore\n          tag_559\n          dup2\n          mload\n          dup1\n          swap3\n          dup2\n          0x20\n          dup9\n          add\n          mstore\n          0x20\n          dup9\n          dup9\n          add\n          swap2\n          add\n          tag_5\n          jump\t// in\n        tag_559:\n          add\n          and\n          add\n          add\n          swap1\n          jump\t// out\n        tag_7:\n          calldataload(0x04)\n          swap1\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup3\n          and\n          dup3\n          sub\n          tag_560\n          jumpi\n          jump\t// out\n        tag_560:\n          0x00\n          dup1\n          revert\n        tag_8:\n          calldataload(0x24)\n          swap1\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup3\n          and\n          dup3\n          sub\n          tag_560\n          jumpi\n          jump\t// out\n        tag_9:\n          swap2\n          swap1\n          dup3\n          sub\n          swap2\n          dup3\n          gt\n          tag_564\n          jumpi\n          jump\t// out\n        tag_564:\n          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n          mstore(0x04, 0x11)\n          revert(0x00, 0x24)\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5327:5504  function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {... */\n        tag_10:\n          0x00\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5410:5423  block.chainid */\n          chainid\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5427:5443  INITIAL_CHAIN_ID */\n          immutable(\"0x81290bb363e768cff9ff9a5d447e434874948b933698048b966fdf5d744bf636\")\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5410:5443  block.chainid == INITIAL_CHAIN_ID */\n          sub\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5427:5443  INITIAL_CHAIN_ID */\n          tag_566\n          jumpi\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5446:5470  INITIAL_DOMAIN_SEPARATOR */\n          pop\n          immutable(\"0x34382e0db9f4d1365b2614bb97467901a574db9e05159d2f14a2053ade673b06\")\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5327:5504  function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {... */\n          swap1\n          jump\t// out\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5410:5497  block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator() */\n        tag_566:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mload(0x40)\n          dup2\n          sload\n          dup3\n          swap2\n          tag_569\n          dup3\n          tag_1\n          jump\t// in\n        tag_569:\n          dup1\n          dup3\n          mstore\n          dup2\n          0x20\n          swap5\n          dup6\n          dup3\n          add\n          swap5\n          0x01\n          swap1\n          dup8\n          dup3\n          dup3\n          and\n          swap2\n          dup3\n          0x00\n          eq\n          tag_570\n          jumpi\n          pop\n          pop\n          0x01\n          eq\n          tag_572\n          jumpi\n        tag_573:\n          pop\n          tag_574\n          swap3\n          pop\n          sub\n          dup3\n          tag_4\n          jump\t// in\n        tag_574:\n          mload\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5789:5811  keccak256(bytes(name)) */\n          swap1\n          keccak256\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap2\n          mload(0x40)\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5640:5935  abi.encode(... */\n          swap2\n          dup3\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap3\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5672:5767  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n          0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup5\n          mstore\n          0x40\n          dup4\n          add\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5833:5847  keccak256(\"1\") */\n          0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x60\n          dup4\n          add\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5410:5423  block.chainid */\n          chainid\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x80\n          dup4\n          add\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5912:5916  this */\n          address\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xa0\n          dup4\n          add\n          mstore\n          0xa0\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5640:5935  abi.encode(... */\n          dup3\n          mstore\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xc0\n          dup3\n          add\n          swap1\n          dup3\n          dup3\n          lt\n          0xffffffffffffffff\n          dup4\n          gt\n          or\n          tag_575\n          jumpi\n          pop\n          0x40\n          mstore\n          mload\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5613:5949  keccak256(... */\n          swap1\n          keccak256\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5327:5504  function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {... */\n          swap1\n          jump\t// out\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n        tag_575:\n          dup1\n          0x4e487b7100000000000000000000000000000000000000000000000000000000\n          0x24\n          swap3\n          mstore\n          mstore(0x04, 0x41)\n          revert\n        tag_572:\n          dup8\n          dup1\n          mstore\n          dup7\n          swap2\n          pop\n          dup8\n          swap1\n          0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563\n        tag_577:\n          dup6\n          dup4\n          lt\n          tag_578\n          jumpi\n          pop\n          pop\n          tag_574\n          swap4\n          pop\n          dup3\n          add\n          add\n          codesize\n          jump(tag_573)\n        tag_578:\n          dup1\n          sload\n          dup4\n          dup9\n          add\n          dup6\n          add\n          mstore\n          dup7\n          swap5\n          pop\n          dup9\n          swap4\n          swap1\n          swap3\n          add\n          swap2\n          dup2\n          add\n          jump(tag_577)\n        tag_570:\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n          and\n          dup9\n          mstore\n          tag_574\n          swap6\n          iszero\n          iszero\n          0x05\n          shl\n          dup6\n          add\n          add\n          swap3\n          pop\n          codesize\n          swap2\n          pop\n          tag_573\n          swap1\n          pop\n          jump\n        tag_11:\n          mload(0x40)\n          swap1\n          tag_580\n          dup3\n          tag_2\n          jump\t// in\n        tag_580:\n          dup2\n          0x60\n            /* \"src/ReservoirPair.sol\":5783:5789  _slot0 */\n          0x06\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n          0xffffffffffffffffffffffffff\n          dup1\n          dup3\n          and\n          dup5\n          mstore\n          dup2\n          0x68\n          shr\n          and\n          0x20\n          dup5\n          add\n          mstore\n          0xffffffff\n          dup2\n          0xd0\n          shr\n          and\n          0x40\n          dup5\n          add\n          mstore\n          0xf0\n          shr\n          swap2\n          add\n          mstore\n          jump\t// out\n            /* \"src/ReservoirPair.sol\":4905:5467  function _lockAndLoad()... */\n        tag_12:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          tag_581\n          tag_11\n          jump\t// in\n        tag_581:\n          swap1\n          0xffffffffffffffffffffffffff\n          swap2\n          dup3\n          dup2\n          mload\n          and\n            /* \"src/ReservoirPair.sol\":5196:5211  lSlot0.reserve1 */\n          swap3\n          0x20\n          dup3\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mload\n          and\n            /* \"src/ReservoirPair.sol\":5273:5295  lSlot0.packedTimestamp */\n          swap2\n          0x40\n          dup3\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mload\n            /* \"src/ReservoirPair.sol\":4662:4688  aRawTimestamp & 0x7FFFFFFF */\n          swap1\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x01\n            /* \"src/ReservoirPair.sol\":4662:4688  aRawTimestamp & 0x7FFFFFFF */\n          dup1\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xffff\n            /* \"src/ReservoirPair.sol\":5315:5327  lSlot0.index */\n          0x60\n            /* \"src/ReservoirPair.sol\":4678:4688  0x7FFFFFFF */\n          0x7fffffff\n            /* \"src/ReservoirPair.sol\":4662:4688  aRawTimestamp & 0x7FFFFFFF */\n          dup7\n          and\n            /* \"src/ReservoirPair.sol\":5315:5327  lSlot0.index */\n          swap7\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mload\n          and\n          swap4\n            /* \"src/ReservoirPair.sol\":4632:4634  31 */\n          0x1f\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          shr\n          and\n            /* \"src/ReservoirPair.sol\":4615:4639  aRawTimestamp >> 31 == 1 */\n          eq\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          tag_582\n          jumpi\n            /* \"src/ReservoirPair.sol\":4847:4853  _slot0 */\n          0x06\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n          0xffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffff\n          0xffffffff0000000000000000000000000000000000000000000000000000\n            /* \"src/ReservoirPair.sol\":4817:4824  1 << 31 */\n          0x80000000\n            /* \"src/ReservoirPair.sol\":4872:4892  aTimestamp | lLocked */\n          dup7\n          or\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xd0\n          shl\n          and\n          swap2\n          and\n          or\n            /* \"src/ReservoirPair.sol\":4847:4853  _slot0 */\n          0x06\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sstore\n            /* \"src/ReservoirPair.sol\":4905:5467  function _lockAndLoad()... */\n          jump\t// out\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n        tag_582:\n          0x64\n            /* \"src/ReservoirPair.sol\":5273:5295  lSlot0.packedTimestamp */\n          0x40\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mload\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n            /* \"src/ReservoirPair.sol\":5196:5211  lSlot0.reserve1 */\n          0x20\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x04\n          dup3\n          add\n          mstore\n          0x0a\n          0x24\n          dup3\n          add\n          mstore\n          0x5245454e5452414e435900000000000000000000000000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n        tag_14:\n          iszero\n          tag_584\n          jumpi\n          jump\t// out\n        tag_584:\n          0x64\n          mload(0x40)\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          0x20\n          0x04\n          dup3\n          add\n          mstore\n          0x0c\n          0x24\n          dup3\n          add\n          mstore\n          0x503a20464f5242494444454e0000000000000000000000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n            /* \"src/ReservoirPair.sol\":7293:7635  function updateSwapFee() public {... */\n        tag_15:\n            /* \"src/ReservoirPair.sol\":7354:7367  customSwapFee */\n          0x08\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n          0x00\n            /* \"src/ReservoirPair.sol\":7371:7388  type(uint256).max */\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":7354:7388  customSwapFee != type(uint256).max */\n          dup3\n          eq\n            /* \"src/ReservoirPair.sol\":7371:7388  type(uint256).max */\n          tag_586\n          jumpi\n            /* \"src/ReservoirPair.sol\":7354:7443  customSwapFee != type(uint256).max ? customSwapFee : factory.get(swapFeeName).toUint256() */\n          pop\n        tag_588:\n            /* \"src/ReservoirPair.sol\":7469:7476  swapFee */\n          0x07\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n            /* \"src/ReservoirPair.sol\":7457:7476  _swapFee == swapFee */\n          dup1\n          dup3\n          eq\n            /* \"src/ReservoirPair.sol\":7453:7485  if (_swapFee == swapFee) return; */\n          tag_589\n          jumpi\n            /* \"src/ReservoirPair.sol\":2849:2855  20_000 */\n          0x4e20\n            /* \"src/ReservoirPair.sol\":7503:7527  _swapFee <= MAX_SWAP_FEE */\n          dup3\n          gt\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          tag_591\n          jumpi\n          0x40\n            /* \"src/ReservoirPair.sol\":7567:7600  SwapFeeChanged(swapFee, _swapFee) */\n          0xad321f810529281bbb90384fd6fecbdda41509a5ccd7bd5aed986ed827f6a026\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap2\n          dup2\n          mload\n          swap1\n          dup2\n          mstore\n          dup4\n          0x20\n          dup3\n          add\n          mstore\n            /* \"src/ReservoirPair.sol\":7567:7600  SwapFeeChanged(swapFee, _swapFee) */\n          log1\n            /* \"src/ReservoirPair.sol\":7469:7476  swapFee */\n          0x07\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sstore\n            /* \"src/ReservoirPair.sol\":7293:7635  function updateSwapFee() public {... */\n          jump\t// out\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n        tag_591:\n          0x64\n          mload(0x40)\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          0x20\n          0x04\n          dup3\n          add\n          mstore\n          0x13\n          0x24\n          dup3\n          add\n          mstore\n          0x503a20494e56414c49445f535741505f46454500000000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n            /* \"src/ReservoirPair.sol\":7453:7485  if (_swapFee == swapFee) return; */\n        tag_589:\n            /* \"src/ReservoirPair.sol\":7478:7485  return; */\n          pop\n          pop\n          jump\t// out\n            /* \"src/ReservoirPair.sol\":7354:7443  customSwapFee != type(uint256).max ? customSwapFee : factory.get(swapFeeName).toUint256() */\n        tag_586:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap1\n          pop\n          mload(0x40)\n          0x8eaa6ac000000000000000000000000000000000000000000000000000000000\n            /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */\n          dup2\n          mstore\n            /* \"src/ReservoirPair.sol\":7419:7430  swapFeeName */\n          immutable(\"0x4c21324e1a4fdca228db96f937188124acece199982b123b328bdd8fee41b354\")\n            /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */\n          0x04\n          dup3\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mstore\n            /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */\n          0x20\n            /* \"src/ReservoirPair.sol\":7407:7414  factory */\n          dup2\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x24\n            /* \"src/ReservoirPair.sol\":7407:7414  factory */\n          dup2\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":7407:7414  factory */\n          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */\n          gas\n          staticcall\n          swap2\n          dup3\n          iszero\n          tag_593\n          jumpi\n          dup1\n          swap3\n          tag_595\n          jumpi\n            /* \"src/ReservoirPair.sol\":7354:7443  customSwapFee != type(uint256).max ? customSwapFee : factory.get(swapFeeName).toUint256() */\n        tag_596:\n          pop\n          pop\n          jump(tag_588)\n            /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */\n        tag_595:\n          swap1\n          swap2\n          pop\n          0x20\n          dup3\n          returndatasize\n          dup3\n          gt\n          tag_597\n          jumpi\n        tag_598:\n          dup2\n          tag_599\n          0x20\n          swap4\n          dup4\n          tag_4\n          jump\t// in\n        tag_599:\n          dup2\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sub\n          slt\n          tag_157\n          jumpi\n          pop\n          mload\n            /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */\n          codesize\n          dup1\n          jump(tag_596)\n        tag_597:\n          returndatasize\n          swap2\n          pop\n          jump(tag_598)\n        tag_593:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mload(0x40)\n          swap1\n          returndatasize\n          swap1\n          dup3\n          returndatacopy\n          returndatasize\n          swap1\n          revert\n            /* \"src/ReservoirPair.sol\":7641:8058  function updatePlatformFee() public {... */\n        tag_16:\n            /* \"src/ReservoirPair.sol\":7722:7739  customPlatformFee */\n          0x0a\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n            /* \"src/ReservoirPair.sol\":7743:7760  type(uint256).max */\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":7722:7760  customPlatformFee != type(uint256).max */\n          dup2\n          eq\n            /* \"src/ReservoirPair.sol\":7743:7760  type(uint256).max */\n          tag_602\n          jumpi\n            /* \"src/ReservoirPair.sol\":7722:7826  customPlatformFee != type(uint256).max ? customPlatformFee : factory.read(PLATFORM_FEE_NAME).toUint256() */\n        tag_604:\n            /* \"src/ReservoirPair.sol\":7856:7867  platformFee */\n          0x09\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n            /* \"src/ReservoirPair.sol\":7840:7867  _platformFee == platformFee */\n          dup1\n          dup3\n          eq\n            /* \"src/ReservoirPair.sol\":7836:7876  if (_platformFee == platformFee) return; */\n          tag_589\n          jumpi\n            /* \"src/ReservoirPair.sol\":2789:2796  500_000 */\n          0x07a120\n            /* \"src/ReservoirPair.sol\":7894:7926  _platformFee <= MAX_PLATFORM_FEE */\n          dup3\n          gt\n            /* \"src/ReservoirPair.sol\":2439:2460  \"Shared::platformFee\" */\n          tag_607\n          jumpi\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x40\n            /* \"src/ReservoirPair.sol\":7970:8015  PlatformFeeChanged(platformFee, _platformFee) */\n          0xc98a8b10b63c929f7799380bb4a0c444c713ebf74d8732f944c915034121aad1\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap2\n          dup2\n          mload\n          swap1\n          dup2\n          mstore\n          dup4\n          0x20\n          dup3\n          add\n          mstore\n            /* \"src/ReservoirPair.sol\":7970:8015  PlatformFeeChanged(platformFee, _platformFee) */\n          log1\n            /* \"src/ReservoirPair.sol\":7856:7867  platformFee */\n          0x09\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sstore\n            /* \"src/ReservoirPair.sol\":7641:8058  function updatePlatformFee() public {... */\n          jump\t// out\n            /* \"src/ReservoirPair.sol\":2439:2460  \"Shared::platformFee\" */\n        tag_607:\n          0x64\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mload(0x40)\n            /* \"src/ReservoirPair.sol\":2439:2460  \"Shared::platformFee\" */\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          0x20\n          0x04\n          dup3\n          add\n          mstore\n          0x17\n          0x24\n          dup3\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mstore\n            /* \"src/ReservoirPair.sol\":2439:2460  \"Shared::platformFee\" */\n          0x503a20494e56414c49445f504c4154464f524d5f464545000000000000000000\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x44\n          dup3\n          add\n            /* \"src/ReservoirPair.sol\":2439:2460  \"Shared::platformFee\" */\n          mstore\n          revert\n            /* \"src/ReservoirPair.sol\":7722:7826  customPlatformFee != type(uint256).max ? customPlatformFee : factory.read(PLATFORM_FEE_NAME).toUint256() */\n        tag_602:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          pop\n            /* \"src/ReservoirPair.sol\":7783:7814  factory.read(PLATFORM_FEE_NAME) */\n          tag_609\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mload(0x40)\n          tag_610\n          dup2\n          tag_3\n          jump\t// in\n        tag_610:\n          0x13\n          dup2\n          mstore\n          0x5368617265643a3a706c6174666f726d46656500000000000000000000000000\n          0x20\n          dup3\n          add\n          mstore\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":7783:7790  factory */\n          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":7783:7814  factory.read(PLATFORM_FEE_NAME) */\n          tag_52\n          jump\t// in\n        tag_609:\n            /* \"src/ReservoirPair.sol\":7722:7826  customPlatformFee != type(uint256).max ? customPlatformFee : factory.read(PLATFORM_FEE_NAME).toUint256() */\n          jump(tag_604)\n            /* \"src/ReservoirPair.sol\":8509:8845  function _safeTransfer(address aToken, address aTo, uint256 aValue) internal returns (bool) {... */\n        tag_17:\n          swap2\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mload(0x40)\n            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */\n          swap1\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */\n          0x20\n          dup4\n          add\n          swap4\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xa9059cbb00000000000000000000000000000000000000000000000000000000\n            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */\n          dup6\n          mstore\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */\n          0x24\n          dup4\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mstore\n            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */\n          0x44\n          dup3\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mstore\n            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */\n          0x44\n            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */\n          dup2\n          mstore\n          tag_611\n          dup2\n          tag_2\n          jump\t// in\n        tag_611:\n          0x00\n            /* \"src/ReservoirPair.sol\":8706:8764  aToken.call(abi.encodeWithSelector(SELECTOR, aTo, aValue)) */\n          swap3\n          dup4\n          swap3\n          dup4\n          dup1\n          swap4\n          mload\n          swap3\n          gas\n          call\n          swap1\n            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */\n          jumpi(tag_612, iszero(returndatasize))\n          returndatasize\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap1\n          0xffffffffffffffff\n          dup3\n          gt\n          tag_575\n          jumpi\n          mload(0x40)\n          swap2\n          tag_616\n            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */\n          0x20\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n          0x1f\n          dup5\n          add\n          and\n          add\n          dup5\n          tag_4\n          jump\t// in\n        tag_616:\n          dup3\n          mstore\n            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */\n          returndatasize\n          dup2\n            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */\n          0x20\n            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */\n          dup5\n          add\n          returndatacopy\n        tag_617:\n            /* \"src/ReservoirPair.sol\":8781:8838  success && (data.length == 0 || abi.decode(data, (bool))) */\n          dup3\n          tag_618\n          jumpi\n            /* \"src/ReservoirPair.sol\":8774:8838  return success && (data.length == 0 || abi.decode(data, (bool))) */\n          pop\n          pop\n            /* \"src/ReservoirPair.sol\":8509:8845  function _safeTransfer(address aToken, address aTo, uint256 aValue) internal returns (bool) {... */\n          swap1\n          jump\t// out\n            /* \"src/ReservoirPair.sol\":8781:8838  success && (data.length == 0 || abi.decode(data, (bool))) */\n        tag_618:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap1\n          dup1\n          swap3\n          pop\n          mload\n            /* \"src/ReservoirPair.sol\":8793:8809  data.length == 0 */\n          swap2\n          dup3\n          iszero\n            /* \"src/ReservoirPair.sol\":8793:8837  data.length == 0 || abi.decode(data, (bool)) */\n          swap3\n          dup4\n          iszero\n          tag_620\n          jumpi\n            /* \"src/ReservoirPair.sol\":8781:8838  success && (data.length == 0 || abi.decode(data, (bool))) */\n        tag_621:\n          pop\n          pop\n          pop\n            /* \"src/ReservoirPair.sol\":8509:8845  function _safeTransfer(address aToken, address aTo, uint256 aValue) internal returns (bool) {... */\n          swap1\n          jump\t// out\n            /* \"src/ReservoirPair.sol\":8793:8837  data.length == 0 || abi.decode(data, (bool)) */\n        tag_620:\n            /* \"src/ReservoirPair.sol\":8813:8837  abi.decode(data, (bool)) */\n          dup2\n          swap3\n          swap4\n          pop\n          swap1\n            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */\n          0x20\n            /* \"src/ReservoirPair.sol\":8813:8837  abi.decode(data, (bool)) */\n          swap2\n          dup2\n          add\n            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */\n          sub\n          slt\n          tag_166\n          jumpi\n            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */\n          0x20\n            /* \"src/ReservoirPair.sol\":8813:8837  abi.decode(data, (bool)) */\n          add\n            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */\n          mload\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap1\n          dup2\n          iszero\n          iszero\n          dup3\n          sub\n          tag_157\n          jumpi\n            /* \"src/ReservoirPair.sol\":8793:8837  data.length == 0 || abi.decode(data, (bool)) */\n          pop\n          codesize\n          dup1\n          dup1\n          jump(tag_621)\n            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */\n        tag_612:\n          0x60\n          swap1\n          jump(tag_617)\n            /* \"src/ReservoirPair.sol\":8981:9714  function _checkedTransfer(ERC20 aToken, address aDestination, uint256 aAmount, uint256 aReserve0, uint256 aReserve1)... */\n        tag_19:\n          swap4\n          swap1\n          swap2\n          swap3\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup1\n          swap6\n          and\n            /* \"src/ReservoirPair.sol\":9134:9187  _safeTransfer(address(aToken), aDestination, aAmount) */\n          swap2\n          tag_626\n          dup6\n          dup6\n          dup6\n          tag_17\n          jump\t// in\n        tag_626:\n            /* \"src/ReservoirPair.sol\":9133:9187  !_safeTransfer(address(aToken), aDestination, aAmount) */\n          iszero\n            /* \"src/ReservoirPair.sol\":9129:9708  if (!_safeTransfer(address(aToken), aDestination, aAmount)) {... */\n          tag_627\n          jumpi\n            /* \"src/ReservoirPair.sol\":8981:9714  function _checkedTransfer(ERC20 aToken, address aDestination, uint256 aAmount, uint256 aReserve0, uint256 aReserve1)... */\n        tag_628:\n          pop\n          pop\n          pop\n          pop\n          pop\n          pop\n          jump\t// out\n            /* \"src/ReservoirPair.sol\":9129:9708  if (!_safeTransfer(address(aToken), aDestination, aAmount)) {... */\n        tag_627:\n            /* \"src/ReservoirPair.sol\":9239:9245  token0 */\n          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup7\n          and\n            /* \"src/ReservoirPair.sol\":9229:9245  aToken == token0 */\n          dup4\n          eq\n          swap2\n            /* \"src/ReservoirPair.sol\":9229:9277  aToken == token0 ? token0Managed : token1Managed */\n          dup3\n          iszero\n          tag_629\n          jumpi\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xffffffffffffffffffffffffff\n          dup1\n            /* \"src/ReservoirPair.sol\":9248:9261  token0Managed */\n          0x0c\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n          and\n            /* \"src/ReservoirPair.sol\":9229:9277  aToken == token0 ? token0Managed : token1Managed */\n        tag_631:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          and\n          swap2\n            /* \"src/ReservoirPair.sol\":9312:9352  aToken == token0 ? aReserve0 : aReserve1 */\n          dup4\n          iszero\n          tag_632\n          jumpi\n          pop\n          swap6\n        tag_634:\n            /* \"src/ReservoirPair.sol\":9370:9398  reserveOut - tokenOutManaged */\n          dup6\n          tag_635\n          dup4\n          dup10\n          tag_9\n          jump\t// in\n        tag_635:\n            /* \"src/ReservoirPair.sol\":9370:9408  reserveOut - tokenOutManaged < aAmount */\n          lt\n          iszero\n          tag_647\n          jumpi\n            /* \"src/ReservoirPair.sol\":9471:9511  aAmount - (reserveOut - tokenOutManaged) */\n          tag_638\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap2\n            /* \"src/ReservoirPair.sol\":9482:9510  reserveOut - tokenOutManaged */\n          tag_639\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap2\n            /* \"src/ReservoirPair.sol\":9428:9440  assetManager */\n          0x0b\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n          and\n            /* \"src/ReservoirPair.sol\":9482:9510  reserveOut - tokenOutManaged */\n          swap8\n          tag_9\n          jump\t// in\n        tag_639:\n            /* \"src/ReservoirPair.sol\":9471:9511  aAmount - (reserveOut - tokenOutManaged) */\n          dup6\n          tag_9\n          jump\t// in\n        tag_638:\n            /* \"src/ReservoirPair.sol\":9428:9512  assetManager.returnAsset(aToken == token0, aAmount - (reserveOut - tokenOutManaged)) */\n          dup6\n          extcodesize\n          iszero\n          tag_560\n          jumpi\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x44\n          0x00\n          swap3\n          dup4\n          mload(0x40)\n            /* \"src/ReservoirPair.sol\":9428:9512  assetManager.returnAsset(aToken == token0, aAmount - (reserveOut - tokenOutManaged)) */\n          swap9\n          dup10\n          swap5\n          dup6\n          swap4\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x1566d96d00000000000000000000000000000000000000000000000000000000\n            /* \"src/ReservoirPair.sol\":9428:9512  assetManager.returnAsset(aToken == token0, aAmount - (reserveOut - tokenOutManaged)) */\n          dup6\n          mstore\n          0x04\n          dup6\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mstore\n          0x24\n          dup5\n          add\n          mstore\n            /* \"src/ReservoirPair.sol\":9428:9512  assetManager.returnAsset(aToken == token0, aAmount - (reserveOut - tokenOutManaged)) */\n          gas\n          call\n          dup1\n          iszero\n          tag_642\n          jumpi\n          tag_644\n          jumpi\n            /* \"src/ReservoirPair.sol\":9366:9698  if (reserveOut - tokenOutManaged < aAmount) {... */\n        tag_645:\n            /* \"src/ReservoirPair.sol\":9538:9591  _safeTransfer(address(aToken), aDestination, aAmount) */\n          tag_646\n          swap4\n          pop\n          tag_17\n          jump\t// in\n        tag_646:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          iszero\n          tag_647\n          jumpi\n            /* \"src/ReservoirPair.sol\":9129:9708  if (!_safeTransfer(address(aToken), aDestination, aAmount)) {... */\n          codesize\n          dup1\n          dup1\n          dup1\n          dup1\n          dup1\n          jump(tag_628)\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n        tag_647:\n          mload(0x40)\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          0x20\n            /* \"src/ReservoirPair.sol\":9428:9512  assetManager.returnAsset(aToken == token0, aAmount - (reserveOut - tokenOutManaged)) */\n          0x04\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup3\n          add\n          mstore\n          0x13\n          0x24\n          dup3\n          add\n          mstore\n          0x52503a205452414e534645525f4641494c454400000000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          0x64\n          swap1\n          revert\n            /* \"src/ReservoirPair.sol\":9428:9512  assetManager.returnAsset(aToken == token0, aAmount - (reserveOut - tokenOutManaged)) */\n        tag_644:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xffffffffffffffff\n          dup5\n          gt\n          tag_550\n          jumpi\n            /* \"src/ReservoirPair.sol\":9538:9591  _safeTransfer(address(aToken), aDestination, aAmount) */\n          tag_646\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap4\n          0x40\n          mstore\n            /* \"src/ReservoirPair.sol\":9428:9512  assetManager.returnAsset(aToken == token0, aAmount - (reserveOut - tokenOutManaged)) */\n          jump(tag_645)\n        tag_642:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mload(0x40)\n          returndatasize\n          0x00\n          dup3\n          returndatacopy\n          returndatasize\n          swap1\n          revert\n            /* \"src/ReservoirPair.sol\":9312:9352  aToken == token0 ? aReserve0 : aReserve1 */\n        tag_632:\n          swap1\n          pop\n          swap6\n          jump(tag_634)\n            /* \"src/ReservoirPair.sol\":9229:9277  aToken == token0 ? token0Managed : token1Managed */\n        tag_629:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xffffffffffffffffffffffffff\n          dup1\n            /* \"src/ReservoirPair.sol\":9264:9277  token1Managed */\n          0x0c\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n          0x68\n          shr\n          and\n            /* \"src/ReservoirPair.sol\":9229:9277  aToken == token0 ? token0Managed : token1Managed */\n          jump(tag_631)\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n        tag_20:\n          iszero\n          tag_653\n          jumpi\n          jump\t// out\n        tag_653:\n          0x64\n          mload(0x40)\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          0x20\n          0x04\n          dup3\n          add\n          mstore\n          0x0c\n          0x24\n          dup3\n          add\n          mstore\n          0x52503a204f564552464c4f570000000000000000000000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n            /* \"src/ReservoirPair.sol\":9804:10769  function _updateAndUnlock(... */\n        tag_21:\n          swap4\n          swap3\n          swap2\n          swap1\n          swap3\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":10007:10037  aBalance0 <= type(uint104).max */\n          dup6\n          gt\n          iszero\n            /* \"src/ReservoirPair.sol\":10007:10071  aBalance0 <= type(uint104).max && aBalance1 <= type(uint104).max */\n          dup1\n          tag_655\n          jumpi\n            /* \"src/ReservoirPair.sol\":9804:10769  function _updateAndUnlock(... */\n        tag_656:\n            /* \"src/ReservoirPair.sol\":9999:10088  require(aBalance0 <= type(uint104).max && aBalance1 <= type(uint104).max, \"RP: OVERFLOW\") */\n          tag_657\n          swap1\n          tag_20\n          jump\t// in\n        tag_657:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":10106:10136  aReserve0 <= type(uint104).max */\n          dup3\n          gt\n          iszero\n            /* \"src/ReservoirPair.sol\":10106:10170  aReserve0 <= type(uint104).max && aReserve1 <= type(uint104).max */\n          dup1\n          tag_658\n          jumpi\n            /* \"src/ReservoirPair.sol\":9804:10769  function _updateAndUnlock(... */\n        tag_659:\n            /* \"src/ReservoirPair.sol\":10098:10187  require(aReserve0 <= type(uint104).max && aReserve1 <= type(uint104).max, \"RP: OVERFLOW\") */\n          tag_660\n          swap1\n          tag_20\n          jump\t// in\n        tag_660:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xffffffff\n            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */\n          dup2\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x7fffffff\n            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */\n          timestamp\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          and\n          sub\n          and\n            /* \"src/ReservoirPair.sol\":10407:10423  lTimeElapsed > 0 */\n          iszero\n          iszero\n            /* \"src/ReservoirPair.sol\":10407:10441  lTimeElapsed > 0 && aReserve0 != 0 */\n          dup1\n          tag_661\n          jumpi\n            /* \"src/ReservoirPair.sol\":9804:10769  function _updateAndUnlock(... */\n        tag_662:\n            /* \"src/ReservoirPair.sol\":10407:10459  lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0 */\n          dup1\n          tag_663\n          jumpi\n            /* \"src/ReservoirPair.sol\":9804:10769  function _updateAndUnlock(... */\n        tag_664:\n            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */\n          tag_665\n          jumpi\n            /* \"src/ReservoirPair.sol\":9804:10769  function _updateAndUnlock(... */\n        tag_666:\n          pop\n          pop\n            /* \"src/ReservoirPair.sol\":10566:10572  _slot0 */\n          0x06\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup1\n          sload\n          0xffff000000000000000000000000000000000000000000000000000000000000\n          and\n          0xffffffffffffffffffffffffff\n          swap5\n          dup6\n          and\n          swap1\n          dup2\n          or\n          0x68\n          dup6\n          swap1\n          shl\n          0xffffffffffffffffffffffffff00000000000000000000000000\n          and\n          or\n          0x7fffffff0000000000000000000000000000000000000000000000000000\n            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */\n          timestamp\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xd0\n          shl\n          and\n          or\n          swap1\n          swap2\n          sstore\n            /* \"src/ReservoirPair.sol\":10718:10762  Sync(uint104(aBalance0), uint104(aBalance1)) */\n          0xff388a12130349259b5ae24af90448f511c2340be808f2c371230fc2da175c44\n          swap4\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x40\n          swap4\n          swap2\n          swap3\n          pop\n          swap1\n          dup4\n          mload\n          swap3\n          dup4\n          mstore\n          and\n          0x20\n          dup3\n          add\n          mstore\n            /* \"src/ReservoirPair.sol\":10718:10762  Sync(uint104(aBalance0), uint104(aBalance1)) */\n          log1\n            /* \"src/ReservoirPair.sol\":9804:10769  function _updateAndUnlock(... */\n          jump\t// out\n            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */\n        tag_665:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap1\n          swap3\n          swap2\n          swap4\n            /* \"src/curve/stable/StableMintBurn.sol\":9895:9901  _slot0 */\n          0x06\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n          swap1\n            /* \"src/curve/stable/StableMintBurn.sol\":9881:9908  _observations[_slot0.index] */\n          tag_668\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup3\n          0xf0\n          shr\n            /* \"src/curve/stable/StableMintBurn.sol\":9881:9908  _observations[_slot0.index] */\n          tag_35\n          jump\t// in\n        tag_668:\n            /* \"src/curve/stable/StableMintBurn.sol\":10011:10032  _getCurrentAPrecise() */\n          pop\n          swap2\n          tag_669\n          tag_48\n          jump\t// in\n        tag_669:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap1\n          0xffffffffffffffffffffffffffffffff\n            /* \"src/curve/stable/StableMintBurn.sol\":10073:10110  aReserve1 * token1PrecisionMultiplier */\n          tag_670\n            /* \"src/curve/stable/StableMintBurn.sol\":10034:10071  aReserve0 * token0PrecisionMultiplier */\n          tag_671\n            /* \"src/curve/stable/StableMintBurn.sol\":10046:10071  token0PrecisionMultiplier */\n          dup3\n          immutable(\"0x372e991e4284f7d12d6b2461cce9899511b05ac053845de253542adb96f2dca0\")\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          and\n            /* \"src/curve/stable/StableMintBurn.sol\":10034:10071  aReserve0 * token0PrecisionMultiplier */\n          dup11\n          tag_36\n          jump\t// in\n        tag_671:\n            /* \"src/curve/stable/StableMintBurn.sol\":10085:10110  token1PrecisionMultiplier */\n          swap2\n          immutable(\"0xc4ba931b733b92a51f51c0955dd7716c7a38f3de911d23a5d0fbd5d23c0fbe8c\")\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          and\n            /* \"src/curve/stable/StableMintBurn.sol\":10073:10110  aReserve1 * token1PrecisionMultiplier */\n          dup11\n          tag_36\n          jump\t// in\n        tag_670:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap1\n          0x01fffffffffffffffe\n          0xffffffffffffffff\n          dup6\n          and\n          swap5\n          0x01\n          shl\n          and\n            /* \"src/libraries/StableOracleMath.sol\":1988:2084  StableMath._computeLiquidityFromAdjustedBalances(reserve0, reserve1, 2 * amplificationParameter) */\n          swap4\n          tag_672\n          dup6\n          dup5\n          dup5\n          tag_58\n          jump\t// in\n        tag_672:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap1\n          dup1\n          dup7\n          div\n            /* \"src/libraries/StableOracleMath.sol\":2057:2058  2 */\n          0x02\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          eq\n          swap1\n          iszero\n          or\n          iszero\n          tag_564\n          jumpi\n            /* \"src/libraries/StableOracleMath.sol\":2182:2209  (invariant * a) - invariant */\n          tag_675\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap1\n            /* \"src/libraries/StableOracleMath.sol\":2183:2196  invariant * a */\n          tag_252\n            /* \"src/libraries/StableMath.sol\":320:323  100 */\n          0x64\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup8\n          div\n            /* \"src/libraries/StableOracleMath.sol\":2183:2196  invariant * a */\n          dup3\n          tag_36\n          jump\t// in\n            /* \"src/libraries/StableOracleMath.sol\":2182:2209  (invariant * a) - invariant */\n        tag_675:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap1\n            /* \"src/libraries/StableMath.sol\":320:323  100 */\n          0x64\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup6\n          div\n          0x01\n          shl\n          swap1\n            /* \"src/libraries/StableMath.sol\":320:323  100 */\n          0x64\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup7\n          div\n          dup3\n          div\n            /* \"src/libraries/StableOracleMath.sol\":2057:2058  2 */\n          0x02\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          eq\n            /* \"src/libraries/StableMath.sol\":320:323  100 */\n          0x64\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup8\n          div\n          iszero\n          or\n          iszero\n          tag_564\n          jumpi\n            /* \"src/libraries/StableOracleMath.sol\":2496:2540  axy2 + ((a * reserve0).mulWadDown(reserve0)) */\n          tag_679\n            /* \"src/libraries/StableOracleMath.sol\":2236:2252  a * 2 * reserve0 */\n          dup7\n            /* \"src/libraries/StableOracleMath.sol\":2504:2539  (a * reserve0).mulWadDown(reserve0) */\n          tag_680\n            /* \"src/libraries/StableOracleMath.sol\":2236:2252  a * 2 * reserve0 */\n          dup4\n            /* \"src/libraries/StableOracleMath.sol\":2505:2517  a * reserve0 */\n          tag_690\n            /* \"src/libraries/StableOracleMath.sol\":2236:2252  a * 2 * reserve0 */\n          dup2\n            /* \"src/libraries/StableMath.sol\":320:323  100 */\n          0x64\n            /* \"src/libraries/StableOracleMath.sol\":2354:2425  axy2 + ((a * reserve1).mulWadDown(reserve1)) - (b.mulWadDown(reserve1)) */\n          tag_682\n            /* \"src/libraries/StableOracleMath.sol\":2236:2252  a * 2 * reserve0 */\n          dup12\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":795:816  mulDivDown(x, y, WAD) */\n          tag_683\n            /* \"src/libraries/StableOracleMath.sol\":2354:2398  axy2 + ((a * reserve1).mulWadDown(reserve1)) */\n          tag_684\n            /* \"src/libraries/StableOracleMath.sol\":2362:2397  (a * reserve1).mulWadDown(reserve1) */\n          tag_685\n            /* \"src/libraries/StableOracleMath.sol\":2496:2567  axy2 + ((a * reserve0).mulWadDown(reserve0)) - (b.mulWadDown(reserve0)) */\n          tag_686\n            /* \"src/libraries/StableOracleMath.sol\":2236:2252  a * 2 * reserve0 */\n          swap16\n            /* \"src/libraries/StableOracleMath.sol\":2363:2375  a * reserve1 */\n          tag_690\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":795:816  mulDivDown(x, y, WAD) */\n          tag_683\n            /* \"src/libraries/StableOracleMath.sol\":2236:2252  a * 2 * reserve0 */\n          swap16\n          dup9\n            /* \"src/libraries/StableOracleMath.sol\":2235:2274  (a * 2 * reserve0).mulWadDown(reserve1) */\n          tag_689\n            /* \"src/libraries/StableOracleMath.sol\":2236:2252  a * 2 * reserve0 */\n          dup5\n          tag_690\n          dup14\n          dup3\n          swap6\n          tag_36\n          jump\t// in\n        tag_690:\n            /* \"src/libraries/StableOracleMath.sol\":2235:2274  (a * 2 * reserve0).mulWadDown(reserve1) */\n          tag_60\n          jump\t// in\n        tag_689:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap15\n          div\n            /* \"src/libraries/StableOracleMath.sol\":2363:2375  a * reserve1 */\n          tag_36\n          jump\t// in\n            /* \"src/libraries/StableOracleMath.sol\":2362:2397  (a * reserve1).mulWadDown(reserve1) */\n        tag_685:\n            /* \"src/libraries/StableOracleMath.sol\":2354:2398  axy2 + ((a * reserve1).mulWadDown(reserve1)) */\n          dup11\n          tag_22\n          jump\t// in\n        tag_684:\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":795:816  mulDivDown(x, y, WAD) */\n          swap2\n          dup14\n          tag_60\n          jump\t// in\n        tag_683:\n            /* \"src/libraries/StableOracleMath.sol\":2354:2425  axy2 + ((a * reserve1).mulWadDown(reserve1)) - (b.mulWadDown(reserve1)) */\n          swap1\n          tag_9\n          jump\t// in\n        tag_682:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap13\n          div\n            /* \"src/libraries/StableOracleMath.sol\":2505:2517  a * reserve0 */\n          tag_36\n          jump\t// in\n            /* \"src/libraries/StableOracleMath.sol\":2504:2539  (a * reserve0).mulWadDown(reserve0) */\n        tag_680:\n            /* \"src/libraries/StableOracleMath.sol\":2496:2540  axy2 + ((a * reserve0).mulWadDown(reserve0)) */\n          swap1\n          tag_22\n          jump\t// in\n        tag_679:\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":795:816  mulDivDown(x, y, WAD) */\n          swap3\n          tag_60\n          jump\t// in\n            /* \"src/libraries/StableOracleMath.sol\":2496:2567  axy2 + ((a * reserve0).mulWadDown(reserve0)) - (b.mulWadDown(reserve0)) */\n        tag_686:\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":655:659  1e18 */\n          0x0de0b6b3a7640000\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":2274:2762  assembly {... */\n          0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21\n          dup5\n          gt\n          dup2\n          mul\n          iszero\n          dup3\n          mul\n          iszero\n          tag_560\n          jumpi\n            /* \"src/curve/stable/StableMintBurn.sol\":10996:11023  _observations[_slot0.index] */\n          tag_693\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":2274:2762  assembly {... */\n          swap4\n          mul\n          swap1\n          dup1\n          dup3\n          div\n          swap2\n          mod\n          iszero\n          iszero\n          add\n            /* \"src/libraries/StableOracleMath.sol\":725:762  LogCompression.toLowResLog(spotPrice) */\n          swap4\n            /* \"src/libraries/StableOracleMath.sol\":3356:3389  LogCompression.toLowResLog(sqrtK) */\n          tag_694\n            /* \"src/libraries/StableOracleMath.sol\":3306:3325  reserve0 * reserve1 */\n          tag_695\n            /* \"src/curve/stable/StableMintBurn.sol\":10357:10420  _calcClampedPrice(currRawPrice, prevClampedPrice, aTimeElapsed) */\n          tag_696\n            /* \"src/libraries/StableOracleMath.sol\":725:762  LogCompression.toLowResLog(spotPrice) */\n          tag_697\n          dup9\n          tag_55\n          jump\t// in\n        tag_697:\n            /* \"src/libraries/StableOracleMath.sol\":779:814  rawLogSpotPrice >= type(int112).min */\n          swap8\n            /* \"src/libraries/StableOracleMath.sol\":798:814  type(int112).min */\n          0xffffffffffffffffffffffffffffffffffff8000000000000000000000000000\n            /* \"src/libraries/StableOracleMath.sol\":779:814  rawLogSpotPrice >= type(int112).min */\n          dup10\n          slt\n          iszero\n            /* \"src/libraries/StableOracleMath.sol\":779:853  rawLogSpotPrice >= type(int112).min && rawLogSpotPrice <= type(int112).max */\n          dup1\n          tag_698\n          jumpi\n            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */\n        tag_699:\n            /* \"src/libraries/StableOracleMath.sol\":772:854  assert(rawLogSpotPrice >= type(int112).min && rawLogSpotPrice <= type(int112).max) */\n          tag_700\n          swap1\n          tag_49\n          jump\t// in\n        tag_700:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xffffffff\n            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */\n          dup11\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x7fffffff\n            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */\n          timestamp\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          and\n          sub\n          and\n          swap1\n            /* \"src/curve/stable/StableMintBurn.sol\":10389:10405  prevClampedPrice */\n          0x01000e\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n            /* \"src/curve/stable/StableMintBurn.sol\":10357:10420  _calcClampedPrice(currRawPrice, prevClampedPrice, aTimeElapsed) */\n          swap1\n          tag_50\n          jump\t// in\n        tag_696:\n            /* \"src/libraries/StableOracleMath.sol\":3306:3325  reserve0 * reserve1 */\n          swap12\n          swap1\n          swap11\n          tag_36\n          jump\t// in\n        tag_695:\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */\n          0xb5\n          dup2\n          0x010000000000000000000000000000000000\n          dup2\n          lt\n          iszero\n          tag_701\n          jumpi\n            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */\n        tag_702:\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */\n          dup1\n          0x01000000000000000000\n          0x010000\n          swap3\n          lt\n          iszero\n          tag_703\n          jumpi\n            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */\n        tag_704:\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */\n          0x010000000000\n          dup2\n          lt\n          iszero\n          tag_705\n          jumpi\n            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */\n        tag_706:\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */\n          0x01000000\n          dup2\n          lt\n          iszero\n          tag_707\n          jumpi\n            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */\n        tag_708:\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */\n          add\n          mul\n          0x12\n          shr\n          dup1\n          dup3\n          div\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x01\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */\n          shr\n          dup1\n          dup3\n          div\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x01\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */\n          shr\n          dup1\n          dup3\n          div\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x01\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */\n          shr\n          dup1\n          dup3\n          div\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x01\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */\n          shr\n          dup1\n          dup3\n          div\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x01\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */\n          shr\n          dup1\n          dup3\n          div\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x01\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */\n          shr\n          dup1\n          dup3\n          div\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x01\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */\n          shr\n          dup1\n          dup1\n          swap3\n          div\n          lt\n          swap1\n          sub\n            /* \"src/libraries/StableOracleMath.sol\":3356:3389  LogCompression.toLowResLog(sqrtK) */\n          tag_55\n          jump\t// in\n        tag_694:\n            /* \"src/libraries/StableOracleMath.sol\":3406:3435  rawResult >= type(int112).min */\n          swap8\n            /* \"src/libraries/StableOracleMath.sol\":798:814  type(int112).min */\n          0xffffffffffffffffffffffffffffffffffff8000000000000000000000000000\n            /* \"src/libraries/StableOracleMath.sol\":3406:3435  rawResult >= type(int112).min */\n          dup10\n          slt\n          iszero\n            /* \"src/libraries/StableOracleMath.sol\":3406:3468  rawResult >= type(int112).min && rawResult <= type(int112).max */\n          dup1\n          tag_709\n          jumpi\n            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */\n        tag_710:\n            /* \"src/libraries/StableOracleMath.sol\":3399:3469  assert(rawResult >= type(int112).min && rawResult <= type(int112).max) */\n          tag_711\n          swap1\n          tag_49\n          jump\t// in\n        tag_711:\n            /* \"src/curve/stable/StableMintBurn.sol\":10389:10405  prevClampedPrice */\n          0x01000e\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sstore\n          sload\n          0xffffffff\n            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */\n          dup7\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x7fffffff\n            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */\n          timestamp\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          and\n          sub\n          and\n            /* \"src/curve/stable/StableMintBurn.sol\":9895:9901  _slot0 */\n          0x06\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          signextend\n          swap2\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n          0xffff000000000000000000000000000000000000000000000000000000000000\n          0x01\n          dup4\n          0xf0\n          shr\n          add\n          0xf0\n          shl\n          and\n          swap2\n          and\n          or\n          swap2\n          dup3\n            /* \"src/curve/stable/StableMintBurn.sol\":9895:9901  _slot0 */\n          0x06\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sstore\n          mload(0x40)\n          swap6\n          tag_712\n          dup8\n          tag_2\n          jump\t// in\n        tag_712:\n          0xffffffff\n            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */\n          dup9\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x7fffffff\n            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */\n          timestamp\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          and\n          sub\n          and\n          0x0d\n          signextend\n          swap1\n          0x0d\n          signextend\n          mul\n          0x0d\n          signextend\n          dup3\n          0x0d\n          signextend\n          add\n          0x0d\n          signextend\n          dup7\n          mstore\n            /* \"src/curve/stable/StableMintBurn.sol\":11026:11100  Observation(logAccRawPrice, logAccClampedPrice, logAccLiq, aTimestampLast) */\n          dup1\n          0x20\n          dup8\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap11\n            /* \"src/curve/stable/StableMintBurn.sol\":9895:9901  _slot0 */\n          0x06\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          signextend\n          mul\n            /* \"src/curve/stable/StableMintBurn.sol\":9895:9901  _slot0 */\n          0x06\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          signextend\n          dup3\n          0x70\n          shr\n            /* \"src/curve/stable/StableMintBurn.sol\":9895:9901  _slot0 */\n          0x06\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          signextend\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":9895:9901  _slot0 */\n          0x06\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          signextend\n          dup11\n          mstore\n          0x40\n            /* \"src/curve/stable/StableMintBurn.sol\":11026:11100  Observation(logAccRawPrice, logAccClampedPrice, logAccLiq, aTimestampLast) */\n          dup7\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap9\n            /* \"src/curve/stable/StableMintBurn.sol\":9895:9901  _slot0 */\n          0x06\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          signextend\n          mul\n            /* \"src/curve/stable/StableMintBurn.sol\":9895:9901  _slot0 */\n          0x06\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          signextend\n          swap1\n          0xa8\n          shr\n            /* \"src/curve/stable/StableMintBurn.sol\":9895:9901  _slot0 */\n          0x06\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          signextend\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":9895:9901  _slot0 */\n          0x06\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          signextend\n          dup8\n          mstore\n          0xffffffff\n            /* \"src/curve/stable/StableMintBurn.sol\":11026:11100  Observation(logAccRawPrice, logAccClampedPrice, logAccLiq, aTimestampLast) */\n          0x60\n          dup6\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap6\n          and\n          dup6\n          mstore\n          0xf0\n          shr\n            /* \"src/curve/stable/StableMintBurn.sol\":10996:11023  _observations[_slot0.index] */\n          tag_35\n          jump\t// in\n        tag_693:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          tag_713\n          jumpi\n          swap2\n          mload\n          swap6\n          mload\n          swap5\n          mload\n          swap3\n          mload\n          0xffffffff00000000000000000000000000000000000000000000000000000000\n          0xe0\n          swap2\n          swap1\n          swap2\n          shl\n          and\n          0xa8\n          swap4\n          swap1\n          swap4\n          shl\n          0xffffffffffffff000000000000000000000000000000000000000000\n          and\n          0xffffffffffffffffffffffffffff\n          swap1\n          swap7\n          and\n          0x70\n          swap6\n          swap1\n          swap6\n          shl\n          0xffffffffffffff0000000000000000000000000000\n          and\n          swap5\n          swap1\n          swap5\n          or\n          swap5\n          swap1\n          swap5\n          or\n          or\n          swap1\n          swap3\n          sstore\n          swap1\n          dup1\n          0xffffffffffffffffffffffffff\n          dup1\n            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */\n          jump(tag_666)\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n        tag_713:\n          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n          mstore(0x04, 0x00)\n          revert(0x00, 0x24)\n            /* \"src/libraries/StableOracleMath.sol\":3406:3468  rawResult >= type(int112).min && rawResult <= type(int112).max */\n        tag_709:\n          pop\n            /* \"src/libraries/StableOracleMath.sol\":3452:3468  type(int112).max */\n          0x7fffffffffffffffffffffffffff\n            /* \"src/libraries/StableOracleMath.sol\":3439:3468  rawResult <= type(int112).max */\n          dup10\n          sgt\n          iszero\n            /* \"src/libraries/StableOracleMath.sol\":3406:3468  rawResult >= type(int112).min && rawResult <= type(int112).max */\n          jump(tag_710)\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */\n        tag_707:\n          0x10\n          shr\n          swap2\n          0x08\n          shl\n          swap2\n          jump(tag_708)\n        tag_705:\n          0x20\n          shr\n          swap2\n          0x10\n          shl\n          swap2\n          jump(tag_706)\n        tag_703:\n          0x40\n          shr\n          swap2\n          0x20\n          shl\n          swap2\n          jump(tag_704)\n        tag_701:\n          pop\n          0xb50000000000000000\n          swap1\n          pop\n          0x80\n          dup3\n          swap1\n          shr\n          jump(tag_702)\n            /* \"src/libraries/StableOracleMath.sol\":779:853  rawLogSpotPrice >= type(int112).min && rawLogSpotPrice <= type(int112).max */\n        tag_698:\n          pop\n            /* \"src/libraries/StableOracleMath.sol\":837:853  type(int112).max */\n          0x7fffffffffffffffffffffffffff\n            /* \"src/libraries/StableOracleMath.sol\":818:853  rawLogSpotPrice <= type(int112).max */\n          dup10\n          sgt\n          iszero\n            /* \"src/libraries/StableOracleMath.sol\":779:853  rawLogSpotPrice >= type(int112).min && rawLogSpotPrice <= type(int112).max */\n          jump(tag_699)\n            /* \"src/ReservoirPair.sol\":10407:10459  lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0 */\n        tag_663:\n            /* \"src/ReservoirPair.sol\":10445:10459  aReserve1 != 0 */\n          pop\n          dup3\n          iszero\n          iszero\n            /* \"src/ReservoirPair.sol\":10407:10459  lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0 */\n          jump(tag_664)\n            /* \"src/ReservoirPair.sol\":10407:10441  lTimeElapsed > 0 && aReserve0 != 0 */\n        tag_661:\n            /* \"src/ReservoirPair.sol\":10427:10441  aReserve0 != 0 */\n          pop\n          dup2\n          iszero\n          iszero\n            /* \"src/ReservoirPair.sol\":10407:10441  lTimeElapsed > 0 && aReserve0 != 0 */\n          jump(tag_662)\n            /* \"src/ReservoirPair.sol\":10106:10170  aReserve0 <= type(uint104).max && aReserve1 <= type(uint104).max */\n        tag_658:\n          pop\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":10140:10170  aReserve1 <= type(uint104).max */\n          dup4\n          gt\n          iszero\n            /* \"src/ReservoirPair.sol\":10106:10170  aReserve0 <= type(uint104).max && aReserve1 <= type(uint104).max */\n          jump(tag_659)\n            /* \"src/ReservoirPair.sol\":10007:10071  aBalance0 <= type(uint104).max && aBalance1 <= type(uint104).max */\n        tag_655:\n          pop\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":10041:10071  aBalance1 <= type(uint104).max */\n          dup5\n          gt\n          iszero\n            /* \"src/ReservoirPair.sol\":10007:10071  aBalance0 <= type(uint104).max && aBalance1 <= type(uint104).max */\n          jump(tag_656)\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n        tag_22:\n          swap2\n          swap1\n          dup3\n          add\n          dup1\n          swap3\n          gt\n          tag_564\n          jumpi\n          jump\t// out\n            /* \"src/ReservoirPair.sol\":12869:13005  function _totalToken0() internal view returns (uint256) {... */\n        tag_23:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mload(0x40)\n          0x70a0823100000000000000000000000000000000000000000000000000000000\n            /* \"src/ReservoirPair.sol\":12942:12973  token0.balanceOf(address(this)) */\n          dup2\n          mstore\n            /* \"src/ReservoirPair.sol\":12967:12971  this */\n          address\n            /* \"src/ReservoirPair.sol\":12942:12973  token0.balanceOf(address(this)) */\n          0x04\n          dup3\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mstore\n            /* \"src/ReservoirPair.sol\":12942:12973  token0.balanceOf(address(this)) */\n          0x20\n            /* \"src/ReservoirPair.sol\":12942:12948  token0 */\n          dup2\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x24\n            /* \"src/ReservoirPair.sol\":12942:12948  token0 */\n          dup2\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":12942:12948  token0 */\n          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":12942:12973  token0.balanceOf(address(this)) */\n          gas\n          staticcall\n          dup1\n          iszero\n          tag_642\n          jumpi\n          0x00\n          swap1\n          tag_719\n          jumpi\n            /* \"src/ReservoirPair.sol\":12869:13005  function _totalToken0() internal view returns (uint256) {... */\n        tag_720:\n            /* \"src/ReservoirPair.sol\":12942:12998  token0.balanceOf(address(this)) + uint256(token0Managed) */\n          tag_721\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap2\n          pop\n          0xffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":12984:12997  token0Managed */\n          0x0c\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n          and\n            /* \"src/ReservoirPair.sol\":12942:12998  token0.balanceOf(address(this)) + uint256(token0Managed) */\n          swap1\n          tag_22\n          jump\t// in\n        tag_721:\n            /* \"src/ReservoirPair.sol\":12869:13005  function _totalToken0() internal view returns (uint256) {... */\n          swap1\n          jump\t// out\n            /* \"src/ReservoirPair.sol\":12942:12973  token0.balanceOf(address(this)) */\n        tag_719:\n          0x20\n          dup3\n          returndatasize\n          dup3\n          gt\n          tag_722\n          jumpi\n        tag_723:\n          dup2\n          tag_724\n          0x20\n          swap4\n          dup4\n          tag_4\n          jump\t// in\n        tag_724:\n          dup2\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sub\n          slt\n          tag_157\n          jumpi\n          pop\n            /* \"src/ReservoirPair.sol\":12942:12998  token0.balanceOf(address(this)) + uint256(token0Managed) */\n          tag_721\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap1\n          mload\n            /* \"src/ReservoirPair.sol\":12942:12973  token0.balanceOf(address(this)) */\n          jump(tag_720)\n        tag_722:\n          returndatasize\n          swap2\n          pop\n          jump(tag_723)\n            /* \"src/ReservoirPair.sol\":13011:13147  function _totalToken1() internal view returns (uint256) {... */\n        tag_24:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mload(0x40)\n          0x70a0823100000000000000000000000000000000000000000000000000000000\n            /* \"src/ReservoirPair.sol\":13084:13115  token1.balanceOf(address(this)) */\n          dup2\n          mstore\n            /* \"src/ReservoirPair.sol\":13109:13113  this */\n          address\n            /* \"src/ReservoirPair.sol\":13084:13115  token1.balanceOf(address(this)) */\n          0x04\n          dup3\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mstore\n            /* \"src/ReservoirPair.sol\":13084:13115  token1.balanceOf(address(this)) */\n          0x20\n            /* \"src/ReservoirPair.sol\":13084:13090  token1 */\n          dup2\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x24\n            /* \"src/ReservoirPair.sol\":13084:13090  token1 */\n          dup2\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":13084:13090  token1 */\n          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":13084:13115  token1.balanceOf(address(this)) */\n          gas\n          staticcall\n          dup1\n          iszero\n          tag_642\n          jumpi\n          0x00\n          swap1\n          tag_729\n          jumpi\n            /* \"src/ReservoirPair.sol\":13011:13147  function _totalToken1() internal view returns (uint256) {... */\n        tag_730:\n            /* \"src/ReservoirPair.sol\":13084:13140  token1.balanceOf(address(this)) + uint256(token1Managed) */\n          tag_721\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap2\n          pop\n          0xffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":13126:13139  token1Managed */\n          0x0c\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n          0x68\n          shr\n          and\n            /* \"src/ReservoirPair.sol\":13084:13140  token1.balanceOf(address(this)) + uint256(token1Managed) */\n          swap1\n          tag_22\n          jump\t// in\n            /* \"src/ReservoirPair.sol\":13084:13115  token1.balanceOf(address(this)) */\n        tag_729:\n          0x20\n          dup3\n          returndatasize\n          dup3\n          gt\n          tag_732\n          jumpi\n        tag_733:\n          dup2\n          tag_734\n          0x20\n          swap4\n          dup4\n          tag_4\n          jump\t// in\n        tag_734:\n          dup2\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sub\n          slt\n          tag_157\n          jumpi\n          pop\n            /* \"src/ReservoirPair.sol\":13084:13140  token1.balanceOf(address(this)) + uint256(token1Managed) */\n          tag_721\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap1\n          mload\n            /* \"src/ReservoirPair.sol\":13084:13115  token1.balanceOf(address(this)) */\n          jump(tag_730)\n        tag_732:\n          returndatasize\n          swap2\n          pop\n          jump(tag_733)\n            /* \"src/ReservoirPair.sol\":13916:14584  function _syncManaged(uint256 aReserve0, uint256 aReserve1)... */\n        tag_26:\n          swap1\n          swap2\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n          swap2\n          dup3\n            /* \"src/ReservoirPair.sol\":14074:14086  assetManager */\n          0x0b\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n          and\n            /* \"src/ReservoirPair.sol\":14066:14101  address(assetManager) == address(0) */\n          swap3\n          dup4\n          iszero\n            /* \"src/ReservoirPair.sol\":14062:14157  if (address(assetManager) == address(0)) {... */\n          tag_737\n          jumpi\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mload(0x40)\n          0xd4fac45d00000000000000000000000000000000000000000000000000000000\n            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */\n          dup1\n          dup3\n          mstore\n            /* \"src/ReservoirPair.sol\":14216:14220  this */\n          address\n            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */\n          0x04\n          dup4\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mstore\n            /* \"src/ReservoirPair.sol\":14222:14228  token0 */\n          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup2\n          and\n          0x24\n          dup5\n          add\n          mstore\n          swap2\n          swap6\n            /* \"src/ReservoirPair.sol\":14222:14228  token0 */\n          swap2\n          swap4\n            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */\n          0x20\n          swap4\n            /* \"src/ReservoirPair.sol\":14222:14228  token0 */\n          swap1\n          swap3\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap1\n            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */\n          dup5\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup9\n          dup1\n          0x44\n          dup2\n          add\n            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */\n          sub\n          dup2\n          0x00\n          dup1\n          swap7\n          gas\n          call\n          swap8\n          dup9\n          iszero\n          tag_740\n          jumpi\n          dup3\n          swap9\n          tag_742\n          jumpi\n            /* \"src/ReservoirPair.sol\":13916:14584  function _syncManaged(uint256 aReserve0, uint256 aReserve1)... */\n        tag_743:\n          pop\n            /* \"src/ReservoirPair.sol\":14074:14086  assetManager */\n          0x0b\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n          mload(0x40)\n            /* \"src/ReservoirPair.sol\":14264:14301  assetManager.getBalance(this, token1) */\n          swap4\n          dup5\n          mstore\n            /* \"src/ReservoirPair.sol\":14216:14220  this */\n          address\n            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */\n          0x04\n            /* \"src/ReservoirPair.sol\":14264:14301  assetManager.getBalance(this, token1) */\n          dup6\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mstore\n            /* \"src/ReservoirPair.sol\":14294:14300  token1 */\n          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup2\n          and\n          0x24\n          dup7\n          add\n          mstore\n            /* \"src/ReservoirPair.sol\":14294:14300  token1 */\n          swap4\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap3\n          swap2\n            /* \"src/ReservoirPair.sol\":14294:14300  token1 */\n          dup7\n          swap2\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup5\n          swap2\n          0x44\n          swap2\n          dup4\n          swap2\n          dup7\n          swap2\n          and\n            /* \"src/ReservoirPair.sol\":14264:14301  assetManager.getBalance(this, token1) */\n          gas\n          call\n          swap5\n          dup6\n          iszero\n          tag_745\n          jumpi\n          dup2\n          swap6\n          tag_747\n          jumpi\n            /* \"src/ReservoirPair.sol\":13916:14584  function _syncManaged(uint256 aReserve0, uint256 aReserve1)... */\n        tag_748:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          pop\n          pop\n          pop\n            /* \"src/ReservoirPair.sol\":14551:14577  lToken1Managed.toUint104() */\n          tag_749\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xffffffffffff0000000000000000000000000000000000000000000000000000\n          swap3\n            /* \"src/ReservoirPair.sol\":14499:14525  lToken0Managed.toUint104() */\n          tag_750\n            /* \"src/ReservoirPair.sol\":14409:14472  _handleReport(token1, aReserve1, token1Managed, lToken1Managed) */\n          tag_751\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup7\n          0xffffffffffffffffffffffffff00000000000000000000000000\n          swap6\n            /* \"src/ReservoirPair.sol\":14324:14387  _handleReport(token0, aReserve0, token0Managed, lToken0Managed) */\n          tag_752\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup13\n            /* \"src/ReservoirPair.sol\":14357:14370  token0Managed */\n          0x0c\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n          swap12\n          dup13\n          swap8\n          0xffffffffffffffffffffffffff\n          dup1\n          swap10\n          and\n            /* \"src/ReservoirPair.sol\":14324:14387  _handleReport(token0, aReserve0, token0Managed, lToken0Managed) */\n          swap2\n          tag_29\n          jump\t// in\n        tag_752:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap13\n          dup6\n          dup12\n          0x68\n          shr\n          and\n            /* \"src/ReservoirPair.sol\":14409:14472  _handleReport(token1, aReserve1, token1Managed, lToken1Managed) */\n          swap2\n          tag_29\n          jump\t// in\n        tag_751:\n            /* \"src/ReservoirPair.sol\":14499:14525  lToken0Managed.toUint104() */\n          swap9\n          tag_27\n          jump\t// in\n        tag_750:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":14551:14577  lToken1Managed.toUint104() */\n          swap4\n          tag_27\n          jump\t// in\n        tag_749:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x68\n          shl\n          and\n          swap3\n          and\n          or\n          or\n            /* \"src/ReservoirPair.sol\":14357:14370  token0Managed */\n          0x0c\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sstore\n            /* \"src/ReservoirPair.sol\":13916:14584  function _syncManaged(uint256 aReserve0, uint256 aReserve1)... */\n          jump\t// out\n            /* \"src/ReservoirPair.sol\":14264:14301  assetManager.getBalance(this, token1) */\n        tag_747:\n          swap1\n          swap2\n          dup1\n          swap4\n          swap6\n          pop\n          dup2\n          returndatasize\n          dup4\n          gt\n          tag_753\n          jumpi\n        tag_754:\n          tag_755\n          dup2\n          dup4\n          tag_4\n          jump\t// in\n        tag_755:\n          dup2\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sub\n          slt\n          tag_157\n          jumpi\n          pop\n          mload\n          swap2\n            /* \"src/ReservoirPair.sol\":14551:14577  lToken1Managed.toUint104() */\n          tag_749\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup3\n            /* \"src/ReservoirPair.sol\":14499:14525  lToken0Managed.toUint104() */\n          tag_750\n            /* \"src/ReservoirPair.sol\":14264:14301  assetManager.getBalance(this, token1) */\n          jump(tag_748)\n        tag_753:\n          pop\n          returndatasize\n          jump(tag_754)\n        tag_745:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          pop\n          mload(0x40)\n          swap1\n          returndatasize\n          swap1\n          dup3\n          returndatacopy\n          returndatasize\n          swap1\n          revert\n            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */\n        tag_742:\n          swap1\n          swap8\n          pop\n          dup5\n          dup2\n          dup2\n          returndatasize\n          dup4\n          gt\n          tag_758\n          jumpi\n        tag_759:\n          tag_760\n          dup2\n          dup4\n          tag_4\n          jump\t// in\n        tag_760:\n          dup2\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sub\n          slt\n          tag_166\n          jumpi\n          mload\n            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */\n          swap7\n          codesize\n          jump(tag_743)\n        tag_758:\n          pop\n          returndatasize\n          jump(tag_759)\n        tag_740:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mload(0x40)\n          returndatasize\n          dup5\n          dup3\n          returndatacopy\n          returndatasize\n          swap1\n          revert\n            /* \"src/ReservoirPair.sol\":14062:14157  if (address(assetManager) == address(0)) {... */\n        tag_737:\n          pop\n            /* \"src/ReservoirPair.sol\":14117:14146  return (aReserve0, aReserve1) */\n          swap3\n          swap2\n          pop\n          jump\t// out\n            /* \"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":10566:10758  function toUint104(uint256 value) internal pure returns (uint104) {... */\n        tag_27:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xffffffffffffffffffffffffff\n            /* \"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":10650:10676  value <= type(uint104).max */\n          swap1\n          dup2\n          dup2\n          gt\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          tag_763\n          jumpi\n          and\n            /* \"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":10566:10758  function toUint104(uint256 value) internal pure returns (uint104) {... */\n          swap1\n          jump\t// out\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n        tag_763:\n          0x84\n          mload(0x40)\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          0x20\n          0x04\n          dup3\n          add\n          mstore\n          0x27\n          0x24\n          dup3\n          add\n          mstore\n          0x53616665436173743a2076616c756520646f65736e27742066697420696e2031\n          0x44\n          dup3\n          add\n          mstore\n          0x3034206269747300000000000000000000000000000000000000000000000000\n          0x64\n          dup3\n          add\n          mstore\n          revert\n            /* \"src/ReservoirPair.sol\":13153:13910  function _handleReport(ERC20 aToken, uint256 aReserve, uint256 aPrevBalance, uint256 aNewBalance)... */\n        tag_29:\n          swap2\n          swap1\n          swap3\n            /* \"src/ReservoirPair.sol\":13327:13353  aNewBalance > aPrevBalance */\n          dup2\n          dup2\n          gt\n            /* \"src/ReservoirPair.sol\":13323:13904  if (aNewBalance > aPrevBalance) {... */\n          0x00\n            /* \"src/ReservoirPair.sol\":13327:13353  aNewBalance > aPrevBalance */\n          eq\n          tag_765\n          jumpi\n            /* \"src/ReservoirPair.sol\":13416:13442  aNewBalance - aPrevBalance */\n          tag_767\n            /* \"src/ReservoirPair.sol\":13526:13544  aReserve + lProfit */\n          tag_721\n            /* \"src/ReservoirPair.sol\":13416:13442  aNewBalance - aPrevBalance */\n          swap5\n          swap3\n            /* \"src/ReservoirPair.sol\":13462:13493  ProfitReported(aToken, lProfit) */\n          0xd85f20827037d49bc45762fefff2ddfe9a1a5412ad3dfc1cdca78d2e52f4ba23\n            /* \"src/ReservoirPair.sol\":13416:13442  aNewBalance - aPrevBalance */\n          swap3\n          tag_9\n          jump\t// in\n        tag_767:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x40\n          dup1\n          mload\n          0xffffffffffffffffffffffffffffffffffffffff\n          swap6\n          swap1\n          swap6\n          and\n          dup6\n          mstore\n          0x20\n          dup6\n          add\n          dup3\n          swap1\n          mstore\n          swap1\n          swap4\n            /* \"src/ReservoirPair.sol\":13462:13493  ProfitReported(aToken, lProfit) */\n          log1\n            /* \"src/ReservoirPair.sol\":13526:13544  aReserve + lProfit */\n          tag_22\n          jump\t// in\n            /* \"src/ReservoirPair.sol\":13323:13904  if (aNewBalance > aPrevBalance) {... */\n        tag_765:\n            /* \"src/ReservoirPair.sol\":13565:13591  aNewBalance < aPrevBalance */\n          swap1\n          dup1\n          dup3\n          lt\n          iszero\n          tag_621\n          jumpi\n            /* \"src/ReservoirPair.sol\":13650:13676  aPrevBalance - aNewBalance */\n          tag_773\n            /* \"src/ReservoirPair.sol\":13756:13772  aReserve - lLoss */\n          tag_721\n            /* \"src/ReservoirPair.sol\":13650:13676  aPrevBalance - aNewBalance */\n          swap5\n          swap3\n            /* \"src/ReservoirPair.sol\":13696:13723  LossReported(aToken, lLoss) */\n          0x3ffa9beb41b46c88b16758ef6c236ebd4d07cdfd4d22471030eb6b2d662482d9\n            /* \"src/ReservoirPair.sol\":13650:13676  aPrevBalance - aNewBalance */\n          swap3\n          tag_9\n          jump\t// in\n        tag_773:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x40\n          dup1\n          mload\n          0xffffffffffffffffffffffffffffffffffffffff\n          swap6\n          swap1\n          swap6\n          and\n          dup6\n          mstore\n          0x20\n          dup6\n          add\n          dup3\n          swap1\n          mstore\n          swap1\n          swap4\n            /* \"src/ReservoirPair.sol\":13696:13723  LossReported(aToken, lLoss) */\n          log1\n            /* \"src/ReservoirPair.sol\":13756:13772  aReserve - lLoss */\n          tag_9\n          jump\t// in\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n        tag_30:\n          0x8000000000000000000000000000000000000000000000000000000000000000\n          dup2\n          eq\n          tag_564\n          jumpi\n          0x00\n          sub\n          swap1\n          jump\t// out\n        tag_31:\n          0xffffffffffffffffffffffffff\n          swap2\n          dup3\n          and\n          swap1\n          dup3\n          and\n          sub\n          swap2\n          swap1\n          dup3\n          gt\n          tag_564\n          jumpi\n          jump\t// out\n        tag_32:\n          swap2\n          swap1\n          swap2\n          0xffffffffffffffffffffffffff\n          dup1\n          dup1\n          swap5\n          and\n          swap2\n          and\n          add\n          swap2\n          dup3\n          gt\n          tag_564\n          jumpi\n          jump\t// out\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1328:2944  function safeTransferFrom(... */\n        tag_33:\n          swap1\n          0x00\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1532:2887  assembly {... */\n          0x64\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1328:2944  function safeTransferFrom(... */\n          swap3\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1532:2887  assembly {... */\n          0x20\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1328:2944  function safeTransferFrom(... */\n          swap6\n          dup3\n          swap6\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1532:2887  assembly {... */\n          mload(0x40)\n          swap5\n          0x23b872dd00000000000000000000000000000000000000000000000000000000\n          dup7\n          mstore\n          0x04\n          dup7\n          add\n          mstore\n          0x24\n          dup6\n          add\n          mstore\n          0x44\n          dup5\n          add\n          mstore\n          gas\n          call\n          or(and(eq(mload(0x00), 0x01), gt(returndatasize, 0x1f)), iszero(returndatasize))\n          and\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          iszero\n          tag_783\n          jumpi\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1328:2944  function safeTransferFrom(... */\n          jump\t// out\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n        tag_783:\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1532:2887  assembly {... */\n          0x64\n          0x40\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mload\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1532:2887  assembly {... */\n          0x20\n          0x04\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup3\n          add\n          mstore\n          0x14\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1532:2887  assembly {... */\n          0x24\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup3\n          add\n          mstore\n          0x5452414e534645525f46524f4d5f4641494c4544000000000000000000000000\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1532:2887  assembly {... */\n          0x44\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup3\n          add\n          mstore\n          revert\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":2950:4449  function safeTransfer(... */\n        tag_34:\n          0x00\n          swap2\n          dup3\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":3128:4397  assembly {... */\n          0x44\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":2950:4449  function safeTransfer(... */\n          swap3\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":3128:4397  assembly {... */\n          0x20\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":2950:4449  function safeTransfer(... */\n          swap6\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":3128:4397  assembly {... */\n          mload(0x40)\n          swap4\n          0xa9059cbb00000000000000000000000000000000000000000000000000000000\n          dup6\n          mstore\n          0x04\n          dup6\n          add\n          mstore\n          0x24\n          dup5\n          add\n          mstore\n          gas\n          call\n          or(and(eq(mload(0x00), 0x01), gt(returndatasize, 0x1f)), iszero(returndatasize))\n          and\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          iszero\n          tag_785\n          jumpi\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":2950:4449  function safeTransfer(... */\n          jump\t// out\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n        tag_785:\n          0x64\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":3128:4397  assembly {... */\n          0x40\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mload\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":3128:4397  assembly {... */\n          0x20\n          0x04\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup3\n          add\n          mstore\n          0x0f\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":3128:4397  assembly {... */\n          0x24\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup3\n          add\n          mstore\n          0x5452414e534645525f4641494c45440000000000000000000000000000000000\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":3128:4397  assembly {... */\n          0x44\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup3\n          add\n          mstore\n          revert\n        tag_35:\n          0x010000\n          dup2\n          lt\n          iszero\n          tag_787\n          jumpi\n            /* \"src/curve/stable/StableMintBurn.sol\":9881:9894  _observations */\n          0x0d\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          add\n          swap1\n          0x00\n          swap1\n          jump\t// out\n        tag_787:\n          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n          mstore(0x04, 0x32)\n          revert(0x00, 0x24)\n        tag_36:\n          dup2\n          dup2\n          mul\n          swap3\n          swap2\n          dup2\n          iszero\n          swap2\n          dup5\n          div\n          eq\n          or\n          iszero\n          tag_564\n          jumpi\n          jump\t// out\n        tag_37:\n          dup2\n          iszero\n          tag_791\n          jumpi\n          div\n          swap1\n          jump\t// out\n        tag_791:\n          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n          mstore(0x04, 0x12)\n          revert(0x00, 0x24)\n            /* \"lib/solmate/src/tokens/ERC20.sol\":6150:6475  function _mint(address to, uint256 amount) internal virtual {... */\n        tag_40:\n            /* \"lib/solmate/src/tokens/ERC20.sol\":6436:6468  Transfer(address(0), to, amount) */\n          0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x20\n          0xffffffffffffffffffffffffffffffffffffffff\n          0x00\n            /* \"lib/solmate/src/tokens/ERC20.sol\":6150:6475  function _mint(address to, uint256 amount) internal virtual {... */\n          swap4\n            /* \"lib/solmate/src/tokens/ERC20.sol\":6220:6241  totalSupply += amount */\n          tag_793\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup7\n            /* \"lib/solmate/src/tokens/ERC20.sol\":6220:6241  totalSupply += amount */\n          0x02\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n            /* \"lib/solmate/src/tokens/ERC20.sol\":6220:6241  totalSupply += amount */\n          tag_22\n          jump\t// in\n        tag_793:\n          0x02\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sstore\n          and\n          swap4\n          dup5\n          dup5\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":6387:6396  balanceOf */\n          0x03\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup3\n          mstore\n          0x40\n          dup5\n          keccak256\n          dup2\n          dup2\n          sload\n          add\n          swap1\n          sstore\n          mload(0x40)\n          swap1\n          dup2\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":6436:6468  Transfer(address(0), to, amount) */\n          log3\n            /* \"lib/solmate/src/tokens/ERC20.sol\":6150:6475  function _mint(address to, uint256 amount) internal virtual {... */\n          jump\t// out\n            /* \"src/ReservoirPair.sol\":14590:14759  function _managerCallback() internal {... */\n        tag_41:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":14649:14661  assetManager */\n          0x0b\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n          and\n            /* \"src/ReservoirPair.sol\":14641:14676  address(assetManager) == address(0) */\n          dup1\n          iszero\n            /* \"src/ReservoirPair.sol\":14637:14709  if (address(assetManager) == address(0)) {... */\n          tag_794\n          jumpi\n            /* \"src/ReservoirPair.sol\":14718:14752  assetManager.afterLiquidityEvent() */\n          dup1\n          extcodesize\n          iszero\n          tag_560\n          jumpi\n          0x00\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup1\n          swap2\n            /* \"src/ReservoirPair.sol\":14718:14752  assetManager.afterLiquidityEvent() */\n          0x04\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mload(0x40)\n            /* \"src/ReservoirPair.sol\":14718:14752  assetManager.afterLiquidityEvent() */\n          dup1\n          swap5\n          dup2\n          swap4\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x016312bd00000000000000000000000000000000000000000000000000000000\n            /* \"src/ReservoirPair.sol\":14718:14752  assetManager.afterLiquidityEvent() */\n          dup4\n          mstore\n          gas\n          call\n          dup1\n          iszero\n          tag_642\n          jumpi\n          tag_800\n          jumpi\n            /* \"src/ReservoirPair.sol\":14590:14759  function _managerCallback() internal {... */\n          pop\n          jump\t// out\n            /* \"src/ReservoirPair.sol\":14718:14752  assetManager.afterLiquidityEvent() */\n        tag_800:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xffffffffffffffff\n          dup2\n          gt\n          tag_550\n          jumpi\n          0x40\n          mstore\n            /* \"src/ReservoirPair.sol\":14590:14759  function _managerCallback() internal {... */\n          jump\t// out\n            /* \"src/ReservoirPair.sol\":14637:14709  if (address(assetManager) == address(0)) {... */\n        tag_794:\n            /* \"src/ReservoirPair.sol\":14692:14699  return; */\n          pop\n          jump\t// out\n            /* \"src/curve/stable/StableMintBurn.sol\":2404:3169  function _nonOptimalMintFee(uint256 aAmount0, uint256 aAmount1, uint256 aReserve0, uint256 aReserve1)... */\n        tag_42:\n          swap4\n          swap3\n          swap2\n          swap1\n          swap2\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x00\n            /* \"src/curve/stable/StableMintBurn.sol\":2573:2591  uint256 rToken1Fee */\n          swap5\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x00\n            /* \"src/curve/stable/StableMintBurn.sol\":2611:2625  aReserve0 == 0 */\n          swap2\n          dup4\n          iszero\n            /* \"src/curve/stable/StableMintBurn.sol\":2611:2643  aReserve0 == 0 || aReserve1 == 0 */\n          dup1\n          iszero\n          tag_804\n          jumpi\n            /* \"src/curve/stable/StableMintBurn.sol\":2404:3169  function _nonOptimalMintFee(uint256 aAmount0, uint256 aAmount1, uint256 aReserve0, uint256 aReserve1)... */\n        tag_805:\n            /* \"src/curve/stable/StableMintBurn.sol\":2607:2658  if (aReserve0 == 0 || aReserve1 == 0) return (0, 0) */\n          tag_806\n          jumpi\n            /* \"src/curve/stable/StableMintBurn.sol\":2693:2727  (aAmount0 * aReserve1) / aReserve0 */\n          tag_808\n            /* \"src/curve/stable/StableMintBurn.sol\":2694:2714  aAmount0 * aReserve1 */\n          dup5\n          tag_452\n          dup4\n          dup6\n          tag_36\n          jump\t// in\n            /* \"src/curve/stable/StableMintBurn.sol\":2693:2727  (aAmount0 * aReserve1) / aReserve0 */\n        tag_808:\n            /* \"src/curve/stable/StableMintBurn.sol\":2742:2768  amount1Optimal <= aAmount1 */\n          swap4\n          dup6\n          dup6\n          gt\n          tag_810\n          jumpi\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          pop\n          pop\n          pop\n          pop\n          0x1e8480\n          swap2\n            /* \"src/curve/stable/StableMintBurn.sol\":2809:2834  aAmount1 - amount1Optimal */\n          tag_812\n            /* \"src/curve/stable/StableMintBurn.sol\":2798:2835  swapFee * (aAmount1 - amount1Optimal) */\n          tag_813\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap3\n            /* \"src/curve/stable/StableMintBurn.sol\":2798:2805  swapFee */\n          0x07\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n            /* \"src/curve/stable/StableMintBurn.sol\":2809:2834  aAmount1 - amount1Optimal */\n          swap3\n          tag_9\n          jump\t// in\n        tag_812:\n            /* \"src/curve/stable/StableMintBurn.sol\":2798:2835  swapFee * (aAmount1 - amount1Optimal) */\n          swap1\n          tag_36\n          jump\t// in\n        tag_813:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          div\n            /* \"src/curve/stable/StableMintBurn.sol\":2738:3045  if (amount1Optimal <= aAmount1) {... */\n          swap1\n        tag_814:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xffffffffffffffffffffffffff\n            /* \"src/curve/stable/StableMintBurn.sol\":3062:3093  rToken0Fee <= type(uint104).max */\n          dup1\n          dup5\n          gt\n          iszero\n            /* \"src/curve/stable/StableMintBurn.sol\":3062:3128  rToken0Fee <= type(uint104).max && rToken1Fee <= type(uint104).max */\n          swap1\n          dup2\n          tag_815\n          jumpi\n            /* \"src/curve/stable/StableMintBurn.sol\":2738:3045  if (amount1Optimal <= aAmount1) {... */\n        tag_816:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          pop\n          iszero\n          tag_817\n          jumpi\n            /* \"src/curve/stable/StableMintBurn.sol\":2404:3169  function _nonOptimalMintFee(uint256 aAmount0, uint256 aAmount1, uint256 aReserve0, uint256 aReserve1)... */\n          jump\t// out\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n        tag_817:\n          0x64\n          mload(0x40)\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          0x20\n          0x04\n          dup3\n          add\n          mstore\n          0x1d\n          0x24\n          dup3\n          add\n          mstore\n          0x53503a204e4f4e5f4f5054494d414c5f4645455f544f4f5f4c41524745000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n            /* \"src/curve/stable/StableMintBurn.sol\":3062:3128  rToken0Fee <= type(uint104).max && rToken1Fee <= type(uint104).max */\n        tag_815:\n            /* \"src/curve/stable/StableMintBurn.sol\":3097:3128  rToken1Fee <= type(uint104).max */\n          swap1\n          pop\n          dup3\n          gt\n          iszero\n            /* \"src/curve/stable/StableMintBurn.sol\":3062:3128  rToken0Fee <= type(uint104).max && rToken1Fee <= type(uint104).max */\n          codesize\n          jump(tag_816)\n            /* \"src/curve/stable/StableMintBurn.sol\":2738:3045  if (amount1Optimal <= aAmount1) {... */\n        tag_810:\n            /* \"src/curve/stable/StableMintBurn.sol\":2986:3011  aAmount0 - amount0Optimal */\n          tag_812\n            /* \"src/curve/stable/StableMintBurn.sol\":2914:2934  aAmount1 * aReserve0 */\n          swap3\n          swap4\n          swap7\n          swap8\n          pop\n            /* \"src/curve/stable/StableMintBurn.sol\":2975:3012  swapFee * (aAmount0 - amount0Optimal) */\n          tag_820\n            /* \"src/curve/stable/StableMintBurn.sol\":2914:2934  aAmount1 * aReserve0 */\n          swap5\n          pop\n          swap1\n          tag_452\n            /* \"src/curve/stable/StableMintBurn.sol\":2913:2947  (aAmount1 * aReserve0) / aReserve1 */\n          tag_822\n            /* \"src/curve/stable/StableMintBurn.sol\":2914:2934  aAmount1 * aReserve0 */\n          swap3\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x1e8480\n            /* \"src/curve/stable/StableMintBurn.sol\":2914:2934  aAmount1 * aReserve0 */\n          swap8\n          tag_36\n          jump\t// in\n            /* \"src/curve/stable/StableMintBurn.sol\":2913:2947  (aAmount1 * aReserve0) / aReserve1 */\n        tag_822:\n            /* \"src/curve/stable/StableMintBurn.sol\":2975:2982  swapFee */\n          0x07\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n            /* \"src/curve/stable/StableMintBurn.sol\":2986:3011  aAmount0 - amount0Optimal */\n          swap3\n          tag_9\n          jump\t// in\n            /* \"src/curve/stable/StableMintBurn.sol\":2975:3012  swapFee * (aAmount0 - amount0Optimal) */\n        tag_820:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          div\n            /* \"src/curve/stable/StableMintBurn.sol\":2738:3045  if (amount1Optimal <= aAmount1) {... */\n          swap2\n          jump(tag_814)\n            /* \"src/curve/stable/StableMintBurn.sol\":2607:2658  if (aReserve0 == 0 || aReserve1 == 0) return (0, 0) */\n        tag_806:\n            /* \"src/curve/stable/StableMintBurn.sol\":2645:2658  return (0, 0) */\n          pop\n          pop\n          pop\n          pop\n          pop\n          swap1\n          pop\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x00\n            /* \"src/curve/stable/StableMintBurn.sol\":2645:2658  return (0, 0) */\n          swap1\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x00\n            /* \"src/curve/stable/StableMintBurn.sol\":2645:2658  return (0, 0) */\n          swap1\n          jump\t// out\n            /* \"src/curve/stable/StableMintBurn.sol\":2611:2643  aReserve0 == 0 || aReserve1 == 0 */\n        tag_804:\n            /* \"src/curve/stable/StableMintBurn.sol\":2629:2643  aReserve1 == 0 */\n          pop\n          dup1\n          iszero\n            /* \"src/curve/stable/StableMintBurn.sol\":2611:2643  aReserve0 == 0 || aReserve1 == 0 */\n          jump(tag_805)\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n        tag_43:\n          0x01\n          shl\n          swap1\n          0x01fffffffffffffffe\n          0xfffffffffffffffe\n          dup4\n          and\n          swap3\n          and\n          dup3\n          sub\n          tag_564\n          jumpi\n          jump\t// out\n        tag_44:\n          swap2\n          swap1\n          swap2\n          0xffffffffffffffff\n          dup1\n          dup1\n          swap5\n          and\n          swap2\n          and\n          mul\n          swap2\n          dup3\n          and\n          swap2\n          dup3\n          sub\n          tag_564\n          jumpi\n          jump\t// out\n            /* \"src/curve/stable/StableMintBurn.sol\":7148:8447  function _mintFee(uint256 aReserve0, uint256 aReserve1) internal returns (uint256 rTotalSupply, uint256 rD) {... */\n        tag_45:\n          swap1\n          swap2\n            /* \"src/curve/stable/StableMintBurn.sol\":7280:7291  platformFee */\n          0x09\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n            /* \"src/curve/stable/StableMintBurn.sol\":7280:7295  platformFee > 0 */\n          iszero\n          iszero\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap2\n            /* \"src/curve/stable/StableMintBurn.sol\":7447:7484  aReserve1 * token1PrecisionMultiplier */\n          tag_827\n            /* \"src/curve/stable/StableMintBurn.sol\":7320:7331  totalSupply */\n          0x02\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n          swap5\n            /* \"src/curve/stable/StableMintBurn.sol\":7408:7445  aReserve0 * token0PrecisionMultiplier */\n          tag_828\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffff\n            /* \"src/curve/stable/StableMintBurn.sol\":7420:7445  token0PrecisionMultiplier */\n          swap4\n          dup5\n          immutable(\"0x372e991e4284f7d12d6b2461cce9899511b05ac053845de253542adb96f2dca0\")\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          and\n            /* \"src/curve/stable/StableMintBurn.sol\":7408:7445  aReserve0 * token0PrecisionMultiplier */\n          swap1\n          tag_36\n          jump\t// in\n        tag_828:\n            /* \"src/curve/stable/StableMintBurn.sol\":7459:7484  token1PrecisionMultiplier */\n          swap3\n          immutable(\"0xc4ba931b733b92a51f51c0955dd7716c7a38f3de911d23a5d0fbd5d23c0fbe8c\")\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          and\n            /* \"src/curve/stable/StableMintBurn.sol\":7447:7484  aReserve1 * token1PrecisionMultiplier */\n          swap1\n          tag_36\n          jump\t// in\n        tag_827:\n            /* \"src/curve/stable/StableMintBurn.sol\":7346:7516  StableMath._computeLiquidityFromAdjustedBalances(... */\n          tag_829\n            /* \"src/curve/stable/StableMintBurn.sol\":7490:7506  lastInvariantAmp */\n          0x010012\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap3\n          dup4\n          sload\n          swap3\n          0xffffffffffffffff\n            /* \"src/curve/stable/StableMintBurn.sol\":7486:7506  2 * lastInvariantAmp */\n          tag_830\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup6\n          0xc0\n          shr\n            /* \"src/curve/stable/StableMintBurn.sol\":7486:7506  2 * lastInvariantAmp */\n          tag_43\n          jump\t// in\n        tag_830:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          and\n            /* \"src/curve/stable/StableMintBurn.sol\":7346:7516  StableMath._computeLiquidityFromAdjustedBalances(... */\n          swap2\n          tag_58\n          jump\t// in\n        tag_829:\n            /* \"src/curve/stable/StableMintBurn.sol\":7526:8441  if (lFeeOn) {... */\n          swap4\n          iszero\n          tag_831\n          jumpi\n          pop\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n          0xffffffffffffffffffffffffffffffffffffffffffffffff\n          and\n          dup1\n            /* \"src/curve/stable/StableMintBurn.sol\":7596:8359  if (lDLast != 0) {... */\n          tag_833\n          jumpi\n            /* \"src/curve/stable/StableMintBurn.sol\":7526:8441  if (lFeeOn) {... */\n          pop\n            /* \"src/curve/stable/StableMintBurn.sol\":7148:8447  function _mintFee(uint256 aReserve0, uint256 aReserve1) internal returns (uint256 rTotalSupply, uint256 rD) {... */\n          jump\t// out\n            /* \"src/curve/stable/StableMintBurn.sol\":7596:8359  if (lDLast != 0) {... */\n        tag_833:\n            /* \"src/curve/stable/StableMintBurn.sol\":7635:7646  rD > lDLast */\n          dup1\n          dup4\n          gt\n            /* \"src/curve/stable/StableMintBurn.sol\":7631:8345  if (rD > lDLast) {... */\n          tag_836\n          jumpi\n            /* \"src/ReservoirPair.sol\":14692:14699  return; */\n          pop\n          jump\t// out\n            /* \"src/curve/stable/StableMintBurn.sol\":7631:8345  if (rD > lDLast) {... */\n        tag_836:\n            /* \"src/curve/stable/StableMintBurn.sol\":7280:7291  platformFee */\n          0x09\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n            /* \"src/curve/stable/StableMintBurn.sol\":7833:7844  rD - lDLast */\n          swap1\n            /* \"src/curve/stable/StableMintBurn.sol\":7817:7860  rTotalSupply * (rD - lDLast) * lPlatformFee */\n          tag_838\n            /* \"src/curve/stable/StableMintBurn.sol\":7833:7844  rD - lDLast */\n          dup3\n            /* \"src/curve/stable/StableMintBurn.sol\":7817:7845  rTotalSupply * (rD - lDLast) */\n          tag_451\n            /* \"src/curve/stable/StableMintBurn.sol\":7833:7844  rD - lDLast */\n          tag_840\n          dup5\n          dup9\n          tag_9\n          jump\t// in\n        tag_840:\n            /* \"src/curve/stable/StableMintBurn.sol\":7817:7845  rTotalSupply * (rD - lDLast) */\n          dup9\n          tag_36\n          jump\t// in\n            /* \"src/curve/stable/StableMintBurn.sol\":7817:7860  rTotalSupply * (rD - lDLast) * lPlatformFee */\n        tag_838:\n            /* \"src/ReservoirPair.sol\":2723:2732  1_000_000 */\n          swap1\n          0x0f4240\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap3\n          dup1\n          dup5\n          sub\n          swap4\n          dup5\n          gt\n          tag_564\n          jumpi\n            /* \"src/curve/stable/StableMintBurn.sol\":7942:7963  lPlatformFee * lDLast */\n          tag_680\n            /* \"src/curve/stable/StableMintBurn.sol\":7905:7963  (FEE_ACCURACY - lPlatformFee) * rD + lPlatformFee * lDLast */\n          tag_844\n            /* \"src/curve/stable/StableMintBurn.sol\":7905:7939  (FEE_ACCURACY - lPlatformFee) * rD */\n          swap3\n          tag_845\n          dup9\n            /* \"src/curve/stable/StableMintBurn.sol\":8011:8036  lNumerator / lDenominator */\n          tag_846\n            /* \"src/curve/stable/StableMintBurn.sol\":7905:7939  (FEE_ACCURACY - lPlatformFee) * rD */\n          swap8\n          tag_36\n          jump\t// in\n        tag_845:\n            /* \"src/curve/stable/StableMintBurn.sol\":7942:7963  lPlatformFee * lDLast */\n          swap3\n          tag_36\n          jump\t// in\n            /* \"src/curve/stable/StableMintBurn.sol\":7905:7963  (FEE_ACCURACY - lPlatformFee) * rD + lPlatformFee * lDLast */\n        tag_844:\n            /* \"src/curve/stable/StableMintBurn.sol\":8011:8036  lNumerator / lDenominator */\n          swap1\n          tag_37\n          jump\t// in\n        tag_846:\n            /* \"src/curve/stable/StableMintBurn.sol\":8063:8083  lPlatformShares != 0 */\n          dup1\n            /* \"src/curve/stable/StableMintBurn.sol\":8059:8327  if (lPlatformShares != 0) {... */\n          iszero\n            /* \"src/curve/stable/StableMintBurn.sol\":7596:8359  if (lDLast != 0) {... */\n          tag_794\n            /* \"src/curve/stable/StableMintBurn.sol\":8059:8327  if (lPlatformShares != 0) {... */\n          jumpi\n            /* \"src/curve/stable/StableMintBurn.sol\":8273:8304  rTotalSupply += lPlatformShares */\n          tag_849\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap2\n          swap4\n            /* \"src/curve/stable/StableMintBurn.sol\":8231:8246  lPlatformShares */\n          tag_850\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup3\n          mload(0x40)\n          tag_851\n          dup2\n          tag_3\n          jump\t// in\n        tag_851:\n          0x15\n          dup2\n          mstore\n          0x5368617265643a3a706c6174666f726d466565546f0000000000000000000000\n          0x20\n          dup3\n          add\n          mstore\n            /* \"src/curve/stable/StableMintBurn.sol\":8136:8170  factory.read(PLATFORM_FEE_TO_NAME) */\n          tag_852\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/curve/stable/StableMintBurn.sol\":8136:8143  factory */\n          swap2\n          dup3\n          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          and\n            /* \"src/curve/stable/StableMintBurn.sol\":8136:8170  factory.read(PLATFORM_FEE_TO_NAME) */\n          tag_52\n          jump\t// in\n        tag_852:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          and\n            /* \"src/curve/stable/StableMintBurn.sol\":8231:8246  lPlatformShares */\n          tag_40\n          jump\t// in\n        tag_850:\n            /* \"src/curve/stable/StableMintBurn.sol\":8273:8304  rTotalSupply += lPlatformShares */\n          tag_22\n          jump\t// in\n        tag_849:\n            /* \"src/curve/stable/StableMintBurn.sol\":8059:8327  if (lPlatformShares != 0) {... */\n          swap2\n            /* \"src/ReservoirPair.sol\":14692:14699  return; */\n          jump\t// out\n            /* \"src/curve/stable/StableMintBurn.sol\":7526:8441  if (lFeeOn) {... */\n        tag_831:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffffffffffff\n          dup2\n          and\n            /* \"src/curve/stable/StableMintBurn.sol\":8375:8441  if (lastInvariant != 0) {... */\n          tag_853\n          jumpi\n            /* \"src/curve/stable/StableMintBurn.sol\":7526:8441  if (lFeeOn) {... */\n          pop\n          pop\n            /* \"src/curve/stable/StableMintBurn.sol\":7148:8447  function _mintFee(uint256 aReserve0, uint256 aReserve1) internal returns (uint256 rTotalSupply, uint256 rD) {... */\n          jump\t// out\n            /* \"src/curve/stable/StableMintBurn.sol\":8375:8441  if (lastInvariant != 0) {... */\n        tag_853:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xffffffffffffffff000000000000000000000000000000000000000000000000\n          and\n          swap1\n          sstore\n            /* \"src/ReservoirPair.sol\":7478:7485  return; */\n          jump\t// out\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n        tag_46:\n          0xffffffffffffffff\n          swap2\n          dup3\n          and\n          swap1\n          dup3\n          and\n          sub\n          swap2\n          swap1\n          dup3\n          gt\n          tag_564\n          jumpi\n          jump\t// out\n        tag_47:\n          swap1\n          0xffffffffffffffff\n          dup1\n          swap2\n          and\n          swap2\n          dup3\n          iszero\n          tag_791\n          jumpi\n          and\n          div\n          swap1\n          jump\t// out\n            /* \"src/curve/stable/StableMintBurn.sol\":8453:9311  function _getCurrentAPrecise() internal view returns (uint64 rCurrentA) {... */\n        tag_48:\n            /* \"src/curve/stable/StableMintBurn.sol\":8552:8559  ampData */\n          0x010010\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n          0xffffffffffffffff\n          swap1\n          dup2\n          dup2\n          0x40\n          shr\n          and\n          dup2\n          0xc0\n          shr\n            /* \"src/curve/stable/StableMintBurn.sol\":8632:8647  block.timestamp */\n          swap1\n          dup2\n          timestamp\n            /* \"src/curve/stable/StableMintBurn.sol\":8632:8661  block.timestamp < futureATime */\n          lt\n            /* \"src/curve/stable/StableMintBurn.sol\":8628:9305  if (block.timestamp < futureATime) {... */\n          0x00\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          eq\n          tag_859\n          jumpi\n            /* \"src/curve/stable/StableMintBurn.sol\":8864:8902  uint64(block.timestamp) - initialATime */\n          tag_861\n            /* \"src/curve/stable/StableMintBurn.sol\":8803:8829  futureATime - initialATime */\n          tag_862\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup6\n          dup1\n          dup7\n          and\n          swap6\n          0x80\n          shr\n          and\n            /* \"src/curve/stable/StableMintBurn.sol\":8803:8829  futureATime - initialATime */\n          dup1\n          swap5\n          tag_46\n          jump\t// in\n        tag_862:\n            /* \"src/curve/stable/StableMintBurn.sol\":8632:8647  block.timestamp */\n          swap3\n          dup6\n          timestamp\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          and\n            /* \"src/curve/stable/StableMintBurn.sol\":8864:8902  uint64(block.timestamp) - initialATime */\n          tag_46\n          jump\t// in\n        tag_861:\n            /* \"src/curve/stable/StableMintBurn.sol\":8921:8939  futureA > initialA */\n          swap1\n          dup4\n          dup2\n          gt\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          iszero\n          tag_863\n          jumpi\n            /* \"src/curve/stable/StableMintBurn.sol\":8978:8996  futureA - initialA */\n          swap2\n            /* \"src/curve/stable/StableMintBurn.sol\":9037:9060  rampElapsed * rampDelta */\n          tag_865\n            /* \"src/curve/stable/StableMintBurn.sol\":9037:9075  rampElapsed * rampDelta / rampDuration */\n          tag_866\n            /* \"src/curve/stable/StableMintBurn.sol\":8978:8996  futureA - initialA */\n          swap3\n          tag_867\n          dup7\n          dup9\n          swap7\n          tag_46\n          jump\t// in\n        tag_867:\n            /* \"src/curve/stable/StableMintBurn.sol\":9037:9060  rampElapsed * rampDelta */\n          swap1\n          tag_44\n          jump\t// in\n        tag_865:\n            /* \"src/curve/stable/StableMintBurn.sol\":9037:9075  rampElapsed * rampDelta / rampDuration */\n          tag_47\n          jump\t// in\n        tag_866:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          and\n          add\n          swap1\n          dup2\n          gt\n          tag_564\n          jumpi\n            /* \"src/curve/stable/StableMintBurn.sol\":8917:9245  if (futureA > initialA) {... */\n          swap1\n            /* \"src/curve/stable/StableMintBurn.sol\":8453:9311  function _getCurrentAPrecise() internal view returns (uint64 rCurrentA) {... */\n          jump\t// out\n            /* \"src/curve/stable/StableMintBurn.sol\":8917:9245  if (futureA > initialA) {... */\n        tag_863:\n            /* \"src/curve/stable/StableMintBurn.sol\":9181:9230  initialA - rampElapsed * rampDelta / rampDuration */\n          tag_721\n            /* \"src/curve/stable/StableMintBurn.sol\":9133:9151  initialA - futureA */\n          swap5\n          pop\n            /* \"src/curve/stable/StableMintBurn.sol\":9192:9230  rampElapsed * rampDelta / rampDuration */\n          tag_873\n            /* \"src/curve/stable/StableMintBurn.sol\":9133:9151  initialA - futureA */\n          swap3\n          swap2\n          tag_867\n            /* \"src/curve/stable/StableMintBurn.sol\":9192:9215  rampElapsed * rampDelta */\n          tag_865\n            /* \"src/curve/stable/StableMintBurn.sol\":9133:9151  initialA - futureA */\n          swap3\n          dup7\n          tag_46\n          jump\t// in\n            /* \"src/curve/stable/StableMintBurn.sol\":9192:9230  rampElapsed * rampDelta / rampDuration */\n        tag_873:\n            /* \"src/curve/stable/StableMintBurn.sol\":9181:9230  initialA - rampElapsed * rampDelta / rampDuration */\n          swap1\n          tag_46\n          jump\t// in\n            /* \"src/curve/stable/StableMintBurn.sol\":8628:9305  if (block.timestamp < futureATime) {... */\n        tag_859:\n            /* \"src/curve/stable/StableMintBurn.sol\":9275:9294  rCurrentA = futureA */\n          swap3\n          pop\n          pop\n          pop\n            /* \"src/curve/stable/StableMintBurn.sol\":8628:9305  if (block.timestamp < futureATime) {... */\n          swap1\n            /* \"src/curve/stable/StableMintBurn.sol\":8453:9311  function _getCurrentAPrecise() internal view returns (uint64 rCurrentA) {... */\n          jump\t// out\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n        tag_49:\n          iszero\n          tag_876\n          jumpi\n          jump\t// out\n        tag_876:\n          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n          mstore(0x04, 0x01)\n          revert(0x00, 0x24)\n            /* \"src/ReservoirPair.sol\":18000:19057  function _calcClampedPrice(uint256 aCurrRawPrice, uint256 aPrevClampedPrice, uint256 aTimeElapsed)... */\n        tag_50:\n          swap1\n          swap2\n            /* \"src/ReservoirPair.sol\":18215:18237  aPrevClampedPrice == 0 */\n          dup3\n          iszero\n            /* \"src/ReservoirPair.sol\":18211:18337  if (aPrevClampedPrice == 0) {... */\n          tag_878\n          jumpi\n            /* \"src/ReservoirPair.sol\":18351:18405  stdMath.percentDelta(aCurrRawPrice, aPrevClampedPrice) */\n          tag_880\n          dup4\n          dup4\n          tag_51\n          jump\t// in\n        tag_880:\n            /* \"src/ReservoirPair.sol\":18408:18421  maxChangeRate */\n          0x01000d\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sload\n            /* \"src/ReservoirPair.sol\":18408:18436  maxChangeRate * aTimeElapsed */\n          swap1\n          tag_881\n          dup4\n          dup4\n          tag_36\n          jump\t// in\n        tag_881:\n          lt\n          iszero\n          tag_882\n          jumpi\n            /* \"src/ReservoirPair.sol\":18487:18520  aCurrRawPrice > aPrevClampedPrice */\n          dup4\n          dup4\n          gt\n          iszero\n          tag_884\n          jumpi\n            /* \"src/ReservoirPair.sol\":18585:18613  maxChangeRate * aTimeElapsed */\n          tag_886\n          swap3\n          pop\n          tag_36\n          jump\t// in\n        tag_886:\n            /* \"src/ReservoirPair.sol\":18577:18581  1e18 */\n          swap1\n          0x0de0b6b3a7640000\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap2\n          dup3\n          add\n          dup1\n          dup4\n          gt\n          tag_564\n          jumpi\n            /* \"src/ReservoirPair.sol\":18556:18615  aPrevClampedPrice * (1e18 + (maxChangeRate * aTimeElapsed)) */\n          tag_889\n          swap2\n          tag_36\n          jump\t// in\n        tag_889:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          div\n            /* \"src/ReservoirPair.sol\":18483:18817  if (aCurrRawPrice > aPrevClampedPrice) {... */\n          swap1\n        tag_890:\n            /* \"src/ReservoirPair.sol\":18856:18897  LogCompression.toLowResLog(rClampedPrice) */\n          tag_891\n          dup3\n          tag_55\n          jump\t// in\n        tag_891:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x0d\n          signextend\n            /* \"src/ReservoirPair.sol\":18347:19051  if (stdMath.percentDelta(aCurrRawPrice, aPrevClampedPrice) > maxChangeRate * aTimeElapsed) {... */\n          swap1\n            /* \"src/ReservoirPair.sol\":18000:19057  function _calcClampedPrice(uint256 aCurrRawPrice, uint256 aPrevClampedPrice, uint256 aTimeElapsed)... */\n          jump\t// out\n            /* \"src/ReservoirPair.sol\":18483:18817  if (aCurrRawPrice > aPrevClampedPrice) {... */\n        tag_884:\n            /* \"src/ReservoirPair.sol\":18661:18702  assert(aPrevClampedPrice > aCurrRawPrice) */\n          tag_451\n            /* \"src/ReservoirPair.sol\":18765:18793  maxChangeRate * aTimeElapsed */\n          tag_894\n            /* \"src/ReservoirPair.sol\":18668:18701  aPrevClampedPrice > aCurrRawPrice */\n          swap4\n          dup6\n          gt\n            /* \"src/ReservoirPair.sol\":18661:18702  assert(aPrevClampedPrice > aCurrRawPrice) */\n          tag_49\n          jump\t// in\n            /* \"src/ReservoirPair.sol\":18765:18793  maxChangeRate * aTimeElapsed */\n        tag_894:\n            /* \"src/ReservoirPair.sol\":18757:18761  1e18 */\n          swap1\n          0x0de0b6b3a7640000\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap2\n          dup3\n          sub\n          dup3\n          dup2\n          gt\n          tag_564\n          jumpi\n            /* \"src/ReservoirPair.sol\":18736:18795  aPrevClampedPrice * (1e18 - (maxChangeRate * aTimeElapsed)) */\n          tag_897\n          swap2\n          tag_36\n          jump\t// in\n        tag_897:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          div\n            /* \"src/ReservoirPair.sol\":18483:18817  if (aCurrRawPrice > aPrevClampedPrice) {... */\n          swap1\n          jump(tag_890)\n            /* \"src/ReservoirPair.sol\":18347:19051  if (stdMath.percentDelta(aCurrRawPrice, aPrevClampedPrice) > maxChangeRate * aTimeElapsed) {... */\n        tag_882:\n            /* \"src/ReservoirPair.sol\":18929:18958  rClampedPrice = aCurrRawPrice */\n          pop\n          pop\n          swap2\n          swap1\n          pop\n            /* \"src/ReservoirPair.sol\":18998:19039  LogCompression.toLowResLog(aCurrRawPrice) */\n          tag_891\n            /* \"src/ReservoirPair.sol\":18929:18958  rClampedPrice = aCurrRawPrice */\n          dup3\n            /* \"src/ReservoirPair.sol\":18998:19039  LogCompression.toLowResLog(aCurrRawPrice) */\n          tag_55\n          jump\t// in\n            /* \"src/ReservoirPair.sol\":18211:18337  if (aPrevClampedPrice == 0) {... */\n        tag_878:\n            /* \"src/ReservoirPair.sol\":18283:18324  LogCompression.toLowResLog(aCurrRawPrice) */\n          pop\n          swap2\n          swap1\n          pop\n          tag_891\n          dup3\n          tag_55\n          jump\t// in\n            /* \"lib/forge-std/src/StdMath.sol\":999:1159  function percentDelta(uint256 a, uint256 b) internal pure returns (uint256) {... */\n        tag_51:\n            /* \"lib/forge-std/src/StdMath.sol\":607:612  a > b */\n          dup2\n          dup1\n          dup3\n          gt\n          iszero\n          tag_900\n          jumpi\n            /* \"lib/forge-std/src/StdMath.sol\":615:620  a - b */\n          tag_902\n          swap2\n          tag_9\n          jump\t// in\n        tag_902:\n            /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */\n          swap1\n        tag_903:\n            /* \"lib/forge-std/src/StdMath.sol\":1144:1148  1e18 */\n          0x0de0b6b3a7640000\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap2\n          dup3\n          dup2\n          mul\n          swap3\n          dup2\n          dup5\n          div\n          eq\n          swap1\n          iszero\n          or\n          iszero\n          tag_564\n          jumpi\n            /* \"lib/forge-std/src/StdMath.sol\":1133:1152  absDelta * 1e18 / b */\n          tag_721\n          swap2\n          tag_37\n          jump\t// in\n            /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */\n        tag_900:\n            /* \"lib/forge-std/src/StdMath.sol\":623:628  b - a */\n          swap1\n          tag_907\n          swap2\n          tag_9\n          jump\t// in\n        tag_907:\n            /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */\n          swap1\n          jump(tag_903)\n            /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */\n        tag_52:\n          swap1\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */\n          swap2\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mload(0x40)\n            /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */\n          swap1\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x24\n            /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */\n          0x20\n          swap4\n          dup4\n          tag_908\n          dup7\n          dup3\n          dup2\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          tag_909\n            /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */\n          dup2\n          dup1\n          swap11\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap7\n          dup8\n          dup2\n          mload\n          swap4\n          dup5\n          swap3\n          add\n          tag_5\n          jump\t// in\n        tag_909:\n          dup2\n          add\n            /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */\n          sub\n          dup1\n          dup5\n          mstore\n          add\n          dup3\n          tag_4\n          jump\t// in\n        tag_908:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mload\n            /* \"src/libraries/FactoryStore.sol\":476:509  keccak256(abi.encodePacked(aKey)) */\n          swap1\n          keccak256\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mload(0x40)\n            /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */\n          swap6\n          dup7\n          swap4\n          dup5\n          swap3\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x8eaa6ac000000000000000000000000000000000000000000000000000000000\n            /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */\n          dup5\n          mstore\n          0x04\n          dup5\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mstore\n          and\n            /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */\n          gas\n          staticcall\n          swap1\n          dup2\n          iszero\n          tag_642\n          jumpi\n          0x00\n          swap2\n          tag_912\n          jumpi\n            /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */\n        tag_913:\n            /* \"src/libraries/FactoryStore.sol\":456:510  return aFactory.get(keccak256(abi.encodePacked(aKey))) */\n          pop\n          swap1\n          pop\n            /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */\n          swap1\n          jump\t// out\n            /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */\n        tag_912:\n          dup3\n          dup2\n          returndatasize\n          dup4\n          gt\n          tag_914\n          jumpi\n        tag_915:\n          tag_916\n          dup2\n          dup4\n          tag_4\n          jump\t// in\n        tag_916:\n          dup2\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sub\n          slt\n          tag_157\n          jumpi\n          pop\n          mload\n            /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */\n          dup1\n          codesize\n          jump(tag_913)\n        tag_914:\n          pop\n          returndatasize\n          jump(tag_915)\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n        tag_53:\n          dup1\n          iszero\n          tag_791\n          jumpi\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xc097ce7bc90715b34b9f1000000000\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n          swap1\n          jump\t// out\n        tag_54:\n          dup2\n          iszero\n          tag_791\n          jumpi\n          sdiv\n          swap1\n          jump\t// out\n            /* \"src/libraries/LogCompression.sol\":2015:2401  function toLowResLog(uint256 value) internal pure returns (int256) {... */\n        tag_55:\n            /* \"src/libraries/LogCompression.sol\":2128:2156  LogExpMath.ln(int256(value)) */\n          tag_923\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          0x5af3107a4000\n            /* \"src/libraries/LogCompression.sol\":2015:2401  function toLowResLog(uint256 value) internal pure returns (int256) {... */\n          swap2\n            /* \"src/libraries/LogCompression.sol\":2128:2156  LogExpMath.ln(int256(value)) */\n          tag_56\n          jump\t// in\n        tag_923:\n            /* \"src/libraries/LogCompression.sol\":2252:2253  0 */\n          0x00\n            /* \"src/libraries/LogCompression.sol\":2247:2253  ln > 0 */\n          dup2\n          sgt\n            /* \"src/libraries/LogCompression.sol\":2252:2253  0 */\n          iszero\n          tag_924\n          jumpi\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          0x2d79883d2000\n          add\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogCompression.sol\":2015:2401  function toLowResLog(uint256 value) internal pure returns (int256) {... */\n          swap1\n          jump\t// out\n            /* \"src/libraries/LogCompression.sol\":2247:2325  ln > 0 ? ln + _HALF_LOG_COMPRESSION_FACTOR : ln - _HALF_LOG_COMPRESSION_FACTOR */\n        tag_924:\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffd28677c2e000\n          add\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogCompression.sol\":2015:2401  function toLowResLog(uint256 value) internal pure returns (int256) {... */\n          swap1\n          jump\t// out\n            /* \"src/libraries/LogExpMath.sol\":14736:15138  function ln(int256 a) internal pure returns (int256) {... */\n        tag_56:\n            /* \"src/libraries/LogExpMath.sol\":14922:14923  0 */\n          0x00\n            /* \"src/libraries/LogExpMath.sol\":14918:14923  a > 0 */\n          dup2\n          sgt\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          iszero\n          tag_927\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":14964:14985  LN_36_LOWER_BOUND < a */\n          dup1\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          0x0c7d713b49da0000\n            /* \"src/libraries/LogExpMath.sol\":14964:14985  LN_36_LOWER_BOUND < a */\n          slt\n            /* \"src/libraries/LogExpMath.sol\":14964:15010  LN_36_LOWER_BOUND < a && a < LN_36_UPPER_BOUND */\n          dup1\n          tag_929\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":14736:15138  function ln(int256 a) internal pure returns (int256) {... */\n        tag_930:\n            /* \"src/libraries/LogExpMath.sol\":14960:15122  if (LN_36_LOWER_BOUND < a && a < LN_36_UPPER_BOUND) {... */\n          iszero\n          tag_931\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n          0x0de0b6b3a7640000\n          swap1\n            /* \"src/libraries/LogExpMath.sol\":2125:2129  1e36 */\n          0xc097ce7bc90715b34b9f1000000000\n          swap1\n            /* \"src/libraries/LogExpMath.sol\":21785:21823  ((x - ONE_36) * ONE_36) / (x + ONE_36) */\n          tag_933\n          swap1\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup4\n          mul\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          dup3\n          dup2\n          add\n          swap1\n          0xffffffffffffffffffffffffffffffffff3f68318436f8ea4cb460f000000000\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup4\n          mul\n            /* \"src/libraries/LogExpMath.sol\":21785:21823  ((x - ONE_36) * ONE_36) / (x + ONE_36) */\n          tag_54\n          jump\t// in\n        tag_933:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap1\n          dup1\n          dup3\n          dup1\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap2\n          dup2\n          dup4\n          dup3\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup3\n          dup5\n          dup3\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup4\n          dup6\n          dup3\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap2\n          dup5\n          dup7\n          dup5\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap4\n          dup6\n          dup8\n          dup7\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap6\n          dup1\n          dup9\n          dup9\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap8\n          dup9\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogExpMath.sol\":22751:22753  15 */\n          0x0f\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          swap1\n          sdiv\n          swap7\n            /* \"src/libraries/LogExpMath.sol\":22669:22671  13 */\n          0x0d\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          swap1\n          sdiv\n          swap6\n            /* \"src/libraries/LogExpMath.sol\":22587:22589  11 */\n          0x0b\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          swap1\n          sdiv\n          swap5\n            /* \"src/libraries/LogExpMath.sol\":22506:22507  9 */\n          0x09\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          swap1\n          sdiv\n          swap4\n            /* \"src/libraries/LogExpMath.sol\":22425:22426  7 */\n          0x07\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          swap1\n          sdiv\n          swap3\n            /* \"src/libraries/LogExpMath.sol\":22344:22345  5 */\n          0x05\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          swap1\n          sdiv\n          swap2\n            /* \"src/libraries/LogExpMath.sol\":22263:22264  3 */\n          0x03\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          swap1\n          sdiv\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          add\n          add\n          add\n          add\n          add\n          add\n          add\n          0x01\n          shl\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogExpMath.sol\":15030:15055  return _ln_36(a) / ONE_18 */\n          swap1\n          jump\t// out\n            /* \"src/libraries/LogExpMath.sol\":14960:15122  if (LN_36_LOWER_BOUND < a && a < LN_36_UPPER_BOUND) {... */\n        tag_931:\n            /* \"src/libraries/LogExpMath.sol\":15101:15107  _ln(a) */\n          tag_721\n          swap1\n          tag_57\n          jump\t// in\n            /* \"src/libraries/LogExpMath.sol\":14964:15010  LN_36_LOWER_BOUND < a && a < LN_36_UPPER_BOUND */\n        tag_929:\n            /* \"src/libraries/LogExpMath.sol\":14989:15010  a < LN_36_UPPER_BOUND */\n          pop\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          0x0f43fc2c04ee0000\n            /* \"src/libraries/LogExpMath.sol\":14989:15010  a < LN_36_UPPER_BOUND */\n          dup2\n          slt\n            /* \"src/libraries/LogExpMath.sol\":14964:15010  LN_36_LOWER_BOUND < a && a < LN_36_UPPER_BOUND */\n          jump(tag_930)\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n        tag_927:\n          0x64\n          mload(0x40)\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          0x20\n          0x04\n          dup3\n          add\n          mstore\n          0x11\n          0x24\n          dup3\n          add\n          mstore\n          0x454d3a204f55545f4f465f424f554e4453000000000000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n        tag_57:\n            /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n          0x0de0b6b3a7640000\n            /* \"src/libraries/LogExpMath.sol\":15343:15353  a < ONE_18 */\n          dup2\n          slt\n            /* \"src/libraries/LogExpMath.sol\":15339:15760  if (a < ONE_18) {... */\n          tag_935\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":17686:17689  100 */\n          0x64\n            /* \"src/libraries/LogExpMath.sol\":17231:17245  int256 sum = 0 */\n          swap1\n            /* \"src/libraries/LogExpMath.sol\":17244:17245  0 */\n          0x00\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x1600ef3172e58d2e933ec884fde10064c63b5372d805e203c0000000000000\n            /* \"src/libraries/LogExpMath.sol\":17263:17279  a >= a0 * ONE_18 */\n          dup3\n          slt\n          iszero\n            /* \"src/libraries/LogExpMath.sol\":17259:17385  if (a >= a0 * ONE_18) {... */\n          tag_937\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n        tag_938:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x011798004d755d3c8bc8e03204cf44619e000000\n            /* \"src/libraries/LogExpMath.sol\":17403:17419  a >= a1 * ONE_18 */\n          dup3\n          slt\n          iszero\n            /* \"src/libraries/LogExpMath.sol\":17399:17525  if (a >= a1 * ONE_18) {... */\n          tag_939\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n        tag_940:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup3\n          mul\n          swap1\n          dup3\n          mul\n          dup2\n            /* \"src/libraries/LogExpMath.sol\":3567:3612  7_896_296_018_268_069_516_100_000_000_000_000 */\n          0x01855144814a7ff805980ff0084000\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup3\n            /* \"src/libraries/LogExpMath.sol\":17846:17853  a >= a2 */\n          dup2\n          dup2\n          slt\n          iszero\n            /* \"src/libraries/LogExpMath.sol\":17842:17936  if (a >= a2) {... */\n          tag_941\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n        tag_942:\n            /* \"src/libraries/LogExpMath.sol\":3714:3749  888_611_052_050_787_263_676_000_000 */\n          pop\n          pop\n          pop\n          0x02df0ab5a80a22c61ab5a700\n            /* \"src/libraries/LogExpMath.sol\":17954:17961  a >= a3 */\n          dup1\n          dup3\n          slt\n          iszero\n            /* \"src/libraries/LogExpMath.sol\":17950:18044  if (a >= a3) {... */\n          tag_943\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n        tag_944:\n            /* \"src/libraries/LogExpMath.sol\":3849:3880  298_095_798_704_172_827_474_000 */\n          pop\n          0x3f1fce3da636ea5cf850\n            /* \"src/libraries/LogExpMath.sol\":18062:18069  a >= a4 */\n          dup1\n          dup3\n          slt\n          iszero\n            /* \"src/libraries/LogExpMath.sol\":18058:18152  if (a >= a4) {... */\n          tag_945\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n        tag_946:\n            /* \"src/libraries/LogExpMath.sol\":3980:4009  5_459_815_003_314_423_907_810 */\n          pop\n          0x0127fa27722cc06cc5e2\n            /* \"src/libraries/LogExpMath.sol\":18170:18177  a >= a5 */\n          dup1\n          dup3\n          slt\n          iszero\n            /* \"src/libraries/LogExpMath.sol\":18166:18260  if (a >= a5) {... */\n          tag_947\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n        tag_948:\n            /* \"src/libraries/LogExpMath.sol\":4109:4136  738_905_609_893_065_022_723 */\n          pop\n          0x280e60114edb805d03\n            /* \"src/libraries/LogExpMath.sol\":18278:18285  a >= a6 */\n          dup1\n          dup3\n          slt\n          iszero\n            /* \"src/libraries/LogExpMath.sol\":18274:18368  if (a >= a6) {... */\n          tag_949\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n        tag_950:\n            /* \"src/libraries/LogExpMath.sol\":4236:4263  271_828_182_845_904_523_536 */\n          pop\n          0x0ebc5fb41746121110\n            /* \"src/libraries/LogExpMath.sol\":18386:18393  a >= a7 */\n          dup1\n          dup3\n          slt\n          iszero\n            /* \"src/libraries/LogExpMath.sol\":18382:18476  if (a >= a7) {... */\n          tag_951\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n        tag_952:\n            /* \"src/libraries/LogExpMath.sol\":4363:4390  164_872_127_070_012_814_685 */\n          pop\n          0x08f00f760a4b2db55d\n            /* \"src/libraries/LogExpMath.sol\":18494:18501  a >= a8 */\n          dup1\n          dup3\n          slt\n          iszero\n            /* \"src/libraries/LogExpMath.sol\":18490:18584  if (a >= a8) {... */\n          tag_953\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n        tag_954:\n            /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */\n          pop\n          0x06f5f1775788937937\n            /* \"src/libraries/LogExpMath.sol\":18602:18609  a >= a9 */\n          dup1\n          dup3\n          slt\n          iszero\n            /* \"src/libraries/LogExpMath.sol\":18598:18692  if (a >= a9) {... */\n          tag_955\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n        tag_956:\n            /* \"src/libraries/LogExpMath.sol\":4619:4646  113_314_845_306_682_631_683 */\n          pop\n          0x06248f33704b286603\n            /* \"src/libraries/LogExpMath.sol\":18710:18718  a >= a10 */\n          dup1\n          dup3\n          slt\n          iszero\n            /* \"src/libraries/LogExpMath.sol\":18706:18803  if (a >= a10) {... */\n          tag_957\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n        tag_958:\n            /* \"src/libraries/LogExpMath.sol\":4748:4775  106_449_445_891_785_942_956 */\n          pop\n          0x05c548670b9510e7ac\n            /* \"src/libraries/LogExpMath.sol\":18821:18829  a >= a11 */\n          dup1\n          dup3\n          slt\n          iszero\n            /* \"src/libraries/LogExpMath.sol\":18817:18914  if (a >= a11) {... */\n          tag_959\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n        tag_960:\n            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n          pop\n            /* \"src/libraries/LogExpMath.sol\":19470:19508  ((a - ONE_20) * ONE_20) / (a + ONE_20) */\n          tag_961\n            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n          0x056bc75e2d63100000\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          swap2\n          dup3\n          0xfffffffffffffffffffffffffffffffffffffffffffffffa9438a1d29cf00000\n          dup2\n          dup4\n          add\n          swap3\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mul\n            /* \"src/libraries/LogExpMath.sol\":19470:19508  ((a - ONE_20) * ONE_20) / (a + ONE_20) */\n          tag_54\n          jump\t// in\n        tag_961:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap1\n          dup1\n          dup3\n          dup1\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap2\n          dup2\n          dup4\n          dup3\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup3\n          dup5\n          dup3\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap2\n            /* \"src/libraries/LogExpMath.sol\":19948:19949  3 */\n          0x03\n            /* \"src/libraries/LogExpMath.sol\":20029:20030  5 */\n          0x05\n            /* \"src/libraries/LogExpMath.sol\":20110:20111  7 */\n          0x07\n            /* \"src/libraries/LogExpMath.sol\":20191:20192  9 */\n          0x09\n            /* \"src/libraries/LogExpMath.sol\":20272:20274  11 */\n          0x0b\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup9\n          dup11\n          dup10\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap9\n          dup1\n          dup12\n          dup12\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap11\n          dup12\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n          sdiv\n          swap9\n          sdiv\n          swap7\n          sdiv\n          swap5\n          sdiv\n          swap3\n          sdiv\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          add\n          add\n          add\n          add\n          add\n          0x01\n          shl\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          add\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n          swap1\n          jump\t// out\n            /* \"src/libraries/LogExpMath.sol\":18817:18914  if (a >= a11) {... */\n        tag_959:\n            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n          0x056bc75e2d63100000\n            /* \"src/libraries/LogExpMath.sol\":4686:4711  6_250_000_000_000_000_000 */\n          0x56bc75e2d6310000\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap3\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          swap2\n          add\n            /* \"src/libraries/LogExpMath.sol\":18817:18914  if (a >= a11) {... */\n          swap1\n          codesize\n          jump(tag_960)\n            /* \"src/libraries/LogExpMath.sol\":18706:18803  if (a >= a10) {... */\n        tag_957:\n            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n          0x056bc75e2d63100000\n            /* \"src/libraries/LogExpMath.sol\":4556:4582  12_500_000_000_000_000_000 */\n          0xad78ebc5ac620000\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap3\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          swap2\n          add\n            /* \"src/libraries/LogExpMath.sol\":18706:18803  if (a >= a10) {... */\n          swap1\n          codesize\n          jump(tag_958)\n            /* \"src/libraries/LogExpMath.sol\":18598:18692  if (a >= a9) {... */\n        tag_955:\n            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n          0x056bc75e2d63100000\n            /* \"src/libraries/LogExpMath.sol\":4428:4454  25_000_000_000_000_000_000 */\n          0x015af1d78b58c40000\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap3\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          swap2\n          add\n            /* \"src/libraries/LogExpMath.sol\":18598:18692  if (a >= a9) {... */\n          swap1\n          codesize\n          jump(tag_956)\n            /* \"src/libraries/LogExpMath.sol\":18490:18584  if (a >= a8) {... */\n        tag_953:\n            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n          0x056bc75e2d63100000\n            /* \"src/libraries/LogExpMath.sol\":4301:4327  50_000_000_000_000_000_000 */\n          0x02b5e3af16b1880000\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap3\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          swap2\n          add\n            /* \"src/libraries/LogExpMath.sol\":18490:18584  if (a >= a8) {... */\n          swap1\n          codesize\n          jump(tag_954)\n            /* \"src/libraries/LogExpMath.sol\":18382:18476  if (a >= a7) {... */\n        tag_951:\n            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n          0x056bc75e2d63100000\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          dup1\n          swap3\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          swap2\n          add\n            /* \"src/libraries/LogExpMath.sol\":18382:18476  if (a >= a7) {... */\n          swap1\n          codesize\n          jump(tag_952)\n            /* \"src/libraries/LogExpMath.sol\":18274:18368  if (a >= a6) {... */\n        tag_949:\n            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n          0x056bc75e2d63100000\n            /* \"src/libraries/LogExpMath.sol\":4047:4074  200_000_000_000_000_000_000 */\n          0x0ad78ebc5ac6200000\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap3\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          swap2\n          add\n            /* \"src/libraries/LogExpMath.sol\":18274:18368  if (a >= a6) {... */\n          swap1\n          codesize\n          jump(tag_950)\n            /* \"src/libraries/LogExpMath.sol\":18166:18260  if (a >= a5) {... */\n        tag_947:\n            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n          0x056bc75e2d63100000\n            /* \"src/libraries/LogExpMath.sol\":3918:3945  400_000_000_000_000_000_000 */\n          0x15af1d78b58c400000\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap3\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          swap2\n          add\n            /* \"src/libraries/LogExpMath.sol\":18166:18260  if (a >= a5) {... */\n          swap1\n          codesize\n          jump(tag_948)\n            /* \"src/libraries/LogExpMath.sol\":18058:18152  if (a >= a4) {... */\n        tag_945:\n            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n          0x056bc75e2d63100000\n            /* \"src/libraries/LogExpMath.sol\":3787:3814  800_000_000_000_000_000_000 */\n          0x2b5e3af16b18800000\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap3\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          swap2\n          add\n            /* \"src/libraries/LogExpMath.sol\":18058:18152  if (a >= a4) {... */\n          swap1\n          codesize\n          jump(tag_946)\n            /* \"src/libraries/LogExpMath.sol\":17950:18044  if (a >= a3) {... */\n        tag_943:\n            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n          0x056bc75e2d63100000\n            /* \"src/libraries/LogExpMath.sol\":3650:3679  1_600_000_000_000_000_000_000 */\n          0x56bc75e2d631000000\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap3\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          swap2\n          add\n            /* \"src/libraries/LogExpMath.sol\":17950:18044  if (a >= a3) {... */\n          swap1\n          codesize\n          jump(tag_944)\n            /* \"src/libraries/LogExpMath.sol\":17842:17936  if (a >= a2) {... */\n        tag_941:\n            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n          0x056bc75e2d63100000\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap2\n          swap3\n          swap5\n          pop\n            /* \"src/libraries/LogExpMath.sol\":3503:3532  3_200_000_000_000_000_000_000 */\n          0xad78ebc5ac62000000\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap4\n          pop\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          swap2\n          add\n            /* \"src/libraries/LogExpMath.sol\":17842:17936  if (a >= a2) {... */\n          swap1\n          codesize\n          dup1\n          dup1\n          jump(tag_942)\n            /* \"src/libraries/LogExpMath.sol\":17399:17525  if (a >= a1 * ONE_18) {... */\n        tag_939:\n            /* \"src/libraries/LogExpMath.sol\":3385:3422  6_235_149_080_811_616_882_910_000_000 */\n          0x1425982cf597cd205cef7380\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          swap1\n          swap2\n          sdiv\n          swap1\n            /* \"src/libraries/LogExpMath.sol\":3324:3350  64_000_000_000_000_000_000 */\n          0x03782dace9d9000000\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          add\n            /* \"src/libraries/LogExpMath.sol\":17399:17525  if (a >= a1 * ONE_18) {... */\n          jump(tag_940)\n            /* \"src/libraries/LogExpMath.sol\":17259:17385  if (a >= a0 * ONE_18) {... */\n        tag_937:\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          pop\n            /* \"src/libraries/LogExpMath.sol\":3187:3261  38_877_084_059_945_950_922_200_000_000_000_000_000_000_000_000_000_000_000 */\n          0x0195e54c5dd42177f53a27172fa9ec630262827000000000\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          swap1\n          sdiv\n            /* \"src/libraries/LogExpMath.sol\":3125:3152  128_000_000_000_000_000_000 */\n          0x06f05b59d3b2000000\n            /* \"src/libraries/LogExpMath.sol\":17259:17385  if (a >= a0 * ONE_18) {... */\n          jump(tag_938)\n            /* \"src/libraries/LogExpMath.sol\":15339:15760  if (a < ONE_18) {... */\n        tag_935:\n            /* \"src/libraries/LogExpMath.sol\":15722:15743  (ONE_18 * ONE_18) / a */\n          tag_962\n            /* \"src/libraries/LogExpMath.sol\":15718:15744  _ln((ONE_18 * ONE_18) / a) */\n          tag_963\n            /* \"src/libraries/LogExpMath.sol\":15722:15743  (ONE_18 * ONE_18) / a */\n          swap2\n          tag_53\n          jump\t// in\n        tag_962:\n            /* \"src/libraries/LogExpMath.sol\":15718:15744  _ln((ONE_18 * ONE_18) / a) */\n          tag_57\n          jump\t// in\n        tag_963:\n          0x00\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sub\n            /* \"src/libraries/LogExpMath.sol\":15709:15745  return (-_ln((ONE_18 * ONE_18) / a)) */\n          swap1\n          jump\t// out\n            /* \"src/libraries/StableMath.sol\":3525:4633  function _computeLiquidityFromAdjustedBalances(... */\n        tag_58:\n          swap2\n          swap1\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x00\n            /* \"src/libraries/StableMath.sol\":3738:3747  xp0 + xp1 */\n          tag_964\n          dup3\n          dup6\n          tag_22\n          jump\t// in\n        tag_964:\n            /* \"src/libraries/StableMath.sol\":3761:3767  s == 0 */\n          dup1\n          iszero\n            /* \"src/libraries/StableMath.sol\":3757:3802  if (s == 0) {... */\n          tag_965\n          jumpi\n            /* \"src/libraries/StableMath.sol\":3812:3825  uint256 prevD */\n          dup2\n            /* \"src/libraries/StableMath.sol\":3891:3904  uint256 D = s */\n          swap4\n          dup2\n            /* \"src/libraries/StableMath.sol\":3927:3962  xp0 < xp1 ? (xp0, xp1) : (xp1, xp0) */\n          swap6\n            /* \"src/libraries/StableMath.sol\":3927:3936  xp0 < xp1 */\n          dup5\n          dup2\n          lt\n            /* \"src/libraries/StableMath.sol\":3927:3962  xp0 < xp1 ? (xp0, xp1) : (xp1, xp0) */\n          0x00\n            /* \"src/libraries/StableMath.sol\":3927:3936  xp0 < xp1 */\n          eq\n          tag_967\n          jumpi\n            /* \"src/libraries/StableMath.sol\":3927:3962  xp0 < xp1 ? (xp0, xp1) : (xp1, xp0) */\n          swap3\n          swap2\n          swap1\n        tag_969:\n            /* \"src/libraries/StableMath.sol\":3977:3990  uint256 i = 0 */\n          dup3\n            /* \"src/libraries/StableMath.sol\":3972:4294  for (uint256 i = 0; i < MAX_LOOP_LIMIT; i++) {... */\n          swap5\n            /* \"src/libraries/StableMath.sol\":3992:4010  i < MAX_LOOP_LIMIT */\n        tag_970:\n            /* \"src/libraries/StableMath.sol\":929:932  256 */\n          0x0100\n            /* \"src/libraries/StableMath.sol\":3992:4010  i < MAX_LOOP_LIMIT */\n          dup7\n          lt\n          tag_971\n          jumpi\n            /* \"src/libraries/StableMath.sol\":4451:4481  stdMath.percentDelta(D, prevD) */\n          pop\n          pop\n          pop\n          pop\n          pop\n          pop\n            /* \"src/libraries/StableMath.sol\":4511:4529  0.0000000000004e18 */\n          0x061a80\n            /* \"src/libraries/StableMath.sol\":4451:4481  stdMath.percentDelta(D, prevD) */\n          tag_973\n          dup3\n          dup5\n          tag_51\n          jump\t// in\n        tag_973:\n            /* \"src/libraries/StableMath.sol\":4495:4529  percentDelta <= 0.0000000000004e18 */\n          gt\n          iszero\n            /* \"src/libraries/StableMath.sol\":4491:4578  if (percentDelta <= 0.0000000000004e18) {... */\n          tag_974\n          jumpi\n            /* \"src/libraries/StableMath.sol\":320:323  100 */\n          0x64\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mload(0x40)\n            /* \"src/libraries/StableMath.sol\":4588:4626  revert(\"SM: COMPUTE_DID_NOT_CONVERGE\") */\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n            /* \"src/libraries/StableMath.sol\":320:323  100 */\n          0x20\n            /* \"src/libraries/StableMath.sol\":4074:4075  4 */\n          0x04\n            /* \"src/libraries/StableMath.sol\":4588:4626  revert(\"SM: COMPUTE_DID_NOT_CONVERGE\") */\n          dup3\n          add\n            /* \"src/libraries/StableMath.sol\":320:323  100 */\n          mstore\n          0x1c\n          0x24\n          dup3\n          add\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mstore\n            /* \"src/libraries/StableMath.sol\":320:323  100 */\n          0x534d3a20434f4d505554455f4449445f4e4f545f434f4e564552474500000000\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x44\n          dup3\n          add\n            /* \"src/libraries/StableMath.sol\":320:323  100 */\n          mstore\n            /* \"src/libraries/StableMath.sol\":4588:4626  revert(\"SM: COMPUTE_DID_NOT_CONVERGE\") */\n          revert\n            /* \"src/libraries/StableMath.sol\":4491:4578  if (percentDelta <= 0.0000000000004e18) {... */\n        tag_974:\n            /* \"src/libraries/StableMath.sol\":4553:4562  D + prevD */\n          tag_976\n          swap2\n          tag_22\n          jump\t// in\n        tag_976:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x01\n          shr\n            /* \"src/libraries/StableMath.sol\":4545:4567  return (D + prevD) / 2 */\n          swap1\n          jump\t// out\n            /* \"src/libraries/StableMath.sol\":4012:4015  i++ */\n        tag_971:\n            /* \"src/libraries/StableMath.sol\":4047:4052  D * D */\n          swap1\n          swap2\n          swap3\n          swap4\n          swap5\n          swap6\n          pop\n            /* \"src/libraries/StableMath.sol\":4044:4071  (((D * D) / xp0) * D) / xp1 */\n          tag_977\n            /* \"src/libraries/StableMath.sol\":4047:4052  D * D */\n          dup2\n            /* \"src/libraries/StableMath.sol\":4045:4064  ((D * D) / xp0) * D */\n          tag_452\n            /* \"src/libraries/StableMath.sol\":4047:4052  D * D */\n          dup10\n            /* \"src/libraries/StableMath.sol\":4046:4059  (D * D) / xp0 */\n          tag_451\n            /* \"src/libraries/StableMath.sol\":4047:4052  D * D */\n          dup10\n          tag_452\n          dup4\n          dup1\n          tag_36\n          jump\t// in\n            /* \"src/libraries/StableMath.sol\":4044:4071  (((D * D) / xp0) * D) / xp1 */\n        tag_977:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap6\n          dup7\n            /* \"src/libraries/StableMath.sol\":4144:4145  2 */\n          0x02\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          shr\n            /* \"src/libraries/StableMath.sol\":4089:4098  prevD = D */\n          swap8\n          dup1\n          swap9\n          dup2\n            /* \"src/libraries/StableMath.sol\":320:323  100 */\n          swap9\n            /* \"src/libraries/StableMath.sol\":4117:4155  ((N_A * s) / A_PRECISION + 2 * dP) * D */\n          tag_981\n            /* \"src/libraries/StableMath.sol\":320:323  100 */\n          dup4\n            /* \"src/libraries/StableMath.sol\":4118:4150  (N_A * s) / A_PRECISION + 2 * dP */\n          tag_451\n            /* \"src/libraries/StableMath.sol\":320:323  100 */\n          0x64\n            /* \"src/libraries/StableMath.sol\":4119:4126  N_A * s */\n          swap4\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0x7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\n            /* \"src/libraries/StableMath.sol\":4119:4126  N_A * s */\n          dup6\n          tag_983\n          dup14\n          dup14\n          tag_36\n          jump\t// in\n        tag_983:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          div\n          swap2\n          0x01\n          shr\n          and\n            /* \"src/libraries/StableMath.sol\":4118:4150  (N_A * s) / A_PRECISION + 2 * dP */\n          swap1\n          tag_22\n          jump\t// in\n            /* \"src/libraries/StableMath.sol\":4117:4155  ((N_A * s) / A_PRECISION + 2 * dP) * D */\n        tag_981:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap3\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9c\n          dup8\n          add\n          dup8\n          dup2\n          gt\n          tag_984\n          jumpi\n            /* \"src/libraries/StableMath.sol\":4160:4183  (N_A - A_PRECISION) * D */\n          swap1\n          tag_986\n          swap2\n          tag_36\n          jump\t// in\n        tag_986:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          div\n            /* \"src/libraries/StableMath.sol\":4200:4201  3 */\n          0x03\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap2\n          dup1\n          dup4\n          mul\n          swap3\n          dup4\n          div\n          sub\n          tag_987\n          jumpi\n            /* \"src/libraries/StableMath.sol\":4116:4207  (((N_A * s) / A_PRECISION + 2 * dP) * D) / ((N_A - A_PRECISION) * D / A_PRECISION + 3 * dP) */\n          tag_989\n            /* \"src/libraries/StableMath.sol\":4160:4206  (N_A - A_PRECISION) * D / A_PRECISION + 3 * dP */\n          swap3\n          swap2\n          tag_844\n          swap2\n          tag_22\n          jump\t// in\n            /* \"src/libraries/StableMath.sol\":4116:4207  (((N_A * s) / A_PRECISION + 2 * dP) * D) / ((N_A - A_PRECISION) * D / A_PRECISION + 3 * dP) */\n        tag_989:\n            /* \"src/libraries/StableMath.sol\":4225:4241  D.within1(prevD) */\n          tag_991\n            /* \"src/libraries/StableMath.sol\":4112:4207  D = (((N_A * s) / A_PRECISION + 2 * dP) * D) / ((N_A - A_PRECISION) * D / A_PRECISION + 3 * dP) */\n          dup2\n            /* \"src/libraries/StableMath.sol\":4225:4241  D.within1(prevD) */\n          swap10\n          dup3\n          tag_59\n          jump\t// in\n        tag_991:\n            /* \"src/libraries/StableMath.sol\":4221:4284  if (D.within1(prevD)) {... */\n          tag_992\n          jumpi\n            /* \"src/libraries/StableMath.sol\":4012:4015  i++ */\n          pop\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n          dup2\n          eq\n          tag_994\n          jumpi\n          0x01\n          add\n            /* \"src/libraries/StableMath.sol\":3977:3990  uint256 i = 0 */\n          swap5\n          swap4\n          swap3\n          swap2\n          swap1\n          jump(tag_970)\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n        tag_994:\n          0x24\n          dup6\n          0x4e487b7100000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          0x11\n            /* \"src/libraries/StableMath.sol\":4074:4075  4 */\n          0x04\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mstore\n          revert\n            /* \"src/libraries/StableMath.sol\":4221:4284  if (D.within1(prevD)) {... */\n        tag_992:\n            /* \"src/libraries/StableMath.sol\":4261:4269  return D */\n          swap8\n          pop\n          pop\n          pop\n          pop\n          pop\n          pop\n          pop\n          pop\n          swap1\n          jump\t// out\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n        tag_987:\n          0x24\n          dup9\n          0x4e487b7100000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          0x11\n            /* \"src/libraries/StableMath.sol\":4074:4075  4 */\n          0x04\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mstore\n          revert\n        tag_984:\n          0x24\n          dup11\n          0x4e487b7100000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          0x11\n            /* \"src/libraries/StableMath.sol\":4074:4075  4 */\n          0x04\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          mstore\n          revert\n            /* \"src/libraries/StableMath.sol\":3927:3962  xp0 < xp1 ? (xp0, xp1) : (xp1, xp0) */\n        tag_967:\n          swap4\n          swap3\n          swap2\n          swap1\n          jump(tag_969)\n            /* \"src/libraries/StableMath.sol\":3757:3802  if (s == 0) {... */\n        tag_965:\n            /* \"src/libraries/StableMath.sol\":3783:3791  return 0 */\n          pop\n          swap3\n          pop\n          pop\n          pop\n          swap1\n          jump\t// out\n            /* \"src/libraries/MathUtils.sol\":519:729  function within1(uint256 a, uint256 b) internal pure returns (bool) {... */\n        tag_59:\n            /* \"src/libraries/MathUtils.sol\":711:712  1 */\n          0x01\n            /* \"src/libraries/MathUtils.sol\":519:729  function within1(uint256 a, uint256 b) internal pure returns (bool) {... */\n          swap2\n            /* \"src/libraries/MathUtils.sol\":625:630  a > b */\n          dup1\n          dup3\n          gt\n            /* \"src/libraries/MathUtils.sol\":621:682  if (a > b) {... */\n          tag_996\n          jumpi\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          sub\n            /* \"src/libraries/MathUtils.sol\":702:712  b - a <= 1 */\n          gt\n          iszero\n            /* \"src/libraries/MathUtils.sol\":519:729  function within1(uint256 a, uint256 b) internal pure returns (bool) {... */\n          swap1\n          jump\t// out\n            /* \"src/libraries/MathUtils.sol\":621:682  if (a > b) {... */\n        tag_996:\n            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */\n          swap1\n          sub\n            /* \"src/libraries/MathUtils.sol\":657:667  a - b <= 1 */\n          gt\n          iszero\n            /* \"src/libraries/MathUtils.sol\":650:667  return a - b <= 1 */\n          swap1\n          jump\t// out\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":704:868  function mulWadDown(uint256 x, uint256 y) internal pure returns (uint256) {... */\n        tag_60:\n          swap1\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":655:659  1e18 */\n          0x0de0b6b3a7640000\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":1744:2084  assembly {... */\n          swap2\n          dup2\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n          div\n          dup2\n          gt\n          dup3\n          mul\n          iszero\n          dup4\n          mul\n          iszero\n          tag_560\n          jumpi\n          mul\n          div\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":704:868  function mulWadDown(uint256 x, uint256 y) internal pure returns (uint256) {... */\n          swap1\n          jump\t// out\n\n        auxdata: 0xa164736f6c6343000811000a\n    }\n}\n\nsub_4: assembly {\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      0x01c0\n      dup1\n      0x40\n      mstore\n      jumpi(tag_97, callvalue)\n      0x40\n      dup2\n      bytecodeSize\n      dup1\n      codesize\n      sub\n      dup1\n      swap2\n      tag_14\n      dup3\n      dup6\n      tag_2\n      jump\t// in\n    tag_14:\n      dup4\n      codecopy\n      dup2\n      add\n      sub\n      slt\n      tag_97\n      jumpi\n      tag_17\n      0x20\n      tag_18\n      dup4\n      tag_3\n      jump\t// in\n    tag_18:\n      swap3\n      add\n      tag_3\n      jump\t// in\n    tag_17:\n      swap1\n      mload(0x40)\n      swap2\n      tag_19\n      dup4\n      tag_1\n      jump\t// in\n    tag_19:\n      0x0b\n      dup4\n      mstore\n      shl(0xa8, 0x53503a3a73776170466565)\n      0x20\n      dup5\n      add\n      mstore\n      mload(0x40)\n      swap3\n      tag_20\n      dup5\n      tag_1\n      jump\t// in\n    tag_20:\n      0x12\n      dup5\n      mstore\n      shl(0x71, 0x2932b9b2b93b37b4b9102628102a37b5b2b7)\n      0x20\n      dup6\n      add\n      mstore\n      mload(0x40)\n      swap4\n      tag_21\n      dup6\n      tag_1\n      jump\t// in\n    tag_21:\n      0x06\n      dup6\n      mstore\n      shl(0xd4, 0x05245532d4c5)\n      0x20\n      dup7\n      add\n      mstore\n      dup1\n      mload\n      swap1\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      tag_50\n      jumpi\n      dup2\n      swap1\n      tag_24\n      sload(0x00)\n      tag_8\n      jump\t// in\n    tag_24:\n      0x1f\n      dup2\n      gt\n      tag_25\n      jumpi\n    tag_26:\n      pop\n      0x20\n      swap1\n      0x1f\n      dup4\n      gt\n      0x01\n      eq\n      tag_27\n      jumpi\n      0x00\n      swap3\n      tag_29\n      jumpi\n    tag_30:\n      pop\n      pop\n      dup2\n      0x01\n      shl\n      swap2\n      not(0x00)\n      swap1\n      0x03\n      shl\n      shr\n      not\n      and\n      or\n      0x00\n      sstore\n    tag_31:\n      dup4\n      mload\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      gt\n      tag_50\n      jumpi\n      tag_34\n      sload(0x01)\n      tag_8\n      jump\t// in\n    tag_34:\n      0x1f\n      dup2\n      gt\n      tag_35\n      jumpi\n    tag_36:\n      pop\n      0x20\n      swap5\n      0x1f\n      dup3\n      gt\n      0x01\n      eq\n      tag_37\n      jumpi\n      swap5\n      dup2\n      swap3\n      swap4\n      swap5\n      swap6\n      0x00\n      swap3\n      tag_39\n      jumpi\n    tag_40:\n      pop\n      pop\n      dup2\n      0x01\n      shl\n      swap2\n      not(0x00)\n      swap1\n      0x03\n      shl\n      shr\n      not\n      and\n      or\n      0x01\n      sstore\n    tag_41:\n      0x12\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2142:2162  decimals = _decimals */\n      0x80\n      mstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2192:2205  block.chainid */\n      chainid\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2173:2205  INITIAL_CHAIN_ID = block.chainid */\n      0xa0\n      mstore\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      mload(0x40)\n      0x00\n      swap1\n      sload(0x00)\n      swap2\n      dup2\n      tag_42\n      dup5\n      tag_8\n      jump\t// in\n    tag_42:\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      swap2\n      dup3\n      dup3\n      mstore\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      0x20\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      dup3\n      add\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      swap5\n      0x01\n      dup2\n      and\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2116:2132  symbol = _symbol */\n      swap1\n      dup2\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      0x00\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2116:2132  symbol = _symbol */\n      eq\n      tag_43\n      jumpi\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      pop\n      0x01\n      eq\n      tag_45\n      jumpi\n    tag_46:\n      tag_47\n      swap3\n      pop\n      sub\n      dup3\n      tag_2\n      jump\t// in\n    tag_47:\n      mload\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5789:5811  keccak256(bytes(name)) */\n      swap1\n      keccak256\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      mload(0x40)\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5640:5935  abi.encode(... */\n      swap1\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      0x20\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5640:5935  abi.encode(... */\n      dup3\n      add\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      swap1\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5672:5767  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n      0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      dup3\n      mstore\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      0x40\n      dup4\n      add\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      mstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5833:5847  keccak256(\"1\") */\n      0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      0x60\n      dup4\n      add\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      mstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2192:2205  block.chainid */\n      chainid\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2142:2162  decimals = _decimals */\n      0x80\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      dup4\n      add\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      mstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5912:5916  this */\n      address\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2173:2205  INITIAL_CHAIN_ID = block.chainid */\n      0xa0\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      dup4\n      add\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      mstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2173:2205  INITIAL_CHAIN_ID = block.chainid */\n      0xa0\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5640:5935  abi.encode(... */\n      dup3\n      mstore\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      0xc0\n      dup3\n      add\n      swap1\n      dup3\n      dup3\n      lt\n      0x01\n      dup1\n      0x40\n      shl\n      sub\n      dup4\n      gt\n      or\n      tag_50\n      jumpi\n      0x40\n      dup3\n      swap1\n      mstore\n      dup3\n      mload\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5613:5949  keccak256(... */\n      swap1\n      keccak256\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      0xc0\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2215:2266  INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator() */\n      mstore\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      0x0140\n      dup3\n      add\n      swap2\n      sub(shl(0x40, 0x01), 0x01)\n      dup4\n      gt\n      dup3\n      dup5\n      lt\n      or\n      tag_50\n      jumpi\n      0x00\n        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */\n      0x0120\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      swap3\n        /* \"src/ReservoirPair.sol\":3435:3451  type(uint16).max */\n      0xffff\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      swap5\n      0x40\n      mstore\n      mstore\n      0x00\n        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */\n      0xe0\n      dup3\n      add\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      mstore\n      0x00\n        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */\n      0x0100\n      dup3\n      add\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      mstore\n        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */\n      add\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      mstore\n      sstore(0x06, shl(0xf0, 0xffff))\n      not(0x00)\n        /* \"src/curve/stable/StablePair.sol\":1558:1571  \"SP::swapFee\" */\n      dup1\n        /* \"src/ReservoirPair.sol\":3519:3536  type(uint256).max */\n      0x08\n        /* \"src/curve/stable/StablePair.sol\":1558:1571  \"SP::swapFee\" */\n      sstore\n        /* \"src/ReservoirPair.sol\":3654:3671  type(uint256).max */\n      0x0a\n        /* \"src/curve/stable/StablePair.sol\":1558:1571  \"SP::swapFee\" */\n      sstore\n        /* \"src/ReservoirPair.sol\":3899:3909  msg.sender */\n      caller\n        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */\n      0xe0\n        /* \"src/ReservoirPair.sol\":3874:3910  factory = GenericFactory(msg.sender) */\n      mstore\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup4\n      and\n        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */\n      0x0100\n        /* \"src/ReservoirPair.sol\":3920:3943  token0 = ERC20(aToken0) */\n      mstore\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup3\n      and\n        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */\n      0x0120\n        /* \"src/ReservoirPair.sol\":3953:3976  token1 = ERC20(aToken1) */\n      mstore\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      mload(0x40)\n        /* \"src/ReservoirPair.sol\":4011:4041  abi.encodePacked(aSwapFeeName) */\n      tag_52\n      dup2\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      tag_53\n      0x20\n        /* \"src/ReservoirPair.sol\":4011:4041  abi.encodePacked(aSwapFeeName) */\n      dup3\n      add\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      dup1\n      swap6\n      tag_4\n      jump\t// in\n    tag_53:\n        /* \"src/ReservoirPair.sol\":4011:4041  abi.encodePacked(aSwapFeeName) */\n      sub\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      not(0x1f)\n        /* \"src/ReservoirPair.sol\":4011:4041  abi.encodePacked(aSwapFeeName) */\n      dup2\n      add\n      dup4\n      mstore\n      dup3\n      tag_2\n      jump\t// in\n    tag_52:\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      mload\n        /* \"src/ReservoirPair.sol\":4001:4042  keccak256(abi.encodePacked(aSwapFeeName)) */\n      swap1\n      keccak256\n        /* \"src/ReservoirPair.sol\":3987:4042  swapFeeName = keccak256(abi.encodePacked(aSwapFeeName)) */\n      0x0180\n      mstore\n      tag_54\n      tag_9\n      jump\t// in\n    tag_54:\n      tag_55\n      tag_10\n      jump\t// in\n    tag_55:\n        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */\n      0x0100\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      mload\n      mload(0x40)\n      shl(0xe0, 0x313ce567)\n        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */\n      dup2\n      mstore\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      swap1\n      0x20\n      swap1\n      dup3\n      swap1\n        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */\n      0x04\n      swap1\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      dup3\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_80\n      jumpi\n        /* \"src/ReservoirPair.sol\":4151:4173  18 - token0.decimals() */\n      tag_58\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      0xff\n        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */\n      swap2\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      tag_59\n        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */\n      swap4\n      0x00\n      swap2\n      tag_66\n      jumpi\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n    tag_61:\n        /* \"src/ReservoirPair.sol\":4151:4173  18 - token0.decimals() */\n      pop\n      tag_6\n      jump\t// in\n    tag_58:\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      and\n      tag_7\n      jump\t// in\n    tag_59:\n      0x0140\n        /* \"src/ReservoirPair.sol\":4107:4174  token0PrecisionMultiplier = uint128(10) ** (18 - token0.decimals()) */\n      mstore\n        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */\n      0x0120\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      mload\n      mload(0x40)\n      shl(0xe0, 0x313ce567)\n        /* \"src/ReservoirPair.sol\":4233:4250  token1.decimals() */\n      dup2\n      mstore\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      swap1\n      0x20\n      swap1\n      dup3\n      swap1\n        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */\n      0x04\n      swap1\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      dup3\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"src/ReservoirPair.sol\":4233:4250  token1.decimals() */\n      gas\n      staticcall\n      dup1\n      iszero\n      tag_80\n      jumpi\n        /* \"src/ReservoirPair.sol\":4228:4250  18 - token1.decimals() */\n      tag_58\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      0xff\n        /* \"src/ReservoirPair.sol\":4233:4250  token1.decimals() */\n      swap2\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      tag_65\n        /* \"src/ReservoirPair.sol\":4233:4250  token1.decimals() */\n      swap4\n      0x00\n      swap2\n      tag_66\n      jumpi\n        /* \"src/ReservoirPair.sol\":4228:4250  18 - token1.decimals() */\n      pop\n      tag_6\n      jump\t// in\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n    tag_65:\n        /* \"src/ReservoirPair.sol\":4184:4251  token1PrecisionMultiplier = uint128(10) ** (18 - token1.decimals()) */\n      0x0160\n      mstore\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */\n      0xe0\n        /* \"src/curve/stable/StablePair.sol\":1558:1571  \"SP::swapFee\" */\n      mload\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      and\n        /* \"src/ReservoirPair.sol\":17490:17522  factory.read(ORACLE_CALLER_NAME) */\n      tag_68\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      mload(0x40)\n      tag_69\n      dup2\n      tag_1\n      jump\t// in\n    tag_69:\n      0x14\n      dup2\n      mstore\n      0x5368617265643a3a6f7261636c6543616c6c6572000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n        /* \"src/ReservoirPair.sol\":17490:17522  factory.read(ORACLE_CALLER_NAME) */\n      tag_11\n      jump\t// in\n    tag_68:\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      and\n        /* \"src/ReservoirPair.sol\":17562:17574  oracleCaller */\n      0x01000f\n        /* \"src/ReservoirPair.sol\":16881:16903  \"Shared::oracleCaller\" */\n      swap1\n      dup2\n      sload\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      dup2\n      and\n        /* \"src/ReservoirPair.sol\":17548:17574  lNewCaller != oracleCaller */\n      dup1\n      dup4\n      sub\n        /* \"src/ReservoirPair.sol\":17544:17690  if (lNewCaller != oracleCaller) {... */\n      tag_70\n      jumpi\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n    tag_71:\n      pop\n      pop\n        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */\n      0xe0\n        /* \"src/curve/stable/StablePair.sol\":1558:1571  \"SP::swapFee\" */\n      mload\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      mload(0x40)\n        /* \"src/ReservoirPair.sol\":4309:4343  factory.read(MAX_CHANGE_RATE_NAME) */\n      tag_72\n      swap4\n      pop\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_73\n      dup3\n      tag_1\n      jump\t// in\n    tag_73:\n      0x15\n      dup3\n      mstore\n      0x5368617265643a3a6d61784368616e6765526174650000000000000000000000\n      0x20\n      dup4\n      add\n      mstore\n        /* \"src/ReservoirPair.sol\":4309:4343  factory.read(MAX_CHANGE_RATE_NAME) */\n      tag_11\n      jump\t// in\n    tag_72:\n        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */\n      0xe0\n        /* \"src/curve/stable/StablePair.sol\":1558:1571  \"SP::swapFee\" */\n      mload\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      swap1\n      swap2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"src/ReservoirPair.sol\":3899:3909  msg.sender */\n      caller\n        /* \"src/ReservoirPair.sol\":3719:3749  msg.sender == address(factory) */\n      sub\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      tag_74\n      jumpi\n        /* \"src/ReservoirPair.sol\":17789:17807  0 < aMaxChangeRate */\n      dup2\n      iszero\n      iszero\n        /* \"src/ReservoirPair.sol\":17789:17847  0 < aMaxChangeRate && aMaxChangeRate <= MAX_CHANGE_PER_SEC */\n      dup1\n      tag_76\n      jumpi\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n    tag_77:\n        /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */\n      iszero\n      tag_78\n      jumpi\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      0x20\n        /* \"src/ReservoirPair.sol\":17917:17930  maxChangeRate */\n      swap2\n      0x01000d\n        /* \"src/ReservoirPair.sol\":17896:17947  MaxChangeRateUpdated(maxChangeRate, aMaxChangeRate) */\n      0x807b9f5907da3f00bf587e77bc07247e1c7ff5ae46c93a584b3a075be0b1bac2\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      0x40\n      dup3\n      sload\n      dup2\n      mload\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      swap1\n      dup2\n      mstore\n        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */\n      dup5\n      dup8\n      dup3\n      add\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      mstore\n        /* \"src/ReservoirPair.sol\":17896:17947  MaxChangeRateUpdated(maxChangeRate, aMaxChangeRate) */\n      log1\n        /* \"src/curve/stable/StablePair.sol\":1558:1571  \"SP::swapFee\" */\n      sstore\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      0x01\n        /* \"src/curve/stable/StablePair.sol\":1897:1898  1 */\n      0x010011\n        /* \"src/curve/stable/StablePair.sol\":1558:1571  \"SP::swapFee\" */\n      sstore\n        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */\n      0xe0\n        /* \"src/curve/stable/StablePair.sol\":1558:1571  \"SP::swapFee\" */\n      mload\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      mload(0x40)\n      shl(0xe2, 0x33e744df)\n        /* \"src/curve/stable/StablePair.sol\":2258:2318  factory.deploy(ConstantsLib.MINT_BURN_KEY, aToken0, aToken1) */\n      dup2\n      mstore\n        /* \"src/libraries/Constants.sol\":210:276  0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79 */\n      0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79\n        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */\n      0x04\n        /* \"src/curve/stable/StablePair.sol\":2258:2318  factory.deploy(ConstantsLib.MINT_BURN_KEY, aToken0, aToken1) */\n      dup3\n      add\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      swap5\n      dup6\n      and\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      0x24\n      dup3\n      add\n      mstore\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      swap2\n      dup5\n      and\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      0x44\n      dup4\n      add\n      mstore\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      swap1\n      swap3\n      dup4\n      swap2\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      0x64\n      swap2\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      dup4\n      swap2\n      0x00\n      swap2\n      and\n        /* \"src/curve/stable/StablePair.sol\":2258:2318  factory.deploy(ConstantsLib.MINT_BURN_KEY, aToken0, aToken1) */\n      gas\n      call\n      swap1\n      dup2\n      iszero\n      tag_80\n      jumpi\n      0x00\n      swap2\n      tag_82\n      jumpi\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n    tag_83:\n      pop\n        /* \"src/curve/stable/StablePair.sol\":2240:2318  MINT_BURN_LOGIC = factory.deploy(ConstantsLib.MINT_BURN_KEY, aToken0, aToken1) */\n      0x01a0\n      dup2\n      dup2\n      mstore\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      and\n        /* \"src/curve/stable/StablePair.sol\":2336:2365  MINT_BURN_LOGIC != address(0) */\n      iszero\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      tag_84\n      jumpi\n        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */\n      0xe0\n        /* \"src/curve/stable/StablePair.sol\":1558:1571  \"SP::swapFee\" */\n      mload\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      mload(0x40)\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      0x64\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      and\n      swap1\n        /* \"src/curve/stable/StablePair.sol\":2431:2475  factory.read(AMPLIFICATION_COEFFICIENT_NAME) */\n      tag_86\n      swap1\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      tag_87\n      dup2\n      tag_1\n      jump\t// in\n    tag_87:\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      0x1c\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      dup2\n      mstore\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      0x53503a3a616d706c696669636174696f6e436f656666696369656e7400000000\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      0x20\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      dup3\n      add\n      mstore\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      swap3\n        /* \"src/curve/stable/StablePair.sol\":2431:2475  factory.read(AMPLIFICATION_COEFFICIENT_NAME) */\n      tag_11\n      jump\t// in\n    tag_86:\n        /* \"src/libraries/StableMath.sol\":320:323  100 */\n      and\n      mul\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      0x01\n      dup1\n      0x40\n      shl\n      sub\n        /* \"src/libraries/StableMath.sol\":320:323  100 */\n      dup2\n      and\n      swap1\n      dup2\n      sub\n      tag_88\n      jumpi\n        /* \"src/curve/stable/StablePair.sol\":2412:2419  ampData */\n      0x010010\n        /* \"src/libraries/StableMath.sol\":320:323  100 */\n      dup1\n      sload\n        /* \"src/curve/stable/StablePair.sol\":2603:2618  block.timestamp */\n      timestamp\n        /* \"src/libraries/StableMath.sol\":320:323  100 */\n      0x80\n      dup2\n      swap1\n      shl\n      sub(shl(0xc0, 0x01), shl(0x80, 0x01))\n      and\n      not(sub(shl(0x40, 0x01), 0x01))\n      swap3\n      swap1\n      swap3\n      and\n      dup5\n      or\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      0x40\n        /* \"src/libraries/StableMath.sol\":320:323  100 */\n      shl\n      0xffffffffffffffff0000000000000000\n      and\n      dup5\n      or\n      swap2\n      swap1\n      swap2\n      or\n      0xc0\n      swap2\n      swap1\n      swap2\n      shl\n      not(sub(shl(0xc0, 0x01), 0x01))\n      and\n      or\n      swap1\n      sstore\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      0x64\n        /* \"src/curve/stable/StablePair.sol\":2706:2775  ampData.initialA >= StableMath.MIN_A * uint64(StableMath.A_PRECISION) */\n      dup2\n      lt\n      iszero\n      swap1\n      dup2\n        /* \"src/curve/stable/StablePair.sol\":2706:2864  ampData.initialA >= StableMath.MIN_A * uint64(StableMath.A_PRECISION)... */\n      tag_90\n      jumpi\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n    tag_91:\n        /* \"src/libraries/StableMath.sol\":607:613  10_000 */\n      pop\n      iszero\n      tag_92\n      jumpi\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      mload(0x40)\n      dataSize(sub_0)\n      swap2\n      dup3\n      dataOffset(sub_0)\n      dup4\n      codecopy\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2142:2162  decimals = _decimals */\n      0x80\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      mload\n      dup3\n      assignImmutable(\"0xb7b2278e6c1d8d0abc309f6bf9256046dfb6cd1d61f6bb10388e8ea4928d3539\")\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2173:2205  INITIAL_CHAIN_ID = block.chainid */\n      0xa0\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      mload\n      dup3\n      assignImmutable(\"0x81290bb363e768cff9ff9a5d447e434874948b933698048b966fdf5d744bf636\")\n      mload(0xc0)\n      dup3\n      assignImmutable(\"0x34382e0db9f4d1365b2614bb97467901a574db9e05159d2f14a2053ade673b06\")\n        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */\n      0xe0\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      mload\n      dup3\n      assignImmutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")\n        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */\n      0x0100\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      mload\n      dup3\n      assignImmutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")\n        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */\n      0x0120\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      mload\n      dup3\n      assignImmutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")\n      mload(0x0140)\n      dup3\n      assignImmutable(\"0x372e991e4284f7d12d6b2461cce9899511b05ac053845de253542adb96f2dca0\")\n        /* \"src/ReservoirPair.sol\":4184:4251  token1PrecisionMultiplier = uint128(10) ** (18 - token1.decimals()) */\n      0x0160\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      mload\n      dup3\n      assignImmutable(\"0xc4ba931b733b92a51f51c0955dd7716c7a38f3de911d23a5d0fbd5d23c0fbe8c\")\n        /* \"src/ReservoirPair.sol\":3987:4042  swapFeeName = keccak256(abi.encodePacked(aSwapFeeName)) */\n      0x0180\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      mload\n      dup3\n      assignImmutable(\"0x4c21324e1a4fdca228db96f937188124acece199982b123b328bdd8fee41b354\")\n      mload\n      dup2\n      assignImmutable(\"0x69a6981f097d268300679363fc4cf56fca542798e8a407090df95d7866c686f5\")\n      return\n        /* \"src/libraries/StableMath.sol\":607:613  10_000 */\n    tag_92:\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n        /* \"src/libraries/StableMath.sol\":607:613  10_000 */\n      dup2\n      mstore\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      0x20\n        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */\n      0x04\n        /* \"src/libraries/StableMath.sol\":607:613  10_000 */\n      dup3\n      add\n      mstore\n      0x0d\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      0x24\n        /* \"src/libraries/StableMath.sol\":607:613  10_000 */\n      dup3\n      add\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      mstore\n      shl(0x98, 0x53503a20494e56414c49445f41)\n      0x44\n      dup3\n      add\n        /* \"src/libraries/StableMath.sol\":607:613  10_000 */\n      mstore\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      0x64\n      swap1\n        /* \"src/libraries/StableMath.sol\":607:613  10_000 */\n      revert\n        /* \"src/curve/stable/StablePair.sol\":2706:2864  ampData.initialA >= StableMath.MIN_A * uint64(StableMath.A_PRECISION)... */\n    tag_90:\n        /* \"src/libraries/StableMath.sol\":521:522  1 */\n      0x0f4240\n        /* \"src/curve/stable/StablePair.sol\":2795:2864  ampData.initialA <= StableMath.MAX_A * uint64(StableMath.A_PRECISION) */\n      swap2\n      pop\n      gt\n      iszero\n        /* \"src/curve/stable/StablePair.sol\":2706:2864  ampData.initialA >= StableMath.MIN_A * uint64(StableMath.A_PRECISION)... */\n      codesize\n      jump(tag_91)\n        /* \"src/libraries/StableMath.sol\":320:323  100 */\n    tag_88:\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      shl(0xe0, 0x4e487b71)\n      0x00\n        /* \"src/libraries/StableMath.sol\":320:323  100 */\n      mstore\n      0x11\n        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */\n      0x04\n        /* \"src/libraries/StableMath.sol\":320:323  100 */\n      mstore\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      0x24\n      0x00\n        /* \"src/libraries/StableMath.sol\":320:323  100 */\n      revert\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n    tag_84:\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      dup2\n      mstore\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      0x20\n        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */\n      0x04\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      dup3\n      add\n      mstore\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      0x1f\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      0x24\n      dup3\n      add\n      mstore\n      0x53503a204d494e545f4255524e5f4445504c4f594d454e545f4641494c454400\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"src/curve/stable/StablePair.sol\":2258:2318  factory.deploy(ConstantsLib.MINT_BURN_KEY, aToken0, aToken1) */\n    tag_82:\n      swap1\n      pop\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      0x20\n        /* \"src/curve/stable/StablePair.sol\":2258:2318  factory.deploy(ConstantsLib.MINT_BURN_KEY, aToken0, aToken1) */\n      dup2\n      returndatasize\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      0x20\n        /* \"src/curve/stable/StablePair.sol\":2258:2318  factory.deploy(ConstantsLib.MINT_BURN_KEY, aToken0, aToken1) */\n      gt\n      tag_94\n      jumpi\n    tag_95:\n      dup2\n      tag_96\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      0x20\n        /* \"src/curve/stable/StablePair.sol\":2258:2318  factory.deploy(ConstantsLib.MINT_BURN_KEY, aToken0, aToken1) */\n      swap4\n      dup4\n      tag_2\n      jump\t// in\n    tag_96:\n      dup2\n      add\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      sub\n      slt\n      tag_97\n      jumpi\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      tag_99\n      swap1\n      tag_3\n      jump\t// in\n    tag_99:\n        /* \"src/curve/stable/StablePair.sol\":2258:2318  factory.deploy(ConstantsLib.MINT_BURN_KEY, aToken0, aToken1) */\n      codesize\n      jump(tag_83)\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n    tag_97:\n      0x00\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      dup1\n      revert\n        /* \"src/curve/stable/StablePair.sol\":2258:2318  factory.deploy(ConstantsLib.MINT_BURN_KEY, aToken0, aToken1) */\n    tag_94:\n      returndatasize\n      swap2\n      pop\n      jump(tag_95)\n    tag_80:\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      mload(0x40)\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */\n    tag_78:\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n        /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */\n      dup2\n      mstore\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      0x20\n        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */\n      0x04\n        /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */\n      dup3\n      add\n      mstore\n      0x1d\n      0x24\n      dup3\n      add\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      mstore\n        /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */\n      0x4f573a20494e56414c49445f4348414e47455f5045525f5345434f4e44000000\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      0x44\n      dup3\n      add\n        /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"src/ReservoirPair.sol\":17789:17847  0 < aMaxChangeRate && aMaxChangeRate <= MAX_CHANGE_PER_SEC */\n    tag_76:\n        /* \"src/ReservoirPair.sol\":17811:17847  aMaxChangeRate <= MAX_CHANGE_PER_SEC */\n      pop\n        /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */\n      0x2386f26fc10000\n        /* \"src/ReservoirPair.sol\":17811:17847  aMaxChangeRate <= MAX_CHANGE_PER_SEC */\n      dup3\n      gt\n      iszero\n        /* \"src/ReservoirPair.sol\":17789:17847  0 < aMaxChangeRate && aMaxChangeRate <= MAX_CHANGE_PER_SEC */\n      jump(tag_77)\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n    tag_74:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */\n      0x04\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      mstore\n      shl(0xa1, 0x281d102327a92124a22222a7)\n      0x44\n      dup3\n      add\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"src/ReservoirPair.sol\":17544:17690  if (lNewCaller != oracleCaller) {... */\n    tag_70:\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      0x40\n        /* \"src/ReservoirPair.sol\":17595:17640  OracleCallerUpdated(oracleCaller, lNewCaller) */\n      0x262681b3b01b61ff6d02569759105771205cdd274fb3c45535b50632e0a3523f\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      swap2\n      dup2\n      mload\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      swap1\n      dup2\n      mstore\n        /* \"src/ReservoirPair.sol\":16881:16903  \"Shared::oracleCaller\" */\n      dup5\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      0x20\n        /* \"src/ReservoirPair.sol\":16881:16903  \"Shared::oracleCaller\" */\n      dup3\n      add\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      mstore\n        /* \"src/ReservoirPair.sol\":17595:17640  OracleCallerUpdated(oracleCaller, lNewCaller) */\n      log1\n      not(sub(shl(0xa0, 0x01), 0x01))\n        /* \"src/ReservoirPair.sol\":16881:16903  \"Shared::oracleCaller\" */\n      and\n      or\n      swap1\n      sstore\n        /* \"src/ReservoirPair.sol\":17544:17690  if (lNewCaller != oracleCaller) {... */\n      codesize\n      dup1\n      dup1\n      dup1\n      jump(tag_71)\n        /* \"src/ReservoirPair.sol\":4233:4250  token1.decimals() */\n    tag_66:\n      tag_100\n      swap2\n      pop\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      0x20\n        /* \"src/ReservoirPair.sol\":4233:4250  token1.decimals() */\n      returndatasize\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      0x20\n        /* \"src/ReservoirPair.sol\":4233:4250  token1.decimals() */\n      gt\n      tag_101\n      jumpi\n    tag_102:\n      tag_103\n      dup2\n      dup4\n      tag_2\n      jump\t// in\n    tag_103:\n      dup2\n      add\n      swap1\n      tag_5\n      jump\t// in\n    tag_100:\n      codesize\n      jump(tag_61)\n    tag_101:\n      pop\n      returndatasize\n      jump(tag_102)\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n    tag_50:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_45:\n      pop\n      0x00\n      dup1\n      dup1\n      mstore\n      swap1\n      swap2\n      0x00\n      dup1\n      mload\n      0x20\n      data_510e4e770828ddbf7f7b00ab00a9f6adaf81c0dc9cc85f1f8249c256942d61d9\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n    tag_108:\n      dup2\n      dup4\n      lt\n      tag_109\n      jumpi\n      pop\n      pop\n      swap1\n      0x20\n      tag_47\n      swap3\n      dup3\n      add\n      add\n      jump(tag_46)\n    tag_109:\n      0x20\n      swap2\n      swap4\n      pop\n      dup1\n      0x01\n      swap2\n      sload\n      dup4\n      dup6\n      dup9\n      add\n      add\n      mstore\n      add\n      swap2\n      add\n      swap1\n      swap2\n      dup4\n      swap3\n      jump(tag_108)\n    tag_43:\n      not(0xff)\n      and\n      dup7\n      mstore\n      pop\n      tag_47\n      swap3\n      iszero\n      iszero\n      0x05\n      shl\n      dup3\n      add\n      0x20\n      add\n      swap1\n      pop\n      jump(tag_46)\n    tag_39:\n      add\n      mload\n      swap1\n      pop\n      codesize\n      dup1\n      jump(tag_40)\n    tag_37:\n      not(0x1f)\n      dup3\n      and\n      swap6\n      mstore(0x00, 0x01)\n      keccak256(0x00, 0x20)\n      swap2\n      0x00\n    tag_111:\n      dup9\n      dup2\n      lt\n      tag_112\n      jumpi\n      pop\n      dup4\n      0x01\n      swap6\n      swap7\n      swap8\n      swap9\n      lt\n      tag_114\n      jumpi\n    tag_115:\n      pop\n      pop\n      pop\n      dup2\n      shl\n      add\n      0x01\n      sstore\n      jump(tag_41)\n    tag_114:\n      add\n      mload\n      not(0x00)\n      0xf8\n      dup5\n      0x03\n      shl\n      and\n      shr\n      not\n      and\n      swap1\n      sstore\n      codesize\n      dup1\n      dup1\n      jump(tag_115)\n    tag_112:\n      swap2\n      swap3\n      0x20\n      0x01\n      dup2\n      swap3\n      dup7\n      dup6\n      add\n      mload\n      dup2\n      sstore\n      add\n      swap5\n      add\n      swap3\n      add\n      jump(tag_111)\n    tag_35:\n      mstore(0x00, 0x01)\n      0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6\n      0x1f\n      dup4\n      add\n      0x05\n      shr\n      dup2\n      add\n      swap2\n      0x20\n      dup5\n      lt\n      tag_116\n      jumpi\n    tag_117:\n      0x1f\n      add\n      0x05\n      shr\n      add\n      swap1\n    tag_118:\n      dup2\n      dup2\n      lt\n      tag_119\n      jumpi\n      pop\n      jump(tag_36)\n    tag_119:\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_118)\n    tag_116:\n      swap1\n      swap2\n      pop\n      dup2\n      swap1\n      jump(tag_117)\n    tag_29:\n      add\n      mload\n      swap1\n      pop\n      codesize\n      dup1\n      jump(tag_30)\n    tag_27:\n      0x00\n      dup1\n      dup1\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_510e4e770828ddbf7f7b00ab00a9f6adaf81c0dc9cc85f1f8249c256942d61d9\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap4\n      pop\n      not(0x1f)\n      dup6\n      and\n      swap1\n    tag_121:\n      dup2\n      dup2\n      lt\n      tag_122\n      jumpi\n      pop\n      swap1\n      dup5\n      0x01\n      swap6\n      swap5\n      swap4\n      swap3\n      lt\n      tag_124\n      jumpi\n    tag_125:\n      pop\n      pop\n      pop\n      dup2\n      shl\n      add\n      0x00\n      sstore\n      jump(tag_31)\n    tag_124:\n      add\n      mload\n      not(0x00)\n      0xf8\n      dup5\n      0x03\n      shl\n      and\n      shr\n      not\n      and\n      swap1\n      sstore\n      codesize\n      dup1\n      dup1\n      jump(tag_125)\n    tag_122:\n      swap3\n      swap4\n      0x20\n      0x01\n      dup2\n      swap3\n      dup8\n      dup7\n      add\n      mload\n      dup2\n      sstore\n      add\n      swap6\n      add\n      swap4\n      add\n      jump(tag_121)\n    tag_25:\n      0x00\n      dup1\n      mstore\n      swap1\n      swap2\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_510e4e770828ddbf7f7b00ab00a9f6adaf81c0dc9cc85f1f8249c256942d61d9\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x1f\n      dup5\n      add\n      0x05\n      shr\n      dup2\n      add\n      swap2\n      0x20\n      dup6\n      lt\n      tag_126\n      jumpi\n    tag_127:\n      swap1\n      0x1f\n      dup6\n      swap5\n      swap4\n      swap3\n      add\n      0x05\n      shr\n      add\n      swap1\n    tag_128:\n      dup2\n      dup2\n      lt\n      tag_129\n      jumpi\n      pop\n      jump(tag_26)\n    tag_129:\n      0x00\n      dup2\n      sstore\n      dup5\n      swap4\n      pop\n      0x01\n      add\n      jump(tag_128)\n    tag_126:\n      swap1\n      swap2\n      pop\n      dup2\n      swap1\n      jump(tag_127)\n    tag_1:\n      0x40\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      or\n      tag_50\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_2:\n      0x1f\n      swap1\n      swap2\n      add\n      not(0x1f)\n      and\n      dup2\n      add\n      swap1\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      swap1\n      dup3\n      lt\n      or\n      tag_50\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_3:\n      mload\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_97\n      jumpi\n      jump\t// out\n    tag_4:\n      swap1\n      dup2\n      mload\n      swap2\n      0x00\n    tag_137:\n      dup4\n      dup2\n      lt\n      tag_138\n      jumpi\n      pop\n      pop\n      add\n      0x00\n      dup2\n      mstore\n      swap1\n      jump\t// out\n    tag_138:\n      dup1\n      0x20\n      dup1\n      swap3\n      dup5\n      add\n      add\n      mload\n      dup2\n      dup6\n      add\n      mstore\n      add\n      jump(tag_137)\n    tag_5:\n      swap1\n      dup2\n      0x20\n      swap2\n      sub\n      slt\n      tag_97\n      jumpi\n      mload\n      0xff\n      dup2\n      and\n      dup2\n      sub\n      tag_97\n      jumpi\n      swap1\n      jump\t// out\n    tag_6:\n      0xff\n      and\n      0x12\n      sub\n      swap1\n      0xff\n      dup3\n      gt\n      tag_88\n      jumpi\n      jump\t// out\n    tag_7:\n      dup1\n      iszero\n      tag_146\n      jumpi\n      0x01\n      swap1\n      0x20\n      dup2\n      lt\n      dup3\n      and\n      0x4e\n      dup3\n      lt\n      dup4\n      and\n      or\n      tag_148\n      jumpi\n      dup2\n      swap1\n      0x0a\n      swap3\n    tag_150:\n      dup1\n      dup3\n      gt\n      tag_151\n      jumpi\n      pop\n      pop\n      sub(shl(0x80, 0x01), 0x01)\n      dup3\n      swap1\n      div\n      dup2\n      gt\n      tag_88\n      jumpi\n      mul\n      swap1\n      jump\t// out\n    tag_151:\n      swap1\n      swap3\n      sub(shl(0x80, 0x01), 0x01)\n      dup2\n      swap1\n      div\n      dup2\n      gt\n      tag_88\n      jumpi\n      dup2\n      dup5\n      and\n      tag_157\n      jumpi\n    tag_158:\n      dup1\n      mul\n      swap3\n      dup2\n      shr\n      swap1\n      jump(tag_150)\n    tag_157:\n      dup1\n      swap3\n      mul\n      swap2\n      jump(tag_158)\n    tag_148:\n      0x0a\n      exp\n      swap2\n      swap1\n      pop\n      sub(shl(0x80, 0x01), 0x01)\n      dup3\n      gt\n      tag_88\n      jumpi\n      jump\t// out\n    tag_146:\n      pop\n      0x01\n      swap1\n      jump\t// out\n    tag_8:\n      swap1\n      0x01\n      dup3\n      dup2\n      shr\n      swap3\n      and\n      dup1\n      iszero\n      tag_161\n      jumpi\n    tag_162:\n      0x20\n      dup4\n      lt\n      eq\n      tag_163\n      jumpi\n      jump\t// out\n    tag_163:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x22)\n      revert(0x00, 0x24)\n    tag_161:\n      swap2\n      0x7f\n      and\n      swap2\n      jump(tag_162)\n        /* \"src/ReservoirPair.sol\":7293:7635  function updateSwapFee() public {... */\n    tag_9:\n        /* \"src/ReservoirPair.sol\":7354:7367  customSwapFee */\n      0x08\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      sload\n      0x00\n      not(0x00)\n        /* \"src/ReservoirPair.sol\":7354:7388  customSwapFee != type(uint256).max */\n      dup3\n      eq\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      tag_165\n      jumpi\n        /* \"src/ReservoirPair.sol\":7354:7443  customSwapFee != type(uint256).max ? customSwapFee : factory.get(swapFeeName).toUint256() */\n      pop\n    tag_167:\n        /* \"src/ReservoirPair.sol\":7469:7476  swapFee */\n      0x07\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      sload\n        /* \"src/ReservoirPair.sol\":7457:7476  _swapFee == swapFee */\n      dup1\n      dup3\n      eq\n        /* \"src/ReservoirPair.sol\":7453:7485  if (_swapFee == swapFee) return; */\n      tag_168\n      jumpi\n        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */\n      0x4e20\n        /* \"src/ReservoirPair.sol\":7503:7527  _swapFee <= MAX_SWAP_FEE */\n      dup3\n      gt\n        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */\n      tag_170\n      jumpi\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      0x40\n        /* \"src/ReservoirPair.sol\":7567:7600  SwapFeeChanged(swapFee, _swapFee) */\n      0xad321f810529281bbb90384fd6fecbdda41509a5ccd7bd5aed986ed827f6a026\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      swap2\n      dup2\n      mload\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      swap1\n      dup2\n      mstore\n        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */\n      dup4\n      0x20\n      dup3\n      add\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      mstore\n        /* \"src/ReservoirPair.sol\":7567:7600  SwapFeeChanged(swapFee, _swapFee) */\n      log1\n        /* \"src/ReservoirPair.sol\":7469:7476  swapFee */\n      0x07\n        /* \"src/curve/stable/StablePair.sol\":1558:1571  \"SP::swapFee\" */\n      sstore\n        /* \"src/ReservoirPair.sol\":7293:7635  function updateSwapFee() public {... */\n      jump\t// out\n        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */\n    tag_170:\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x13\n      0x24\n      dup3\n      add\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      mstore\n        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */\n      0x503a20494e56414c49445f535741505f46454500000000000000000000000000\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      0x44\n      dup3\n      add\n        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"src/ReservoirPair.sol\":7453:7485  if (_swapFee == swapFee) return; */\n    tag_168:\n        /* \"src/ReservoirPair.sol\":7478:7485  return; */\n      pop\n      pop\n      jump\t// out\n        /* \"src/ReservoirPair.sol\":7354:7443  customSwapFee != type(uint256).max ? customSwapFee : factory.get(swapFeeName).toUint256() */\n    tag_165:\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      swap1\n      pop\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n        /* \"src/ReservoirPair.sol\":7407:7414  factory */\n      0xe0\n        /* \"src/curve/stable/StablePair.sol\":1558:1571  \"SP::swapFee\" */\n      mload\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      and\n        /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */\n      0x20\n        /* \"src/ReservoirPair.sol\":7419:7430  swapFeeName */\n      0x0180\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      mload\n      0x24\n      mload(0x40)\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      dup1\n      swap5\n      dup2\n      swap4\n      shl(0xe6, 0x023aa9ab)\n        /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */\n      dup4\n      mstore\n      0x04\n      dup4\n      add\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      mstore\n        /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */\n      gas\n      staticcall\n      swap2\n      dup3\n      iszero\n      tag_172\n      jumpi\n      dup1\n      swap3\n      tag_174\n      jumpi\n        /* \"src/ReservoirPair.sol\":7354:7443  customSwapFee != type(uint256).max ? customSwapFee : factory.get(swapFeeName).toUint256() */\n    tag_175:\n      pop\n      pop\n      jump(tag_167)\n        /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */\n    tag_174:\n      swap1\n      swap2\n      pop\n      0x20\n      dup3\n      returndatasize\n      dup3\n      gt\n      tag_176\n      jumpi\n    tag_177:\n      dup2\n      tag_178\n      0x20\n      swap4\n      dup4\n      tag_2\n      jump\t// in\n    tag_178:\n      dup2\n      add\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      sub\n      slt\n      tag_179\n      jumpi\n      pop\n      mload\n        /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */\n      codesize\n      dup1\n      jump(tag_175)\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n    tag_179:\n      dup1\n      revert\n        /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */\n    tag_176:\n      returndatasize\n      swap2\n      pop\n      jump(tag_177)\n    tag_172:\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      mload(0x40)\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      swap1\n      returndatasize\n      swap1\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"src/ReservoirPair.sol\":7641:8058  function updatePlatformFee() public {... */\n    tag_10:\n        /* \"src/ReservoirPair.sol\":7722:7739  customPlatformFee */\n      0x0a\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      sload\n      not(0x00)\n        /* \"src/ReservoirPair.sol\":7722:7760  customPlatformFee != type(uint256).max */\n      dup2\n      eq\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      tag_181\n      jumpi\n        /* \"src/ReservoirPair.sol\":7722:7826  customPlatformFee != type(uint256).max ? customPlatformFee : factory.read(PLATFORM_FEE_NAME).toUint256() */\n    tag_183:\n        /* \"src/ReservoirPair.sol\":7856:7867  platformFee */\n      0x09\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      sload\n        /* \"src/ReservoirPair.sol\":7840:7867  _platformFee == platformFee */\n      dup1\n      dup3\n      eq\n        /* \"src/ReservoirPair.sol\":7836:7876  if (_platformFee == platformFee) return; */\n      tag_168\n      jumpi\n        /* \"src/ReservoirPair.sol\":2789:2796  500_000 */\n      0x07a120\n        /* \"src/ReservoirPair.sol\":7894:7926  _platformFee <= MAX_PLATFORM_FEE */\n      dup3\n      gt\n        /* \"src/ReservoirPair.sol\":2789:2796  500_000 */\n      tag_186\n      jumpi\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      0x40\n        /* \"src/ReservoirPair.sol\":7970:8015  PlatformFeeChanged(platformFee, _platformFee) */\n      0xc98a8b10b63c929f7799380bb4a0c444c713ebf74d8732f944c915034121aad1\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      swap2\n      dup2\n      mload\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      swap1\n      dup2\n      mstore\n        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */\n      dup4\n      0x20\n      dup3\n      add\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      mstore\n        /* \"src/ReservoirPair.sol\":7970:8015  PlatformFeeChanged(platformFee, _platformFee) */\n      log1\n        /* \"src/ReservoirPair.sol\":7856:7867  platformFee */\n      0x09\n        /* \"src/curve/stable/StablePair.sol\":1558:1571  \"SP::swapFee\" */\n      sstore\n        /* \"src/ReservoirPair.sol\":7641:8058  function updatePlatformFee() public {... */\n      jump\t// out\n        /* \"src/ReservoirPair.sol\":2789:2796  500_000 */\n    tag_186:\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n        /* \"src/ReservoirPair.sol\":2789:2796  500_000 */\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x17\n      0x24\n      dup3\n      add\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      mstore\n        /* \"src/ReservoirPair.sol\":2789:2796  500_000 */\n      0x503a20494e56414c49445f504c4154464f524d5f464545000000000000000000\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      0x44\n      dup3\n      add\n        /* \"src/ReservoirPair.sol\":2789:2796  500_000 */\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"src/ReservoirPair.sol\":7722:7826  customPlatformFee != type(uint256).max ? customPlatformFee : factory.read(PLATFORM_FEE_NAME).toUint256() */\n    tag_181:\n      pop\n        /* \"src/ReservoirPair.sol\":7783:7790  factory */\n      0xe0\n        /* \"src/curve/stable/StablePair.sol\":1558:1571  \"SP::swapFee\" */\n      mload\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      mload(0x40)\n        /* \"src/ReservoirPair.sol\":7783:7814  factory.read(PLATFORM_FEE_NAME) */\n      tag_188\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      and\n      tag_189\n      dup3\n      tag_1\n      jump\t// in\n    tag_189:\n      0x13\n      dup3\n      mstore\n      0x5368617265643a3a706c6174666f726d46656500000000000000000000000000\n      0x20\n      dup4\n      add\n      mstore\n        /* \"src/ReservoirPair.sol\":7783:7814  factory.read(PLATFORM_FEE_NAME) */\n      tag_11\n      jump\t// in\n    tag_188:\n        /* \"src/ReservoirPair.sol\":7722:7826  customPlatformFee != type(uint256).max ? customPlatformFee : factory.read(PLATFORM_FEE_NAME).toUint256() */\n      jump(tag_183)\n        /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */\n    tag_11:\n      swap1\n        /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */\n      0x20\n        /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */\n      swap1\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      mload(0x40)\n        /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */\n      tag_190\n      dup2\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      tag_53\n        /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */\n      dup6\n      dup3\n      add\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      dup1\n      swap6\n      tag_4\n      jump\t// in\n        /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */\n    tag_190:\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      mload\n        /* \"src/libraries/FactoryStore.sol\":476:509  keccak256(abi.encodePacked(aKey)) */\n      swap1\n      keccak256\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      mload(0x40)\n      shl(0xe6, 0x023aa9ab)\n        /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      swap2\n      dup3\n      swap1\n      0x24\n      swap1\n      dup3\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */\n      gas\n      staticcall\n      swap1\n      dup2\n      iszero\n      tag_80\n      jumpi\n      0x00\n      swap2\n      tag_194\n      jumpi\n        /* \"src/libraries/FactoryStore.sol\":456:510  return aFactory.get(keccak256(abi.encodePacked(aKey))) */\n      pop\n        /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */\n    tag_194:\n      swap1\n        /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */\n      0x20\n        /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */\n      dup3\n      returndatasize\n      dup3\n      gt\n      tag_196\n      jumpi\n    tag_197:\n      dup2\n      tag_198\n        /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */\n      0x20\n        /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */\n      swap4\n      dup4\n      tag_2\n      jump\t// in\n    tag_198:\n      dup2\n      add\n        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n      sub\n      slt\n      tag_179\n      jumpi\n      pop\n      mload\n        /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */\n    tag_196:\n      returndatasize\n      swap2\n      pop\n      jump(tag_197)\n    stop\n    data_510e4e770828ddbf7f7b00ab00a9f6adaf81c0dc9cc85f1f8249c256942d61d9 290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563\n\n    sub_0: assembly {\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x80\n          0x40\n          swap1\n          dup1\n          dup3\n          mstore\n          0x04\n          swap2\n          dup3\n          calldatasize\n          lt\n          iszero\n          tag_62\n          jumpi\n          0x00\n          dup1\n          revert\n        tag_62:\n          0x00\n          swap3\n          dup4\n          calldataload\n          0xe0\n          shr\n          swap3\n          dup4\n          0x06fdde03\n          eq\n          tag_64\n          jumpi\n          pop\n          dup3\n          0x0902f1ac\n          eq\n          tag_66\n          jumpi\n          dup3\n          0x095ea7b3\n          eq\n          tag_68\n          jumpi\n          dup3\n          0x0c472afd\n          eq\n          tag_70\n          jumpi\n          dup3\n          0x0dfe1681\n          eq\n          tag_72\n          jumpi\n          dup3\n          0x18160ddd\n          eq\n          tag_74\n          jumpi\n          dup3\n          0x23b872dd\n          eq\n          tag_76\n          jumpi\n          dup3\n          0x26232a2e\n          eq\n          tag_78\n          jumpi\n          dup3\n          0x28d98c95\n          eq\n          tag_80\n          jumpi\n          dup3\n          0x313ce567\n          eq\n          tag_82\n          jumpi\n          dup3\n          0x31c49074\n          eq\n          tag_84\n          jumpi\n          dup3\n          0x3644e515\n          eq\n          tag_86\n          jumpi\n          dup3\n          0x3998a681\n          eq\n          tag_88\n          jumpi\n          dup3\n          0x44915136\n          eq\n          tag_90\n          jumpi\n          dup3\n          0x495bc0fb\n          eq\n          tag_92\n          jumpi\n          dup3\n          0x4dfa1ff9\n          eq\n          tag_94\n          jumpi\n          dup3\n          0x54cf2aeb\n          eq\n          tag_96\n          jumpi\n          dup3\n          0x598362f0\n          eq\n          tag_98\n          jumpi\n          dup3\n          0x6a627842\n          eq\n          tag_110\n          jumpi\n            /* \"src/curve/stable/StablePair.sol\":4828:5223  assembly (\"memory-safe\") {... */\n          dup3\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x70a08231\n            /* \"src/curve/stable/StablePair.sol\":4828:5223  assembly (\"memory-safe\") {... */\n          eq\n          tag_102\n          jumpi\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup3\n          0x7c3cbc7c\n          eq\n          tag_104\n          jumpi\n          dup3\n          0x7ecebe00\n          eq\n          tag_106\n          jumpi\n          dup3\n          0x85faf624\n          eq\n          tag_108\n          jumpi\n          dup3\n          0x89afcb44\n          eq\n          tag_110\n          jumpi\n            /* \"src/curve/stable/StablePair.sol\":5531:5926  assembly (\"memory-safe\") {... */\n          dup3\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x94217ad1\n            /* \"src/curve/stable/StablePair.sol\":5531:5926  assembly (\"memory-safe\") {... */\n          eq\n          tag_112\n          jumpi\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup3\n          0x9568e73b\n          eq\n          tag_114\n          jumpi\n          dup3\n          0x95d89b41\n          eq\n          tag_116\n          jumpi\n          dup3\n          0x97e37764\n          eq\n          tag_118\n          jumpi\n          dup3\n          0x9be65a60\n          eq\n          tag_120\n          jumpi\n          dup3\n          0x9d62a694\n          eq\n          tag_122\n          jumpi\n          dup3\n          0x9f2b37fb\n          eq\n          tag_124\n          jumpi\n          dup3\n          0xa9059cbb\n          eq\n          tag_126\n          jumpi\n          dup3\n          0xab3d8544\n          eq\n          tag_128\n          jumpi\n          dup3\n          0xad7853e9\n          eq\n          tag_130\n          jumpi\n          dup3\n          0xafb4a43b\n          eq\n          tag_132\n          jumpi\n          dup3\n          0xb62221e0\n          eq\n          tag_134\n          jumpi\n          dup3\n          0xba9a7a56\n          eq\n          tag_136\n          jumpi\n          dup3\n          0xbc25cf77\n          eq\n          tag_138\n          jumpi\n          dup3\n          0xc45a0155\n          eq\n          tag_140\n          jumpi\n          dup3\n          0xc4db7fa0\n          eq\n          tag_142\n          jumpi\n          dup3\n          0xc58771ef\n          eq\n          tag_144\n          jumpi\n          dup3\n          0xd0ebdbe7\n          eq\n          tag_146\n          jumpi\n          dup3\n          0xd21220a7\n          eq\n          tag_148\n          jumpi\n          dup3\n          0xd505accf\n          eq\n          tag_150\n          jumpi\n          dup3\n          0xdb6488dc\n          eq\n          tag_152\n          jumpi\n          dup3\n          0xdbc781bc\n          eq\n          tag_154\n          jumpi\n          dup3\n          0xdd62ed3e\n          eq\n          tag_156\n          jumpi\n          dup3\n          0xe12bd9d8\n          eq\n          tag_158\n          jumpi\n          pop\n          dup2\n          0xe9bdf7b8\n          eq\n          tag_160\n          jumpi\n          pop\n          0xfff6cae9\n          eq\n          tag_162\n          jumpi\n          0x00\n          dup1\n          revert\n        tag_162:\n          jumpi(tag_166, callvalue)\n          dup1\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_166\n          jumpi\n            /* \"src/ReservoirPair.sol\":6307:6326  lBlockTimestampLast */\n          tag_168\n            /* \"src/ReservoirPair.sol\":6191:6225  _syncManaged(lReserve0, lReserve1) */\n          tag_169\n            /* \"src/ReservoirPair.sol\":6142:6156  _lockAndLoad() */\n          tag_170\n          tag_14\n          jump\t// in\n        tag_170:\n          pop\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap3\n          swap2\n          0xffffffffffffffffffffffffff\n          swap2\n          dup3\n          and\n          swap2\n          and\n            /* \"src/ReservoirPair.sol\":6191:6225  _syncManaged(lReserve0, lReserve1) */\n          tag_28\n          jump\t// in\n        tag_169:\n            /* \"src/ReservoirPair.sol\":6253:6267  _totalToken0() */\n          swap1\n          tag_171\n          tag_25\n          jump\t// in\n        tag_171:\n            /* \"src/ReservoirPair.sol\":6269:6283  _totalToken1() */\n          tag_172\n          tag_26\n          jump\t// in\n        tag_172:\n            /* \"src/ReservoirPair.sol\":6307:6326  lBlockTimestampLast */\n          swap1\n          tag_23\n          jump\t// in\n        tag_168:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup1\n          return\n        tag_166:\n          dup1\n          revert\n        tag_160:\n          swap1\n          pop\n          jumpi(tag_175, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_175\n          jumpi\n          0x20\n          swap1\n          0xffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":12800:12828  uint104 public token0Managed */\n          0x0c\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n          and\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_175:\n          pop\n          dup1\n          revert\n        tag_158:\n          dup4\n          dup3\n          jumpi(tag_175, callvalue)\n          jumpi(tag_175, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x80))\n          0x24\n          swap3\n          dup4\n          calldataload\n          dup2\n          calldataload\n          dup2\n          iszero\n          iszero\n          dup3\n          sub\n          tag_187\n          jumpi\n          calldataload(0x44)\n          swap5\n          0xffffffffffffffffffffffffffffffffffffffff\n          swap3\n          dup4\n          dup8\n          and\n          swap5\n          dup6\n          dup9\n          sub\n          tag_183\n          jumpi\n          calldataload(0x64)\n          swap9\n          0xffffffffffffffff\n          swap2\n          dup3\n          dup12\n          gt\n          tag_187\n          jumpi\n          calldatasize\n          0x23\n          dup13\n          add\n          slt\n          iszero\n          tag_187\n          jumpi\n          dup11\n          dup2\n          add\n          calldataload\n          swap11\n          dup4\n          dup13\n          gt\n          tag_191\n          jumpi\n          calldatasize\n          dup4\n          dup14\n          dup4\n          add\n          add\n          gt\n          tag_191\n          jumpi\n            /* \"src/curve/stable/StablePair.sol\":6173:6187  _lockAndLoad() */\n          tag_193\n          tag_14\n          jump\t// in\n        tag_193:\n          pop\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap14\n          0xffffffffffffffffffffffffff\n          swap3\n          dup4\n          and\n          swap14\n          swap2\n          swap1\n          swap3\n          and\n          swap7\n            /* \"src/curve/stable/StablePair.sol\":6205:6217  aAmount != 0 */\n          dup10\n          iszero\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          tag_194\n          jumpi\n            /* \"src/curve/stable/StablePair.sol\":6247:6264  uint256 lAmountIn */\n          dup14\n          swap7\n          swap6\n          swap5\n          swap4\n          swap3\n          swap2\n          swap1\n            /* \"src/curve/stable/StablePair.sol\":6320:7593  if (aInOrOut) {... */\n          iszero\n          tag_196\n          jumpi\n            /* \"src/curve/stable/StablePair.sol\":6412:6423  aAmount > 0 */\n          dup9\n          dup11\n          sgt\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          iszero\n          tag_198\n          jumpi\n            /* \"src/curve/stable/StablePair.sol\":6455:6461  token1 */\n          dup8\n          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")\n            /* \"src/curve/stable/StablePair.sol\":6479:6507  lAmountIn = uint256(aAmount) */\n          swap7\n          dup12\n            /* \"src/curve/stable/StablePair.sol\":8826:8833  swapFee */\n          0x07\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n            /* \"src/curve/stable/StablePair.sol\":11113:11134  _getCurrentAPrecise() */\n          swap2\n          tag_200\n          tag_47\n          jump\t// in\n        tag_200:\n            /* \"src/curve/stable/StablePair.sol\":11109:11134  2 * _getCurrentAPrecise() */\n          tag_201\n          swap1\n          tag_39\n          jump\t// in\n        tag_201:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n          swap2\n          0xffffffffffffffffffffffffffffffff\n            /* \"src/curve/stable/StablePair.sol\":8725:8750  token0PrecisionMultiplier */\n          swap3\n          dup4\n          immutable(\"0x372e991e4284f7d12d6b2461cce9899511b05ac053845de253542adb96f2dca0\")\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n            /* \"src/curve/stable/StablePair.sol\":8764:8789  token1PrecisionMultiplier */\n          swap4\n          immutable(\"0xc4ba931b733b92a51f51c0955dd7716c7a38f3de911d23a5d0fbd5d23c0fbe8c\")\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n          swap4\n          dup1\n          dup14\n          mul\n          swap1\n          dup6\n          dup8\n          mul\n            /* \"src/libraries/StableMath.sol\":1632:1710  _computeLiquidityFromAdjustedBalances(adjustedReserve0, adjustedReserve1, N_A) */\n          swap5\n          tag_202\n          dup5\n          dup8\n          dup6\n          tag_58\n          jump\t// in\n        tag_202:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap5\n          dup2\n          mul\n            /* \"src/ReservoirPair.sol\":2723:2732  1_000_000 */\n          0x0f4240\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap1\n          div\n            /* \"src/libraries/StableMath.sol\":991:1000  1_000_000 */\n          swap1\n          sub\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mul\n          add\n            /* \"src/libraries/StableMath.sol\":1867:1883  _getY(x, d, N_A) */\n          swap2\n          tag_203\n          swap3\n          tag_60\n          jump\t// in\n        tag_203:\n            /* \"src/libraries/StableMath.sol\":991:1000  1_000_000 */\n          swap1\n          sub\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n          add\n            /* \"src/libraries/StableMath.sol\":1948:1979  dy /= token1PrecisionMultiplier */\n          swap1\n          tag_204\n          swap2\n          tag_42\n          jump\t// in\n        tag_204:\n            /* \"src/curve/stable/StablePair.sol\":6408:6865  if (aAmount > 0) {... */\n          swap15\n          dup16\n            /* \"src/curve/stable/StablePair.sol\":7659:7668  lReserve1 */\n          tag_205\n            /* \"src/curve/stable/StablePair.sol\":6408:6865  if (aAmount > 0) {... */\n          swap4\n        tag_206:\n            /* \"src/curve/stable/StablePair.sol\":7659:7668  lReserve1 */\n          dup10\n          tag_21\n          jump\t// in\n        tag_205:\n            /* \"src/curve/stable/StablePair.sol\":7684:7700  aData.length > 0 */\n          dup1\n            /* \"src/curve/stable/StablePair.sol\":7680:7985  if (aData.length > 0) {... */\n          tag_208\n          jumpi\n            /* \"src/curve/stable/StablePair.sol\":6320:7593  if (aInOrOut) {... */\n        tag_209:\n            /* \"src/curve/stable/StablePair.sol\":8015:8029  _totalToken0() */\n          pop\n          pop\n          tag_210\n          tag_25\n          jump\t// in\n        tag_210:\n            /* \"src/curve/stable/StablePair.sol\":8059:8073  _totalToken1() */\n          swap2\n          dup9\n          tag_211\n          tag_26\n          jump\t// in\n        tag_211:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap5\n          and\n          swap7\n          pop\n            /* \"src/curve/stable/StablePair.sol\":8117:8123  token0 */\n          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup10\n          and\n            /* \"src/curve/stable/StablePair.sol\":8104:8123  lTokenOut == token0 */\n          dup8\n          sub\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          tag_212\n          jumpi\n            /* \"src/curve/stable/StablePair.sol\":8126:8147  lBalance1 - lReserve1 */\n          tag_214\n          dup7\n          dup6\n          tag_11\n          jump\t// in\n        tag_214:\n            /* \"src/curve/stable/StablePair.sol\":8104:8171  lTokenOut == token0 ? lBalance1 - lReserve1 : lBalance0 - lReserve0 */\n          swap8\n        tag_215:\n            /* \"src/curve/stable/StablePair.sol\":8189:8211  lReceived >= lAmountIn */\n          dup9\n          lt\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          tag_216\n          jumpi\n            /* \"src/curve/stable/StablePair.sol\":8253:8352  _updateAndUnlock(lBalance0, lBalance1, uint104(lReserve0), uint104(lReserve1), lBlockTimestampLast) */\n          pop\n          pop\n          swap2\n          tag_218\n          swap4\n          swap2\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x20\n            /* \"src/curve/stable/StablePair.sol\":8253:8352  _updateAndUnlock(lBalance0, lBalance1, uint104(lReserve0), uint104(lReserve1), lBlockTimestampLast) */\n          swap12\n          swap4\n          tag_23\n          jump\t// in\n        tag_218:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup5\n          mload\n            /* \"src/curve/stable/StablePair.sol\":8397:8403  token1 */\n          swap3\n          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n            /* \"src/curve/stable/StablePair.sol\":8384:8403  lTokenOut == token1 */\n          eq\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup3\n          mstore\n          dup6\n          dup3\n          add\n          mstore\n          dup4\n          dup4\n          dup3\n          add\n          mstore\n            /* \"src/curve/stable/StablePair.sol\":8367:8432  Swap(msg.sender, lTokenOut == token1, lReceived, rAmountOut, aTo) */\n          0x66251e495e6e69e208ab08e2bc259dbe2ef482a8c4a93b8984b03a1eb27e1b9e\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x60\n            /* \"src/curve/stable/StablePair.sol\":8372:8382  msg.sender */\n          caller\n            /* \"src/curve/stable/StablePair.sol\":8367:8432  Swap(msg.sender, lTokenOut == token1, lReceived, rAmountOut, aTo) */\n          swap3\n          log3\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_216:\n          swap1\n          0x1a\n          0x64\n          swap3\n          0x20\n          dup14\n          mload\n          swap4\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup6\n          mstore\n          dup5\n          add\n          mstore\n          dup3\n          add\n          mstore\n          0x53503a20494e53554646494349454e545f414d4f554e545f494e000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n            /* \"src/curve/stable/StablePair.sol\":8104:8171  lTokenOut == token0 ? lBalance1 - lReserve1 : lBalance0 - lReserve0 */\n        tag_212:\n            /* \"src/curve/stable/StablePair.sol\":8150:8171  lBalance0 - lReserve0 */\n          tag_219\n          dup6\n          dup5\n          tag_11\n          jump\t// in\n        tag_219:\n            /* \"src/curve/stable/StablePair.sol\":8104:8171  lTokenOut == token0 ? lBalance1 - lReserve1 : lBalance0 - lReserve0 */\n          swap8\n          jump(tag_215)\n            /* \"src/curve/stable/StablePair.sol\":7680:7985  if (aData.length > 0) {... */\n        tag_208:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup5\n          dup11\n          and\n            /* \"src/curve/stable/StablePair.sol\":7810:7816  token0 */\n          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup12\n          and\n            /* \"src/curve/stable/StablePair.sol\":7797:7816  lTokenOut == token0 */\n          dup2\n          sub\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          tag_220\n          jumpi\n            /* \"src/curve/stable/StablePair.sol\":7797:7858  lTokenOut == token0 ? int256(rAmountOut) : -int256(lAmountIn) */\n          dup14\n          swap1\n        tag_222:\n            /* \"src/curve/stable/StablePair.sol\":7889:7895  token1 */\n          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup13\n          and\n            /* \"src/curve/stable/StablePair.sol\":7876:7895  lTokenOut == token1 */\n          sub\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          tag_223\n          jumpi\n            /* \"src/curve/stable/StablePair.sol\":7876:7937  lTokenOut == token1 ? int256(rAmountOut) : -int256(lAmountIn) */\n          dup14\n          swap2\n        tag_225:\n            /* \"src/curve/stable/StablePair.sol\":7716:7974  IReservoirCallee(aTo).reservoirCall(... */\n          dup13\n          extcodesize\n          iszero\n          tag_226\n          jumpi\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup10\n          swap3\n          swap2\n          dup4\n          dup16\n          dup16\n          swap4\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n          0x1f\n          dup3\n          dup12\n          swap4\n          dup14\n          0xa4\n          swap7\n          mload\n            /* \"src/curve/stable/StablePair.sol\":7716:7974  IReservoirCallee(aTo).reservoirCall(... */\n          swap13\n          dup14\n          swap12\n          dup13\n          swap11\n          dup12\n          swap9\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x4fc7c21700000000000000000000000000000000000000000000000000000000\n            /* \"src/curve/stable/StablePair.sol\":7716:7974  IReservoirCallee(aTo).reservoirCall(... */\n          dup11\n          mstore\n            /* \"src/curve/stable/StablePair.sol\":7769:7779  msg.sender */\n          caller\n            /* \"src/curve/stable/StablePair.sol\":7716:7974  IReservoirCallee(aTo).reservoirCall(... */\n          swap1\n          dup11\n          add\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mstore\n          dup4\n          dup10\n          add\n          mstore\n          0x44\n          dup9\n          add\n          mstore\n          0x80\n          0x64\n          dup9\n          add\n          mstore\n          dup3\n          0x84\n          dup9\n          add\n          mstore\n          add\n          dup7\n          dup7\n          add\n          calldatacopy\n          dup6\n          dup6\n          dup3\n          dup7\n          add\n          add\n          mstore\n          add\n          and\n          dup2\n          add\n            /* \"src/curve/stable/StablePair.sol\":7716:7974  IReservoirCallee(aTo).reservoirCall(... */\n          sub\n          add\n          swap3\n          gas\n          call\n          dup1\n          iszero\n          tag_228\n          jumpi\n          tag_230\n          jumpi\n            /* \"src/curve/stable/StablePair.sol\":7876:7937  lTokenOut == token1 ? int256(rAmountOut) : -int256(lAmountIn) */\n        tag_231:\n            /* \"src/curve/stable/StablePair.sol\":7680:7985  if (aData.length > 0) {... */\n          dup1\n          jump(tag_209)\n            /* \"src/curve/stable/StablePair.sol\":7716:7974  IReservoirCallee(aTo).reservoirCall(... */\n        tag_230:\n          tag_232\n          swap1\n          tag_3\n          jump\t// in\n        tag_232:\n          dup13\n          jump(tag_231)\n        tag_228:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup12\n          mload\n          returndatasize\n          dup10\n          dup3\n          returndatacopy\n          returndatasize\n          swap1\n          revert\n            /* \"src/curve/stable/StablePair.sol\":7716:7974  IReservoirCallee(aTo).reservoirCall(... */\n        tag_226:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup10\n          dup1\n          revert\n            /* \"src/curve/stable/StablePair.sol\":7876:7937  lTokenOut == token1 ? int256(rAmountOut) : -int256(lAmountIn) */\n        tag_223:\n            /* \"src/curve/stable/StablePair.sol\":7919:7937  -int256(lAmountIn) */\n          tag_233\n          dup11\n          tag_32\n          jump\t// in\n        tag_233:\n            /* \"src/curve/stable/StablePair.sol\":7876:7937  lTokenOut == token1 ? int256(rAmountOut) : -int256(lAmountIn) */\n          swap2\n          jump(tag_225)\n            /* \"src/curve/stable/StablePair.sol\":7797:7858  lTokenOut == token0 ? int256(rAmountOut) : -int256(lAmountIn) */\n        tag_220:\n            /* \"src/curve/stable/StablePair.sol\":7840:7858  -int256(lAmountIn) */\n          tag_234\n          dup11\n          tag_32\n          jump\t// in\n        tag_234:\n            /* \"src/curve/stable/StablePair.sol\":7797:7858  lTokenOut == token0 ? int256(rAmountOut) : -int256(lAmountIn) */\n          swap1\n          jump(tag_222)\n            /* \"src/curve/stable/StablePair.sol\":6408:6865  if (aAmount > 0) {... */\n        tag_198:\n            /* \"src/curve/stable/StablePair.sol\":6713:6719  token0 */\n          dup8\n          swap10\n          swap6\n          swap10\n          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")\n            /* \"src/curve/stable/StablePair.sol\":6757:6765  -aAmount */\n          swap7\n          tag_235\n          swap1\n          tag_32\n          jump\t// in\n        tag_235:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap11\n          dup12\n            /* \"src/curve/stable/StablePair.sol\":8826:8833  swapFee */\n          0x07\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n            /* \"src/curve/stable/StablePair.sol\":11113:11134  _getCurrentAPrecise() */\n          swap2\n          tag_236\n          tag_47\n          jump\t// in\n        tag_236:\n            /* \"src/curve/stable/StablePair.sol\":11109:11134  2 * _getCurrentAPrecise() */\n          tag_237\n          swap1\n          tag_39\n          jump\t// in\n        tag_237:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n          swap2\n          0xffffffffffffffffffffffffffffffff\n            /* \"src/curve/stable/StablePair.sol\":8725:8750  token0PrecisionMultiplier */\n          swap3\n          dup4\n          immutable(\"0x372e991e4284f7d12d6b2461cce9899511b05ac053845de253542adb96f2dca0\")\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n            /* \"src/curve/stable/StablePair.sol\":8764:8789  token1PrecisionMultiplier */\n          swap4\n          immutable(\"0xc4ba931b733b92a51f51c0955dd7716c7a38f3de911d23a5d0fbd5d23c0fbe8c\")\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n          swap3\n          dup5\n          dup14\n          mul\n          swap4\n          dup1\n          dup8\n          mul\n            /* \"src/libraries/StableMath.sol\":1632:1710  _computeLiquidityFromAdjustedBalances(adjustedReserve0, adjustedReserve1, N_A) */\n          swap2\n          tag_238\n          dup5\n          dup5\n          dup9\n          tag_58\n          jump\t// in\n        tag_238:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap5\n          dup2\n          mul\n            /* \"src/ReservoirPair.sol\":2723:2732  1_000_000 */\n          0x0f4240\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap1\n          div\n            /* \"src/libraries/StableMath.sol\":991:1000  1_000_000 */\n          swap1\n          sub\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mul\n          add\n            /* \"src/libraries/StableMath.sol\":2128:2144  _getY(x, d, N_A) */\n          swap2\n          tag_239\n          swap3\n          tag_60\n          jump\t// in\n        tag_239:\n            /* \"src/libraries/StableMath.sol\":991:1000  1_000_000 */\n          swap1\n          sub\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n          add\n            /* \"src/libraries/StableMath.sol\":2209:2240  dy /= token0PrecisionMultiplier */\n          swap1\n          tag_240\n          swap2\n          tag_42\n          jump\t// in\n        tag_240:\n            /* \"src/curve/stable/StablePair.sol\":6408:6865  if (aAmount > 0) {... */\n          swap15\n          dup16\n            /* \"src/curve/stable/StablePair.sol\":7659:7668  lReserve1 */\n          tag_205\n            /* \"src/curve/stable/StablePair.sol\":6408:6865  if (aAmount > 0) {... */\n          swap4\n          jump(tag_206)\n            /* \"src/curve/stable/StablePair.sol\":6320:7593  if (aInOrOut) {... */\n        tag_196:\n            /* \"src/curve/stable/StablePair.sol\":6988:6999  aAmount > 0 */\n          dup9\n          dup11\n          swap7\n          swap11\n          sgt\n            /* \"src/curve/stable/StablePair.sol\":6984:7583  if (aAmount > 0) {... */\n          0x00\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          eq\n          tag_241\n          jumpi\n            /* \"src/curve/stable/StablePair.sol\":7019:7048  rAmountOut = uint256(aAmount) */\n          dup8\n          dup7\n            /* \"src/curve/stable/StablePair.sol\":7074:7096  rAmountOut < lReserve0 */\n          swap15\n          dup16\n          swap12\n          dup2\n          dup10\n          lt\n            /* \"src/curve/stable/StablePair.sol\":7066:7119  require(rAmountOut < lReserve0, \"SP: NOT_ENOUGH_LIQ\") */\n          tag_243\n          swap1\n          tag_44\n          jump\t// in\n        tag_243:\n            /* \"src/curve/stable/StablePair.sol\":7149:7155  token0 */\n          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap9\n            /* \"src/curve/stable/StablePair.sol\":9261:9268  swapFee */\n          0x07\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n            /* \"src/curve/stable/StablePair.sol\":11113:11134  _getCurrentAPrecise() */\n          swap2\n          tag_244\n          tag_47\n          jump\t// in\n        tag_244:\n            /* \"src/curve/stable/StablePair.sol\":11109:11134  2 * _getCurrentAPrecise() */\n          tag_245\n          swap1\n          tag_39\n          jump\t// in\n        tag_245:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n          swap1\n          0xffffffffffffffffffffffffffffffff\n            /* \"src/curve/stable/StablePair.sol\":9159:9184  token0PrecisionMultiplier */\n          swap1\n          dup2\n          immutable(\"0x372e991e4284f7d12d6b2461cce9899511b05ac053845de253542adb96f2dca0\")\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n            /* \"src/curve/stable/StablePair.sol\":9198:9223  token1PrecisionMultiplier */\n          swap2\n          immutable(\"0xc4ba931b733b92a51f51c0955dd7716c7a38f3de911d23a5d0fbd5d23c0fbe8c\")\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n          swap3\n          dup3\n          dup7\n          mul\n          dup5\n          dup9\n          mul\n            /* \"src/libraries/StableMath.sol\":2818:2896  _computeLiquidityFromAdjustedBalances(adjustedReserve0, adjustedReserve1, N_A) */\n          swap4\n          tag_246\n          dup4\n          dup7\n          dup5\n          tag_58\n          jump\t// in\n        tag_246:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap4\n          mul\n            /* \"src/libraries/StableMath.sol\":991:1000  1_000_000 */\n          swap1\n          sub\n            /* \"src/libraries/StableMath.sol\":3042:3058  _getY(y, d, N_A) */\n          swap2\n          tag_247\n          swap3\n          tag_60\n          jump\t// in\n        tag_247:\n            /* \"src/libraries/StableMath.sol\":991:1000  1_000_000 */\n          sub\n            /* \"src/curve/stable/StablePair.sol\":7232:7236  true */\n          0x01\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          add\n            /* \"src/libraries/StableMath.sol\":3123:3154  dx /= token1PrecisionMultiplier */\n          swap1\n          tag_248\n          swap2\n          tag_42\n          jump\t// in\n        tag_248:\n            /* \"src/ReservoirPair.sol\":2723:2732  1_000_000 */\n          0x0f4240\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap2\n          dup3\n          add\n          mul\n          div\n            /* \"src/curve/stable/StablePair.sol\":6984:7583  if (aAmount > 0) {... */\n          swap12\n            /* \"src/curve/stable/StablePair.sol\":7659:7668  lReserve1 */\n          tag_205\n            /* \"src/curve/stable/StablePair.sol\":6984:7583  if (aAmount > 0) {... */\n          swap4\n            /* \"src/curve/stable/StablePair.sol\":6320:7593  if (aInOrOut) {... */\n          jump(tag_206)\n            /* \"src/curve/stable/StablePair.sol\":6984:7583  if (aAmount > 0) {... */\n        tag_241:\n            /* \"src/curve/stable/StablePair.sol\":7369:7377  -aAmount */\n          swap9\n          swap5\n          dup8\n          tag_250\n            /* \"src/curve/stable/StablePair.sol\":7659:7668  lReserve1 */\n          tag_205\n            /* \"src/curve/stable/StablePair.sol\":7369:7377  -aAmount */\n          swap3\n          tag_32\n          jump\t// in\n        tag_250:\n            /* \"src/curve/stable/StablePair.sol\":7404:7426  rAmountOut < lReserve1 */\n          swap15\n          dup16\n            /* \"src/curve/stable/StablePair.sol\":7396:7449  require(rAmountOut < lReserve1, \"SP: NOT_ENOUGH_LIQ\") */\n          tag_251\n            /* \"src/curve/stable/StablePair.sol\":7404:7426  rAmountOut < lReserve1 */\n          dup4\n          dup3\n          lt\n            /* \"src/curve/stable/StablePair.sol\":7396:7449  require(rAmountOut < lReserve1, \"SP: NOT_ENOUGH_LIQ\") */\n          tag_44\n          jump\t// in\n        tag_251:\n            /* \"src/curve/stable/StablePair.sol\":7479:7485  token1 */\n          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap9\n            /* \"src/libraries/StableMath.sol\":3372:3403  dx /= token0PrecisionMultiplier */\n          tag_252\n            /* \"src/curve/stable/StablePair.sol\":9261:9268  swapFee */\n          0x07\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n            /* \"src/curve/stable/StablePair.sol\":11113:11134  _getCurrentAPrecise() */\n          swap2\n            /* \"src/curve/stable/StablePair.sol\":11109:11134  2 * _getCurrentAPrecise() */\n          tag_253\n            /* \"src/curve/stable/StablePair.sol\":11113:11134  _getCurrentAPrecise() */\n          tag_254\n          tag_47\n          jump\t// in\n        tag_254:\n            /* \"src/curve/stable/StablePair.sol\":11109:11134  2 * _getCurrentAPrecise() */\n          tag_39\n          jump\t// in\n        tag_253:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n            /* \"src/libraries/StableMath.sol\":3353:3354  1 */\n          0x01\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffff\n            /* \"src/curve/stable/StablePair.sol\":9159:9184  token0PrecisionMultiplier */\n          swap2\n            /* \"src/libraries/StableMath.sol\":3291:3307  _getY(y, d, N_A) */\n          tag_255\n            /* \"src/curve/stable/StablePair.sol\":9159:9184  token0PrecisionMultiplier */\n          dup4\n          immutable(\"0x372e991e4284f7d12d6b2461cce9899511b05ac053845de253542adb96f2dca0\")\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n            /* \"src/curve/stable/StablePair.sol\":9198:9223  token1PrecisionMultiplier */\n          swap4\n          immutable(\"0xc4ba931b733b92a51f51c0955dd7716c7a38f3de911d23a5d0fbd5d23c0fbe8c\")\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n          swap2\n          dup5\n          dup10\n          mul\n          swap3\n          dup1\n          dup12\n          mul\n            /* \"src/libraries/StableMath.sol\":2818:2896  _computeLiquidityFromAdjustedBalances(adjustedReserve0, adjustedReserve1, N_A) */\n          tag_256\n          dup4\n          dup3\n          dup8\n          tag_58\n          jump\t// in\n        tag_256:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap2\n          dup11\n          mul\n            /* \"src/libraries/StableMath.sol\":991:1000  1_000_000 */\n          swap1\n          sub\n            /* \"src/libraries/StableMath.sol\":3291:3307  _getY(y, d, N_A) */\n          tag_60\n          jump\t// in\n        tag_255:\n            /* \"src/libraries/StableMath.sol\":991:1000  1_000_000 */\n          sub\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          add\n            /* \"src/libraries/StableMath.sol\":3372:3403  dx /= token0PrecisionMultiplier */\n          tag_42\n          jump\t// in\n        tag_252:\n            /* \"src/ReservoirPair.sol\":2723:2732  1_000_000 */\n          0x0f4240\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap2\n          dup3\n          add\n          mul\n          div\n            /* \"src/curve/stable/StablePair.sol\":6984:7583  if (aAmount > 0) {... */\n          swap13\n            /* \"src/curve/stable/StablePair.sol\":6320:7593  if (aInOrOut) {... */\n          jump(tag_206)\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n        tag_194:\n          dup13\n          mload\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          0x20\n          dup2\n          dup8\n          add\n          mstore\n          0x0f\n          dup2\n          dup9\n          add\n          mstore\n          0x53503a20414d4f554e545f5a45524f0000000000000000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          0x64\n          swap1\n          revert\n        tag_191:\n          dup6\n          dup1\n          revert\n        tag_187:\n          dup5\n          dup1\n          revert\n        tag_183:\n          dup3\n          dup1\n          revert\n        tag_156:\n          swap1\n          swap2\n          pop\n          jumpi(tag_183, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_183\n          jumpi\n          0x20\n          swap3\n          dup3\n          swap2\n          tag_261\n          tag_8\n          jump\t// in\n        tag_261:\n          tag_262\n          tag_9\n          jump\t// in\n        tag_262:\n          swap2\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup1\n          swap3\n          and\n          dup5\n          mstore\n          dup7\n          mstore\n          dup4\n          dup4\n          keccak256\n          swap2\n          and\n          dup3\n          mstore\n          dup5\n          mstore\n          keccak256\n          sload\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_154:\n          dup4\n          jumpi(tag_166, callvalue)\n          dup1\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_166\n          jumpi\n          tag_168\n          tag_18\n          jump\t// in\n        tag_152:\n          dup4\n          dup3\n          jumpi(tag_175, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_175\n          jumpi\n          0x20\n          swap1\n          mload\n            /* \"src/ReservoirPair.sol\":2723:2732  1_000_000 */\n          0x0f4240\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup2\n          mstore\n          return\n        tag_150:\n          dup4\n          dup3\n          jumpi(tag_175, callvalue)\n          jumpi(tag_175, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0xe0))\n          tag_276\n          tag_8\n          jump\t// in\n        tag_276:\n          tag_277\n          tag_9\n          jump\t// in\n        tag_277:\n          calldataload(0x44)\n          calldataload(0x64)\n          swap4\n          calldataload(0x84)\n          swap4\n          0xff\n          dup6\n          and\n          dup1\n          swap6\n          sub\n          tag_278\n          jumpi\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4057:4072  block.timestamp */\n          timestamp\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4045:4072  deadline >= block.timestamp */\n          dup7\n          lt\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          tag_280\n          jumpi\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4428:4446  DOMAIN_SEPARATOR() */\n          tag_282\n          tag_12\n          jump\t// in\n        tag_282:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap5\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup1\n          swap3\n          and\n          swap6\n          dup7\n          dup10\n          mstore\n          0x20\n          swap6\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4873:4879  nonces */\n          0x05\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup8\n          mstore\n          dup5\n          dup11\n          keccak256\n          swap9\n          dup10\n          sload\n          swap10\n          0x01\n          dup12\n          add\n          swap1\n          sstore\n          dup6\n          mload\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4511:4960  abi.encode(... */\n          swap1\n          dup6\n          dup10\n          dup4\n          add\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap4\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4555:4720  keccak256(... */\n          0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup6\n          mstore\n          dup12\n          dup10\n          dup6\n          add\n          mstore\n          and\n          swap11\n          dup12\n          0x60\n          dup5\n          add\n          mstore\n          dup9\n          0x80\n          dup5\n          add\n          mstore\n          0xa0\n          dup4\n          add\n          mstore\n          0xc0\n          dup3\n          add\n          mstore\n          0xc0\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4511:4960  abi.encode(... */\n          dup2\n          mstore\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0xe0\n          dup2\n          add\n          swap2\n          dup2\n          dup4\n          lt\n          0xffffffffffffffff\n          dup5\n          gt\n          or\n          tag_283\n          jumpi\n          swap3\n          dup3\n          dup10\n          swap6\n          swap3\n          0x0122\n          dup15\n          swap7\n          0x80\n          swap7\n          dup12\n          mstore\n          dup3\n          mload\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4472:4986  keccak256(... */\n          swap1\n          keccak256\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4350:5008  abi.encodePacked(... */\n          swap2\n          0x0100\n          dup2\n          add\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap5\n          0x1901000000000000000000000000000000000000000000000000000000000000\n          dup7\n          mstore\n          0x0102\n          dup3\n          add\n          mstore\n          add\n          mstore\n          0x42\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4350:5008  abi.encodePacked(... */\n          dup2\n          mstore\n          tag_285\n          dup2\n          tag_2\n          jump\t// in\n        tag_285:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mload\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4319:5026  keccak256(... */\n          swap1\n          keccak256\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap1\n          dup7\n          mload\n          swap2\n          dup3\n          mstore\n          dup5\n          dup3\n          add\n          mstore\n          calldataload(0xa4)\n          dup7\n          dup3\n          add\n          mstore\n          calldataload(0xc4)\n          0x60\n          dup3\n          add\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4292:5097  ecrecover(... */\n          dup3\n          dup1\n          mstore\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x01\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4292:5097  ecrecover(... */\n          gas\n          staticcall\n          iszero\n          tag_286\n          jumpi\n          dup7\n          mload\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5120:5150  recoveredAddress != address(0) */\n          swap7\n          dup8\n          iszero\n          iszero\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5120:5179  recoveredAddress != address(0) && recoveredAddress == owner */\n          dup1\n          tag_288\n          jumpi\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n        tag_289:\n          iszero\n          tag_290\n          jumpi\n          dup7\n          swap8\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5283:5314  Approval(owner, spender, value) */\n          0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap6\n          swap7\n          swap8\n          mstore\n          dup4\n          mstore\n          dup1\n          dup8\n          keccak256\n          dup7\n          dup9\n          mstore\n          dup4\n          mstore\n          dup2\n          dup2\n          dup9\n          keccak256\n          sstore\n          mload\n          swap1\n          dup2\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5283:5314  Approval(owner, spender, value) */\n          log3\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup1\n          return\n        tag_290:\n          dup4\n          0x64\n          swap3\n          mload\n          swap2\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          dup3\n          add\n          mstore\n          0x0e\n          0x24\n          dup3\n          add\n          mstore\n          0x494e56414c49445f5349474e4552000000000000000000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5120:5179  recoveredAddress != address(0) && recoveredAddress == owner */\n        tag_288:\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5154:5179  recoveredAddress == owner */\n          pop\n          dup5\n          dup9\n          eq\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5120:5179  recoveredAddress != address(0) && recoveredAddress == owner */\n          jump(tag_289)\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4292:5097  ecrecover(... */\n        tag_286:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup2\n          mload\n          returndatasize\n          dup9\n          dup3\n          returndatacopy\n          returndatasize\n          swap1\n          revert\n        tag_283:\n          0x24\n          dup13\n          0x41\n          dup16\n          0x4e487b7100000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          mstore\n          revert\n        tag_280:\n          0x64\n          dup9\n          0x20\n          dup5\n          mload\n          swap2\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          dup3\n          add\n          mstore\n          0x17\n          0x24\n          dup3\n          add\n          mstore\n          0x5045524d49545f444541444c494e455f45585049524544000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n        tag_278:\n          dup7\n          dup1\n          revert\n        tag_148:\n          dup4\n          dup3\n          jumpi(tag_175, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_175\n          jumpi\n          0x20\n          swap1\n          mload\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":2950:2979  ERC20 public immutable token1 */\n          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n          dup2\n          mstore\n          return\n        tag_146:\n          swap1\n          swap2\n          pop\n          jumpi(tag_183, callvalue)\n          jumpi(tag_183, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))\n          dup1\n          calldataload\n          swap2\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup1\n          dup5\n          and\n          dup1\n          swap5\n          sub\n          tag_187\n          jumpi\n            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */\n          tag_302\n            /* \"src/ReservoirPair.sol\":3741:3748  factory */\n          swap1\n          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":3719:3729  msg.sender */\n          caller\n            /* \"src/ReservoirPair.sol\":3719:3749  msg.sender == address(factory) */\n          eq\n            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */\n          tag_16\n          jump\t// in\n        tag_302:\n            /* \"src/ReservoirPair.sol\":12690:12703  token0Managed */\n          0x0c\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n          0xffffffffffffffffffffffffff\n          dup1\n          dup3\n          and\n            /* \"src/ReservoirPair.sol\":12690:12708  token0Managed == 0 */\n          iszero\n            /* \"src/ReservoirPair.sol\":12690:12730  token0Managed == 0 && token1Managed == 0 */\n          swap2\n          dup3\n          tag_303\n          jumpi\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n        tag_304:\n          pop\n          pop\n          iszero\n          tag_305\n          jumpi\n          pop\n          pop\n          0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n            /* \"src/ReservoirPair.sol\":12765:12787  assetManager = manager */\n          0x0b\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n          and\n          or\n            /* \"src/ReservoirPair.sol\":12765:12787  assetManager = manager */\n          0x0b\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sstore\n          dup1\n          return\n        tag_305:\n          swap1\n          0x20\n          0x64\n          swap3\n          mload\n          swap2\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          dup3\n          add\n          mstore\n          0x14\n          0x24\n          dup3\n          add\n          mstore\n          0x414d503a20414d5f5354494c4c5f414354495645000000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n            /* \"src/ReservoirPair.sol\":12690:12730  token0Managed == 0 && token1Managed == 0 */\n        tag_303:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x68\n          shr\n          and\n            /* \"src/ReservoirPair.sol\":12712:12730  token1Managed == 0 */\n          iszero\n          swap1\n          pop\n            /* \"src/ReservoirPair.sol\":12690:12730  token0Managed == 0 && token1Managed == 0 */\n          codesize\n          dup1\n          jump(tag_304)\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n        tag_144:\n          dup4\n          dup3\n          jumpi(tag_175, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_175\n          jumpi\n          0x20\n          swap1\n            /* \"src/ReservoirPair.sol\":3488:3536  uint256 public customSwapFee = type(uint256).max */\n          0x08\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_142:\n          dup4\n          dup3\n          jumpi(tag_175, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_175\n          jumpi\n            /* \"src/curve/stable/StablePair.sol\":4489:4528  StopRampA(lCurrentAPrecise, lTimestamp) */\n          0xc2b4a70c4505e53bc276a247d810393c8346d85131cf6a42ee13edf74884037f\n            /* \"src/ReservoirPair.sol\":3741:3748  factory */\n          swap1\n            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */\n          tag_315\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":3741:3748  factory */\n          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":3719:3729  msg.sender */\n          caller\n            /* \"src/ReservoirPair.sol\":3719:3749  msg.sender == address(factory) */\n          eq\n            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */\n          tag_16\n          jump\t// in\n        tag_315:\n            /* \"src/curve/stable/StablePair.sol\":4224:4245  _getCurrentAPrecise() */\n          tag_316\n          tag_47\n          jump\t// in\n        tag_316:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0xffffffffffffffff\n          dup1\n          dup3\n          and\n            /* \"src/curve/stable/StablePair.sol\":4372:4387  block.timestamp */\n          swap2\n          dup3\n            /* \"src/libraries/StableMath.sol\":786:787  2 */\n          0xffffffffffffffff0000000000000000\n          0xffffffffffffffff000000000000000000000000000000000000000000000000\n            /* \"src/curve/stable/StablePair.sol\":4372:4387  block.timestamp */\n          timestamp\n            /* \"src/libraries/StableMath.sol\":786:787  2 */\n          0xc0\n          shl\n          and\n          swap3\n          dup7\n          shl\n          and\n          or\n          0xffffffffffffffff00000000000000000000000000000000\n            /* \"src/curve/stable/StablePair.sol\":4372:4387  block.timestamp */\n          timestamp\n            /* \"src/libraries/StableMath.sol\":786:787  2 */\n          0x80\n          shl\n          and\n          or\n          or\n            /* \"src/curve/stable/StablePair.sol\":4256:4263  ampData */\n          0x010010\n            /* \"src/libraries/StableMath.sol\":786:787  2 */\n          sstore\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup3\n          mload\n          swap2\n          dup3\n          mstore\n            /* \"src/curve/stable/StablePair.sol\":4372:4387  block.timestamp */\n          timestamp\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n          0x20\n          dup3\n          add\n          mstore\n            /* \"src/curve/stable/StablePair.sol\":4489:4528  StopRampA(lCurrentAPrecise, lTimestamp) */\n          log1\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup1\n          return\n        tag_140:\n          dup4\n          dup3\n          jumpi(tag_175, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_175\n          jumpi\n          0x20\n          swap1\n          mload\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":2870:2909  GenericFactory public immutable factory */\n          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n          dup2\n          mstore\n          return\n        tag_138:\n          dup4\n          jumpi(tag_166, callvalue)\n          jumpi(tag_166, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))\n            /* \"src/ReservoirPair.sol\":5579:5584  false */\n          tag_168\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          tag_326\n          tag_8\n          jump\t// in\n        tag_326:\n            /* \"src/ReservoirPair.sol\":6689:6698  lReserve1 */\n          tag_327\n            /* \"src/ReservoirPair.sol\":6506:6520  _lockAndLoad() */\n          tag_328\n          tag_14\n          jump\t// in\n        tag_328:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          pop\n          swap4\n          swap2\n          0xffffffffffffffffffffffffff\n          dup1\n          swap2\n          and\n          swap2\n          and\n            /* \"src/ReservoirPair.sol\":6561:6575  _totalToken0() */\n          swap2\n            /* \"src/ReservoirPair.sol\":6600:6609  lReserve1 */\n          tag_329\n            /* \"src/ReservoirPair.sol\":6561:6575  _totalToken0() */\n          dup4\n          dup4\n            /* \"src/ReservoirPair.sol\":6561:6587  _totalToken0() - lReserve0 */\n          tag_330\n            /* \"src/ReservoirPair.sol\":6561:6575  _totalToken0() */\n          dup2\n          tag_331\n          tag_25\n          jump\t// in\n        tag_331:\n            /* \"src/ReservoirPair.sol\":6561:6587  _totalToken0() - lReserve0 */\n          tag_11\n          jump\t// in\n        tag_330:\n            /* \"src/ReservoirPair.sol\":6548:6554  token0 */\n          dup5\n          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")\n            /* \"src/ReservoirPair.sol\":6600:6609  lReserve1 */\n          tag_21\n          jump\t// in\n        tag_329:\n            /* \"src/ReservoirPair.sol\":6650:6676  _totalToken1() - lReserve1 */\n          tag_332\n            /* \"src/ReservoirPair.sol\":6650:6664  _totalToken1() */\n          dup4\n          tag_331\n          tag_26\n          jump\t// in\n            /* \"src/ReservoirPair.sol\":6650:6676  _totalToken1() - lReserve1 */\n        tag_332:\n            /* \"src/ReservoirPair.sol\":6637:6643  token1 */\n          swap1\n          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")\n            /* \"src/ReservoirPair.sol\":6689:6698  lReserve1 */\n          tag_21\n          jump\t// in\n        tag_327:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0xffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffff\n          0xffffffff0000000000000000000000000000000000000000000000000000\n            /* \"src/ReservoirPair.sol\":4847:4853  _slot0 */\n          0x06\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n          swap3\n          0xd0\n          shl\n          and\n          swap2\n          and\n          or\n            /* \"src/ReservoirPair.sol\":4847:4853  _slot0 */\n          0x06\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sstore\n            /* \"src/ReservoirPair.sol\":4701:4899  function _writeSlot0Timestamp(uint32 aTimestamp, bool aLocked) internal {... */\n          jump\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n        tag_136:\n          dup4\n          dup3\n          jumpi(tag_175, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_175\n          jumpi\n          0x20\n          swap1\n          mload\n            /* \"src/ReservoirPair.sol\":2671:2678  10 ** 3 */\n          0x03e8\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup2\n          mstore\n          return\n        tag_134:\n          dup4\n          dup3\n          jumpi(tag_175, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_175\n          jumpi\n          0x20\n          swap1\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":17166:17193  address public oracleCaller */\n          0x01000f\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n          and\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_132:\n          swap1\n          swap2\n          pop\n          jumpi(tag_183, callvalue)\n          jumpi(tag_183, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))\n            /* \"src/ReservoirPair.sol\":7139:7202  CustomPlatformFeeChanged(customPlatformFee, aCustomPlatformFee) */\n          0xe044af8ebdaeeed3e95065fac857c503c7eabb71acfbcdcb7823ec6ca603c26e\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap1\n          calldataload\n            /* \"src/ReservoirPair.sol\":3741:3748  factory */\n          swap2\n            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */\n          tag_346\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":3741:3748  factory */\n          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":3719:3729  msg.sender */\n          caller\n            /* \"src/ReservoirPair.sol\":3719:3749  msg.sender == address(factory) */\n          eq\n            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */\n          tag_16\n          jump\t// in\n        tag_346:\n            /* \"src/ReservoirPair.sol\":7164:7181  customPlatformFee */\n          0x0a\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n          dup2\n          mload\n          swap1\n          dup2\n          mstore\n          dup4\n          0x20\n          dup3\n          add\n          mstore\n            /* \"src/ReservoirPair.sol\":7139:7202  CustomPlatformFeeChanged(customPlatformFee, aCustomPlatformFee) */\n          log1\n            /* \"src/ReservoirPair.sol\":7164:7181  customPlatformFee */\n          0x0a\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sstore\n            /* \"src/ReservoirPair.sol\":7212:7250  customPlatformFee = aCustomPlatformFee */\n          tag_168\n          tag_18\n          jump\t// in\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n        tag_130:\n          dup4\n          dup3\n          jumpi(tag_175, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_175\n          jumpi\n          0x20\n          swap1\n          0xffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":12834:12862  uint104 public token1Managed */\n          0x0c\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n          0x68\n          shr\n          and\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_128:\n          dup4\n          dup3\n          jumpi(tag_175, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_175\n          jumpi\n          0x20\n          swap1\n          mload\n            /* \"src/ReservoirPair.sol\":2849:2855  20_000 */\n          0x4e20\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup2\n          mstore\n          return\n        tag_126:\n          dup4\n          dup3\n          jumpi(tag_175, callvalue)\n          dup1\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_175\n          jumpi\n          0x20\n          swap2\n          tag_360\n          tag_8\n          jump\t// in\n        tag_360:\n          dup3\n          0xffffffffffffffffffffffffffffffffffffffff\n          calldataload(0x24)\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2774:2784  msg.sender */\n          swap3\n          caller\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup6\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2764:2773  balanceOf */\n          0x03\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup8\n          mstore\n          dup3\n          dup6\n          keccak256\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2764:2795  balanceOf[msg.sender] -= amount */\n          tag_361\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup6\n          dup3\n          sload\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2764:2795  balanceOf[msg.sender] -= amount */\n          tag_11\n          jump\t// in\n        tag_361:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap1\n          sstore\n          and\n          swap3\n          dup4\n          dup2\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2764:2773  balanceOf */\n          0x03\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup7\n          mstore\n          keccak256\n          dup2\n          dup2\n          sload\n          add\n          swap1\n          sstore\n          dup3\n          mload\n          swap1\n          dup2\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2990:3022  Transfer(msg.sender, to, amount) */\n          0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2774:2784  msg.sender */\n          dup5\n          caller\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2990:3022  Transfer(msg.sender, to, amount) */\n          swap3\n          log3\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mload\n          0x01\n          dup2\n          mstore\n          return\n        tag_124:\n          dup4\n          dup3\n          jumpi(tag_175, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_175\n          jumpi\n          0x20\n            /* \"src/curve/stable/StablePair.sol\":11363:11384  _getCurrentAPrecise() */\n          swap1\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0xffffffffffffffff\n            /* \"src/curve/stable/StablePair.sol\":11363:11384  _getCurrentAPrecise() */\n          tag_366\n          tag_47\n          jump\t// in\n        tag_366:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap2\n          mload\n          swap2\n          and\n          dup2\n          mstore\n          return\n        tag_122:\n          dup4\n          jumpi(tag_166, callvalue)\n          jumpi(tag_166, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))\n          dup2\n          calldataload\n          swap2\n          dup2\n          0x60\n          dup6\n          mload\n          tag_371\n          dup2\n          tag_2\n          jump\t// in\n        tag_371:\n          dup3\n          dup2\n          mstore\n          dup3\n          0x20\n          dup3\n          add\n          mstore\n          dup3\n          dup8\n          dup3\n          add\n          mstore\n          add\n          mstore\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":17325:17337  oracleCaller */\n          0x01000f\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n          and\n            /* \"src/ReservoirPair.sol\":17311:17321  msg.sender */\n          caller\n            /* \"src/ReservoirPair.sol\":17311:17337  msg.sender == oracleCaller */\n          sub\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          tag_372\n          jumpi\n          0x010000\n          dup4\n          lt\n          iszero\n          tag_374\n          jumpi\n          0x80\n          dup4\n          0xffffffff\n          dup7\n          dup1\n          mload\n          swap3\n          tag_376\n          dup5\n          tag_2\n          jump\t// in\n        tag_376:\n            /* \"src/ReservoirPair.sol\":17388:17401  _observations */\n          0x0d\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          add\n          sload\n          swap1\n          dup2\n            /* \"src/ReservoirPair.sol\":17388:17401  _observations */\n          0x0d\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          signextend\n          swap4\n          dup5\n          dup2\n          mstore\n          0x20\n          dup2\n          add\n          dup4\n          0x70\n          shr\n          0x06\n          signextend\n          dup2\n          mstore\n          0x60\n          dup4\n          dup4\n          add\n          swap3\n          dup6\n          0xa8\n          shr\n          0x06\n          signextend\n          dup5\n          mstore\n          add\n          swap4\n          0xe0\n          shr\n          dup5\n          mstore\n          dup3\n          mload\n          swap6\n          dup7\n          mstore\n          mload\n          0x06\n          signextend\n          0x20\n          dup7\n          add\n          mstore\n          mload\n          0x06\n          signextend\n          swap1\n          dup5\n          add\n          mstore\n          mload\n          and\n          0x60\n          dup3\n          add\n          mstore\n          return\n        tag_374:\n          swap1\n          0x32\n          0x24\n          swap3\n          0x4e487b7100000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          mstore\n          revert\n        tag_372:\n          0x64\n          swap1\n          0x20\n          dup6\n          mload\n          swap2\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          dup3\n          add\n          mstore\n          0x15\n          0x24\n          dup3\n          add\n          mstore\n          0x4f573a204e4f545f4f5241434c455f43414c4c45520000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n        tag_120:\n          swap2\n          pop\n          jumpi(tag_183, callvalue)\n          0x20\n          swap2\n          dup3\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_398\n          jumpi\n            /* \"src/ReservoirPair.sol\":8142:8170  factory.read(RECOVERER_NAME) */\n          tag_381\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap3\n          tag_382\n          tag_8\n          jump\t// in\n        tag_382:\n          swap1\n          dup4\n          mload\n          tag_383\n          dup2\n          tag_4\n          jump\t// in\n        tag_383:\n          0x18\n          dup2\n          mstore\n          0x5368617265643a3a64656661756c745265636f76657265720000000000000000\n          dup3\n          dup3\n          add\n          mstore\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":8142:8149  factory */\n          swap6\n          dup7\n          swap2\n          dup3\n          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":8142:8170  factory.read(RECOVERER_NAME) */\n          tag_51\n          jump\t// in\n        tag_381:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n          swap3\n          dup6\n          dup4\n          and\n            /* \"src/ReservoirPair.sol\":8218:8224  token0 */\n          swap6\n          dup1\n          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":8200:8225  aToken != address(token0) */\n          dup8\n          eq\n          iszero\n            /* \"src/ReservoirPair.sol\":8200:8254  aToken != address(token0) && aToken != address(token1) */\n          swap1\n          dup2\n          tag_384\n          jumpi\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n        tag_385:\n            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */\n          pop\n          iszero\n          tag_386\n          jumpi\n            /* \"src/ReservoirPair.sol\":8304:8328  _recoverer != address(0) */\n          dup4\n          iszero\n            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */\n          tag_388\n          jumpi\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup2\n          swap1\n          0x24\n          dup7\n          mload\n            /* \"src/ReservoirPair.sol\":8396:8434  ERC20(aToken).balanceOf(address(this)) */\n          dup1\n          swap9\n          dup2\n          swap4\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x70a0823100000000000000000000000000000000000000000000000000000000\n            /* \"src/ReservoirPair.sol\":8396:8434  ERC20(aToken).balanceOf(address(this)) */\n          dup4\n          mstore\n            /* \"src/ReservoirPair.sol\":8428:8432  this */\n          address\n            /* \"src/ReservoirPair.sol\":8396:8434  ERC20(aToken).balanceOf(address(this)) */\n          swap1\n          dup4\n          add\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mstore\n            /* \"src/ReservoirPair.sol\":8396:8434  ERC20(aToken).balanceOf(address(this)) */\n          gas\n          staticcall\n          swap4\n          dup5\n          iszero\n          tag_390\n          jumpi\n          pop\n          dup6\n          swap4\n          tag_392\n          jumpi\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n        tag_393:\n            /* \"src/ReservoirPair.sol\":8445:8496  _safeTransfer(aToken, _recoverer, _amountToRecover) */\n          pop\n          tag_394\n          swap4\n          pop\n          tag_19\n          jump\t// in\n        tag_394:\n          pop\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup1\n          return\n            /* \"src/ReservoirPair.sol\":8396:8434  ERC20(aToken).balanceOf(address(this)) */\n        tag_392:\n          swap1\n          swap3\n          pop\n          dup4\n          dup2\n          returndatasize\n          dup4\n          gt\n          tag_395\n          jumpi\n        tag_396:\n          tag_397\n          dup2\n          dup4\n          tag_5\n          jump\t// in\n        tag_397:\n          dup2\n          add\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sub\n          slt\n          tag_398\n          jumpi\n            /* \"src/ReservoirPair.sol\":8445:8496  _safeTransfer(aToken, _recoverer, _amountToRecover) */\n          tag_394\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap3\n          mload\n            /* \"src/ReservoirPair.sol\":8396:8434  ERC20(aToken).balanceOf(address(this)) */\n          swap2\n          codesize\n          jump(tag_393)\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n        tag_398:\n          dup4\n          dup1\n          revert\n            /* \"src/ReservoirPair.sol\":8396:8434  ERC20(aToken).balanceOf(address(this)) */\n        tag_395:\n          pop\n          returndatasize\n          jump(tag_396)\n        tag_390:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mload\n          returndatasize\n          dup8\n          dup3\n          returndatacopy\n          returndatasize\n          swap1\n          revert\n            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */\n        tag_388:\n          0x64\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap2\n          dup6\n          mload\n            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */\n          swap2\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          dup3\n          add\n          mstore\n          0x19\n          0x24\n          dup3\n          add\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mstore\n            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */\n          0x503a205245434f56455245525f5a45524f5f4144445245535300000000000000\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x44\n          dup3\n          add\n            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */\n          mstore\n          revert\n        tag_386:\n          0x64\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap2\n          dup6\n          mload\n            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */\n          swap2\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          dup3\n          add\n          mstore\n          0x1b\n          0x24\n          dup3\n          add\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mstore\n            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */\n          0x503a20494e56414c49445f544f4b454e5f544f5f5245434f5645520000000000\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x44\n          dup3\n          add\n            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */\n          mstore\n          revert\n            /* \"src/ReservoirPair.sol\":8200:8254  aToken != address(token0) && aToken != address(token1) */\n        tag_384:\n            /* \"src/ReservoirPair.sol\":8247:8253  token1 */\n          swap1\n          pop\n          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":8229:8254  aToken != address(token1) */\n          dup7\n          eq\n          iszero\n            /* \"src/ReservoirPair.sol\":8200:8254  aToken != address(token0) && aToken != address(token1) */\n          codesize\n          jump(tag_385)\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n        tag_118:\n          swap1\n          swap2\n          pop\n          jumpi(tag_183, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_183\n          jumpi\n          dup1\n          calldataload\n          swap1\n          calldataload(0x24)\n          swap3\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":14884:14896  assetManager */\n          0x0b\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n          and\n            /* \"src/ReservoirPair.sol\":14862:14872  msg.sender */\n          caller\n            /* \"src/ReservoirPair.sol\":14862:14897  msg.sender == address(assetManager) */\n          sub\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          tag_404\n          jumpi\n          pop\n          pop\n            /* \"src/ReservoirPair.sol\":14938:14955  aToken0Change > 0 */\n          dup3\n          dup2\n          sgt\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          iszero\n          tag_406\n          jumpi\n            /* \"src/ReservoirPair.sol\":14988:15022  uint256(aToken0Change).toUint104() */\n          tag_408\n            /* \"src/ReservoirPair.sol\":15073:15112  token0.safeTransfer(msg.sender, lDelta) */\n          tag_409\n            /* \"src/ReservoirPair.sol\":14988:15022  uint256(aToken0Change).toUint104() */\n          swap2\n          tag_29\n          jump\t// in\n        tag_408:\n            /* \"src/ReservoirPair.sol\":15036:15059  token0Managed += lDelta */\n          0x0c\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n          swap1\n          0xffffffffffffffffffffffffff\n          swap2\n          0xffffffffffffffffffffffffffffffffffffff00000000000000000000000000\n          dup4\n            /* \"src/ReservoirPair.sol\":15036:15059  token0Managed += lDelta */\n          tag_410\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup5\n          dup3\n          dup6\n          and\n            /* \"src/ReservoirPair.sol\":15036:15059  token0Managed += lDelta */\n          tag_34\n          jump\t// in\n        tag_410:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n          swap2\n          and\n          or\n            /* \"src/ReservoirPair.sol\":15036:15059  token0Managed += lDelta */\n          0x0c\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sstore\n          and\n            /* \"src/ReservoirPair.sol\":14862:14872  msg.sender */\n          caller\n            /* \"src/ReservoirPair.sol\":15073:15079  token0 */\n          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")\n            /* \"src/ReservoirPair.sol\":15073:15112  token0.safeTransfer(msg.sender, lDelta) */\n          tag_36\n          jump\t// in\n        tag_409:\n            /* \"src/ReservoirPair.sol\":15406:15423  aToken1Change > 0 */\n          dup2\n          dup2\n          sgt\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          iszero\n          tag_412\n          jumpi\n            /* \"src/ReservoirPair.sol\":15456:15490  uint256(aToken1Change).toUint104() */\n          tag_414\n            /* \"src/ReservoirPair.sol\":15595:15634  token1.safeTransfer(msg.sender, lDelta) */\n          tag_168\n            /* \"src/ReservoirPair.sol\":15456:15490  uint256(aToken1Change).toUint104() */\n          swap2\n          tag_29\n          jump\t// in\n        tag_414:\n            /* \"src/ReservoirPair.sol\":15557:15580  token1Managed += lDelta */\n          0x0c\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n          swap1\n          0xffffffffffffffffffffffffff\n          swap2\n          0xffffffffffff00000000000000000000000000ffffffffffffffffffffffffff\n          0xffffffffffffffffffffffffff00000000000000000000000000\n            /* \"src/ReservoirPair.sol\":15557:15580  token1Managed += lDelta */\n          tag_416\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup5\n          dup7\n          dup6\n          0x68\n          shr\n          and\n            /* \"src/ReservoirPair.sol\":15557:15580  token1Managed += lDelta */\n          tag_34\n          jump\t// in\n        tag_416:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x68\n          shl\n          and\n          swap2\n          and\n          or\n            /* \"src/ReservoirPair.sol\":15557:15580  token1Managed += lDelta */\n          0x0c\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sstore\n          and\n            /* \"src/ReservoirPair.sol\":14862:14872  msg.sender */\n          caller\n            /* \"src/ReservoirPair.sol\":15595:15601  token1 */\n          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")\n            /* \"src/ReservoirPair.sol\":15595:15634  token1.safeTransfer(msg.sender, lDelta) */\n          tag_36\n          jump\t// in\n            /* \"src/ReservoirPair.sol\":15402:15914  if (aToken1Change > 0) {... */\n        tag_412:\n            /* \"src/ReservoirPair.sol\":15655:15672  aToken1Change < 0 */\n          dup2\n          dup2\n          slt\n            /* \"src/ReservoirPair.sol\":15651:15914  if (aToken1Change < 0) {... */\n          tag_418\n          jumpi\n            /* \"src/ReservoirPair.sol\":15402:15914  if (aToken1Change > 0) {... */\n          pop\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup1\n          return\n            /* \"src/ReservoirPair.sol\":15651:15914  if (aToken1Change < 0) {... */\n        tag_418:\n            /* \"src/ReservoirPair.sol\":15705:15740  uint256(-aToken1Change).toUint104() */\n          tag_420\n            /* \"src/ReservoirPair.sol\":15713:15727  -aToken1Change */\n          tag_421\n            /* \"src/ReservoirPair.sol\":15845:15903  token1.safeTransferFrom(msg.sender, address(this), lDelta) */\n          tag_168\n            /* \"src/ReservoirPair.sol\":15713:15727  -aToken1Change */\n          swap3\n          tag_32\n          jump\t// in\n        tag_421:\n            /* \"src/ReservoirPair.sol\":15705:15740  uint256(-aToken1Change).toUint104() */\n          tag_29\n          jump\t// in\n        tag_420:\n            /* \"src/ReservoirPair.sol\":15807:15830  token1Managed -= lDelta */\n          0x0c\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n          swap1\n          0xffffffffffffffffffffffffff\n          swap2\n          0xffffffffffff00000000000000000000000000ffffffffffffffffffffffffff\n          0xffffffffffffffffffffffffff00000000000000000000000000\n            /* \"src/ReservoirPair.sol\":15807:15830  token1Managed -= lDelta */\n          tag_423\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup5\n          dup7\n          dup6\n          0x68\n          shr\n          and\n            /* \"src/ReservoirPair.sol\":15807:15830  token1Managed -= lDelta */\n          tag_33\n          jump\t// in\n        tag_423:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x68\n          shl\n          and\n          swap2\n          and\n          or\n            /* \"src/ReservoirPair.sol\":15807:15830  token1Managed -= lDelta */\n          0x0c\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sstore\n          and\n            /* \"src/ReservoirPair.sol\":15889:15893  this */\n          address\n            /* \"src/ReservoirPair.sol\":14862:14872  msg.sender */\n          caller\n            /* \"src/ReservoirPair.sol\":15845:15851  token1 */\n          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")\n            /* \"src/ReservoirPair.sol\":15845:15903  token1.safeTransferFrom(msg.sender, address(this), lDelta) */\n          tag_35\n          jump\t// in\n            /* \"src/ReservoirPair.sol\":14934:15392  if (aToken0Change > 0) {... */\n        tag_406:\n            /* \"src/ReservoirPair.sol\":15133:15150  aToken0Change < 0 */\n          dup3\n          dup2\n          slt\n            /* \"src/ReservoirPair.sol\":15129:15392  if (aToken0Change < 0) {... */\n          tag_424\n          jumpi\n            /* \"src/ReservoirPair.sol\":14934:15392  if (aToken0Change > 0) {... */\n        tag_425:\n          pop\n          jump(tag_409)\n            /* \"src/ReservoirPair.sol\":15129:15392  if (aToken0Change < 0) {... */\n        tag_424:\n            /* \"src/ReservoirPair.sol\":15183:15218  uint256(-aToken0Change).toUint104() */\n          tag_426\n            /* \"src/ReservoirPair.sol\":15191:15205  -aToken0Change */\n          tag_421\n            /* \"src/ReservoirPair.sol\":15323:15381  token0.safeTransferFrom(msg.sender, address(this), lDelta) */\n          tag_428\n            /* \"src/ReservoirPair.sol\":15191:15205  -aToken0Change */\n          swap3\n          tag_32\n          jump\t// in\n            /* \"src/ReservoirPair.sol\":15183:15218  uint256(-aToken0Change).toUint104() */\n        tag_426:\n            /* \"src/ReservoirPair.sol\":15285:15308  token0Managed -= lDelta */\n          0x0c\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n          swap1\n          0xffffffffffffffffffffffffff\n          swap2\n          0xffffffffffffffffffffffffffffffffffffff00000000000000000000000000\n          dup4\n            /* \"src/ReservoirPair.sol\":15285:15308  token0Managed -= lDelta */\n          tag_429\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup5\n          dup3\n          dup6\n          and\n            /* \"src/ReservoirPair.sol\":15285:15308  token0Managed -= lDelta */\n          tag_33\n          jump\t// in\n        tag_429:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n          swap2\n          and\n          or\n            /* \"src/ReservoirPair.sol\":15285:15308  token0Managed -= lDelta */\n          0x0c\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sstore\n          and\n            /* \"src/ReservoirPair.sol\":15367:15371  this */\n          address\n            /* \"src/ReservoirPair.sol\":14862:14872  msg.sender */\n          caller\n            /* \"src/ReservoirPair.sol\":15323:15329  token0 */\n          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")\n            /* \"src/ReservoirPair.sol\":15323:15381  token0.safeTransferFrom(msg.sender, address(this), lDelta) */\n          tag_35\n          jump\t// in\n        tag_428:\n            /* \"src/ReservoirPair.sol\":15129:15392  if (aToken0Change < 0) {... */\n          codesize\n          jump(tag_425)\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n        tag_404:\n          swap1\n          0x20\n          0x64\n          swap3\n          mload\n          swap2\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          dup3\n          add\n          mstore\n          0x15\n          0x24\n          dup3\n          add\n          mstore\n          0x414d503a20415554485f4e4f545f4d414e414745520000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n        tag_116:\n          dup4\n          dup3\n          jumpi(tag_175, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_175\n          jumpi\n          dup1\n          mload\n          swap1\n          dup3\n            /* \"lib/solmate/src/tokens/ERC20.sol\":1056:1076  string public symbol */\n          0x01\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup1\n          sload\n          swap2\n          tag_434\n          dup4\n          tag_1\n          jump\t// in\n        tag_434:\n          dup1\n          dup7\n          mstore\n          swap3\n          dup3\n          dup2\n          and\n          swap1\n            /* \"lib/solmate/src/tokens/ERC20.sol\":1056:1076  string public symbol */\n          dup2\n          iszero\n          tag_435\n          jumpi\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          pop\n          0x01\n          eq\n          tag_437\n          jumpi\n        tag_438:\n          pop\n          pop\n          pop\n          tag_439\n          dup3\n          tag_440\n          swap5\n          sub\n          dup4\n          tag_5\n          jump\t// in\n        tag_439:\n          mload\n          swap2\n          dup3\n          swap2\n          dup3\n          tag_7\n          jump\t// in\n        tag_440:\n          sub\n          swap1\n          return\n        tag_437:\n          swap5\n          pop\n          dup1\n          dup6\n          mstore\n          0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6\n        tag_441:\n          dup3\n          dup7\n          lt\n          tag_442\n          jumpi\n          pop\n          pop\n          pop\n          tag_439\n          dup3\n          0x20\n          tag_440\n          swap6\n          dup3\n          add\n          add\n          swap5\n          jump(tag_438)\n        tag_442:\n          dup1\n          sload\n          0x20\n          dup8\n          dup8\n          add\n          dup2\n          add\n          swap2\n          swap1\n          swap2\n          mstore\n          swap1\n          swap6\n          add\n          swap5\n          dup2\n          add\n          jump(tag_441)\n        tag_435:\n          tag_440\n          swap8\n          pop\n          dup7\n          swap4\n          pop\n          0x20\n          swap3\n          pop\n          tag_439\n          swap5\n          swap2\n          pop\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n          and\n          dup3\n          dup5\n          add\n          mstore\n          iszero\n          iszero\n          0x05\n          shl\n          dup3\n          add\n          add\n          swap5\n          jump(tag_438)\n        tag_114:\n          swap1\n          swap2\n          pop\n          jumpi(tag_183, callvalue)\n          jumpi(tag_183, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))\n            /* \"src/ReservoirPair.sol\":6915:6966  CustomSwapFeeChanged(customSwapFee, aCustomSwapFee) */\n          0x27f958341e42705d80835b6391cbe111df34533c7061beebb873bdb3454cc697\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap1\n          calldataload\n            /* \"src/ReservoirPair.sol\":3741:3748  factory */\n          swap2\n            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */\n          tag_448\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":3741:3748  factory */\n          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":3719:3729  msg.sender */\n          caller\n            /* \"src/ReservoirPair.sol\":3719:3749  msg.sender == address(factory) */\n          eq\n            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */\n          tag_16\n          jump\t// in\n        tag_448:\n            /* \"src/ReservoirPair.sol\":6936:6949  customSwapFee */\n          0x08\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n          dup2\n          mload\n          swap1\n          dup2\n          mstore\n          dup4\n          0x20\n          dup3\n          add\n          mstore\n            /* \"src/ReservoirPair.sol\":6915:6966  CustomSwapFeeChanged(customSwapFee, aCustomSwapFee) */\n          log1\n            /* \"src/ReservoirPair.sol\":6936:6949  customSwapFee */\n          0x08\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sstore\n            /* \"src/ReservoirPair.sol\":6976:7006  customSwapFee = aCustomSwapFee */\n          tag_168\n          tag_17\n          jump\t// in\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n        tag_112:\n          dup4\n          dup3\n          jumpi(tag_175, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_175\n          jumpi\n          0x20\n          swap1\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":12568:12601  IAssetManager public assetManager */\n          0x0b\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n          and\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_110:\n          dup4\n          jumpi(tag_166, callvalue)\n          jumpi(tag_166, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))\n          tag_458\n          tag_8\n          jump\t// in\n        tag_458:\n          pop\n          calldatasize\n            /* \"src/curve/stable/StablePair.sol\":5531:5926  assembly (\"memory-safe\") {... */\n          dup2\n          dup1\n          calldatacopy\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup1\n          dup1\n          calldatasize\n            /* \"src/curve/stable/StablePair.sol\":5406:5421  MINT_BURN_LOGIC */\n          dup2\n          immutable(\"0x69a6981f097d268300679363fc4cf56fca542798e8a407090df95d7866c686f5\")\n            /* \"src/curve/stable/StablePair.sol\":5531:5926  assembly (\"memory-safe\") {... */\n          gas\n          delegatecall\n          tag_459\n          jumpi\n          returndatasize\n          dup2\n          dup1\n          returndatacopy\n          returndatasize\n          swap1\n          revert\n        tag_459:\n          returndatasize\n          dup2\n          dup1\n          returndatacopy\n          returndatasize\n          swap1\n          return\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n        tag_108:\n          dup4\n          dup3\n          jumpi(tag_175, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_175\n          jumpi\n          0x20\n          swap1\n            /* \"src/ReservoirPair.sol\":17094:17122  uint256 public maxChangeRate */\n          0x01000d\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_106:\n          dup4\n          dup3\n          jumpi(tag_175, callvalue)\n          jumpi(tag_175, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))\n          dup1\n          0x20\n          swap3\n          0xffffffffffffffffffffffffffffffffffffffff\n          tag_469\n          tag_8\n          jump\t// in\n        tag_469:\n          and\n          dup2\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":1751:1792  mapping(address => uint256) public nonces */\n          0x05\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup5\n          mstore\n          keccak256\n          sload\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_104:\n          dup4\n          dup3\n          jumpi(tag_175, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_175\n          jumpi\n          0x20\n          swap1\n            /* \"src/ReservoirPair.sol\":3619:3671  uint256 public customPlatformFee = type(uint256).max */\n          0x0a\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_102:\n          dup4\n          dup3\n          jumpi(tag_175, callvalue)\n          jumpi(tag_175, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))\n          dup1\n          0x20\n          swap3\n          0xffffffffffffffffffffffffffffffffffffffff\n          tag_478\n          tag_8\n          jump\t// in\n        tag_478:\n          and\n          dup2\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":1337:1381  mapping(address => uint256) public balanceOf */\n          0x03\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup5\n          mstore\n          keccak256\n          sload\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_98:\n          pop\n          dup3\n          jumpi(tag_166, callvalue)\n          dup1\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_166\n          jumpi\n          pop\n            /* \"src/curve/stable/StablePair.sol\":1832:1864  AmplificationData public ampData */\n          0x010010\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n          dup2\n          mload\n          0xffffffffffffffff\n          dup1\n          dup4\n          and\n          dup3\n          mstore\n          swap3\n          dup3\n          swap1\n          shr\n          dup4\n          and\n          0x20\n          dup3\n          add\n          mstore\n          0x80\n          dup3\n          dup2\n          shr\n          swap1\n          swap4\n          and\n          0x40\n          dup3\n          add\n          mstore\n          0xc0\n          swap2\n          swap1\n          swap2\n          shr\n          0x60\n          dup3\n          add\n          mstore\n          return\n        tag_96:\n          dup4\n          dup3\n          jumpi(tag_175, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_175\n          jumpi\n          0x20\n          swap1\n            /* \"src/ReservoirPair.sol\":3460:3482  uint256 public swapFee */\n          0x07\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_94:\n          swap2\n          pop\n          jumpi(tag_183, callvalue)\n          jumpi(tag_183, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))\n          dup2\n          calldataload\n            /* \"src/ReservoirPair.sol\":3741:3748  factory */\n          swap2\n            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */\n          tag_499\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":3741:3748  factory */\n          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":3719:3729  msg.sender */\n          caller\n            /* \"src/ReservoirPair.sol\":3719:3749  msg.sender == address(factory) */\n          eq\n            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */\n          tag_16\n          jump\t// in\n        tag_499:\n            /* \"src/ReservoirPair.sol\":17789:17807  0 < aMaxChangeRate */\n          dup3\n          iszero\n          iszero\n            /* \"src/ReservoirPair.sol\":17789:17847  0 < aMaxChangeRate && aMaxChangeRate <= MAX_CHANGE_PER_SEC */\n          dup1\n          tag_500\n          jumpi\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n        tag_501:\n            /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */\n          iszero\n          tag_502\n          jumpi\n            /* \"src/ReservoirPair.sol\":17917:17930  maxChangeRate */\n          pop\n            /* \"src/ReservoirPair.sol\":17896:17947  MaxChangeRateUpdated(maxChangeRate, aMaxChangeRate) */\n          0x807b9f5907da3f00bf587e77bc07247e1c7ff5ae46c93a584b3a075be0b1bac2\n            /* \"src/ReservoirPair.sol\":17917:17930  maxChangeRate */\n          0x01000d\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap2\n          dup3\n          sload\n          dup2\n          mload\n          swap1\n          dup2\n          mstore\n          dup5\n          0x20\n          dup3\n          add\n          mstore\n            /* \"src/ReservoirPair.sol\":17896:17947  MaxChangeRateUpdated(maxChangeRate, aMaxChangeRate) */\n          log1\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sstore\n          dup1\n          return\n            /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */\n        tag_502:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x20\n            /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */\n          0x64\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap3\n          mload\n            /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */\n          swap2\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          dup3\n          add\n          mstore\n          0x1d\n          0x24\n          dup3\n          add\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mstore\n            /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */\n          0x4f573a20494e56414c49445f4348414e47455f5045525f5345434f4e44000000\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x44\n          dup3\n          add\n            /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */\n          mstore\n          revert\n            /* \"src/ReservoirPair.sol\":17789:17847  0 < aMaxChangeRate && aMaxChangeRate <= MAX_CHANGE_PER_SEC */\n        tag_500:\n            /* \"src/ReservoirPair.sol\":17811:17847  aMaxChangeRate <= MAX_CHANGE_PER_SEC */\n          pop\n            /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */\n          0x2386f26fc10000\n            /* \"src/ReservoirPair.sol\":17811:17847  aMaxChangeRate <= MAX_CHANGE_PER_SEC */\n          dup4\n          gt\n          iszero\n            /* \"src/ReservoirPair.sol\":17789:17847  0 < aMaxChangeRate && aMaxChangeRate <= MAX_CHANGE_PER_SEC */\n          jump(tag_501)\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n        tag_92:\n          dup4\n          dup3\n          jumpi(tag_175, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_175\n          jumpi\n          0x20\n          swap1\n            /* \"src/ReservoirPair.sol\":17128:17159  uint256 public prevClampedPrice */\n          0x01000e\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_90:\n          dup4\n          swap1\n          jumpi(tag_175, callvalue)\n          dup3\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_175\n          jumpi\n          dup1\n          calldataload\n          swap1\n          0xffffffffffffffff\n          swap1\n          dup2\n          dup4\n          and\n          dup1\n          swap4\n          sub\n          tag_398\n          jumpi\n          calldataload(0x24)\n          swap1\n          dup3\n          dup3\n          and\n          swap4\n          dup5\n          dup4\n          sub\n          tag_191\n          jumpi\n            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */\n          tag_516\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":3741:3748  factory */\n          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":3719:3729  msg.sender */\n          caller\n            /* \"src/ReservoirPair.sol\":3719:3749  msg.sender == address(factory) */\n          eq\n            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */\n          tag_16\n          jump\t// in\n        tag_516:\n            /* \"src/libraries/StableMath.sol\":521:522  1 */\n          0x01\n            /* \"src/curve/stable/StablePair.sol\":3011:3042  aFutureARaw >= StableMath.MIN_A */\n          dup2\n          lt\n          iszero\n            /* \"src/curve/stable/StablePair.sol\":3011:3077  aFutureARaw >= StableMath.MIN_A && aFutureARaw <= StableMath.MAX_A */\n          dup1\n          tag_517\n          jumpi\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n        tag_518:\n            /* \"src/libraries/StableMath.sol\":607:613  10_000 */\n          iszero\n          tag_519\n          jumpi\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x64\n            /* \"src/libraries/StableMath.sol\":320:323  100 */\n          mul\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup4\n          dup2\n          and\n            /* \"src/libraries/StableMath.sol\":320:323  100 */\n          swap5\n          dup2\n          dup7\n          sub\n          tag_521\n          jumpi\n            /* \"src/curve/stable/StablePair.sol\":3205:3235  aFutureATime - block.timestamp */\n          tag_523\n            /* \"src/curve/stable/StablePair.sol\":3220:3235  block.timestamp */\n          swap1\n          timestamp\n            /* \"src/curve/stable/StablePair.sol\":3205:3235  aFutureATime - block.timestamp */\n          swap1\n          tag_11\n          jump\t// in\n        tag_523:\n            /* \"src/libraries/StableMath.sol\":409:415  1 days */\n          0x015180\n            /* \"src/curve/stable/StablePair.sol\":3253:3289  duration >= StableMath.MIN_RAMP_TIME */\n          dup2\n          lt\n            /* \"src/libraries/StableMath.sol\":409:415  1 days */\n          tag_524\n          jumpi\n            /* \"src/curve/stable/StablePair.sol\":3351:3372  _getCurrentAPrecise() */\n          tag_526\n          tag_47\n          jump\t// in\n        tag_526:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap3\n            /* \"src/libraries/StableMath.sol\":786:787  2 */\n          0x02\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup7\n          dup6\n          and\n            /* \"src/curve/stable/StablePair.sol\":3558:3756  lFutureAPrecise > lCurrentAPrecise... */\n          swap3\n            /* \"src/curve/stable/StablePair.sol\":3558:3592  lFutureAPrecise > lCurrentAPrecise */\n          dup4\n          dup10\n          gt\n            /* \"src/curve/stable/StablePair.sol\":3558:3756  lFutureAPrecise > lCurrentAPrecise... */\n          0x00\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          eq\n          tag_527\n          jumpi\n            /* \"src/curve/stable/StablePair.sol\":3607:3674  Math.ceilDiv(lFutureAPrecise * 1 days, lCurrentAPrecise * duration) */\n          tag_529\n            /* \"src/curve/stable/StablePair.sol\":3620:3644  lFutureAPrecise * 1 days */\n          swap1\n          dup9\n            /* \"src/curve/stable/StablePair.sol\":3646:3673  lCurrentAPrecise * duration */\n          tag_530\n            /* \"src/curve/stable/StablePair.sol\":3620:3644  lFutureAPrecise * 1 days */\n          tag_531\n          dup13\n          tag_38\n          jump\t// in\n        tag_531:\n            /* \"src/curve/stable/StablePair.sol\":3646:3673  lCurrentAPrecise * duration */\n          swap3\n          dup8\n          tag_41\n          jump\t// in\n        tag_530:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap2\n          and\n            /* \"src/curve/stable/StablePair.sol\":3607:3674  Math.ceilDiv(lFutureAPrecise * 1 days, lCurrentAPrecise * duration) */\n          tag_43\n          jump\t// in\n        tag_529:\n            /* \"src/curve/stable/StablePair.sol\":3774:3823  dailyRate <= StableMath.MAX_AMP_UPDATE_DAILY_RATE */\n          gt\n            /* \"src/libraries/StableMath.sol\":786:787  2 */\n          tag_533\n          jumpi\n          pop\n            /* \"src/curve/stable/StablePair.sol\":3220:3235  block.timestamp */\n          timestamp\n            /* \"src/libraries/StableMath.sol\":786:787  2 */\n          0x80\n          dup2\n          dup2\n          shl\n          0xffffffffffffffff00000000000000000000000000000000\n          and\n          swap4\n          dup11\n          shl\n          0xffffffffffffffff0000000000000000\n          and\n          swap1\n          swap3\n          or\n          swap3\n          swap1\n          swap3\n          or\n          0xc0\n          dup6\n          swap1\n          shl\n          0xffffffffffffffff000000000000000000000000000000000000000000000000\n          and\n          or\n            /* \"src/curve/stable/StablePair.sol\":3860:3867  ampData */\n          0x010010\n            /* \"src/libraries/StableMath.sol\":786:787  2 */\n          sstore\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap7\n          mload\n          0xffffffffffffffff\n          swap3\n          dup4\n          and\n          dup2\n          mstore\n          swap5\n          dup3\n          and\n          0x20\n          dup7\n          add\n          mstore\n          swap3\n          swap1\n          swap3\n          and\n          dup3\n          and\n          0x40\n          dup5\n          add\n          mstore\n          and\n          0x60\n          dup3\n          add\n          mstore\n            /* \"src/libraries/StableMath.sol\":786:787  2 */\n          swap1\n          swap2\n            /* \"src/curve/stable/StablePair.sol\":4054:4133  RampA(lCurrentAPrecise, lFutureAPrecise, uint64(block.timestamp), aFutureATime) */\n          0x91e3c84fe7f917d978f2dacc9d91d4e48b43b66e15e0526bda0a0866bbb7949d\n          swap2\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap1\n          dup2\n          swap1\n          dup2\n          add\n            /* \"src/curve/stable/StablePair.sol\":4054:4133  RampA(lCurrentAPrecise, lFutureAPrecise, uint64(block.timestamp), aFutureATime) */\n          sub\n          swap1\n          log1\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup1\n          return\n            /* \"src/libraries/StableMath.sol\":786:787  2 */\n        tag_533:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x64\n          swap1\n          0x20\n          dup11\n          mload\n            /* \"src/libraries/StableMath.sol\":786:787  2 */\n          swap2\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          dup3\n          add\n          mstore\n          0x15\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x24\n            /* \"src/libraries/StableMath.sol\":786:787  2 */\n          dup3\n          add\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mstore\n            /* \"src/libraries/StableMath.sol\":786:787  2 */\n          0x53503a20414d505f524154455f544f4f5f484947480000000000000000000000\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x44\n          dup3\n          add\n            /* \"src/libraries/StableMath.sol\":786:787  2 */\n          mstore\n          revert\n            /* \"src/curve/stable/StablePair.sol\":3558:3756  lFutureAPrecise > lCurrentAPrecise... */\n        tag_527:\n            /* \"src/curve/stable/StablePair.sol\":3689:3756  Math.ceilDiv(lCurrentAPrecise * 1 days, lFutureAPrecise * duration) */\n          tag_536\n            /* \"src/curve/stable/StablePair.sol\":3702:3727  lCurrentAPrecise * 1 days */\n          swap1\n          dup9\n            /* \"src/curve/stable/StablePair.sol\":3729:3755  lFutureAPrecise * duration */\n          tag_530\n            /* \"src/curve/stable/StablePair.sol\":3702:3727  lCurrentAPrecise * 1 days */\n          tag_538\n          dup10\n          tag_38\n          jump\t// in\n        tag_538:\n            /* \"src/curve/stable/StablePair.sol\":3729:3755  lFutureAPrecise * duration */\n          swap3\n          dup13\n          tag_41\n          jump\t// in\n            /* \"src/curve/stable/StablePair.sol\":3689:3756  Math.ceilDiv(lCurrentAPrecise * 1 days, lFutureAPrecise * duration) */\n        tag_536:\n            /* \"src/curve/stable/StablePair.sol\":3558:3756  lFutureAPrecise > lCurrentAPrecise... */\n          jump(tag_529)\n            /* \"src/libraries/StableMath.sol\":409:415  1 days */\n        tag_524:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x64\n          dup4\n          0x20\n          dup11\n          mload\n            /* \"src/libraries/StableMath.sol\":409:415  1 days */\n          swap2\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          dup3\n          add\n          mstore\n          0x14\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x24\n            /* \"src/libraries/StableMath.sol\":409:415  1 days */\n          dup3\n          add\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mstore\n            /* \"src/libraries/StableMath.sol\":409:415  1 days */\n          0x53503a20494e56414c49445f4455524154494f4e000000000000000000000000\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x44\n          dup3\n          add\n            /* \"src/libraries/StableMath.sol\":409:415  1 days */\n          mstore\n          revert\n            /* \"src/libraries/StableMath.sol\":320:323  100 */\n        tag_521:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x24\n          dup8\n          0x11\n          dup6\n          0x4e487b7100000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          mstore\n          revert\n            /* \"src/libraries/StableMath.sol\":607:613  10_000 */\n        tag_519:\n          0x64\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup3\n          0x20\n          dup10\n          mload\n            /* \"src/libraries/StableMath.sol\":607:613  10_000 */\n          swap2\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          dup3\n          add\n          mstore\n          0x0d\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x24\n            /* \"src/libraries/StableMath.sol\":607:613  10_000 */\n          dup3\n          add\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mstore\n            /* \"src/libraries/StableMath.sol\":607:613  10_000 */\n          0x53503a20494e56414c49445f4100000000000000000000000000000000000000\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x44\n          dup3\n          add\n            /* \"src/libraries/StableMath.sol\":607:613  10_000 */\n          mstore\n          revert\n            /* \"src/curve/stable/StablePair.sol\":3011:3077  aFutureARaw >= StableMath.MIN_A && aFutureARaw <= StableMath.MAX_A */\n        tag_517:\n            /* \"src/curve/stable/StablePair.sol\":3046:3077  aFutureARaw <= StableMath.MAX_A */\n          pop\n            /* \"src/libraries/StableMath.sol\":607:613  10_000 */\n          0x2710\n            /* \"src/curve/stable/StablePair.sol\":3046:3077  aFutureARaw <= StableMath.MAX_A */\n          dup2\n          gt\n          iszero\n            /* \"src/curve/stable/StablePair.sol\":3011:3077  aFutureARaw >= StableMath.MIN_A && aFutureARaw <= StableMath.MAX_A */\n          jump(tag_518)\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n        tag_88:\n          dup4\n          dup3\n          jumpi(tag_175, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_175\n          jumpi\n          0x20\n          swap1\n          mload\n            /* \"src/ReservoirPair.sol\":2789:2796  500_000 */\n          0x07a120\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup2\n          mstore\n          return\n        tag_86:\n          dup4\n          dup3\n          jumpi(tag_175, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_175\n          jumpi\n          0x20\n          swap1\n          tag_547\n          tag_12\n          jump\t// in\n        tag_547:\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_84:\n          dup4\n          dup3\n          jumpi(tag_175, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_175\n          jumpi\n          dup1\n            /* \"src/ReservoirPair.sol\":17490:17522  factory.read(ORACLE_CALLER_NAME) */\n          tag_552\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap2\n          mload\n          tag_553\n          dup2\n          tag_4\n          jump\t// in\n        tag_553:\n          0x14\n          dup2\n          mstore\n          0x5368617265643a3a6f7261636c6543616c6c6572000000000000000000000000\n          0x20\n          dup3\n          add\n          mstore\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":17490:17497  factory */\n          swap3\n          dup4\n          swap2\n          dup3\n          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":17490:17522  factory.read(ORACLE_CALLER_NAME) */\n          tag_51\n          jump\t// in\n        tag_552:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":17562:17574  oracleCaller */\n          swap1\n          0x01000f\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap3\n          dup4\n          sload\n          swap1\n          dup2\n          and\n            /* \"src/ReservoirPair.sol\":17548:17574  lNewCaller != oracleCaller */\n          dup1\n          dup5\n          sub\n            /* \"src/ReservoirPair.sol\":17544:17690  if (lNewCaller != oracleCaller) {... */\n          tag_554\n          jumpi\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup6\n          dup1\n          return\n            /* \"src/ReservoirPair.sol\":17544:17690  if (lNewCaller != oracleCaller) {... */\n        tag_554:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup3\n            /* \"src/ReservoirPair.sol\":17595:17640  OracleCallerUpdated(oracleCaller, lNewCaller) */\n          0x262681b3b01b61ff6d02569759105771205cdd274fb3c45535b50632e0a3523f\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap2\n          0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n          swap5\n          mload\n          swap1\n          dup2\n          mstore\n            /* \"src/ReservoirPair.sol\":16881:16903  \"Shared::oracleCaller\" */\n          dup6\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x20\n            /* \"src/ReservoirPair.sol\":16881:16903  \"Shared::oracleCaller\" */\n          dup3\n          add\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mstore\n            /* \"src/ReservoirPair.sol\":17595:17640  OracleCallerUpdated(oracleCaller, lNewCaller) */\n          log1\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n          or\n          swap1\n          sstore\n            /* \"src/ReservoirPair.sol\":17544:17690  if (lNewCaller != oracleCaller) {... */\n          dup2\n          dup1\n          dup1\n          dup1\n          dup1\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup6\n          dup1\n          return\n        tag_82:\n          dup4\n          dup3\n          jumpi(tag_175, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_175\n          jumpi\n          0x20\n          swap1\n          mload\n          0xff\n            /* \"lib/solmate/src/tokens/ERC20.sol\":1083:1114  uint8 public immutable decimals */\n          immutable(\"0xb7b2278e6c1d8d0abc309f6bf9256046dfb6cd1d61f6bb10388e8ea4928d3539\")\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n          dup2\n          mstore\n          return\n        tag_80:\n          dup4\n          dup3\n          jumpi(tag_175, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_175\n          jumpi\n          0x20\n          swap1\n          0xffffffffffffffff\n          0x64\n            /* \"src/curve/stable/StablePair.sol\":11218:11239  _getCurrentAPrecise() */\n          dup2\n          tag_564\n          tag_47\n          jump\t// in\n        tag_564:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n          div\n          swap2\n          mload\n          swap2\n          and\n          dup2\n          mstore\n          return\n        tag_78:\n          dup4\n          dup3\n          jumpi(tag_175, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_175\n          jumpi\n          0x20\n          swap1\n            /* \"src/ReservoirPair.sol\":3587:3613  uint256 public platformFee */\n          0x09\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_76:\n          swap1\n          dup4\n          jumpi(tag_166, callvalue)\n          jumpi(tag_166, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x60))\n          tag_573\n          tag_8\n          jump\t// in\n        tag_573:\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3594:3620  Transfer(from, to, amount) */\n          0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          tag_574\n          tag_9\n          jump\t// in\n        tag_574:\n          swap5\n          calldataload(0x44)\n          dup6\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup1\n          swap6\n          and\n          swap5\n          dup6\n          dup8\n          mstore\n          0x20\n          swap9\n          dup5\n          dup11\n          swap6\n          dup7\n          mstore\n          dup4\n          dup10\n          keccak256\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3225:3235  msg.sender */\n          caller\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup11\n          mstore\n          dup7\n          mstore\n          dup4\n          dup10\n          keccak256\n          sload\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3287:3315  allowed != type(uint256).max */\n          dup6\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3298:3315  type(uint256).max */\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3287:3315  allowed != type(uint256).max */\n          dup3\n          sub\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3283:3363  if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount */\n          tag_575\n          jumpi\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n        tag_576:\n          pop\n          pop\n          pop\n          dup7\n          dup9\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3374:3383  balanceOf */\n          0x03\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup6\n          mstore\n          dup3\n          dup9\n          keccak256\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3374:3399  balanceOf[from] -= amount */\n          tag_577\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup6\n          dup3\n          sload\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3374:3399  balanceOf[from] -= amount */\n          tag_11\n          jump\t// in\n        tag_577:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap1\n          sstore\n          and\n          swap6\n          dup7\n          dup2\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3374:3383  balanceOf */\n          0x03\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup5\n          mstore\n          keccak256\n          dup2\n          dup2\n          sload\n          add\n          swap1\n          sstore\n          dup6\n          mload\n          swap1\n          dup2\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3594:3620  Transfer(from, to, amount) */\n          log3\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mload\n          0x01\n          dup2\n          mstore\n          return\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3283:3363  if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount */\n        tag_575:\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3347:3363  allowed - amount */\n          tag_578\n          swap2\n          tag_11\n          jump\t// in\n        tag_578:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap1\n          dup9\n          dup11\n          mstore\n          dup7\n          mstore\n          dup4\n          dup10\n          keccak256\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3225:3235  msg.sender */\n          caller\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup11\n          mstore\n          dup7\n          mstore\n          dup4\n          dup10\n          keccak256\n          sstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3283:3363  if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount */\n          dup11\n          dup1\n          dup6\n          jump(tag_576)\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n        tag_74:\n          dup4\n          dup3\n          jumpi(tag_175, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_175\n          jumpi\n          0x20\n          swap1\n            /* \"lib/solmate/src/tokens/ERC20.sol\":1304:1330  uint256 public totalSupply */\n          0x02\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_72:\n          dup4\n          dup3\n          jumpi(tag_175, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_175\n          jumpi\n          0x20\n          swap1\n          mload\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":2915:2944  ERC20 public immutable token0 */\n          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n          dup2\n          mstore\n          return\n        tag_70:\n          dup4\n          jumpi(tag_166, callvalue)\n          dup1\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_166\n          jumpi\n          tag_168\n          tag_17\n          jump\t// in\n        tag_68:\n          swap1\n          swap2\n          pop\n          jumpi(tag_183, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_183\n          jumpi\n          0x20\n          swap3\n          tag_596\n          tag_8\n          jump\t// in\n        tag_596:\n          swap2\n          dup4\n          calldataload(0x24)\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2561:2571  msg.sender */\n          swap3\n          dup4\n          swap3\n          caller\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup3\n          mstore\n          dup8\n          mstore\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup3\n          dup3\n          keccak256\n          swap6\n          and\n          swap5\n          dup6\n          dup3\n          mstore\n          dup8\n          mstore\n          keccak256\n          sstore\n          dup3\n          mload\n          swap1\n          dup2\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2606:2643  Approval(msg.sender, spender, amount) */\n          0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2561:2571  msg.sender */\n          dup5\n          caller\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2606:2643  Approval(msg.sender, spender, amount) */\n          swap3\n          log3\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mload\n          0x01\n          dup2\n          mstore\n          return\n        tag_66:\n          dup4\n          dup3\n          jumpi(tag_175, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_175\n          jumpi\n          0x80\n          swap1\n          tag_601\n          tag_13\n          jump\t// in\n        tag_601:\n          swap1\n          0xffffffffffffffffffffffffff\n          swap2\n          dup3\n          dup2\n          mload\n          and\n            /* \"src/ReservoirPair.sol\":5849:5864  lSlot0.reserve1 */\n          swap3\n          0x20\n          dup3\n          add\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mload\n          and\n            /* \"src/ReservoirPair.sol\":5920:5942  lSlot0.packedTimestamp */\n          swap2\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0xffff\n            /* \"src/ReservoirPair.sol\":5962:5974  lSlot0.index */\n          0x60\n            /* \"src/ReservoirPair.sol\":4678:4688  0x7FFFFFFF */\n          0x7fffffff\n            /* \"src/ReservoirPair.sol\":5920:5942  lSlot0.packedTimestamp */\n          dup4\n          dup6\n          add\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mload\n            /* \"src/ReservoirPair.sol\":4662:4688  aRawTimestamp & 0x7FFFFFFF */\n          and\n            /* \"src/ReservoirPair.sol\":5962:5974  lSlot0.index */\n          swap4\n          add\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mload\n          and\n          swap3\n          dup2\n          mload\n          swap5\n          dup6\n          mstore\n            /* \"src/ReservoirPair.sol\":5849:5864  lSlot0.reserve1 */\n          0x20\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup6\n          add\n          mstore\n          dup4\n          add\n          mstore\n            /* \"src/ReservoirPair.sol\":5962:5974  lSlot0.index */\n          0x60\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup3\n          add\n          mstore\n          return\n        tag_64:\n          swap3\n          pop\n          pop\n          jumpi(tag_183, callvalue)\n          dup3\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_183\n          jumpi\n          dup3\n          dup1\n          sload\n          tag_606\n          dup2\n          tag_1\n          jump\t// in\n        tag_606:\n          dup1\n          dup6\n          mstore\n          swap2\n          0x01\n          swap2\n          dup1\n          dup4\n          and\n          swap1\n          dup2\n          iszero\n          tag_435\n          jumpi\n          pop\n          0x01\n          eq\n          tag_609\n          jumpi\n          pop\n          pop\n          pop\n          tag_439\n          dup3\n          tag_440\n          swap5\n          sub\n          dup4\n          tag_5\n          jump\t// in\n        tag_609:\n          dup1\n          dup1\n          swap7\n          pop\n          mstore\n          0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563\n        tag_613:\n          dup3\n          dup7\n          lt\n          tag_614\n          jumpi\n          pop\n          pop\n          pop\n          tag_439\n          dup3\n          0x20\n          tag_440\n          swap6\n          dup3\n          add\n          add\n          swap5\n          jump(tag_438)\n        tag_614:\n          dup1\n          sload\n          0x20\n          dup8\n          dup8\n          add\n          dup2\n          add\n          swap2\n          swap1\n          swap2\n          mstore\n          swap1\n          swap6\n          add\n          swap5\n          dup2\n          add\n          jump(tag_613)\n        tag_1:\n          swap1\n          0x01\n          dup3\n          dup2\n          shr\n          swap3\n          and\n          dup1\n          iszero\n          tag_616\n          jumpi\n        tag_617:\n          0x20\n          dup4\n          lt\n          eq\n          tag_618\n          jumpi\n          jump\t// out\n        tag_618:\n          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n          mstore(0x04, 0x22)\n          revert(0x00, 0x24)\n        tag_616:\n          swap2\n          0x7f\n          and\n          swap2\n          jump(tag_617)\n        tag_2:\n          0x80\n          dup2\n          add\n          swap1\n          dup2\n          lt\n          0xffffffffffffffff\n          dup3\n          gt\n          or\n          tag_620\n          jumpi\n          0x40\n          mstore\n          jump\t// out\n        tag_620:\n          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n          mstore(0x04, 0x41)\n          revert(0x00, 0x24)\n        tag_3:\n          0xffffffffffffffff\n          dup2\n          gt\n          tag_620\n          jumpi\n          0x40\n          mstore\n          jump\t// out\n        tag_4:\n          0x40\n          dup2\n          add\n          swap1\n          dup2\n          lt\n          0xffffffffffffffff\n          dup3\n          gt\n          or\n          tag_620\n          jumpi\n          0x40\n          mstore\n          jump\t// out\n        tag_5:\n          swap1\n          0x1f\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n          swap2\n          add\n          and\n          dup2\n          add\n          swap1\n          dup2\n          lt\n          0xffffffffffffffff\n          dup3\n          gt\n          or\n          tag_620\n          jumpi\n          0x40\n          mstore\n          jump\t// out\n        tag_6:\n          0x00\n        tag_628:\n          dup4\n          dup2\n          lt\n          tag_629\n          jumpi\n          pop\n          pop\n          0x00\n          swap2\n          add\n          mstore\n          jump\t// out\n        tag_629:\n          dup2\n          dup2\n          add\n          mload\n          dup4\n          dup3\n          add\n          mstore\n          0x20\n          add\n          jump(tag_628)\n        tag_7:\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n          0x1f\n          0x40\n          swap4\n          0x20\n          dup5\n          mstore\n          tag_631\n          dup2\n          mload\n          dup1\n          swap3\n          dup2\n          0x20\n          dup9\n          add\n          mstore\n          0x20\n          dup9\n          dup9\n          add\n          swap2\n          add\n          tag_6\n          jump\t// in\n        tag_631:\n          add\n          and\n          add\n          add\n          swap1\n          jump\t// out\n        tag_8:\n          calldataload(0x04)\n          swap1\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup3\n          and\n          dup3\n          sub\n          tag_632\n          jumpi\n          jump\t// out\n        tag_632:\n          0x00\n          dup1\n          revert\n        tag_9:\n          calldataload(0x24)\n          swap1\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup3\n          and\n          dup3\n          sub\n          tag_632\n          jumpi\n          jump\t// out\n        tag_11:\n          swap2\n          swap1\n          dup3\n          sub\n          swap2\n          dup3\n          gt\n          tag_636\n          jumpi\n          jump\t// out\n        tag_636:\n          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n          mstore(0x04, 0x11)\n          revert(0x00, 0x24)\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5327:5504  function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {... */\n        tag_12:\n          0x00\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5410:5423  block.chainid */\n          chainid\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5427:5443  INITIAL_CHAIN_ID */\n          immutable(\"0x81290bb363e768cff9ff9a5d447e434874948b933698048b966fdf5d744bf636\")\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5410:5443  block.chainid == INITIAL_CHAIN_ID */\n          sub\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5427:5443  INITIAL_CHAIN_ID */\n          tag_638\n          jumpi\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5446:5470  INITIAL_DOMAIN_SEPARATOR */\n          pop\n          immutable(\"0x34382e0db9f4d1365b2614bb97467901a574db9e05159d2f14a2053ade673b06\")\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5327:5504  function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {... */\n          swap1\n          jump\t// out\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5410:5497  block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator() */\n        tag_638:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mload(0x40)\n          dup2\n          sload\n          dup3\n          swap2\n          tag_641\n          dup3\n          tag_1\n          jump\t// in\n        tag_641:\n          dup1\n          dup3\n          mstore\n          dup2\n          0x20\n          swap5\n          dup6\n          dup3\n          add\n          swap5\n          0x01\n          swap1\n          dup8\n          dup3\n          dup3\n          and\n          swap2\n          dup3\n          0x00\n          eq\n          tag_642\n          jumpi\n          pop\n          pop\n          0x01\n          eq\n          tag_644\n          jumpi\n        tag_645:\n          pop\n          tag_646\n          swap3\n          pop\n          sub\n          dup3\n          tag_5\n          jump\t// in\n        tag_646:\n          mload\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5789:5811  keccak256(bytes(name)) */\n          swap1\n          keccak256\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap2\n          mload(0x40)\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5640:5935  abi.encode(... */\n          swap2\n          dup3\n          add\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap3\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5672:5767  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n          0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup5\n          mstore\n          0x40\n          dup4\n          add\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5833:5847  keccak256(\"1\") */\n          0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x60\n          dup4\n          add\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5410:5423  block.chainid */\n          chainid\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x80\n          dup4\n          add\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5912:5916  this */\n          address\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0xa0\n          dup4\n          add\n          mstore\n          0xa0\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5640:5935  abi.encode(... */\n          dup3\n          mstore\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0xc0\n          dup3\n          add\n          swap1\n          dup3\n          dup3\n          lt\n          0xffffffffffffffff\n          dup4\n          gt\n          or\n          tag_647\n          jumpi\n          pop\n          0x40\n          mstore\n          mload\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5613:5949  keccak256(... */\n          swap1\n          keccak256\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5327:5504  function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {... */\n          swap1\n          jump\t// out\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n        tag_647:\n          dup1\n          0x4e487b7100000000000000000000000000000000000000000000000000000000\n          0x24\n          swap3\n          mstore\n          mstore(0x04, 0x41)\n          revert\n        tag_644:\n          dup8\n          dup1\n          mstore\n          dup7\n          swap2\n          pop\n          dup8\n          swap1\n          0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563\n        tag_649:\n          dup6\n          dup4\n          lt\n          tag_650\n          jumpi\n          pop\n          pop\n          tag_646\n          swap4\n          pop\n          dup3\n          add\n          add\n          codesize\n          jump(tag_645)\n        tag_650:\n          dup1\n          sload\n          dup4\n          dup9\n          add\n          dup6\n          add\n          mstore\n          dup7\n          swap5\n          pop\n          dup9\n          swap4\n          swap1\n          swap3\n          add\n          swap2\n          dup2\n          add\n          jump(tag_649)\n        tag_642:\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n          and\n          dup9\n          mstore\n          tag_646\n          swap6\n          iszero\n          iszero\n          0x05\n          shl\n          dup6\n          add\n          add\n          swap3\n          pop\n          codesize\n          swap2\n          pop\n          tag_645\n          swap1\n          pop\n          jump\n        tag_13:\n          mload(0x40)\n          swap1\n          tag_652\n          dup3\n          tag_2\n          jump\t// in\n        tag_652:\n          dup2\n          0x60\n            /* \"src/ReservoirPair.sol\":5783:5789  _slot0 */\n          0x06\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n          0xffffffffffffffffffffffffff\n          dup1\n          dup3\n          and\n          dup5\n          mstore\n          dup2\n          0x68\n          shr\n          and\n          0x20\n          dup5\n          add\n          mstore\n          0xffffffff\n          dup2\n          0xd0\n          shr\n          and\n          0x40\n          dup5\n          add\n          mstore\n          0xf0\n          shr\n          swap2\n          add\n          mstore\n          jump\t// out\n            /* \"src/ReservoirPair.sol\":4905:5467  function _lockAndLoad()... */\n        tag_14:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          tag_653\n          tag_13\n          jump\t// in\n        tag_653:\n          swap1\n          0xffffffffffffffffffffffffff\n          swap2\n          dup3\n          dup2\n          mload\n          and\n            /* \"src/ReservoirPair.sol\":5196:5211  lSlot0.reserve1 */\n          swap3\n          0x20\n          dup3\n          add\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mload\n          and\n            /* \"src/ReservoirPair.sol\":5273:5295  lSlot0.packedTimestamp */\n          swap2\n          0x40\n          dup3\n          add\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mload\n            /* \"src/ReservoirPair.sol\":4662:4688  aRawTimestamp & 0x7FFFFFFF */\n          swap1\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x01\n            /* \"src/ReservoirPair.sol\":4662:4688  aRawTimestamp & 0x7FFFFFFF */\n          dup1\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0xffff\n            /* \"src/ReservoirPair.sol\":5315:5327  lSlot0.index */\n          0x60\n            /* \"src/ReservoirPair.sol\":4678:4688  0x7FFFFFFF */\n          0x7fffffff\n            /* \"src/ReservoirPair.sol\":4662:4688  aRawTimestamp & 0x7FFFFFFF */\n          dup7\n          and\n            /* \"src/ReservoirPair.sol\":5315:5327  lSlot0.index */\n          swap7\n          add\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mload\n          and\n          swap4\n            /* \"src/ReservoirPair.sol\":4632:4634  31 */\n          0x1f\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          shr\n          and\n            /* \"src/ReservoirPair.sol\":4615:4639  aRawTimestamp >> 31 == 1 */\n          eq\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          tag_654\n          jumpi\n            /* \"src/ReservoirPair.sol\":4847:4853  _slot0 */\n          0x06\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n          0xffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffff\n          0xffffffff0000000000000000000000000000000000000000000000000000\n            /* \"src/ReservoirPair.sol\":4817:4824  1 << 31 */\n          0x80000000\n            /* \"src/ReservoirPair.sol\":4872:4892  aTimestamp | lLocked */\n          dup7\n          or\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0xd0\n          shl\n          and\n          swap2\n          and\n          or\n            /* \"src/ReservoirPair.sol\":4847:4853  _slot0 */\n          0x06\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sstore\n            /* \"src/ReservoirPair.sol\":4905:5467  function _lockAndLoad()... */\n          jump\t// out\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n        tag_654:\n          0x64\n            /* \"src/ReservoirPair.sol\":5273:5295  lSlot0.packedTimestamp */\n          0x40\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mload\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n            /* \"src/ReservoirPair.sol\":5196:5211  lSlot0.reserve1 */\n          0x20\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x04\n          dup3\n          add\n          mstore\n          0x0a\n          0x24\n          dup3\n          add\n          mstore\n          0x5245454e5452414e435900000000000000000000000000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n        tag_16:\n          iszero\n          tag_656\n          jumpi\n          jump\t// out\n        tag_656:\n          0x64\n          mload(0x40)\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          0x20\n          0x04\n          dup3\n          add\n          mstore\n          0x0c\n          0x24\n          dup3\n          add\n          mstore\n          0x503a20464f5242494444454e0000000000000000000000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n            /* \"src/ReservoirPair.sol\":7293:7635  function updateSwapFee() public {... */\n        tag_17:\n            /* \"src/ReservoirPair.sol\":7354:7367  customSwapFee */\n          0x08\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n          0x00\n            /* \"src/ReservoirPair.sol\":7371:7388  type(uint256).max */\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":7354:7388  customSwapFee != type(uint256).max */\n          dup3\n          eq\n            /* \"src/ReservoirPair.sol\":7371:7388  type(uint256).max */\n          tag_658\n          jumpi\n            /* \"src/ReservoirPair.sol\":7354:7443  customSwapFee != type(uint256).max ? customSwapFee : factory.get(swapFeeName).toUint256() */\n          pop\n        tag_660:\n            /* \"src/ReservoirPair.sol\":7469:7476  swapFee */\n          0x07\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n            /* \"src/ReservoirPair.sol\":7457:7476  _swapFee == swapFee */\n          dup1\n          dup3\n          eq\n            /* \"src/ReservoirPair.sol\":7453:7485  if (_swapFee == swapFee) return; */\n          tag_661\n          jumpi\n            /* \"src/ReservoirPair.sol\":2849:2855  20_000 */\n          0x4e20\n            /* \"src/ReservoirPair.sol\":7503:7527  _swapFee <= MAX_SWAP_FEE */\n          dup3\n          gt\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          tag_663\n          jumpi\n          0x40\n            /* \"src/ReservoirPair.sol\":7567:7600  SwapFeeChanged(swapFee, _swapFee) */\n          0xad321f810529281bbb90384fd6fecbdda41509a5ccd7bd5aed986ed827f6a026\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap2\n          dup2\n          mload\n          swap1\n          dup2\n          mstore\n          dup4\n          0x20\n          dup3\n          add\n          mstore\n            /* \"src/ReservoirPair.sol\":7567:7600  SwapFeeChanged(swapFee, _swapFee) */\n          log1\n            /* \"src/ReservoirPair.sol\":7469:7476  swapFee */\n          0x07\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sstore\n            /* \"src/ReservoirPair.sol\":7293:7635  function updateSwapFee() public {... */\n          jump\t// out\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n        tag_663:\n          0x64\n          mload(0x40)\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          0x20\n          0x04\n          dup3\n          add\n          mstore\n          0x13\n          0x24\n          dup3\n          add\n          mstore\n          0x503a20494e56414c49445f535741505f46454500000000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n            /* \"src/ReservoirPair.sol\":7453:7485  if (_swapFee == swapFee) return; */\n        tag_661:\n            /* \"src/ReservoirPair.sol\":7478:7485  return; */\n          pop\n          pop\n          jump\t// out\n            /* \"src/ReservoirPair.sol\":7354:7443  customSwapFee != type(uint256).max ? customSwapFee : factory.get(swapFeeName).toUint256() */\n        tag_658:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap1\n          pop\n          mload(0x40)\n          0x8eaa6ac000000000000000000000000000000000000000000000000000000000\n            /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */\n          dup2\n          mstore\n            /* \"src/ReservoirPair.sol\":7419:7430  swapFeeName */\n          immutable(\"0x4c21324e1a4fdca228db96f937188124acece199982b123b328bdd8fee41b354\")\n            /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */\n          0x04\n          dup3\n          add\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mstore\n            /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */\n          0x20\n            /* \"src/ReservoirPair.sol\":7407:7414  factory */\n          dup2\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x24\n            /* \"src/ReservoirPair.sol\":7407:7414  factory */\n          dup2\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":7407:7414  factory */\n          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */\n          gas\n          staticcall\n          swap2\n          dup3\n          iszero\n          tag_665\n          jumpi\n          dup1\n          swap3\n          tag_667\n          jumpi\n            /* \"src/ReservoirPair.sol\":7354:7443  customSwapFee != type(uint256).max ? customSwapFee : factory.get(swapFeeName).toUint256() */\n        tag_668:\n          pop\n          pop\n          jump(tag_660)\n            /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */\n        tag_667:\n          swap1\n          swap2\n          pop\n          0x20\n          dup3\n          returndatasize\n          dup3\n          gt\n          tag_669\n          jumpi\n        tag_670:\n          dup2\n          tag_671\n          0x20\n          swap4\n          dup4\n          tag_5\n          jump\t// in\n        tag_671:\n          dup2\n          add\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sub\n          slt\n          tag_166\n          jumpi\n          pop\n          mload\n            /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */\n          codesize\n          dup1\n          jump(tag_668)\n        tag_669:\n          returndatasize\n          swap2\n          pop\n          jump(tag_670)\n        tag_665:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mload(0x40)\n          swap1\n          returndatasize\n          swap1\n          dup3\n          returndatacopy\n          returndatasize\n          swap1\n          revert\n            /* \"src/ReservoirPair.sol\":7641:8058  function updatePlatformFee() public {... */\n        tag_18:\n            /* \"src/ReservoirPair.sol\":7722:7739  customPlatformFee */\n          0x0a\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n            /* \"src/ReservoirPair.sol\":7743:7760  type(uint256).max */\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":7722:7760  customPlatformFee != type(uint256).max */\n          dup2\n          eq\n            /* \"src/ReservoirPair.sol\":7743:7760  type(uint256).max */\n          tag_674\n          jumpi\n            /* \"src/ReservoirPair.sol\":7722:7826  customPlatformFee != type(uint256).max ? customPlatformFee : factory.read(PLATFORM_FEE_NAME).toUint256() */\n        tag_676:\n            /* \"src/ReservoirPair.sol\":7856:7867  platformFee */\n          0x09\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n            /* \"src/ReservoirPair.sol\":7840:7867  _platformFee == platformFee */\n          dup1\n          dup3\n          eq\n            /* \"src/ReservoirPair.sol\":7836:7876  if (_platformFee == platformFee) return; */\n          tag_661\n          jumpi\n            /* \"src/ReservoirPair.sol\":2789:2796  500_000 */\n          0x07a120\n            /* \"src/ReservoirPair.sol\":7894:7926  _platformFee <= MAX_PLATFORM_FEE */\n          dup3\n          gt\n            /* \"src/ReservoirPair.sol\":2439:2460  \"Shared::platformFee\" */\n          tag_679\n          jumpi\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x40\n            /* \"src/ReservoirPair.sol\":7970:8015  PlatformFeeChanged(platformFee, _platformFee) */\n          0xc98a8b10b63c929f7799380bb4a0c444c713ebf74d8732f944c915034121aad1\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap2\n          dup2\n          mload\n          swap1\n          dup2\n          mstore\n          dup4\n          0x20\n          dup3\n          add\n          mstore\n            /* \"src/ReservoirPair.sol\":7970:8015  PlatformFeeChanged(platformFee, _platformFee) */\n          log1\n            /* \"src/ReservoirPair.sol\":7856:7867  platformFee */\n          0x09\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sstore\n            /* \"src/ReservoirPair.sol\":7641:8058  function updatePlatformFee() public {... */\n          jump\t// out\n            /* \"src/ReservoirPair.sol\":2439:2460  \"Shared::platformFee\" */\n        tag_679:\n          0x64\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mload(0x40)\n            /* \"src/ReservoirPair.sol\":2439:2460  \"Shared::platformFee\" */\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          0x20\n          0x04\n          dup3\n          add\n          mstore\n          0x17\n          0x24\n          dup3\n          add\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mstore\n            /* \"src/ReservoirPair.sol\":2439:2460  \"Shared::platformFee\" */\n          0x503a20494e56414c49445f504c4154464f524d5f464545000000000000000000\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x44\n          dup3\n          add\n            /* \"src/ReservoirPair.sol\":2439:2460  \"Shared::platformFee\" */\n          mstore\n          revert\n            /* \"src/ReservoirPair.sol\":7722:7826  customPlatformFee != type(uint256).max ? customPlatformFee : factory.read(PLATFORM_FEE_NAME).toUint256() */\n        tag_674:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          pop\n            /* \"src/ReservoirPair.sol\":7783:7814  factory.read(PLATFORM_FEE_NAME) */\n          tag_681\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mload(0x40)\n          tag_682\n          dup2\n          tag_4\n          jump\t// in\n        tag_682:\n          0x13\n          dup2\n          mstore\n          0x5368617265643a3a706c6174666f726d46656500000000000000000000000000\n          0x20\n          dup3\n          add\n          mstore\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":7783:7790  factory */\n          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":7783:7814  factory.read(PLATFORM_FEE_NAME) */\n          tag_51\n          jump\t// in\n        tag_681:\n            /* \"src/ReservoirPair.sol\":7722:7826  customPlatformFee != type(uint256).max ? customPlatformFee : factory.read(PLATFORM_FEE_NAME).toUint256() */\n          jump(tag_676)\n            /* \"src/ReservoirPair.sol\":8509:8845  function _safeTransfer(address aToken, address aTo, uint256 aValue) internal returns (bool) {... */\n        tag_19:\n          swap2\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mload(0x40)\n            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */\n          swap1\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */\n          0x20\n          dup4\n          add\n          swap4\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0xa9059cbb00000000000000000000000000000000000000000000000000000000\n            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */\n          dup6\n          mstore\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */\n          0x24\n          dup4\n          add\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mstore\n            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */\n          0x44\n          dup3\n          add\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mstore\n            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */\n          0x44\n            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */\n          dup2\n          mstore\n          tag_683\n          dup2\n          tag_2\n          jump\t// in\n        tag_683:\n          0x00\n            /* \"src/ReservoirPair.sol\":8706:8764  aToken.call(abi.encodeWithSelector(SELECTOR, aTo, aValue)) */\n          swap3\n          dup4\n          swap3\n          dup4\n          dup1\n          swap4\n          mload\n          swap3\n          gas\n          call\n          swap1\n            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */\n          jumpi(tag_684, iszero(returndatasize))\n          returndatasize\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap1\n          0xffffffffffffffff\n          dup3\n          gt\n          tag_647\n          jumpi\n          mload(0x40)\n          swap2\n          tag_688\n            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */\n          0x20\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n          0x1f\n          dup5\n          add\n          and\n          add\n          dup5\n          tag_5\n          jump\t// in\n        tag_688:\n          dup3\n          mstore\n            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */\n          returndatasize\n          dup2\n            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */\n          0x20\n            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */\n          dup5\n          add\n          returndatacopy\n        tag_689:\n            /* \"src/ReservoirPair.sol\":8781:8838  success && (data.length == 0 || abi.decode(data, (bool))) */\n          dup3\n          tag_690\n          jumpi\n            /* \"src/ReservoirPair.sol\":8774:8838  return success && (data.length == 0 || abi.decode(data, (bool))) */\n          pop\n          pop\n            /* \"src/ReservoirPair.sol\":8509:8845  function _safeTransfer(address aToken, address aTo, uint256 aValue) internal returns (bool) {... */\n          swap1\n          jump\t// out\n            /* \"src/ReservoirPair.sol\":8781:8838  success && (data.length == 0 || abi.decode(data, (bool))) */\n        tag_690:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap1\n          dup1\n          swap3\n          pop\n          mload\n            /* \"src/ReservoirPair.sol\":8793:8809  data.length == 0 */\n          swap2\n          dup3\n          iszero\n            /* \"src/ReservoirPair.sol\":8793:8837  data.length == 0 || abi.decode(data, (bool)) */\n          swap3\n          dup4\n          iszero\n          tag_692\n          jumpi\n            /* \"src/ReservoirPair.sol\":8781:8838  success && (data.length == 0 || abi.decode(data, (bool))) */\n        tag_693:\n          pop\n          pop\n          pop\n            /* \"src/ReservoirPair.sol\":8509:8845  function _safeTransfer(address aToken, address aTo, uint256 aValue) internal returns (bool) {... */\n          swap1\n          jump\t// out\n            /* \"src/ReservoirPair.sol\":8793:8837  data.length == 0 || abi.decode(data, (bool)) */\n        tag_692:\n            /* \"src/ReservoirPair.sol\":8813:8837  abi.decode(data, (bool)) */\n          dup2\n          swap3\n          swap4\n          pop\n          swap1\n            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */\n          0x20\n            /* \"src/ReservoirPair.sol\":8813:8837  abi.decode(data, (bool)) */\n          swap2\n          dup2\n          add\n            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */\n          sub\n          slt\n          tag_175\n          jumpi\n            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */\n          0x20\n            /* \"src/ReservoirPair.sol\":8813:8837  abi.decode(data, (bool)) */\n          add\n            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */\n          mload\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap1\n          dup2\n          iszero\n          iszero\n          dup3\n          sub\n          tag_166\n          jumpi\n            /* \"src/ReservoirPair.sol\":8793:8837  data.length == 0 || abi.decode(data, (bool)) */\n          pop\n          codesize\n          dup1\n          dup1\n          jump(tag_693)\n            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */\n        tag_684:\n          0x60\n          swap1\n          jump(tag_689)\n            /* \"src/ReservoirPair.sol\":8981:9714  function _checkedTransfer(ERC20 aToken, address aDestination, uint256 aAmount, uint256 aReserve0, uint256 aReserve1)... */\n        tag_21:\n          swap4\n          swap1\n          swap2\n          swap3\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup1\n          swap6\n          and\n            /* \"src/ReservoirPair.sol\":9134:9187  _safeTransfer(address(aToken), aDestination, aAmount) */\n          swap2\n          tag_698\n          dup6\n          dup6\n          dup6\n          tag_19\n          jump\t// in\n        tag_698:\n            /* \"src/ReservoirPair.sol\":9133:9187  !_safeTransfer(address(aToken), aDestination, aAmount) */\n          iszero\n            /* \"src/ReservoirPair.sol\":9129:9708  if (!_safeTransfer(address(aToken), aDestination, aAmount)) {... */\n          tag_699\n          jumpi\n            /* \"src/ReservoirPair.sol\":8981:9714  function _checkedTransfer(ERC20 aToken, address aDestination, uint256 aAmount, uint256 aReserve0, uint256 aReserve1)... */\n        tag_700:\n          pop\n          pop\n          pop\n          pop\n          pop\n          pop\n          jump\t// out\n            /* \"src/ReservoirPair.sol\":9129:9708  if (!_safeTransfer(address(aToken), aDestination, aAmount)) {... */\n        tag_699:\n            /* \"src/ReservoirPair.sol\":9239:9245  token0 */\n          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup7\n          and\n            /* \"src/ReservoirPair.sol\":9229:9245  aToken == token0 */\n          dup4\n          eq\n          swap2\n            /* \"src/ReservoirPair.sol\":9229:9277  aToken == token0 ? token0Managed : token1Managed */\n          dup3\n          iszero\n          tag_701\n          jumpi\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0xffffffffffffffffffffffffff\n          dup1\n            /* \"src/ReservoirPair.sol\":9248:9261  token0Managed */\n          0x0c\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n          and\n            /* \"src/ReservoirPair.sol\":9229:9277  aToken == token0 ? token0Managed : token1Managed */\n        tag_703:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n          swap2\n            /* \"src/ReservoirPair.sol\":9312:9352  aToken == token0 ? aReserve0 : aReserve1 */\n          dup4\n          iszero\n          tag_704\n          jumpi\n          pop\n          swap6\n        tag_706:\n            /* \"src/ReservoirPair.sol\":9370:9398  reserveOut - tokenOutManaged */\n          dup6\n          tag_707\n          dup4\n          dup10\n          tag_11\n          jump\t// in\n        tag_707:\n            /* \"src/ReservoirPair.sol\":9370:9408  reserveOut - tokenOutManaged < aAmount */\n          lt\n          iszero\n          tag_719\n          jumpi\n            /* \"src/ReservoirPair.sol\":9471:9511  aAmount - (reserveOut - tokenOutManaged) */\n          tag_710\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap2\n            /* \"src/ReservoirPair.sol\":9482:9510  reserveOut - tokenOutManaged */\n          tag_711\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap2\n            /* \"src/ReservoirPair.sol\":9428:9440  assetManager */\n          0x0b\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n          and\n            /* \"src/ReservoirPair.sol\":9482:9510  reserveOut - tokenOutManaged */\n          swap8\n          tag_11\n          jump\t// in\n        tag_711:\n            /* \"src/ReservoirPair.sol\":9471:9511  aAmount - (reserveOut - tokenOutManaged) */\n          dup6\n          tag_11\n          jump\t// in\n        tag_710:\n            /* \"src/ReservoirPair.sol\":9428:9512  assetManager.returnAsset(aToken == token0, aAmount - (reserveOut - tokenOutManaged)) */\n          dup6\n          extcodesize\n          iszero\n          tag_632\n          jumpi\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x44\n          0x00\n          swap3\n          dup4\n          mload(0x40)\n            /* \"src/ReservoirPair.sol\":9428:9512  assetManager.returnAsset(aToken == token0, aAmount - (reserveOut - tokenOutManaged)) */\n          swap9\n          dup10\n          swap5\n          dup6\n          swap4\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x1566d96d00000000000000000000000000000000000000000000000000000000\n            /* \"src/ReservoirPair.sol\":9428:9512  assetManager.returnAsset(aToken == token0, aAmount - (reserveOut - tokenOutManaged)) */\n          dup6\n          mstore\n          0x04\n          dup6\n          add\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mstore\n          0x24\n          dup5\n          add\n          mstore\n            /* \"src/ReservoirPair.sol\":9428:9512  assetManager.returnAsset(aToken == token0, aAmount - (reserveOut - tokenOutManaged)) */\n          gas\n          call\n          swap4\n          dup5\n          iszero\n          tag_714\n          jumpi\n            /* \"src/ReservoirPair.sol\":9538:9591  _safeTransfer(address(aToken), aDestination, aAmount) */\n          tag_716\n            /* \"src/ReservoirPair.sol\":9428:9512  assetManager.returnAsset(aToken == token0, aAmount - (reserveOut - tokenOutManaged)) */\n          swap5\n          tag_717\n          jumpi\n            /* \"src/ReservoirPair.sol\":9366:9698  if (reserveOut - tokenOutManaged < aAmount) {... */\n        tag_718:\n            /* \"src/ReservoirPair.sol\":9538:9591  _safeTransfer(address(aToken), aDestination, aAmount) */\n          pop\n          tag_19\n          jump\t// in\n        tag_716:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          iszero\n          tag_719\n          jumpi\n            /* \"src/ReservoirPair.sol\":9129:9708  if (!_safeTransfer(address(aToken), aDestination, aAmount)) {... */\n          codesize\n          dup1\n          dup1\n          dup1\n          dup1\n          dup1\n          jump(tag_700)\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n        tag_719:\n          mload(0x40)\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          0x20\n            /* \"src/ReservoirPair.sol\":9428:9512  assetManager.returnAsset(aToken == token0, aAmount - (reserveOut - tokenOutManaged)) */\n          0x04\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup3\n          add\n          mstore\n          0x13\n          0x24\n          dup3\n          add\n          mstore\n          0x52503a205452414e534645525f4641494c454400000000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          0x64\n          swap1\n          revert\n            /* \"src/ReservoirPair.sol\":9428:9512  assetManager.returnAsset(aToken == token0, aAmount - (reserveOut - tokenOutManaged)) */\n        tag_717:\n          tag_722\n          swap1\n          tag_3\n          jump\t// in\n        tag_722:\n          codesize\n          jump(tag_718)\n        tag_714:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mload(0x40)\n          returndatasize\n          0x00\n          dup3\n          returndatacopy\n          returndatasize\n          swap1\n          revert\n            /* \"src/ReservoirPair.sol\":9312:9352  aToken == token0 ? aReserve0 : aReserve1 */\n        tag_704:\n          swap1\n          pop\n          swap6\n          jump(tag_706)\n            /* \"src/ReservoirPair.sol\":9229:9277  aToken == token0 ? token0Managed : token1Managed */\n        tag_701:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0xffffffffffffffffffffffffff\n          dup1\n            /* \"src/ReservoirPair.sol\":9264:9277  token1Managed */\n          0x0c\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n          0x68\n          shr\n          and\n            /* \"src/ReservoirPair.sol\":9229:9277  aToken == token0 ? token0Managed : token1Managed */\n          jump(tag_703)\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n        tag_22:\n          iszero\n          tag_724\n          jumpi\n          jump\t// out\n        tag_724:\n          0x64\n          mload(0x40)\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          0x20\n          0x04\n          dup3\n          add\n          mstore\n          0x0c\n          0x24\n          dup3\n          add\n          mstore\n          0x52503a204f564552464c4f570000000000000000000000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n            /* \"src/ReservoirPair.sol\":9804:10769  function _updateAndUnlock(... */\n        tag_23:\n          swap4\n          swap3\n          swap2\n          swap1\n          swap3\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0xffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":10007:10037  aBalance0 <= type(uint104).max */\n          dup6\n          gt\n          iszero\n            /* \"src/ReservoirPair.sol\":10007:10071  aBalance0 <= type(uint104).max && aBalance1 <= type(uint104).max */\n          dup1\n          tag_726\n          jumpi\n            /* \"src/ReservoirPair.sol\":9804:10769  function _updateAndUnlock(... */\n        tag_727:\n            /* \"src/ReservoirPair.sol\":9999:10088  require(aBalance0 <= type(uint104).max && aBalance1 <= type(uint104).max, \"RP: OVERFLOW\") */\n          tag_728\n          swap1\n          tag_22\n          jump\t// in\n        tag_728:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0xffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":10106:10136  aReserve0 <= type(uint104).max */\n          dup3\n          gt\n          iszero\n            /* \"src/ReservoirPair.sol\":10106:10170  aReserve0 <= type(uint104).max && aReserve1 <= type(uint104).max */\n          dup1\n          tag_729\n          jumpi\n            /* \"src/ReservoirPair.sol\":9804:10769  function _updateAndUnlock(... */\n        tag_730:\n            /* \"src/ReservoirPair.sol\":10098:10187  require(aReserve0 <= type(uint104).max && aReserve1 <= type(uint104).max, \"RP: OVERFLOW\") */\n          tag_731\n          swap1\n          tag_22\n          jump\t// in\n        tag_731:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0xffffffff\n            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */\n          dup2\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x7fffffff\n            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */\n          timestamp\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n          sub\n          and\n            /* \"src/ReservoirPair.sol\":10407:10423  lTimeElapsed > 0 */\n          iszero\n          iszero\n            /* \"src/ReservoirPair.sol\":10407:10441  lTimeElapsed > 0 && aReserve0 != 0 */\n          dup1\n          tag_732\n          jumpi\n            /* \"src/ReservoirPair.sol\":9804:10769  function _updateAndUnlock(... */\n        tag_733:\n            /* \"src/ReservoirPair.sol\":10407:10459  lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0 */\n          dup1\n          tag_734\n          jumpi\n            /* \"src/ReservoirPair.sol\":9804:10769  function _updateAndUnlock(... */\n        tag_735:\n            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */\n          tag_736\n          jumpi\n            /* \"src/ReservoirPair.sol\":9804:10769  function _updateAndUnlock(... */\n        tag_737:\n          pop\n          pop\n            /* \"src/ReservoirPair.sol\":10566:10572  _slot0 */\n          0x06\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup1\n          sload\n          0xffff000000000000000000000000000000000000000000000000000000000000\n          and\n          0xffffffffffffffffffffffffff\n          swap5\n          dup6\n          and\n          swap1\n          dup2\n          or\n          0x68\n          dup6\n          swap1\n          shl\n          0xffffffffffffffffffffffffff00000000000000000000000000\n          and\n          or\n          0x7fffffff0000000000000000000000000000000000000000000000000000\n            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */\n          timestamp\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0xd0\n          shl\n          and\n          or\n          swap1\n          swap2\n          sstore\n            /* \"src/ReservoirPair.sol\":10718:10762  Sync(uint104(aBalance0), uint104(aBalance1)) */\n          0xff388a12130349259b5ae24af90448f511c2340be808f2c371230fc2da175c44\n          swap4\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x40\n          swap4\n          swap2\n          swap3\n          pop\n          swap1\n          dup4\n          mload\n          swap3\n          dup4\n          mstore\n          and\n          0x20\n          dup3\n          add\n          mstore\n            /* \"src/ReservoirPair.sol\":10718:10762  Sync(uint104(aBalance0), uint104(aBalance1)) */\n          log1\n            /* \"src/ReservoirPair.sol\":9804:10769  function _updateAndUnlock(... */\n          jump\t// out\n            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */\n        tag_736:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap1\n          swap3\n          swap2\n          swap4\n            /* \"src/curve/stable/StablePair.sol\":11805:11811  _slot0 */\n          0x06\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n          swap1\n            /* \"src/curve/stable/StablePair.sol\":11791:11818  _observations[_slot0.index] */\n          tag_739\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup3\n          0xf0\n          shr\n            /* \"src/curve/stable/StablePair.sol\":11791:11818  _observations[_slot0.index] */\n          tag_37\n          jump\t// in\n        tag_739:\n            /* \"src/curve/stable/StablePair.sol\":11921:11942  _getCurrentAPrecise() */\n          pop\n          swap2\n          tag_740\n          tag_47\n          jump\t// in\n        tag_740:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap1\n          0xffffffffffffffffffffffffffffffff\n            /* \"src/curve/stable/StablePair.sol\":11983:12020  aReserve1 * token1PrecisionMultiplier */\n          tag_741\n            /* \"src/curve/stable/StablePair.sol\":11944:11981  aReserve0 * token0PrecisionMultiplier */\n          tag_742\n            /* \"src/curve/stable/StablePair.sol\":11956:11981  token0PrecisionMultiplier */\n          dup3\n          immutable(\"0x372e991e4284f7d12d6b2461cce9899511b05ac053845de253542adb96f2dca0\")\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n            /* \"src/curve/stable/StablePair.sol\":11944:11981  aReserve0 * token0PrecisionMultiplier */\n          dup11\n          tag_41\n          jump\t// in\n        tag_742:\n            /* \"src/curve/stable/StablePair.sol\":11995:12020  token1PrecisionMultiplier */\n          swap2\n          immutable(\"0xc4ba931b733b92a51f51c0955dd7716c7a38f3de911d23a5d0fbd5d23c0fbe8c\")\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n            /* \"src/curve/stable/StablePair.sol\":11983:12020  aReserve1 * token1PrecisionMultiplier */\n          dup11\n          tag_41\n          jump\t// in\n        tag_741:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap1\n            /* \"src/libraries/StableMath.sol\":409:415  1 days */\n          0x01fffffffffffffffe\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0xffffffffffffffff\n          dup6\n          and\n            /* \"src/libraries/StableMath.sol\":409:415  1 days */\n          swap5\n          0x01\n          shl\n          and\n            /* \"src/libraries/StableOracleMath.sol\":1988:2084  StableMath._computeLiquidityFromAdjustedBalances(reserve0, reserve1, 2 * amplificationParameter) */\n          swap4\n          tag_743\n          dup6\n          dup5\n          dup5\n          tag_58\n          jump\t// in\n        tag_743:\n            /* \"src/libraries/StableMath.sol\":409:415  1 days */\n          swap1\n          dup1\n          dup7\n          div\n            /* \"src/libraries/StableOracleMath.sol\":2057:2058  2 */\n          0x02\n            /* \"src/libraries/StableMath.sol\":409:415  1 days */\n          eq\n          swap1\n          iszero\n          or\n          iszero\n          tag_636\n          jumpi\n            /* \"src/libraries/StableOracleMath.sol\":2182:2209  (invariant * a) - invariant */\n          tag_746\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap1\n            /* \"src/libraries/StableOracleMath.sol\":2183:2196  invariant * a */\n          tag_331\n            /* \"src/libraries/StableMath.sol\":320:323  100 */\n          0x64\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup8\n          div\n            /* \"src/libraries/StableOracleMath.sol\":2183:2196  invariant * a */\n          dup3\n          tag_41\n          jump\t// in\n            /* \"src/libraries/StableOracleMath.sol\":2182:2209  (invariant * a) - invariant */\n        tag_746:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap1\n            /* \"src/libraries/StableMath.sol\":320:323  100 */\n          0x64\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup6\n          div\n            /* \"src/libraries/StableMath.sol\":409:415  1 days */\n          0x01\n          shl\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap1\n            /* \"src/libraries/StableMath.sol\":320:323  100 */\n          0x64\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup7\n          div\n            /* \"src/libraries/StableMath.sol\":409:415  1 days */\n          dup3\n          div\n            /* \"src/libraries/StableOracleMath.sol\":2057:2058  2 */\n          0x02\n            /* \"src/libraries/StableMath.sol\":409:415  1 days */\n          eq\n            /* \"src/libraries/StableMath.sol\":320:323  100 */\n          0x64\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup8\n          div\n            /* \"src/libraries/StableMath.sol\":409:415  1 days */\n          iszero\n          or\n          iszero\n          tag_636\n          jumpi\n            /* \"src/libraries/StableOracleMath.sol\":2496:2540  axy2 + ((a * reserve0).mulWadDown(reserve0)) */\n          tag_750\n            /* \"src/libraries/StableOracleMath.sol\":2236:2252  a * 2 * reserve0 */\n          dup7\n            /* \"src/libraries/StableOracleMath.sol\":2504:2539  (a * reserve0).mulWadDown(reserve0) */\n          tag_751\n            /* \"src/libraries/StableOracleMath.sol\":2236:2252  a * 2 * reserve0 */\n          dup4\n            /* \"src/libraries/StableOracleMath.sol\":2505:2517  a * reserve0 */\n          tag_761\n            /* \"src/libraries/StableOracleMath.sol\":2236:2252  a * 2 * reserve0 */\n          dup2\n            /* \"src/libraries/StableMath.sol\":320:323  100 */\n          0x64\n            /* \"src/libraries/StableOracleMath.sol\":2354:2425  axy2 + ((a * reserve1).mulWadDown(reserve1)) - (b.mulWadDown(reserve1)) */\n          tag_753\n            /* \"src/libraries/StableOracleMath.sol\":2236:2252  a * 2 * reserve0 */\n          dup12\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":795:816  mulDivDown(x, y, WAD) */\n          tag_754\n            /* \"src/libraries/StableOracleMath.sol\":2354:2398  axy2 + ((a * reserve1).mulWadDown(reserve1)) */\n          tag_755\n            /* \"src/libraries/StableOracleMath.sol\":2362:2397  (a * reserve1).mulWadDown(reserve1) */\n          tag_756\n            /* \"src/libraries/StableOracleMath.sol\":2496:2567  axy2 + ((a * reserve0).mulWadDown(reserve0)) - (b.mulWadDown(reserve0)) */\n          tag_757\n            /* \"src/libraries/StableOracleMath.sol\":2236:2252  a * 2 * reserve0 */\n          swap16\n            /* \"src/libraries/StableOracleMath.sol\":2363:2375  a * reserve1 */\n          tag_761\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":795:816  mulDivDown(x, y, WAD) */\n          tag_754\n            /* \"src/libraries/StableOracleMath.sol\":2236:2252  a * 2 * reserve0 */\n          swap16\n          dup9\n            /* \"src/libraries/StableOracleMath.sol\":2235:2274  (a * 2 * reserve0).mulWadDown(reserve1) */\n          tag_760\n            /* \"src/libraries/StableOracleMath.sol\":2236:2252  a * 2 * reserve0 */\n          dup5\n          tag_761\n          dup14\n          dup3\n          swap6\n          tag_41\n          jump\t// in\n        tag_761:\n            /* \"src/libraries/StableOracleMath.sol\":2235:2274  (a * 2 * reserve0).mulWadDown(reserve1) */\n          tag_61\n          jump\t// in\n        tag_760:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap15\n          div\n            /* \"src/libraries/StableOracleMath.sol\":2363:2375  a * reserve1 */\n          tag_41\n          jump\t// in\n            /* \"src/libraries/StableOracleMath.sol\":2362:2397  (a * reserve1).mulWadDown(reserve1) */\n        tag_756:\n            /* \"src/libraries/StableOracleMath.sol\":2354:2398  axy2 + ((a * reserve1).mulWadDown(reserve1)) */\n          dup11\n          tag_24\n          jump\t// in\n        tag_755:\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":795:816  mulDivDown(x, y, WAD) */\n          swap2\n          dup14\n          tag_61\n          jump\t// in\n        tag_754:\n            /* \"src/libraries/StableOracleMath.sol\":2354:2425  axy2 + ((a * reserve1).mulWadDown(reserve1)) - (b.mulWadDown(reserve1)) */\n          swap1\n          tag_11\n          jump\t// in\n        tag_753:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap13\n          div\n            /* \"src/libraries/StableOracleMath.sol\":2505:2517  a * reserve0 */\n          tag_41\n          jump\t// in\n            /* \"src/libraries/StableOracleMath.sol\":2504:2539  (a * reserve0).mulWadDown(reserve0) */\n        tag_751:\n            /* \"src/libraries/StableOracleMath.sol\":2496:2540  axy2 + ((a * reserve0).mulWadDown(reserve0)) */\n          swap1\n          tag_24\n          jump\t// in\n        tag_750:\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":795:816  mulDivDown(x, y, WAD) */\n          swap3\n          tag_61\n          jump\t// in\n            /* \"src/libraries/StableOracleMath.sol\":2496:2567  axy2 + ((a * reserve0).mulWadDown(reserve0)) - (b.mulWadDown(reserve0)) */\n        tag_757:\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":655:659  1e18 */\n          0x0de0b6b3a7640000\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":2274:2762  assembly {... */\n          0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21\n          dup5\n          gt\n          dup2\n          mul\n          iszero\n          dup3\n          mul\n          iszero\n          tag_632\n          jumpi\n            /* \"src/curve/stable/StablePair.sol\":12906:12933  _observations[_slot0.index] */\n          tag_764\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":2274:2762  assembly {... */\n          swap4\n          mul\n          swap1\n          dup1\n          dup3\n          div\n          swap2\n          mod\n          iszero\n          iszero\n          add\n            /* \"src/libraries/StableOracleMath.sol\":725:762  LogCompression.toLowResLog(spotPrice) */\n          swap4\n            /* \"src/libraries/StableOracleMath.sol\":3356:3389  LogCompression.toLowResLog(sqrtK) */\n          tag_765\n            /* \"src/libraries/StableOracleMath.sol\":3306:3325  reserve0 * reserve1 */\n          tag_766\n            /* \"src/curve/stable/StablePair.sol\":12267:12330  _calcClampedPrice(currRawPrice, prevClampedPrice, aTimeElapsed) */\n          tag_767\n            /* \"src/libraries/StableOracleMath.sol\":725:762  LogCompression.toLowResLog(spotPrice) */\n          tag_768\n          dup9\n          tag_54\n          jump\t// in\n        tag_768:\n            /* \"src/libraries/StableOracleMath.sol\":779:814  rawLogSpotPrice >= type(int112).min */\n          swap8\n            /* \"src/libraries/StableOracleMath.sol\":798:814  type(int112).min */\n          0xffffffffffffffffffffffffffffffffffff8000000000000000000000000000\n            /* \"src/libraries/StableOracleMath.sol\":779:814  rawLogSpotPrice >= type(int112).min */\n          dup10\n          slt\n          iszero\n            /* \"src/libraries/StableOracleMath.sol\":779:853  rawLogSpotPrice >= type(int112).min && rawLogSpotPrice <= type(int112).max */\n          dup1\n          tag_769\n          jumpi\n            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */\n        tag_770:\n            /* \"src/libraries/StableOracleMath.sol\":772:854  assert(rawLogSpotPrice >= type(int112).min && rawLogSpotPrice <= type(int112).max) */\n          tag_771\n          swap1\n          tag_48\n          jump\t// in\n        tag_771:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0xffffffff\n            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */\n          dup11\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x7fffffff\n            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */\n          timestamp\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n          sub\n          and\n          swap1\n            /* \"src/curve/stable/StablePair.sol\":12299:12315  prevClampedPrice */\n          0x01000e\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n            /* \"src/curve/stable/StablePair.sol\":12267:12330  _calcClampedPrice(currRawPrice, prevClampedPrice, aTimeElapsed) */\n          swap1\n          tag_49\n          jump\t// in\n        tag_767:\n            /* \"src/libraries/StableOracleMath.sol\":3306:3325  reserve0 * reserve1 */\n          swap12\n          swap1\n          swap11\n          tag_41\n          jump\t// in\n        tag_766:\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */\n          0xb5\n          dup2\n          0x010000000000000000000000000000000000\n          dup2\n          lt\n          iszero\n          tag_772\n          jumpi\n            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */\n        tag_773:\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */\n          dup1\n          0x01000000000000000000\n          0x010000\n          swap3\n          lt\n          iszero\n          tag_774\n          jumpi\n            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */\n        tag_775:\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */\n          0x010000000000\n          dup2\n          lt\n          iszero\n          tag_776\n          jumpi\n            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */\n        tag_777:\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */\n          0x01000000\n          dup2\n          lt\n          iszero\n          tag_778\n          jumpi\n            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */\n        tag_779:\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */\n          add\n          mul\n          0x12\n          shr\n          dup1\n          dup3\n          div\n          add\n            /* \"src/libraries/StableMath.sol\":409:415  1 days */\n          0x01\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */\n          shr\n          dup1\n          dup3\n          div\n          add\n            /* \"src/libraries/StableMath.sol\":409:415  1 days */\n          0x01\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */\n          shr\n          dup1\n          dup3\n          div\n          add\n            /* \"src/libraries/StableMath.sol\":409:415  1 days */\n          0x01\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */\n          shr\n          dup1\n          dup3\n          div\n          add\n            /* \"src/libraries/StableMath.sol\":409:415  1 days */\n          0x01\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */\n          shr\n          dup1\n          dup3\n          div\n          add\n            /* \"src/libraries/StableMath.sol\":409:415  1 days */\n          0x01\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */\n          shr\n          dup1\n          dup3\n          div\n          add\n            /* \"src/libraries/StableMath.sol\":409:415  1 days */\n          0x01\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */\n          shr\n          dup1\n          dup3\n          div\n          add\n            /* \"src/libraries/StableMath.sol\":409:415  1 days */\n          0x01\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */\n          shr\n          dup1\n          dup1\n          swap3\n          div\n          lt\n          swap1\n          sub\n            /* \"src/libraries/StableOracleMath.sol\":3356:3389  LogCompression.toLowResLog(sqrtK) */\n          tag_54\n          jump\t// in\n        tag_765:\n            /* \"src/libraries/StableOracleMath.sol\":3406:3435  rawResult >= type(int112).min */\n          swap8\n            /* \"src/libraries/StableOracleMath.sol\":798:814  type(int112).min */\n          0xffffffffffffffffffffffffffffffffffff8000000000000000000000000000\n            /* \"src/libraries/StableOracleMath.sol\":3406:3435  rawResult >= type(int112).min */\n          dup10\n          slt\n          iszero\n            /* \"src/libraries/StableOracleMath.sol\":3406:3468  rawResult >= type(int112).min && rawResult <= type(int112).max */\n          dup1\n          tag_780\n          jumpi\n            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */\n        tag_781:\n            /* \"src/libraries/StableOracleMath.sol\":3399:3469  assert(rawResult >= type(int112).min && rawResult <= type(int112).max) */\n          tag_782\n          swap1\n          tag_48\n          jump\t// in\n        tag_782:\n            /* \"src/curve/stable/StablePair.sol\":12299:12315  prevClampedPrice */\n          0x01000e\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sstore\n          sload\n          0xffffffff\n            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */\n          dup7\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x7fffffff\n            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */\n          timestamp\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n          sub\n          and\n            /* \"src/curve/stable/StablePair.sol\":11805:11811  _slot0 */\n          0x06\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          signextend\n          swap2\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n          0xffff000000000000000000000000000000000000000000000000000000000000\n            /* \"src/libraries/StableMath.sol\":409:415  1 days */\n          0x01\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup4\n          0xf0\n          shr\n          add\n          0xf0\n          shl\n          and\n          swap2\n          and\n          or\n          swap2\n          dup3\n            /* \"src/curve/stable/StablePair.sol\":11805:11811  _slot0 */\n          0x06\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sstore\n          mload(0x40)\n          swap6\n          tag_783\n          dup8\n          tag_2\n          jump\t// in\n        tag_783:\n          0xffffffff\n            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */\n          dup9\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x7fffffff\n            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */\n          timestamp\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n          sub\n          and\n          0x0d\n          signextend\n          swap1\n          0x0d\n          signextend\n          mul\n          0x0d\n          signextend\n          dup3\n          0x0d\n          signextend\n          add\n          0x0d\n          signextend\n          dup7\n          mstore\n            /* \"src/curve/stable/StablePair.sol\":12936:13010  Observation(logAccRawPrice, logAccClampedPrice, logAccLiq, aTimestampLast) */\n          dup1\n          0x20\n          dup8\n          add\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap11\n            /* \"src/curve/stable/StablePair.sol\":11805:11811  _slot0 */\n          0x06\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          signextend\n          mul\n            /* \"src/curve/stable/StablePair.sol\":11805:11811  _slot0 */\n          0x06\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          signextend\n          dup3\n          0x70\n          shr\n            /* \"src/curve/stable/StablePair.sol\":11805:11811  _slot0 */\n          0x06\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          signextend\n          add\n            /* \"src/curve/stable/StablePair.sol\":11805:11811  _slot0 */\n          0x06\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          signextend\n          dup11\n          mstore\n          0x40\n            /* \"src/curve/stable/StablePair.sol\":12936:13010  Observation(logAccRawPrice, logAccClampedPrice, logAccLiq, aTimestampLast) */\n          dup7\n          add\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap9\n            /* \"src/curve/stable/StablePair.sol\":11805:11811  _slot0 */\n          0x06\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          signextend\n          mul\n            /* \"src/curve/stable/StablePair.sol\":11805:11811  _slot0 */\n          0x06\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          signextend\n          swap1\n          0xa8\n          shr\n            /* \"src/curve/stable/StablePair.sol\":11805:11811  _slot0 */\n          0x06\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          signextend\n          add\n            /* \"src/curve/stable/StablePair.sol\":11805:11811  _slot0 */\n          0x06\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          signextend\n          dup8\n          mstore\n          0xffffffff\n            /* \"src/curve/stable/StablePair.sol\":12936:13010  Observation(logAccRawPrice, logAccClampedPrice, logAccLiq, aTimestampLast) */\n          0x60\n          dup6\n          add\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap6\n          and\n          dup6\n          mstore\n          0xf0\n          shr\n            /* \"src/curve/stable/StablePair.sol\":12906:12933  _observations[_slot0.index] */\n          tag_37\n          jump\t// in\n        tag_764:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          tag_784\n          jumpi\n          swap2\n          mload\n          swap6\n          mload\n          swap5\n          mload\n          swap3\n          mload\n          0xffffffff00000000000000000000000000000000000000000000000000000000\n          0xe0\n          swap2\n          swap1\n          swap2\n          shl\n          and\n          0xa8\n          swap4\n          swap1\n          swap4\n          shl\n          0xffffffffffffff000000000000000000000000000000000000000000\n          and\n          0xffffffffffffffffffffffffffff\n          swap1\n          swap7\n          and\n          0x70\n          swap6\n          swap1\n          swap6\n          shl\n          0xffffffffffffff0000000000000000000000000000\n          and\n          swap5\n          swap1\n          swap5\n          or\n          swap5\n          swap1\n          swap5\n          or\n          or\n          swap1\n          swap3\n          sstore\n          swap1\n          dup1\n          0xffffffffffffffffffffffffff\n          dup1\n            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */\n          jump(tag_737)\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n        tag_784:\n          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n          mstore(0x04, 0x00)\n          revert(0x00, 0x24)\n            /* \"src/libraries/StableOracleMath.sol\":3406:3468  rawResult >= type(int112).min && rawResult <= type(int112).max */\n        tag_780:\n          pop\n            /* \"src/libraries/StableOracleMath.sol\":3452:3468  type(int112).max */\n          0x7fffffffffffffffffffffffffff\n            /* \"src/libraries/StableOracleMath.sol\":3439:3468  rawResult <= type(int112).max */\n          dup10\n          sgt\n          iszero\n            /* \"src/libraries/StableOracleMath.sol\":3406:3468  rawResult >= type(int112).min && rawResult <= type(int112).max */\n          jump(tag_781)\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */\n        tag_778:\n          0x10\n          shr\n          swap2\n          0x08\n          shl\n          swap2\n          jump(tag_779)\n        tag_776:\n          0x20\n          shr\n          swap2\n          0x10\n          shl\n          swap2\n          jump(tag_777)\n        tag_774:\n          0x40\n          shr\n          swap2\n          0x20\n          shl\n          swap2\n          jump(tag_775)\n        tag_772:\n          pop\n          0xb50000000000000000\n          swap1\n          pop\n          0x80\n          dup3\n          swap1\n          shr\n          jump(tag_773)\n            /* \"src/libraries/StableOracleMath.sol\":779:853  rawLogSpotPrice >= type(int112).min && rawLogSpotPrice <= type(int112).max */\n        tag_769:\n          pop\n            /* \"src/libraries/StableOracleMath.sol\":837:853  type(int112).max */\n          0x7fffffffffffffffffffffffffff\n            /* \"src/libraries/StableOracleMath.sol\":818:853  rawLogSpotPrice <= type(int112).max */\n          dup10\n          sgt\n          iszero\n            /* \"src/libraries/StableOracleMath.sol\":779:853  rawLogSpotPrice >= type(int112).min && rawLogSpotPrice <= type(int112).max */\n          jump(tag_770)\n            /* \"src/ReservoirPair.sol\":10407:10459  lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0 */\n        tag_734:\n            /* \"src/ReservoirPair.sol\":10445:10459  aReserve1 != 0 */\n          pop\n          dup3\n          iszero\n          iszero\n            /* \"src/ReservoirPair.sol\":10407:10459  lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0 */\n          jump(tag_735)\n            /* \"src/ReservoirPair.sol\":10407:10441  lTimeElapsed > 0 && aReserve0 != 0 */\n        tag_732:\n            /* \"src/ReservoirPair.sol\":10427:10441  aReserve0 != 0 */\n          pop\n          dup2\n          iszero\n          iszero\n            /* \"src/ReservoirPair.sol\":10407:10441  lTimeElapsed > 0 && aReserve0 != 0 */\n          jump(tag_733)\n            /* \"src/ReservoirPair.sol\":10106:10170  aReserve0 <= type(uint104).max && aReserve1 <= type(uint104).max */\n        tag_729:\n          pop\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0xffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":10140:10170  aReserve1 <= type(uint104).max */\n          dup4\n          gt\n          iszero\n            /* \"src/ReservoirPair.sol\":10106:10170  aReserve0 <= type(uint104).max && aReserve1 <= type(uint104).max */\n          jump(tag_730)\n            /* \"src/ReservoirPair.sol\":10007:10071  aBalance0 <= type(uint104).max && aBalance1 <= type(uint104).max */\n        tag_726:\n          pop\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0xffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":10041:10071  aBalance1 <= type(uint104).max */\n          dup5\n          gt\n          iszero\n            /* \"src/ReservoirPair.sol\":10007:10071  aBalance0 <= type(uint104).max && aBalance1 <= type(uint104).max */\n          jump(tag_727)\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n        tag_24:\n          swap2\n          swap1\n          dup3\n          add\n          dup1\n          swap3\n          gt\n          tag_636\n          jumpi\n          jump\t// out\n            /* \"src/ReservoirPair.sol\":12869:13005  function _totalToken0() internal view returns (uint256) {... */\n        tag_25:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mload(0x40)\n          0x70a0823100000000000000000000000000000000000000000000000000000000\n            /* \"src/ReservoirPair.sol\":12942:12973  token0.balanceOf(address(this)) */\n          dup2\n          mstore\n            /* \"src/ReservoirPair.sol\":12967:12971  this */\n          address\n            /* \"src/ReservoirPair.sol\":12942:12973  token0.balanceOf(address(this)) */\n          0x04\n          dup3\n          add\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mstore\n            /* \"src/ReservoirPair.sol\":12942:12973  token0.balanceOf(address(this)) */\n          0x20\n            /* \"src/ReservoirPair.sol\":12942:12948  token0 */\n          dup2\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x24\n            /* \"src/ReservoirPair.sol\":12942:12948  token0 */\n          dup2\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":12942:12948  token0 */\n          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":12942:12973  token0.balanceOf(address(this)) */\n          gas\n          staticcall\n          dup1\n          iszero\n          tag_714\n          jumpi\n          0x00\n          swap1\n          tag_790\n          jumpi\n            /* \"src/ReservoirPair.sol\":12869:13005  function _totalToken0() internal view returns (uint256) {... */\n        tag_791:\n            /* \"src/ReservoirPair.sol\":12942:12998  token0.balanceOf(address(this)) + uint256(token0Managed) */\n          tag_792\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap2\n          pop\n          0xffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":12984:12997  token0Managed */\n          0x0c\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n          and\n            /* \"src/ReservoirPair.sol\":12942:12998  token0.balanceOf(address(this)) + uint256(token0Managed) */\n          swap1\n          tag_24\n          jump\t// in\n        tag_792:\n            /* \"src/ReservoirPair.sol\":12869:13005  function _totalToken0() internal view returns (uint256) {... */\n          swap1\n          jump\t// out\n            /* \"src/ReservoirPair.sol\":12942:12973  token0.balanceOf(address(this)) */\n        tag_790:\n          0x20\n          dup3\n          returndatasize\n          dup3\n          gt\n          tag_793\n          jumpi\n        tag_794:\n          dup2\n          tag_795\n          0x20\n          swap4\n          dup4\n          tag_5\n          jump\t// in\n        tag_795:\n          dup2\n          add\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sub\n          slt\n          tag_166\n          jumpi\n          pop\n            /* \"src/ReservoirPair.sol\":12942:12998  token0.balanceOf(address(this)) + uint256(token0Managed) */\n          tag_792\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap1\n          mload\n            /* \"src/ReservoirPair.sol\":12942:12973  token0.balanceOf(address(this)) */\n          jump(tag_791)\n        tag_793:\n          returndatasize\n          swap2\n          pop\n          jump(tag_794)\n            /* \"src/ReservoirPair.sol\":13011:13147  function _totalToken1() internal view returns (uint256) {... */\n        tag_26:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mload(0x40)\n          0x70a0823100000000000000000000000000000000000000000000000000000000\n            /* \"src/ReservoirPair.sol\":13084:13115  token1.balanceOf(address(this)) */\n          dup2\n          mstore\n            /* \"src/ReservoirPair.sol\":13109:13113  this */\n          address\n            /* \"src/ReservoirPair.sol\":13084:13115  token1.balanceOf(address(this)) */\n          0x04\n          dup3\n          add\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mstore\n            /* \"src/ReservoirPair.sol\":13084:13115  token1.balanceOf(address(this)) */\n          0x20\n            /* \"src/ReservoirPair.sol\":13084:13090  token1 */\n          dup2\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x24\n            /* \"src/ReservoirPair.sol\":13084:13090  token1 */\n          dup2\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":13084:13090  token1 */\n          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":13084:13115  token1.balanceOf(address(this)) */\n          gas\n          staticcall\n          dup1\n          iszero\n          tag_714\n          jumpi\n          0x00\n          swap1\n          tag_800\n          jumpi\n            /* \"src/ReservoirPair.sol\":13011:13147  function _totalToken1() internal view returns (uint256) {... */\n        tag_801:\n            /* \"src/ReservoirPair.sol\":13084:13140  token1.balanceOf(address(this)) + uint256(token1Managed) */\n          tag_792\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap2\n          pop\n          0xffffffffffffffffffffffffff\n            /* \"src/ReservoirPair.sol\":13126:13139  token1Managed */\n          0x0c\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n          0x68\n          shr\n          and\n            /* \"src/ReservoirPair.sol\":13084:13140  token1.balanceOf(address(this)) + uint256(token1Managed) */\n          swap1\n          tag_24\n          jump\t// in\n            /* \"src/ReservoirPair.sol\":13084:13115  token1.balanceOf(address(this)) */\n        tag_800:\n          0x20\n          dup3\n          returndatasize\n          dup3\n          gt\n          tag_803\n          jumpi\n        tag_804:\n          dup2\n          tag_805\n          0x20\n          swap4\n          dup4\n          tag_5\n          jump\t// in\n        tag_805:\n          dup2\n          add\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sub\n          slt\n          tag_166\n          jumpi\n          pop\n            /* \"src/ReservoirPair.sol\":13084:13140  token1.balanceOf(address(this)) + uint256(token1Managed) */\n          tag_792\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap1\n          mload\n            /* \"src/ReservoirPair.sol\":13084:13115  token1.balanceOf(address(this)) */\n          jump(tag_801)\n        tag_803:\n          returndatasize\n          swap2\n          pop\n          jump(tag_804)\n            /* \"src/ReservoirPair.sol\":13916:14584  function _syncManaged(uint256 aReserve0, uint256 aReserve1)... */\n        tag_28:\n          swap1\n          swap2\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n          swap2\n          dup3\n            /* \"src/ReservoirPair.sol\":14074:14086  assetManager */\n          0x0b\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n          and\n            /* \"src/ReservoirPair.sol\":14066:14101  address(assetManager) == address(0) */\n          swap3\n          dup4\n          iszero\n            /* \"src/ReservoirPair.sol\":14062:14157  if (address(assetManager) == address(0)) {... */\n          tag_808\n          jumpi\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mload(0x40)\n          0xd4fac45d00000000000000000000000000000000000000000000000000000000\n            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */\n          dup1\n          dup3\n          mstore\n            /* \"src/ReservoirPair.sol\":14216:14220  this */\n          address\n            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */\n          0x04\n          dup4\n          add\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mstore\n            /* \"src/ReservoirPair.sol\":14222:14228  token0 */\n          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup2\n          and\n          0x24\n          dup5\n          add\n          mstore\n          swap2\n          swap6\n            /* \"src/ReservoirPair.sol\":14222:14228  token0 */\n          swap2\n          swap4\n            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */\n          0x20\n          swap4\n            /* \"src/ReservoirPair.sol\":14222:14228  token0 */\n          swap1\n          swap3\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap1\n            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */\n          dup5\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup9\n          dup1\n          0x44\n          dup2\n          add\n            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */\n          sub\n          dup2\n          0x00\n          dup1\n          swap7\n          gas\n          call\n          swap8\n          dup9\n          iszero\n          tag_811\n          jumpi\n          dup3\n          swap9\n          tag_813\n          jumpi\n            /* \"src/ReservoirPair.sol\":13916:14584  function _syncManaged(uint256 aReserve0, uint256 aReserve1)... */\n        tag_814:\n          pop\n            /* \"src/ReservoirPair.sol\":14074:14086  assetManager */\n          0x0b\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n          mload(0x40)\n            /* \"src/ReservoirPair.sol\":14264:14301  assetManager.getBalance(this, token1) */\n          swap4\n          dup5\n          mstore\n            /* \"src/ReservoirPair.sol\":14216:14220  this */\n          address\n            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */\n          0x04\n            /* \"src/ReservoirPair.sol\":14264:14301  assetManager.getBalance(this, token1) */\n          dup6\n          add\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mstore\n            /* \"src/ReservoirPair.sol\":14294:14300  token1 */\n          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup2\n          and\n          0x24\n          dup7\n          add\n          mstore\n            /* \"src/ReservoirPair.sol\":14294:14300  token1 */\n          swap4\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap3\n          swap2\n            /* \"src/ReservoirPair.sol\":14294:14300  token1 */\n          dup7\n          swap2\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup5\n          swap2\n          0x44\n          swap2\n          dup4\n          swap2\n          dup7\n          swap2\n          and\n            /* \"src/ReservoirPair.sol\":14264:14301  assetManager.getBalance(this, token1) */\n          gas\n          call\n          swap5\n          dup6\n          iszero\n          tag_816\n          jumpi\n          dup2\n          swap6\n          tag_818\n          jumpi\n            /* \"src/ReservoirPair.sol\":13916:14584  function _syncManaged(uint256 aReserve0, uint256 aReserve1)... */\n        tag_819:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          pop\n          pop\n          pop\n            /* \"src/ReservoirPair.sol\":14551:14577  lToken1Managed.toUint104() */\n          tag_820\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0xffffffffffff0000000000000000000000000000000000000000000000000000\n          swap3\n            /* \"src/ReservoirPair.sol\":14499:14525  lToken0Managed.toUint104() */\n          tag_821\n            /* \"src/ReservoirPair.sol\":14409:14472  _handleReport(token1, aReserve1, token1Managed, lToken1Managed) */\n          tag_822\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup7\n          0xffffffffffffffffffffffffff00000000000000000000000000\n          swap6\n            /* \"src/ReservoirPair.sol\":14324:14387  _handleReport(token0, aReserve0, token0Managed, lToken0Managed) */\n          tag_823\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup13\n            /* \"src/ReservoirPair.sol\":14357:14370  token0Managed */\n          0x0c\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n          swap12\n          dup13\n          swap8\n          0xffffffffffffffffffffffffff\n          dup1\n          swap10\n          and\n            /* \"src/ReservoirPair.sol\":14324:14387  _handleReport(token0, aReserve0, token0Managed, lToken0Managed) */\n          swap2\n          tag_31\n          jump\t// in\n        tag_823:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap13\n          dup6\n          dup12\n          0x68\n          shr\n          and\n            /* \"src/ReservoirPair.sol\":14409:14472  _handleReport(token1, aReserve1, token1Managed, lToken1Managed) */\n          swap2\n          tag_31\n          jump\t// in\n        tag_822:\n            /* \"src/ReservoirPair.sol\":14499:14525  lToken0Managed.toUint104() */\n          swap9\n          tag_29\n          jump\t// in\n        tag_821:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n            /* \"src/ReservoirPair.sol\":14551:14577  lToken1Managed.toUint104() */\n          swap4\n          tag_29\n          jump\t// in\n        tag_820:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x68\n          shl\n          and\n          swap3\n          and\n          or\n          or\n            /* \"src/ReservoirPair.sol\":14357:14370  token0Managed */\n          0x0c\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sstore\n            /* \"src/ReservoirPair.sol\":13916:14584  function _syncManaged(uint256 aReserve0, uint256 aReserve1)... */\n          jump\t// out\n            /* \"src/ReservoirPair.sol\":14264:14301  assetManager.getBalance(this, token1) */\n        tag_818:\n          swap1\n          swap2\n          dup1\n          swap4\n          swap6\n          pop\n          dup2\n          returndatasize\n          dup4\n          gt\n          tag_824\n          jumpi\n        tag_825:\n          tag_826\n          dup2\n          dup4\n          tag_5\n          jump\t// in\n        tag_826:\n          dup2\n          add\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sub\n          slt\n          tag_166\n          jumpi\n          pop\n          mload\n          swap2\n            /* \"src/ReservoirPair.sol\":14551:14577  lToken1Managed.toUint104() */\n          tag_820\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup3\n            /* \"src/ReservoirPair.sol\":14499:14525  lToken0Managed.toUint104() */\n          tag_821\n            /* \"src/ReservoirPair.sol\":14264:14301  assetManager.getBalance(this, token1) */\n          jump(tag_819)\n        tag_824:\n          pop\n          returndatasize\n          jump(tag_825)\n        tag_816:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          pop\n          mload(0x40)\n          swap1\n          returndatasize\n          swap1\n          dup3\n          returndatacopy\n          returndatasize\n          swap1\n          revert\n            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */\n        tag_813:\n          swap1\n          swap8\n          pop\n          dup5\n          dup2\n          dup2\n          returndatasize\n          dup4\n          gt\n          tag_829\n          jumpi\n        tag_830:\n          tag_831\n          dup2\n          dup4\n          tag_5\n          jump\t// in\n        tag_831:\n          dup2\n          add\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sub\n          slt\n          tag_175\n          jumpi\n          mload\n            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */\n          swap7\n          codesize\n          jump(tag_814)\n        tag_829:\n          pop\n          returndatasize\n          jump(tag_830)\n        tag_811:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mload(0x40)\n          returndatasize\n          dup5\n          dup3\n          returndatacopy\n          returndatasize\n          swap1\n          revert\n            /* \"src/ReservoirPair.sol\":14062:14157  if (address(assetManager) == address(0)) {... */\n        tag_808:\n          pop\n            /* \"src/ReservoirPair.sol\":14117:14146  return (aReserve0, aReserve1) */\n          swap3\n          swap2\n          pop\n          jump\t// out\n            /* \"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":10566:10758  function toUint104(uint256 value) internal pure returns (uint104) {... */\n        tag_29:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0xffffffffffffffffffffffffff\n            /* \"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":10650:10676  value <= type(uint104).max */\n          swap1\n          dup2\n          dup2\n          gt\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          tag_834\n          jumpi\n          and\n            /* \"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":10566:10758  function toUint104(uint256 value) internal pure returns (uint104) {... */\n          swap1\n          jump\t// out\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n        tag_834:\n          0x84\n          mload(0x40)\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          0x20\n          0x04\n          dup3\n          add\n          mstore\n          0x27\n          0x24\n          dup3\n          add\n          mstore\n          0x53616665436173743a2076616c756520646f65736e27742066697420696e2031\n          0x44\n          dup3\n          add\n          mstore\n          0x3034206269747300000000000000000000000000000000000000000000000000\n          0x64\n          dup3\n          add\n          mstore\n          revert\n            /* \"src/ReservoirPair.sol\":13153:13910  function _handleReport(ERC20 aToken, uint256 aReserve, uint256 aPrevBalance, uint256 aNewBalance)... */\n        tag_31:\n          swap2\n          swap1\n          swap3\n            /* \"src/ReservoirPair.sol\":13327:13353  aNewBalance > aPrevBalance */\n          dup2\n          dup2\n          gt\n            /* \"src/ReservoirPair.sol\":13323:13904  if (aNewBalance > aPrevBalance) {... */\n          0x00\n            /* \"src/ReservoirPair.sol\":13327:13353  aNewBalance > aPrevBalance */\n          eq\n          tag_836\n          jumpi\n            /* \"src/ReservoirPair.sol\":13416:13442  aNewBalance - aPrevBalance */\n          tag_838\n            /* \"src/ReservoirPair.sol\":13526:13544  aReserve + lProfit */\n          tag_792\n            /* \"src/ReservoirPair.sol\":13416:13442  aNewBalance - aPrevBalance */\n          swap5\n          swap3\n            /* \"src/ReservoirPair.sol\":13462:13493  ProfitReported(aToken, lProfit) */\n          0xd85f20827037d49bc45762fefff2ddfe9a1a5412ad3dfc1cdca78d2e52f4ba23\n            /* \"src/ReservoirPair.sol\":13416:13442  aNewBalance - aPrevBalance */\n          swap3\n          tag_11\n          jump\t// in\n        tag_838:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x40\n          dup1\n          mload\n          0xffffffffffffffffffffffffffffffffffffffff\n          swap6\n          swap1\n          swap6\n          and\n          dup6\n          mstore\n          0x20\n          dup6\n          add\n          dup3\n          swap1\n          mstore\n          swap1\n          swap4\n            /* \"src/ReservoirPair.sol\":13462:13493  ProfitReported(aToken, lProfit) */\n          log1\n            /* \"src/ReservoirPair.sol\":13526:13544  aReserve + lProfit */\n          tag_24\n          jump\t// in\n            /* \"src/ReservoirPair.sol\":13323:13904  if (aNewBalance > aPrevBalance) {... */\n        tag_836:\n            /* \"src/ReservoirPair.sol\":13565:13591  aNewBalance < aPrevBalance */\n          swap1\n          dup1\n          dup3\n          lt\n          iszero\n          tag_693\n          jumpi\n            /* \"src/ReservoirPair.sol\":13650:13676  aPrevBalance - aNewBalance */\n          tag_844\n            /* \"src/ReservoirPair.sol\":13756:13772  aReserve - lLoss */\n          tag_792\n            /* \"src/ReservoirPair.sol\":13650:13676  aPrevBalance - aNewBalance */\n          swap5\n          swap3\n            /* \"src/ReservoirPair.sol\":13696:13723  LossReported(aToken, lLoss) */\n          0x3ffa9beb41b46c88b16758ef6c236ebd4d07cdfd4d22471030eb6b2d662482d9\n            /* \"src/ReservoirPair.sol\":13650:13676  aPrevBalance - aNewBalance */\n          swap3\n          tag_11\n          jump\t// in\n        tag_844:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x40\n          dup1\n          mload\n          0xffffffffffffffffffffffffffffffffffffffff\n          swap6\n          swap1\n          swap6\n          and\n          dup6\n          mstore\n          0x20\n          dup6\n          add\n          dup3\n          swap1\n          mstore\n          swap1\n          swap4\n            /* \"src/ReservoirPair.sol\":13696:13723  LossReported(aToken, lLoss) */\n          log1\n            /* \"src/ReservoirPair.sol\":13756:13772  aReserve - lLoss */\n          tag_11\n          jump\t// in\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n        tag_32:\n          0x8000000000000000000000000000000000000000000000000000000000000000\n          dup2\n          eq\n          tag_636\n          jumpi\n          0x00\n          sub\n          swap1\n          jump\t// out\n        tag_33:\n          0xffffffffffffffffffffffffff\n          swap2\n          dup3\n          and\n          swap1\n          dup3\n          and\n          sub\n          swap2\n          swap1\n          dup3\n          gt\n          tag_636\n          jumpi\n          jump\t// out\n        tag_34:\n          swap2\n          swap1\n          swap2\n          0xffffffffffffffffffffffffff\n          dup1\n          dup1\n          swap5\n          and\n          swap2\n          and\n          add\n          swap2\n          dup3\n          gt\n          tag_636\n          jumpi\n          jump\t// out\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1328:2944  function safeTransferFrom(... */\n        tag_35:\n          swap1\n          0x00\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1532:2887  assembly {... */\n          0x64\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1328:2944  function safeTransferFrom(... */\n          swap3\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1532:2887  assembly {... */\n          0x20\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1328:2944  function safeTransferFrom(... */\n          swap6\n          dup3\n          swap6\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1532:2887  assembly {... */\n          mload(0x40)\n          swap5\n          0x23b872dd00000000000000000000000000000000000000000000000000000000\n          dup7\n          mstore\n          0x04\n          dup7\n          add\n          mstore\n          0x24\n          dup6\n          add\n          mstore\n          0x44\n          dup5\n          add\n          mstore\n          gas\n          call\n          or(and(eq(mload(0x00), 0x01), gt(returndatasize, 0x1f)), iszero(returndatasize))\n          and\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          iszero\n          tag_854\n          jumpi\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1328:2944  function safeTransferFrom(... */\n          jump\t// out\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n        tag_854:\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1532:2887  assembly {... */\n          0x64\n          0x40\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mload\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1532:2887  assembly {... */\n          0x20\n          0x04\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup3\n          add\n          mstore\n          0x14\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1532:2887  assembly {... */\n          0x24\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup3\n          add\n          mstore\n          0x5452414e534645525f46524f4d5f4641494c4544000000000000000000000000\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1532:2887  assembly {... */\n          0x44\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup3\n          add\n          mstore\n          revert\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":2950:4449  function safeTransfer(... */\n        tag_36:\n          0x00\n          swap2\n          dup3\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":3128:4397  assembly {... */\n          0x44\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":2950:4449  function safeTransfer(... */\n          swap3\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":3128:4397  assembly {... */\n          0x20\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":2950:4449  function safeTransfer(... */\n          swap6\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":3128:4397  assembly {... */\n          mload(0x40)\n          swap4\n          0xa9059cbb00000000000000000000000000000000000000000000000000000000\n          dup6\n          mstore\n          0x04\n          dup6\n          add\n          mstore\n          0x24\n          dup5\n          add\n          mstore\n          gas\n          call\n          or(and(eq(mload(0x00), 0x01), gt(returndatasize, 0x1f)), iszero(returndatasize))\n          and\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          iszero\n          tag_856\n          jumpi\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":2950:4449  function safeTransfer(... */\n          jump\t// out\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n        tag_856:\n          0x64\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":3128:4397  assembly {... */\n          0x40\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mload\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":3128:4397  assembly {... */\n          0x20\n          0x04\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup3\n          add\n          mstore\n          0x0f\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":3128:4397  assembly {... */\n          0x24\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup3\n          add\n          mstore\n          0x5452414e534645525f4641494c45440000000000000000000000000000000000\n            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":3128:4397  assembly {... */\n          0x44\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup3\n          add\n          mstore\n          revert\n        tag_37:\n          0x010000\n          dup2\n          lt\n          iszero\n          tag_858\n          jumpi\n            /* \"src/curve/stable/StablePair.sol\":11791:11804  _observations */\n          0x0d\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          add\n          swap1\n          0x00\n          swap1\n          jump\t// out\n        tag_858:\n          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n          mstore(0x04, 0x32)\n          revert(0x00, 0x24)\n            /* \"src/libraries/StableMath.sol\":320:323  100 */\n        tag_38:\n          swap1\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x015180\n          0xffffffffffffffff\n          dup1\n          swap4\n          and\n            /* \"src/libraries/StableMath.sol\":320:323  100 */\n          mul\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap2\n          dup3\n          and\n            /* \"src/libraries/StableMath.sol\":320:323  100 */\n          swap2\n          dup3\n          sub\n          tag_636\n          jumpi\n          jump\t// out\n        tag_39:\n          0x01\n          shl\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap1\n            /* \"src/libraries/StableMath.sol\":320:323  100 */\n          0x01fffffffffffffffe\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0xfffffffffffffffe\n          dup4\n          and\n            /* \"src/libraries/StableMath.sol\":320:323  100 */\n          swap3\n          and\n          dup3\n          sub\n          tag_636\n          jumpi\n          jump\t// out\n        tag_40:\n          swap2\n          swap1\n          swap2\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0xffffffffffffffff\n          dup1\n          dup1\n          swap5\n          and\n          swap2\n          and\n            /* \"src/libraries/StableMath.sol\":320:323  100 */\n          mul\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap2\n          dup3\n          and\n            /* \"src/libraries/StableMath.sol\":320:323  100 */\n          swap2\n          dup3\n          sub\n          tag_636\n          jumpi\n          jump\t// out\n            /* \"src/libraries/StableMath.sol\":409:415  1 days */\n        tag_41:\n          dup2\n          dup2\n          mul\n          swap3\n          swap2\n          dup2\n          iszero\n          swap2\n          dup5\n          div\n          eq\n          or\n          iszero\n          tag_636\n          jumpi\n          jump\t// out\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n        tag_42:\n          dup2\n          iszero\n          tag_868\n          jumpi\n          div\n          swap1\n          jump\t// out\n        tag_868:\n          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n          mstore(0x04, 0x12)\n          revert(0x00, 0x24)\n            /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":1158:1352  function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {... */\n        tag_43:\n            /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":1322:1323  0 */\n          0x00\n          swap2\n            /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":1158:1352  function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {... */\n          swap1\n            /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":1317:1323  a == 0 */\n          dup1\n          tag_870\n          jumpi\n            /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":1317:1345  a == 0 ? 0 : (a - 1) / b + 1 */\n          pop\n          pop\n          pop\n            /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":1322:1323  0 */\n          0x00\n            /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":1158:1352  function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {... */\n          swap1\n          jump\t// out\n            /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":1317:1345  a == 0 ? 0 : (a - 1) / b + 1 */\n        tag_870:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n          dup2\n          add\n          swap1\n          dup2\n          gt\n          tag_873\n          jumpi\n            /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":1330:1341  (a - 1) / b */\n          swap1\n          tag_875\n          swap2\n          tag_42\n          jump\t// in\n        tag_875:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap1\n            /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":1335:1336  1 */\n          0x01\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup3\n          add\n          dup1\n          swap3\n          gt\n          tag_876\n          jumpi\n            /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":1317:1345  a == 0 ? 0 : (a - 1) / b + 1 */\n          pop\n            /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":1158:1352  function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {... */\n          swap1\n          jump\t// out\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n        tag_876:\n          dup1\n          0x4e487b7100000000000000000000000000000000000000000000000000000000\n          0x24\n          swap3\n          mstore\n          mstore(0x04, 0x11)\n          revert\n        tag_873:\n          0x24\n          dup4\n          0x4e487b7100000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          mstore(0x04, 0x11)\n          revert\n        tag_44:\n          iszero\n          tag_878\n          jumpi\n          jump\t// out\n        tag_878:\n          0x64\n          mload(0x40)\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          0x20\n          0x04\n          dup3\n          add\n          mstore\n          0x12\n          0x24\n          dup3\n          add\n          mstore\n          0x53503a204e4f545f454e4f5547485f4c49510000000000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n        tag_45:\n          0xffffffffffffffff\n          swap2\n          dup3\n          and\n          swap1\n          dup3\n          and\n          sub\n          swap2\n          swap1\n          dup3\n          gt\n          tag_636\n          jumpi\n          jump\t// out\n        tag_46:\n          swap1\n          0xffffffffffffffff\n          dup1\n          swap2\n          and\n          swap2\n          dup3\n          iszero\n          tag_868\n          jumpi\n          and\n          div\n          swap1\n          jump\t// out\n            /* \"src/curve/stable/StablePair.sol\":10113:10971  function _getCurrentAPrecise() internal view returns (uint64 rCurrentA) {... */\n        tag_47:\n            /* \"src/curve/stable/StablePair.sol\":10212:10219  ampData */\n          0x010010\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n          0xffffffffffffffff\n          swap1\n          dup2\n          dup2\n          0x40\n          shr\n          and\n          dup2\n          0xc0\n          shr\n            /* \"src/curve/stable/StablePair.sol\":10292:10307  block.timestamp */\n          swap1\n          dup2\n          timestamp\n            /* \"src/curve/stable/StablePair.sol\":10292:10321  block.timestamp < futureATime */\n          lt\n            /* \"src/curve/stable/StablePair.sol\":10288:10965  if (block.timestamp < futureATime) {... */\n          0x00\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          eq\n          tag_884\n          jumpi\n            /* \"src/curve/stable/StablePair.sol\":10524:10562  uint64(block.timestamp) - initialATime */\n          tag_886\n            /* \"src/curve/stable/StablePair.sol\":10463:10489  futureATime - initialATime */\n          tag_887\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup6\n          dup1\n          dup7\n          and\n          swap6\n          0x80\n          shr\n          and\n            /* \"src/curve/stable/StablePair.sol\":10463:10489  futureATime - initialATime */\n          dup1\n          swap5\n          tag_45\n          jump\t// in\n        tag_887:\n            /* \"src/curve/stable/StablePair.sol\":10292:10307  block.timestamp */\n          swap3\n          dup6\n          timestamp\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n            /* \"src/curve/stable/StablePair.sol\":10524:10562  uint64(block.timestamp) - initialATime */\n          tag_45\n          jump\t// in\n        tag_886:\n            /* \"src/curve/stable/StablePair.sol\":10581:10599  futureA > initialA */\n          swap1\n          dup4\n          dup2\n          gt\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          iszero\n          tag_888\n          jumpi\n            /* \"src/curve/stable/StablePair.sol\":10638:10656  futureA - initialA */\n          swap2\n            /* \"src/curve/stable/StablePair.sol\":10697:10720  rampElapsed * rampDelta */\n          tag_890\n            /* \"src/curve/stable/StablePair.sol\":10697:10735  rampElapsed * rampDelta / rampDuration */\n          tag_891\n            /* \"src/curve/stable/StablePair.sol\":10638:10656  futureA - initialA */\n          swap3\n          tag_892\n          dup7\n          dup9\n          swap7\n          tag_45\n          jump\t// in\n        tag_892:\n            /* \"src/curve/stable/StablePair.sol\":10697:10720  rampElapsed * rampDelta */\n          swap1\n          tag_40\n          jump\t// in\n        tag_890:\n            /* \"src/curve/stable/StablePair.sol\":10697:10735  rampElapsed * rampDelta / rampDuration */\n          tag_46\n          jump\t// in\n        tag_891:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          and\n          add\n          swap1\n          dup2\n          gt\n          tag_636\n          jumpi\n            /* \"src/curve/stable/StablePair.sol\":10577:10905  if (futureA > initialA) {... */\n          swap1\n            /* \"src/curve/stable/StablePair.sol\":10113:10971  function _getCurrentAPrecise() internal view returns (uint64 rCurrentA) {... */\n          jump\t// out\n            /* \"src/curve/stable/StablePair.sol\":10577:10905  if (futureA > initialA) {... */\n        tag_888:\n            /* \"src/curve/stable/StablePair.sol\":10841:10890  initialA - rampElapsed * rampDelta / rampDuration */\n          tag_792\n            /* \"src/curve/stable/StablePair.sol\":10793:10811  initialA - futureA */\n          swap5\n          pop\n            /* \"src/curve/stable/StablePair.sol\":10852:10890  rampElapsed * rampDelta / rampDuration */\n          tag_898\n            /* \"src/curve/stable/StablePair.sol\":10793:10811  initialA - futureA */\n          swap3\n          swap2\n          tag_892\n            /* \"src/curve/stable/StablePair.sol\":10852:10875  rampElapsed * rampDelta */\n          tag_890\n            /* \"src/curve/stable/StablePair.sol\":10793:10811  initialA - futureA */\n          swap3\n          dup7\n          tag_45\n          jump\t// in\n            /* \"src/curve/stable/StablePair.sol\":10852:10890  rampElapsed * rampDelta / rampDuration */\n        tag_898:\n            /* \"src/curve/stable/StablePair.sol\":10841:10890  initialA - rampElapsed * rampDelta / rampDuration */\n          swap1\n          tag_45\n          jump\t// in\n            /* \"src/curve/stable/StablePair.sol\":10288:10965  if (block.timestamp < futureATime) {... */\n        tag_884:\n            /* \"src/curve/stable/StablePair.sol\":10935:10954  rCurrentA = futureA */\n          swap3\n          pop\n          pop\n          pop\n            /* \"src/curve/stable/StablePair.sol\":10288:10965  if (block.timestamp < futureATime) {... */\n          swap1\n            /* \"src/curve/stable/StablePair.sol\":10113:10971  function _getCurrentAPrecise() internal view returns (uint64 rCurrentA) {... */\n          jump\t// out\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n        tag_48:\n          iszero\n          tag_901\n          jumpi\n          jump\t// out\n        tag_901:\n          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n          mstore(0x04, 0x01)\n          revert(0x00, 0x24)\n            /* \"src/ReservoirPair.sol\":18000:19057  function _calcClampedPrice(uint256 aCurrRawPrice, uint256 aPrevClampedPrice, uint256 aTimeElapsed)... */\n        tag_49:\n          swap1\n          swap2\n            /* \"src/ReservoirPair.sol\":18215:18237  aPrevClampedPrice == 0 */\n          dup3\n          iszero\n            /* \"src/ReservoirPair.sol\":18211:18337  if (aPrevClampedPrice == 0) {... */\n          tag_903\n          jumpi\n            /* \"src/ReservoirPair.sol\":18351:18405  stdMath.percentDelta(aCurrRawPrice, aPrevClampedPrice) */\n          tag_905\n          dup4\n          dup4\n          tag_50\n          jump\t// in\n        tag_905:\n            /* \"src/ReservoirPair.sol\":18408:18421  maxChangeRate */\n          0x01000d\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sload\n            /* \"src/ReservoirPair.sol\":18408:18436  maxChangeRate * aTimeElapsed */\n          swap1\n          tag_906\n          dup4\n          dup4\n          tag_41\n          jump\t// in\n        tag_906:\n          lt\n          iszero\n          tag_907\n          jumpi\n            /* \"src/ReservoirPair.sol\":18487:18520  aCurrRawPrice > aPrevClampedPrice */\n          dup4\n          dup4\n          gt\n          iszero\n          tag_909\n          jumpi\n            /* \"src/ReservoirPair.sol\":18585:18613  maxChangeRate * aTimeElapsed */\n          tag_911\n          swap3\n          pop\n          tag_41\n          jump\t// in\n        tag_911:\n            /* \"src/ReservoirPair.sol\":18577:18581  1e18 */\n          swap1\n          0x0de0b6b3a7640000\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap2\n          dup3\n          add\n          dup1\n          dup4\n          gt\n          tag_636\n          jumpi\n            /* \"src/ReservoirPair.sol\":18556:18615  aPrevClampedPrice * (1e18 + (maxChangeRate * aTimeElapsed)) */\n          tag_914\n          swap2\n          tag_41\n          jump\t// in\n        tag_914:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          div\n            /* \"src/ReservoirPair.sol\":18483:18817  if (aCurrRawPrice > aPrevClampedPrice) {... */\n          swap1\n        tag_915:\n            /* \"src/ReservoirPair.sol\":18856:18897  LogCompression.toLowResLog(rClampedPrice) */\n          tag_916\n          dup3\n          tag_54\n          jump\t// in\n        tag_916:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x0d\n          signextend\n            /* \"src/ReservoirPair.sol\":18347:19051  if (stdMath.percentDelta(aCurrRawPrice, aPrevClampedPrice) > maxChangeRate * aTimeElapsed) {... */\n          swap1\n            /* \"src/ReservoirPair.sol\":18000:19057  function _calcClampedPrice(uint256 aCurrRawPrice, uint256 aPrevClampedPrice, uint256 aTimeElapsed)... */\n          jump\t// out\n            /* \"src/ReservoirPair.sol\":18483:18817  if (aCurrRawPrice > aPrevClampedPrice) {... */\n        tag_909:\n            /* \"src/ReservoirPair.sol\":18661:18702  assert(aPrevClampedPrice > aCurrRawPrice) */\n          tag_918\n            /* \"src/ReservoirPair.sol\":18765:18793  maxChangeRate * aTimeElapsed */\n          tag_919\n            /* \"src/ReservoirPair.sol\":18668:18701  aPrevClampedPrice > aCurrRawPrice */\n          swap4\n          dup6\n          gt\n            /* \"src/ReservoirPair.sol\":18661:18702  assert(aPrevClampedPrice > aCurrRawPrice) */\n          tag_48\n          jump\t// in\n        tag_918:\n            /* \"src/ReservoirPair.sol\":18765:18793  maxChangeRate * aTimeElapsed */\n          tag_41\n          jump\t// in\n        tag_919:\n            /* \"src/ReservoirPair.sol\":18757:18761  1e18 */\n          swap1\n          0x0de0b6b3a7640000\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap2\n          dup3\n          sub\n          dup3\n          dup2\n          gt\n          tag_636\n          jumpi\n            /* \"src/ReservoirPair.sol\":18736:18795  aPrevClampedPrice * (1e18 - (maxChangeRate * aTimeElapsed)) */\n          tag_922\n          swap2\n          tag_41\n          jump\t// in\n        tag_922:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          div\n            /* \"src/ReservoirPair.sol\":18483:18817  if (aCurrRawPrice > aPrevClampedPrice) {... */\n          swap1\n          jump(tag_915)\n            /* \"src/ReservoirPair.sol\":18347:19051  if (stdMath.percentDelta(aCurrRawPrice, aPrevClampedPrice) > maxChangeRate * aTimeElapsed) {... */\n        tag_907:\n            /* \"src/ReservoirPair.sol\":18929:18958  rClampedPrice = aCurrRawPrice */\n          pop\n          pop\n          swap2\n          swap1\n          pop\n            /* \"src/ReservoirPair.sol\":18998:19039  LogCompression.toLowResLog(aCurrRawPrice) */\n          tag_916\n            /* \"src/ReservoirPair.sol\":18929:18958  rClampedPrice = aCurrRawPrice */\n          dup3\n            /* \"src/ReservoirPair.sol\":18998:19039  LogCompression.toLowResLog(aCurrRawPrice) */\n          tag_54\n          jump\t// in\n            /* \"src/ReservoirPair.sol\":18211:18337  if (aPrevClampedPrice == 0) {... */\n        tag_903:\n            /* \"src/ReservoirPair.sol\":18283:18324  LogCompression.toLowResLog(aCurrRawPrice) */\n          pop\n          swap2\n          swap1\n          pop\n          tag_916\n          dup3\n          tag_54\n          jump\t// in\n            /* \"lib/forge-std/src/StdMath.sol\":999:1159  function percentDelta(uint256 a, uint256 b) internal pure returns (uint256) {... */\n        tag_50:\n            /* \"lib/forge-std/src/StdMath.sol\":607:612  a > b */\n          dup2\n          dup1\n          dup3\n          gt\n          iszero\n          tag_925\n          jumpi\n            /* \"lib/forge-std/src/StdMath.sol\":615:620  a - b */\n          tag_927\n          swap2\n          tag_11\n          jump\t// in\n        tag_927:\n            /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */\n          swap1\n        tag_928:\n            /* \"lib/forge-std/src/StdMath.sol\":1144:1148  1e18 */\n          0x0de0b6b3a7640000\n            /* \"src/libraries/StableMath.sol\":409:415  1 days */\n          swap2\n          dup3\n          dup2\n          mul\n          swap3\n          dup2\n          dup5\n          div\n          eq\n          swap1\n          iszero\n          or\n          iszero\n          tag_636\n          jumpi\n            /* \"lib/forge-std/src/StdMath.sol\":1133:1152  absDelta * 1e18 / b */\n          tag_792\n          swap2\n          tag_42\n          jump\t// in\n            /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */\n        tag_925:\n            /* \"lib/forge-std/src/StdMath.sol\":623:628  b - a */\n          swap1\n          tag_932\n          swap2\n          tag_11\n          jump\t// in\n        tag_932:\n            /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */\n          swap1\n          jump(tag_928)\n            /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */\n        tag_51:\n          swap1\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */\n          swap2\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mload(0x40)\n            /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */\n          swap1\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x24\n            /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */\n          0x20\n          swap4\n          dup4\n          tag_933\n          dup7\n          dup3\n          dup2\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          tag_934\n            /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */\n          dup2\n          dup1\n          swap11\n          add\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap7\n          dup8\n          dup2\n          mload\n          swap4\n          dup5\n          swap3\n          add\n          tag_6\n          jump\t// in\n        tag_934:\n          dup2\n          add\n            /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */\n          sub\n          dup1\n          dup5\n          mstore\n          add\n          dup3\n          tag_5\n          jump\t// in\n        tag_933:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mload\n            /* \"src/libraries/FactoryStore.sol\":476:509  keccak256(abi.encodePacked(aKey)) */\n          swap1\n          keccak256\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mload(0x40)\n            /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */\n          swap6\n          dup7\n          swap4\n          dup5\n          swap3\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x8eaa6ac000000000000000000000000000000000000000000000000000000000\n            /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */\n          dup5\n          mstore\n          0x04\n          dup5\n          add\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mstore\n          and\n            /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */\n          gas\n          staticcall\n          swap1\n          dup2\n          iszero\n          tag_714\n          jumpi\n          0x00\n          swap2\n          tag_937\n          jumpi\n            /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */\n        tag_938:\n            /* \"src/libraries/FactoryStore.sol\":456:510  return aFactory.get(keccak256(abi.encodePacked(aKey))) */\n          pop\n          swap1\n          pop\n            /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */\n          swap1\n          jump\t// out\n            /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */\n        tag_937:\n          dup3\n          dup2\n          returndatasize\n          dup4\n          gt\n          tag_939\n          jumpi\n        tag_940:\n          tag_941\n          dup2\n          dup4\n          tag_5\n          jump\t// in\n        tag_941:\n          dup2\n          add\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sub\n          slt\n          tag_166\n          jumpi\n          pop\n          mload\n            /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */\n          dup1\n          codesize\n          jump(tag_938)\n        tag_939:\n          pop\n          returndatasize\n          jump(tag_940)\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n        tag_52:\n          dup1\n          iszero\n          tag_868\n          jumpi\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0xc097ce7bc90715b34b9f1000000000\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n          swap1\n          jump\t// out\n        tag_53:\n          dup2\n          iszero\n          tag_868\n          jumpi\n          sdiv\n          swap1\n          jump\t// out\n            /* \"src/libraries/LogCompression.sol\":2015:2401  function toLowResLog(uint256 value) internal pure returns (int256) {... */\n        tag_54:\n            /* \"src/libraries/LogCompression.sol\":2128:2156  LogExpMath.ln(int256(value)) */\n          tag_948\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          0x5af3107a4000\n            /* \"src/libraries/LogCompression.sol\":2015:2401  function toLowResLog(uint256 value) internal pure returns (int256) {... */\n          swap2\n            /* \"src/libraries/LogCompression.sol\":2128:2156  LogExpMath.ln(int256(value)) */\n          tag_55\n          jump\t// in\n        tag_948:\n            /* \"src/libraries/LogCompression.sol\":2252:2253  0 */\n          0x00\n            /* \"src/libraries/LogCompression.sol\":2247:2253  ln > 0 */\n          dup2\n          sgt\n            /* \"src/libraries/LogCompression.sol\":2252:2253  0 */\n          iszero\n          tag_949\n          jumpi\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          0x2d79883d2000\n          add\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogCompression.sol\":2015:2401  function toLowResLog(uint256 value) internal pure returns (int256) {... */\n          swap1\n          jump\t// out\n            /* \"src/libraries/LogCompression.sol\":2247:2325  ln > 0 ? ln + _HALF_LOG_COMPRESSION_FACTOR : ln - _HALF_LOG_COMPRESSION_FACTOR */\n        tag_949:\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffd28677c2e000\n          add\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogCompression.sol\":2015:2401  function toLowResLog(uint256 value) internal pure returns (int256) {... */\n          swap1\n          jump\t// out\n            /* \"src/libraries/LogExpMath.sol\":14736:15138  function ln(int256 a) internal pure returns (int256) {... */\n        tag_55:\n            /* \"src/libraries/LogExpMath.sol\":14922:14923  0 */\n          0x00\n            /* \"src/libraries/LogExpMath.sol\":14918:14923  a > 0 */\n          dup2\n          sgt\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          iszero\n          tag_952\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":14964:14985  LN_36_LOWER_BOUND < a */\n          dup1\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          0x0c7d713b49da0000\n            /* \"src/libraries/LogExpMath.sol\":14964:14985  LN_36_LOWER_BOUND < a */\n          slt\n            /* \"src/libraries/LogExpMath.sol\":14964:15010  LN_36_LOWER_BOUND < a && a < LN_36_UPPER_BOUND */\n          dup1\n          tag_954\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":14736:15138  function ln(int256 a) internal pure returns (int256) {... */\n        tag_955:\n            /* \"src/libraries/LogExpMath.sol\":14960:15122  if (LN_36_LOWER_BOUND < a && a < LN_36_UPPER_BOUND) {... */\n          iszero\n          tag_956\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n          0x0de0b6b3a7640000\n          swap1\n            /* \"src/libraries/LogExpMath.sol\":2125:2129  1e36 */\n          0xc097ce7bc90715b34b9f1000000000\n          swap1\n            /* \"src/libraries/LogExpMath.sol\":21785:21823  ((x - ONE_36) * ONE_36) / (x + ONE_36) */\n          tag_958\n          swap1\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup4\n          mul\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          dup3\n          dup2\n          add\n          swap1\n          0xffffffffffffffffffffffffffffffffff3f68318436f8ea4cb460f000000000\n          add\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup4\n          mul\n            /* \"src/libraries/LogExpMath.sol\":21785:21823  ((x - ONE_36) * ONE_36) / (x + ONE_36) */\n          tag_53\n          jump\t// in\n        tag_958:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap1\n          dup1\n          dup3\n          dup1\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap2\n          dup2\n          dup4\n          dup3\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup3\n          dup5\n          dup3\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup4\n          dup6\n          dup3\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap2\n          dup5\n          dup7\n          dup5\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap4\n          dup6\n          dup8\n          dup7\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap6\n          dup1\n          dup9\n          dup9\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap8\n          dup9\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogExpMath.sol\":22751:22753  15 */\n          0x0f\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          swap1\n          sdiv\n          swap7\n            /* \"src/libraries/LogExpMath.sol\":22669:22671  13 */\n          0x0d\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          swap1\n          sdiv\n          swap6\n            /* \"src/libraries/LogExpMath.sol\":22587:22589  11 */\n          0x0b\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          swap1\n          sdiv\n          swap5\n            /* \"src/libraries/LogExpMath.sol\":22506:22507  9 */\n          0x09\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          swap1\n          sdiv\n          swap4\n            /* \"src/libraries/LogExpMath.sol\":22425:22426  7 */\n          0x07\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          swap1\n          sdiv\n          swap3\n            /* \"src/libraries/LogExpMath.sol\":22344:22345  5 */\n          0x05\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          swap1\n          sdiv\n          swap2\n            /* \"src/libraries/LogExpMath.sol\":22263:22264  3 */\n          0x03\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          swap1\n          sdiv\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          add\n          add\n          add\n          add\n          add\n          add\n          add\n          0x01\n          shl\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogExpMath.sol\":15030:15055  return _ln_36(a) / ONE_18 */\n          swap1\n          jump\t// out\n            /* \"src/libraries/LogExpMath.sol\":14960:15122  if (LN_36_LOWER_BOUND < a && a < LN_36_UPPER_BOUND) {... */\n        tag_956:\n            /* \"src/libraries/LogExpMath.sol\":15101:15107  _ln(a) */\n          tag_792\n          swap1\n          tag_56\n          jump\t// in\n            /* \"src/libraries/LogExpMath.sol\":14964:15010  LN_36_LOWER_BOUND < a && a < LN_36_UPPER_BOUND */\n        tag_954:\n            /* \"src/libraries/LogExpMath.sol\":14989:15010  a < LN_36_UPPER_BOUND */\n          pop\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          0x0f43fc2c04ee0000\n            /* \"src/libraries/LogExpMath.sol\":14989:15010  a < LN_36_UPPER_BOUND */\n          dup2\n          slt\n            /* \"src/libraries/LogExpMath.sol\":14964:15010  LN_36_LOWER_BOUND < a && a < LN_36_UPPER_BOUND */\n          jump(tag_955)\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n        tag_952:\n          0x64\n          mload(0x40)\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          0x20\n          0x04\n          dup3\n          add\n          mstore\n          0x11\n          0x24\n          dup3\n          add\n          mstore\n          0x454d3a204f55545f4f465f424f554e4453000000000000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n        tag_56:\n            /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */\n          0x0de0b6b3a7640000\n            /* \"src/libraries/LogExpMath.sol\":15343:15353  a < ONE_18 */\n          dup2\n          slt\n            /* \"src/libraries/LogExpMath.sol\":15339:15760  if (a < ONE_18) {... */\n          tag_960\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":17686:17689  100 */\n          0x64\n            /* \"src/libraries/LogExpMath.sol\":17231:17245  int256 sum = 0 */\n          swap1\n            /* \"src/libraries/LogExpMath.sol\":17244:17245  0 */\n          0x00\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x1600ef3172e58d2e933ec884fde10064c63b5372d805e203c0000000000000\n            /* \"src/libraries/LogExpMath.sol\":17263:17279  a >= a0 * ONE_18 */\n          dup3\n          slt\n          iszero\n            /* \"src/libraries/LogExpMath.sol\":17259:17385  if (a >= a0 * ONE_18) {... */\n          tag_962\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n        tag_963:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x011798004d755d3c8bc8e03204cf44619e000000\n            /* \"src/libraries/LogExpMath.sol\":17403:17419  a >= a1 * ONE_18 */\n          dup3\n          slt\n          iszero\n            /* \"src/libraries/LogExpMath.sol\":17399:17525  if (a >= a1 * ONE_18) {... */\n          tag_964\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n        tag_965:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup3\n          mul\n          swap1\n          dup3\n          mul\n          dup2\n            /* \"src/libraries/LogExpMath.sol\":3567:3612  7_896_296_018_268_069_516_100_000_000_000_000 */\n          0x01855144814a7ff805980ff0084000\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup3\n            /* \"src/libraries/LogExpMath.sol\":17846:17853  a >= a2 */\n          dup2\n          dup2\n          slt\n          iszero\n            /* \"src/libraries/LogExpMath.sol\":17842:17936  if (a >= a2) {... */\n          tag_966\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n        tag_967:\n            /* \"src/libraries/LogExpMath.sol\":3714:3749  888_611_052_050_787_263_676_000_000 */\n          pop\n          pop\n          pop\n          0x02df0ab5a80a22c61ab5a700\n            /* \"src/libraries/LogExpMath.sol\":17954:17961  a >= a3 */\n          dup1\n          dup3\n          slt\n          iszero\n            /* \"src/libraries/LogExpMath.sol\":17950:18044  if (a >= a3) {... */\n          tag_968\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n        tag_969:\n            /* \"src/libraries/LogExpMath.sol\":3849:3880  298_095_798_704_172_827_474_000 */\n          pop\n          0x3f1fce3da636ea5cf850\n            /* \"src/libraries/LogExpMath.sol\":18062:18069  a >= a4 */\n          dup1\n          dup3\n          slt\n          iszero\n            /* \"src/libraries/LogExpMath.sol\":18058:18152  if (a >= a4) {... */\n          tag_970\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n        tag_971:\n            /* \"src/libraries/LogExpMath.sol\":3980:4009  5_459_815_003_314_423_907_810 */\n          pop\n          0x0127fa27722cc06cc5e2\n            /* \"src/libraries/LogExpMath.sol\":18170:18177  a >= a5 */\n          dup1\n          dup3\n          slt\n          iszero\n            /* \"src/libraries/LogExpMath.sol\":18166:18260  if (a >= a5) {... */\n          tag_972\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n        tag_973:\n            /* \"src/libraries/LogExpMath.sol\":4109:4136  738_905_609_893_065_022_723 */\n          pop\n          0x280e60114edb805d03\n            /* \"src/libraries/LogExpMath.sol\":18278:18285  a >= a6 */\n          dup1\n          dup3\n          slt\n          iszero\n            /* \"src/libraries/LogExpMath.sol\":18274:18368  if (a >= a6) {... */\n          tag_974\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n        tag_975:\n            /* \"src/libraries/LogExpMath.sol\":4236:4263  271_828_182_845_904_523_536 */\n          pop\n          0x0ebc5fb41746121110\n            /* \"src/libraries/LogExpMath.sol\":18386:18393  a >= a7 */\n          dup1\n          dup3\n          slt\n          iszero\n            /* \"src/libraries/LogExpMath.sol\":18382:18476  if (a >= a7) {... */\n          tag_976\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n        tag_977:\n            /* \"src/libraries/LogExpMath.sol\":4363:4390  164_872_127_070_012_814_685 */\n          pop\n          0x08f00f760a4b2db55d\n            /* \"src/libraries/LogExpMath.sol\":18494:18501  a >= a8 */\n          dup1\n          dup3\n          slt\n          iszero\n            /* \"src/libraries/LogExpMath.sol\":18490:18584  if (a >= a8) {... */\n          tag_978\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n        tag_979:\n            /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */\n          pop\n          0x06f5f1775788937937\n            /* \"src/libraries/LogExpMath.sol\":18602:18609  a >= a9 */\n          dup1\n          dup3\n          slt\n          iszero\n            /* \"src/libraries/LogExpMath.sol\":18598:18692  if (a >= a9) {... */\n          tag_980\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n        tag_981:\n            /* \"src/libraries/LogExpMath.sol\":4619:4646  113_314_845_306_682_631_683 */\n          pop\n          0x06248f33704b286603\n            /* \"src/libraries/LogExpMath.sol\":18710:18718  a >= a10 */\n          dup1\n          dup3\n          slt\n          iszero\n            /* \"src/libraries/LogExpMath.sol\":18706:18803  if (a >= a10) {... */\n          tag_982\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n        tag_983:\n            /* \"src/libraries/LogExpMath.sol\":4748:4775  106_449_445_891_785_942_956 */\n          pop\n          0x05c548670b9510e7ac\n            /* \"src/libraries/LogExpMath.sol\":18821:18829  a >= a11 */\n          dup1\n          dup3\n          slt\n          iszero\n            /* \"src/libraries/LogExpMath.sol\":18817:18914  if (a >= a11) {... */\n          tag_984\n          jumpi\n            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n        tag_985:\n            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n          pop\n            /* \"src/libraries/LogExpMath.sol\":19470:19508  ((a - ONE_20) * ONE_20) / (a + ONE_20) */\n          tag_986\n            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n          0x056bc75e2d63100000\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          swap2\n          dup3\n          0xfffffffffffffffffffffffffffffffffffffffffffffffa9438a1d29cf00000\n          dup2\n          dup4\n          add\n          swap3\n          add\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mul\n            /* \"src/libraries/LogExpMath.sol\":19470:19508  ((a - ONE_20) * ONE_20) / (a + ONE_20) */\n          tag_53\n          jump\t// in\n        tag_986:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap1\n          dup1\n          dup3\n          dup1\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap2\n          dup2\n          dup4\n          dup3\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup3\n          dup5\n          dup3\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap2\n            /* \"src/libraries/LogExpMath.sol\":19948:19949  3 */\n          0x03\n            /* \"src/libraries/LogExpMath.sol\":20029:20030  5 */\n          0x05\n            /* \"src/libraries/LogExpMath.sol\":20110:20111  7 */\n          0x07\n            /* \"src/libraries/LogExpMath.sol\":20191:20192  9 */\n          0x09\n            /* \"src/libraries/LogExpMath.sol\":20272:20274  11 */\n          0x0b\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup9\n          dup11\n          dup10\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap9\n          dup1\n          dup12\n          dup12\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap11\n          dup12\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n          sdiv\n          swap9\n          sdiv\n          swap7\n          sdiv\n          swap5\n          sdiv\n          swap3\n          sdiv\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          add\n          add\n          add\n          add\n          add\n          0x01\n          shl\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          add\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */\n          swap1\n          jump\t// out\n            /* \"src/libraries/LogExpMath.sol\":18817:18914  if (a >= a11) {... */\n        tag_984:\n            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n          0x056bc75e2d63100000\n            /* \"src/libraries/LogExpMath.sol\":4686:4711  6_250_000_000_000_000_000 */\n          0x56bc75e2d6310000\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap3\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          swap2\n          add\n            /* \"src/libraries/LogExpMath.sol\":18817:18914  if (a >= a11) {... */\n          swap1\n          codesize\n          jump(tag_985)\n            /* \"src/libraries/LogExpMath.sol\":18706:18803  if (a >= a10) {... */\n        tag_982:\n            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n          0x056bc75e2d63100000\n            /* \"src/libraries/LogExpMath.sol\":4556:4582  12_500_000_000_000_000_000 */\n          0xad78ebc5ac620000\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap3\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          swap2\n          add\n            /* \"src/libraries/LogExpMath.sol\":18706:18803  if (a >= a10) {... */\n          swap1\n          codesize\n          jump(tag_983)\n            /* \"src/libraries/LogExpMath.sol\":18598:18692  if (a >= a9) {... */\n        tag_980:\n            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n          0x056bc75e2d63100000\n            /* \"src/libraries/LogExpMath.sol\":4428:4454  25_000_000_000_000_000_000 */\n          0x015af1d78b58c40000\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap3\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          swap2\n          add\n            /* \"src/libraries/LogExpMath.sol\":18598:18692  if (a >= a9) {... */\n          swap1\n          codesize\n          jump(tag_981)\n            /* \"src/libraries/LogExpMath.sol\":18490:18584  if (a >= a8) {... */\n        tag_978:\n            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n          0x056bc75e2d63100000\n            /* \"src/libraries/LogExpMath.sol\":4301:4327  50_000_000_000_000_000_000 */\n          0x02b5e3af16b1880000\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap3\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          swap2\n          add\n            /* \"src/libraries/LogExpMath.sol\":18490:18584  if (a >= a8) {... */\n          swap1\n          codesize\n          jump(tag_979)\n            /* \"src/libraries/LogExpMath.sol\":18382:18476  if (a >= a7) {... */\n        tag_976:\n            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n          0x056bc75e2d63100000\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          dup1\n          swap3\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          swap2\n          add\n            /* \"src/libraries/LogExpMath.sol\":18382:18476  if (a >= a7) {... */\n          swap1\n          codesize\n          jump(tag_977)\n            /* \"src/libraries/LogExpMath.sol\":18274:18368  if (a >= a6) {... */\n        tag_974:\n            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n          0x056bc75e2d63100000\n            /* \"src/libraries/LogExpMath.sol\":4047:4074  200_000_000_000_000_000_000 */\n          0x0ad78ebc5ac6200000\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap3\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          swap2\n          add\n            /* \"src/libraries/LogExpMath.sol\":18274:18368  if (a >= a6) {... */\n          swap1\n          codesize\n          jump(tag_975)\n            /* \"src/libraries/LogExpMath.sol\":18166:18260  if (a >= a5) {... */\n        tag_972:\n            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n          0x056bc75e2d63100000\n            /* \"src/libraries/LogExpMath.sol\":3918:3945  400_000_000_000_000_000_000 */\n          0x15af1d78b58c400000\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap3\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          swap2\n          add\n            /* \"src/libraries/LogExpMath.sol\":18166:18260  if (a >= a5) {... */\n          swap1\n          codesize\n          jump(tag_973)\n            /* \"src/libraries/LogExpMath.sol\":18058:18152  if (a >= a4) {... */\n        tag_970:\n            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n          0x056bc75e2d63100000\n            /* \"src/libraries/LogExpMath.sol\":3787:3814  800_000_000_000_000_000_000 */\n          0x2b5e3af16b18800000\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap3\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          swap2\n          add\n            /* \"src/libraries/LogExpMath.sol\":18058:18152  if (a >= a4) {... */\n          swap1\n          codesize\n          jump(tag_971)\n            /* \"src/libraries/LogExpMath.sol\":17950:18044  if (a >= a3) {... */\n        tag_968:\n            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n          0x056bc75e2d63100000\n            /* \"src/libraries/LogExpMath.sol\":3650:3679  1_600_000_000_000_000_000_000 */\n          0x56bc75e2d631000000\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap3\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          swap2\n          add\n            /* \"src/libraries/LogExpMath.sol\":17950:18044  if (a >= a3) {... */\n          swap1\n          codesize\n          jump(tag_969)\n            /* \"src/libraries/LogExpMath.sol\":17842:17936  if (a >= a2) {... */\n        tag_966:\n            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */\n          0x056bc75e2d63100000\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap2\n          swap3\n          swap5\n          pop\n            /* \"src/libraries/LogExpMath.sol\":3503:3532  3_200_000_000_000_000_000_000 */\n          0xad78ebc5ac62000000\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap4\n          pop\n          mul\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          sdiv\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          swap2\n          add\n            /* \"src/libraries/LogExpMath.sol\":17842:17936  if (a >= a2) {... */\n          swap1\n          codesize\n          dup1\n          dup1\n          jump(tag_967)\n            /* \"src/libraries/LogExpMath.sol\":17399:17525  if (a >= a1 * ONE_18) {... */\n        tag_964:\n            /* \"src/libraries/LogExpMath.sol\":3385:3422  6_235_149_080_811_616_882_910_000_000 */\n          0x1425982cf597cd205cef7380\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          swap1\n          swap2\n          sdiv\n          swap1\n            /* \"src/libraries/LogExpMath.sol\":3324:3350  64_000_000_000_000_000_000 */\n          0x03782dace9d9000000\n            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */\n          add\n            /* \"src/libraries/LogExpMath.sol\":17399:17525  if (a >= a1 * ONE_18) {... */\n          jump(tag_965)\n            /* \"src/libraries/LogExpMath.sol\":17259:17385  if (a >= a0 * ONE_18) {... */\n        tag_962:\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          pop\n            /* \"src/libraries/LogExpMath.sol\":3187:3261  38_877_084_059_945_950_922_200_000_000_000_000_000_000_000_000_000_000_000 */\n          0x0195e54c5dd42177f53a27172fa9ec630262827000000000\n            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */\n          swap1\n          sdiv\n            /* \"src/libraries/LogExpMath.sol\":3125:3152  128_000_000_000_000_000_000 */\n          0x06f05b59d3b2000000\n            /* \"src/libraries/LogExpMath.sol\":17259:17385  if (a >= a0 * ONE_18) {... */\n          jump(tag_963)\n            /* \"src/libraries/LogExpMath.sol\":15339:15760  if (a < ONE_18) {... */\n        tag_960:\n            /* \"src/libraries/LogExpMath.sol\":15722:15743  (ONE_18 * ONE_18) / a */\n          tag_987\n            /* \"src/libraries/LogExpMath.sol\":15718:15744  _ln((ONE_18 * ONE_18) / a) */\n          tag_988\n            /* \"src/libraries/LogExpMath.sol\":15722:15743  (ONE_18 * ONE_18) / a */\n          swap2\n          tag_52\n          jump\t// in\n        tag_987:\n            /* \"src/libraries/LogExpMath.sol\":15718:15744  _ln((ONE_18 * ONE_18) / a) */\n          tag_56\n          jump\t// in\n        tag_988:\n          0x00\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          sub\n            /* \"src/libraries/LogExpMath.sol\":15709:15745  return (-_ln((ONE_18 * ONE_18) / a)) */\n          swap1\n          jump\t// out\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n        tag_57:\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n          dup2\n          eq\n          tag_636\n          jumpi\n          0x01\n          add\n          swap1\n          jump\t// out\n            /* \"src/libraries/StableMath.sol\":3525:4633  function _computeLiquidityFromAdjustedBalances(... */\n        tag_58:\n          swap2\n          swap1\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x00\n            /* \"src/libraries/StableMath.sol\":3738:3747  xp0 + xp1 */\n          swap2\n          tag_991\n          dup3\n          dup6\n          tag_24\n          jump\t// in\n        tag_991:\n            /* \"src/libraries/StableMath.sol\":3761:3767  s == 0 */\n          swap1\n          dup2\n          iszero\n            /* \"src/libraries/StableMath.sol\":3757:3802  if (s == 0) {... */\n          tag_992\n          jumpi\n            /* \"src/libraries/StableMath.sol\":3812:3825  uint256 prevD */\n          dup4\n            /* \"src/libraries/StableMath.sol\":3891:3904  uint256 D = s */\n          dup3\n            /* \"src/libraries/StableMath.sol\":3927:3962  xp0 < xp1 ? (xp0, xp1) : (xp1, xp0) */\n          swap6\n            /* \"src/libraries/StableMath.sol\":3927:3936  xp0 < xp1 */\n          dup5\n          dup2\n          lt\n            /* \"src/libraries/StableMath.sol\":3927:3962  xp0 < xp1 ? (xp0, xp1) : (xp1, xp0) */\n          0x00\n            /* \"src/libraries/StableMath.sol\":3927:3936  xp0 < xp1 */\n          eq\n          tag_994\n          jumpi\n            /* \"src/libraries/StableMath.sol\":3927:3962  xp0 < xp1 ? (xp0, xp1) : (xp1, xp0) */\n          swap3\n          swap2\n          swap1\n        tag_996:\n            /* \"src/libraries/StableMath.sol\":3977:3990  uint256 i = 0 */\n          dup1\n            /* \"src/libraries/StableMath.sol\":3972:4294  for (uint256 i = 0; i < MAX_LOOP_LIMIT; i++) {... */\n          swap5\n            /* \"src/libraries/StableMath.sol\":3992:4010  i < MAX_LOOP_LIMIT */\n        tag_997:\n            /* \"src/libraries/StableMath.sol\":929:932  256 */\n          0x0100\n            /* \"src/libraries/StableMath.sol\":3992:4010  i < MAX_LOOP_LIMIT */\n          dup7\n          lt\n          tag_998\n          jumpi\n            /* \"src/libraries/StableMath.sol\":4451:4481  stdMath.percentDelta(D, prevD) */\n          pop\n          pop\n          pop\n          pop\n          pop\n          pop\n            /* \"src/libraries/StableMath.sol\":4511:4529  0.0000000000004e18 */\n          0x061a80\n            /* \"src/libraries/StableMath.sol\":4451:4481  stdMath.percentDelta(D, prevD) */\n          tag_1000\n          dup3\n          dup5\n          tag_50\n          jump\t// in\n        tag_1000:\n            /* \"src/libraries/StableMath.sol\":4495:4529  percentDelta <= 0.0000000000004e18 */\n          gt\n          iszero\n            /* \"src/libraries/StableMath.sol\":4491:4578  if (percentDelta <= 0.0000000000004e18) {... */\n          tag_1001\n          jumpi\n            /* \"src/libraries/StableMath.sol\":320:323  100 */\n          0x64\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mload(0x40)\n            /* \"src/libraries/StableMath.sol\":4588:4626  revert(\"SM: COMPUTE_DID_NOT_CONVERGE\") */\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n            /* \"src/libraries/StableMath.sol\":929:932  256 */\n          0x20\n            /* \"src/libraries/StableMath.sol\":4074:4075  4 */\n          0x04\n            /* \"src/libraries/StableMath.sol\":4588:4626  revert(\"SM: COMPUTE_DID_NOT_CONVERGE\") */\n          dup3\n          add\n            /* \"src/libraries/StableMath.sol\":929:932  256 */\n          mstore\n          0x1c\n          0x24\n          dup3\n          add\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mstore\n            /* \"src/libraries/StableMath.sol\":929:932  256 */\n          0x534d3a20434f4d505554455f4449445f4e4f545f434f4e564552474500000000\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x44\n          dup3\n          add\n            /* \"src/libraries/StableMath.sol\":929:932  256 */\n          mstore\n            /* \"src/libraries/StableMath.sol\":4588:4626  revert(\"SM: COMPUTE_DID_NOT_CONVERGE\") */\n          revert\n            /* \"src/libraries/StableMath.sol\":4491:4578  if (percentDelta <= 0.0000000000004e18) {... */\n        tag_1001:\n            /* \"src/libraries/StableMath.sol\":4553:4562  D + prevD */\n          tag_1003\n          swap2\n          tag_24\n          jump\t// in\n        tag_1003:\n            /* \"src/libraries/StableMath.sol\":409:415  1 days */\n          0x01\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          shr\n            /* \"src/libraries/StableMath.sol\":4545:4567  return (D + prevD) / 2 */\n          swap1\n          jump\t// out\n            /* \"src/libraries/StableMath.sol\":4012:4015  i++ */\n        tag_998:\n            /* \"src/libraries/StableMath.sol\":4047:4052  D * D */\n          swap1\n          swap2\n          swap3\n          swap4\n          swap5\n          swap6\n          pop\n            /* \"src/libraries/StableMath.sol\":4044:4071  (((D * D) / xp0) * D) / xp1 */\n          tag_1004\n            /* \"src/libraries/StableMath.sol\":4047:4052  D * D */\n          dup2\n            /* \"src/libraries/StableMath.sol\":4045:4064  ((D * D) / xp0) * D */\n          tag_1007\n            /* \"src/libraries/StableMath.sol\":4047:4052  D * D */\n          dup10\n            /* \"src/libraries/StableMath.sol\":4046:4059  (D * D) / xp0 */\n          tag_918\n            /* \"src/libraries/StableMath.sol\":4047:4052  D * D */\n          dup10\n          tag_1007\n          dup4\n          dup1\n          tag_41\n          jump\t// in\n        tag_1007:\n            /* \"src/libraries/StableMath.sol\":4046:4059  (D * D) / xp0 */\n          tag_42\n          jump\t// in\n            /* \"src/libraries/StableMath.sol\":4044:4071  (((D * D) / xp0) * D) / xp1 */\n        tag_1004:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap6\n          dup7\n            /* \"src/libraries/StableMath.sol\":4144:4145  2 */\n          0x02\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          shr\n            /* \"src/libraries/StableMath.sol\":4089:4098  prevD = D */\n          swap8\n          dup1\n          swap9\n          dup7\n            /* \"src/libraries/StableMath.sol\":4117:4155  ((N_A * s) / A_PRECISION + 2 * dP) * D */\n          tag_1008\n            /* \"src/libraries/StableMath.sol\":4089:4098  prevD = D */\n          dup4\n            /* \"src/libraries/StableMath.sol\":4118:4150  (N_A * s) / A_PRECISION + 2 * dP */\n          tag_918\n            /* \"src/libraries/StableMath.sol\":4089:4098  prevD = D */\n          dup2\n            /* \"src/libraries/StableMath.sol\":320:323  100 */\n          swap13\n            /* \"src/libraries/StableMath.sol\":409:415  1 days */\n          0x7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\n            /* \"src/libraries/StableMath.sol\":320:323  100 */\n          dup12\n            /* \"src/libraries/StableMath.sol\":4119:4126  N_A * s */\n          tag_1010\n            /* \"src/libraries/StableMath.sol\":320:323  100 */\n          0x64\n            /* \"src/libraries/StableMath.sol\":4119:4126  N_A * s */\n          swap8\n          dup9\n          swap3\n          tag_41\n          jump\t// in\n        tag_1010:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          div\n            /* \"src/libraries/StableMath.sol\":409:415  1 days */\n          swap2\n          0x01\n          shr\n          and\n            /* \"src/libraries/StableMath.sol\":4118:4150  (N_A * s) / A_PRECISION + 2 * dP */\n          swap1\n          tag_24\n          jump\t// in\n            /* \"src/libraries/StableMath.sol\":4117:4155  ((N_A * s) / A_PRECISION + 2 * dP) * D */\n        tag_1008:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          swap3\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9c\n          dup9\n          add\n          dup9\n          dup2\n          gt\n          tag_1011\n          jumpi\n            /* \"src/libraries/StableMath.sol\":4160:4183  (N_A - A_PRECISION) * D */\n          swap1\n          tag_1013\n          swap2\n          tag_41\n          jump\t// in\n        tag_1013:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          div\n            /* \"src/libraries/StableMath.sol\":4200:4201  3 */\n          0x03\n            /* \"src/libraries/StableMath.sol\":409:415  1 days */\n          swap2\n          dup1\n          dup4\n          mul\n          swap3\n          dup4\n          div\n          sub\n          tag_1014\n          jumpi\n            /* \"src/libraries/StableMath.sol\":4116:4207  (((N_A * s) / A_PRECISION + 2 * dP) * D) / ((N_A - A_PRECISION) * D / A_PRECISION + 3 * dP) */\n          tag_1016\n            /* \"src/libraries/StableMath.sol\":4160:4206  (N_A - A_PRECISION) * D / A_PRECISION + 3 * dP */\n          swap3\n          swap2\n          tag_1017\n          swap2\n          tag_24\n          jump\t// in\n        tag_1017:\n            /* \"src/libraries/StableMath.sol\":4116:4207  (((N_A * s) / A_PRECISION + 2 * dP) * D) / ((N_A - A_PRECISION) * D / A_PRECISION + 3 * dP) */\n          swap1\n          tag_42\n          jump\t// in\n        tag_1016:\n            /* \"src/libraries/StableMath.sol\":4225:4241  D.within1(prevD) */\n          tag_1018\n            /* \"src/libraries/StableMath.sol\":4112:4207  D = (((N_A * s) / A_PRECISION + 2 * dP) * D) / ((N_A - A_PRECISION) * D / A_PRECISION + 3 * dP) */\n          dup2\n            /* \"src/libraries/StableMath.sol\":4225:4241  D.within1(prevD) */\n          swap10\n          dup3\n          tag_59\n          jump\t// in\n        tag_1018:\n            /* \"src/libraries/StableMath.sol\":4221:4284  if (D.within1(prevD)) {... */\n          tag_1019\n          jumpi\n            /* \"src/libraries/StableMath.sol\":4012:4015  i++ */\n          pop\n          tag_1021\n          swap1\n          tag_57\n          jump\t// in\n        tag_1021:\n            /* \"src/libraries/StableMath.sol\":3977:3990  uint256 i = 0 */\n          swap5\n          swap4\n          swap3\n          swap2\n          swap1\n          jump(tag_997)\n            /* \"src/libraries/StableMath.sol\":4221:4284  if (D.within1(prevD)) {... */\n        tag_1019:\n            /* \"src/libraries/StableMath.sol\":4261:4269  return D */\n          swap8\n          pop\n          pop\n          pop\n          pop\n          pop\n          pop\n          pop\n          pop\n          swap1\n          jump\t// out\n            /* \"src/libraries/StableMath.sol\":409:415  1 days */\n        tag_1014:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x24\n          dup7\n          0x4e487b7100000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          0x11\n            /* \"src/libraries/StableMath.sol\":4074:4075  4 */\n          0x04\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mstore\n          revert\n        tag_1011:\n          0x24\n          dup9\n          0x4e487b7100000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          0x11\n            /* \"src/libraries/StableMath.sol\":4074:4075  4 */\n          0x04\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mstore\n          revert\n            /* \"src/libraries/StableMath.sol\":3927:3962  xp0 < xp1 ? (xp0, xp1) : (xp1, xp0) */\n        tag_994:\n          swap4\n          swap3\n          swap2\n          swap1\n          jump(tag_996)\n            /* \"src/libraries/StableMath.sol\":3757:3802  if (s == 0) {... */\n        tag_992:\n            /* \"src/libraries/StableMath.sol\":3783:3791  return 0 */\n          pop\n          pop\n          pop\n          swap1\n          pop\n          swap1\n          jump\t// out\n            /* \"src/libraries/MathUtils.sol\":519:729  function within1(uint256 a, uint256 b) internal pure returns (bool) {... */\n        tag_59:\n            /* \"src/libraries/MathUtils.sol\":711:712  1 */\n          0x01\n            /* \"src/libraries/MathUtils.sol\":519:729  function within1(uint256 a, uint256 b) internal pure returns (bool) {... */\n          swap2\n            /* \"src/libraries/MathUtils.sol\":625:630  a > b */\n          dup1\n          dup3\n          gt\n            /* \"src/libraries/MathUtils.sol\":621:682  if (a > b) {... */\n          tag_1022\n          jumpi\n            /* \"src/libraries/StableMath.sol\":991:1000  1_000_000 */\n          sub\n            /* \"src/libraries/MathUtils.sol\":702:712  b - a <= 1 */\n          gt\n          iszero\n            /* \"src/libraries/MathUtils.sol\":519:729  function within1(uint256 a, uint256 b) internal pure returns (bool) {... */\n          swap1\n          jump\t// out\n            /* \"src/libraries/MathUtils.sol\":621:682  if (a > b) {... */\n        tag_1022:\n            /* \"src/libraries/StableMath.sol\":991:1000  1_000_000 */\n          swap1\n          sub\n            /* \"src/libraries/MathUtils.sol\":657:667  a - b <= 1 */\n          gt\n          iszero\n            /* \"src/libraries/MathUtils.sol\":650:667  return a - b <= 1 */\n          swap1\n          jump\t// out\n            /* \"src/libraries/StableMath.sol\":5159:5838  function _getY(... */\n        tag_60:\n          swap1\n          swap2\n            /* \"src/libraries/StableMath.sol\":5382:5387  D * D */\n          tag_1024\n          dup4\n          dup1\n          tag_41\n          jump\t// in\n        tag_1024:\n            /* \"src/libraries/StableMath.sol\":409:415  1 days */\n          swap3\n          0x01\n          swap2\n          dup4\n          dup4\n          shl\n            /* \"src/libraries/StableMath.sol\":5396:5397  2 */\n          swap5\n          0x02\n            /* \"src/libraries/StableMath.sol\":409:415  1 days */\n          swap6\n          dup6\n          dup2\n          div\n          dup8\n          eq\n          dup7\n          iszero\n          or\n          iszero\n          tag_636\n          jumpi\n            /* \"src/libraries/StableMath.sol\":5381:5398  (D * D) / (x * 2) */\n          tag_918\n          dup5\n          swap2\n            /* \"src/libraries/StableMath.sol\":5413:5418  c * D */\n          tag_1028\n            /* \"src/libraries/StableMath.sol\":5381:5398  (D * D) / (x * 2) */\n          swap4\n          tag_42\n          jump\t// in\n            /* \"src/libraries/StableMath.sol\":5413:5418  c * D */\n        tag_1028:\n            /* \"src/libraries/StableMath.sol\":320:323  100 */\n          0x64\n            /* \"src/libraries/StableMath.sol\":409:415  1 days */\n          dup2\n          mul\n          swap1\n          dup1\n          dup3\n          div\n            /* \"src/libraries/StableMath.sol\":320:323  100 */\n          0x64\n            /* \"src/libraries/StableMath.sol\":409:415  1 days */\n          eq\n          swap1\n          iszero\n          or\n          iszero\n          tag_636\n          jumpi\n          dup2\n          dup5\n          shl\n          dup3\n          dup2\n          div\n          dup8\n          eq\n          dup4\n          iszero\n          or\n          iszero\n          tag_636\n          jumpi\n            /* \"src/libraries/StableMath.sol\":5412:5445  (c * D) * A_PRECISION / (N_A * 2) */\n          tag_1033\n          swap2\n          tag_42\n          jump\t// in\n        tag_1033:\n            /* \"src/libraries/StableMath.sol\":409:415  1 days */\n          swap4\n            /* \"src/libraries/StableMath.sol\":320:323  100 */\n          0x64\n            /* \"src/libraries/StableMath.sol\":409:415  1 days */\n          dup4\n          mul\n          dup4\n          dup2\n          div\n            /* \"src/libraries/StableMath.sol\":320:323  100 */\n          0x64\n            /* \"src/libraries/StableMath.sol\":409:415  1 days */\n          eq\n          dup5\n          iszero\n          or\n          iszero\n          tag_636\n          jumpi\n            /* \"src/libraries/StableMath.sol\":5467:5496  x + ((D * A_PRECISION) / N_A) */\n          tag_1036\n            /* \"src/libraries/StableMath.sol\":5472:5495  (D * A_PRECISION) / N_A */\n          swap3\n          tag_751\n          swap2\n          tag_42\n          jump\t// in\n            /* \"src/libraries/StableMath.sol\":5467:5496  x + ((D * A_PRECISION) / N_A) */\n        tag_1036:\n            /* \"src/libraries/StableMath.sol\":5529:5534  y = D */\n          dup2\n            /* \"src/libraries/StableMath.sol\":5590:5603  uint256 i = 0 */\n          swap5\n          0x00\n          dup1\n            /* \"src/libraries/StableMath.sol\":5605:5623  i < MAX_LOOP_LIMIT */\n        tag_1038:\n            /* \"src/libraries/StableMath.sol\":929:932  256 */\n          0x0100\n            /* \"src/libraries/StableMath.sol\":5605:5623  i < MAX_LOOP_LIMIT */\n          dup2\n          lt\n          tag_1039\n          jumpi\n            /* \"src/libraries/StableMath.sol\":320:323  100 */\n          0x64\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mload(0x40)\n            /* \"src/libraries/StableMath.sol\":5796:5831  revert(\"SM: GETY_DID_NOT_CONVERGE\") */\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x20\n            /* \"src/libraries/StableMath.sol\":5796:5831  revert(\"SM: GETY_DID_NOT_CONVERGE\") */\n          0x04\n          dup3\n          add\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          mstore\n          0x19\n          0x24\n          dup3\n          add\n          mstore\n          0x534d3a20474554595f4449445f4e4f545f434f4e564552474500000000000000\n          0x44\n          dup3\n          add\n          mstore\n            /* \"src/libraries/StableMath.sol\":5796:5831  revert(\"SM: GETY_DID_NOT_CONVERGE\") */\n          revert\n            /* \"src/libraries/StableMath.sol\":5625:5628  i++ */\n        tag_1039:\n            /* \"src/libraries/StableMath.sol\":5644:5653  yPrev = y */\n          dup8\n            /* \"src/libraries/StableMath.sol\":5672:5681  y * y + c */\n          tag_1041\n            /* \"src/libraries/StableMath.sol\":5672:5677  y * y */\n          dup9\n          tag_1042\n          dup4\n          dup1\n          tag_41\n          jump\t// in\n        tag_1042:\n            /* \"src/libraries/StableMath.sol\":5672:5681  y * y + c */\n          tag_24\n          jump\t// in\n        tag_1041:\n            /* \"src/libraries/StableMath.sol\":409:415  1 days */\n          swap1\n          dup1\n          dup9\n          shl\n          swap1\n          dup1\n          dup3\n          div\n          dup7\n          eq\n          swap1\n          iszero\n          or\n          iszero\n          tag_1043\n          jumpi\n            /* \"src/libraries/StableMath.sol\":5718:5734  y.within1(yPrev) */\n          tag_1045\n            /* \"src/libraries/StableMath.sol\":5686:5695  y * 2 + b */\n          swap2\n            /* \"src/libraries/StableMath.sol\":5686:5699  y * 2 + b - D */\n          tag_1017\n            /* \"src/libraries/StableMath.sol\":5686:5695  y * 2 + b */\n          dup9\n          tag_331\n          dup10\n            /* \"src/libraries/StableMath.sol\":5671:5700  (y * y + c) / (y * 2 + b - D) */\n          tag_1048\n            /* \"src/libraries/StableMath.sol\":5686:5695  y * 2 + b */\n          swap6\n          tag_24\n          jump\t// in\n            /* \"src/libraries/StableMath.sol\":5671:5700  (y * y + c) / (y * 2 + b - D) */\n        tag_1048:\n            /* \"src/libraries/StableMath.sol\":5718:5734  y.within1(yPrev) */\n          swap9\n          dup10\n          tag_59\n          jump\t// in\n        tag_1045:\n            /* \"src/libraries/StableMath.sol\":5714:5777  if (y.within1(yPrev)) {... */\n          tag_1049\n          jumpi\n            /* \"src/libraries/StableMath.sol\":5625:5628  i++ */\n          tag_1051\n          swap1\n          tag_57\n          jump\t// in\n        tag_1051:\n            /* \"src/libraries/StableMath.sol\":5590:5603  uint256 i = 0 */\n          jump(tag_1038)\n            /* \"src/libraries/StableMath.sol\":5714:5777  if (y.within1(yPrev)) {... */\n        tag_1049:\n            /* \"src/libraries/StableMath.sol\":5754:5762  return y */\n          pop\n          pop\n          pop\n          pop\n          pop\n          pop\n          pop\n          swap1\n          jump\t// out\n            /* \"src/libraries/StableMath.sol\":409:415  1 days */\n        tag_1043:\n            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */\n          0x24\n          dup5\n          0x4e487b7100000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          mstore(0x04, 0x11)\n          revert\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":704:868  function mulWadDown(uint256 x, uint256 y) internal pure returns (uint256) {... */\n        tag_61:\n          swap1\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":655:659  1e18 */\n          0x0de0b6b3a7640000\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":1744:2084  assembly {... */\n          swap2\n          dup2\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n          div\n          dup2\n          gt\n          dup3\n          mul\n          iszero\n          dup4\n          mul\n          iszero\n          tag_632\n          jumpi\n          mul\n          div\n            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":704:868  function mulWadDown(uint256 x, uint256 y) internal pure returns (uint256) {... */\n          swap1\n          jump\t// out\n\n        auxdata: 0xa164736f6c6343000811000a\n    }\n}\n\nsub_5: assembly {\n        /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_1, callvalue)\n        /* \"lib/solmate/src/auth/Owned.sol\":1045:1059  owner = _owner */\n      0x00\n        /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n        /* \"src/oracle/OracleCaller.sol\":174:184  msg.sender */\n      caller\n        /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */\n      swap1\n      dup2\n      or\n      dup3\n      sstore\n        /* \"src/oracle/OracleCaller.sol\":174:184  msg.sender */\n      swap1\n        /* \"lib/solmate/src/auth/Owned.sol\":1075:1115  OwnershipTransferred(address(0), _owner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n        /* \"lib/solmate/src/auth/Owned.sol\":1045:1059  owner = _owner */\n      dup2\n      dup1\n        /* \"lib/solmate/src/auth/Owned.sol\":1075:1115  OwnershipTransferred(address(0), _owner) */\n      log3\n        /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */\n      dataSize(sub_0)\n      swap1\n      dup2\n      dataOffset(sub_0)\n      dup3\n      codecopy\n      return\n    tag_1:\n      0x00\n      dup1\n      revert\n    stop\n\n    sub_0: assembly {\n            /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */\n          0x80\n          0x40\n          swap1\n          dup1\n          dup3\n          mstore\n          jumpi(tag_5, iszero(lt(calldatasize, 0x04)))\n          0x00\n          dup1\n          revert\n        tag_5:\n          0x00\n          swap2\n          dup3\n          calldataload\n          0xe0\n          shr\n          swap2\n          dup3\n          0x8da5cb5b\n          eq\n          tag_7\n          jumpi\n          pop\n          dup2\n          0x9b19251a\n          eq\n          tag_9\n          jumpi\n          dup2\n          0xb9a45aac\n          eq\n          tag_11\n          jumpi\n          dup2\n          0xc9d163d1\n          eq\n          tag_13\n          jumpi\n          pop\n          0xf2fde38b\n          eq\n          tag_15\n          jumpi\n          0x00\n          dup1\n          revert\n        tag_15:\n          jumpi(tag_19, callvalue)\n          jumpi(tag_19, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))\n          0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n          tag_21\n          tag_1\n          jump\t// in\n        tag_21:\n          dup3\n          sload\n          swap1\n          0xffffffffffffffffffffffffffffffffffffffff\n          swap1\n            /* \"lib/solmate/src/auth/Owned.sol\":756:800  require(msg.sender == owner, \"UNAUTHORIZED\") */\n          tag_22\n            /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */\n          dup3\n          dup5\n          and\n            /* \"lib/solmate/src/auth/Owned.sol\":764:774  msg.sender */\n          caller\n            /* \"lib/solmate/src/auth/Owned.sol\":764:783  msg.sender == owner */\n          eq\n            /* \"lib/solmate/src/auth/Owned.sol\":756:800  require(msg.sender == owner, \"UNAUTHORIZED\") */\n          tag_2\n          jump\t// in\n        tag_22:\n            /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */\n          and\n          swap2\n          dup3\n          swap2\n          and\n          or\n          dup3\n          sstore\n            /* \"lib/solmate/src/auth/Owned.sol\":764:774  msg.sender */\n          caller\n            /* \"lib/solmate/src/auth/Owned.sol\":1424:1466  OwnershipTransferred(msg.sender, newOwner) */\n          0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n          dup4\n          dup1\n          log3\n            /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */\n          dup1\n          return\n        tag_19:\n          dup1\n          revert\n        tag_13:\n          dup3\n          jumpi(tag_19, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_19\n          jumpi\n          calldataload(0x04)\n          swap1\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup3\n          and\n          dup1\n          swap3\n          sub\n          tag_19\n          jumpi\n          dup3\n          mload\n          swap2\n          tag_29\n          dup4\n          tag_3\n          jump\t// in\n        tag_29:\n          dup2\n          dup4\n          mstore\n          dup2\n          0x60\n          0x20\n          swap5\n          dup3\n          dup7\n          dup3\n          add\n          mstore\n          dup3\n          dup8\n          dup3\n          add\n          mstore\n          add\n          mstore\n            /* \"src/oracle/OracleCaller.sol\":443:453  msg.sender */\n          caller\n            /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */\n          dup3\n          mstore\n          0x01\n          dup4\n          mstore\n          0xff\n          dup5\n          dup4\n          keccak256\n          sload\n          and\n          iszero\n          tag_30\n          jumpi\n          0x80\n          0x24\n          swap2\n          dup6\n          mload\n            /* \"src/oracle/OracleCaller.sol\":503:528  aPair.observation(aIndex) */\n          swap3\n          dup4\n          dup1\n          swap3\n            /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */\n          0x9d62a69400000000000000000000000000000000000000000000000000000000\n            /* \"src/oracle/OracleCaller.sol\":503:528  aPair.observation(aIndex) */\n          dup3\n          mstore\n            /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */\n          dup3\n          calldataload\n          0x04\n            /* \"src/oracle/OracleCaller.sol\":503:528  aPair.observation(aIndex) */\n          dup4\n          add\n            /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */\n          mstore\n            /* \"src/oracle/OracleCaller.sol\":503:528  aPair.observation(aIndex) */\n          gas\n          staticcall\n          swap2\n          dup3\n          iszero\n          tag_32\n          jumpi\n          dup1\n          swap3\n          tag_34\n          jumpi\n            /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */\n        tag_35:\n          0x80\n          dup5\n          0xffffffff\n          0x60\n          dup7\n          dup10\n          dup1\n          mload\n          swap5\n          dup3\n          mload\n          0x0d\n          signextend\n          dup7\n          mstore\n          dup1\n          dup4\n          add\n          mload\n          0x06\n          signextend\n          swap1\n          dup7\n          add\n          mstore\n          dup1\n          dup3\n          add\n          mload\n          0x06\n          signextend\n          swap1\n          dup6\n          add\n          mstore\n          add\n          mload\n          and\n          0x60\n          dup3\n          add\n          mstore\n          return\n            /* \"src/oracle/OracleCaller.sol\":503:528  aPair.observation(aIndex) */\n        tag_34:\n            /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */\n          0x80\n          swap3\n          pop\n            /* \"src/oracle/OracleCaller.sol\":503:528  aPair.observation(aIndex) */\n          swap1\n          returndatasize\n          dup4\n          gt\n          tag_36\n          jumpi\n        tag_37:\n            /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n          0x1f\n          dup5\n          add\n          and\n          dup2\n          add\n          swap3\n          dup2\n          dup5\n          lt\n          0xffffffffffffffff\n          dup6\n          gt\n          or\n          tag_38\n          jumpi\n          dup2\n          0x80\n          swap2\n          dup6\n          dup9\n          mstore\n            /* \"src/oracle/OracleCaller.sol\":503:528  aPair.observation(aIndex) */\n          dup2\n          add\n            /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */\n          sub\n          slt\n          tag_40\n          jumpi\n          tag_42\n          dup4\n          tag_3\n          jump\t// in\n        tag_42:\n          dup1\n          mload\n          dup1\n          0x0d\n          signextend\n          dup2\n          sub\n          tag_43\n          jumpi\n          dup4\n          mstore\n          0x60\n          swap1\n          tag_45\n          dup6\n          dup3\n          add\n          tag_4\n          jump\t// in\n        tag_45:\n          dup6\n          dup6\n          add\n          mstore\n          tag_46\n          dup7\n          dup3\n          add\n          tag_4\n          jump\t// in\n        tag_46:\n          dup7\n          dup6\n          add\n          mstore\n          add\n          mload\n          swap1\n          0xffffffff\n          dup3\n          and\n          dup3\n          sub\n          tag_19\n          jumpi\n          pop\n          0x60\n          dup1\n          dup4\n          add\n          swap2\n          swap1\n          swap2\n          mstore\n          0x80\n            /* \"src/oracle/OracleCaller.sol\":503:528  aPair.observation(aIndex) */\n          jump(tag_35)\n            /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */\n        tag_43:\n          dup3\n          dup1\n          revert\n        tag_40:\n          pop\n          dup1\n          revert\n        tag_38:\n          0x24\n          dup4\n          0x4e487b7100000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          mstore(0x04, 0x41)\n          revert\n            /* \"src/oracle/OracleCaller.sol\":503:528  aPair.observation(aIndex) */\n        tag_36:\n          returndatasize\n          swap3\n          pop\n          jump(tag_37)\n        tag_32:\n            /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */\n          dup5\n          mload\n          swap1\n          returndatasize\n          swap1\n          dup3\n          returndatacopy\n          returndatasize\n          swap1\n          revert\n        tag_30:\n          0x64\n          dup4\n          dup6\n          mload\n          swap1\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup3\n          mstore\n          0x04\n          dup3\n          add\n          mstore\n          0x13\n          0x24\n          dup3\n          add\n          mstore\n          0x4f433a204e4f545f57484954454c495354454400000000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n        tag_11:\n          swap1\n          pop\n          jumpi(tag_40, callvalue)\n          dup1\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_40\n          jumpi\n          tag_53\n          tag_1\n          jump\t// in\n        tag_53:\n          swap1\n          calldataload(0x24)\n          dup1\n          iszero\n          iszero\n          dup1\n          swap2\n          sub\n          tag_54\n          jumpi\n            /* \"src/oracle/OracleCaller.sol\":676:713  WhitelistChanged(aCaller, aWhitelist) */\n          0xb840a1dbd8b09a3dc45161bba92dfb9aba643c0e44c085a447f839d1d02cf13b\n            /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */\n          swap3\n          0xffffffffffffffffffffffffffffffffffffffff\n          swap1\n            /* \"lib/solmate/src/auth/Owned.sol\":756:800  require(msg.sender == owner, \"UNAUTHORIZED\") */\n          tag_56\n            /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */\n          dup3\n          dup8\n          sload\n          and\n            /* \"lib/solmate/src/auth/Owned.sol\":764:774  msg.sender */\n          caller\n            /* \"lib/solmate/src/auth/Owned.sol\":764:783  msg.sender == owner */\n          eq\n            /* \"lib/solmate/src/auth/Owned.sol\":756:800  require(msg.sender == owner, \"UNAUTHORIZED\") */\n          tag_2\n          jump\t// in\n        tag_56:\n            /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */\n          and\n          swap1\n          dup2\n          dup6\n          mstore\n            /* \"src/oracle/OracleCaller.sol\":630:639  whitelist */\n          0x01\n            /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */\n          0x20\n          mstore\n          dup3\n          dup6\n          keccak256\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n          dup2\n          sload\n          and\n          0xff\n          dup4\n          and\n          or\n          swap1\n          sstore\n          dup3\n          mload\n          swap2\n          dup3\n          mstore\n          0x20\n          dup3\n          add\n          mstore\n            /* \"src/oracle/OracleCaller.sol\":676:713  WhitelistChanged(aCaller, aWhitelist) */\n          log1\n            /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */\n          dup1\n          return\n        tag_54:\n          dup4\n          dup1\n          revert\n        tag_9:\n          swap1\n          pop\n          jumpi(tag_40, callvalue)\n          jumpi(tag_40, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))\n          0xff\n          dup2\n          0x20\n          swap4\n          0xffffffffffffffffffffffffffffffffffffffff\n          tag_61\n          tag_1\n          jump\t// in\n        tag_61:\n          and\n          dup2\n          mstore\n            /* \"src/oracle/OracleCaller.sol\":253:294  mapping(address => bool) public whitelist */\n          0x01\n            /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */\n          dup6\n          mstore\n          keccak256\n          sload\n          and\n          swap1\n          mload\n          swap1\n          iszero\n          iszero\n          dup2\n          mstore\n          return\n        tag_7:\n          dup4\n          swap1\n          jumpi(tag_40, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_40\n          jumpi\n          0xffffffffffffffffffffffffffffffffffffffff\n          0x20\n          swap3\n          sload\n          and\n          dup2\n          mstore\n          return\n        tag_1:\n          calldataload(0x04)\n          swap1\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup3\n          and\n          dup3\n          sub\n          tag_66\n          jumpi\n          jump\t// out\n        tag_66:\n          0x00\n          dup1\n          revert\n        tag_2:\n          iszero\n          tag_68\n          jumpi\n          jump\t// out\n        tag_68:\n          0x64\n          mload(0x40)\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          0x20\n          0x04\n          dup3\n          add\n          mstore\n          0x0c\n          0x24\n          dup3\n          add\n          mstore\n          0x554e415554484f52495a45440000000000000000000000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n        tag_3:\n          0x80\n          dup2\n          add\n          swap1\n          dup2\n          lt\n          0xffffffffffffffff\n          dup3\n          gt\n          or\n          tag_70\n          jumpi\n          0x40\n          mstore\n          jump\t// out\n        tag_70:\n          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n          mstore(0x04, 0x41)\n          revert(0x00, 0x24)\n        tag_4:\n          mload\n          swap1\n          dup2\n          0x06\n          signextend\n          dup3\n          sub\n          tag_66\n          jumpi\n          jump\t// out\n\n        auxdata: 0xa164736f6c6343000811000a\n    }\n}\n\nsub_6: assembly {\n        /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n      0xe0\n      0x40\n      swap1\n      dup1\n      dup3\n      mstore\n      jumpi(tag_15, callvalue)\n      bytecodeSize\n      dup1\n      codesize\n      sub\n      dup1\n      swap2\n      tag_6\n      dup3\n      dup6\n      tag_1\n      jump\t// in\n    tag_6:\n      dup4\n      codecopy\n      dup2\n      add\n      0x60\n      dup3\n      dup3\n      sub\n      slt\n      tag_15\n      jumpi\n      dup2\n      mload\n      sub(shl(0x40, 0x01), 0x01)\n      swap4\n      swap1\n      dup5\n      dup2\n      gt\n      tag_15\n      jumpi\n      dup3\n      tag_11\n      swap2\n      dup6\n      add\n      tag_2\n      jump\t// in\n    tag_11:\n      swap3\n      0x20\n      swap3\n      dup4\n      dup3\n      add\n      mload\n      dup7\n      dup2\n      gt\n      tag_15\n      jumpi\n      dup4\n      swap2\n      tag_14\n      swap2\n      dup5\n      add\n      tag_2\n      jump\t// in\n    tag_14:\n      swap2\n      add\n      mload\n      0xff\n      dup2\n      and\n      dup2\n      sub\n      tag_15\n      jumpi\n      dup5\n      mload\n      swap5\n      dup7\n      dup7\n      gt\n      tag_17\n      jumpi\n      0x00\n      swap6\n      dup1\n      tag_19\n      dup9\n      sload\n      tag_3\n      jump\t// in\n    tag_19:\n      swap3\n      0x1f\n      swap4\n      dup5\n      dup2\n      gt\n      tag_20\n      jumpi\n    tag_21:\n      pop\n      dup8\n      swap1\n      dup5\n      dup4\n      gt\n      0x01\n      eq\n      tag_22\n      jumpi\n      dup10\n      swap3\n      tag_24\n      jumpi\n    tag_25:\n      pop\n      pop\n      dup2\n      0x01\n      shl\n      swap2\n      not(0x00)\n      swap1\n      0x03\n      shl\n      shr\n      not\n      and\n      or\n      dup7\n      sstore\n    tag_26:\n      dup3\n      mload\n      swap1\n      dup8\n      dup3\n      gt\n      tag_27\n      jumpi\n      dup2\n      swap1\n      0x01\n      swap5\n      tag_29\n      dup7\n      sload\n      tag_3\n      jump\t// in\n    tag_29:\n      dup3\n      dup2\n      gt\n      tag_30\n      jumpi\n    tag_31:\n      pop\n      dup8\n      swap2\n      dup4\n      gt\n      0x01\n      eq\n      tag_32\n      jumpi\n      dup9\n      swap3\n      tag_34\n      jumpi\n    tag_35:\n      pop\n      pop\n      not(0x00)\n      0x03\n      dup4\n      swap1\n      shl\n      shr\n      not\n      and\n      swap1\n      dup4\n      shl\n      or\n      dup3\n      sstore\n    tag_36:\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2142:2162  decimals = _decimals */\n      0x80\n      mstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2192:2205  block.chainid */\n      chainid\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2173:2205  INITIAL_CHAIN_ID = block.chainid */\n      0xa0\n      mstore\n        /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n      dup2\n      mload\n      dup5\n      sload\n      swap2\n      dup2\n      dup7\n      tag_37\n      dup6\n      tag_3\n      jump\t// in\n    tag_37:\n      swap3\n      dup4\n      dup4\n      mstore\n      dup8\n      dup4\n      add\n      swap6\n      dup9\n      dup3\n      dup3\n      and\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2116:2132  symbol = _symbol */\n      swap2\n      dup3\n        /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n      0x00\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2116:2132  symbol = _symbol */\n      eq\n      tag_38\n      jumpi\n        /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n      pop\n      pop\n      0x01\n      eq\n      tag_40\n      jumpi\n    tag_41:\n      pop\n      tag_42\n      swap3\n      pop\n      sub\n      dup3\n      tag_1\n      jump\t// in\n    tag_42:\n      mload\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5789:5811  keccak256(bytes(name)) */\n      swap1\n      keccak256\n        /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n      swap3\n      dup2\n      mload\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5640:5935  abi.encode(... */\n      swap3\n      dup4\n      add\n        /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n      swap4\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5672:5767  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n      0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n        /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n      dup6\n      mstore\n      dup3\n      dup5\n      add\n      mstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5833:5847  keccak256(\"1\") */\n      0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6\n        /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n      0x60\n      dup5\n      add\n      mstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2192:2205  block.chainid */\n      chainid\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2142:2162  decimals = _decimals */\n      0x80\n        /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n      dup5\n      add\n      mstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5912:5916  this */\n      address\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2173:2205  INITIAL_CHAIN_ID = block.chainid */\n      0xa0\n        /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n      dup5\n      add\n      mstore\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2173:2205  INITIAL_CHAIN_ID = block.chainid */\n      0xa0\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5640:5935  abi.encode(... */\n      dup4\n      mstore\n        /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n      0xc0\n      dup4\n      add\n      swap5\n      dup4\n      dup7\n      lt\n      swap1\n      dup7\n      gt\n      or\n      tag_43\n      jumpi\n      pop\n      dup4\n      swap1\n      mstore\n      mload\n        /* \"lib/solmate/src/tokens/ERC20.sol\":5613:5949  keccak256(... */\n      swap1\n      keccak256\n        /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n      0xc0\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2215:2266  INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator() */\n      mstore\n        /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n      dataSize(sub_0)\n      swap1\n      dup2\n      dataOffset(sub_0)\n      dup3\n      codecopy\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2142:2162  decimals = _decimals */\n      0x80\n        /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n      mload\n      dup2\n      assignImmutable(\"0xb7b2278e6c1d8d0abc309f6bf9256046dfb6cd1d61f6bb10388e8ea4928d3539\")\n        /* \"lib/solmate/src/tokens/ERC20.sol\":2173:2205  INITIAL_CHAIN_ID = block.chainid */\n      0xa0\n        /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n      mload\n      dup2\n      assignImmutable(\"0x81290bb363e768cff9ff9a5d447e434874948b933698048b966fdf5d744bf636\")\n      mload(0xc0)\n      dup2\n      assignImmutable(\"0x34382e0db9f4d1365b2614bb97467901a574db9e05159d2f14a2053ade673b06\")\n      return\n    tag_43:\n      shl(0xe0, 0x4e487b71)\n      dup2\n      mstore\n      mstore(0x04, 0x41)\n      0x24\n      swap1\n      revert\n    tag_40:\n      dup8\n      swap2\n      pop\n      dup9\n      dup1\n      mstore\n      dup2\n      dup10\n      keccak256\n      swap1\n      dup10\n      swap2\n    tag_45:\n      dup6\n      dup4\n      lt\n      tag_46\n      jumpi\n      pop\n      pop\n      tag_42\n      swap4\n      pop\n      dup3\n      add\n      add\n      codesize\n      jump(tag_41)\n    tag_46:\n      dup1\n      sload\n      dup4\n      dup9\n      add\n      dup6\n      add\n      mstore\n      dup7\n      swap5\n      pop\n      dup10\n      swap4\n      swap1\n      swap3\n      add\n      swap2\n      dup2\n      add\n      jump(tag_45)\n    tag_38:\n      not(0xff)\n      and\n      dup9\n      mstore\n      tag_42\n      swap6\n      iszero\n      iszero\n      0x05\n      shl\n      dup6\n      add\n      add\n      swap3\n      pop\n      codesize\n      swap2\n      pop\n      tag_41\n      swap1\n      pop\n      jump\n    tag_34:\n      add\n      mload\n      swap1\n      pop\n      codesize\n      dup1\n      jump(tag_35)\n    tag_32:\n      dup6\n      dup10\n      mstore\n      dup8\n      dup10\n      keccak256\n      dup7\n      swap5\n      pop\n      swap2\n      swap1\n      not(0x1f)\n      dup5\n      and\n      dup11\n    tag_48:\n      dup11\n      dup3\n      dup3\n      lt\n      tag_49\n      jumpi\n      pop\n      pop\n      dup5\n      gt\n      tag_51\n      jumpi\n    tag_52:\n      pop\n      pop\n      pop\n      dup2\n      shl\n      add\n      dup3\n      sstore\n      jump(tag_36)\n    tag_51:\n      add\n      mload\n      not(0x00)\n      0xf8\n      dup5\n      0x03\n      shl\n      and\n      shr\n      not\n      and\n      swap1\n      sstore\n      codesize\n      dup1\n      dup1\n      jump(tag_52)\n    tag_49:\n      dup4\n      dup6\n      add\n      mload\n      dup7\n      sstore\n      dup10\n      swap8\n      swap1\n      swap6\n      add\n      swap5\n      swap4\n      dup5\n      add\n      swap4\n      add\n      jump(tag_48)\n    tag_30:\n      swap1\n      swap2\n      swap3\n      pop\n      dup6\n      dup10\n      mstore\n      dup8\n      dup10\n      keccak256\n      dup4\n      dup1\n      dup7\n      add\n      0x05\n      shr\n      dup3\n      add\n      swap3\n      dup11\n      dup8\n      lt\n      tag_53\n      jumpi\n    tag_54:\n      swap2\n      dup7\n      swap6\n      dup10\n      swap3\n      swap6\n      swap5\n      swap4\n      add\n      0x05\n      shr\n      add\n      swap2\n    tag_55:\n      dup3\n      dup2\n      lt\n      tag_56\n      jumpi\n      pop\n      pop\n      jump(tag_31)\n    tag_56:\n      dup12\n      dup2\n      sstore\n      dup7\n      swap6\n      pop\n      dup9\n      swap2\n      add\n      jump(tag_55)\n    tag_53:\n      swap3\n      pop\n      dup2\n      swap3\n      jump(tag_54)\n    tag_27:\n      shl(0xe0, 0x4e487b71)\n      dup8\n      mstore\n      mstore(0x04, 0x41)\n      0x24\n      dup8\n      revert\n    tag_24:\n      add\n      mload\n      swap1\n      pop\n      codesize\n      dup1\n      jump(tag_25)\n    tag_22:\n      dup10\n      dup1\n      mstore\n      dup9\n      dup11\n      keccak256\n      swap3\n      pop\n      not(0x1f)\n      dup5\n      and\n      dup11\n    tag_58:\n      dup11\n      dup3\n      dup3\n      lt\n      tag_59\n      jumpi\n      pop\n      pop\n      swap1\n      dup5\n      0x01\n      swap6\n      swap5\n      swap4\n      swap3\n      lt\n      tag_61\n      jumpi\n    tag_62:\n      pop\n      pop\n      pop\n      dup2\n      shl\n      add\n      dup7\n      sstore\n      jump(tag_26)\n    tag_61:\n      add\n      mload\n      not(0x00)\n      0xf8\n      dup5\n      0x03\n      shl\n      and\n      shr\n      not\n      and\n      swap1\n      sstore\n      codesize\n      dup1\n      dup1\n      jump(tag_62)\n    tag_59:\n      0x01\n      dup6\n      swap7\n      dup3\n      swap4\n      swap7\n      dup7\n      add\n      mload\n      dup2\n      sstore\n      add\n      swap6\n      add\n      swap4\n      add\n      jump(tag_58)\n    tag_20:\n      swap1\n      swap2\n      pop\n      dup9\n      dup1\n      mstore\n      dup8\n      dup10\n      keccak256\n      dup5\n      dup1\n      dup6\n      add\n      0x05\n      shr\n      dup3\n      add\n      swap3\n      dup11\n      dup7\n      lt\n      tag_63\n      jumpi\n    tag_64:\n      swap1\n      dup6\n      swap5\n      swap4\n      swap3\n      swap2\n      add\n      0x05\n      shr\n      add\n      swap1\n    tag_65:\n      dup2\n      dup2\n      lt\n      tag_66\n      jumpi\n      pop\n      jump(tag_21)\n    tag_66:\n      dup11\n      dup2\n      sstore\n      dup5\n      swap4\n      pop\n      0x01\n      add\n      jump(tag_65)\n    tag_63:\n      swap3\n      pop\n      dup2\n      swap3\n      jump(tag_64)\n    tag_17:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_15:\n      0x00\n      dup1\n      revert\n    tag_1:\n      0x1f\n      swap1\n      swap2\n      add\n      not(0x1f)\n      and\n      dup2\n      add\n      swap1\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      swap1\n      dup3\n      lt\n      or\n      tag_17\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_2:\n      swap2\n      swap1\n      dup1\n      0x1f\n      dup5\n      add\n      slt\n      iszero\n      tag_15\n      jumpi\n      dup3\n      mload\n      swap1\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      tag_17\n      jumpi\n      mload(0x40)\n      swap2\n      0x20\n      swap2\n      tag_74\n      0x1f\n      dup4\n      add\n      not(0x1f)\n      and\n      dup5\n      add\n      dup6\n      tag_1\n      jump\t// in\n    tag_74:\n      dup2\n      dup5\n      mstore\n      dup3\n      dup3\n      dup8\n      add\n      add\n      gt\n      tag_15\n      jumpi\n      0x00\n    tag_77:\n      dup2\n      dup2\n      lt\n      tag_78\n      jumpi\n      pop\n      dup3\n      0x00\n      swap4\n      swap5\n      swap6\n      pop\n      add\n      add\n      mstore\n      swap1\n      jump\t// out\n    tag_78:\n      dup6\n      dup2\n      add\n      dup4\n      add\n      mload\n      dup5\n      dup3\n      add\n      dup5\n      add\n      mstore\n      dup3\n      add\n      jump(tag_77)\n    tag_3:\n      swap1\n      0x01\n      dup3\n      dup2\n      shr\n      swap3\n      and\n      dup1\n      iszero\n      tag_80\n      jumpi\n    tag_81:\n      0x20\n      dup4\n      lt\n      eq\n      tag_82\n      jumpi\n      jump\t// out\n    tag_82:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x22)\n      revert(0x00, 0x24)\n    tag_80:\n      swap2\n      0x7f\n      and\n      swap2\n      jump(tag_81)\n    stop\n\n    sub_0: assembly {\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          0x80\n          0x40\n          dup2\n          dup2\n          mstore\n          0x04\n          dup1\n          calldatasize\n          lt\n          iszero\n          tag_8\n          jumpi\n          0x00\n          dup1\n          revert\n        tag_8:\n          0x00\n          swap3\n          dup4\n          calldataload\n          0xe0\n          shr\n          swap1\n          dup2\n          0x06fdde03\n          eq\n          tag_10\n          jumpi\n          pop\n          dup1\n          0x095ea7b3\n          eq\n          tag_12\n          jumpi\n          dup1\n          0x18160ddd\n          eq\n          tag_14\n          jumpi\n          dup1\n          0x23b872dd\n          eq\n          tag_16\n          jumpi\n          dup1\n          0x313ce567\n          eq\n          tag_18\n          jumpi\n          dup1\n          0x3644e515\n          eq\n          tag_20\n          jumpi\n          dup1\n          0x40c10f19\n          eq\n          tag_22\n          jumpi\n          dup1\n          0x70a08231\n          eq\n          tag_24\n          jumpi\n          dup1\n          0x7ecebe00\n          eq\n          tag_26\n          jumpi\n          dup1\n          0x95d89b41\n          eq\n          tag_28\n          jumpi\n          dup1\n          0xa9059cbb\n          eq\n          tag_30\n          jumpi\n          dup1\n          0xd505accf\n          eq\n          tag_32\n          jumpi\n          0xdd62ed3e\n          eq\n          tag_34\n          jumpi\n          0x00\n          dup1\n          revert\n        tag_34:\n          jumpi(tag_38, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_38\n          jumpi\n          0x20\n          swap3\n          dup3\n          swap2\n          tag_40\n          tag_4\n          jump\t// in\n        tag_40:\n          tag_41\n          tag_5\n          jump\t// in\n        tag_41:\n          swap2\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup1\n          swap3\n          and\n          dup5\n          mstore\n          dup7\n          mstore\n          dup4\n          dup4\n          keccak256\n          swap2\n          and\n          dup3\n          mstore\n          dup5\n          mstore\n          keccak256\n          sload\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_38:\n          dup3\n          dup1\n          revert\n        tag_32:\n          pop\n          swap2\n          swap1\n          jumpi(tag_44, callvalue)\n          jumpi(tag_44, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0xe0))\n          tag_46\n          tag_4\n          jump\t// in\n        tag_46:\n          swap1\n          tag_47\n          tag_5\n          jump\t// in\n        tag_47:\n          swap2\n          calldataload(0x44)\n          calldataload(0x64)\n          swap3\n          calldataload(0x84)\n          swap3\n          0xff\n          dup5\n          and\n          dup1\n          swap5\n          sub\n          tag_48\n          jumpi\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4057:4072  block.timestamp */\n          timestamp\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4045:4072  deadline >= block.timestamp */\n          dup6\n          lt\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          tag_50\n          jumpi\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4428:4446  DOMAIN_SEPARATOR() */\n          tag_52\n          tag_7\n          jump\t// in\n        tag_52:\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          swap6\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup1\n          swap3\n          and\n          swap6\n          dup7\n          dup10\n          mstore\n          0x20\n          swap6\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4873:4879  nonces */\n          0x05\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          dup8\n          mstore\n          dup5\n          dup11\n          keccak256\n          swap9\n          dup10\n          sload\n          swap10\n          0x01\n          dup12\n          add\n          swap1\n          sstore\n          dup6\n          mload\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4511:4960  abi.encode(... */\n          swap3\n          dup6\n          dup10\n          dup6\n          add\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          swap6\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4555:4720  keccak256(... */\n          0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          dup8\n          mstore\n          dup12\n          dup10\n          dup8\n          add\n          mstore\n          and\n          swap11\n          dup12\n          0x60\n          dup7\n          add\n          mstore\n          dup9\n          0x80\n          dup7\n          add\n          mstore\n          0xa0\n          dup6\n          add\n          mstore\n          0xc0\n          dup5\n          add\n          mstore\n          0xc0\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4511:4960  abi.encode(... */\n          dup4\n          mstore\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          0xe0\n          dup4\n          add\n          0xffffffffffffffff\n          swap5\n          dup5\n          dup3\n          lt\n          dup7\n          dup4\n          gt\n          or\n          tag_53\n          jumpi\n          dup2\n          dup9\n          mstore\n          dup5\n          mload\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4472:4986  keccak256(... */\n          swap1\n          keccak256\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4350:5008  abi.encodePacked(... */\n          0x0100\n          dup6\n          add\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          swap3\n          0x1901000000000000000000000000000000000000000000000000000000000000\n          dup5\n          mstore\n          0x0102\n          dup7\n          add\n          mstore\n          0x0122\n          dup6\n          add\n          mstore\n          0x42\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4350:5008  abi.encodePacked(... */\n          dup2\n          mstore\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          0x0160\n          dup5\n          add\n          swap5\n          dup2\n          dup7\n          lt\n          swap1\n          dup7\n          gt\n          or\n          tag_55\n          jumpi\n          dup5\n          dup8\n          mstore\n          mload\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4319:5026  keccak256(... */\n          swap1\n          keccak256\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          dup4\n          mstore\n          0x0180\n          dup3\n          add\n          mstore\n          calldataload(0xa4)\n          0x01a0\n          dup3\n          add\n          mstore\n          calldataload(0xc4)\n          0x01c0\n          swap1\n          swap2\n          add\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4292:5097  ecrecover(... */\n          dup8\n          dup1\n          mstore\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          dup5\n          swap1\n          dup9\n          swap1\n          0x80\n          swap1\n          0x01\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4292:5097  ecrecover(... */\n          gas\n          staticcall\n          iszero\n          tag_57\n          jumpi\n          dup7\n          mload\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          and\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5120:5150  recoveredAddress != address(0) */\n          swap7\n          dup8\n          iszero\n          iszero\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5120:5179  recoveredAddress != address(0) && recoveredAddress == owner */\n          dup1\n          tag_59\n          jumpi\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n        tag_60:\n          iszero\n          tag_61\n          jumpi\n          dup7\n          swap8\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5283:5314  Approval(owner, spender, value) */\n          0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          swap6\n          swap7\n          swap8\n          mstore\n          dup4\n          mstore\n          dup1\n          dup8\n          keccak256\n          dup7\n          dup9\n          mstore\n          dup4\n          mstore\n          dup2\n          dup2\n          dup9\n          keccak256\n          sstore\n          mload\n          swap1\n          dup2\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5283:5314  Approval(owner, spender, value) */\n          log3\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          dup1\n          return\n        tag_61:\n          dup4\n          0x64\n          swap3\n          mload\n          swap2\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          dup3\n          add\n          mstore\n          0x0e\n          0x24\n          dup3\n          add\n          mstore\n          0x494e56414c49445f5349474e4552000000000000000000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5120:5179  recoveredAddress != address(0) && recoveredAddress == owner */\n        tag_59:\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5154:5179  recoveredAddress == owner */\n          pop\n          dup5\n          dup9\n          eq\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5120:5179  recoveredAddress != address(0) && recoveredAddress == owner */\n          jump(tag_60)\n            /* \"lib/solmate/src/tokens/ERC20.sol\":4292:5097  ecrecover(... */\n        tag_57:\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          dup2\n          mload\n          returndatasize\n          dup9\n          dup3\n          returndatacopy\n          returndatasize\n          swap1\n          revert\n        tag_55:\n          0x24\n          dup13\n          0x41\n          dup16\n          0x4e487b7100000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          mstore\n          revert\n        tag_53:\n          pop\n          0x24\n          dup13\n          0x41\n          dup16\n          0x4e487b7100000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          mstore\n          revert\n        tag_50:\n          0x64\n          dup9\n          0x20\n          dup5\n          mload\n          swap2\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          dup3\n          add\n          mstore\n          0x17\n          0x24\n          dup3\n          add\n          mstore\n          0x5045524d49545f444541444c494e455f45585049524544000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n        tag_48:\n          dup7\n          dup1\n          revert\n        tag_44:\n          pop\n          dup1\n          revert\n        tag_30:\n          pop\n          pop\n          jumpi(tag_44, callvalue)\n          dup1\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_44\n          jumpi\n          0x20\n          swap2\n          tag_67\n          tag_4\n          jump\t// in\n        tag_67:\n          dup3\n          0xffffffffffffffffffffffffffffffffffffffff\n          calldataload(0x24)\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2774:2784  msg.sender */\n          swap3\n          caller\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          dup6\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2764:2773  balanceOf */\n          0x03\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          dup8\n          mstore\n          dup3\n          dup6\n          keccak256\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2764:2795  balanceOf[msg.sender] -= amount */\n          tag_68\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          dup6\n          dup3\n          sload\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2764:2795  balanceOf[msg.sender] -= amount */\n          tag_6\n          jump\t// in\n        tag_68:\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          swap1\n          sstore\n          and\n          swap3\n          dup4\n          dup2\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2764:2773  balanceOf */\n          0x03\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          dup7\n          mstore\n          keccak256\n          dup2\n          dup2\n          sload\n          add\n          swap1\n          sstore\n          dup3\n          mload\n          swap1\n          dup2\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2990:3022  Transfer(msg.sender, to, amount) */\n          0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2774:2784  msg.sender */\n          dup5\n          caller\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2990:3022  Transfer(msg.sender, to, amount) */\n          swap3\n          log3\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          mload\n          0x01\n          dup2\n          mstore\n          return\n        tag_28:\n          pop\n          pop\n          jumpi(tag_44, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_44\n          jumpi\n          dup1\n          mload\n          swap1\n          dup3\n            /* \"lib/solmate/src/tokens/ERC20.sol\":1056:1076  string public symbol */\n          0x01\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          dup1\n          sload\n          swap2\n          tag_73\n          dup4\n          tag_1\n          jump\t// in\n        tag_73:\n          dup1\n          dup7\n          mstore\n          swap3\n          dup3\n          dup2\n          and\n          swap1\n            /* \"lib/solmate/src/tokens/ERC20.sol\":1056:1076  string public symbol */\n          dup2\n          iszero\n          tag_74\n          jumpi\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          pop\n          0x01\n          eq\n          tag_76\n          jumpi\n        tag_77:\n          pop\n          pop\n          pop\n          tag_78\n          dup3\n          tag_79\n          swap5\n          sub\n          dup4\n          tag_2\n          jump\t// in\n        tag_78:\n          mload\n          swap2\n          dup3\n          swap2\n          dup3\n          tag_3\n          jump\t// in\n        tag_79:\n          sub\n          swap1\n          return\n        tag_76:\n          swap5\n          pop\n          dup1\n          dup6\n          mstore\n          0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6\n        tag_80:\n          dup3\n          dup7\n          lt\n          tag_81\n          jumpi\n          pop\n          pop\n          pop\n          tag_78\n          dup3\n          0x20\n          tag_79\n          swap6\n          dup3\n          add\n          add\n          swap5\n          jump(tag_77)\n        tag_81:\n          dup1\n          sload\n          0x20\n          dup8\n          dup8\n          add\n          dup2\n          add\n          swap2\n          swap1\n          swap2\n          mstore\n          swap1\n          swap6\n          add\n          swap5\n          dup2\n          add\n          jump(tag_80)\n        tag_74:\n          tag_79\n          swap8\n          pop\n          dup7\n          swap4\n          pop\n          0x20\n          swap3\n          pop\n          tag_78\n          swap5\n          swap2\n          pop\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n          and\n          dup3\n          dup5\n          add\n          mstore\n          iszero\n          iszero\n          0x05\n          shl\n          dup3\n          add\n          add\n          swap5\n          jump(tag_77)\n        tag_26:\n          pop\n          pop\n          jumpi(tag_44, callvalue)\n          jumpi(tag_44, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))\n          dup1\n          0x20\n          swap3\n          0xffffffffffffffffffffffffffffffffffffffff\n          tag_87\n          tag_4\n          jump\t// in\n        tag_87:\n          and\n          dup2\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":1751:1792  mapping(address => uint256) public nonces */\n          0x05\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          dup5\n          mstore\n          keccak256\n          sload\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_24:\n          pop\n          pop\n          jumpi(tag_44, callvalue)\n          jumpi(tag_44, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))\n          dup1\n          0x20\n          swap3\n          0xffffffffffffffffffffffffffffffffffffffff\n          tag_92\n          tag_4\n          jump\t// in\n        tag_92:\n          and\n          dup2\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":1337:1381  mapping(address => uint256) public balanceOf */\n          0x03\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          dup5\n          mstore\n          keccak256\n          sload\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_22:\n          pop\n          jumpi(tag_38, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_38\n          jumpi\n          tag_97\n          tag_4\n          jump\t// in\n        tag_97:\n          calldataload(0x24)\n          swap2\n            /* \"lib/solmate/src/tokens/ERC20.sol\":6220:6241  totalSupply += amount */\n          0x02\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          sload\n          swap1\n          dup4\n          dup3\n          add\n          dup1\n          swap3\n          gt\n          tag_98\n          jumpi\n          pop\n          dup5\n          swap3\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"lib/solmate/src/tokens/ERC20.sol\":6436:6468  Transfer(address(0), to, amount) */\n          0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          swap4\n          0x20\n          swap4\n            /* \"lib/solmate/src/tokens/ERC20.sol\":6220:6241  totalSupply += amount */\n          0x02\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          sstore\n          and\n          swap5\n          dup6\n          dup6\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":6387:6396  balanceOf */\n          0x03\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          dup4\n          mstore\n          dup1\n          dup6\n          keccak256\n          dup3\n          dup2\n          sload\n          add\n          swap1\n          sstore\n          mload\n          swap1\n          dup2\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":6436:6468  Transfer(address(0), to, amount) */\n          log3\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          dup1\n          return\n        tag_98:\n          dup6\n          0x11\n          0x24\n          swap3\n          0x4e487b7100000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          mstore\n          revert\n        tag_20:\n          pop\n          pop\n          jumpi(tag_44, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_44\n          jumpi\n          0x20\n          swap1\n          tag_104\n          tag_7\n          jump\t// in\n        tag_104:\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_18:\n          pop\n          pop\n          jumpi(tag_44, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_44\n          jumpi\n          0x20\n          swap1\n          mload\n          0xff\n            /* \"lib/solmate/src/tokens/ERC20.sol\":1083:1114  uint8 public immutable decimals */\n          immutable(\"0xb7b2278e6c1d8d0abc309f6bf9256046dfb6cd1d61f6bb10388e8ea4928d3539\")\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          and\n          dup2\n          mstore\n          return\n        tag_16:\n          pop\n          swap2\n          jumpi(tag_111, callvalue)\n          jumpi(tag_111, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x60))\n          tag_113\n          tag_4\n          jump\t// in\n        tag_113:\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3594:3620  Transfer(from, to, amount) */\n          0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          tag_114\n          tag_5\n          jump\t// in\n        tag_114:\n          swap5\n          calldataload(0x44)\n          dup6\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup1\n          swap6\n          and\n          swap5\n          dup6\n          dup8\n          mstore\n          0x20\n          swap9\n          dup5\n          dup11\n          swap6\n          dup7\n          mstore\n          dup4\n          dup10\n          keccak256\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3225:3235  msg.sender */\n          caller\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          dup11\n          mstore\n          dup7\n          mstore\n          dup4\n          dup10\n          keccak256\n          sload\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3287:3315  allowed != type(uint256).max */\n          dup6\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3298:3315  type(uint256).max */\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3287:3315  allowed != type(uint256).max */\n          dup3\n          sub\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3283:3363  if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount */\n          tag_115\n          jumpi\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n        tag_116:\n          pop\n          pop\n          pop\n          dup7\n          dup9\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3374:3383  balanceOf */\n          0x03\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          dup6\n          mstore\n          dup3\n          dup9\n          keccak256\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3374:3399  balanceOf[from] -= amount */\n          tag_117\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          dup6\n          dup3\n          sload\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3374:3399  balanceOf[from] -= amount */\n          tag_6\n          jump\t// in\n        tag_117:\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          swap1\n          sstore\n          and\n          swap6\n          dup7\n          dup2\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3374:3383  balanceOf */\n          0x03\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          dup5\n          mstore\n          keccak256\n          dup2\n          dup2\n          sload\n          add\n          swap1\n          sstore\n          dup6\n          mload\n          swap1\n          dup2\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3594:3620  Transfer(from, to, amount) */\n          log3\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          mload\n          0x01\n          dup2\n          mstore\n          return\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3283:3363  if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount */\n        tag_115:\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3347:3363  allowed - amount */\n          tag_118\n          swap2\n          tag_6\n          jump\t// in\n        tag_118:\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          swap1\n          dup9\n          dup11\n          mstore\n          dup7\n          mstore\n          dup4\n          dup10\n          keccak256\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3225:3235  msg.sender */\n          caller\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          dup11\n          mstore\n          dup7\n          mstore\n          dup4\n          dup10\n          keccak256\n          sstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":3283:3363  if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount */\n          codesize\n          dup1\n          dup6\n          jump(tag_116)\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n        tag_111:\n          dup1\n          revert\n        tag_14:\n          pop\n          pop\n          jumpi(tag_44, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_44\n          jumpi\n          0x20\n          swap1\n            /* \"lib/solmate/src/tokens/ERC20.sol\":1304:1330  uint256 public totalSupply */\n          0x02\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          sload\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_12:\n          pop\n          jumpi(tag_38, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_38\n          jumpi\n          0x20\n          swap3\n          tag_127\n          tag_4\n          jump\t// in\n        tag_127:\n          swap2\n          dup4\n          calldataload(0x24)\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2561:2571  msg.sender */\n          swap3\n          dup4\n          swap3\n          caller\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          dup3\n          mstore\n          dup8\n          mstore\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup3\n          dup3\n          keccak256\n          swap6\n          and\n          swap5\n          dup6\n          dup3\n          mstore\n          dup8\n          mstore\n          keccak256\n          sstore\n          dup3\n          mload\n          swap1\n          dup2\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2606:2643  Approval(msg.sender, spender, amount) */\n          0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2561:2571  msg.sender */\n          dup5\n          caller\n            /* \"lib/solmate/src/tokens/ERC20.sol\":2606:2643  Approval(msg.sender, spender, amount) */\n          swap3\n          log3\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          mload\n          0x01\n          dup2\n          mstore\n          return\n        tag_10:\n          dup5\n          swap1\n          dup5\n          jumpi(tag_38, callvalue)\n          dup3\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_38\n          jumpi\n          dup3\n          dup1\n          sload\n          tag_132\n          dup2\n          tag_1\n          jump\t// in\n        tag_132:\n          dup1\n          dup6\n          mstore\n          swap2\n          0x01\n          swap2\n          dup1\n          dup4\n          and\n          swap1\n          dup2\n          iszero\n          tag_74\n          jumpi\n          pop\n          0x01\n          eq\n          tag_135\n          jumpi\n          pop\n          pop\n          pop\n          tag_78\n          dup3\n          tag_79\n          swap5\n          sub\n          dup4\n          tag_2\n          jump\t// in\n        tag_135:\n          dup1\n          dup1\n          swap7\n          pop\n          mstore\n          0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563\n        tag_139:\n          dup3\n          dup7\n          lt\n          tag_140\n          jumpi\n          pop\n          pop\n          pop\n          tag_78\n          dup3\n          0x20\n          tag_79\n          swap6\n          dup3\n          add\n          add\n          swap5\n          jump(tag_77)\n        tag_140:\n          dup1\n          sload\n          0x20\n          dup8\n          dup8\n          add\n          dup2\n          add\n          swap2\n          swap1\n          swap2\n          mstore\n          swap1\n          swap6\n          add\n          swap5\n          dup2\n          add\n          jump(tag_139)\n        tag_1:\n          swap1\n          0x01\n          dup3\n          dup2\n          shr\n          swap3\n          and\n          dup1\n          iszero\n          tag_142\n          jumpi\n        tag_143:\n          0x20\n          dup4\n          lt\n          eq\n          tag_144\n          jumpi\n          jump\t// out\n        tag_144:\n          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n          mstore(0x04, 0x22)\n          revert(0x00, 0x24)\n        tag_142:\n          swap2\n          0x7f\n          and\n          swap2\n          jump(tag_143)\n        tag_2:\n          swap1\n          0x1f\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n          swap2\n          add\n          and\n          dup2\n          add\n          swap1\n          dup2\n          lt\n          0xffffffffffffffff\n          dup3\n          gt\n          or\n          tag_146\n          jumpi\n          0x40\n          mstore\n          jump\t// out\n        tag_146:\n          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n          mstore(0x04, 0x41)\n          revert(0x00, 0x24)\n        tag_3:\n          0x20\n          dup1\n          dup3\n          mstore\n          dup3\n          mload\n          dup2\n          dup4\n          add\n          dup2\n          swap1\n          mstore\n          swap4\n          swap3\n          0x00\n        tag_148:\n          dup6\n          dup2\n          lt\n          tag_149\n          jumpi\n          pop\n          pop\n          pop\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n          0x1f\n          dup5\n          0x00\n          0x40\n          dup1\n          swap7\n          swap8\n          dup7\n          add\n          add\n          mstore\n          add\n          and\n          add\n          add\n          swap1\n          jump\t// out\n        tag_149:\n          dup2\n          dup2\n          add\n          dup4\n          add\n          mload\n          dup5\n          dup3\n          add\n          0x40\n          add\n          mstore\n          dup3\n          add\n          jump(tag_148)\n        tag_4:\n          calldataload(0x04)\n          swap1\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup3\n          and\n          dup3\n          sub\n          tag_151\n          jumpi\n          jump\t// out\n        tag_151:\n          0x00\n          dup1\n          revert\n        tag_5:\n          calldataload(0x24)\n          swap1\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup3\n          and\n          dup3\n          sub\n          tag_151\n          jumpi\n          jump\t// out\n        tag_6:\n          swap2\n          swap1\n          dup3\n          sub\n          swap2\n          dup3\n          gt\n          tag_155\n          jumpi\n          jump\t// out\n        tag_155:\n          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n          mstore(0x04, 0x11)\n          revert(0x00, 0x24)\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5327:5504  function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {... */\n        tag_7:\n          0x00\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5410:5423  block.chainid */\n          chainid\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5427:5443  INITIAL_CHAIN_ID */\n          immutable(\"0x81290bb363e768cff9ff9a5d447e434874948b933698048b966fdf5d744bf636\")\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5410:5443  block.chainid == INITIAL_CHAIN_ID */\n          sub\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5427:5443  INITIAL_CHAIN_ID */\n          tag_157\n          jumpi\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5446:5470  INITIAL_DOMAIN_SEPARATOR */\n          pop\n          immutable(\"0x34382e0db9f4d1365b2614bb97467901a574db9e05159d2f14a2053ade673b06\")\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5327:5504  function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {... */\n          swap1\n          jump\t// out\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5410:5497  block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator() */\n        tag_157:\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          mload(0x40)\n          dup2\n          sload\n          dup3\n          swap2\n          tag_160\n          dup3\n          tag_1\n          jump\t// in\n        tag_160:\n          dup1\n          dup3\n          mstore\n          dup2\n          0x20\n          swap5\n          dup6\n          dup3\n          add\n          swap5\n          0x01\n          swap1\n          dup8\n          dup3\n          dup3\n          and\n          swap2\n          dup3\n          0x00\n          eq\n          tag_161\n          jumpi\n          pop\n          pop\n          0x01\n          eq\n          tag_163\n          jumpi\n        tag_164:\n          pop\n          tag_165\n          swap3\n          pop\n          sub\n          dup3\n          tag_2\n          jump\t// in\n        tag_165:\n          mload\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5789:5811  keccak256(bytes(name)) */\n          swap1\n          keccak256\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          swap2\n          mload(0x40)\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5640:5935  abi.encode(... */\n          swap2\n          dup3\n          add\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          swap3\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5672:5767  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n          0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          dup5\n          mstore\n          0x40\n          dup4\n          add\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5833:5847  keccak256(\"1\") */\n          0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          0x60\n          dup4\n          add\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5410:5423  block.chainid */\n          chainid\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          0x80\n          dup4\n          add\n          mstore\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5912:5916  this */\n          address\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          0xa0\n          dup4\n          add\n          mstore\n          0xa0\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5640:5935  abi.encode(... */\n          dup3\n          mstore\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n          0xc0\n          dup3\n          add\n          swap1\n          dup3\n          dup3\n          lt\n          0xffffffffffffffff\n          dup4\n          gt\n          or\n          tag_166\n          jumpi\n          pop\n          0x40\n          mstore\n          mload\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5613:5949  keccak256(... */\n          swap1\n          keccak256\n            /* \"lib/solmate/src/tokens/ERC20.sol\":5327:5504  function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {... */\n          swap1\n          jump\t// out\n            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */\n        tag_166:\n          dup1\n          0x4e487b7100000000000000000000000000000000000000000000000000000000\n          0x24\n          swap3\n          mstore\n          mstore(0x04, 0x41)\n          revert\n        tag_163:\n          dup8\n          dup1\n          mstore\n          dup7\n          swap2\n          pop\n          dup8\n          swap1\n          0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563\n        tag_168:\n          dup6\n          dup4\n          lt\n          tag_169\n          jumpi\n          pop\n          pop\n          tag_165\n          swap4\n          pop\n          dup3\n          add\n          add\n          codesize\n          jump(tag_164)\n        tag_169:\n          dup1\n          sload\n          dup4\n          dup9\n          add\n          dup6\n          add\n          mstore\n          dup7\n          swap5\n          pop\n          dup9\n          swap4\n          swap1\n          swap3\n          add\n          swap2\n          dup2\n          add\n          jump(tag_168)\n        tag_161:\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n          and\n          dup9\n          mstore\n          tag_165\n          swap6\n          iszero\n          iszero\n          0x05\n          shl\n          dup6\n          add\n          add\n          swap3\n          pop\n          codesize\n          swap2\n          pop\n          tag_164\n          swap1\n          pop\n          jump\n\n        auxdata: 0xa164736f6c6343000811000a\n    }\n}\n\nsub_7: assembly {\n        /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_1, callvalue)\n      dataSize(sub_0)\n      swap1\n      dup2\n      dataOffset(sub_0)\n      dup3\n      codecopy\n      return\n    tag_1:\n      0x00\n      dup1\n      revert\n    stop\n\n    sub_0: assembly {\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          0x80\n          0x40\n          swap1\n          dup1\n          dup3\n          mstore\n          0x04\n          dup1\n          calldatasize\n          lt\n          iszero\n          tag_11\n          jumpi\n          0x00\n          dup1\n          revert\n        tag_11:\n          0x00\n          swap2\n          dup3\n          calldataload\n          0xe0\n          shr\n          swap1\n          dup2\n          0x016312bd\n          eq\n          tag_13\n          jumpi\n          dup2\n          0x1566d96d\n          eq\n          tag_15\n          jumpi\n          pop\n          dup1\n          0x2879f730\n          eq\n          tag_17\n          jumpi\n          dup1\n          0xd4fac45d\n          eq\n          tag_19\n          jumpi\n          0xe78de18b\n          eq\n          tag_21\n          jumpi\n          0x00\n          dup1\n          revert\n        tag_21:\n          jumpi(tag_25, callvalue)\n          jumpi(tag_25, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x60))\n          tag_27\n          tag_1\n          jump\t// in\n        tag_27:\n          swap3\n          calldataload(0x44)\n          swap2\n          calldataload(0x24)\n            /* \"test/__mocks/AssetManager.sol\":493:509  type(int256).min */\n          0x8000000000000000000000000000000000000000000000000000000000000000\n            /* \"test/__mocks/AssetManager.sol\":476:509  aToken0Amount != type(int256).min */\n          dup1\n          dup3\n          eq\n          iszero\n          swap1\n          dup2\n            /* \"test/__mocks/AssetManager.sol\":476:546  aToken0Amount != type(int256).min && aToken1Amount != type(int256).min */\n          tag_28\n          jumpi\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n        tag_29:\n          pop\n          iszero\n          tag_30\n          jumpi\n            /* \"test/__mocks/AssetManager.sol\":578:596  aToken0Amount >= 0 */\n          dup5\n          swap6\n          dup6\n          dup3\n          slt\n          iszero\n            /* \"test/__mocks/AssetManager.sol\":574:899  if (aToken0Amount >= 0) {... */\n          0x00\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          eq\n          tag_32\n          jumpi\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup1\n          dup3\n          and\n          swap1\n          dup2\n          dup9\n          mstore\n          dup8\n          0x20\n          mstore\n          dup5\n          0x20\n          dup8\n          dup11\n          keccak256\n          swap4\n          dup9\n          mload\n            /* \"test/__mocks/AssetManager.sol\":682:696  aPair.token0() */\n          swap3\n          dup4\n          dup1\n          swap3\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          0x0dfe168100000000000000000000000000000000000000000000000000000000\n            /* \"test/__mocks/AssetManager.sol\":682:696  aPair.token0() */\n          dup3\n          mstore\n          gas\n          staticcall\n          swap1\n          dup2\n          iszero\n          tag_42\n          jumpi\n          dup10\n          swap2\n          tag_36\n          jumpi\n            /* \"test/__mocks/AssetManager.sol\":574:899  if (aToken0Amount >= 0) {... */\n        tag_37:\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          pop\n          and\n          0x00\n          mstore\n          0x20\n          mstore\n          dup4\n          0x00\n          keccak256\n            /* \"test/__mocks/AssetManager.sol\":664:705  getBalance[aPair][aPair.token0()] += lAbs */\n          tag_38\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          dup4\n          dup3\n          sload\n            /* \"test/__mocks/AssetManager.sol\":664:705  getBalance[aPair][aPair.token0()] += lAbs */\n          tag_10\n          jump\t// in\n        tag_38:\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          swap1\n          sstore\n            /* \"test/__mocks/AssetManager.sol\":574:899  if (aToken0Amount >= 0) {... */\n        tag_39:\n            /* \"test/__mocks/AssetManager.sol\":912:930  aToken1Amount >= 0 */\n          dup6\n          dup6\n          slt\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          tag_40\n          jumpi\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup1\n          dup3\n          and\n          swap1\n          dup2\n          dup9\n          mstore\n          dup8\n          0x20\n          mstore\n          dup5\n          0x20\n          dup8\n          dup11\n          keccak256\n          swap4\n          dup9\n          mload\n            /* \"test/__mocks/AssetManager.sol\":1016:1030  aPair.token1() */\n          swap3\n          dup4\n          dup1\n          swap3\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          0xd21220a700000000000000000000000000000000000000000000000000000000\n            /* \"test/__mocks/AssetManager.sol\":1016:1030  aPair.token1() */\n          dup3\n          mstore\n          gas\n          staticcall\n          swap1\n          dup2\n          iszero\n          tag_42\n          jumpi\n          swap1\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"test/__mocks/AssetManager.sol\":1016:1030  aPair.token1() */\n          swap5\n          swap4\n          swap3\n          swap2\n          dup11\n          swap2\n          tag_44\n          jumpi\n            /* \"test/__mocks/AssetManager.sol\":908:1233  if (aToken1Amount >= 0) {... */\n        tag_45:\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          pop\n          and\n          0x00\n          mstore\n          0x20\n          mstore\n          dup5\n          0x00\n          keccak256\n            /* \"test/__mocks/AssetManager.sol\":998:1039  getBalance[aPair][aPair.token1()] += lAbs */\n          tag_46\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          dup8\n          dup3\n          sload\n            /* \"test/__mocks/AssetManager.sol\":998:1039  getBalance[aPair][aPair.token1()] += lAbs */\n          tag_10\n          jump\t// in\n        tag_46:\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          swap1\n          sstore\n            /* \"test/__mocks/AssetManager.sol\":908:1233  if (aToken1Amount >= 0) {... */\n        tag_47:\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          and\n            /* \"test/__mocks/AssetManager.sol\":1243:1295  aPair.adjustManagement(aToken0Amount, aToken1Amount) */\n          dup1\n          extcodesize\n          iszero\n          tag_48\n          jumpi\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          dup6\n          swap3\n          dup4\n          0x44\n          swap3\n          dup7\n          mload\n            /* \"test/__mocks/AssetManager.sol\":1243:1295  aPair.adjustManagement(aToken0Amount, aToken1Amount) */\n          swap8\n          dup9\n          swap6\n          dup7\n          swap5\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          0x97e3776400000000000000000000000000000000000000000000000000000000\n            /* \"test/__mocks/AssetManager.sol\":1243:1295  aPair.adjustManagement(aToken0Amount, aToken1Amount) */\n          dup7\n          mstore\n          dup6\n          add\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          mstore\n          0x24\n          dup5\n          add\n          mstore\n            /* \"test/__mocks/AssetManager.sol\":1243:1295  aPair.adjustManagement(aToken0Amount, aToken1Amount) */\n          gas\n          call\n          swap1\n          dup2\n          iszero\n          tag_50\n          jumpi\n          pop\n          tag_52\n          jumpi\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          pop\n          return\n            /* \"test/__mocks/AssetManager.sol\":1243:1295  aPair.adjustManagement(aToken0Amount, aToken1Amount) */\n        tag_52:\n          tag_54\n          swap1\n          tag_4\n          jump\t// in\n        tag_54:\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          tag_55\n          jumpi\n            /* \"test/__mocks/AssetManager.sol\":1243:1295  aPair.adjustManagement(aToken0Amount, aToken1Amount) */\n          dup1\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          return\n        tag_55:\n          dup1\n          revert\n            /* \"test/__mocks/AssetManager.sol\":1243:1295  aPair.adjustManagement(aToken0Amount, aToken1Amount) */\n        tag_50:\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          mload\n          returndatasize\n          dup5\n          dup3\n          returndatacopy\n          returndatasize\n          swap1\n          revert\n            /* \"test/__mocks/AssetManager.sol\":1243:1295  aPair.adjustManagement(aToken0Amount, aToken1Amount) */\n        tag_48:\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          dup6\n          dup1\n          revert\n            /* \"test/__mocks/AssetManager.sol\":1016:1030  aPair.token1() */\n        tag_44:\n          tag_57\n          swap2\n          pop\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          0x20\n            /* \"test/__mocks/AssetManager.sol\":1016:1030  aPair.token1() */\n          returndatasize\n          dup2\n          gt\n          tag_58\n          jumpi\n        tag_59:\n          tag_60\n          dup2\n          dup4\n          tag_5\n          jump\t// in\n        tag_60:\n          dup2\n          add\n          swap1\n          tag_6\n          jump\t// in\n        tag_57:\n          codesize\n          jump(tag_45)\n        tag_58:\n          pop\n          returndatasize\n          jump(tag_59)\n        tag_42:\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          dup8\n          mload\n          returndatasize\n          dup12\n          dup3\n          returndatacopy\n          returndatasize\n          swap1\n          revert\n            /* \"test/__mocks/AssetManager.sol\":908:1233  if (aToken1Amount >= 0) {... */\n        tag_40:\n            /* \"test/__mocks/AssetManager.sol\":1093:1107  -aToken1Amount */\n          swap5\n          swap4\n          swap3\n          swap2\n          swap1\n          tag_61\n          dup5\n          tag_3\n          jump\t// in\n        tag_61:\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          dup4\n          mload\n          0xd21220a700000000000000000000000000000000000000000000000000000000\n            /* \"test/__mocks/AssetManager.sol\":1123:1137  aPair.token1() */\n          dup1\n          dup3\n          mstore\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup1\n          dup11\n          and\n          swap10\n          swap4\n          swap3\n          0x20\n          swap2\n          swap1\n          dup3\n          dup2\n          dup10\n          dup2\n          dup16\n            /* \"test/__mocks/AssetManager.sol\":1123:1137  aPair.token1() */\n          gas\n          staticcall\n          swap1\n          dup2\n          iszero\n          tag_67\n          jumpi\n          dup6\n            /* \"test/__mocks/AssetManager.sol\":1123:1167  aPair.token1().approve(address(aPair), lAbs) */\n          tag_64\n            /* \"test/__mocks/AssetManager.sol\":1123:1137  aPair.token1() */\n          swap3\n          dup15\n          dup15\n          dup7\n          dup14\n          dup16\n          dup11\n          swap8\n          dup5\n          swap7\n          tag_65\n          jumpi\n            /* \"test/__mocks/AssetManager.sol\":908:1233  if (aToken1Amount >= 0) {... */\n        tag_66:\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          pop\n          mload\n            /* \"test/__mocks/AssetManager.sol\":1123:1167  aPair.token1().approve(address(aPair), lAbs) */\n          swap8\n          dup9\n          swap7\n          dup8\n          swap6\n          dup7\n          swap4\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          0x095ea7b300000000000000000000000000000000000000000000000000000000\n            /* \"test/__mocks/AssetManager.sol\":1123:1167  aPair.token1().approve(address(aPair), lAbs) */\n          dup6\n          mstore\n          dup5\n          add\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          0x20\n          swap1\n          swap4\n          swap3\n          swap2\n          swap4\n          0xffffffffffffffffffffffffffffffffffffffff\n          0x40\n          dup3\n          add\n          swap6\n          and\n          dup2\n          mstore\n          add\n          mstore\n          jump\n            /* \"test/__mocks/AssetManager.sol\":1123:1167  aPair.token1().approve(address(aPair), lAbs) */\n        tag_64:\n          sub\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          swap4\n          and\n            /* \"test/__mocks/AssetManager.sol\":1123:1167  aPair.token1().approve(address(aPair), lAbs) */\n          gas\n          call\n          dup1\n          iszero\n          tag_67\n          jumpi\n          tag_69\n          jumpi\n            /* \"test/__mocks/AssetManager.sol\":908:1233  if (aToken1Amount >= 0) {... */\n        tag_70:\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          pop\n          dup11\n          dup11\n          mstore\n          dup10\n          dup3\n          mstore\n          dup2\n          dup9\n          dup12\n          keccak256\n          swap4\n          dup9\n          dup11\n          mload\n            /* \"test/__mocks/AssetManager.sol\":1199:1213  aPair.token1() */\n          dup1\n          swap15\n          dup2\n          swap4\n          dup3\n          mstore\n          gas\n          staticcall\n          dup1\n          iszero\n          tag_71\n          jumpi\n          dup11\n          swap12\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"test/__mocks/AssetManager.sol\":1199:1213  aPair.token1() */\n          swap8\n          swap9\n          swap10\n          swap11\n          swap12\n          swap2\n          tag_73\n          jumpi\n            /* \"test/__mocks/AssetManager.sol\":908:1233  if (aToken1Amount >= 0) {... */\n        tag_74:\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          pop\n          and\n          0x00\n          mstore\n          mstore\n            /* \"test/__mocks/AssetManager.sol\":1181:1222  getBalance[aPair][aPair.token1()] -= lAbs */\n          tag_75\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          dup7\n          0x00\n          keccak256\n          swap2\n          dup3\n          sload\n            /* \"test/__mocks/AssetManager.sol\":1181:1222  getBalance[aPair][aPair.token1()] -= lAbs */\n          tag_9\n          jump\t// in\n        tag_75:\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          swap1\n          sstore\n            /* \"test/__mocks/AssetManager.sol\":908:1233  if (aToken1Amount >= 0) {... */\n          jump(tag_47)\n            /* \"test/__mocks/AssetManager.sol\":1199:1213  aPair.token1() */\n        tag_73:\n          tag_76\n          swap2\n          pop\n          dup4\n          returndatasize\n          dup6\n          gt\n          tag_58\n          jumpi\n          tag_60\n          dup2\n          dup4\n          tag_5\n          jump\t// in\n        tag_76:\n          codesize\n          jump(tag_74)\n        tag_71:\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          dup9\n          mload\n          returndatasize\n          dup13\n          dup3\n          returndatacopy\n          returndatasize\n          swap1\n          revert\n            /* \"test/__mocks/AssetManager.sol\":1123:1167  aPair.token1().approve(address(aPair), lAbs) */\n        tag_69:\n          tag_80\n          swap1\n          dup4\n          returndatasize\n          dup6\n          gt\n          tag_81\n          jumpi\n        tag_82:\n          tag_83\n          dup2\n          dup4\n          tag_5\n          jump\t// in\n        tag_83:\n          dup2\n          add\n          swap1\n          tag_7\n          jump\t// in\n        tag_80:\n          pop\n          codesize\n          jump(tag_70)\n        tag_81:\n          pop\n          returndatasize\n          jump(tag_82)\n        tag_67:\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          dup10\n          mload\n          returndatasize\n          dup14\n          dup3\n          returndatacopy\n          returndatasize\n          swap1\n          revert\n            /* \"test/__mocks/AssetManager.sol\":1123:1137  aPair.token1() */\n        tag_65:\n          tag_84\n          swap2\n          swap7\n          pop\n          dup9\n          returndatasize\n          dup11\n          gt\n          tag_58\n          jumpi\n          tag_60\n          dup2\n          dup4\n          tag_5\n          jump\t// in\n        tag_84:\n          swap5\n          codesize\n          jump(tag_66)\n            /* \"test/__mocks/AssetManager.sol\":682:696  aPair.token0() */\n        tag_36:\n          tag_88\n          swap2\n          pop\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          0x20\n            /* \"test/__mocks/AssetManager.sol\":682:696  aPair.token0() */\n          returndatasize\n          dup2\n          gt\n          tag_58\n          jumpi\n          tag_60\n          dup2\n          dup4\n          tag_5\n          jump\t// in\n        tag_88:\n          codesize\n          jump(tag_37)\n            /* \"test/__mocks/AssetManager.sol\":574:899  if (aToken0Amount >= 0) {... */\n        tag_32:\n            /* \"test/__mocks/AssetManager.sol\":759:773  -aToken0Amount */\n          tag_92\n          dup3\n          tag_3\n          jump\t// in\n        tag_92:\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup1\n          dup4\n          and\n          swap1\n          dup7\n          mload\n          swap1\n          0x0dfe168100000000000000000000000000000000000000000000000000000000\n            /* \"test/__mocks/AssetManager.sol\":789:803  aPair.token0() */\n          swap3\n          dup4\n          dup4\n          mstore\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          0x20\n            /* \"test/__mocks/AssetManager.sol\":789:803  aPair.token0() */\n          swap3\n          dup4\n          dup2\n          dup11\n          dup2\n          dup6\n          gas\n          staticcall\n          swap1\n          dup2\n          iszero\n          tag_98\n          jumpi\n          dup7\n            /* \"test/__mocks/AssetManager.sol\":789:833  aPair.token0().approve(address(aPair), lAbs) */\n          tag_95\n            /* \"test/__mocks/AssetManager.sol\":789:803  aPair.token0() */\n          swap3\n          dup5\n          dup16\n          dup8\n          dup16\n          dup16\n          swap1\n          dup12\n          swap8\n          dup5\n          swap7\n          tag_65\n          jumpi\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          pop\n          mload\n            /* \"test/__mocks/AssetManager.sol\":789:833  aPair.token0().approve(address(aPair), lAbs) */\n          swap8\n          dup9\n          swap7\n          dup8\n          swap6\n          dup7\n          swap4\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          0x095ea7b300000000000000000000000000000000000000000000000000000000\n            /* \"test/__mocks/AssetManager.sol\":789:833  aPair.token0().approve(address(aPair), lAbs) */\n          dup6\n          mstore\n          dup5\n          add\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          0x20\n          swap1\n          swap4\n          swap3\n          swap2\n          swap4\n          0xffffffffffffffffffffffffffffffffffffffff\n          0x40\n          dup3\n          add\n          swap6\n          and\n          dup2\n          mstore\n          add\n          mstore\n          jump\n            /* \"test/__mocks/AssetManager.sol\":789:833  aPair.token0().approve(address(aPair), lAbs) */\n        tag_95:\n          sub\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          swap4\n          and\n            /* \"test/__mocks/AssetManager.sol\":789:833  aPair.token0().approve(address(aPair), lAbs) */\n          gas\n          call\n          dup1\n          iszero\n          tag_98\n          jumpi\n          tag_100\n          jumpi\n            /* \"test/__mocks/AssetManager.sol\":574:899  if (aToken0Amount >= 0) {... */\n        tag_101:\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          pop\n          dup1\n          dup12\n          mstore\n          dup11\n          dup4\n          mstore\n          dup3\n          dup10\n          dup13\n          keccak256\n          swap5\n          dup10\n          dup12\n          mload\n            /* \"test/__mocks/AssetManager.sol\":865:879  aPair.token0() */\n          dup1\n          swap5\n          dup2\n          swap4\n          dup3\n          mstore\n          gas\n          staticcall\n          swap1\n          dup2\n          iszero\n          tag_67\n          jumpi\n          dup12\n          swap2\n          tag_104\n          jumpi\n            /* \"test/__mocks/AssetManager.sol\":574:899  if (aToken0Amount >= 0) {... */\n        tag_105:\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          pop\n          and\n          0x00\n          mstore\n          mstore\n            /* \"test/__mocks/AssetManager.sol\":847:888  getBalance[aPair][aPair.token0()] -= lAbs */\n          tag_106\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          dup6\n          0x00\n          keccak256\n          swap2\n          dup3\n          sload\n            /* \"test/__mocks/AssetManager.sol\":847:888  getBalance[aPair][aPair.token0()] -= lAbs */\n          tag_9\n          jump\t// in\n        tag_106:\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          swap1\n          sstore\n            /* \"test/__mocks/AssetManager.sol\":574:899  if (aToken0Amount >= 0) {... */\n          jump(tag_39)\n            /* \"test/__mocks/AssetManager.sol\":865:879  aPair.token0() */\n        tag_104:\n          tag_107\n          swap2\n          pop\n          dup4\n          returndatasize\n          dup6\n          gt\n          tag_58\n          jumpi\n          tag_60\n          dup2\n          dup4\n          tag_5\n          jump\t// in\n        tag_107:\n          codesize\n          jump(tag_105)\n            /* \"test/__mocks/AssetManager.sol\":789:833  aPair.token0().approve(address(aPair), lAbs) */\n        tag_100:\n          tag_111\n          swap1\n          dup5\n          returndatasize\n          dup7\n          gt\n          tag_81\n          jumpi\n          tag_83\n          dup2\n          dup4\n          tag_5\n          jump\t// in\n        tag_111:\n          pop\n          codesize\n          jump(tag_101)\n        tag_98:\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          dup11\n          mload\n          returndatasize\n          dup15\n          dup3\n          returndatacopy\n          returndatasize\n          swap1\n          revert\n        tag_30:\n          pop\n          0x20\n          0x64\n          swap3\n          mload\n          swap2\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup4\n          mstore\n          dup3\n          add\n          mstore\n          0x0c\n          0x24\n          dup3\n          add\n          mstore\n          0x414d3a204f564552464c4f570000000000000000000000000000000000000000\n          0x44\n          dup3\n          add\n          mstore\n          revert\n            /* \"test/__mocks/AssetManager.sol\":476:546  aToken0Amount != type(int256).min && aToken1Amount != type(int256).min */\n        tag_28:\n            /* \"test/__mocks/AssetManager.sol\":513:546  aToken1Amount != type(int256).min */\n          swap1\n          pop\n          dup5\n          eq\n          iszero\n            /* \"test/__mocks/AssetManager.sol\":476:546  aToken0Amount != type(int256).min && aToken1Amount != type(int256).min */\n          codesize\n          jump(tag_29)\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n        tag_25:\n          pop\n          dup1\n          revert\n        tag_19:\n          dup3\n          dup5\n          jumpi(tag_25, callvalue)\n          dup1\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_25\n          jumpi\n          0x20\n          swap2\n          tag_123\n          tag_1\n          jump\t// in\n        tag_123:\n          dup3\n          tag_124\n          tag_2\n          jump\t// in\n        tag_124:\n          swap3\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup1\n          swap4\n          and\n          dup2\n          mstore\n          dup1\n          dup7\n          mstore\n          keccak256\n          swap2\n          and\n          0x00\n          mstore\n          dup3\n          mstore\n          dup1\n          0x00\n          keccak256\n          sload\n          swap1\n          mload\n          swap1\n          dup2\n          mstore\n          return\n        tag_17:\n          dup3\n          dup5\n          jumpi(tag_25, callvalue)\n          jumpi(tag_25, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x60))\n          tag_129\n          tag_1\n          jump\t// in\n        tag_129:\n          tag_130\n          tag_2\n          jump\t// in\n        tag_130:\n          swap1\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup1\n          swap2\n          and\n          dup5\n          mstore\n          dup4\n          0x20\n          mstore\n          dup3\n          dup5\n          keccak256\n          swap2\n          and\n          0x00\n          mstore\n          0x20\n          mstore\n          calldataload(0x44)\n          swap1\n          0x00\n          keccak256\n          sstore\n          dup1\n          return\n        tag_15:\n          dup5\n          swap2\n          pop\n          jumpi(tag_133, callvalue)\n          dup2\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_133\n          jumpi\n          dup3\n          calldataload\n          swap1\n          dup2\n          iszero\n          iszero\n          dup3\n          sub\n          tag_156\n          jumpi\n          calldataload(0x24)\n          swap1\n            /* \"test/__mocks/AssetManager.sol\":1628:1709  aToken0 ? ReservoirPair(msg.sender).token0() : ReservoirPair(msg.sender).token1() */\n          dup3\n          iszero\n          tag_137\n          jumpi\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          pop\n          dup3\n          mload\n          0x0dfe168100000000000000000000000000000000000000000000000000000000\n            /* \"test/__mocks/AssetManager.sol\":1638:1672  ReservoirPair(msg.sender).token0() */\n          dup2\n          mstore\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          0x20\n            /* \"test/__mocks/AssetManager.sol\":1652:1662  msg.sender */\n          dup2\n          dup7\n          dup2\n          caller\n            /* \"test/__mocks/AssetManager.sol\":1638:1672  ReservoirPair(msg.sender).token0() */\n          gas\n          staticcall\n          swap1\n          dup2\n          iszero\n          tag_145\n          jumpi\n          dup7\n          swap2\n          tag_141\n          jumpi\n            /* \"test/__mocks/AssetManager.sol\":1628:1709  aToken0 ? ReservoirPair(msg.sender).token0() : ReservoirPair(msg.sender).token1() */\n        tag_142:\n          pop\n        tag_143:\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          dup4\n          mload\n          0x095ea7b300000000000000000000000000000000000000000000000000000000\n            /* \"test/__mocks/AssetManager.sol\":1627:1770  (aToken0 ? ReservoirPair(msg.sender).token0() : ReservoirPair(msg.sender).token1()).approve(... */\n          dup2\n          mstore\n            /* \"test/__mocks/AssetManager.sol\":1740:1750  msg.sender */\n          caller\n            /* \"test/__mocks/AssetManager.sol\":1627:1770  (aToken0 ? ReservoirPair(msg.sender).token0() : ReservoirPair(msg.sender).token1()).approve(... */\n          dup7\n          dup3\n          add\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          swap1\n          dup2\n          mstore\n          0x20\n          dup1\n          dup3\n          add\n          dup6\n          swap1\n          mstore\n          swap2\n          swap3\n          dup4\n          swap2\n            /* \"test/__mocks/AssetManager.sol\":1627:1770  (aToken0 ? ReservoirPair(msg.sender).token0() : ReservoirPair(msg.sender).token1()).approve(... */\n          dup3\n          swap1\n          sub\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          0x40\n            /* \"test/__mocks/AssetManager.sol\":1627:1770  (aToken0 ? ReservoirPair(msg.sender).token0() : ReservoirPair(msg.sender).token1()).approve(... */\n          add\n          swap1\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          dup3\n          swap1\n            /* \"test/__mocks/AssetManager.sol\":1740:1750  msg.sender */\n          dup11\n          swap1\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n            /* \"test/__mocks/AssetManager.sol\":1627:1770  (aToken0 ? ReservoirPair(msg.sender).token0() : ReservoirPair(msg.sender).token1()).approve(... */\n          gas\n          call\n          dup1\n          iszero\n          tag_145\n          jumpi\n          tag_147\n          jumpi\n            /* \"test/__mocks/AssetManager.sol\":1628:1709  aToken0 ? ReservoirPair(msg.sender).token0() : ReservoirPair(msg.sender).token1() */\n        tag_148:\n          pop\n            /* \"test/__mocks/AssetManager.sol\":1836:1874  aToken0 ? -int256(aAmount) : int256(0) */\n          dup2\n          iszero\n          tag_149\n          jumpi\n            /* \"test/__mocks/AssetManager.sol\":1846:1862  -int256(aAmount) */\n          tag_151\n          dup2\n          tag_3\n          jump\t// in\n        tag_151:\n            /* \"test/__mocks/AssetManager.sol\":1836:1874  aToken0 ? -int256(aAmount) : int256(0) */\n          swap2\n        tag_152:\n            /* \"test/__mocks/AssetManager.sol\":1876:1914  aToken0 ? int256(0) : -int256(aAmount) */\n          iszero\n          tag_153\n          jumpi\n          pop\n          dup4\n          swap1\n        tag_155:\n            /* \"test/__mocks/AssetManager.sol\":1740:1750  msg.sender */\n          caller\n            /* \"test/__mocks/AssetManager.sol\":1780:1924  ReservoirPair(msg.sender).adjustManagement(... */\n          extcodesize\n          iszero\n          tag_156\n          jumpi\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          dup3\n          mload\n            /* \"test/__mocks/AssetManager.sol\":1780:1924  ReservoirPair(msg.sender).adjustManagement(... */\n          swap4\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          0x97e3776400000000000000000000000000000000000000000000000000000000\n            /* \"test/__mocks/AssetManager.sol\":1780:1924  ReservoirPair(msg.sender).adjustManagement(... */\n          dup6\n          mstore\n          dup5\n          add\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          mstore\n          0x24\n          dup4\n          add\n          mstore\n            /* \"test/__mocks/AssetManager.sol\":1740:1750  msg.sender */\n          dup3\n          dup3\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          0x44\n            /* \"test/__mocks/AssetManager.sol\":1740:1750  msg.sender */\n          dup2\n          dup4\n          caller\n            /* \"test/__mocks/AssetManager.sol\":1780:1924  ReservoirPair(msg.sender).adjustManagement(... */\n          gas\n          call\n          swap1\n          dup2\n          iszero\n          tag_50\n          jumpi\n          pop\n          tag_160\n          jumpi\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          pop\n          dup1\n          return\n            /* \"test/__mocks/AssetManager.sol\":1780:1924  ReservoirPair(msg.sender).adjustManagement(... */\n        tag_160:\n          tag_162\n          swap1\n          tag_4\n          jump\t// in\n        tag_162:\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          dup1\n          return\n            /* \"test/__mocks/AssetManager.sol\":1780:1924  ReservoirPair(msg.sender).adjustManagement(... */\n        tag_156:\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          dup5\n          dup1\n          revert\n            /* \"test/__mocks/AssetManager.sol\":1876:1914  aToken0 ? int256(0) : -int256(aAmount) */\n        tag_153:\n            /* \"test/__mocks/AssetManager.sol\":1898:1914  -int256(aAmount) */\n          tag_163\n          swap1\n          tag_3\n          jump\t// in\n        tag_163:\n            /* \"test/__mocks/AssetManager.sol\":1876:1914  aToken0 ? int256(0) : -int256(aAmount) */\n          swap1\n          jump(tag_155)\n            /* \"test/__mocks/AssetManager.sol\":1836:1874  aToken0 ? -int256(aAmount) : int256(0) */\n        tag_149:\n          dup5\n          swap2\n          jump(tag_152)\n            /* \"test/__mocks/AssetManager.sol\":1627:1770  (aToken0 ? ReservoirPair(msg.sender).token0() : ReservoirPair(msg.sender).token1()).approve(... */\n        tag_147:\n          tag_164\n          swap1\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          0x20\n            /* \"test/__mocks/AssetManager.sol\":1627:1770  (aToken0 ? ReservoirPair(msg.sender).token0() : ReservoirPair(msg.sender).token1()).approve(... */\n          returndatasize\n          dup2\n          gt\n          tag_81\n          jumpi\n          tag_83\n          dup2\n          dup4\n          tag_5\n          jump\t// in\n        tag_164:\n          pop\n          dup6\n          jump(tag_148)\n        tag_145:\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          dup5\n          mload\n          returndatasize\n          dup9\n          dup3\n          returndatacopy\n          returndatasize\n          swap1\n          revert\n            /* \"test/__mocks/AssetManager.sol\":1638:1672  ReservoirPair(msg.sender).token0() */\n        tag_141:\n          tag_168\n          swap2\n          pop\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          0x20\n            /* \"test/__mocks/AssetManager.sol\":1638:1672  ReservoirPair(msg.sender).token0() */\n          returndatasize\n          dup2\n          gt\n          tag_58\n          jumpi\n          tag_60\n          dup2\n          dup4\n          tag_5\n          jump\t// in\n        tag_168:\n          dup7\n          jump(tag_142)\n            /* \"test/__mocks/AssetManager.sol\":1628:1709  aToken0 ? ReservoirPair(msg.sender).token0() : ReservoirPair(msg.sender).token1() */\n        tag_137:\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          0xd21220a700000000000000000000000000000000000000000000000000000000\n            /* \"test/__mocks/AssetManager.sol\":1675:1709  ReservoirPair(msg.sender).token1() */\n          dup2\n          mstore\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          0x20\n            /* \"test/__mocks/AssetManager.sol\":1689:1699  msg.sender */\n          dup2\n          dup7\n          dup2\n          caller\n            /* \"test/__mocks/AssetManager.sol\":1675:1709  ReservoirPair(msg.sender).token1() */\n          gas\n          staticcall\n          swap1\n          dup2\n          iszero\n          tag_145\n          jumpi\n          dup7\n          swap2\n          tag_174\n          jumpi\n            /* \"test/__mocks/AssetManager.sol\":1628:1709  aToken0 ? ReservoirPair(msg.sender).token0() : ReservoirPair(msg.sender).token1() */\n        tag_175:\n          pop\n          jump(tag_143)\n            /* \"test/__mocks/AssetManager.sol\":1675:1709  ReservoirPair(msg.sender).token1() */\n        tag_174:\n          tag_176\n          swap2\n          pop\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n          0x20\n            /* \"test/__mocks/AssetManager.sol\":1675:1709  ReservoirPair(msg.sender).token1() */\n          returndatasize\n          dup2\n          gt\n          tag_58\n          jumpi\n          tag_60\n          dup2\n          dup4\n          tag_5\n          jump\t// in\n        tag_176:\n          dup7\n          jump(tag_175)\n            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */\n        tag_133:\n          dup4\n          dup1\n          revert\n        tag_13:\n          dup4\n          jumpi(tag_55, callvalue)\n          dup1\n          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)\n          slt\n          tag_55\n          jumpi\n          dup1\n          return\n        tag_1:\n          calldataload(0x04)\n          swap1\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup3\n          and\n          dup3\n          sub\n          tag_184\n          jumpi\n          jump\t// out\n        tag_184:\n          0x00\n          dup1\n          revert\n        tag_2:\n          calldataload(0x24)\n          swap1\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup3\n          and\n          dup3\n          sub\n          tag_184\n          jumpi\n          jump\t// out\n        tag_3:\n          0x8000000000000000000000000000000000000000000000000000000000000000\n          dup2\n          eq\n          tag_188\n          jumpi\n          0x00\n          sub\n          swap1\n          jump\t// out\n        tag_188:\n          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n          mstore(0x04, 0x11)\n          revert(0x00, 0x24)\n        tag_4:\n          0xffffffffffffffff\n          dup2\n          gt\n          tag_190\n          jumpi\n          0x40\n          mstore\n          jump\t// out\n        tag_190:\n          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n          mstore(0x04, 0x41)\n          revert(0x00, 0x24)\n        tag_5:\n          swap1\n          0x1f\n          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n          swap2\n          add\n          and\n          dup2\n          add\n          swap1\n          dup2\n          lt\n          0xffffffffffffffff\n          dup3\n          gt\n          or\n          tag_190\n          jumpi\n          0x40\n          mstore\n          jump\t// out\n        tag_6:\n          swap1\n          dup2\n          0x20\n          swap2\n          sub\n          slt\n          tag_184\n          jumpi\n          mload\n          0xffffffffffffffffffffffffffffffffffffffff\n          dup2\n          and\n          dup2\n          sub\n          tag_184\n          jumpi\n          swap1\n          jump\t// out\n        tag_7:\n          swap1\n          dup2\n          0x20\n          swap2\n          sub\n          slt\n          tag_184\n          jumpi\n          mload\n          dup1\n          iszero\n          iszero\n          dup2\n          sub\n          tag_184\n          jumpi\n          swap1\n          jump\t// out\n        tag_9:\n          swap2\n          swap1\n          dup3\n          sub\n          swap2\n          dup3\n          gt\n          tag_188\n          jumpi\n          jump\t// out\n        tag_10:\n          swap2\n          swap1\n          dup3\n          add\n          dup1\n          swap3\n          gt\n          tag_188\n          jumpi\n          jump\t// out\n\n        auxdata: 0xa164736f6c6343000811000a\n    }\n}\n",

