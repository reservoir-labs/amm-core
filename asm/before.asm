  "assembly": "    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x80
  dup1
  0x40
  mstore
  jumpi(tag_196, callvalue)
    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */
  0x00
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup1
  sload
  not(0xff)
  and
    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */
  0x01
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  or
  dup2
  sstore
    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */
  swap1
    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */
  dataSize(sub_1)
  dup1
  dup3
  add
  swap1
  sub(shl(0x40, 0x01), 0x01)
  dup3
  gt
  dup4
  dup4
  lt
  or
  tag_189
  jumpi
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x20
    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */
  swap2
  dup4
  swap2
  dataOffset(sub_1)
  dup4
  codecopy
    /* \"test/__fixtures/BaseTest.sol\":1126:1130  this */
  address
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup2
  mstore
    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */
  sub
  add
  swap1
  dup3
  create
  dup1
  iszero
  tag_51
  jumpi
  0x13
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup1
  sload
  not(sub(shl(0xa0, 0x01), 0x01))
  and
  sub(shl(0xa0, 0x01), 0x01)
  swap3
  swap1
  swap3
  and
  swap2
  swap1
  swap2
  or
  swap1
  sstore
  mload(0x40)
  tag_19
  dup2
  tag_2
  jump\t// in
tag_19:
  0x09
  dup2
  mstore
  shl(0xb9, 0x3932b1b7bb32b932b9)
  0x20
  dup3
  add
  mstore
  sub(shl(0xa0, 0x01), 0x01)
  swap1
    /* \"test/__fixtures/BaseTest.sol\":1169:1194  _makeAddress(\"recoverer\") */
  tag_20
  swap1
  tag_12
  jump\t// in
tag_20:
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  and
    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */
  0x01
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup1
  0xa0
  shl
  sub
  not
    /* \"test/__fixtures/BaseTest.sol\":1169:1194  _makeAddress(\"recoverer\") */
  0x14
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  sload
  and
  or
    /* \"test/__fixtures/BaseTest.sol\":1169:1194  _makeAddress(\"recoverer\") */
  0x14
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  sstore
  mload(0x40)
  tag_21
  dup2
  tag_2
  jump\t// in
tag_21:
  0x0d
  dup2
  mstore
  shl(0x98, 0x706c6174666f726d466565546f)
  0x20
  dup3
  add
  mstore
  sub(shl(0xa0, 0x01), 0x01)
  swap1
    /* \"test/__fixtures/BaseTest.sol\":1234:1263  _makeAddress(\"platformFeeTo\") */
  tag_22
  swap1
  tag_12
  jump\t// in
tag_22:
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  and
    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */
  0x01
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup1
  0xa0
  shl
  sub
  not
    /* \"test/__fixtures/BaseTest.sol\":1234:1263  _makeAddress(\"platformFeeTo\") */
  0x15
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  sload
  and
  or
    /* \"test/__fixtures/BaseTest.sol\":1234:1263  _makeAddress(\"platformFeeTo\") */
  0x15
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  sstore
  mload(0x40)
  tag_23
  dup2
  tag_2
  jump\t// in
tag_23:
  0x05
  dup2
  mstore
  shl(0xd8, 0x616c696365)
  0x20
  dup3
  add
  mstore
  sub(shl(0xa0, 0x01), 0x01)
  swap1
    /* \"test/__fixtures/BaseTest.sol\":1295:1316  _makeAddress(\"alice\") */
  tag_24
  swap1
  tag_12
  jump\t// in
tag_24:
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  and
    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */
  0x01
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup1
  0xa0
  shl
  sub
  not
    /* \"test/__fixtures/BaseTest.sol\":1295:1316  _makeAddress(\"alice\") */
  0x16
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  sload
  and
  or
    /* \"test/__fixtures/BaseTest.sol\":1295:1316  _makeAddress(\"alice\") */
  0x16
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  sstore
  mload(0x40)
  tag_25
  dup2
  tag_2
  jump\t// in
tag_25:
  0x03
  dup2
  mstore
  shl(0xe9, 0x3137b1)
  0x20
  dup3
  add
  mstore
  sub(shl(0xa0, 0x01), 0x01)
  swap1
    /* \"test/__fixtures/BaseTest.sol\":1346:1365  _makeAddress(\"bob\") */
  tag_26
  swap1
  tag_12
  jump\t// in
tag_26:
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  and
    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */
  0x01
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup1
  0xa0
  shl
  sub
  not
    /* \"test/__fixtures/BaseTest.sol\":1346:1365  _makeAddress(\"bob\") */
  0x17
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  sload
  and
  or
    /* \"test/__fixtures/BaseTest.sol\":1346:1365  _makeAddress(\"bob\") */
  0x17
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  sstore
  mload(0x40)
  tag_27
  dup2
  tag_2
  jump\t// in
tag_27:
  0x03
  dup2
  mstore
  shl(0xea, 0x18d85b)
  0x20
  dup3
  add
  mstore
  sub(shl(0xa0, 0x01), 0x01)
  swap1
    /* \"test/__fixtures/BaseTest.sol\":1395:1414  _makeAddress(\"cal\") */
  tag_28
  swap1
  tag_12
  jump\t// in
tag_28:
  0x18
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup1
  sload
  swap2
  swap1
  swap3
  and
  not(sub(shl(0xa0, 0x01), 0x01))
  swap1
  swap2
  and
  or
  swap1
  sstore
  mload(0x40)
    /* \"test/__fixtures/BaseTest.sol\":1454:1491  new MintableERC20(\"TokenA\", \"TA\", 18) */
  dataSize(sub_6)
  dup2
  add
  dup2
  dup2
  lt
  sub(shl(0x40, 0x01), 0x01)
  dup3
  gt
  or
  tag_33
  jumpi
  dup2
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0xe0
    /* \"test/__fixtures/BaseTest.sol\":1454:1491  new MintableERC20(\"TokenA\", \"TA\", 18) */
  swap2
  dataSize(sub_6)
  dataOffset(sub_6)
  dup4
  codecopy
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x60
  dup2
  mstore
  0x06
  0x60
  dup3
  add
  mstore
  shl(0xd0, 0x546f6b656e41)
  0x80
  dup3
  add
  mstore
  0xa0
  0x20
  dup3
  add
  mstore
  0x02
  0xa0
  dup3
  add
  mstore
  shl(0xf0, 0x5441)
  0xc0
  dup3
  add
  mstore
    /* \"test/__fixtures/BaseTest.sol\":1488:1490  18 */
  0x12
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x40
  dup3
  add
  mstore
    /* \"test/__fixtures/BaseTest.sol\":1454:1491  new MintableERC20(\"TokenA\", \"TA\", 18) */
  sub
  add
  swap1
  dup3
  create
  dup1
  iszero
  tag_51
  jumpi
  0x19
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup1
  sload
  not(sub(shl(0xa0, 0x01), 0x01))
  and
  sub(shl(0xa0, 0x01), 0x01)
  swap3
  swap1
  swap3
  and
  swap2
  swap1
  swap2
  or
  swap1
  sstore
  mload(0x40)
    /* \"test/__fixtures/BaseTest.sol\":1454:1491  new MintableERC20(\"TokenA\", \"TA\", 18) */
  dataSize(sub_6)
    /* \"test/__fixtures/BaseTest.sol\":1530:1567  new MintableERC20(\"TokenB\", \"TB\", 18) */
  dup2
  add
  sub(shl(0x40, 0x01), 0x01)
  dup2
  gt
  dup3
  dup3
  lt
  or
  tag_33
  jumpi
    /* \"test/__fixtures/BaseTest.sol\":1454:1491  new MintableERC20(\"TokenA\", \"TA\", 18) */
  dup2
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0xe0
    /* \"test/__fixtures/BaseTest.sol\":1454:1491  new MintableERC20(\"TokenA\", \"TA\", 18) */
  swap2
  dataSize(sub_6)
  dataOffset(sub_6)
    /* \"test/__fixtures/BaseTest.sol\":1530:1567  new MintableERC20(\"TokenB\", \"TB\", 18) */
  dup4
  codecopy
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x60
  dup2
  mstore
  0x06
  0x60
  dup3
  add
  mstore
  shl(0xd1, 0x2a37b5b2b721)
  0x80
  dup3
  add
  mstore
  0xa0
  0x20
  dup3
  add
  mstore
  0x02
  0xa0
  dup3
  add
  mstore
  shl(0xf1, 0x2a21)
  0xc0
  dup3
  add
  mstore
    /* \"test/__fixtures/BaseTest.sol\":1488:1490  18 */
  0x12
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x40
  dup3
  add
  mstore
    /* \"test/__fixtures/BaseTest.sol\":1530:1567  new MintableERC20(\"TokenB\", \"TB\", 18) */
  sub
  add
  swap1
  dup3
  create
  dup1
  iszero
  tag_51
  jumpi
  0x1a
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup1
  sload
  not(sub(shl(0xa0, 0x01), 0x01))
  and
  sub(shl(0xa0, 0x01), 0x01)
  swap3
  swap1
  swap3
  and
  swap2
  swap1
  swap2
  or
  swap1
  sstore
  mload(0x40)
  sub(shl(0x40, 0x01), 0x01)
    /* \"test/__fixtures/BaseTest.sol\":1454:1491  new MintableERC20(\"TokenA\", \"TA\", 18) */
  dataSize(sub_6)
    /* \"test/__fixtures/BaseTest.sol\":1606:1643  new MintableERC20(\"TokenC\", \"TC\", 18) */
  dup3
  add
  swap1
  dup2
  gt
  swap1
  dup3
  gt
  or
  tag_45
  jumpi
    /* \"test/__fixtures/BaseTest.sol\":1454:1491  new MintableERC20(\"TokenA\", \"TA\", 18) */
  dataSize(sub_6)
  dataOffset(sub_6)
    /* \"test/__fixtures/BaseTest.sol\":1606:1643  new MintableERC20(\"TokenC\", \"TC\", 18) */
  dup3
  codecopy
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x60
    /* \"test/__fixtures/BaseTest.sol\":1454:1491  new MintableERC20(\"TokenA\", \"TA\", 18) */
  dataSize(sub_6)
    /* \"test/__fixtures/BaseTest.sol\":1606:1643  new MintableERC20(\"TokenC\", \"TC\", 18) */
  dup3
  add
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup2
  dup2
  mstore
  0x06
  swap2
  dup2
  add
  swap2
  swap1
  swap2
  mstore
  shl(0xd0, 0x546f6b656e43)
  0x80
  dup3
  add
  mstore
  0xa0
  0x20
  dup3
  add
  dup2
  swap1
  mstore
  0x02
  swap1
  dup3
  add
  mstore
  shl(0xf0, 0x5443)
  0xc0
  dup3
  add
  mstore
    /* \"test/__fixtures/BaseTest.sol\":1488:1490  18 */
  0x12
  0x40
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup3
  add
  mstore
    /* \"test/__fixtures/BaseTest.sol\":1606:1643  new MintableERC20(\"TokenC\", \"TC\", 18) */
  dup2
  swap1
  sub
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0xe0
    /* \"test/__fixtures/BaseTest.sol\":1606:1643  new MintableERC20(\"TokenC\", \"TC\", 18) */
  add
  swap1
  dup3
  create
  dup1
  iszero
  tag_51
  jumpi
  0x1b
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup1
  sload
  not(sub(shl(0xa0, 0x01), 0x01))
  and
  sub(shl(0xa0, 0x01), 0x01)
  swap3
  swap1
  swap3
  and
  swap2
  swap1
  swap2
  or
  swap1
  sstore
  mload(0x40)
  sub(shl(0x40, 0x01), 0x01)
    /* \"test/__fixtures/BaseTest.sol\":1454:1491  new MintableERC20(\"TokenA\", \"TA\", 18) */
  dataSize(sub_6)
    /* \"test/__fixtures/BaseTest.sol\":1682:1718  new MintableERC20(\"TokenD\", \"TD\", 6) */
  dup3
  add
  swap1
  dup2
  gt
  swap1
  dup3
  gt
  or
  tag_45
  jumpi
    /* \"test/__fixtures/BaseTest.sol\":1454:1491  new MintableERC20(\"TokenA\", \"TA\", 18) */
  dataSize(sub_6)
  dataOffset(sub_6)
    /* \"test/__fixtures/BaseTest.sol\":1682:1718  new MintableERC20(\"TokenD\", \"TD\", 6) */
  dup3
  codecopy
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x60
    /* \"test/__fixtures/BaseTest.sol\":1454:1491  new MintableERC20(\"TokenA\", \"TA\", 18) */
  dataSize(sub_6)
    /* \"test/__fixtures/BaseTest.sol\":1682:1718  new MintableERC20(\"TokenD\", \"TD\", 6) */
  dup3
  add
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup2
  dup2
  mstore
  0x06
  swap2
  dup2
  add
  dup3
  swap1
  mstore
  shl(0xd2, 0x151bdad95b91)
  0x80
  dup3
  add
  mstore
  0xa0
  0x20
  dup3
  add
  dup2
  swap1
  mstore
  0x02
  swap1
  dup3
  add
  mstore
  shl(0xf2, 0x1511)
  0xc0
  dup3
  add
  mstore
  0x40
  dup2
  add
  swap2
  swap1
  swap2
  mstore
    /* \"test/__fixtures/BaseTest.sol\":1682:1718  new MintableERC20(\"TokenD\", \"TD\", 6) */
  dup2
  swap1
  sub
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0xe0
    /* \"test/__fixtures/BaseTest.sol\":1682:1718  new MintableERC20(\"TokenD\", \"TD\", 6) */
  add
  swap1
  dup3
  create
  dup1
  iszero
  tag_51
  jumpi
  0x1c
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup1
  sload
  not(sub(shl(0xa0, 0x01), 0x01))
  and
  sub(shl(0xa0, 0x01), 0x01)
  swap3
  swap1
  swap3
  and
  swap2
  swap1
  swap2
  or
  swap1
  sstore
  mload(0x40)
  sub(shl(0x40, 0x01), 0x01)
    /* \"test/__fixtures/BaseTest.sol\":1454:1491  new MintableERC20(\"TokenA\", \"TA\", 18) */
  dataSize(sub_6)
    /* \"test/__fixtures/BaseTest.sol\":1757:1794  new MintableERC20(\"TokenF\", \"TF\", 25) */
  dup3
  add
  swap1
  dup2
  gt
  swap1
  dup3
  gt
  or
  tag_45
  jumpi
    /* \"test/__fixtures/BaseTest.sol\":1454:1491  new MintableERC20(\"TokenA\", \"TA\", 18) */
  dataSize(sub_6)
  dataOffset(sub_6)
    /* \"test/__fixtures/BaseTest.sol\":1757:1794  new MintableERC20(\"TokenF\", \"TF\", 25) */
  dup3
  codecopy
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x60
    /* \"test/__fixtures/BaseTest.sol\":1454:1491  new MintableERC20(\"TokenA\", \"TA\", 18) */
  dataSize(sub_6)
    /* \"test/__fixtures/BaseTest.sol\":1757:1794  new MintableERC20(\"TokenF\", \"TF\", 25) */
  dup3
  add
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup2
  dup2
  mstore
  0x06
  swap2
  dup2
  add
  swap2
  swap1
  swap2
  mstore
  shl(0xd1, 0x2a37b5b2b723)
  0x80
  dup3
  add
  mstore
  0xa0
  0x20
  dup3
  add
  dup2
  swap1
  mstore
  0x02
  swap1
  dup3
  add
  mstore
  shl(0xf1, 0x2a23)
  0xc0
  dup3
  add
  mstore
    /* \"test/__fixtures/BaseTest.sol\":1454:1491  new MintableERC20(\"TokenA\", \"TA\", 18) */
  0x19
  0x40
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup3
  add
  mstore
    /* \"test/__fixtures/BaseTest.sol\":1757:1794  new MintableERC20(\"TokenF\", \"TF\", 25) */
  dup2
  swap1
  sub
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0xe0
    /* \"test/__fixtures/BaseTest.sol\":1757:1794  new MintableERC20(\"TokenF\", \"TF\", 25) */
  add
  swap1
  dup3
  create
  dup1
  iszero
  tag_51
  jumpi
  0x1d
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup1
  sload
  not(sub(shl(0xa0, 0x01), 0x01))
  and
  sub(shl(0xa0, 0x01), 0x01)
  swap3
  swap1
  swap3
  and
  swap2
  swap1
  swap2
  or
  swap1
  sstore
  mload(0x40)
    /* \"test/__fixtures/BaseTest.sol\":1932:1950  new OracleCaller() */
  dataSize(sub_5)
  dup1
  dup3
  add
  swap1
  sub(shl(0x40, 0x01), 0x01)
  dup3
  gt
  dup4
  dup4
  lt
  or
  tag_189
  jumpi
  swap1
  dup3
  swap2
  dataOffset(sub_5)
  dup4
  codecopy
  sub
  swap1
  dup3
  create
  dup1
  iszero
  tag_51
  jumpi
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x20
  dup1
  sload
  not(sub(shl(0xa0, 0x01), 0x01))
  and
  sub(shl(0xa0, 0x01), 0x01)
  swap3
  swap1
  swap3
  and
  swap2
  swap1
  swap2
  or
  dup2
  sstore
  mload(0x40)
  shl(0xe0, 0xf877cb19)
    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */
  dup2
  mstore
  0x04
  dup2
  add
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  swap2
  swap1
  swap2
  mstore
  0x0f
  0x24
  dup3
  add
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mstore
  shl(0x88, 0x464f554e4452595f50524f46494c45)
  0x44
  dup3
  add
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  mstore
    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */
  dup2
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup2
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  0x64
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup2
  0x00
  dup1
  mload
  0x20
  data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
  dup4
  codecopy
  dup2
  mload
  swap2
  mstore
    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */
  gas
  staticcall
  dup3
  swap2
  dup2
  tag_53
  jumpi
tag_54:
  pop
    /* \"test/__fixtures/BaseTest.sol\":1981:2593  try vm.envString(\"FOUNDRY_PROFILE\") returns (string memory lProfile) {... */
  tag_55
  jumpi
    /* \"test/__fixtures/BaseTest.sol\":2532:2565  type(StableMintBurn).creationCode */
  pop
  dup1
    /* \"test/__fixtures/BaseTest.sol\":2493:2568  _bytesToHex(abi.encodePacked(keccak256(type(StableMintBurn).creationCode))) */
  tag_57
    /* \"test/__fixtures/BaseTest.sol\":2532:2565  type(StableMintBurn).creationCode */
  dataSize(sub_3)
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mload(0x40)
  tag_58
  0x20
    /* \"test/__fixtures/BaseTest.sol\":2532:2565  type(StableMintBurn).creationCode */
  dup4
  add
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup3
  tag_3
  jump\t// in
tag_58:
    /* \"test/__fixtures/BaseTest.sol\":2532:2565  type(StableMintBurn).creationCode */
  dup2
  dup2
  mstore
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x20
    /* \"test/__fixtures/BaseTest.sol\":2532:2565  type(StableMintBurn).creationCode */
  dup2
  add
  swap2
  dataOffset(sub_3)
  dup4
  codecopy
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  mload
    /* \"test/__fixtures/BaseTest.sol\":2522:2566  keccak256(type(StableMintBurn).creationCode) */
  swap1
  keccak256
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mload(0x40)
    /* \"test/__fixtures/BaseTest.sol\":2505:2567  abi.encodePacked(keccak256(type(StableMintBurn).creationCode)) */
  swap1
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x20
    /* \"test/__fixtures/BaseTest.sol\":2505:2567  abi.encodePacked(keccak256(type(StableMintBurn).creationCode)) */
  dup3
  add
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  mstore
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x20
    /* \"test/__fixtures/BaseTest.sol\":2505:2567  abi.encodePacked(keccak256(type(StableMintBurn).creationCode)) */
  dup2
  mstore
  tag_59
  dup2
  tag_2
  jump\t// in
tag_59:
    /* \"test/__fixtures/BaseTest.sol\":2493:2568  _bytesToHex(abi.encodePacked(keccak256(type(StableMintBurn).creationCode))) */
  tag_11
  jump\t// in
tag_57:
  0x00
  dup1
  mload
  0x20
  data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
  dup4
  codecopy
  dup2
  mload
  swap2
  mstore
    /* \"test/__fixtures/BaseTest.sol\":2405:2582  vm.writeFile(... */
  extcodesize
  iszero
  tag_143
  jumpi
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup2
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  tag_62
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  swap2
  mload(0x40)
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  dup1
  swap4
  dup2
  swap3
  shl(0xe0, 0x897e0a97)
    /* \"test/__fixtures/BaseTest.sol\":2405:2582  vm.writeFile(... */
  dup4
  mstore
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x40
    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */
  0x04
    /* \"test/__fixtures/BaseTest.sol\":2405:2582  vm.writeFile(... */
  dup5
  add
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  mstore
  0x26
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x44
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  dup5
  add
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mstore
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  0x736372697074732f6f7074696d697a65642d737461626c652d6d696e742d6275
  0x64
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup5
  add
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  mstore
  shl(0xd0, 0x726e2d6b6579)
  0x84
  dup5
  add
  mstore
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0xa0
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  0x24
  dup5
  add
  mstore
  0xa4
  dup4
  add
  swap1
  tag_7
  jump\t// in
tag_62:
    /* \"test/__fixtures/BaseTest.sol\":2405:2582  vm.writeFile(... */
  sub
  dup2
  dup4
  0x00
  dup1
  mload
  0x20
  data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
  dup4
  codecopy
  dup2
  mload
  swap2
  mstore
  gas
  call
  dup1
  iszero
  tag_185
  jumpi
  tag_65
  jumpi
    /* \"test/__fixtures/BaseTest.sol\":1981:2593  try vm.envString(\"FOUNDRY_PROFILE\") returns (string memory lProfile) {... */
tag_66:
  pop
  pop
tag_67:
    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */
  0x01
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup1
  0xa0
  shl
  sub
    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */
  0x13
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  sload
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  and
  mload(0x40)
  tag_68
  dup2
  tag_2
  jump\t// in
tag_68:
    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */
  0x13
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup2
  mstore
    /* \"test/__fixtures/BaseTest.sol\":924:931  250_000 */
  0x5368617265643a3a706c6174666f726d46656500000000000000000000000000
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x20
    /* \"test/__fixtures/BaseTest.sol\":924:931  250_000 */
  dup3
  add
  mstore
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mload(0x40)
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  swap1
    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */
  0x00
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
tag_69:
    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */
  0x13
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  dup2
  lt
  tag_70
  jumpi
  pop
  pop
    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */
  0x00
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  0x33
  dup3
  add
  mstore
    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */
  0x13
    /* \"src/libraries/FactoryStore.sol\":815:837  abi.encodePacked(aKey) */
  dup2
  mstore
  tag_72
  dup2
  tag_2
  jump\t// in
tag_72:
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x20
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  dup2
  mload
    /* \"src/libraries/FactoryStore.sol\":815:837  abi.encodePacked(aKey) */
  swap2
  add
    /* \"src/libraries/FactoryStore.sol\":805:838  keccak256(abi.encodePacked(aKey)) */
  keccak256
    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */
  dup2
  extcodesize
  iszero
  tag_196
  jumpi
    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */
  0x00
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  swap2
  0x44
  dup4
  swap3
  mload(0x40)
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  swap5
  dup6
  swap4
  dup5
  swap3
  shl(0xe0, 0xf71f7a25)
    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */
  dup5
  mstore
    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */
  0x04
    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */
  dup5
  add
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  mstore
    /* \"test/__fixtures/BaseTest.sol\":924:931  250_000 */
  0x03d090
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  0x24
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup5
  add
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  mstore
    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */
  gas
  call
  dup1
  iszero
  tag_169
  jumpi
  tag_77
  jumpi
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
tag_78:
  pop
    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */
  0x13
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  sload
    /* \"test/__fixtures/BaseTest.sol\":1234:1263  _makeAddress(\"platformFeeTo\") */
  0x15
    /* \"test/__fixtures/BaseTest.sol\":924:931  250_000 */
  sload
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mload(0x40)
    /* \"test/__fixtures/BaseTest.sol\":2704:2759  _factory.write(\"Shared::platformFeeTo\", _platformFeeTo) */
  tag_79
  swap3
  sub(shl(0xa0, 0x01), 0x01)
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  swap3
  dup4
  and
  swap3
  and
  tag_80
  dup3
  tag_2
  jump\t// in
tag_80:
    /* \"test/__fixtures/BaseTest.sol\":1234:1263  _makeAddress(\"platformFeeTo\") */
  0x15
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup3
  mstore
    /* \"test/__fixtures/BaseTest.sol\":924:931  250_000 */
  0x5368617265643a3a706c6174666f726d466565546f0000000000000000000000
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x20
    /* \"test/__fixtures/BaseTest.sol\":924:931  250_000 */
  dup4
  add
  mstore
    /* \"test/__fixtures/BaseTest.sol\":2704:2759  _factory.write(\"Shared::platformFeeTo\", _platformFeeTo) */
  tag_9
  jump\t// in
tag_79:
    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */
  0x13
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  sload
    /* \"test/__fixtures/BaseTest.sol\":1169:1194  _makeAddress(\"recoverer\") */
  0x14
    /* \"test/__fixtures/BaseTest.sol\":924:931  250_000 */
  sload
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mload(0x40)
    /* \"test/__fixtures/BaseTest.sol\":2769:2823  _factory.write(\"Shared::defaultRecoverer\", _recoverer) */
  tag_81
  swap3
  sub(shl(0xa0, 0x01), 0x01)
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  swap3
  dup4
  and
  swap3
  and
  tag_82
  dup3
  tag_2
  jump\t// in
tag_82:
    /* \"test/__fixtures/BaseTest.sol\":1395:1414  _makeAddress(\"cal\") */
  0x18
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup3
  mstore
    /* \"test/__fixtures/BaseTest.sol\":924:931  250_000 */
  0x5368617265643a3a64656661756c745265636f76657265720000000000000000
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x20
    /* \"test/__fixtures/BaseTest.sol\":924:931  250_000 */
  dup4
  add
  mstore
    /* \"test/__fixtures/BaseTest.sol\":2769:2823  _factory.write(\"Shared::defaultRecoverer\", _recoverer) */
  tag_9
  jump\t// in
tag_81:
    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */
  0x01
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup1
  0xa0
  shl
  sub
    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */
  0x13
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  sload
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  and
  mload(0x40)
  tag_83
  dup2
  tag_2
  jump\t// in
tag_83:
    /* \"test/__fixtures/BaseTest.sol\":1234:1263  _makeAddress(\"platformFeeTo\") */
  0x15
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup2
  mstore
    /* \"test/__fixtures/BaseTest.sol\":1048:1057  0.0005e18 */
  0x5368617265643a3a6d61784368616e6765526174650000000000000000000000
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x20
    /* \"test/__fixtures/BaseTest.sol\":1048:1057  0.0005e18 */
  dup3
  add
  mstore
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mload(0x40)
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  swap1
    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */
  0x00
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
tag_84:
    /* \"test/__fixtures/BaseTest.sol\":1234:1263  _makeAddress(\"platformFeeTo\") */
  0x15
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  dup2
  lt
  tag_85
  jumpi
  pop
  pop
    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */
  0x00
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  0x35
  dup3
  add
  mstore
    /* \"test/__fixtures/BaseTest.sol\":1234:1263  _makeAddress(\"platformFeeTo\") */
  0x15
    /* \"src/libraries/FactoryStore.sol\":815:837  abi.encodePacked(aKey) */
  dup2
  mstore
  tag_87
  dup2
  tag_2
  jump\t// in
tag_87:
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x20
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  dup2
  mload
    /* \"src/libraries/FactoryStore.sol\":815:837  abi.encodePacked(aKey) */
  swap2
  add
    /* \"src/libraries/FactoryStore.sol\":805:838  keccak256(abi.encodePacked(aKey)) */
  keccak256
    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */
  dup2
  extcodesize
  iszero
  tag_196
  jumpi
    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */
  0x00
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  swap2
  0x44
  dup4
  swap3
  mload(0x40)
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  swap5
  dup6
  swap4
  dup5
  swap3
  shl(0xe0, 0xf71f7a25)
    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */
  dup5
  mstore
    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */
  0x04
    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */
  dup5
  add
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  mstore
    /* \"test/__fixtures/BaseTest.sol\":1048:1057  0.0005e18 */
  0x01c6bf52634000
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  0x24
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup5
  add
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  mstore
    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */
  gas
  call
  dup1
  iszero
  tag_169
  jumpi
  tag_92
  jumpi
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
tag_93:
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  pop
  dup1
  0x40
    /* \"test/__fixtures/BaseTest.sol\":1048:1057  0.0005e18 */
  tag_94
    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */
  0x01
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup1
  0xa0
  shl
  sub
    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */
  0x13
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  sload
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  and
    /* \"test/__fixtures/BaseTest.sol\":2964:3002  type(ConstantProductPair).creationCode */
  dataSize(sub_2)
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup4
  mload
    /* \"test/__fixtures/BaseTest.sol\":2964:3002  type(ConstantProductPair).creationCode */
  swap1
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  tag_95
  0x20
    /* \"test/__fixtures/BaseTest.sol\":2964:3002  type(ConstantProductPair).creationCode */
  dup3
  add
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup4
  tag_3
  jump\t// in
tag_95:
    /* \"test/__fixtures/BaseTest.sol\":2964:3002  type(ConstantProductPair).creationCode */
  dup1
  dup3
  mstore
  dataOffset(sub_2)
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x20
    /* \"test/__fixtures/BaseTest.sol\":2964:3002  type(ConstantProductPair).creationCode */
  dup4
  add
  codecopy
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup4
  mload
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  swap5
  dup6
  dup1
  swap5
  dup2
  swap4
  shl(0xe1, 0x7fb777a9)
    /* \"test/__fixtures/BaseTest.sol\":2946:3003  _factory.addCurve(type(ConstantProductPair).creationCode) */
  dup4
  mstore
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x20
    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */
  0x04
    /* \"test/__fixtures/BaseTest.sol\":2946:3003  _factory.addCurve(type(ConstantProductPair).creationCode) */
  dup5
  add
    /* \"test/__fixtures/BaseTest.sol\":1048:1057  0.0005e18 */
  mstore
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  0x24
    /* \"test/__fixtures/BaseTest.sol\":1048:1057  0.0005e18 */
  dup4
  add
  swap1
  tag_7
  jump\t// in
tag_94:
    /* \"test/__fixtures/BaseTest.sol\":2946:3003  _factory.addCurve(type(ConstantProductPair).creationCode) */
  sub
  swap3
  gas
  call
  dup1
  iszero
  tag_185
  jumpi
  tag_98
  jumpi
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
tag_99:
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  pop
    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */
  0x01
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup1
  0xa0
  shl
  sub
    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */
  0x13
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  sload
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  and
  0x20
  mload(0x40)
  tag_100
  dup2
  tag_2
  jump\t// in
tag_100:
    /* \"test/__fixtures/BaseTest.sol\":795:799  3000 */
  0x0b
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup2
  mstore
    /* \"test/__fixtures/BaseTest.sol\":795:799  3000 */
  add
  shl(0xa8, 0x43503a3a73776170466565)
  dup2
  mstore
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mload(0x40)
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  tag_101
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x20
    /* \"src/libraries/FactoryStore.sol\":815:837  abi.encodePacked(aKey) */
  dup3
  add
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  dup1
  swap4
  tag_5
  jump\t// in
tag_101:
    /* \"test/__fixtures/BaseTest.sol\":795:799  3000 */
  0x0b
    /* \"src/libraries/FactoryStore.sol\":815:837  abi.encodePacked(aKey) */
  dup2
  mstore
  tag_102
  dup2
  tag_2
  jump\t// in
tag_102:
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  mload
    /* \"src/libraries/FactoryStore.sol\":805:838  keccak256(abi.encodePacked(aKey)) */
  swap1
  keccak256
    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */
  dup2
  extcodesize
  iszero
  tag_196
  jumpi
    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */
  0x00
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  swap2
  0x44
  dup4
  swap3
  mload(0x40)
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  swap5
  dup6
  swap4
  dup5
  swap3
  shl(0xe0, 0xf71f7a25)
    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */
  dup5
  mstore
    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */
  0x04
    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */
  dup5
  add
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  mstore
    /* \"test/__fixtures/BaseTest.sol\":795:799  3000 */
  0x0bb8
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  0x24
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup5
  add
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  mstore
    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */
  gas
  call
  dup1
  iszero
  tag_169
  jumpi
  tag_107
  jumpi
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
tag_108:
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  pop
  dup1
  0x40
    /* \"test/__fixtures/BaseTest.sol\":1048:1057  0.0005e18 */
  tag_109
    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */
  0x01
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup1
  0xa0
  shl
  sub
    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */
  0x13
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  sload
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  and
    /* \"test/__fixtures/BaseTest.sol\":3120:3149  type(StablePair).creationCode */
  dataSize(sub_4)
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup4
  mload
    /* \"test/__fixtures/BaseTest.sol\":3120:3149  type(StablePair).creationCode */
  swap1
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  tag_110
  0x20
    /* \"test/__fixtures/BaseTest.sol\":3120:3149  type(StablePair).creationCode */
  dup3
  add
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup4
  tag_3
  jump\t// in
tag_110:
    /* \"test/__fixtures/BaseTest.sol\":3120:3149  type(StablePair).creationCode */
  dup1
  dup3
  mstore
  dataOffset(sub_4)
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x20
    /* \"test/__fixtures/BaseTest.sol\":3120:3149  type(StablePair).creationCode */
  dup4
  add
  codecopy
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup4
  mload
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  swap5
  dup6
  dup1
  swap5
  dup2
  swap4
  shl(0xe1, 0x7fb777a9)
    /* \"test/__fixtures/BaseTest.sol\":3102:3150  _factory.addCurve(type(StablePair).creationCode) */
  dup4
  mstore
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x20
    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */
  0x04
    /* \"test/__fixtures/BaseTest.sol\":3102:3150  _factory.addCurve(type(StablePair).creationCode) */
  dup5
  add
    /* \"test/__fixtures/BaseTest.sol\":1048:1057  0.0005e18 */
  mstore
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  0x24
    /* \"test/__fixtures/BaseTest.sol\":1048:1057  0.0005e18 */
  dup4
  add
  swap1
  tag_7
  jump\t// in
tag_109:
    /* \"test/__fixtures/BaseTest.sol\":3102:3150  _factory.addCurve(type(StablePair).creationCode) */
  sub
  swap3
  gas
  call
  dup1
  iszero
  tag_185
  jumpi
  tag_113
  jumpi
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
tag_114:
  pop
    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */
  0x13
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  sload
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mload(0x40)
  dup3
  swap2
  0x20
  swap2
    /* \"test/__fixtures/BaseTest.sol\":1048:1057  0.0005e18 */
  tag_115
  swap2
  sub(shl(0xa0, 0x01), 0x01)
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  and
  swap1
    /* \"test/__fixtures/BaseTest.sol\":3181:3214  type(StableMintBurn).creationCode */
  dataSize(sub_3)
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  tag_116
    /* \"test/__fixtures/BaseTest.sol\":3181:3214  type(StableMintBurn).creationCode */
  dup2
  dup7
  add
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup4
  tag_3
  jump\t// in
tag_116:
    /* \"test/__fixtures/BaseTest.sol\":3181:3214  type(StableMintBurn).creationCode */
  dup1
  dup3
  mstore
  dataOffset(sub_3)
  dup6
  dup4
  add
  codecopy
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mload(0x40)
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  swap5
  dup6
  dup1
  swap5
  dup2
  swap4
  shl(0xe1, 0x6812eef1)
    /* \"test/__fixtures/BaseTest.sol\":3160:3215  _factory.addBytecode(type(StableMintBurn).creationCode) */
  dup4
  mstore
  dup8
    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */
  0x04
    /* \"test/__fixtures/BaseTest.sol\":3160:3215  _factory.addBytecode(type(StableMintBurn).creationCode) */
  dup5
  add
    /* \"test/__fixtures/BaseTest.sol\":1048:1057  0.0005e18 */
  mstore
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  0x24
    /* \"test/__fixtures/BaseTest.sol\":1048:1057  0.0005e18 */
  dup4
  add
  swap1
  tag_7
  jump\t// in
tag_115:
    /* \"test/__fixtures/BaseTest.sol\":3160:3215  _factory.addBytecode(type(StableMintBurn).creationCode) */
  sub
  swap3
  gas
  call
  dup1
  iszero
  tag_185
  jumpi
  tag_119
  jumpi
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
tag_120:
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  pop
    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */
  0x01
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup1
  0xa0
  shl
  sub
    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */
  0x13
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  sload
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  and
  0x20
  mload(0x40)
  tag_121
  dup2
  tag_2
  jump\t// in
tag_121:
    /* \"test/__fixtures/BaseTest.sol\":795:799  3000 */
  0x0b
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup2
  mstore
    /* \"test/__fixtures/BaseTest.sol\":859:862  100 */
  add
  shl(0xa8, 0x53503a3a73776170466565)
  dup2
  mstore
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mload(0x40)
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  tag_122
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x20
    /* \"src/libraries/FactoryStore.sol\":815:837  abi.encodePacked(aKey) */
  dup3
  add
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  dup1
  swap4
  tag_5
  jump\t// in
tag_122:
    /* \"test/__fixtures/BaseTest.sol\":795:799  3000 */
  0x0b
    /* \"src/libraries/FactoryStore.sol\":815:837  abi.encodePacked(aKey) */
  dup2
  mstore
  tag_123
  dup2
  tag_2
  jump\t// in
tag_123:
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  mload
    /* \"src/libraries/FactoryStore.sol\":805:838  keccak256(abi.encodePacked(aKey)) */
  swap1
  keccak256
    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */
  dup2
  extcodesize
  iszero
  tag_196
  jumpi
    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */
  0x00
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  swap2
  0x44
  dup4
  swap3
  mload(0x40)
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  swap5
  dup6
  swap4
  dup5
  swap3
  shl(0xe0, 0xf71f7a25)
    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */
  dup5
  mstore
    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */
  0x04
    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */
  dup5
  add
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  mstore
  0x64
  0x24
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup5
  add
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  mstore
    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */
  gas
  call
  dup1
  iszero
  tag_169
  jumpi
  tag_128
  jumpi
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
tag_129:
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  pop
    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */
  0x01
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup1
  0xa0
  shl
  sub
    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */
  0x13
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  sload
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  and
  mload(0x40)
  tag_130
  dup2
  tag_2
  jump\t// in
tag_130:
    /* \"test/__fixtures/BaseTest.sol\":1682:1718  new MintableERC20(\"TokenD\", \"TD\", 6) */
  0x1c
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup2
  mstore
    /* \"test/__fixtures/BaseTest.sol\":988:992  1000 */
  0x53503a3a616d706c696669636174696f6e436f656666696369656e7400000000
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x20
    /* \"test/__fixtures/BaseTest.sol\":988:992  1000 */
  dup3
  add
  mstore
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mload(0x40)
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  swap1
    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */
  0x00
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
tag_131:
    /* \"test/__fixtures/BaseTest.sol\":1682:1718  new MintableERC20(\"TokenD\", \"TD\", 6) */
  0x1c
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  dup2
  lt
  tag_132
  jumpi
  pop
  pop
    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */
  0x00
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  0x3c
  dup3
  add
  mstore
    /* \"test/__fixtures/BaseTest.sol\":1682:1718  new MintableERC20(\"TokenD\", \"TD\", 6) */
  0x1c
    /* \"src/libraries/FactoryStore.sol\":815:837  abi.encodePacked(aKey) */
  dup2
  mstore
  tag_134
  dup2
  tag_2
  jump\t// in
tag_134:
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x20
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  dup2
  mload
    /* \"src/libraries/FactoryStore.sol\":815:837  abi.encodePacked(aKey) */
  swap2
  add
    /* \"src/libraries/FactoryStore.sol\":805:838  keccak256(abi.encodePacked(aKey)) */
  keccak256
    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */
  dup2
  extcodesize
  iszero
  tag_196
  jumpi
    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */
  0x00
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  swap2
  0x44
  dup4
  swap3
  mload(0x40)
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  swap5
  dup6
  swap4
  dup5
  swap3
  shl(0xe0, 0xf71f7a25)
    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */
  dup5
  mstore
    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */
  0x04
    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */
  dup5
  add
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  mstore
    /* \"test/__fixtures/BaseTest.sol\":988:992  1000 */
  0x03e8
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  0x24
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup5
  add
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  mstore
    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */
  gas
  call
  dup1
  iszero
  tag_169
  jumpi
  tag_139
  jumpi
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
tag_140:
  pop
    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */
  0x13
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  sload
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x20
    /* \"test/__fixtures/BaseTest.sol\":988:992  1000 */
  sload
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mload(0x40)
    /* \"test/__fixtures/BaseTest.sol\":3390:3452  _factory.write(\"Shared::oracleCaller\", address(_oracleCaller)) */
  tag_141
  swap3
  sub(shl(0xa0, 0x01), 0x01)
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  swap3
  dup4
  and
  swap3
  and
  tag_142
  dup3
  tag_2
  jump\t// in
tag_142:
    /* \"test/__fixtures/BaseTest.sol\":1169:1194  _makeAddress(\"recoverer\") */
  0x14
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup3
  mstore
    /* \"test/__fixtures/BaseTest.sol\":988:992  1000 */
  0x5368617265643a3a6f7261636c6543616c6c6572000000000000000000000000
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x20
    /* \"test/__fixtures/BaseTest.sol\":988:992  1000 */
  dup4
  add
  mstore
    /* \"test/__fixtures/BaseTest.sol\":3390:3452  _factory.write(\"Shared::oracleCaller\", address(_oracleCaller)) */
  tag_9
  jump\t// in
tag_141:
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x20
    /* \"test/__fixtures/BaseTest.sol\":988:992  1000 */
  sload
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup2
  swap1
  sub(shl(0xa0, 0x01), 0x01)
  and
    /* \"test/__fixtures/BaseTest.sol\":3462:3513  _oracleCaller.whitelistAddress(address(this), true) */
  dup1
  extcodesize
  iszero
  tag_143
  jumpi
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup2
  dup1
  swap2
  0x44
  mload(0x40)
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  dup1
  swap5
  dup2
  swap4
  shl(0xe2, 0x2e6916ab)
    /* \"test/__fixtures/BaseTest.sol\":3462:3513  _oracleCaller.whitelistAddress(address(this), true) */
  dup4
  mstore
    /* \"test/__fixtures/BaseTest.sol\":1126:1130  this */
  address
    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */
  0x04
    /* \"test/__fixtures/BaseTest.sol\":3462:3513  _oracleCaller.whitelistAddress(address(this), true) */
  dup5
  add
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mstore
    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */
  0x01
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  0x24
    /* \"test/__fixtures/BaseTest.sol\":988:992  1000 */
  dup5
  add
  mstore
    /* \"test/__fixtures/BaseTest.sol\":3462:3513  _oracleCaller.whitelistAddress(address(this), true) */
  gas
  call
  dup1
  iszero
  tag_185
  jumpi
  tag_147
  jumpi
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
tag_148:
  pop
  pop
    /* \"test/__fixtures/BaseTest.sol\":1454:1491  new MintableERC20(\"TokenA\", \"TA\", 18) */
  0x19
    /* \"test/__fixtures/BaseTest.sol\":988:992  1000 */
  sload
    /* \"test/__fixtures/BaseTest.sol\":1530:1567  new MintableERC20(\"TokenB\", \"TB\", 18) */
  0x1a
    /* \"test/__fixtures/BaseTest.sol\":988:992  1000 */
  sload
    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */
  0x13
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  sload
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mload(0x40)
  shl(0xe2, 0x1ad80347)
    /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */
  dup2
  mstore
  sub(shl(0xa0, 0x01), 0x01)
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  swap4
  dup5
  and
    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */
  0x04
    /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */
  dup3
  add
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mstore
  swap2
  dup4
  and
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  0x24
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup4
  add
  mstore
    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */
  0x00
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x44
  dup4
  add
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  dup2
  swap1
  mstore
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  swap2
  swap4
  swap3
  0x20
  swap3
  dup6
  swap3
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  0x64
  swap3
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup5
  swap3
    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */
  swap2
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  and
    /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */
  gas
  call
  swap2
  dup3
  iszero
  tag_169
  jumpi
    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */
  0x00
    /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */
  swap3
  tag_151
  jumpi
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
tag_152:
  pop
    /* \"test/__fixtures/BaseTest.sol\":3548:3642  _constantProductPair = ConstantProductPair(_createPair(address(_tokenA), address(_tokenB), 0)) */
  0x1e
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup1
  sload
  sub(shl(0xa0, 0x01), 0x01)
  dup5
  dup2
  and
  not(sub(shl(0xa0, 0x01), 0x01))
  dup4
  and
  or
  swap1
  swap3
  sstore
    /* \"test/__fixtures/BaseTest.sol\":1454:1491  new MintableERC20(\"TokenA\", \"TA\", 18) */
  0x19
    /* \"test/__fixtures/BaseTest.sol\":988:992  1000 */
  sload
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  swap3
  swap4
  dup5
  swap4
  swap2
  swap3
  swap2
  swap1
  swap2
  and
  swap1
    /* \"test/__fixtures/BaseTest.sol\":3652:3716  _tokenA.mint(address(_constantProductPair), INITIAL_MINT_AMOUNT) */
  dup2
  extcodesize
  iszero
  tag_173
  jumpi
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mload(0x40)
  shl(0xe0, 0x40c10f19)
    /* \"test/__fixtures/BaseTest.sol\":3652:3716  _tokenA.mint(address(_constantProductPair), INITIAL_MINT_AMOUNT) */
  dup2
  mstore
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  swap3
  dup5
  and
  sub(shl(0xa0, 0x01), 0x01)
  swap1
  swap2
  and
  or
    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */
  0x04
    /* \"test/__fixtures/BaseTest.sol\":3652:3716  _tokenA.mint(address(_constantProductPair), INITIAL_MINT_AMOUNT) */
  dup4
  add
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mstore
    /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */
  0x056bc75e2d63100000
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  0x24
    /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */
  dup4
  add
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  mstore
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup3
  swap1
  dup3
  swap1
  0x44
  swap1
  dup3
  swap1
  dup5
  swap1
    /* \"test/__fixtures/BaseTest.sol\":3652:3716  _tokenA.mint(address(_constantProductPair), INITIAL_MINT_AMOUNT) */
  gas
  call
  dup1
  iszero
  tag_185
  jumpi
  tag_157
  jumpi
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
tag_158:
  pop
    /* \"test/__fixtures/BaseTest.sol\":1530:1567  new MintableERC20(\"TokenB\", \"TB\", 18) */
  0x1a
    /* \"test/__fixtures/BaseTest.sol\":988:992  1000 */
  sload
    /* \"test/__fixtures/BaseTest.sol\":3548:3642  _constantProductPair = ConstantProductPair(_createPair(address(_tokenA), address(_tokenB), 0)) */
  0x1e
    /* \"test/__fixtures/BaseTest.sol\":988:992  1000 */
  sload
  sub(shl(0xa0, 0x01), 0x01)
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  swap2
  dup3
  and
  swap2
  and
    /* \"test/__fixtures/BaseTest.sol\":3726:3790  _tokenB.mint(address(_constantProductPair), INITIAL_MINT_AMOUNT) */
  dup2
  extcodesize
  iszero
  tag_179
  jumpi
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup3
  swap2
  0x44
  dup4
  swap3
  mload(0x40)
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  swap5
  dup6
  swap4
  dup5
  swap3
  shl(0xe0, 0x40c10f19)
    /* \"test/__fixtures/BaseTest.sol\":3726:3790  _tokenB.mint(address(_constantProductPair), INITIAL_MINT_AMOUNT) */
  dup5
  mstore
    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */
  0x04
    /* \"test/__fixtures/BaseTest.sol\":3726:3790  _tokenB.mint(address(_constantProductPair), INITIAL_MINT_AMOUNT) */
  dup5
  add
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mstore
    /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */
  0x056bc75e2d63100000
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  0x24
    /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */
  dup5
  add
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  mstore
    /* \"test/__fixtures/BaseTest.sol\":3726:3790  _tokenB.mint(address(_constantProductPair), INITIAL_MINT_AMOUNT) */
  gas
  call
  dup1
  iszero
  tag_185
  jumpi
  tag_163
  jumpi
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
tag_164:
  pop
    /* \"test/__fixtures/BaseTest.sol\":3548:3642  _constantProductPair = ConstantProductPair(_createPair(address(_tokenA), address(_tokenB), 0)) */
  0x1e
    /* \"test/__fixtures/BaseTest.sol\":988:992  1000 */
  sload
    /* \"test/__fixtures/BaseTest.sol\":1295:1316  _makeAddress(\"alice\") */
  0x16
    /* \"test/__fixtures/BaseTest.sol\":924:931  250_000 */
  sload
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mload(0x40)
  shl(0xe1, 0x35313c21)
    /* \"test/__fixtures/BaseTest.sol\":3800:3833  _constantProductPair.mint(_alice) */
  dup2
  mstore
  sub(shl(0xa0, 0x01), 0x01)
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  swap2
  dup3
  and
    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */
  0x04
    /* \"test/__fixtures/BaseTest.sol\":3800:3833  _constantProductPair.mint(_alice) */
  dup3
  add
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mstore
  swap3
  0x20
  swap3
  dup5
  swap3
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  0x24
  swap3
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup5
  swap3
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  swap1
  swap2
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  and
    /* \"test/__fixtures/BaseTest.sol\":3800:3833  _constantProductPair.mint(_alice) */
  gas
  call
  dup1
  iszero
  tag_185
  jumpi
  tag_167
  jumpi
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
tag_168:
  pop
    /* \"test/__fixtures/BaseTest.sol\":1454:1491  new MintableERC20(\"TokenA\", \"TA\", 18) */
  0x19
    /* \"test/__fixtures/BaseTest.sol\":988:992  1000 */
  sload
    /* \"test/__fixtures/BaseTest.sol\":1530:1567  new MintableERC20(\"TokenB\", \"TB\", 18) */
  0x1a
    /* \"test/__fixtures/BaseTest.sol\":988:992  1000 */
  sload
    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */
  0x13
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  sload
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mload(0x40)
  shl(0xe2, 0x1ad80347)
    /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */
  dup2
  mstore
  sub(shl(0xa0, 0x01), 0x01)
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  swap4
  dup5
  and
    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */
  0x04
    /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */
  dup3
  add
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mstore
  swap2
  dup4
  and
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  0x24
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup4
  add
  mstore
    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */
  0x01
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x44
  dup4
  add
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  mstore
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  swap1
  swap3
  swap2
  0x20
  swap2
  dup5
  swap2
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  0x64
  swap2
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup4
  swap2
    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */
  0x00
  swap2
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  and
    /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */
  gas
  call
  swap2
  dup3
  iszero
  tag_169
  jumpi
    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */
  0x00
    /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */
  swap3
  tag_171
  jumpi
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
tag_172:
  pop
    /* \"test/__fixtures/BaseTest.sol\":3844:3920  _stablePair = StablePair(_createPair(address(_tokenA), address(_tokenB), 1)) */
  0x1f
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup1
  sload
  sub(shl(0xa0, 0x01), 0x01)
  swap4
  dup5
  and
  not(sub(shl(0xa0, 0x01), 0x01))
  dup3
  and
  dup2
  or
  swap1
  swap3
  sstore
    /* \"test/__fixtures/BaseTest.sol\":1454:1491  new MintableERC20(\"TokenA\", \"TA\", 18) */
  0x19
    /* \"test/__fixtures/BaseTest.sol\":988:992  1000 */
  sload
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  swap3
  swap4
  dup5
  swap4
  and
  swap1
    /* \"test/__fixtures/BaseTest.sol\":3930:3985  _tokenA.mint(address(_stablePair), INITIAL_MINT_AMOUNT) */
  dup2
  extcodesize
  iszero
  tag_173
  jumpi
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x44
  dup5
  swap3
  swap2
  dup4
  dup1
  swap4
  mload(0x40)
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  swap7
  dup8
  swap6
  dup7
  swap5
  shl(0xe0, 0x40c10f19)
    /* \"test/__fixtures/BaseTest.sol\":3930:3985  _tokenA.mint(address(_stablePair), INITIAL_MINT_AMOUNT) */
  dup7
  mstore
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  and
  or
    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */
  0x04
    /* \"test/__fixtures/BaseTest.sol\":3930:3985  _tokenA.mint(address(_stablePair), INITIAL_MINT_AMOUNT) */
  dup5
  add
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mstore
    /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */
  0x056bc75e2d63100000
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  0x24
    /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */
  dup5
  add
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  mstore
    /* \"test/__fixtures/BaseTest.sol\":3930:3985  _tokenA.mint(address(_stablePair), INITIAL_MINT_AMOUNT) */
  gas
  call
  dup1
  iszero
  tag_185
  jumpi
  tag_177
  jumpi
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
tag_178:
  pop
    /* \"test/__fixtures/BaseTest.sol\":1530:1567  new MintableERC20(\"TokenB\", \"TB\", 18) */
  0x1a
    /* \"test/__fixtures/BaseTest.sol\":988:992  1000 */
  sload
    /* \"test/__fixtures/BaseTest.sol\":3844:3920  _stablePair = StablePair(_createPair(address(_tokenA), address(_tokenB), 1)) */
  0x1f
    /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */
  sload
  sub(shl(0xa0, 0x01), 0x01)
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  swap2
  dup3
  and
  swap2
  and
    /* \"test/__fixtures/BaseTest.sol\":3995:4050  _tokenB.mint(address(_stablePair), INITIAL_MINT_AMOUNT) */
  dup2
  extcodesize
  iszero
  tag_179
  jumpi
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup3
  swap2
  0x44
  dup4
  swap3
  mload(0x40)
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  swap5
  dup6
  swap4
  dup5
  swap3
  shl(0xe0, 0x40c10f19)
    /* \"test/__fixtures/BaseTest.sol\":3995:4050  _tokenB.mint(address(_stablePair), INITIAL_MINT_AMOUNT) */
  dup5
  mstore
    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */
  0x04
    /* \"test/__fixtures/BaseTest.sol\":3995:4050  _tokenB.mint(address(_stablePair), INITIAL_MINT_AMOUNT) */
  dup5
  add
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mstore
    /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */
  0x056bc75e2d63100000
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  0x24
    /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */
  dup5
  add
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  mstore
    /* \"test/__fixtures/BaseTest.sol\":3995:4050  _tokenB.mint(address(_stablePair), INITIAL_MINT_AMOUNT) */
  gas
  call
  dup1
  iszero
  tag_185
  jumpi
  tag_183
  jumpi
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
tag_184:
  pop
    /* \"test/__fixtures/BaseTest.sol\":3844:3920  _stablePair = StablePair(_createPair(address(_tokenA), address(_tokenB), 1)) */
  0x1f
    /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */
  sload
    /* \"test/__fixtures/BaseTest.sol\":1295:1316  _makeAddress(\"alice\") */
  0x16
    /* \"test/__fixtures/BaseTest.sol\":924:931  250_000 */
  sload
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mload(0x40)
  shl(0xe1, 0x35313c21)
    /* \"test/__fixtures/BaseTest.sol\":4060:4084  _stablePair.mint(_alice) */
  dup2
  mstore
  sub(shl(0xa0, 0x01), 0x01)
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  swap2
  dup3
  and
    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */
  0x04
    /* \"test/__fixtures/BaseTest.sol\":4060:4084  _stablePair.mint(_alice) */
  dup3
  add
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mstore
  swap3
  0x20
  swap3
  dup5
  swap3
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  0x24
  swap3
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup5
  swap3
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  swap1
  swap2
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  and
    /* \"test/__fixtures/BaseTest.sol\":4060:4084  _stablePair.mint(_alice) */
  gas
  call
  dup1
  iszero
  tag_185
  jumpi
  tag_187
  jumpi
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
tag_188:
  pop
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mload(0x40)
    /* \"test/unit/ConstantProductPair.t.sol\":933:951  new AssetManager() */
  dataSize(sub_7)
  dup1
  dup3
  add
  swap1
  sub(shl(0x40, 0x01), 0x01)
  dup3
  gt
  dup4
  dup4
  lt
  or
  tag_189
  jumpi
  swap1
  dup3
  swap2
  dataOffset(sub_7)
  dup4
  codecopy
  sub
  swap1
  dup3
  create
  swap1
  dup2
  iszero
  tag_191
  jumpi
  pop
  0x21
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup1
  sload
  not(sub(shl(0xa0, 0x01), 0x01))
  and
  sub(shl(0xa0, 0x01), 0x01)
  swap3
  swap1
  swap3
  and
  swap2
  swap1
  swap2
  or
  swap1
  sstore
  mload(0x40)
  dataSize(sub_0)
  swap1
  dup2
  dataOffset(sub_0)
  dup3
  codecopy
  return
    /* \"test/unit/ConstantProductPair.t.sol\":933:951  new AssetManager() */
tag_191:
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mload(0x40)
  swap1
  returndatasize
  swap1
  dup3
  returndatacopy
  returndatasize
  swap1
  revert
    /* \"test/unit/ConstantProductPair.t.sol\":933:951  new AssetManager() */
tag_189:
  shl(0xe0, 0x4e487b71)
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup5
  mstore
  0x41
    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */
  0x04
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mstore
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  0x24
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup5
  revert
    /* \"test/__fixtures/BaseTest.sol\":4060:4084  _stablePair.mint(_alice) */
tag_187:
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x20
    /* \"test/__fixtures/BaseTest.sol\":4060:4084  _stablePair.mint(_alice) */
  swap1
  dup2
  returndatasize
  dup4
  gt
  tag_193
  jumpi
tag_194:
  tag_195
  dup2
  dup4
  tag_3
  jump\t// in
tag_195:
  dup2
  add
    /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */
  sub
  slt
  tag_196
  jumpi
    /* \"test/__fixtures/BaseTest.sol\":4060:4084  _stablePair.mint(_alice) */
  codesize
  jump(tag_188)
    /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */
tag_196:
    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */
  0x00
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup1
  revert
    /* \"test/__fixtures/BaseTest.sol\":4060:4084  _stablePair.mint(_alice) */
tag_193:
  pop
  returndatasize
  jump(tag_194)
tag_185:
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mload(0x40)
  returndatasize
  dup5
  dup3
  returndatacopy
  returndatasize
  swap1
  revert
    /* \"test/__fixtures/BaseTest.sol\":3995:4050  _tokenB.mint(address(_stablePair), INITIAL_MINT_AMOUNT) */
tag_183:
  tag_198
  swap1
  tag_1
  jump\t// in
tag_198:
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  tag_199
  jumpi
    /* \"test/__fixtures/BaseTest.sol\":3995:4050  _tokenB.mint(address(_stablePair), INITIAL_MINT_AMOUNT) */
  dup1
  codesize
  jump(tag_184)
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
tag_199:
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup1
  revert
    /* \"test/__fixtures/BaseTest.sol\":3995:4050  _tokenB.mint(address(_stablePair), INITIAL_MINT_AMOUNT) */
tag_179:
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  pop
  pop
  revert
    /* \"test/__fixtures/BaseTest.sol\":3930:3985  _tokenA.mint(address(_stablePair), INITIAL_MINT_AMOUNT) */
tag_177:
  tag_201
  swap1
  tag_1
  jump\t// in
tag_201:
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  tag_199
  jumpi
    /* \"test/__fixtures/BaseTest.sol\":3930:3985  _tokenA.mint(address(_stablePair), INITIAL_MINT_AMOUNT) */
  dup1
  codesize
  jump(tag_178)
tag_173:
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  pop
  pop
  pop
  revert
    /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */
tag_171:
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x20
    /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */
  dup2
  returndatasize
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x20
    /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */
  gt
  tag_204
  jumpi
tag_205:
  dup2
  tag_206
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x20
    /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */
  swap4
  dup4
  tag_3
  jump\t// in
tag_206:
  dup2
  add
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  sub
  slt
  tag_209
  jumpi
  mload
  sub(shl(0xa0, 0x01), 0x01)
  dup2
  and
  dup2
  sub
  tag_209
  jumpi
    /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */
  swap2
  pop
  dup1
  jump(tag_172)
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
tag_209:
  dup3
  dup1
  revert
    /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */
tag_204:
  returndatasize
  swap2
  pop
  jump(tag_205)
tag_169:
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mload(0x40)
  returndatasize
    /* \"lib/solmate/lib/ds-test/src/test.sol\":1594:1598  true */
  0x00
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup3
  returndatacopy
  returndatasize
  swap1
  revert
    /* \"test/__fixtures/BaseTest.sol\":3800:3833  _constantProductPair.mint(_alice) */
tag_167:
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x20
    /* \"test/__fixtures/BaseTest.sol\":3800:3833  _constantProductPair.mint(_alice) */
  swap1
  dup2
  returndatasize
  dup4
  gt
  tag_211
  jumpi
tag_212:
  tag_213
  dup2
  dup4
  tag_3
  jump\t// in
tag_213:
  dup2
  add
    /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */
  sub
  slt
  tag_196
  jumpi
    /* \"test/__fixtures/BaseTest.sol\":3800:3833  _constantProductPair.mint(_alice) */
  codesize
  jump(tag_168)
tag_211:
  pop
  returndatasize
  jump(tag_212)
    /* \"test/__fixtures/BaseTest.sol\":3726:3790  _tokenB.mint(address(_constantProductPair), INITIAL_MINT_AMOUNT) */
tag_163:
  tag_216
  swap1
  tag_1
  jump\t// in
tag_216:
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  tag_199
  jumpi
    /* \"test/__fixtures/BaseTest.sol\":3726:3790  _tokenB.mint(address(_constantProductPair), INITIAL_MINT_AMOUNT) */
  dup1
  codesize
  jump(tag_164)
    /* \"test/__fixtures/BaseTest.sol\":3652:3716  _tokenA.mint(address(_constantProductPair), INITIAL_MINT_AMOUNT) */
tag_157:
  tag_219
  swap1
  tag_1
  jump\t// in
tag_219:
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  tag_199
  jumpi
    /* \"test/__fixtures/BaseTest.sol\":3652:3716  _tokenA.mint(address(_constantProductPair), INITIAL_MINT_AMOUNT) */
  dup1
  codesize
  jump(tag_158)
    /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */
tag_151:
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x20
    /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */
  dup2
  returndatasize
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x20
    /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */
  gt
  tag_222
  jumpi
tag_223:
  dup2
  tag_224
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x20
    /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */
  swap4
  dup4
  tag_3
  jump\t// in
tag_224:
  dup2
  add
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  sub
  slt
  tag_209
  jumpi
  mload
  sub(shl(0xa0, 0x01), 0x01)
  dup2
  and
  dup2
  sub
  tag_209
  jumpi
    /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */
  swap2
  pop
  dup1
  jump(tag_152)
tag_222:
  returndatasize
  swap2
  pop
  jump(tag_223)
    /* \"test/__fixtures/BaseTest.sol\":3462:3513  _oracleCaller.whitelistAddress(address(this), true) */
tag_147:
  tag_229
  swap1
  tag_1
  jump\t// in
tag_229:
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  tag_199
  jumpi
    /* \"test/__fixtures/BaseTest.sol\":3462:3513  _oracleCaller.whitelistAddress(address(this), true) */
  dup1
  codesize
  jump(tag_148)
tag_143:
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  pop
  revert
    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */
tag_139:
  tag_232
  swap1
  tag_1
  jump\t// in
tag_232:
  codesize
  jump(tag_140)
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
tag_132:
  dup1
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x20
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  dup1
  swap3
  dup5
  add
  add
  mload
  dup3
  dup3
  dup7
  add
  add
  mstore
  add
  jump(tag_131)
    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */
tag_128:
  tag_233
  swap1
  tag_1
  jump\t// in
tag_233:
  codesize
  jump(tag_129)
    /* \"test/__fixtures/BaseTest.sol\":3160:3215  _factory.addBytecode(type(StableMintBurn).creationCode) */
tag_119:
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x20
    /* \"test/__fixtures/BaseTest.sol\":3160:3215  _factory.addBytecode(type(StableMintBurn).creationCode) */
  swap1
  dup2
  returndatasize
  dup4
  gt
  tag_234
  jumpi
tag_235:
  tag_236
  dup2
  dup4
  tag_3
  jump\t// in
tag_236:
  dup2
  add
    /* \"test/__fixtures/BaseTest.sol\":795:799  3000 */
  sub
  slt
  tag_199
  jumpi
    /* \"test/__fixtures/BaseTest.sol\":3160:3215  _factory.addBytecode(type(StableMintBurn).creationCode) */
  codesize
  jump(tag_120)
tag_234:
  pop
  returndatasize
  jump(tag_235)
    /* \"test/__fixtures/BaseTest.sol\":3102:3150  _factory.addCurve(type(StablePair).creationCode) */
tag_113:
  tag_239
  swap1
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x40
    /* \"test/__fixtures/BaseTest.sol\":3102:3150  _factory.addCurve(type(StablePair).creationCode) */
  returndatasize
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x40
    /* \"test/__fixtures/BaseTest.sol\":3102:3150  _factory.addCurve(type(StablePair).creationCode) */
  gt
  tag_240
  jumpi
tag_241:
  tag_242
  dup2
  dup4
  tag_3
  jump\t// in
tag_242:
  dup2
  add
  swap1
  tag_8
  jump\t// in
tag_239:
  pop
  jump(tag_114)
tag_240:
  pop
  returndatasize
  jump(tag_241)
    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */
tag_107:
  tag_243
  swap1
  tag_1
  jump\t// in
tag_243:
  codesize
  jump(tag_108)
    /* \"test/__fixtures/BaseTest.sol\":2946:3003  _factory.addCurve(type(ConstantProductPair).creationCode) */
tag_98:
  tag_244
  swap1
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x40
    /* \"test/__fixtures/BaseTest.sol\":2946:3003  _factory.addCurve(type(ConstantProductPair).creationCode) */
  returndatasize
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x40
    /* \"test/__fixtures/BaseTest.sol\":2946:3003  _factory.addCurve(type(ConstantProductPair).creationCode) */
  gt
  tag_240
  jumpi
  tag_242
  dup2
  dup4
  tag_3
  jump\t// in
tag_244:
  pop
  jump(tag_99)
    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */
tag_92:
  tag_248
  swap1
  tag_1
  jump\t// in
tag_248:
  codesize
  jump(tag_93)
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
tag_85:
  dup1
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x20
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  dup1
  swap3
  dup5
  add
  add
  mload
  dup3
  dup3
  dup7
  add
  add
  mstore
  add
  jump(tag_84)
    /* \"src/libraries/FactoryStore.sol\":792:859  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */
tag_77:
  tag_249
  swap1
  tag_1
  jump\t// in
tag_249:
  codesize
  jump(tag_78)
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
tag_70:
  dup1
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x20
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  dup1
  swap3
  dup5
  add
  add
  mload
  dup3
  dup3
  dup7
  add
  add
  mstore
  add
  jump(tag_69)
    /* \"test/__fixtures/BaseTest.sol\":2405:2582  vm.writeFile(... */
tag_65:
  tag_250
  swap1
  tag_1
  jump\t// in
tag_250:
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  tag_199
  jumpi
    /* \"test/__fixtures/BaseTest.sol\":2405:2582  vm.writeFile(... */
  dup1
  codesize
  jump(tag_66)
    /* \"test/__fixtures/BaseTest.sol\":1981:2593  try vm.envString(\"FOUNDRY_PROFILE\") returns (string memory lProfile) {... */
tag_55:
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mload(0x40)
    /* \"test/__fixtures/BaseTest.sol\":2078:2104  abi.encodePacked(lProfile) */
  tag_253
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x20
    /* \"test/__fixtures/BaseTest.sol\":2078:2104  abi.encodePacked(lProfile) */
  dup3
  dup2
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  tag_254
    /* \"test/__fixtures/BaseTest.sol\":2078:2104  abi.encodePacked(lProfile) */
  dup2
  dup4
  add
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  swap7
  dup8
  dup2
  mload
  swap4
  dup5
  swap3
  add
  tag_6
  jump\t// in
tag_254:
  dup2
  add
    /* \"test/__fixtures/BaseTest.sol\":2078:2104  abi.encodePacked(lProfile) */
  sub
  dup1
  dup5
  mstore
  add
  dup3
  tag_3
  jump\t// in
tag_253:
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  mload
    /* \"test/__fixtures/BaseTest.sol\":2068:2105  keccak256(abi.encodePacked(lProfile)) */
  swap1
  keccak256
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mload(0x40)
  0x20
    /* \"test/__fixtures/BaseTest.sol\":2119:2147  abi.encodePacked(\"coverage\") */
  dup2
  add
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  swap1
  shl(0xc0, 0x636f766572616765)
  dup3
  mstore
    /* \"test/__fixtures/BaseTest.sol\":2119:2147  abi.encodePacked(\"coverage\") */
  0x08
  dup2
  mstore
  tag_255
  dup2
  tag_2
  jump\t// in
tag_255:
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  mload
    /* \"test/__fixtures/BaseTest.sol\":2109:2148  keccak256(abi.encodePacked(\"coverage\")) */
  swap1
  keccak256
    /* \"test/__fixtures/BaseTest.sol\":2068:2148  keccak256(abi.encodePacked(lProfile)) == keccak256(abi.encodePacked(\"coverage\")) */
  sub
    /* \"test/__fixtures/BaseTest.sol\":1981:2593  try vm.envString(\"FOUNDRY_PROFILE\") returns (string memory lProfile) {... */
  tag_67
    /* \"test/__fixtures/BaseTest.sol\":2064:2374  if (keccak256(abi.encodePacked(lProfile)) == keccak256(abi.encodePacked(\"coverage\"))) {... */
  jumpi
    /* \"test/__fixtures/BaseTest.sol\":2266:2341  _bytesToHex(abi.encodePacked(keccak256(type(StableMintBurn).creationCode))) */
  tag_258
    /* \"test/__fixtures/BaseTest.sol\":2305:2338  type(StableMintBurn).creationCode */
  dataSize(sub_3)
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mload(0x40)
  tag_58
  0x20
    /* \"test/__fixtures/BaseTest.sol\":2305:2338  type(StableMintBurn).creationCode */
  dup4
  add
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup3
  tag_3
  jump\t// in
    /* \"test/__fixtures/BaseTest.sol\":2266:2341  _bytesToHex(abi.encodePacked(keccak256(type(StableMintBurn).creationCode))) */
tag_258:
    /* \"test/__fixtures/BaseTest.sol\":2168:2359  vm.writeFile(... */
  dup2
  0x00
  dup1
  mload
  0x20
  data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
  dup4
  codecopy
  dup2
  mload
  swap2
  mstore
  extcodesize
  iszero
  tag_199
  jumpi
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  tag_263
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  swap2
  mload(0x40)
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  dup1
  swap4
  dup2
  swap3
  shl(0xe0, 0x897e0a97)
    /* \"test/__fixtures/BaseTest.sol\":2168:2359  vm.writeFile(... */
  dup4
  mstore
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x40
    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */
  0x04
    /* \"test/__fixtures/BaseTest.sol\":2168:2359  vm.writeFile(... */
  dup5
  add
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  mstore
  0x28
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x44
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  dup5
  add
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mstore
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  0x736372697074732f756e6f7074696d697a65642d737461626c652d6d696e742d
  0x64
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup5
  add
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  mstore
  shl(0xc0, 0x6275726e2d6b6579)
  0x84
  dup5
  add
  mstore
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0xa0
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  0x24
  dup5
  add
  mstore
  0xa4
  dup4
  add
  swap1
  tag_7
  jump\t// in
tag_263:
    /* \"test/__fixtures/BaseTest.sol\":2168:2359  vm.writeFile(... */
  sub
  dup2
  dup4
  0x00
  dup1
  mload
  0x20
  data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
  dup4
  codecopy
  dup2
  mload
  swap2
  mstore
  gas
  call
  dup1
  iszero
  tag_185
  jumpi
  tag_266
  jumpi
    /* \"test/__fixtures/BaseTest.sol\":2064:2374  if (keccak256(abi.encodePacked(lProfile)) == keccak256(abi.encodePacked(\"coverage\"))) {... */
tag_267:
  pop
    /* \"test/__fixtures/BaseTest.sol\":1981:2593  try vm.envString(\"FOUNDRY_PROFILE\") returns (string memory lProfile) {... */
  jump(tag_67)
    /* \"test/__fixtures/BaseTest.sol\":2168:2359  vm.writeFile(... */
tag_266:
  tag_268
  swap1
  tag_1
  jump\t// in
tag_268:
  codesize
  jump(tag_267)
    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */
tag_53:
  swap1
  swap2
  pop
  returndatasize
  swap1
  dup2
  dup5
  dup3
  returndatacopy
  tag_269
  dup3
  dup3
  tag_3
  jump\t// in
tag_269:
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x20
    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */
  dup2
  dup4
  dup2
  add
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  sub
  slt
  tag_270
  jumpi
  dup1
  mload
  swap1
  sub(shl(0x40, 0x01), 0x01)
  dup3
  gt
  tag_274
  jumpi
    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */
  dup3
  dup2
  add
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  0x1f
  dup4
  dup4
  add
  add
  slt
  iszero
  tag_274
  jumpi
  dup2
  dup2
  add
  mload
  swap1
  tag_276
  dup3
  tag_4
  jump\t// in
tag_276:
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  swap4
  tag_277
  mload(0x40)
  swap6
  dup7
  tag_3
  jump\t// in
tag_277:
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  dup3
  dup6
  mstore
    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */
  dup2
  add
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x20
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  dup4
  dup6
  dup5
  add
  add
  add
  gt
  tag_278
  jumpi
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x20
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  tag_280
  swap4
  dup2
  dup7
  add
  swap3
  add
  add
  tag_6
  jump\t// in
tag_280:
    /* \"test/__fixtures/BaseTest.sol\":1985:2016  vm.envString(\"FOUNDRY_PROFILE\") */
  swap1
  codesize
  jump(tag_54)
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
tag_278:
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup6
  dup1
  revert
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
tag_274:
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup5
  dup1
  revert
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
tag_270:
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup4
  dup1
  revert
    /* \"test/__fixtures/BaseTest.sol\":1932:1950  new OracleCaller() */
tag_51:
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  pop
  mload(0x40)
  swap1
  returndatasize
  swap1
  dup3
  returndatacopy
  returndatasize
  swap1
  revert
    /* \"test/__fixtures/BaseTest.sol\":1757:1794  new MintableERC20(\"TokenF\", \"TF\", 25) */
tag_45:
  shl(0xe0, 0x4e487b71)
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup3
  mstore
  mstore(0x04, 0x41)
  0x24
  dup3
  revert
    /* \"test/__fixtures/BaseTest.sol\":1530:1567  new MintableERC20(\"TokenB\", \"TB\", 18) */
tag_33:
  shl(0xe0, 0x4e487b71)
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup4
  mstore
  mstore(0x04, 0x41)
  0x24
  dup4
  revert
tag_1:
  sub(shl(0x40, 0x01), 0x01)
  dup2
  gt
  tag_281
  jumpi
    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */
  0x40
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mstore
  jump\t// out
tag_281:
  mstore(0x00, shl(0xe0, 0x4e487b71))
  mstore(0x04, 0x41)
  revert(0x00, 0x24)
tag_2:
  0x40
  dup2
  add
  swap1
  dup2
  lt
  sub(shl(0x40, 0x01), 0x01)
  dup3
  gt
  or
  tag_281
  jumpi
  0x40
  mstore
  jump\t// out
tag_3:
  0x1f
  swap1
  swap2
  add
  not(0x1f)
  and
  dup2
  add
  swap1
  sub(shl(0x40, 0x01), 0x01)
  dup3
  gt
  swap1
  dup3
  lt
  or
  tag_281
  jumpi
    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */
  0x40
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mstore
  jump\t// out
tag_4:
  sub(shl(0x40, 0x01), 0x01)
  dup2
  gt
  tag_281
  jumpi
  0x1f
  add
  not(0x1f)
  and
  0x20
  add
  swap1
  jump\t// out
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
tag_5:
  0x00
tag_289:
    /* \"test/__fixtures/BaseTest.sol\":795:799  3000 */
  0x0b
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  dup2
  lt
  tag_290
  jumpi
  pop
  pop
    /* \"test/__fixtures/BaseTest.sol\":795:799  3000 */
  0x0b
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  0x00
  swap2
  add
  mstore
  jump\t// out
tag_290:
  dup2
  dup2
  add
  mload
  dup4
  dup3
  add
  mstore
  0x20
  add
  jump(tag_289)
tag_6:
  0x00
tag_292:
  dup4
  dup2
  lt
  tag_293
  jumpi
  pop
  pop
  0x00
  swap2
  add
  mstore
  jump\t// out
tag_293:
  dup2
  dup2
  add
  mload
  dup4
  dup3
  add
  mstore
  0x20
  add
  jump(tag_292)
tag_7:
  swap1
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x20
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  swap2
  tag_295
  dup2
  mload
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup1
  swap3
  dup2
  dup6
  mstore
  dup6
  dup1
  dup7
  add
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  swap2
  add
  tag_6
  jump\t// in
tag_295:
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x1f
  add
  not(0x1f)
  and
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  add
  add
  swap1
  jump\t// out
    /* \"test/__fixtures/BaseTest.sol\":1048:1057  0.0005e18 */
tag_8:
  swap2
  swap1
  dup3
  0x40
  swap2
  sub
  slt
  tag_196
  jumpi
  0x20
  dup3
  mload
  swap3
  add
  mload
  swap1
  jump\t// out
    /* \"src/libraries/FactoryStore.sol\":1047:1217  function write(IGenericFactory aFactory, string memory aKey, address aValue) internal {... */
tag_9:
  swap2
    /* \"test/__fixtures/BaseTest.sol\":1099:1132  new GenericFactory(address(this)) */
  0x01
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup1
  0xa0
  shl
  sub
  dup1
  swap4
  and
  swap2
  mload(0x40)
    /* \"src/libraries/FactoryStore.sol\":1166:1188  abi.encodePacked(aKey) */
  tag_298
  0x20
  dup3
  dup2
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  tag_254
    /* \"src/libraries/FactoryStore.sol\":1166:1188  abi.encodePacked(aKey) */
  dup2
  dup4
  add
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  swap7
  dup8
  dup2
  mload
  swap4
  dup5
  swap3
  add
  tag_6
  jump\t// in
    /* \"src/libraries/FactoryStore.sol\":1166:1188  abi.encodePacked(aKey) */
tag_298:
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  mload
    /* \"src/libraries/FactoryStore.sol\":1156:1189  keccak256(abi.encodePacked(aKey)) */
  swap1
  keccak256
    /* \"src/libraries/FactoryStore.sol\":1143:1210  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */
  swap2
  dup1
  extcodesize
  iszero
  tag_196
  jumpi
  0x00
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  swap3
  dup4
  0x44
  swap3
  mload(0x40)
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  swap7
  dup8
  swap6
  dup7
  swap5
  shl(0xe0, 0xf71f7a25)
    /* \"src/libraries/FactoryStore.sol\":1143:1210  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */
  dup7
  mstore
  0x04
  dup7
  add
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  mstore
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  and
  0x24
  dup5
  add
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  mstore
    /* \"src/libraries/FactoryStore.sol\":1143:1210  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */
  gas
  call
  dup1
  iszero
  tag_169
  jumpi
  tag_304
  jumpi
    /* \"src/libraries/FactoryStore.sol\":1047:1217  function write(IGenericFactory aFactory, string memory aKey, address aValue) internal {... */
  pop
  jump\t// out
    /* \"src/libraries/FactoryStore.sol\":1143:1210  aFactory.set(keccak256(abi.encodePacked(aKey)), aValue.toBytes32()) */
tag_304:
  tag_306
  swap1
  tag_1
  jump\t// in
tag_306:
    /* \"src/libraries/FactoryStore.sol\":1047:1217  function write(IGenericFactory aFactory, string memory aKey, address aValue) internal {... */
  jump\t// out
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
tag_10:
  swap1
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  dup2
  mload
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup2
  lt
  iszero
  tag_307
  jumpi
  add
  0x20
  add
  swap1
  jump\t// out
tag_307:
  mstore(0x00, shl(0xe0, 0x4e487b71))
  mstore(0x04, 0x32)
  revert(0x00, 0x24)
    /* \"test/__fixtures/BaseTest.sol\":4210:4734  function _bytesToHex(bytes memory buffer) public pure returns (string memory) {... */
tag_11:
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  dup1
  mload
    /* \"test/__fixtures/BaseTest.sol\":4405:4406  2 */
  0x02
  swap2
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x01
  dup3
  dup2
  shl
  swap3
  dup1
  iszero
  swap1
  dup5
  div
  dup6
  eq
  or
  iszero
  tag_336
  jumpi
  dup1
  tag_311
  tag_312
  dup6
  tag_4
  jump\t// in
tag_312:
  swap5
  tag_313
  mload(0x40)
  swap7
  dup8
  tag_3
  jump\t// in
tag_313:
  dup1
  dup7
  mstore
  tag_4
  jump\t// in
tag_311:
  0x20
  dup6
  add
  swap4
  swap1
  not(0x1f)
  add
  calldatasize
  dup6
  calldatacopy
  mload(0x40)
  tag_314
  dup2
  tag_2
  jump\t// in
tag_314:
  0x10
  dup2
  mstore
  shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)
  0x20
  dup3
  add
  mstore
  0x00
    /* \"test/__fixtures/BaseTest.sol\":4468:4669  for (uint256 i = 0; i < buffer.length; i++) {... */
  swap3
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
tag_315:
  tag_316
  jumpi
    /* \"test/__fixtures/BaseTest.sol\":4468:4669  for (uint256 i = 0; i < buffer.length; i++) {... */
tag_317:
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  pop
  pop
  pop
  pop
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  tag_318
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  swap3
    /* \"test/__fixtures/BaseTest.sol\":4693:4726  abi.encodePacked(\"0x\", converted) */
  tag_319
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  swap3
  0x22
  swap3
  mload(0x40)
    /* \"test/__fixtures/BaseTest.sol\":4693:4726  abi.encodePacked(\"0x\", converted) */
  swap6
  dup7
  swap3
  shl(0xf3, 0x060f)
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  0x20
    /* \"test/__fixtures/BaseTest.sol\":4693:4726  abi.encodePacked(\"0x\", converted) */
  dup6
  add
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mstore
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  mload
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup1
  swap3
  dup7
  dup6
  add
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  swap1
  tag_6
  jump\t// in
tag_318:
  dup2
  add
    /* \"test/__fixtures/BaseTest.sol\":4693:4726  abi.encodePacked(\"0x\", converted) */
  sub
  swap1
  dup2
  add
  dup5
  mstore
  add
  dup3
  tag_3
  jump\t// in
tag_319:
    /* \"test/__fixtures/BaseTest.sol\":4210:4734  function _bytesToHex(bytes memory buffer) public pure returns (string memory) {... */
  swap1
  jump\t// out
    /* \"test/__fixtures/BaseTest.sol\":4507:4510  i++ */
tag_316:
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  dup2
  mload
    /* \"test/__fixtures/BaseTest.sol\":4488:4505  i < buffer.length */
  dup4
  lt
  iszero
  tag_320
  jumpi
    /* \"test/__fixtures/BaseTest.sol\":4557:4566  buffer[i] */
  tag_322
  dup4
  dup4
  tag_10
  jump\t// in
tag_322:
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mload
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  dup2
  mload
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup1
  iszero
  tag_330
  jumpi
  0xf8
  swap2
  0xff00000000000000000000000000000000000000000000000000000000000000
  swap2
  dup3
  swap2
    /* \"test/__fixtures/BaseTest.sol\":4545:4583  _base[uint8(buffer[i]) / _base.length] */
  tag_325
  swap2
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  swap1
  dup6
  shr
  div
    /* \"test/__fixtures/BaseTest.sol\":4545:4583  _base[uint8(buffer[i]) / _base.length] */
  dup6
  tag_10
  jump\t// in
tag_325:
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mload
  and
  swap2
  dup6
  dup8
  shl
  swap3
  dup7
  dup5
  div
  dup12
  eq
  dup8
  iszero
  or
  iszero
  tag_336
  jumpi
  0x00
    /* \"test/__fixtures/BaseTest.sol\":4526:4583  converted[i * 2] = _base[uint8(buffer[i]) / _base.length] */
  byte
  tag_328
  dup5
  dup12
  tag_10
  jump\t// in
tag_328:
  mstore8
    /* \"test/__fixtures/BaseTest.sol\":4632:4641  buffer[i] */
  tag_329
  dup7
  dup7
  tag_10
  jump\t// in
tag_329:
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mload
  swap1
  shr
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  dup4
  mload
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup1
  iszero
  tag_330
  jumpi
    /* \"test/__fixtures/BaseTest.sol\":4620:4658  _base[uint8(buffer[i]) % _base.length] */
  tag_332
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  swap2
  mod
    /* \"test/__fixtures/BaseTest.sol\":4620:4658  _base[uint8(buffer[i]) % _base.length] */
  dup5
  tag_10
  jump\t// in
tag_332:
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mload
  and
  dup6
  dup3
  add
  dup1
  swap3
  gt
  tag_336
  jumpi
    /* \"test/__fixtures/BaseTest.sol\":4597:4658  converted[i * 2 + 1] = _base[uint8(buffer[i]) % _base.length] */
  tag_335
  swap1
  0x00
  byte
  swap2
  dup9
  tag_10
  jump\t// in
tag_335:
  mstore8
  not(0x00)
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  dup4
  eq
  tag_336
  jumpi
  dup4
  dup1
  swap4
  add
    /* \"test/__fixtures/BaseTest.sol\":4473:4486  uint256 i = 0 */
  swap3
  jump(tag_315)
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
tag_336:
  mstore(0x00, shl(0xe0, 0x4e487b71))
  mstore(0x04, 0x11)
  revert(0x00, 0x24)
tag_330:
  mstore(0x00, shl(0xe0, 0x4e487b71))
  mstore(0x04, 0x12)
  revert(0x00, 0x24)
    /* \"test/__fixtures/BaseTest.sol\":4488:4505  i < buffer.length */
tag_320:
  jump(tag_317)
    /* \"test/__fixtures/BaseTest.sol\":4740:4968  function _makeAddress(string memory aName) internal returns (address) {... */
tag_12:
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mload(0x40)
    /* \"test/__fixtures/BaseTest.sol\":4873:4896  abi.encodePacked(aName) */
  0x20
  dup2
  add
  tag_338
  0x20
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  dup4
  dup6
  mload
  tag_339
  dup2
  dup7
  dup6
  dup11
  add
  tag_6
  jump\t// in
tag_339:
  dup2
  add
    /* \"test/__fixtures/BaseTest.sol\":4873:4896  abi.encodePacked(aName) */
  sub
  dup1
  dup6
  mstore
  add
  dup4
  tag_3
  jump\t// in
tag_338:
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  swap1
  mload
    /* \"test/__fixtures/BaseTest.sol\":4863:4897  keccak256(abi.encodePacked(aName)) */
  swap1
  keccak256
  sub(shl(0xa0, 0x01), 0x01)
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  and
  swap1
  0x00
  dup1
  mload
  0x20
  data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50
  dup4
  codecopy
  dup2
  mload
  swap2
  mstore
    /* \"test/__fixtures/BaseTest.sol\":4910:4935  vm.label(lAddress, aName) */
  dup1
  extcodesize
  iszero
  tag_196
  jumpi
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  tag_342
  0x00
  swap3
  swap2
  dup4
  swap3
  mload(0x40)
    /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
  swap5
  dup6
  dup1
  swap5
  dup2
  swap4
  shl(0xe3, 0x18caf8e3)
    /* \"test/__fixtures/BaseTest.sol\":4910:4935  vm.label(lAddress, aName) */
  dup4
  mstore
  dup10
  0x04
  dup5
  add
    /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
  mstore
  0x40
  0x24
  dup5
  add
  mstore
  0x44
  dup4
  add
  swap1
  tag_7
  jump\t// in
tag_342:
    /* \"test/__fixtures/BaseTest.sol\":4910:4935  vm.label(lAddress, aName) */
  sub
  swap3
  gas
  call
  dup1
  iszero
  tag_169
  jumpi
  tag_345
  jumpi
    /* \"test/__fixtures/BaseTest.sol\":4946:4961  return lAddress */
  pop
    /* \"test/__fixtures/BaseTest.sol\":4740:4968  function _makeAddress(string memory aName) internal returns (address) {... */
  swap1
  jump\t// out
    /* \"test/__fixtures/BaseTest.sol\":4910:4935  vm.label(lAddress, aName) */
tag_345:
  tag_319
  swap1
  tag_1
  jump\t// in
stop
data_1a390d6c2ee89e11d2dffeb86f753e43f966d02cbb0b3bd3e6e1cdf50245ef50 0000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d

sub_0: assembly {
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore(0x40, 0x80)
      jumpi(tag_114, iszero(lt(calldatasize, 0x04)))
      0x00
      dup1
      revert
    tag_114:
      0x00
      dup1
      calldataload
      0xe0
      shr
      dup1
      0x0bffadf7
      eq
      tag_116
      jumpi
      dup1
      0x181876e3
      eq
      tag_118
      jumpi
      dup1
      0x1f2b7669
      eq
      tag_120
      jumpi
      dup1
      0x211d9375
      eq
      tag_122
      jumpi
      dup1
      0x29c567f3
      eq
      tag_124
      jumpi
      dup1
      0x34375f4a
      eq
      tag_126
      jumpi
      dup1
      0x402ab823
      eq
      tag_128
      jumpi
      dup1
      0x438b1cc5
      eq
      tag_130
      jumpi
      dup1
      0x438d33a7
      eq
      tag_132
      jumpi
      dup1
      0x448d3769
      eq
      tag_134
      jumpi
      dup1
      0x4fc7c217
      eq
      tag_136
      jumpi
      dup1
      0x5fe90734
      eq
      tag_138
      jumpi
      dup1
      0x6e008a03
      eq
      tag_140
      jumpi
      dup1
      0x70ec7edb
      eq
      tag_142
      jumpi
      dup1
      0x81782d11
      eq
      tag_144
      jumpi
      dup1
      0x9642ddaf
      eq
      tag_146
      jumpi
      dup1
      0x96e1d23a
      eq
      tag_148
      jumpi
      dup1
      0x9861ae70
      eq
      tag_150
      jumpi
      dup1
      0x9af35f70
      eq
      tag_152
      jumpi
      dup1
      0x9edab5b3
      eq
      tag_154
      jumpi
      dup1
      0xa189a486
      eq
      tag_156
      jumpi
      dup1
      0xab4529da
      eq
      tag_158
      jumpi
      dup1
      0xb233637d
      eq
      tag_160
      jumpi
      dup1
      0xb90e6968
      eq
      tag_162
      jumpi
      dup1
      0xba414fa6
      eq
      tag_164
      jumpi
      dup1
      0xbdba41be
      eq
      tag_166
      jumpi
      dup1
      0xc154276e
      eq
      tag_168
      jumpi
      dup1
      0xd40a18ff
      eq
      tag_170
      jumpi
      dup1
      0xd684426c
      eq
      tag_172
      jumpi
      dup1
      0xe13aba48
      eq
      tag_174
      jumpi
      dup1
      0xe5c8fc1e
      eq
      tag_176
      jumpi
      dup1
      0xe6de30a6
      eq
      tag_178
      jumpi
      dup1
      0xeb52abf0
      eq
      tag_180
      jumpi
      dup1
      0xebeefd29
      eq
      tag_182
      jumpi
      dup1
      0xf103ffa9
      eq
      tag_184
      jumpi
      dup1
      0xfa7626d4
      eq
      tag_186
      jumpi
      dup1
      0xfb13824f
      eq
      tag_188
      jumpi
      dup1
      0xff1c014a
      eq
      tag_190
      jumpi
      0xff5a6560
      eq
      tag_192
      jumpi
      0x00
      dup1
      revert
    tag_192:
      jumpi(tag_196, callvalue)
      dup1
      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
      slt
      tag_196
      jumpi
      dup1
      0xffffffffffffffffffffffffffffffffffffffff
      dup1
        /* \"test/unit/ConstantProductPair.t.sol\":4298:4348  _createPair(address(_tokenA), address(_tokenC), 0) */
      tag_198
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":4318:4325  _tokenA */
      0x19
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      dup3
        /* \"test/unit/ConstantProductPair.t.sol\":4336:4343  _tokenC */
      0x1b
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":4298:4348  _createPair(address(_tokenA), address(_tokenC), 0) */
      swap1
      tag_46
      jump\t// in
    tag_198:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      and
      swap1
      dup1
        /* \"test/unit/ConstantProductPair.t.sol\":4318:4325  _tokenA */
      0x19
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":4359:4391  _tokenA.mint(address(lPair), 10) */
      swap1
      dup2
      extcodesize
      iszero
      tag_212
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      dup5
      dup2
      0x44
      dup2
      dup4
      0x40c10f1900000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":4359:4391  _tokenA.mint(address(lPair), 10) */
      swap8
      dup9
      dup4
      mstore
      dup10
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":4359:4391  _tokenA.mint(address(lPair), 10) */
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":4388:4390  10 */
      0x0a
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      dup5
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":4359:4391  _tokenA.mint(address(lPair), 10) */
      gas
      call
      swap1
      dup2
      iszero
      tag_201
      jumpi
      dup6
      swap2
      tag_203
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_204:
      pop
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":4401:4408  _tokenB */
      0x1a
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":4401:4433  _tokenB.mint(address(lPair), 10) */
      swap1
      dup2
      extcodesize
      iszero
      tag_212
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup4
      swap2
      0x44
      dup4
      swap3
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":4401:4433  _tokenB.mint(address(lPair), 10) */
      swap5
      dup6
      swap4
      dup5
      swap3
      dup4
      mstore
      dup8
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":4401:4433  _tokenB.mint(address(lPair), 10) */
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":4388:4390  10 */
      0x0a
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      dup5
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":4401:4433  _tokenB.mint(address(lPair), 10) */
      gas
      call
      swap1
      dup2
      iszero
      tag_215
      jumpi
      dup4
      swap2
      tag_209
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_210:
        /* \"test/unit/ConstantProductPair.t.sol\":4484:4508  stdError.arithmeticError */
      pop
      pop
      tag_211
      tag_47
      jump\t// in
    tag_211:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"test/unit/ConstantProductPair.t.sol\":4468:4509  vm.expectRevert(stdError.arithmeticError) */
      dup1
      extcodesize
      iszero
      tag_212
      jumpi
        /* \"lib/forge-std/src/StdError.sol\":317:364  abi.encodeWithSignature(\"Panic(uint256)\", 0x11) */
      tag_214
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup5
      swap3
      swap2
      dup4
      swap3
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":4468:4509  vm.expectRevert(stdError.arithmeticError) */
      swap5
      dup6
      dup1
      swap5
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xf28dceb300000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":4468:4509  vm.expectRevert(stdError.arithmeticError) */
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":4468:4509  vm.expectRevert(stdError.arithmeticError) */
      dup5
      add
        /* \"lib/forge-std/src/StdError.sol\":317:364  abi.encodeWithSignature(\"Panic(uint256)\", 0x11) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
        /* \"lib/forge-std/src/StdError.sol\":317:364  abi.encodeWithSignature(\"Panic(uint256)\", 0x11) */
      dup4
      add
      swap1
      tag_10
      jump\t// in
    tag_214:
        /* \"test/unit/ConstantProductPair.t.sol\":4468:4509  vm.expectRevert(stdError.arithmeticError) */
      sub
      swap3
      gas
      call
      swap1
      dup2
      iszero
      tag_215
      jumpi
      dup4
      swap2
      tag_217
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_218:
      pop
      pop
      0x20
      swap1
      0x24
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":4519:4544  lPair.mint(address(this)) */
      dup1
      swap5
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x6a62784200000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":4519:4544  lPair.mint(address(this)) */
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":4538:4542  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":4519:4544  lPair.mint(address(this)) */
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":4519:4544  lPair.mint(address(this)) */
      gas
      call
      dup1
      iszero
      tag_219
      jumpi
      tag_221
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      pop
      dup1
      return
        /* \"test/unit/ConstantProductPair.t.sol\":4519:4544  lPair.mint(address(this)) */
    tag_221:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":4519:4544  lPair.mint(address(this)) */
      swap1
      dup2
      returndatasize
      dup2
      gt
      tag_223
      jumpi
    tag_224:
      tag_225
      dup2
      dup4
      tag_6
      jump\t// in
    tag_225:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
      dup1
      return
    tag_226:
      0x00
      dup1
      revert
        /* \"test/unit/ConstantProductPair.t.sol\":4519:4544  lPair.mint(address(this)) */
    tag_223:
      pop
      returndatasize
      jump(tag_224)
    tag_219:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      returndatasize
      dup5
      dup3
      returndatacopy
      returndatasize
      swap1
      revert
        /* \"test/unit/ConstantProductPair.t.sol\":4468:4509  vm.expectRevert(stdError.arithmeticError) */
    tag_217:
      tag_228
      swap1
      tag_1
      jump\t// in
    tag_228:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_229
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":4468:4509  vm.expectRevert(stdError.arithmeticError) */
      dup2
      codesize
      jump(tag_218)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_229:
      pop
      revert
        /* \"test/unit/ConstantProductPair.t.sol\":4468:4509  vm.expectRevert(stdError.arithmeticError) */
    tag_215:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      returndatasize
      dup6
      dup3
      returndatacopy
      returndatasize
      swap1
      revert
        /* \"test/unit/ConstantProductPair.t.sol\":4468:4509  vm.expectRevert(stdError.arithmeticError) */
    tag_212:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      pop
      pop
      pop
      revert
        /* \"test/unit/ConstantProductPair.t.sol\":4401:4433  _tokenB.mint(address(lPair), 10) */
    tag_209:
      tag_231
      swap1
      tag_1
      jump\t// in
    tag_231:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_229
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":4401:4433  _tokenB.mint(address(lPair), 10) */
      dup2
      codesize
      jump(tag_210)
        /* \"test/unit/ConstantProductPair.t.sol\":4359:4391  _tokenA.mint(address(lPair), 10) */
    tag_203:
      tag_234
      swap1
      tag_1
      jump\t// in
    tag_234:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_212
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":4359:4391  _tokenA.mint(address(lPair), 10) */
      dup4
      codesize
      jump(tag_204)
    tag_201:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      returndatasize
      dup8
      dup3
      returndatacopy
      returndatasize
      swap1
      revert
    tag_196:
      dup1
      revert
    tag_190:
      pop
      jumpi(tag_196, callvalue)
      dup1
      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
      slt
      tag_196
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":21746:21762  block.number + 1 */
      tag_241
        /* \"test/unit/ConstantProductPair.t.sol\":21746:21758  block.number */
      number
        /* \"test/unit/ConstantProductPair.t.sol\":21746:21762  block.number + 1 */
      tag_23
      jump\t// in
    tag_241:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"test/unit/ConstantProductPair.t.sol\":21738:21763  vm.roll(block.number + 1) */
      dup1
      extcodesize
      iszero
      tag_291
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      swap2
      0x1f7b4f3000000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":21738:21763  vm.roll(block.number + 1) */
      swap1
      dup2
      dup5
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":21738:21763  vm.roll(block.number + 1) */
      dup5
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":21738:21763  vm.roll(block.number + 1) */
      swap3
      dup5
      dup2
      dup6
      dup2
      dup4
      dup8
      gas
      call
      dup1
      iszero
      tag_312
      jumpi
      tag_246
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_247:
        /* \"test/unit/ConstantProductPair.t.sol\":21781:21796  block.timestamp */
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":21781:21800  block.timestamp + 5 */
      tag_248
        /* \"test/unit/ConstantProductPair.t.sol\":21781:21796  block.timestamp */
      timestamp
        /* \"test/unit/ConstantProductPair.t.sol\":21781:21800  block.timestamp + 5 */
      tag_24
      jump\t// in
    tag_248:
        /* \"test/unit/ConstantProductPair.t.sol\":21773:21801  vm.warp(block.timestamp + 5) */
      swap2
      dup1
      extcodesize
      iszero
      tag_249
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      0xe5d6bf0200000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":21773:21801  vm.warp(block.timestamp + 5) */
      swap4
      dup5
      dup3
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":21773:21801  vm.warp(block.timestamp + 5) */
      dup3
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":21773:21801  vm.warp(block.timestamp + 5) */
      dup6
      dup2
      dup7
      dup2
      dup4
      dup7
      gas
      call
      dup1
      iszero
      tag_312
      jumpi
      tag_253
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_254:
      pop
      0xffffffffffffffffffffffffffffffffffffffff
      swap1
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":21811:21818  _tokenA */
      0x19
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":21832:21852  _constantProductPair */
      swap3
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      dup8
      dup5
      dup4
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":21811:21871  _tokenA.mint(address(_constantProductPair), lLiquidityToAdd) */
      dup7
      extcodesize
      iszero
      tag_255
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      dup10
      swap8
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      0x44
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      dup1
      swap6
      dup2
      swap4
      0x40c10f1900000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":21811:21871  _tokenA.mint(address(_constantProductPair), lLiquidityToAdd) */
      swap7
      dup8
      dup5
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":21811:21871  _tokenA.mint(address(_constantProductPair), lLiquidityToAdd) */
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xfffffffffa9438a1d29cefffff
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      dup1
      swap14
      dup5
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":21811:21871  _tokenA.mint(address(_constantProductPair), lLiquidityToAdd) */
      gas
      call
      swap2
      dup3
      iszero
      tag_312
      jumpi
      dup11
      swap3
      tag_259
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_260:
      pop
      dup6
        /* \"test/unit/ConstantProductPair.t.sol\":21881:21888  _tokenB */
      0x1a
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      dup7
      dup6
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":21881:21941  _tokenB.mint(address(_constantProductPair), lLiquidityToAdd) */
      swap2
      dup2
      extcodesize
      iszero
      tag_285
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup4
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      0x44
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap3
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":21881:21941  _tokenB.mint(address(_constantProductPair), lLiquidityToAdd) */
      swap11
      dup12
      swap6
      dup7
      swap5
      dup6
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":21881:21941  _tokenB.mint(address(_constantProductPair), lLiquidityToAdd) */
      dup6
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
      dup14
      dup5
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":21881:21941  _tokenB.mint(address(_constantProductPair), lLiquidityToAdd) */
      gas
      call
      swap5
      dup6
      iszero
      tag_312
      jumpi
      dup9
      swap6
      tag_265
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_266:
      pop
      dup4
      dup3
      sload
      and
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":21951:21991  _constantProductPair.mint(address(this)) */
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x6a62784200000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":21951:21991  _constantProductPair.mint(address(this)) */
      dup3
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":21985:21989  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":21951:21991  _constantProductPair.mint(address(this)) */
      dup4
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      dup10
      dup2
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":21951:21991  _constantProductPair.mint(address(this)) */
      swap10
      dup11
      swap5
      gas
      call
      swap1
      dup2
      iszero
      tag_312
      jumpi
      dup7
      swap2
      tag_269
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_270:
      pop
      pop
      dup4
      dup3
      sload
      and
      swap6
      mload(0x40)
      swap8
      dup9
      0x0902f1ac00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":22063:22097  _constantProductPair.getReserves() */
      swap9
      dup10
      dup3
      mstore
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":22063:22097  _constantProductPair.getReserves() */
      0x80
      swap13
      dup14
      swap4
      gas
      staticcall
      swap1
      dup2
      iszero
      tag_312
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":22155:22193  assertEq(lReserve1, type(uint104).max) */
      tag_273
        /* \"test/unit/ConstantProductPair.t.sol\":22063:22097  _constantProductPair.getReserves() */
      swap2
      dup13
      swap2
      dup14
      swap2
      tag_274
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_275:
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":22107:22145  assertEq(lReserve0, type(uint104).max) */
      tag_276
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffff
      dup1
      swap4
      and
        /* \"test/unit/ConstantProductPair.t.sol\":22107:22145  assertEq(lReserve0, type(uint104).max) */
      tag_38
      jump\t// in
    tag_276:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      and
        /* \"test/unit/ConstantProductPair.t.sol\":22155:22193  assertEq(lReserve1, type(uint104).max) */
      tag_38
      jump\t// in
    tag_273:
        /* \"test/unit/ConstantProductPair.t.sol\":22227:22243  block.number + 1 */
      tag_277
        /* \"test/unit/ConstantProductPair.t.sol\":21746:21758  block.number */
      number
        /* \"test/unit/ConstantProductPair.t.sol\":22227:22243  block.number + 1 */
      tag_23
      jump\t// in
    tag_277:
        /* \"test/unit/ConstantProductPair.t.sol\":22219:22244  vm.roll(block.number + 1) */
      dup6
      extcodesize
      iszero
      tag_278
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":22219:22244  vm.roll(block.number + 1) */
      swap4
      dup5
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":22219:22244  vm.roll(block.number + 1) */
      dup5
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":22219:22244  vm.roll(block.number + 1) */
      dup10
      dup4
      dup3
      dup2
      dup4
      dup10
      gas
      call
      swap3
      dup4
      iszero
      tag_312
      jumpi
      dup11
      swap4
      tag_282
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_283:
        /* \"test/unit/ConstantProductPair.t.sol\":21781:21796  block.timestamp */
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":22262:22281  block.timestamp + 5 */
      tag_284
        /* \"test/unit/ConstantProductPair.t.sol\":21781:21796  block.timestamp */
      timestamp
        /* \"test/unit/ConstantProductPair.t.sol\":22262:22281  block.timestamp + 5 */
      tag_24
      jump\t// in
    tag_284:
        /* \"test/unit/ConstantProductPair.t.sol\":22254:22282  vm.warp(block.timestamp + 5) */
      swap2
      dup6
      extcodesize
      iszero
      tag_285
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup4
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":22254:22282  vm.warp(block.timestamp + 5) */
      swap7
      dup8
      swap5
      dup6
      swap4
      dup5
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":22254:22282  vm.warp(block.timestamp + 5) */
      dup5
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":22254:22282  vm.warp(block.timestamp + 5) */
      gas
      call
      swap2
      dup3
      iszero
      tag_312
      jumpi
      dup8
      swap3
      tag_289
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_290:
      pop
      dup3
      dup2
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":22292:22319  _constantProductPair.sync() */
      dup1
      extcodesize
      iszero
      tag_291
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      swap1
      0x04
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":22292:22319  _constantProductPair.sync() */
      dup1
      swap6
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xfff6cae900000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":22292:22319  _constantProductPair.sync() */
      dup4
      mstore
      gas
      call
      swap2
      dup3
      iszero
      tag_312
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":22292:22319  _constantProductPair.sync() */
      swap3
      tag_295
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_296:
      pop
      dup4
      dup4
      dup3
      sload
      and
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":22371:22405  _constantProductPair.totalSupply() */
      swap4
      dup5
      dup1
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x18160ddd00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":22371:22405  _constantProductPair.totalSupply() */
      dup3
      mstore
      gas
      staticcall
      dup1
      iszero
      tag_312
      jumpi
      dup4
      swap3
      dup9
      swap2
      tag_299
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_300:
        /* \"test/unit/ConstantProductPair.t.sol\":22415:22456  assertEq(lTotalSupply, type(uint104).max) */
      pop
      tag_301
      swap1
      tag_38
      jump\t// in
    tag_301:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      swap2
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":22489:22523  _constantProductPair.getReserves() */
      swap4
      dup5
      mstore
      dup5
      dup5
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":22489:22523  _constantProductPair.getReserves() */
      dup2
      dup7
      gas
      staticcall
      swap4
      dup5
      iszero
      tag_312
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup7
        /* \"test/unit/ConstantProductPair.t.sol\":22489:22523  _constantProductPair.getReserves() */
      swap5
      tag_304
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_305:
      pop
      sload
      mload(0x40)
      0xc9d163d100000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":22560:22610  _oracleCaller.observation(_constantProductPair, 0) */
      dup1
      dup3
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      dup6
      and
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":22560:22610  _oracleCaller.observation(_constantProductPair, 0) */
      dup4
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
      0x00
      0x24
      dup4
      add
      mstore
      swap5
      swap1
      swap3
      swap1
      swap2
      and
        /* \"test/unit/ConstantProductPair.t.sol\":22560:22610  _oracleCaller.observation(_constantProductPair, 0) */
      dup6
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup4
      0x44
      dup2
      dup5
        /* \"test/unit/ConstantProductPair.t.sol\":22560:22610  _oracleCaller.observation(_constantProductPair, 0) */
      gas
      staticcall
      swap4
      dup5
      iszero
      tag_312
      jumpi
      dup7
      swap4
      dup9
      swap6
      tag_309
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_310:
      pop
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":22647:22702  _oracleCaller.observation(_constantProductPair, lIndex) */
      swap6
      dup7
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":22647:22702  _oracleCaller.observation(_constantProductPair, lIndex) */
      dup7
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
      0xffff
      swap1
      swap2
      and
      0x24
      dup6
      add
      mstore
      swap2
      swap3
      swap2
      dup3
      swap1
      dup2
      dup1
      0x44
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":22647:22702  _oracleCaller.observation(_constantProductPair, lIndex) */
    tag_311:
      sub
      swap2
      gas
      staticcall
      swap3
      dup4
      iszero
      tag_312
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":22804:22849  lObs1.logAccLiquidity - lObs0.logAccLiquidity */
      tag_314
        /* \"src/libraries/LogCompression.sol\":2760:2807  LogExpMath.exp(value * _LOG_COMPRESSION_FACTOR) */
      tag_315
        /* \"test/unit/ConstantProductPair.t.sol\":22647:22702  _oracleCaller.observation(_constantProductPair, lIndex) */
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40
        /* \"test/unit/ConstantProductPair.t.sol\":22647:22702  _oracleCaller.observation(_constantProductPair, lIndex) */
      dup1
        /* \"test/unit/ConstantProductPair.t.sol\":22712:22888  assertApproxEqRel(... */
      tag_316
        /* \"test/unit/ConstantProductPair.t.sol\":22647:22702  _oracleCaller.observation(_constantProductPair, lIndex) */
      swap8
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      0x5af3107a4000
        /* \"test/unit/ConstantProductPair.t.sol\":22647:22702  _oracleCaller.observation(_constantProductPair, lIndex) */
      swap7
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x05
        /* \"test/unit/ConstantProductPair.t.sol\":22647:22702  _oracleCaller.observation(_constantProductPair, lIndex) */
      swap7
      dup12
      swap3
      tag_317
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_318:
        /* \"test/unit/ConstantProductPair.t.sol\":22804:22825  lObs1.logAccLiquidity */
      pop
      pop
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":22828:22849  lObs0.logAccLiquidity */
      swap2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
      0x06
      signextend
      swap1
      0x06
      signextend
        /* \"test/unit/ConstantProductPair.t.sol\":22804:22849  lObs1.logAccLiquidity - lObs0.logAccLiquidity */
      tag_102
      jump\t// in
    tag_314:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x06
      signextend
      sdiv
      0x06
      signextend
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      mul
        /* \"src/libraries/LogCompression.sol\":2760:2807  LogExpMath.exp(value * _LOG_COMPRESSION_FACTOR) */
      tag_96
      jump\t// in
    tag_315:
        /* \"test/unit/ConstantProductPair.t.sol\":22712:22888  assertApproxEqRel(... */
      tag_92
      jump\t// in
    tag_316:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup1
      return
        /* \"test/unit/ConstantProductPair.t.sol\":22647:22702  _oracleCaller.observation(_constantProductPair, lIndex) */
    tag_317:
      tag_319
      swap3
      pop
      dup1
      returndatasize
      lt
      tag_320
      jumpi
    tag_321:
      tag_322
      dup2
      dup4
      tag_6
      jump\t// in
    tag_322:
      dup2
      add
      swap1
      tag_73
      jump\t// in
    tag_319:
      codesize
      dup1
      jump(tag_318)
    tag_320:
      pop
      returndatasize
      jump(tag_321)
    tag_312:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      returndatasize
      0x00
      dup3
      returndatacopy
      returndatasize
      swap1
      revert
        /* \"test/unit/ConstantProductPair.t.sol\":22560:22610  _oracleCaller.observation(_constantProductPair, 0) */
    tag_309:
        /* \"test/unit/ConstantProductPair.t.sol\":22647:22702  _oracleCaller.observation(_constantProductPair, lIndex) */
      tag_311
        /* \"test/unit/ConstantProductPair.t.sol\":22560:22610  _oracleCaller.observation(_constantProductPair, 0) */
      swap6
      pop
      tag_323
      swap1
      dup6
      returndatasize
      dup8
      gt
      tag_320
      jumpi
      tag_322
      dup2
      dup4
      tag_6
      jump\t// in
    tag_323:
      swap5
      jump(tag_310)
        /* \"test/unit/ConstantProductPair.t.sol\":22489:22523  _constantProductPair.getReserves() */
    tag_304:
      tag_327
      swap2
      swap5
      pop
      dup6
      returndatasize
      dup8
      gt
      tag_328
      jumpi
    tag_329:
      tag_330
      dup2
      dup4
      tag_6
      jump\t// in
    tag_330:
      dup2
      add
      swap1
      tag_28
      jump\t// in
    tag_327:
      swap3
      pop
      pop
      pop
      swap3
      codesize
      jump(tag_305)
    tag_328:
      pop
      returndatasize
      jump(tag_329)
        /* \"test/unit/ConstantProductPair.t.sol\":22371:22405  _constantProductPair.totalSupply() */
    tag_299:
      dup1
      swap4
      pop
      dup6
      dup1
      swap3
      pop
      returndatasize
      dup4
      gt
      tag_331
      jumpi
    tag_332:
      tag_333
      dup2
      dup4
      tag_6
      jump\t// in
    tag_333:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":22415:22456  assertEq(lTotalSupply, type(uint104).max) */
      tag_301
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup4
      swap3
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":22371:22405  _constantProductPair.totalSupply() */
      swap1
      jump(tag_300)
    tag_331:
      pop
      returndatasize
      jump(tag_332)
        /* \"test/unit/ConstantProductPair.t.sol\":22292:22319  _constantProductPair.sync() */
    tag_295:
      tag_336
      swap1
      tag_1
      jump\t// in
    tag_336:
      codesize
      jump(tag_296)
    tag_291:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      dup1
      revert
        /* \"test/unit/ConstantProductPair.t.sol\":22254:22282  vm.warp(block.timestamp + 5) */
    tag_289:
      tag_337
      swap1
      tag_1
      jump\t// in
    tag_337:
      codesize
      jump(tag_290)
    tag_285:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup4
      dup1
      revert
        /* \"test/unit/ConstantProductPair.t.sol\":22219:22244  vm.roll(block.number + 1) */
    tag_282:
      tag_338
      swap1
      tag_1
      jump\t// in
    tag_338:
      codesize
      jump(tag_283)
    tag_278:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup11
      dup1
      revert
        /* \"test/unit/ConstantProductPair.t.sol\":22063:22097  _constantProductPair.getReserves() */
    tag_274:
      swap1
      pop
      tag_339
      swap2
      pop
      dup12
      returndatasize
      dup14
      gt
      tag_328
      jumpi
      tag_330
      dup2
      dup4
      tag_6
      jump\t// in
    tag_339:
      pop
      pop
      codesize
      jump(tag_275)
        /* \"test/unit/ConstantProductPair.t.sol\":21951:21991  _constantProductPair.mint(address(this)) */
    tag_269:
      dup2
      returndatasize
      dup4
      gt
      tag_343
      jumpi
    tag_344:
      tag_345
      dup2
      dup4
      tag_6
      jump\t// in
    tag_345:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":21951:21991  _constantProductPair.mint(address(this)) */
      dup5
      codesize
      jump(tag_270)
    tag_343:
      pop
      returndatasize
      jump(tag_344)
        /* \"test/unit/ConstantProductPair.t.sol\":21881:21941  _tokenB.mint(address(_constantProductPair), lLiquidityToAdd) */
    tag_265:
      tag_348
      swap1
      tag_1
      jump\t// in
    tag_348:
      codesize
      jump(tag_266)
        /* \"test/unit/ConstantProductPair.t.sol\":21811:21871  _tokenA.mint(address(_constantProductPair), lLiquidityToAdd) */
    tag_259:
      tag_349
      swap1
      tag_1
      jump\t// in
    tag_349:
      codesize
      jump(tag_260)
    tag_255:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      pop
      dup1
      revert
        /* \"test/unit/ConstantProductPair.t.sol\":21773:21801  vm.warp(block.timestamp + 5) */
    tag_253:
      tag_350
      swap1
      tag_1
      jump\t// in
    tag_350:
      codesize
      jump(tag_254)
    tag_249:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup5
      dup1
      revert
        /* \"test/unit/ConstantProductPair.t.sol\":21738:21763  vm.roll(block.number + 1) */
    tag_246:
      tag_351
      swap1
      tag_1
      jump\t// in
    tag_351:
      codesize
      jump(tag_247)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_188:
      pop
      jumpi(tag_196, callvalue)
      dup1
      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
      slt
      tag_196
      jumpi
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"test/unit/ConstantProductPair.t.sol\":10730:10767  vm.expectEmit(true, true, true, true) */
      dup1
      extcodesize
      iszero
      tag_255
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      mload(0x40)
      0x491cc7c200000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":10730:10767  vm.expectEmit(true, true, true, true) */
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":10744:10748  true */
      0x01
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":10730:10767  vm.expectEmit(true, true, true, true) */
      dup3
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
      dup2
      dup2
      0x84
      dup2
      dup4
      0x24
      swap8
        /* \"test/unit/ConstantProductPair.t.sol\":10744:10748  true */
      0x01
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup10
      dup5
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":10744:10748  true */
      0x01
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x44
      dup5
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":10744:10748  true */
      0x01
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x64
      dup5
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":10730:10767  vm.expectEmit(true, true, true, true) */
      gas
      call
      dup1
      iszero
      tag_219
      jumpi
      tag_360
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_361:
      pop
      pop
      mload(0x40)
      dup3
      dup2
      mstore
      0x20
      swap1
      dup4
      dup3
      dup3
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":10782:10807  Burn(address(this), 0, 0) */
      0x49995e5dd6158cf69ad3e9777c46755a1a826a446c6416992167462dad033b2a
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40
        /* \"test/unit/ConstantProductPair.t.sol\":10795:10799  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":10782:10807  Burn(address(this), 0, 0) */
      swap3
      log2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      swap2
      dup4
      0x40
      dup5
        /* \"test/unit/ConstantProductPair.t.sol\":10817:10837  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      dup4
      dup3
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":10817:10857  _constantProductPair.burn(address(this)) */
      dup1
      swap5
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x89afcb4400000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":10817:10857  _constantProductPair.burn(address(this)) */
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":10795:10799  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":10817:10857  _constantProductPair.burn(address(this)) */
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":10817:10857  _constantProductPair.burn(address(this)) */
      gas
      call
      dup1
      iszero
      tag_201
      jumpi
      tag_364
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_365:
      pop
      dup3
        /* \"test/unit/ConstantProductPair.t.sol\":10895:10902  _tokenA */
      0x19
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      mload(0x40)
      dup4
      dup2
      dup5
      dup2
      0x70a0823100000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":10895:10927  _tokenA.balanceOf(address(this)) */
      swap6
      dup7
      dup3
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":10795:10799  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":10895:10927  _tokenA.balanceOf(address(this)) */
      dup4
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":10895:10927  _tokenA.balanceOf(address(this)) */
      gas
      staticcall
      dup1
      iszero
      tag_376
      jumpi
      dup7
      swap1
      tag_368
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_369:
        /* \"test/unit/ConstantProductPair.t.sol\":10886:10931  assertEq(_tokenA.balanceOf(address(this)), 0) */
      tag_370
      swap2
      pop
      tag_36
      jump\t// in
    tag_370:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      dup4
      dup6
        /* \"test/unit/ConstantProductPair.t.sol\":10950:10957  _tokenB */
      0x1a
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":10950:10982  _tokenB.balanceOf(address(this)) */
      swap3
      dup4
      dup1
      swap3
      dup7
      dup3
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":10795:10799  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":10950:10982  _tokenB.balanceOf(address(this)) */
      dup4
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":10950:10982  _tokenB.balanceOf(address(this)) */
      gas
      staticcall
      dup1
      iszero
      tag_376
      jumpi
      dup7
      swap1
      tag_373
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_374:
        /* \"test/unit/ConstantProductPair.t.sol\":10941:10986  assertEq(_tokenB.balanceOf(address(this)), 0) */
      tag_375
      swap2
      pop
      tag_36
      jump\t// in
    tag_375:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup4
        /* \"test/unit/ConstantProductPair.t.sol\":10895:10902  _tokenA */
      0x19
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      swap2
      dup4
      dup6
        /* \"test/unit/ConstantProductPair.t.sol\":10817:10837  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      dup3
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":11005:11053  _tokenA.balanceOf(address(_constantProductPair)) */
      dup1
      swap7
      dup2
      swap4
      dup8
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":11005:11053  _tokenA.balanceOf(address(_constantProductPair)) */
      dup4
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":11005:11053  _tokenA.balanceOf(address(_constantProductPair)) */
      gas
      staticcall
      dup1
      iszero
      tag_376
      jumpi
      dup5
      swap4
      dup8
      swap2
      tag_378
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_379:
        /* \"test/unit/ConstantProductPair.t.sol\":11055:11074  INITIAL_MINT_AMOUNT */
      pop
      tag_380
      swap1
      tag_34
      jump\t// in
    tag_380:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup5
        /* \"test/unit/ConstantProductPair.t.sol\":10950:10957  _tokenB */
      0x1a
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      swap5
        /* \"test/unit/ConstantProductPair.t.sol\":10817:10837  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      swap2
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":11094:11142  _tokenB.balanceOf(address(_constantProductPair)) */
      swap6
      dup7
      swap4
      dup5
      swap3
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":11094:11142  _tokenB.balanceOf(address(_constantProductPair)) */
      dup4
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":11094:11142  _tokenB.balanceOf(address(_constantProductPair)) */
      gas
      staticcall
      swap1
      dup2
      iszero
      tag_215
      jumpi
      dup4
      swap2
      tag_383
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_384:
        /* \"test/unit/ConstantProductPair.t.sol\":11144:11163  INITIAL_MINT_AMOUNT */
      dup4
      tag_316
      dup4
      tag_34
      jump\t// in
        /* \"test/unit/ConstantProductPair.t.sol\":11094:11142  _tokenB.balanceOf(address(_constantProductPair)) */
    tag_383:
      swap1
      pop
      dup2
      dup2
      returndatasize
      dup4
      gt
      tag_386
      jumpi
    tag_387:
      tag_388
      dup2
      dup4
      tag_6
      jump\t// in
    tag_388:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":11144:11163  INITIAL_MINT_AMOUNT */
      tag_316
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":11094:11142  _tokenB.balanceOf(address(_constantProductPair)) */
      codesize
      jump(tag_384)
    tag_386:
      pop
      returndatasize
      jump(tag_387)
        /* \"test/unit/ConstantProductPair.t.sol\":11005:11053  _tokenA.balanceOf(address(_constantProductPair)) */
    tag_378:
      dup5
      dup2
      swap6
      swap3
      pop
      returndatasize
      dup4
      gt
      tag_391
      jumpi
    tag_392:
      tag_393
      dup2
      dup4
      tag_6
      jump\t// in
    tag_393:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":11055:11074  INITIAL_MINT_AMOUNT */
      tag_380
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup5
      swap4
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":11005:11053  _tokenA.balanceOf(address(_constantProductPair)) */
      swap1
      jump(tag_379)
    tag_391:
      pop
      returndatasize
      jump(tag_392)
    tag_376:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      returndatasize
      dup9
      dup3
      returndatacopy
      returndatasize
      swap1
      revert
        /* \"test/unit/ConstantProductPair.t.sol\":10950:10982  _tokenB.balanceOf(address(this)) */
    tag_373:
      pop
      dup4
      dup2
      dup2
      returndatasize
      dup4
      gt
      tag_396
      jumpi
    tag_397:
      tag_398
      dup2
      dup4
      tag_6
      jump\t// in
    tag_398:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":10941:10986  assertEq(_tokenB.balanceOf(address(this)), 0) */
      tag_375
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":10950:10982  _tokenB.balanceOf(address(this)) */
      jump(tag_374)
    tag_396:
      pop
      returndatasize
      jump(tag_397)
        /* \"test/unit/ConstantProductPair.t.sol\":10895:10927  _tokenA.balanceOf(address(this)) */
    tag_368:
      pop
      dup4
      dup2
      dup2
      returndatasize
      dup4
      gt
      tag_401
      jumpi
    tag_402:
      tag_403
      dup2
      dup4
      tag_6
      jump\t// in
    tag_403:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":10886:10931  assertEq(_tokenA.balanceOf(address(this)), 0) */
      tag_370
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":10895:10927  _tokenA.balanceOf(address(this)) */
      jump(tag_369)
    tag_401:
      pop
      returndatasize
      jump(tag_402)
        /* \"test/unit/ConstantProductPair.t.sol\":10817:10857  _constantProductPair.burn(address(this)) */
    tag_364:
      tag_406
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40
        /* \"test/unit/ConstantProductPair.t.sol\":10817:10857  _constantProductPair.burn(address(this)) */
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40
        /* \"test/unit/ConstantProductPair.t.sol\":10817:10857  _constantProductPair.burn(address(this)) */
      gt
      tag_407
      jumpi
    tag_408:
      tag_409
      dup2
      dup4
      tag_6
      jump\t// in
    tag_409:
      dup2
      add
      swap1
      tag_71
      jump\t// in
    tag_406:
      pop
      jump(tag_365)
    tag_407:
      pop
      returndatasize
      jump(tag_408)
        /* \"test/unit/ConstantProductPair.t.sol\":10730:10767  vm.expectEmit(true, true, true, true) */
    tag_360:
      tag_410
      swap1
      tag_1
      jump\t// in
    tag_410:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_255
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":10730:10767  vm.expectEmit(true, true, true, true) */
      dup2
      codesize
      jump(tag_361)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_186:
      pop
      jumpi(tag_196, callvalue)
      dup1
      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
      slt
      tag_196
      jumpi
      0xff
      0x20
      swap2
      sload
      and
      mload(0x40)
      swap1
      iszero
      iszero
      dup2
      mstore
      return
    tag_184:
      pop
      jumpi(tag_196, callvalue)
      dup1
      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
      slt
      tag_196
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":20496:20512  block.number + 1 */
      tag_421
        /* \"test/unit/ConstantProductPair.t.sol\":20496:20508  block.number */
      number
        /* \"test/unit/ConstantProductPair.t.sol\":20496:20512  block.number + 1 */
      tag_23
      jump\t// in
    tag_421:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"test/unit/ConstantProductPair.t.sol\":20488:20513  vm.roll(block.number + 1) */
      extcodesize
      iszero
      tag_255
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":20488:20513  vm.roll(block.number + 1) */
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x1f7b4f3000000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":20488:20513  vm.roll(block.number + 1) */
      dup3
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":20488:20513  vm.roll(block.number + 1) */
      dup3
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":20488:20513  vm.roll(block.number + 1) */
      dup2
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":20488:20513  vm.roll(block.number + 1) */
      dup2
      dup4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"test/unit/ConstantProductPair.t.sol\":20488:20513  vm.roll(block.number + 1) */
      gas
      call
      dup1
      iszero
      tag_312
      jumpi
      tag_426
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_427:
        /* \"test/unit/ConstantProductPair.t.sol\":20531:20546  block.timestamp */
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":20531:20550  block.timestamp + 5 */
      tag_428
        /* \"test/unit/ConstantProductPair.t.sol\":20531:20546  block.timestamp */
      timestamp
        /* \"test/unit/ConstantProductPair.t.sol\":20531:20550  block.timestamp + 5 */
      tag_24
      jump\t// in
    tag_428:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"test/unit/ConstantProductPair.t.sol\":20523:20551  vm.warp(block.timestamp + 5) */
      extcodesize
      iszero
      tag_255
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":20523:20551  vm.warp(block.timestamp + 5) */
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xe5d6bf0200000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":20523:20551  vm.warp(block.timestamp + 5) */
      dup3
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":20523:20551  vm.warp(block.timestamp + 5) */
      dup3
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":20523:20551  vm.warp(block.timestamp + 5) */
      dup2
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":20523:20551  vm.warp(block.timestamp + 5) */
      dup2
      dup4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"test/unit/ConstantProductPair.t.sol\":20523:20551  vm.warp(block.timestamp + 5) */
      gas
      call
      dup1
      iszero
      tag_312
      jumpi
      tag_433
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_434:
      pop
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":20570:20576  _alice */
      0x16
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"test/unit/ConstantProductPair.t.sol\":20561:20577  vm.prank(_alice) */
      extcodesize
      iszero
      tag_255
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":20561:20577  vm.prank(_alice) */
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xca669fa700000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":20561:20577  vm.prank(_alice) */
      dup3
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":20561:20577  vm.prank(_alice) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":20561:20577  vm.prank(_alice) */
      dup2
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":20561:20577  vm.prank(_alice) */
      dup2
      dup4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"test/unit/ConstantProductPair.t.sol\":20561:20577  vm.prank(_alice) */
      gas
      call
      dup1
      iszero
      tag_312
      jumpi
      tag_439
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_440:
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":20587:20607  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      mload(0x40)
      0xa9059cbb00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":20587:20662  _constantProductPair.transfer(address(_constantProductPair), lAmountToBurn) */
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      swap1
      swap2
      and
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":20587:20662  _constantProductPair.transfer(address(_constantProductPair), lAmountToBurn) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      dup2
      swap1
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":15977:15981  1e18 */
      0x0de0b6b3a7640000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      dup4
      add
      mstore
      0x20
      swap1
      dup3
      swap1
      0x44
      swap1
      dup3
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":20587:20662  _constantProductPair.transfer(address(_constantProductPair), lAmountToBurn) */
      dup7
      swap1
      gas
      call
      dup1
      iszero
      tag_312
      jumpi
      tag_444
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_445:
      pop
      dup1
      0x40
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":20587:20607  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      0x24
      dup3
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":20672:20712  _constantProductPair.burn(address(this)) */
      dup1
      swap5
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x89afcb4400000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":20672:20712  _constantProductPair.burn(address(this)) */
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":20706:20710  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":20672:20712  _constantProductPair.burn(address(this)) */
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":20672:20712  _constantProductPair.burn(address(this)) */
      gas
      call
      dup1
      iszero
      tag_312
      jumpi
      tag_448
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_449:
      pop
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":20587:20607  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      mload(0x40)
      0x0902f1ac00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":20763:20797  _constantProductPair.getReserves() */
      dup2
      mstore
      0x80
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":20763:20797  _constantProductPair.getReserves() */
      dup2
      dup6
      gas
      staticcall
      dup1
      iszero
      tag_312
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":20834:20889  _oracleCaller.observation(_constantProductPair, lIndex) */
      tag_452
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":20763:20797  _constantProductPair.getReserves() */
      0x80
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap3
      dup6
        /* \"test/unit/ConstantProductPair.t.sol\":20763:20797  _constantProductPair.getReserves() */
      swap3
      tag_453
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_454:
      pop
      and(sload(0x20), 0xffffffffffffffffffffffffffffffffffffffff)
      swap1
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":20834:20889  _oracleCaller.observation(_constantProductPair, lIndex) */
      dup1
      swap6
      dup2
      swap5
      dup3
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xc9d163d100000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":20834:20889  _oracleCaller.observation(_constantProductPair, lIndex) */
      dup5
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":20834:20889  _oracleCaller.observation(_constantProductPair, lIndex) */
      dup5
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      swap3
      swap2
      0xffff
      0x20
      swap2
      0xffffffffffffffffffffffffffffffffffffffff
      0x40
      dup6
      add
      swap7
      and
      dup5
      mstore
      and
      swap2
      add
      mstore
      jump
        /* \"test/unit/ConstantProductPair.t.sol\":20834:20889  _oracleCaller.observation(_constantProductPair, lIndex) */
    tag_452:
      sub
      swap2
      gas
      staticcall
      swap1
      dup2
      iszero
      tag_312
      jumpi
      dup3
      swap2
      tag_457
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_458:
        /* \"test/unit/ConstantProductPair.t.sol\":20950:20971  lObs0.logAccLiquidity */
      pop
        /* \"src/libraries/LogCompression.sol\":2760:2807  LogExpMath.exp(value * _LOG_COMPRESSION_FACTOR) */
      tag_459
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      0x5af3107a4000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x05
      0x40
        /* \"test/unit/ConstantProductPair.t.sol\":20950:20971  lObs0.logAccLiquidity */
      dup5
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
      0x06
      signextend
      sdiv
      0x06
      signextend
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      mul
        /* \"src/libraries/LogCompression.sol\":2760:2807  LogExpMath.exp(value * _LOG_COMPRESSION_FACTOR) */
      tag_96
      jump\t// in
    tag_459:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x00
        /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */
      0x056bc75e2d63100000
        /* \"lib/forge-std/src/StdMath.sol\":607:612  a > b */
      dup3
      gt
        /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */
      iszero
      tag_460
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      pop
      0xfffffffffffffffffffffffffffffffffffffffffffffffa9438a1d29cf00000
      dup2
      add
      dup2
      dup2
      gt
      tag_505
      jumpi
        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */
    tag_464:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup1
        /* \"lib/forge-std/src/StdMath.sol\":1144:1148  1e18 */
      0x0de0b6b3a7640000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      mul
      div
        /* \"lib/forge-std/src/StdMath.sol\":1144:1148  1e18 */
      0x0de0b6b3a7640000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      eq
      dup2
      iszero
      or
      iszero
      tag_505
      jumpi
        /* \"lib/forge-std/src/StdMath.sol\":1144:1148  1e18 */
      0x0de0b6b3a7640000
        /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */
      0x056bc75e2d63100000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap2
      mul
      div
        /* \"lib/forge-std/src/StdAssertions.sol\":5389:5419  percentDelta > maxPercentDelta */
      swap1
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      0x5af3107a4000
        /* \"lib/forge-std/src/StdAssertions.sol\":5389:5419  percentDelta > maxPercentDelta */
      dup3
      gt
        /* \"lib/forge-std/src/StdAssertions.sol\":5385:5769  if (percentDelta > maxPercentDelta) {... */
      tag_467
      jumpi
        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */
    tag_468:
        /* \"test/unit/ConstantProductPair.t.sol\":20496:20508  block.number */
      pop
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":21138:21154  block.number + 1 */
      tag_469
        /* \"test/unit/ConstantProductPair.t.sol\":20496:20508  block.number */
      number
        /* \"test/unit/ConstantProductPair.t.sol\":21138:21154  block.number + 1 */
      tag_23
      jump\t// in
    tag_469:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"test/unit/ConstantProductPair.t.sol\":21130:21155  vm.roll(block.number + 1) */
      extcodesize
      iszero
      tag_291
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":21130:21155  vm.roll(block.number + 1) */
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x1f7b4f3000000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":21130:21155  vm.roll(block.number + 1) */
      dup3
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":21130:21155  vm.roll(block.number + 1) */
      dup3
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":21130:21155  vm.roll(block.number + 1) */
      dup3
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":21130:21155  vm.roll(block.number + 1) */
      dup2
      dup4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"test/unit/ConstantProductPair.t.sol\":21130:21155  vm.roll(block.number + 1) */
      gas
      call
      dup1
      iszero
      tag_312
      jumpi
      tag_474
      jumpi
        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */
    tag_475:
        /* \"test/unit/ConstantProductPair.t.sol\":20531:20546  block.timestamp */
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":21173:21192  block.timestamp + 5 */
      tag_476
        /* \"test/unit/ConstantProductPair.t.sol\":20531:20546  block.timestamp */
      timestamp
        /* \"test/unit/ConstantProductPair.t.sol\":21173:21192  block.timestamp + 5 */
      tag_24
      jump\t// in
    tag_476:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"test/unit/ConstantProductPair.t.sol\":21165:21193  vm.warp(block.timestamp + 5) */
      extcodesize
      iszero
      tag_291
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":21165:21193  vm.warp(block.timestamp + 5) */
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xe5d6bf0200000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":21165:21193  vm.warp(block.timestamp + 5) */
      dup3
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":21165:21193  vm.warp(block.timestamp + 5) */
      dup3
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":21165:21193  vm.warp(block.timestamp + 5) */
      dup3
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":21165:21193  vm.warp(block.timestamp + 5) */
      dup2
      dup4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"test/unit/ConstantProductPair.t.sol\":21165:21193  vm.warp(block.timestamp + 5) */
      gas
      call
      dup1
      iszero
      tag_312
      jumpi
      tag_481
      jumpi
        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */
    tag_482:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      pop
      dup2
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":20587:20607  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":21203:21230  _constantProductPair.sync() */
      dup1
      extcodesize
      iszero
      tag_255
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      swap1
      0x04
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":21203:21230  _constantProductPair.sync() */
      dup1
      swap5
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xfff6cae900000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":21203:21230  _constantProductPair.sync() */
      dup4
      mstore
      gas
      call
      dup1
      iszero
      tag_312
      jumpi
      tag_487
      jumpi
        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */
    tag_488:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      pop
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":20587:20607  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      swap1
      mload(0x40)
      0x0902f1ac00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":21274:21308  _constantProductPair.getReserves() */
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":20763:20797  _constantProductPair.getReserves() */
      0x80
        /* \"test/unit/ConstantProductPair.t.sol\":21274:21308  _constantProductPair.getReserves() */
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":21274:21308  _constantProductPair.getReserves() */
      dup2
      dup7
      gas
      staticcall
      dup1
      iszero
      tag_312
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":21345:21400  _oracleCaller.observation(_constantProductPair, lIndex) */
      tag_491
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":20763:20797  _constantProductPair.getReserves() */
      0x80
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap3
      dup7
        /* \"test/unit/ConstantProductPair.t.sol\":21274:21308  _constantProductPair.getReserves() */
      swap3
      tag_492
      jumpi
        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */
    tag_493:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      pop
      and(sload(0x20), 0xffffffffffffffffffffffffffffffffffffffff)
      swap1
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":21345:21400  _oracleCaller.observation(_constantProductPair, lIndex) */
      dup1
      swap7
      dup2
      swap5
      dup3
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xc9d163d100000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":21345:21400  _oracleCaller.observation(_constantProductPair, lIndex) */
      dup5
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":21345:21400  _oracleCaller.observation(_constantProductPair, lIndex) */
      dup5
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      swap3
      swap2
      0xffff
      0x20
      swap2
      0xffffffffffffffffffffffffffffffffffffffff
      0x40
      dup6
      add
      swap7
      and
      dup5
      mstore
      and
      swap2
      add
      mstore
      jump
        /* \"test/unit/ConstantProductPair.t.sol\":21345:21400  _oracleCaller.observation(_constantProductPair, lIndex) */
    tag_491:
      sub
      swap2
      gas
      staticcall
      dup1
      iszero
      tag_312
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":21463:21508  lObs1.logAccLiquidity - lObs0.logAccLiquidity */
      tag_314
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      0x5af3107a4000
        /* \"test/unit/ConstantProductPair.t.sol\":21345:21400  _oracleCaller.observation(_constantProductPair, lIndex) */
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40
        /* \"test/unit/ConstantProductPair.t.sol\":21345:21400  _oracleCaller.observation(_constantProductPair, lIndex) */
      dup1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x05
        /* \"test/unit/ConstantProductPair.t.sol\":21345:21400  _oracleCaller.observation(_constantProductPair, lIndex) */
      swap5
        /* \"src/libraries/LogCompression.sol\":2760:2807  LogExpMath.exp(value * _LOG_COMPRESSION_FACTOR) */
      tag_497
        /* \"test/unit/ConstantProductPair.t.sol\":21345:21400  _oracleCaller.observation(_constantProductPair, lIndex) */
      swap8
      dup10
      swap2
      tag_498
      jumpi
        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */
    tag_499:
        /* \"test/unit/ConstantProductPair.t.sol\":21463:21484  lObs1.logAccLiquidity */
      pop
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
      0x06
      signextend
        /* \"test/unit/ConstantProductPair.t.sol\":20950:20971  lObs0.logAccLiquidity */
      swap2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
      0x06
      signextend
        /* \"test/unit/ConstantProductPair.t.sol\":21463:21508  lObs1.logAccLiquidity - lObs0.logAccLiquidity */
      swap1
      tag_102
      jump\t// in
        /* \"src/libraries/LogCompression.sol\":2760:2807  LogExpMath.exp(value * _LOG_COMPRESSION_FACTOR) */
    tag_497:
        /* \"test/unit/ConstantProductPair.t.sol\":21556:21561  99e18 */
      0x055de6a779bbac0000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x00
        /* \"lib/forge-std/src/StdMath.sol\":607:612  a > b */
      dup2
      dup4
      gt
        /* \"test/unit/ConstantProductPair.t.sol\":21556:21561  99e18 */
      iszero
      tag_500
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      pop
      0xfffffffffffffffffffffffffffffffffffffffffffffffaa219588644540000
      dup3
      add
      dup3
      dup2
      gt
      tag_505
      jumpi
        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */
    tag_504:
        /* \"lib/forge-std/src/StdMath.sol\":1144:1148  1e18 */
      0x0de0b6b3a7640000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      mul
      swap1
      dup1
      dup3
      div
        /* \"lib/forge-std/src/StdMath.sol\":1144:1148  1e18 */
      0x0de0b6b3a7640000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      eq
      swap1
      iszero
      or
      iszero
      tag_505
      jumpi
      dup2
      swap1
      div
        /* \"lib/forge-std/src/StdAssertions.sol\":5389:5419  percentDelta > maxPercentDelta */
      swap2
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      0x5af3107a4000
        /* \"lib/forge-std/src/StdAssertions.sol\":5389:5419  percentDelta > maxPercentDelta */
      dup4
      gt
        /* \"lib/forge-std/src/StdAssertions.sol\":5385:5769  if (percentDelta > maxPercentDelta) {... */
      tag_507
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup4
      dup1
      return
        /* \"lib/forge-std/src/StdAssertions.sol\":5385:5769  if (percentDelta > maxPercentDelta) {... */
    tag_507:
        /* \"lib/forge-std/src/StdAssertions.sol\":5440:5481  log(\"Error: a ~= b not satisfied [uint]\") */
      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50
        /* \"test/unit/ConstantProductPair.t.sol\":20763:20797  _constantProductPair.getReserves() */
      0x80
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      0x20
      dup2
      mstore
      0x22
      0x20
      dup3
      add
      mstore
      0x4572726f723a2061207e3d2062206e6f7420736174697366696564205b75696e
      0x40
      dup3
      add
      mstore
      0x745d000000000000000000000000000000000000000000000000000000000000
      0x60
      dup3
      add
      mstore
        /* \"lib/forge-std/src/StdAssertions.sol\":5440:5481  log(\"Error: a ~= b not satisfied [uint]\") */
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      swap2
      0x40
      dup4
      mstore
      tag_509
      0x40
      dup5
      add
      0x40
      swap1
      0x0c
      dup2
      mstore
      0x2020202045787065637465640000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_509:
      swap1
      0x20
      dup5
      add
      mstore
        /* \"lib/forge-std/src/StdAssertions.sol\":5500:5533  log_named_uint(\"    Expected\", b) */
      dup3
      0xb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8
      swap4
      dup5
      swap3
      sub
      swap1
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      dup1
      swap2
      0x40
      dup3
      mstore
      tag_510
      0x40
      dup4
      add
      0x40
      swap1
      0x0c
      dup2
      mstore
      0x20202020202041637475616c0000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_510:
      swap1
      0x20
      dup4
      add
      mstore
        /* \"lib/forge-std/src/StdAssertions.sol\":5552:5585  log_named_uint(\"      Actual\", a) */
      sub
      swap1
      log1
        /* \"lib/forge-std/src/StdAssertions.sol\":5682:5738  log_named_decimal_uint(\"     % Delta\", percentDelta, 18) */
      tag_511
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"lib/forge-std/src/StdAssertions.sol\":5604:5663  log_named_decimal_uint(\" Max % Delta\", maxPercentDelta, 18) */
      swap2
      0xeb8ba43ced7537421946bd43e828b8b2b8428927aa8f801c13d934bf11aca57b
      dup4
      dup1
      tag_512
      dup4
      swap7
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      0x60
      dup3
      mstore
      0x0c
      0x60
      dup4
      add
      mstore
      0x204d617820252044656c74610000000000000000000000000000000000000000
      0x80
      dup4
      add
      mstore
        /* \"lib/forge-std/src/StdAssertions.sol\":6831:6833  18 */
      0x12
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40
      0xa0
      dup5
      add
      swap4
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      0x5af3107a4000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
      dup3
      add
      mstore
      add
      mstore
      jump
        /* \"lib/forge-std/src/StdAssertions.sol\":5604:5663  log_named_decimal_uint(\" Max % Delta\", maxPercentDelta, 18) */
    tag_512:
      sub
      swap1
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"lib/forge-std/src/StdAssertions.sol\":5682:5738  log_named_decimal_uint(\"     % Delta\", percentDelta, 18) */
      swap2
      dup3
      swap2
      dup3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40
        /* \"lib/forge-std/src/StdAssertions.sol\":6831:6833  18 */
      0x12
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap2
      swap4
      swap3
      swap4
      0x60
      dup2
      mstore
      0x0c
      0x60
      dup3
      add
      mstore
      0x2020202020252044656c74610000000000000000000000000000000000000000
      0x80
      dup3
      add
      mstore
      0xa0
      dup2
      add
      swap5
      0x20
      dup3
      add
      mstore
      add
      mstore
      jump
        /* \"lib/forge-std/src/StdAssertions.sol\":5682:5738  log_named_decimal_uint(\"     % Delta\", percentDelta, 18) */
    tag_511:
      sub
      swap1
      log1
      tag_513
      tag_42
      jump\t// in
    tag_513:
        /* \"lib/forge-std/src/StdAssertions.sol\":5385:5769  if (percentDelta > maxPercentDelta) {... */
      codesize
      dup1
      dup1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup4
      dup1
      return
    tag_505:
      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)
      mstore(0x04, 0x11)
      revert(0x00, 0x24)
        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */
    tag_500:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      dup3
      sub
      swap1
      dup3
      dup3
      gt
      tag_514
      jumpi
        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */
      pop
      jump(tag_504)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_514:
      dup1
      0x4e487b7100000000000000000000000000000000000000000000000000000000
      0x24
      swap3
      mstore
      mstore(0x04, 0x11)
      revert
        /* \"test/unit/ConstantProductPair.t.sol\":21345:21400  _oracleCaller.observation(_constantProductPair, lIndex) */
    tag_498:
      tag_516
      swap2
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":20763:20797  _constantProductPair.getReserves() */
      0x80
        /* \"test/unit/ConstantProductPair.t.sol\":21345:21400  _oracleCaller.observation(_constantProductPair, lIndex) */
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":20763:20797  _constantProductPair.getReserves() */
      0x80
        /* \"test/unit/ConstantProductPair.t.sol\":21345:21400  _oracleCaller.observation(_constantProductPair, lIndex) */
      gt
      tag_320
      jumpi
      tag_322
      dup2
      dup4
      tag_6
      jump\t// in
    tag_516:
      codesize
      jump(tag_499)
        /* \"test/unit/ConstantProductPair.t.sol\":21274:21308  _constantProductPair.getReserves() */
    tag_492:
      tag_520
      swap2
      swap3
      pop
      dup4
      returndatasize
      dup6
      gt
      tag_328
      jumpi
      tag_330
      dup2
      dup4
      tag_6
      jump\t// in
    tag_520:
      swap3
      pop
      pop
      pop
      swap1
      codesize
      jump(tag_493)
        /* \"test/unit/ConstantProductPair.t.sol\":21203:21230  _constantProductPair.sync() */
    tag_487:
      tag_524
      swap1
      tag_1
      jump\t// in
    tag_524:
      codesize
      jump(tag_488)
        /* \"test/unit/ConstantProductPair.t.sol\":21165:21193  vm.warp(block.timestamp + 5) */
    tag_481:
      tag_525
      swap1
      tag_1
      jump\t// in
    tag_525:
      codesize
      jump(tag_482)
        /* \"test/unit/ConstantProductPair.t.sol\":21130:21155  vm.roll(block.number + 1) */
    tag_474:
      tag_526
      swap1
      tag_1
      jump\t// in
    tag_526:
      codesize
      jump(tag_475)
        /* \"lib/forge-std/src/StdAssertions.sol\":5385:5769  if (percentDelta > maxPercentDelta) {... */
    tag_467:
        /* \"lib/forge-std/src/StdAssertions.sol\":5440:5481  log(\"Error: a ~= b not satisfied [uint]\") */
      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50
        /* \"test/unit/ConstantProductPair.t.sol\":20763:20797  _constantProductPair.getReserves() */
      0x80
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      0x20
      dup2
      mstore
      0x22
      0x20
      dup3
      add
      mstore
      0x4572726f723a2061207e3d2062206e6f7420736174697366696564205b75696e
      0x40
      dup3
      add
      mstore
      0x745d000000000000000000000000000000000000000000000000000000000000
      0x60
      dup3
      add
      mstore
        /* \"lib/forge-std/src/StdAssertions.sol\":5440:5481  log(\"Error: a ~= b not satisfied [uint]\") */
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      swap1
      0x40
      dup3
      mstore
      tag_527
      0x40
      dup4
      add
      0x40
      swap1
      0x0c
      dup2
      mstore
      0x2020202045787065637465640000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_527:
        /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */
      0x056bc75e2d63100000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
      dup5
      add
      mstore
        /* \"lib/forge-std/src/StdAssertions.sol\":5500:5533  log_named_uint(\"    Expected\", b) */
      dup3
      0xb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8
      swap4
      dup5
      swap3
      sub
      swap1
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      dup1
      swap2
      0x40
      dup3
      mstore
      tag_528
      0x40
      dup4
      add
      0x40
      swap1
      0x0c
      dup2
      mstore
      0x20202020202041637475616c0000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_528:
      swap1
      0x20
      dup4
      add
      mstore
        /* \"lib/forge-std/src/StdAssertions.sol\":5552:5585  log_named_uint(\"      Actual\", a) */
      sub
      swap1
      log1
        /* \"lib/forge-std/src/StdAssertions.sol\":5682:5738  log_named_decimal_uint(\"     % Delta\", percentDelta, 18) */
      tag_529
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"lib/forge-std/src/StdAssertions.sol\":5604:5663  log_named_decimal_uint(\" Max % Delta\", maxPercentDelta, 18) */
      swap2
      0xeb8ba43ced7537421946bd43e828b8b2b8428927aa8f801c13d934bf11aca57b
      dup4
      dup1
      tag_512
      dup4
      swap7
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      0x60
      dup3
      mstore
      0x0c
      0x60
      dup4
      add
      mstore
      0x204d617820252044656c74610000000000000000000000000000000000000000
      0x80
      dup4
      add
      mstore
        /* \"lib/forge-std/src/StdAssertions.sol\":6831:6833  18 */
      0x12
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40
      0xa0
      dup5
      add
      swap4
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      0x5af3107a4000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
      dup3
      add
      mstore
      add
      mstore
      jump
        /* \"lib/forge-std/src/StdAssertions.sol\":5682:5738  log_named_decimal_uint(\"     % Delta\", percentDelta, 18) */
    tag_529:
      sub
      swap1
      log1
      tag_531
      tag_42
      jump\t// in
    tag_531:
        /* \"lib/forge-std/src/StdAssertions.sol\":5385:5769  if (percentDelta > maxPercentDelta) {... */
      codesize
      dup1
      jump(tag_468)
        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */
    tag_460:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
        /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */
      0x056bc75e2d63100000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      swap1
        /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */
      0x056bc75e2d63100000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      gt
      tag_514
      jumpi
        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */
      pop
      jump(tag_464)
        /* \"test/unit/ConstantProductPair.t.sol\":20834:20889  _oracleCaller.observation(_constantProductPair, lIndex) */
    tag_457:
      tag_534
      swap2
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":20763:20797  _constantProductPair.getReserves() */
      0x80
        /* \"test/unit/ConstantProductPair.t.sol\":20834:20889  _oracleCaller.observation(_constantProductPair, lIndex) */
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":20763:20797  _constantProductPair.getReserves() */
      0x80
        /* \"test/unit/ConstantProductPair.t.sol\":20834:20889  _oracleCaller.observation(_constantProductPair, lIndex) */
      gt
      tag_320
      jumpi
      tag_322
      dup2
      dup4
      tag_6
      jump\t// in
    tag_534:
      codesize
      jump(tag_458)
        /* \"test/unit/ConstantProductPair.t.sol\":20763:20797  _constantProductPair.getReserves() */
    tag_453:
      tag_538
      swap2
      swap3
      pop
      dup4
      returndatasize
      dup6
      gt
      tag_328
      jumpi
      tag_330
      dup2
      dup4
      tag_6
      jump\t// in
    tag_538:
      swap3
      pop
      pop
      pop
      swap1
      codesize
      jump(tag_454)
        /* \"test/unit/ConstantProductPair.t.sol\":20672:20712  _constantProductPair.burn(address(this)) */
    tag_448:
      tag_542
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40
        /* \"test/unit/ConstantProductPair.t.sol\":20672:20712  _constantProductPair.burn(address(this)) */
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40
        /* \"test/unit/ConstantProductPair.t.sol\":20672:20712  _constantProductPair.burn(address(this)) */
      gt
      tag_407
      jumpi
      tag_409
      dup2
      dup4
      tag_6
      jump\t// in
    tag_542:
      pop
      jump(tag_449)
        /* \"test/unit/ConstantProductPair.t.sol\":20587:20662  _constantProductPair.transfer(address(_constantProductPair), lAmountToBurn) */
    tag_444:
      tag_546
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":20587:20662  _constantProductPair.transfer(address(_constantProductPair), lAmountToBurn) */
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":20587:20662  _constantProductPair.transfer(address(_constantProductPair), lAmountToBurn) */
      gt
      tag_547
      jumpi
    tag_548:
      tag_549
      dup2
      dup4
      tag_6
      jump\t// in
    tag_549:
      dup2
      add
      swap1
      tag_14
      jump\t// in
    tag_546:
      pop
      codesize
      jump(tag_445)
    tag_547:
      pop
      returndatasize
      jump(tag_548)
        /* \"test/unit/ConstantProductPair.t.sol\":20561:20577  vm.prank(_alice) */
    tag_439:
      tag_550
      swap1
      tag_1
      jump\t// in
    tag_550:
      codesize
      jump(tag_440)
        /* \"test/unit/ConstantProductPair.t.sol\":20523:20551  vm.warp(block.timestamp + 5) */
    tag_433:
      tag_551
      swap1
      tag_1
      jump\t// in
    tag_551:
      codesize
      jump(tag_434)
        /* \"test/unit/ConstantProductPair.t.sol\":20488:20513  vm.roll(block.number + 1) */
    tag_426:
      tag_552
      swap1
      tag_1
      jump\t// in
    tag_552:
      codesize
      jump(tag_427)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_182:
      pop
      jumpi(tag_196, callvalue)
      dup1
      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
      slt
      tag_196
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":24604:24616  _stepTime(5) */
      tag_557
      tag_77
      jump\t// in
    tag_557:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      dup1
        /* \"test/unit/ConstantProductPair.t.sol\":24789:24796  _tokenB */
      0x1a
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":24810:24830  _constantProductPair */
      dup3
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap2
      dup4
      dup4
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":24789:24842  _tokenB.mint(address(_constantProductPair), lSwapAmt) */
      dup2
      extcodesize
      iszero
      tag_291
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      swap2
      0x44
      dup4
      swap3
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":24789:24842  _tokenB.mint(address(_constantProductPair), lSwapAmt) */
      swap5
      dup6
      swap4
      dup5
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40c10f1900000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":24789:24842  _tokenB.mint(address(_constantProductPair), lSwapAmt) */
      dup5
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":24789:24842  _tokenB.mint(address(_constantProductPair), lSwapAmt) */
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":24759:24779  0.127809637135502e18 */
      0x01c6123014554ab0
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      dup5
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":24789:24842  _tokenB.mint(address(_constantProductPair), lSwapAmt) */
      gas
      call
      dup1
      iszero
      tag_219
      jumpi
      tag_562
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_563:
      pop
      pop
      dup1
      dup3
      tag_564
      swap3
      sload
      and
      mload(0x40)
      tag_565
      dup2
      tag_2
      jump\t// in
    tag_565:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      dup6
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":24852:24928  _constantProductPair.swap(-int256(lSwapAmt), true, address(this), bytes(\"\")) */
      dup1
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xe12bd9d800000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":24852:24928  _constantProductPair.swap(-int256(lSwapAmt), true, address(this), bytes(\"\")) */
      dup3
      mstore
        /* \"lib/forge-std/src/StdMath.sol\":124:202  -57896044618658097711785492504343953926634992332820282019728792003956564819968 */
      0xfffffffffffffffffffffffffffffffffffffffffffffffffe39edcfebaab550
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":24852:24928  _constantProductPair.swap(-int256(lSwapAmt), true, address(this), bytes(\"\")) */
      dup4
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":24897:24901  true */
      0x01
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      dup4
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":24911:24915  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x44
      dup4
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x80
      0x64
      dup4
      add
      mstore
      dup2
      dup9
      dup2
      0x20
      swap9
      dup10
      swap7
      0x84
      dup4
      add
      swap1
      tag_10
      jump\t// in
    tag_564:
        /* \"test/unit/ConstantProductPair.t.sol\":24852:24928  _constantProductPair.swap(-int256(lSwapAmt), true, address(this), bytes(\"\")) */
      sub
      swap3
      gas
      call
      swap1
      dup2
      iszero
      tag_201
      jumpi
      dup4
      swap2
      tag_568
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_569:
      pop
      pop
      dup3
      dup2
      sload
      and
      swap3
      mload(0x40)
      dup4
      dup2
      0x04
      dup2
      0x495bc0fb00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":24966:25005  _constantProductPair.prevClampedPrice() */
      swap9
      dup10
      dup3
      mstore
      gas
      staticcall
      dup1
      iszero
      tag_376
      jumpi
      dup7
      swap1
      tag_572
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_573:
        /* \"test/unit/ConstantProductPair.t.sol\":24957:25012  assertEq(_constantProductPair.prevClampedPrice(), 1e18) */
      tag_574
      swap2
      pop
      tag_33
      jump\t// in
    tag_574:
        /* \"test/unit/ConstantProductPair.t.sol\":25038:25050  _stepTime(5) */
      tag_575
      tag_77
      jump\t// in
    tag_575:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup5
      dup2
      dup4
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":25060:25087  _constantProductPair.sync() */
      dup1
      extcodesize
      iszero
      tag_255
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      dup1
      swap2
      0x04
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":25060:25087  _constantProductPair.sync() */
      dup1
      swap5
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xfff6cae900000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":25060:25087  _constantProductPair.sync() */
      dup4
      mstore
      gas
      call
      dup1
      iszero
      tag_219
      jumpi
      tag_580
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_581:
      pop
      pop
      dup1
      dup4
      sload
      and
      swap2
      0x80
      dup3
      dup3
      sload
      and
      0x44
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":25143:25193  _oracleCaller.observation(_constantProductPair, 1) */
      dup1
      swap7
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xc9d163d100000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":25143:25193  _oracleCaller.observation(_constantProductPair, 1) */
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":25143:25193  _oracleCaller.observation(_constantProductPair, 1) */
      dup4
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":24897:24901  true */
      0x01
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      dup4
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":25143:25193  _oracleCaller.observation(_constantProductPair, 1) */
      gas
      staticcall
      dup1
      iszero
      tag_376
      jumpi
      dup5
      swap4
      dup8
      swap2
      tag_584
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_585:
      pop
      dup4
      dup2
      mload
      0x0d
      signextend
        /* \"test/unit/ConstantProductPair.t.sol\":25234:25258  lObs1.logAccClampedPrice */
      swap2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
      0x06
      signextend
        /* \"lib/solmate/lib/ds-test/src/test.sol\":7258:7264  a <= b */
      dup1
      dup3
      sgt
      iszero
        /* \"lib/solmate/lib/ds-test/src/test.sol\":7254:7451  if (a <= b) {... */
      tag_586
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_587:
      pop
      pop
      sload
      and
      swap3
      0x04
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":25278:25317  _constantProductPair.prevClampedPrice() */
      dup1
      swap6
      dup2
      swap4
      dup3
      mstore
      gas
      staticcall
      swap2
      dup3
      iszero
      tag_215
      jumpi
      dup4
      swap3
      tag_590
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_591:
        /* \"test/unit/ConstantProductPair.t.sol\":25319:25328  1.0025e18 */
      pop
      0x0de9987043544000
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5259:5265  a != b */
      swap2
      dup3
      dup2
      sub
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5255:5458  if (a != b) {... */
      tag_592
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup4
      dup1
      return
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5255:5458  if (a != b) {... */
    tag_592:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5286:5327  log(\"Error: a == b not satisfied [uint]\") */
      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x80
      mload(0x40)
      dup5
      dup2
      mstore
      0x22
      dup6
      dup3
      add
      mstore
      0x4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e
      0x40
      dup3
      add
      mstore
      0x745d000000000000000000000000000000000000000000000000000000000000
      0x60
      dup3
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5286:5327  log(\"Error: a == b not satisfied [uint]\") */
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      swap3
      0x40
      dup5
      mstore
      tag_594
      0x40
      dup6
      add
      0x40
      swap1
      0x0a
      dup2
      mstore
      0x2020457870656374656400000000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_594:
      swap1
      dup4
      dup6
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5346:5377  log_named_uint(\"  Expected\", b) */
      dup4
      0xb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8
      swap5
      dup6
      swap3
      sub
      swap1
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      swap2
      dup3
      swap2
      0x40
      dup4
      mstore
      tag_595
      0x40
      dup5
      add
      0x40
      swap1
      0x0a
      dup2
      mstore
      0x2020202041637475616c00000000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_595:
      swap2
      dup4
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5396:5427  log_named_uint(\"    Actual\", a) */
      sub
      swap1
      log1
      tag_513
      tag_42
      jump\t// in
        /* \"test/unit/ConstantProductPair.t.sol\":25278:25317  _constantProductPair.prevClampedPrice() */
    tag_590:
      swap1
      dup1
      swap3
      pop
      dup2
      dup2
      returndatasize
      dup4
      gt
      tag_597
      jumpi
    tag_598:
      tag_599
      dup2
      dup4
      tag_6
      jump\t// in
    tag_599:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":25278:25317  _constantProductPair.prevClampedPrice() */
      swap1
      codesize
      jump(tag_591)
    tag_597:
      pop
      returndatasize
      jump(tag_598)
        /* \"lib/solmate/lib/ds-test/src/test.sol\":7254:7451  if (a <= b) {... */
    tag_586:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":7285:7324  log(\"Error: a > b not satisfied [int]\") */
      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x60
      mload(0x40)
      dup8
      dup2
      mstore
      dup8
      dup1
      dup3
      add
      mstore
      0x4572726f723a2061203e2062206e6f7420736174697366696564205b696e745d
      0x40
      dup3
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":7285:7324  log(\"Error: a > b not satisfied [int]\") */
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      swap2
      0x40
      dup4
      mstore
      tag_602
      0x40
      dup5
      add
      0x40
      swap1
      0x09
      dup2
      mstore
      0x202056616c756520610000000000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_602:
      swap1
      dup7
      dup5
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":7343:7372  log_named_int(\"  Value a\", a) */
      dup3
      0x2fe632779174374378442a8e978bccfbdcc1d6b2b0d81f7e8eb776ab2286f168
      swap4
      dup5
      swap3
      sub
      swap1
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      dup1
      swap2
      0x40
      dup3
      mstore
      tag_603
      0x40
      dup4
      add
      0x40
      swap1
      0x09
      dup2
      mstore
      0x202056616c756520620000000000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_603:
      swap1
      dup8
      dup4
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":7391:7420  log_named_int(\"  Value b\", b) */
      sub
      swap1
      log1
      tag_604
      tag_42
      jump\t// in
    tag_604:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":7254:7451  if (a <= b) {... */
      codesize
      dup1
      jump(tag_587)
        /* \"test/unit/ConstantProductPair.t.sol\":25143:25193  _oracleCaller.observation(_constantProductPair, 1) */
    tag_584:
      tag_605
      swap2
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x80
        /* \"test/unit/ConstantProductPair.t.sol\":25143:25193  _oracleCaller.observation(_constantProductPair, 1) */
      returndatasize
      dup2
      gt
      tag_320
      jumpi
      tag_322
      dup2
      dup4
      tag_6
      jump\t// in
    tag_605:
      codesize
      jump(tag_585)
        /* \"test/unit/ConstantProductPair.t.sol\":25060:25087  _constantProductPair.sync() */
    tag_580:
      tag_609
      swap1
      tag_1
      jump\t// in
    tag_609:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_249
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":25060:25087  _constantProductPair.sync() */
      dup5
      codesize
      jump(tag_581)
        /* \"test/unit/ConstantProductPair.t.sol\":24966:25005  _constantProductPair.prevClampedPrice() */
    tag_572:
      pop
      dup4
      dup2
      dup2
      returndatasize
      dup4
      gt
      tag_612
      jumpi
    tag_613:
      tag_614
      dup2
      dup4
      tag_6
      jump\t// in
    tag_614:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":24957:25012  assertEq(_constantProductPair.prevClampedPrice(), 1e18) */
      tag_574
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":24966:25005  _constantProductPair.prevClampedPrice() */
      jump(tag_573)
    tag_612:
      pop
      returndatasize
      jump(tag_613)
        /* \"test/unit/ConstantProductPair.t.sol\":24852:24928  _constantProductPair.swap(-int256(lSwapAmt), true, address(this), bytes(\"\")) */
    tag_568:
      dup2
      returndatasize
      dup4
      gt
      tag_617
      jumpi
    tag_618:
      tag_619
      dup2
      dup4
      tag_6
      jump\t// in
    tag_619:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":24852:24928  _constantProductPair.swap(-int256(lSwapAmt), true, address(this), bytes(\"\")) */
      dup2
      codesize
      jump(tag_569)
    tag_617:
      pop
      returndatasize
      jump(tag_618)
        /* \"test/unit/ConstantProductPair.t.sol\":24789:24842  _tokenB.mint(address(_constantProductPair), lSwapAmt) */
    tag_562:
      tag_622
      swap1
      tag_1
      jump\t// in
    tag_622:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_291
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":24789:24842  _tokenB.mint(address(_constantProductPair), lSwapAmt) */
      dup3
      codesize
      jump(tag_563)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_180:
      pop
      jumpi(tag_196, callvalue)
      dup1
      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
      slt
      tag_196
      jumpi
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      swap3
      dup4
      dup1
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x26232a2e00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      dup3
      mstore
      gas
      staticcall
      dup1
      iszero
      tag_219
      jumpi
      dup3
      swap1
      tag_631
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_632:
        /* \"test/unit/ConstantProductPair.t.sol\":27373:27420  assertGt(_constantProductPair.platformFee(), 0) */
      tag_633
      swap2
      pop
      tag_68
      jump\t// in
    tag_633:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup1
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":27430:27457  _constantProductPair.sync() */
      dup1
      extcodesize
      iszero
      tag_229
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      dup1
      swap2
      0x04
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":27430:27457  _constantProductPair.sync() */
      dup1
      swap5
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xfff6cae900000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":27430:27457  _constantProductPair.sync() */
      dup4
      mstore
      gas
      call
      dup1
      iszero
      tag_219
      jumpi
      tag_638
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_639:
      pop
      pop
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":27483:27512  _constantProductPair.token0() */
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x0dfe168100000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":27483:27512  _constantProductPair.token0() */
      dup3
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":27483:27512  _constantProductPair.token0() */
      dup3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":27483:27512  _constantProductPair.token0() */
      dup2
      dup5
      gas
      staticcall
      swap2
      dup3
      iszero
      tag_215
      jumpi
      dup4
      swap3
      tag_642
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_643:
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
      swap2
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":27538:27567  _constantProductPair.token1() */
      swap3
      dup4
      dup1
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xd21220a700000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":27538:27567  _constantProductPair.token1() */
      dup3
      mstore
      gas
      staticcall
      swap1
      dup2
      iszero
      tag_215
      jumpi
      dup4
      swap2
      tag_646
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_647:
      pop
      dup3
      dup1
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */
      dup2
      add
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x70a0823100000000000000000000000000000000000000000000000000000000
        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */
      dup3
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":27663:27667  this */
      address
        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */
      0x24
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */
      0x24
      dup2
      mstore
      tag_648
      dup2
      tag_5
      jump\t// in
    tag_648:
        /* \"lib/forge-std/src/StdCheats.sol\":19719:19769  token.call(abi.encodeWithSelector(0x70a08231, to)) */
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      dup3
      0xffffffffffffffffffffffffffffffffffffffff
      dup8
      and
        /* \"lib/forge-std/src/StdCheats.sol\":19719:19769  token.call(abi.encodeWithSelector(0x70a08231, to)) */
      gas
      call
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"lib/forge-std/src/StdCheats.sol\":19719:19769  token.call(abi.encodeWithSelector(0x70a08231, to)) */
      tag_649
      tag_13
      jump\t// in
    tag_649:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup1
      mload
        /* \"lib/forge-std/src/StdCheats.sol\":19797:19827  abi.decode(balData, (uint256)) */
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
      0xffffffffffffffffffffffffffffffffffffffff
      dup3
      and
      0xffffffffffffffffffffffff0000000000000000000000000000000000000000
        /* \"lib/forge-std/src/StdStorage.sol\":4581:4593  self._target */
      0x0a
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      or
        /* \"lib/forge-std/src/StdStorage.sol\":4581:4593  self._target */
      0x0a
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sstore
        /* \"lib/forge-std/src/StdCheats.sol\":19753:19763  0x70a08231 */
      0x70a08231
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000
        /* \"lib/forge-std/src/StdStorage.sol\":4736:4745  self._sig */
      0x08
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      or
        /* \"lib/forge-std/src/StdStorage.sol\":4736:4745  self._sig */
      0x08
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sstore
        /* \"lib/forge-std/src/StdStorage.sol\":5052:5062  self._keys */
      0x07
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      0x010000000000000000
      dup2
      lt
      iszero
      tag_652
      jumpi
      0x01
      dup2
      add
      dup1
        /* \"lib/forge-std/src/StdStorage.sol\":5052:5062  self._keys */
      0x07
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sstore
      dup2
      lt
      iszero
      tag_654
      jumpi
        /* \"lib/forge-std/src/StdStorage.sol\":5052:5062  self._keys */
      0x07
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup5
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":27663:27667  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688
      add
      sstore
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"lib/forge-std/src/StdStorage.sol\":4581:4593  self._target */
      0x0a
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"lib/forge-std/src/StdStorage.sol\":4736:4745  self._sig */
      0x08
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      0xe0
      shl
      swap1
        /* \"lib/forge-std/src/StdStorage.sol\":9476:9487  self._depth */
      0x09
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      dup6
      dup1
      tag_656
      tag_104
      jump\t// in
    tag_656:
        /* \"lib/forge-std/src/StdStorage.sol\":9584:9596  flatten(ins) */
      swap5
      tag_657
      dup7
      tag_113
      jump\t// in
    tag_657:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      mload(0x40)
        /* \"lib/forge-std/src/StdStorage.sol\":9561:9597  abi.encodePacked(fsig, flatten(ins)) */
      swap7
      dup8
      tag_658
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"lib/forge-std/src/StdStorage.sol\":9561:9597  abi.encodePacked(fsig, flatten(ins)) */
      dup3
      add
      swap5
      dup5
      dup7
      tag_12
      jump\t// in
    tag_658:
      sub
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap2
        /* \"lib/forge-std/src/StdStorage.sol\":9561:9597  abi.encodePacked(fsig, flatten(ins)) */
      tag_659
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
        /* \"lib/forge-std/src/StdStorage.sol\":9561:9597  abi.encodePacked(fsig, flatten(ins)) */
      swap4
      dup5
      dup2
      add
      dup12
      mstore
      dup11
      tag_6
      jump\t// in
    tag_659:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      0xffffffff00000000000000000000000000000000000000000000000000000000
        /* \"lib/forge-std/src/StdStorage.sol\":9612:9627  self.finds[who] */
      tag_660
      dup10
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0x00
      mstore
        /* \"lib/forge-std/src/StdStorage.sol\":9612:9622  self.finds */
      0x06
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
      mstore
      keccak256(0x00, 0x40)
      swap1
      jump
        /* \"lib/forge-std/src/StdStorage.sol\":9612:9627  self.finds[who] */
    tag_660:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      swap2
      and
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      dup2
      dup7
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
      0x40
      dup6
      keccak256
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"lib/forge-std/src/StdStorage.sol\":9644:9678  abi.encodePacked(ins, field_depth) */
      dup2
      add
      swap1
      tag_661
      dup2
      tag_662
      dup13
      dup9
      dup7
      tag_107
      jump\t// in
    tag_662:
      sub
      dup8
      dup2
      add
      dup4
      mstore
      dup3
      tag_6
      jump\t// in
    tag_661:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
        /* \"lib/forge-std/src/StdStorage.sol\":9634:9679  keccak256(abi.encodePacked(ins, field_depth)) */
      swap1
      keccak256
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup7
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
      0xff
      0x40
      dup7
      keccak256
      sload
      and
        /* \"lib/forge-std/src/StdStorage.sol\":9611:9680  !self.finds[who][fsig][keccak256(abi.encodePacked(ins, field_depth))] */
      iszero
        /* \"lib/forge-std/src/StdStorage.sol\":9607:9717  if (!self.finds[who][fsig][keccak256(abi.encodePacked(ins, field_depth))]) {... */
      tag_663
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_664:
        /* \"lib/forge-std/src/StdStorage.sol\":9749:9764  self.slots[who] */
      tag_665
      dup9
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0x00
      mstore
        /* \"lib/forge-std/src/StdCheats.sol\":19864:19872  stdstore */
      0x05
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
      mstore
      keccak256(0x00, 0x40)
      swap1
      jump
        /* \"lib/forge-std/src/StdStorage.sol\":9749:9764  self.slots[who] */
    tag_665:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      dup6
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
      0x40
      dup5
      keccak256
      swap2
        /* \"lib/forge-std/src/StdStorage.sol\":9781:9815  abi.encodePacked(ins, field_depth) */
      tag_666
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"lib/forge-std/src/StdStorage.sol\":9781:9815  abi.encodePacked(ins, field_depth) */
      swap2
      dup3
      tag_667
      dup11
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"lib/forge-std/src/StdStorage.sol\":9781:9815  abi.encodePacked(ins, field_depth) */
      dup4
      add
      swap7
      dup8
      tag_107
      jump\t// in
    tag_667:
      sub
      swap1
      dup2
      add
      dup4
      mstore
      dup3
      tag_6
      jump\t// in
    tag_666:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
        /* \"lib/forge-std/src/StdStorage.sol\":9771:9816  keccak256(abi.encodePacked(ins, field_depth)) */
      swap1
      keccak256
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
      0x40
      dup3
      keccak256
      sload
        /* \"lib/forge-std/src/StdStorage.sol\":9889:9909  who.staticcall(cald) */
      swap6
      mload
      swap1
      dup6
      gas
      staticcall
      pop
      tag_668
      tag_13
      jump\t// in
    tag_668:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      0x07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
      dup2
      and
      dup2
      sub
      tag_669
      jumpi
      dup7
      swap5
      swap4
      swap3
      swap2
        /* \"lib/forge-std/src/StdStorage.sol\":9930:9968  bytesToBytes32(rdat, 32 * field_depth) */
      tag_671
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap2
        /* \"lib/forge-std/src/StdCheats.sol\":19864:19872  stdstore */
      0x05
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      shl
        /* \"lib/forge-std/src/StdStorage.sol\":9930:9968  bytesToBytes32(rdat, 32 * field_depth) */
      swap1
      tag_112
      jump\t// in
    tag_671:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      0x667f9d7000000000000000000000000000000000000000000000000000000000
        /* \"lib/forge-std/src/StdStorage.sol\":10003:10021  vm.load(who, slot) */
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      dup4
      and
      0x04
        /* \"lib/forge-std/src/StdStorage.sol\":10003:10021  vm.load(who, slot) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
      0x24
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup5
      swap1
      mstore
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      0x44
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"lib/forge-std/src/StdStorage.sol\":10003:10021  vm.load(who, slot) */
      gas
      staticcall
      swap2
      dup3
      iszero
      tag_376
      jumpi
      dup7
      swap3
      tag_675
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_676:
        /* \"lib/forge-std/src/StdStorage.sol\":10036:10048  fdat != curr */
      pop
      sub
        /* \"lib/forge-std/src/StdStorage.sol\":10032:10250  if (fdat != curr) {... */
      tag_677
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_678:
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"lib/forge-std/src/StdStorage.sol\":10259:10283  vm.store(who, slot, set) */
      extcodesize
      iszero
      tag_285
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      0x70ca10bb00000000000000000000000000000000000000000000000000000000
        /* \"lib/forge-std/src/StdStorage.sol\":10259:10283  vm.store(who, slot, set) */
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      swap2
      swap1
      swap2
      and
      0x04
        /* \"lib/forge-std/src/StdStorage.sol\":10259:10283  vm.store(who, slot, set) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      dup2
      add
      swap2
      swap1
      swap2
      mstore
      0x02b5e3af16b1880000
      0x44
      dup3
      add
      mstore
      dup3
      dup2
      0x64
      dup2
      dup4
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"lib/forge-std/src/StdStorage.sol\":10259:10283  vm.store(who, slot, set) */
      gas
      call
      swap1
      dup2
      iszero
      tag_215
      jumpi
      dup4
      swap2
      tag_684
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_685:
        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      pop
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffff0000000000000000000000000000000000000000
        /* \"lib/forge-std/src/StdStorage.sol\":4581:4593  self._target */
      0x0a
        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      sload
      and
        /* \"lib/forge-std/src/StdStorage.sol\":4581:4593  self._target */
      0x0a
        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      sstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000
        /* \"lib/forge-std/src/StdStorage.sol\":4736:4745  self._sig */
      0x08
        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      sload
      and
        /* \"lib/forge-std/src/StdStorage.sol\":4736:4745  self._sig */
      0x08
        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      sstore
        /* \"lib/forge-std/src/StdStorage.sol\":10348:10365  delete self._keys */
      tag_686
      tag_109
      jump\t// in
    tag_686:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x00
        /* \"lib/forge-std/src/StdStorage.sol\":9476:9487  self._depth */
      0x09
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sstore
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      mload(0x40)
      0xa9059cbb00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":27739:27799  lToken0.transfer(address(_constantProductPair), lSwapAmount) */
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      swap1
      swap2
      and
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":27739:27799  lToken0.transfer(address(_constantProductPair), lSwapAmount) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x02b5e3af16b1880000
      0x24
      dup3
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      dup1
      0x44
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":27739:27799  lToken0.transfer(address(_constantProductPair), lSwapAmount) */
      sub
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      dup7
      0xffffffffffffffffffffffffffffffffffffffff
      dup10
      and
        /* \"test/unit/ConstantProductPair.t.sol\":27739:27799  lToken0.transfer(address(_constantProductPair), lSwapAmount) */
      gas
      call
      dup1
      iszero
      tag_215
      jumpi
      tag_690
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_691:
      pop
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":27830:27908  _constantProductPair.swap(int256(lSwapAmount), true, address(this), bytes(\"\")) */
      tag_692
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      mload(0x40)
      tag_693
      dup2
      tag_2
      jump\t// in
    tag_693:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      dup5
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":27830:27908  _constantProductPair.swap(int256(lSwapAmount), true, address(this), bytes(\"\")) */
      swap5
      dup6
      dup1
      swap5
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xe12bd9d800000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":27830:27908  _constantProductPair.swap(int256(lSwapAmount), true, address(this), bytes(\"\")) */
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":27663:27667  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":27830:27908  _constantProductPair.swap(int256(lSwapAmount), true, address(this), bytes(\"\")) */
      dup5
      add
      tag_61
      jump\t// in
    tag_692:
      sub
      swap3
      gas
      call
      swap1
      dup2
      iszero
      tag_215
      jumpi
      dup4
      swap2
      tag_696
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_697:
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      mload(0x40)
      0xa9059cbb00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":27918:27977  lToken1.transfer(address(_constantProductPair), lAmountOut) */
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      swap1
      swap2
      and
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":27918:27977  lToken1.transfer(address(_constantProductPair), lAmountOut) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
      0x24
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      swap1
      mstore
      swap4
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup6
      dup1
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      0x44
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":27918:27977  lToken1.transfer(address(_constantProductPair), lAmountOut) */
    tag_698:
      sub
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      dup8
      0xffffffffffffffffffffffffffffffffffffffff
      dup9
      and
        /* \"test/unit/ConstantProductPair.t.sol\":27918:27977  lToken1.transfer(address(_constantProductPair), lAmountOut) */
      gas
      call
      swap1
      dup2
      iszero
      tag_841
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":28000:28078  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
      tag_701
        /* \"test/unit/ConstantProductPair.t.sol\":27918:27977  lToken1.transfer(address(_constantProductPair), lAmountOut) */
      swap6
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":27918:27977  lToken1.transfer(address(_constantProductPair), lAmountOut) */
      swap3
      tag_702
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_703:
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":28026:28045  -int256(lAmountOut) */
      tag_704
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":28026:28045  -int256(lAmountOut) */
      swap2
      tag_55
      jump\t// in
    tag_704:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      mload(0x40)
      swap2
      tag_705
      dup4
      tag_2
      jump\t// in
    tag_705:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      dup7
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup7
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":28000:28078  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
      dup1
      swap10
      dup2
      swap6
      dup3
      swap5
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xe12bd9d800000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":28000:28078  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
      dup5
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":27663:27667  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":28000:28078  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":28000:28078  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
      dup6
      add
      tag_62
      jump\t// in
    tag_701:
      sub
      swap3
      gas
      call
      swap4
      dup5
      iszero
      tag_215
      jumpi
      dup4
      swap5
      tag_708
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_709:
      pop
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":28089:28116  _constantProductPair.sync() */
      dup1
      extcodesize
      iszero
      tag_285
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup4
      dup1
      swap2
      0x04
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":28089:28116  _constantProductPair.sync() */
      dup1
      swap5
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xfff6cae900000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":28089:28116  _constantProductPair.sync() */
      dup4
      mstore
      gas
      call
      swap1
      dup2
      iszero
      tag_841
      jumpi
      dup5
      swap2
      tag_714
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_715:
      pop
      pop
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":28135:28183  lToken0.balanceOf(address(_constantProductPair)) */
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x70a0823100000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":28135:28183  lToken0.balanceOf(address(_constantProductPair)) */
      dup3
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":28135:28183  lToken0.balanceOf(address(_constantProductPair)) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      0xffffffffffffffffffffffffffffffffffffffff
      dup7
      and
        /* \"test/unit/ConstantProductPair.t.sol\":28135:28183  lToken0.balanceOf(address(_constantProductPair)) */
      gas
      staticcall
      swap1
      dup2
      iszero
      tag_841
      jumpi
      dup5
      swap2
      tag_718
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_719:
        /* \"test/unit/ConstantProductPair.t.sol\":28185:28204  INITIAL_MINT_AMOUNT */
      pop
      tag_720
      swap1
      tag_69
      jump\t// in
    tag_720:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":28224:28272  lToken1.balanceOf(address(_constantProductPair)) */
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x70a0823100000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":28224:28272  lToken1.balanceOf(address(_constantProductPair)) */
      dup3
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":28224:28272  lToken1.balanceOf(address(_constantProductPair)) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      0xffffffffffffffffffffffffffffffffffffffff
      dup8
      and
        /* \"test/unit/ConstantProductPair.t.sol\":28224:28272  lToken1.balanceOf(address(_constantProductPair)) */
      gas
      staticcall
      swap1
      dup2
      iszero
      tag_841
      jumpi
      dup5
      swap2
      tag_723
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_724:
        /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */
      pop
      0x056bc75e2d63100000
        /* \"lib/solmate/lib/ds-test/src/test.sol\":8798:8803  a < b */
      dup1
      dup3
      lt
        /* \"lib/solmate/lib/ds-test/src/test.sol\":8794:8994  if (a < b) {... */
      tag_725
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_726:
      pop
      pop
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":28313:28347  _constantProductPair.platformFee() */
      swap3
      dup4
      dup1
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x26232a2e00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":28313:28347  _constantProductPair.platformFee() */
      dup3
      mstore
      gas
      staticcall
      swap1
      dup2
      iszero
      tag_841
      jumpi
      dup5
      swap2
      tag_729
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_730:
        /* \"test/unit/ConstantProductPair.t.sol\":28349:28369  DEFAULT_PLATFORM_FEE */
      pop
      tag_731
      swap1
      tag_35
      jump\t// in
    tag_731:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":28428:28442  _platformFeeTo */
      0x15
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":28389:28444  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      dup1
      swap5
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x70a0823100000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":28389:28444  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":28389:28444  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      dup4
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":28389:28444  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      gas
      staticcall
      swap1
      dup2
      iszero
      tag_841
      jumpi
      dup5
      swap2
      tag_734
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_735:
        /* \"test/unit/ConstantProductPair.t.sol\":28380:28448  assertEq(_constantProductPair.balanceOf(address(_platformFeeTo)), 0) */
      pop
      tag_736
      swap1
      tag_36
      jump\t// in
    tag_736:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      0x40
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":28459:28499  _constantProductPair.burn(address(this)) */
      dup1
      swap5
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x89afcb4400000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":28459:28499  _constantProductPair.burn(address(this)) */
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":27663:27667  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":28459:28499  _constantProductPair.burn(address(this)) */
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":28459:28499  _constantProductPair.burn(address(this)) */
      gas
      call
      dup1
      iszero
      tag_841
      jumpi
      tag_739
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_740:
      pop
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":28428:28442  _platformFeeTo */
      0x15
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":28535:28590  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      dup1
      swap9
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x70a0823100000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":28535:28590  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":28535:28590  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      dup4
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":28535:28590  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      gas
      staticcall
      swap5
      dup6
      iszero
      tag_841
      jumpi
      dup5
      swap6
      tag_743
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_744:
        /* \"test/unit/ConstantProductPair.t.sol\":28600:28628  assertGt(lPlatformShares, 0) */
      pop
      tag_745
      dup6
      tag_68
      jump\t// in
    tag_745:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":28675:28683  _factory */
      0x13
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"test/unit/ConstantProductPair.t.sol\":28658:28685  vm.prank(address(_factory)) */
      extcodesize
      iszero
      tag_249
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":28658:28685  vm.prank(address(_factory)) */
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xca669fa700000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":28658:28685  vm.prank(address(_factory)) */
      dup3
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":28658:28685  vm.prank(address(_factory)) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":28658:28685  vm.prank(address(_factory)) */
      dup5
      dup2
        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":28658:28685  vm.prank(address(_factory)) */
      dup2
      dup4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"test/unit/ConstantProductPair.t.sol\":28658:28685  vm.prank(address(_factory)) */
      gas
      call
      swap1
      dup2
      iszero
      tag_201
      jumpi
      dup6
      swap2
      tag_750
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_751:
      pop
      pop
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":28695:28739  _constantProductPair.setCustomPlatformFee(0) */
      dup1
      extcodesize
      iszero
      tag_249
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup5
      dup1
      swap2
        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":28695:28739  _constantProductPair.setCustomPlatformFee(0) */
      dup1
      swap5
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xafb4a43b00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":28695:28739  _constantProductPair.setCustomPlatformFee(0) */
      dup4
      mstore
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":28695:28739  _constantProductPair.setCustomPlatformFee(0) */
      dup5
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":28695:28739  _constantProductPair.setCustomPlatformFee(0) */
      gas
      call
      swap1
      dup2
      iszero
      tag_201
      jumpi
      dup6
      swap2
      tag_756
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_757:
      pop
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      mload(0x40)
      0xa9059cbb00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":28800:28859  lToken0.transfer(address(_constantProductPair), lAmountOut) */
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      swap1
      swap2
      and
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":28800:28859  lToken0.transfer(address(_constantProductPair), lAmountOut) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
      0x24
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      swap1
      mstore
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      dup1
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      0x44
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":28800:28859  lToken0.transfer(address(_constantProductPair), lAmountOut) */
      sub
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      dup9
      0xffffffffffffffffffffffffffffffffffffffff
      dup9
      and
        /* \"test/unit/ConstantProductPair.t.sol\":28800:28859  lToken0.transfer(address(_constantProductPair), lAmountOut) */
      gas
      call
      swap1
      dup2
      iszero
      tag_201
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":28882:28959  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */
      tag_761
        /* \"test/unit/ConstantProductPair.t.sol\":28800:28859  lToken0.transfer(address(_constantProductPair), lAmountOut) */
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":28800:28859  lToken0.transfer(address(_constantProductPair), lAmountOut) */
      swap3
      tag_785
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_763:
      pop
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      mload(0x40)
      swap2
      tag_764
      dup4
      tag_2
      jump\t// in
    tag_764:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      dup8
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup8
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":28882:28959  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */
      dup1
      swap7
      dup2
      swap6
      dup3
      swap5
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xe12bd9d800000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":28882:28959  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */
      dup5
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":27663:27667  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":28882:28959  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":28882:28959  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */
      dup6
      add
      tag_62
      jump\t// in
    tag_761:
      sub
      swap3
      gas
      call
      swap1
      dup2
      iszero
      tag_841
      jumpi
      dup5
      swap2
      tag_767
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_768:
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      mload(0x40)
      0xa9059cbb00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":28969:29028  lToken1.transfer(address(_constantProductPair), lAmountOut) */
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      swap1
      swap2
      and
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":28969:29028  lToken1.transfer(address(_constantProductPair), lAmountOut) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
      0x24
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      swap1
      mstore
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      dup1
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      0x44
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":28969:29028  lToken1.transfer(address(_constantProductPair), lAmountOut) */
    tag_769:
      sub
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      dup9
      0xffffffffffffffffffffffffffffffffffffffff
      dup10
      and
        /* \"test/unit/ConstantProductPair.t.sol\":28969:29028  lToken1.transfer(address(_constantProductPair), lAmountOut) */
      gas
      call
      swap1
      dup2
      iszero
      tag_201
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":29051:29129  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
      tag_772
        /* \"test/unit/ConstantProductPair.t.sol\":28969:29028  lToken1.transfer(address(_constantProductPair), lAmountOut) */
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":28969:29028  lToken1.transfer(address(_constantProductPair), lAmountOut) */
      swap3
      tag_796
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_774:
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":29077:29096  -int256(lAmountOut) */
      tag_775
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":29077:29096  -int256(lAmountOut) */
      swap2
      tag_55
      jump\t// in
    tag_775:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      mload(0x40)
      swap2
      tag_764
      dup4
      tag_2
      jump\t// in
        /* \"test/unit/ConstantProductPair.t.sol\":29051:29129  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
    tag_772:
      sub
      swap3
      gas
      call
      swap1
      dup2
      iszero
      tag_841
      jumpi
      dup5
      swap2
      tag_779
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_780:
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      mload(0x40)
      0xa9059cbb00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":29139:29198  lToken0.transfer(address(_constantProductPair), lAmountOut) */
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      swap1
      swap2
      and
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":29139:29198  lToken0.transfer(address(_constantProductPair), lAmountOut) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
      0x24
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      swap1
      mstore
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      dup1
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      0x44
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":29139:29198  lToken0.transfer(address(_constantProductPair), lAmountOut) */
    tag_781:
      sub
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      dup9
      0xffffffffffffffffffffffffffffffffffffffff
      dup9
      and
        /* \"test/unit/ConstantProductPair.t.sol\":29139:29198  lToken0.transfer(address(_constantProductPair), lAmountOut) */
      gas
      call
      swap1
      dup2
      iszero
      tag_201
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":29221:29298  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */
      tag_784
        /* \"test/unit/ConstantProductPair.t.sol\":29139:29198  lToken0.transfer(address(_constantProductPair), lAmountOut) */
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":29139:29198  lToken0.transfer(address(_constantProductPair), lAmountOut) */
      swap3
      tag_785
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      pop
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      mload(0x40)
      swap2
      tag_764
      dup4
      tag_2
      jump\t// in
        /* \"test/unit/ConstantProductPair.t.sol\":29221:29298  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */
    tag_784:
      sub
      swap3
      gas
      call
      swap1
      dup2
      iszero
      tag_841
      jumpi
      dup5
      swap2
      tag_790
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_791:
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      mload(0x40)
      0xa9059cbb00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":29308:29367  lToken1.transfer(address(_constantProductPair), lAmountOut) */
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      swap1
      swap2
      and
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":29308:29367  lToken1.transfer(address(_constantProductPair), lAmountOut) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
      0x24
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      swap1
      mstore
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      dup1
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      0x44
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":29308:29367  lToken1.transfer(address(_constantProductPair), lAmountOut) */
    tag_792:
      sub
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      dup9
      0xffffffffffffffffffffffffffffffffffffffff
      dup10
      and
        /* \"test/unit/ConstantProductPair.t.sol\":29308:29367  lToken1.transfer(address(_constantProductPair), lAmountOut) */
      gas
      call
      swap1
      dup2
      iszero
      tag_201
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":29390:29468  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
      tag_795
        /* \"test/unit/ConstantProductPair.t.sol\":29308:29367  lToken1.transfer(address(_constantProductPair), lAmountOut) */
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":29308:29367  lToken1.transfer(address(_constantProductPair), lAmountOut) */
      swap3
      tag_796
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":29416:29435  -int256(lAmountOut) */
      tag_775
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":29416:29435  -int256(lAmountOut) */
      swap2
      tag_55
      jump\t// in
        /* \"test/unit/ConstantProductPair.t.sol\":29390:29468  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
    tag_795:
      sub
      swap3
      gas
      call
      swap1
      dup2
      iszero
      tag_841
      jumpi
      dup5
      swap2
      tag_802
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_803:
      pop
      dup4
      0x40
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":29497:29537  _constantProductPair.burn(address(this)) */
      dup1
      swap5
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x89afcb4400000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":29497:29537  _constantProductPair.burn(address(this)) */
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":27663:27667  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":29497:29537  _constantProductPair.burn(address(this)) */
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":29497:29537  _constantProductPair.burn(address(this)) */
      gas
      call
      dup1
      iszero
      tag_201
      jumpi
      tag_806
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_807:
      pop
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":28428:28442  _platformFeeTo */
      0x15
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":29556:29611  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      dup1
      swap5
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x70a0823100000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":29556:29611  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":29556:29611  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      dup4
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":29556:29611  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      gas
      staticcall
      dup1
      iszero
      tag_201
      jumpi
      dup7
      swap2
      dup7
      swap2
      tag_810
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_811:
        /* \"test/unit/ConstantProductPair.t.sol\":29613:29628  lPlatformShares */
      pop
      swap1
      tag_812
      swap2
      tag_39
      jump\t// in
    tag_812:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":28675:28683  _factory */
      0x13
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"test/unit/ConstantProductPair.t.sol\":29708:29735  vm.prank(address(_factory)) */
      extcodesize
      iszero
      tag_249
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":29708:29735  vm.prank(address(_factory)) */
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xca669fa700000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":29708:29735  vm.prank(address(_factory)) */
      dup3
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":29708:29735  vm.prank(address(_factory)) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":29708:29735  vm.prank(address(_factory)) */
      dup5
      dup2
        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":29708:29735  vm.prank(address(_factory)) */
      dup2
      dup4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"test/unit/ConstantProductPair.t.sol\":29708:29735  vm.prank(address(_factory)) */
      gas
      call
      swap1
      dup2
      iszero
      tag_201
      jumpi
      dup6
      swap2
      tag_817
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_818:
      pop
      pop
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":29745:29805  _constantProductPair.setCustomPlatformFee(type(uint256).max) */
      dup1
      extcodesize
      iszero
      tag_249
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup5
      dup1
      swap2
        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":29745:29805  _constantProductPair.setCustomPlatformFee(type(uint256).max) */
      dup1
      swap5
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xafb4a43b00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":29745:29805  _constantProductPair.setCustomPlatformFee(type(uint256).max) */
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":29787:29804  type(uint256).max */
      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":29745:29805  _constantProductPair.setCustomPlatformFee(type(uint256).max) */
      dup5
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":29745:29805  _constantProductPair.setCustomPlatformFee(type(uint256).max) */
      gas
      call
      swap1
      dup2
      iszero
      tag_201
      jumpi
      dup6
      swap2
      tag_823
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_824:
      pop
      pop
      0x40
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":29815:29855  _constantProductPair.burn(address(this)) */
      dup1
      swap8
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x89afcb4400000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":29815:29855  _constantProductPair.burn(address(this)) */
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":27663:27667  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":29815:29855  _constantProductPair.burn(address(this)) */
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":29815:29855  _constantProductPair.burn(address(this)) */
      gas
      call
      swap1
      dup2
      iszero
      tag_376
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":29865:29928  lToken0.transfer(address(_constantProductPair), lAmountOut / 2) */
      tag_827
        /* \"test/unit/ConstantProductPair.t.sol\":29815:29855  _constantProductPair.burn(address(this)) */
      swap5
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":29815:29855  _constantProductPair.burn(address(this)) */
      swap3
      tag_828
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_829:
      pop
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      swap1
      0x01
      shr
      swap3
      dup4
      swap2
      dup9
      0xffffffffffffffffffffffffffffffffffffffff
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":29865:29928  lToken0.transfer(address(_constantProductPair), lAmountOut / 2) */
      dup1
      swap10
      dup2
      swap7
      dup3
      swap6
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xa9059cbb00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":29865:29928  lToken0.transfer(address(_constantProductPair), lAmountOut / 2) */
      dup5
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":29865:29928  lToken0.transfer(address(_constantProductPair), lAmountOut / 2) */
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      0x20
      swap1
      swap4
      swap3
      swap2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      0x40
      dup3
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap6
      and
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      dup2
      mstore
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      jump
        /* \"test/unit/ConstantProductPair.t.sol\":29865:29928  lToken0.transfer(address(_constantProductPair), lAmountOut / 2) */
    tag_827:
      sub
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap4
      and
        /* \"test/unit/ConstantProductPair.t.sol\":29865:29928  lToken0.transfer(address(_constantProductPair), lAmountOut / 2) */
      gas
      call
      swap1
      dup2
      iszero
      tag_201
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":29951:30032  _constantProductPair.swap(int256(lAmountOut / 2), true, address(this), bytes(\"\")) */
      tag_832
        /* \"test/unit/ConstantProductPair.t.sol\":29865:29928  lToken0.transfer(address(_constantProductPair), lAmountOut / 2) */
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":29865:29928  lToken0.transfer(address(_constantProductPair), lAmountOut / 2) */
      swap3
      tag_833
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_834:
      pop
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      mload(0x40)
      swap2
      tag_835
      dup4
      tag_2
      jump\t// in
    tag_835:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      dup8
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup8
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":29951:30032  _constantProductPair.swap(int256(lAmountOut / 2), true, address(this), bytes(\"\")) */
      dup1
      swap8
      dup2
      swap6
      dup3
      swap5
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xe12bd9d800000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":29951:30032  _constantProductPair.swap(int256(lAmountOut / 2), true, address(this), bytes(\"\")) */
      dup5
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":27663:27667  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":29951:30032  _constantProductPair.swap(int256(lAmountOut / 2), true, address(this), bytes(\"\")) */
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":29951:30032  _constantProductPair.swap(int256(lAmountOut / 2), true, address(this), bytes(\"\")) */
      dup6
      add
      tag_62
      jump\t// in
    tag_832:
      sub
      swap3
      gas
      call
      swap2
      dup3
      iszero
      tag_841
      jumpi
      dup5
      swap3
      tag_838
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_839:
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      mload(0x40)
      0xa9059cbb00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":30042:30101  lToken1.transfer(address(_constantProductPair), lAmountOut) */
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      swap2
      dup3
      and
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":30042:30101  lToken1.transfer(address(_constantProductPair), lAmountOut) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
      0x24
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup5
      swap1
      mstore
      swap3
      swap2
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
      swap2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup5
      swap2
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      0x44
      swap2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup4
      swap2
      dup10
      swap2
      and
        /* \"test/unit/ConstantProductPair.t.sol\":30042:30101  lToken1.transfer(address(_constantProductPair), lAmountOut) */
      gas
      call
      swap1
      dup2
      iszero
      tag_841
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":30124:30202  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
      tag_843
        /* \"test/unit/ConstantProductPair.t.sol\":30042:30101  lToken1.transfer(address(_constantProductPair), lAmountOut) */
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":30042:30101  lToken1.transfer(address(_constantProductPair), lAmountOut) */
      swap3
      tag_844
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_845:
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":30150:30169  -int256(lAmountOut) */
      tag_846
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":30150:30169  -int256(lAmountOut) */
      swap2
      tag_55
      jump\t// in
    tag_846:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      mload(0x40)
      swap2
      tag_847
      dup4
      tag_2
      jump\t// in
    tag_847:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      dup7
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup7
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":30124:30202  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
      dup1
      swap7
      dup2
      swap6
      dup3
      swap5
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xe12bd9d800000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":30124:30202  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
      dup5
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":27663:27667  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":30124:30202  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":30124:30202  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
      dup6
      add
      tag_62
      jump\t// in
    tag_843:
      sub
      swap3
      gas
      call
      dup1
      iszero
      tag_215
      jumpi
      tag_850
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_851:
      pop
      dup2
      0x40
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":30351:30391  _constantProductPair.burn(address(this)) */
      dup1
      swap5
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x89afcb4400000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":30351:30391  _constantProductPair.burn(address(this)) */
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":27663:27667  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":30351:30391  _constantProductPair.burn(address(this)) */
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":30351:30391  _constantProductPair.burn(address(this)) */
      gas
      call
      dup1
      iszero
      tag_215
      jumpi
      tag_854
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_855:
      pop
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27402  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":28428:28442  _platformFeeTo */
      0x15
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":30422:30477  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      dup1
      swap5
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x70a0823100000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":30422:30477  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":30422:30477  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      dup4
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":30422:30477  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      gas
      staticcall
      dup1
      iszero
      tag_215
      jumpi
      dup3
      swap1
      dup5
      swap1
      tag_858
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_859:
        /* \"test/unit/ConstantProductPair.t.sol\":30422:30495  _constantProductPair.balanceOf(address(_platformFeeTo)) - lPlatformShares */
      tag_860
      swap3
      pop
      tag_44
      jump\t// in
    tag_860:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":10779:10785  a >= b */
      swap1
      dup1
      dup3
      lt
      iszero
        /* \"lib/solmate/lib/ds-test/src/test.sol\":10775:10975  if (a >= b) {... */
      tag_861
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      dup1
      return
        /* \"lib/solmate/lib/ds-test/src/test.sol\":10775:10975  if (a >= b) {... */
    tag_861:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":10806:10846  log(\"Error: a < b not satisfied [uint]\") */
      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x80
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      mstore
      0x21
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      add
      mstore
      0x4572726f723a2061203c2062206e6f7420736174697366696564205b75696e74
      0x40
      dup3
      add
      mstore
      0x5d00000000000000000000000000000000000000000000000000000000000000
      0x60
      dup3
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":10806:10846  log(\"Error: a < b not satisfied [uint]\") */
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      swap2
      0x40
      dup4
      mstore
      tag_863
      0x40
      dup5
      add
      0x40
      swap1
      0x09
      dup2
      mstore
      0x202056616c756520610000000000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_863:
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup5
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":10865:10895  log_named_uint(\"  Value a\", a) */
      dup3
      0xb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8
      swap4
      dup5
      swap3
      sub
      swap1
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      dup1
      swap2
      0x40
      dup3
      mstore
      tag_864
      0x40
      dup4
      add
      0x40
      swap1
      0x09
      dup2
      mstore
      0x202056616c756520620000000000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_864:
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup4
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":10914:10944  log_named_uint(\"  Value b\", b) */
      sub
      swap1
      log1
      tag_865
      tag_42
      jump\t// in
    tag_865:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":10775:10975  if (a >= b) {... */
      codesize
      dup1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      dup1
      return
        /* \"test/unit/ConstantProductPair.t.sol\":30422:30477  _constantProductPair.balanceOf(address(_platformFeeTo)) */
    tag_858:
      pop
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":30422:30477  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      dup2
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":30422:30477  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      gt
      tag_866
      jumpi
    tag_867:
      dup2
      tag_868
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":30422:30477  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      swap4
      dup4
      tag_6
      jump\t// in
    tag_868:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":30422:30495  _constantProductPair.balanceOf(address(_platformFeeTo)) - lPlatformShares */
      tag_860
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap2
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":30422:30477  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      jump(tag_859)
    tag_866:
      returndatasize
      swap2
      pop
      jump(tag_867)
        /* \"test/unit/ConstantProductPair.t.sol\":30351:30391  _constantProductPair.burn(address(this)) */
    tag_854:
      tag_871
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40
        /* \"test/unit/ConstantProductPair.t.sol\":30351:30391  _constantProductPair.burn(address(this)) */
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40
        /* \"test/unit/ConstantProductPair.t.sol\":30351:30391  _constantProductPair.burn(address(this)) */
      gt
      tag_407
      jumpi
      tag_409
      dup2
      dup4
      tag_6
      jump\t// in
    tag_871:
      pop
      jump(tag_855)
        /* \"test/unit/ConstantProductPair.t.sol\":30124:30202  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
    tag_850:
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":30124:30202  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
      swap1
      dup2
      returndatasize
      dup4
      gt
      tag_875
      jumpi
    tag_876:
      tag_877
      dup2
      dup4
      tag_6
      jump\t// in
    tag_877:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":30124:30202  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
      codesize
      jump(tag_851)
    tag_875:
      pop
      returndatasize
      jump(tag_876)
        /* \"test/unit/ConstantProductPair.t.sol\":30042:30101  lToken1.transfer(address(_constantProductPair), lAmountOut) */
    tag_844:
      tag_880
      swap1
      dup4
      returndatasize
      dup6
      gt
      tag_547
      jumpi
      tag_549
      dup2
      dup4
      tag_6
      jump\t// in
    tag_880:
      pop
      codesize
      jump(tag_845)
    tag_841:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      returndatasize
      dup7
      dup3
      returndatacopy
      returndatasize
      swap1
      revert
        /* \"test/unit/ConstantProductPair.t.sol\":29951:30032  _constantProductPair.swap(int256(lAmountOut / 2), true, address(this), bytes(\"\")) */
    tag_838:
      swap2
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":29951:30032  _constantProductPair.swap(int256(lAmountOut / 2), true, address(this), bytes(\"\")) */
      dup3
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":29951:30032  _constantProductPair.swap(int256(lAmountOut / 2), true, address(this), bytes(\"\")) */
      gt
      tag_884
      jumpi
    tag_885:
      dup2
      tag_886
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":29951:30032  _constantProductPair.swap(int256(lAmountOut / 2), true, address(this), bytes(\"\")) */
      swap4
      dup4
      tag_6
      jump\t// in
    tag_886:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
      swap1
      mload
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":29951:30032  _constantProductPair.swap(int256(lAmountOut / 2), true, address(this), bytes(\"\")) */
      jump(tag_839)
    tag_884:
      returndatasize
      swap2
      pop
      jump(tag_885)
        /* \"test/unit/ConstantProductPair.t.sol\":29865:29928  lToken0.transfer(address(_constantProductPair), lAmountOut / 2) */
    tag_833:
      tag_889
      swap1
      dup4
      returndatasize
      dup6
      gt
      tag_547
      jumpi
      tag_549
      dup2
      dup4
      tag_6
      jump\t// in
    tag_889:
      pop
      codesize
      jump(tag_834)
        /* \"test/unit/ConstantProductPair.t.sol\":29815:29855  _constantProductPair.burn(address(this)) */
    tag_828:
      tag_893
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40
        /* \"test/unit/ConstantProductPair.t.sol\":29815:29855  _constantProductPair.burn(address(this)) */
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40
        /* \"test/unit/ConstantProductPair.t.sol\":29815:29855  _constantProductPair.burn(address(this)) */
      gt
      tag_407
      jumpi
      tag_409
      dup2
      dup4
      tag_6
      jump\t// in
    tag_893:
      pop
      jump(tag_829)
        /* \"test/unit/ConstantProductPair.t.sol\":29745:29805  _constantProductPair.setCustomPlatformFee(type(uint256).max) */
    tag_823:
      tag_897
      swap1
      tag_1
      jump\t// in
    tag_897:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_285
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":29745:29805  _constantProductPair.setCustomPlatformFee(type(uint256).max) */
      dup4
      codesize
      jump(tag_824)
        /* \"test/unit/ConstantProductPair.t.sol\":29708:29735  vm.prank(address(_factory)) */
    tag_817:
      tag_900
      swap1
      tag_1
      jump\t// in
    tag_900:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_285
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":29708:29735  vm.prank(address(_factory)) */
      dup4
      codesize
      jump(tag_818)
        /* \"test/unit/ConstantProductPair.t.sol\":29556:29611  _constantProductPair.balanceOf(address(_platformFeeTo)) */
    tag_810:
      swap6
      pop
      pop
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":29556:29611  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      dup5
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":29556:29611  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      gt
      tag_903
      jumpi
    tag_904:
      dup2
      tag_905
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":29556:29611  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      swap4
      dup4
      tag_6
      jump\t// in
    tag_905:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":29613:29628  lPlatformShares */
      tag_812
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup6
      dup8
      swap6
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":29556:29611  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      swap1
      swap2
      jump(tag_811)
    tag_903:
      returndatasize
      swap2
      pop
      jump(tag_904)
        /* \"test/unit/ConstantProductPair.t.sol\":29497:29537  _constantProductPair.burn(address(this)) */
    tag_806:
      tag_908
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40
        /* \"test/unit/ConstantProductPair.t.sol\":29497:29537  _constantProductPair.burn(address(this)) */
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40
        /* \"test/unit/ConstantProductPair.t.sol\":29497:29537  _constantProductPair.burn(address(this)) */
      gt
      tag_407
      jumpi
      tag_409
      dup2
      dup4
      tag_6
      jump\t// in
    tag_908:
      pop
      jump(tag_807)
        /* \"test/unit/ConstantProductPair.t.sol\":29390:29468  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
    tag_802:
      swap4
      pop
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":29390:29468  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
      dup4
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":29390:29468  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
      gt
      tag_912
      jumpi
    tag_913:
      dup2
      tag_914
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":29390:29468  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
      swap4
      dup4
      tag_6
      jump\t// in
    tag_914:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
      dup5
      swap3
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":29390:29468  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
      codesize
      jump(tag_803)
    tag_912:
      returndatasize
      swap2
      pop
      jump(tag_913)
        /* \"test/unit/ConstantProductPair.t.sol\":29308:29367  lToken1.transfer(address(_constantProductPair), lAmountOut) */
    tag_796:
      tag_917
      swap1
      dup4
      returndatasize
      dup6
      gt
      tag_547
      jumpi
      tag_549
      dup2
      dup4
      tag_6
      jump\t// in
    tag_917:
      pop
      codesize
      jump(tag_774)
        /* \"test/unit/ConstantProductPair.t.sol\":29221:29298  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */
    tag_790:
      swap4
      pop
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":29221:29298  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */
      dup4
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":29221:29298  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */
      gt
      tag_921
      jumpi
    tag_922:
      dup2
      tag_923
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":29221:29298  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */
      swap4
      dup4
      tag_6
      jump\t// in
    tag_923:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":29308:29367  lToken1.transfer(address(_constantProductPair), lAmountOut) */
      tag_792
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup6
      swap4
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":29221:29298  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */
      swap1
      jump(tag_791)
    tag_921:
      returndatasize
      swap2
      pop
      jump(tag_922)
        /* \"test/unit/ConstantProductPair.t.sol\":29139:29198  lToken0.transfer(address(_constantProductPair), lAmountOut) */
    tag_785:
      tag_926
      swap1
      dup4
      returndatasize
      dup6
      gt
      tag_547
      jumpi
      tag_549
      dup2
      dup4
      tag_6
      jump\t// in
    tag_926:
      pop
      codesize
      jump(tag_763)
        /* \"test/unit/ConstantProductPair.t.sol\":29051:29129  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
    tag_779:
      swap4
      pop
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":29051:29129  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
      dup4
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":29051:29129  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
      gt
      tag_930
      jumpi
    tag_931:
      dup2
      tag_932
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":29051:29129  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
      swap4
      dup4
      tag_6
      jump\t// in
    tag_932:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":29139:29198  lToken0.transfer(address(_constantProductPair), lAmountOut) */
      tag_781
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup6
      swap4
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":29051:29129  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
      swap1
      jump(tag_780)
    tag_930:
      returndatasize
      swap2
      pop
      jump(tag_931)
        /* \"test/unit/ConstantProductPair.t.sol\":28882:28959  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */
    tag_767:
      swap4
      pop
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":28882:28959  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */
      dup4
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":28882:28959  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */
      gt
      tag_939
      jumpi
    tag_940:
      dup2
      tag_941
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":28882:28959  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */
      swap4
      dup4
      tag_6
      jump\t// in
    tag_941:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":28969:29028  lToken1.transfer(address(_constantProductPair), lAmountOut) */
      tag_769
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup6
      swap4
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":28882:28959  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */
      swap1
      jump(tag_768)
    tag_939:
      returndatasize
      swap2
      pop
      jump(tag_940)
        /* \"test/unit/ConstantProductPair.t.sol\":28695:28739  _constantProductPair.setCustomPlatformFee(0) */
    tag_756:
      tag_948
      swap1
      tag_1
      jump\t// in
    tag_948:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_285
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":28695:28739  _constantProductPair.setCustomPlatformFee(0) */
      dup4
      codesize
      jump(tag_757)
        /* \"test/unit/ConstantProductPair.t.sol\":28658:28685  vm.prank(address(_factory)) */
    tag_750:
      tag_951
      swap1
      tag_1
      jump\t// in
    tag_951:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_285
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":28658:28685  vm.prank(address(_factory)) */
      dup4
      codesize
      jump(tag_751)
        /* \"test/unit/ConstantProductPair.t.sol\":28535:28590  _constantProductPair.balanceOf(address(_platformFeeTo)) */
    tag_743:
      swap4
      pop
      swap4
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":28535:28590  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      dup4
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":28535:28590  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      gt
      tag_954
      jumpi
    tag_955:
      dup2
      tag_956
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":28535:28590  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      swap4
      dup4
      tag_6
      jump\t// in
    tag_956:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
      dup5
      swap3
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":28535:28590  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      swap4
      codesize
      jump(tag_744)
    tag_954:
      returndatasize
      swap2
      pop
      jump(tag_955)
        /* \"test/unit/ConstantProductPair.t.sol\":28459:28499  _constantProductPair.burn(address(this)) */
    tag_739:
      tag_959
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40
        /* \"test/unit/ConstantProductPair.t.sol\":28459:28499  _constantProductPair.burn(address(this)) */
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40
        /* \"test/unit/ConstantProductPair.t.sol\":28459:28499  _constantProductPair.burn(address(this)) */
      gt
      tag_407
      jumpi
      tag_409
      dup2
      dup4
      tag_6
      jump\t// in
    tag_959:
      pop
      jump(tag_740)
        /* \"test/unit/ConstantProductPair.t.sol\":28389:28444  _constantProductPair.balanceOf(address(_platformFeeTo)) */
    tag_734:
      swap4
      pop
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":28389:28444  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      dup4
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":28389:28444  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      gt
      tag_963
      jumpi
    tag_964:
      dup2
      tag_965
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":28389:28444  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      swap4
      dup4
      tag_6
      jump\t// in
    tag_965:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":28380:28448  assertEq(_constantProductPair.balanceOf(address(_platformFeeTo)), 0) */
      tag_736
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup6
      swap4
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":28389:28444  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      swap1
      jump(tag_735)
    tag_963:
      returndatasize
      swap2
      pop
      jump(tag_964)
        /* \"test/unit/ConstantProductPair.t.sol\":28313:28347  _constantProductPair.platformFee() */
    tag_729:
      swap4
      pop
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":28313:28347  _constantProductPair.platformFee() */
      dup4
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":28313:28347  _constantProductPair.platformFee() */
      gt
      tag_968
      jumpi
    tag_969:
      dup2
      tag_970
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":28313:28347  _constantProductPair.platformFee() */
      swap4
      dup4
      tag_6
      jump\t// in
    tag_970:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":28349:28369  DEFAULT_PLATFORM_FEE */
      tag_731
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup6
      swap4
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":28313:28347  _constantProductPair.platformFee() */
      swap1
      jump(tag_730)
    tag_968:
      returndatasize
      swap2
      pop
      jump(tag_969)
        /* \"lib/solmate/lib/ds-test/src/test.sol\":8794:8994  if (a < b) {... */
    tag_725:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":8824:8865  log(\"Error: a >= b not satisfied [uint]\") */
      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x80
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      mstore
      0x22
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      add
      mstore
      0x4572726f723a2061203e3d2062206e6f7420736174697366696564205b75696e
      0x40
      dup3
      add
      mstore
      0x745d000000000000000000000000000000000000000000000000000000000000
      0x60
      dup3
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":8824:8865  log(\"Error: a >= b not satisfied [uint]\") */
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      swap2
      0x40
      dup4
      mstore
      tag_973
      0x40
      dup5
      add
      0x40
      swap1
      0x09
      dup2
      mstore
      0x202056616c756520610000000000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_973:
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup5
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":8884:8914  log_named_uint(\"  Value a\", a) */
      dup3
      0xb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8
      swap4
      dup5
      swap3
      sub
      swap1
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      dup1
      swap2
      0x40
      dup3
      mstore
      tag_974
      0x40
      dup4
      add
      0x40
      swap1
      0x09
      dup2
      mstore
      0x202056616c756520620000000000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_974:
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup4
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":8933:8963  log_named_uint(\"  Value b\", b) */
      sub
      swap1
      log1
      tag_975
      tag_42
      jump\t// in
    tag_975:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":8794:8994  if (a < b) {... */
      codesize
      dup1
      jump(tag_726)
        /* \"test/unit/ConstantProductPair.t.sol\":28224:28272  lToken1.balanceOf(address(_constantProductPair)) */
    tag_723:
      swap4
      pop
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":28224:28272  lToken1.balanceOf(address(_constantProductPair)) */
      dup4
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":28224:28272  lToken1.balanceOf(address(_constantProductPair)) */
      gt
      tag_976
      jumpi
    tag_977:
      dup2
      tag_978
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":28224:28272  lToken1.balanceOf(address(_constantProductPair)) */
      swap4
      dup4
      tag_6
      jump\t// in
    tag_978:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
      dup5
      swap3
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":28224:28272  lToken1.balanceOf(address(_constantProductPair)) */
      codesize
      jump(tag_724)
    tag_976:
      returndatasize
      swap2
      pop
      jump(tag_977)
        /* \"test/unit/ConstantProductPair.t.sol\":28135:28183  lToken0.balanceOf(address(_constantProductPair)) */
    tag_718:
      swap4
      pop
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":28135:28183  lToken0.balanceOf(address(_constantProductPair)) */
      dup4
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":28135:28183  lToken0.balanceOf(address(_constantProductPair)) */
      gt
      tag_981
      jumpi
    tag_982:
      dup2
      tag_983
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":28135:28183  lToken0.balanceOf(address(_constantProductPair)) */
      swap4
      dup4
      tag_6
      jump\t// in
    tag_983:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":28185:28204  INITIAL_MINT_AMOUNT */
      tag_720
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup6
      swap4
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":28135:28183  lToken0.balanceOf(address(_constantProductPair)) */
      swap1
      jump(tag_719)
    tag_981:
      returndatasize
      swap2
      pop
      jump(tag_982)
        /* \"test/unit/ConstantProductPair.t.sol\":28089:28116  _constantProductPair.sync() */
    tag_714:
      tag_986
      swap1
      tag_1
      jump\t// in
    tag_986:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_291
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":28089:28116  _constantProductPair.sync() */
      dup3
      codesize
      jump(tag_715)
        /* \"test/unit/ConstantProductPair.t.sol\":28000:28078  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
    tag_708:
      swap3
      pop
      swap3
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":28000:28078  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
      dup3
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":28000:28078  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
      gt
      tag_989
      jumpi
    tag_990:
      dup2
      tag_991
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":28000:28078  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
      swap4
      dup4
      tag_6
      jump\t// in
    tag_991:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
      dup4
      swap2
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":28000:28078  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
      swap3
      codesize
      jump(tag_709)
    tag_989:
      returndatasize
      swap2
      pop
      jump(tag_990)
        /* \"test/unit/ConstantProductPair.t.sol\":27918:27977  lToken1.transfer(address(_constantProductPair), lAmountOut) */
    tag_702:
      tag_994
      swap1
      dup4
      returndatasize
      dup6
      gt
      tag_547
      jumpi
      tag_549
      dup2
      dup4
      tag_6
      jump\t// in
    tag_994:
      pop
      codesize
      jump(tag_703)
        /* \"test/unit/ConstantProductPair.t.sol\":27830:27908  _constantProductPair.swap(int256(lSwapAmount), true, address(this), bytes(\"\")) */
    tag_696:
      swap3
      pop
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":27830:27908  _constantProductPair.swap(int256(lSwapAmount), true, address(this), bytes(\"\")) */
      dup3
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":27830:27908  _constantProductPair.swap(int256(lSwapAmount), true, address(this), bytes(\"\")) */
      gt
      tag_998
      jumpi
    tag_999:
      dup2
      tag_1000
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":27830:27908  _constantProductPair.swap(int256(lSwapAmount), true, address(this), bytes(\"\")) */
      swap4
      dup4
      tag_6
      jump\t// in
    tag_1000:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
      swap1
      mload
      dup4
      swap2
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":27918:27977  lToken1.transfer(address(_constantProductPair), lAmountOut) */
      tag_698
        /* \"test/unit/ConstantProductPair.t.sol\":27830:27908  _constantProductPair.swap(int256(lSwapAmount), true, address(this), bytes(\"\")) */
      jump(tag_697)
    tag_998:
      returndatasize
      swap2
      pop
      jump(tag_999)
        /* \"test/unit/ConstantProductPair.t.sol\":27739:27799  lToken0.transfer(address(_constantProductPair), lSwapAmount) */
    tag_690:
      tag_1003
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":27739:27799  lToken0.transfer(address(_constantProductPair), lSwapAmount) */
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":27739:27799  lToken0.transfer(address(_constantProductPair), lSwapAmount) */
      gt
      tag_547
      jumpi
      tag_549
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1003:
      pop
      codesize
      jump(tag_691)
        /* \"lib/forge-std/src/StdStorage.sol\":10259:10283  vm.store(who, slot, set) */
    tag_684:
      tag_1007
      swap1
      tag_1
      jump\t// in
    tag_1007:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_255
      jumpi
        /* \"lib/forge-std/src/StdStorage.sol\":10259:10283  vm.store(who, slot, set) */
      dup2
      codesize
      jump(tag_685)
        /* \"lib/forge-std/src/StdStorage.sol\":10032:10250  if (fdat != curr) {... */
    tag_677:
        /* \"lib/forge-std/src/StdStorage.sol\":10064:10239  require(... */
      tag_1010
      tag_108
      jump\t// in
    tag_1010:
        /* \"lib/forge-std/src/StdStorage.sol\":10032:10250  if (fdat != curr) {... */
      jump(tag_678)
        /* \"lib/forge-std/src/StdStorage.sol\":10003:10021  vm.load(who, slot) */
    tag_675:
      swap6
      pop
      swap1
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"lib/forge-std/src/StdStorage.sol\":10003:10021  vm.load(who, slot) */
      dup6
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"lib/forge-std/src/StdStorage.sol\":10003:10021  vm.load(who, slot) */
      gt
      tag_1011
      jumpi
    tag_1012:
      dup2
      tag_1013
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"lib/forge-std/src/StdStorage.sol\":10003:10021  vm.load(who, slot) */
      swap4
      dup4
      tag_6
      jump\t// in
    tag_1013:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
      dup7
      swap5
      mload
        /* \"lib/forge-std/src/StdStorage.sol\":10003:10021  vm.load(who, slot) */
      swap1
      codesize
      jump(tag_676)
    tag_1011:
      returndatasize
      swap2
      pop
      jump(tag_1012)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_669:
        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup8
      0x4e487b7100000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      mstore(0x04, 0x11)
      revert
        /* \"lib/forge-std/src/StdStorage.sol\":9607:9717  if (!self.finds[who][fsig][keccak256(abi.encodePacked(ins, field_depth))]) {... */
    tag_663:
        /* \"lib/forge-std/src/StdStorage.sol\":7670:7695  stdStorageSafe.find(self) */
      tag_1016
      tag_111
      jump\t// in
    tag_1016:
      pop
        /* \"lib/forge-std/src/StdStorage.sol\":9607:9717  if (!self.finds[who][fsig][keccak256(abi.encodePacked(ins, field_depth))]) {... */
      jump(tag_664)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_654:
        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup5
      0x4e487b7100000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      mstore(0x04, 0x32)
      revert
    tag_652:
        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup5
      0x4e487b7100000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      mstore(0x04, 0x41)
      revert
        /* \"test/unit/ConstantProductPair.t.sol\":27538:27567  _constantProductPair.token1() */
    tag_646:
      tag_1017
      swap2
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":27538:27567  _constantProductPair.token1() */
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":27538:27567  _constantProductPair.token1() */
      gt
      tag_1018
      jumpi
    tag_1019:
      tag_1020
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1020:
      dup2
      add
      swap1
      tag_59
      jump\t// in
    tag_1017:
      codesize
      jump(tag_647)
    tag_1018:
      pop
      returndatasize
      jump(tag_1019)
        /* \"test/unit/ConstantProductPair.t.sol\":27483:27512  _constantProductPair.token0() */
    tag_642:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":27483:27512  _constantProductPair.token0() */
      swap2
      swap3
      pop
      tag_1021
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":27483:27512  _constantProductPair.token0() */
      swap2
      dup3
      returndatasize
      dup5
      gt
      tag_1018
      jumpi
      tag_1020
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1021:
      swap3
      swap2
      pop
      jump(tag_643)
        /* \"test/unit/ConstantProductPair.t.sol\":27430:27457  _constantProductPair.sync() */
    tag_638:
      tag_1025
      swap1
      tag_1
      jump\t// in
    tag_1025:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_196
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":27430:27457  _constantProductPair.sync() */
      dup1
      codesize
      jump(tag_639)
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
    tag_631:
      pop
      0x20
      dup2
      jumpi(tag_1028, gt(0x20, returndatasize))
    tag_1029:
      dup2
      tag_1030
      0x20
      swap4
      dup4
      tag_6
      jump\t// in
    tag_1030:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":27373:27420  assertGt(_constantProductPair.platformFee(), 0) */
      tag_633
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":27382:27416  _constantProductPair.platformFee() */
      jump(tag_632)
    tag_1028:
      returndatasize
      swap2
      pop
      jump(tag_1029)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_178:
      pop
      jumpi(tag_196, callvalue)
      dup1
      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
      slt
      tag_196
      jumpi
      0x20
      mload(0x40)
        /* \"test/__fixtures/BaseTest.sol\":924:931  250_000 */
      0x03d090
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      mstore
      return
    tag_176:
      pop
      jumpi(tag_196, callvalue)
      dup1
      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
      slt
      tag_196
      jumpi
      0x20
      mload(0x40)
        /* \"test/__fixtures/BaseTest.sol\":1048:1057  0.0005e18 */
      0x01c6bf52634000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      mstore
      return
    tag_174:
      pop
      jumpi(tag_196, callvalue)
      dup1
      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
      slt
      tag_196
      jumpi
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":9836:9842  _alice */
      dup2
      0x16
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap2
      dup1
      dup4
      sload
      and
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"test/unit/ConstantProductPair.t.sol\":9822:9843  vm.startPrank(_alice) */
      dup1
      extcodesize
      iszero
      tag_285
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup4
      dup1
      swap3
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":9822:9843  vm.startPrank(_alice) */
      swap3
      dup4
      swap2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x06447d5600000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":9822:9843  vm.startPrank(_alice) */
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":9822:9843  vm.startPrank(_alice) */
      dup4
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":9822:9843  vm.startPrank(_alice) */
      swap8
      dup9
      swap3
      gas
      call
      dup1
      iszero
      tag_219
      jumpi
      tag_1049
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1050:
      pop
      pop
      dup1
        /* \"test/unit/ConstantProductPair.t.sol\":9879:9899  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      dup2
      dup5
      sload
      and
      swap1
      mload(0x40)
      swap5
      dup7
      0x70a0823100000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":9879:9917  _constantProductPair.balanceOf(_alice) */
      swap5
      dup6
      dup9
      mstore
      dup5
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":9879:9917  _constantProductPair.balanceOf(_alice) */
      dup10
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":9879:9917  _constantProductPair.balanceOf(_alice) */
      swap7
      dup8
      dup10
      dup3
      dup2
      dup9
      gas
      staticcall
      swap9
      dup10
      iszero
      tag_215
      jumpi
      dup4
      swap10
      tag_1053
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1054:
      pop
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":9957:9991  _constantProductPair.totalSupply() */
      swap7
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x18160ddd00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":9957:9991  _constantProductPair.totalSupply() */
      dup9
      mstore
      dup9
      dup9
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":9957:9991  _constantProductPair.totalSupply() */
      dup2
      dup10
      gas
      staticcall
      swap8
      dup9
      iszero
      tag_841
      jumpi
      dup5
      swap9
      tag_1057
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1058:
      pop
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":10044:10078  _constantProductPair.getReserves() */
      swap7
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x0902f1ac00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":10044:10078  _constantProductPair.getReserves() */
      dup9
      mstore
      0x80
      dup9
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":10044:10078  _constantProductPair.getReserves() */
      dup2
      dup11
      gas
      staticcall
      swap7
      dup8
      iszero
      tag_201
      jumpi
      dup6
      swap9
      dup7
      swap9
      tag_1061
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1062:
      pop
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":10165:10203  _constantProductPair.balanceOf(_alice) */
      swap2
      dup4
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":10165:10203  _constantProductPair.balanceOf(_alice) */
      dup4
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":10165:10203  _constantProductPair.balanceOf(_alice) */
      dup11
      dup3
      dup6
      dup2
      dup5
      gas
      staticcall
      dup1
      iszero
      tag_376
      jumpi
      dup12
      swap3
      dup8
      swap2
      tag_1065
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1066:
      pop
      mload(0x40)
      0xa9059cbb00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":10104:10204  _constantProductPair.transfer(address(_constantProductPair), _constantProductPair.balanceOf(_alice)) */
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      dup4
      and
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":10104:10204  _constantProductPair.transfer(address(_constantProductPair), _constantProductPair.balanceOf(_alice)) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
      0x24
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap2
      swap1
      swap2
      mstore
      swap2
      swap1
      dup3
      swap1
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      0x44
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      swap1
      dup10
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":10104:10204  _constantProductPair.transfer(address(_constantProductPair), _constantProductPair.balanceOf(_alice)) */
      gas
      call
      dup1
      iszero
      tag_201
      jumpi
      tag_1070
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1071:
      pop
      dup4
      0x40
      dup5
        /* \"test/unit/ConstantProductPair.t.sol\":9879:9899  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      dup5
      dup7
      dup10
      sload
      and
      dup4
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":10214:10247  _constantProductPair.burn(_alice) */
      swap5
      dup6
      swap4
      dup5
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x89afcb4400000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":10214:10247  _constantProductPair.burn(_alice) */
      dup5
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":10214:10247  _constantProductPair.burn(_alice) */
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":10214:10247  _constantProductPair.burn(_alice) */
      gas
      call
      dup1
      iszero
      tag_201
      jumpi
      tag_1074
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1075:
      pop
      dup3
        /* \"test/unit/ConstantProductPair.t.sol\":9879:9899  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      swap5
      dup10
      dup5
      dup3
      sload
      and
      dup5
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":10285:10323  _constantProductPair.balanceOf(_alice) */
      dup1
      swap10
      dup2
      swap4
      dup8
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":10285:10323  _constantProductPair.balanceOf(_alice) */
      dup4
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":10285:10323  _constantProductPair.balanceOf(_alice) */
      gas
      staticcall
      dup1
      iszero
      tag_201
      jumpi
      dup11
      swap7
      dup7
      swap2
      tag_1078
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1079:
        /* \"test/unit/ConstantProductPair.t.sol\":10276:10327  assertEq(_constantProductPair.balanceOf(_alice), 0) */
      pop
      tag_1080
      swap1
      tag_36
      jump\t// in
    tag_1080:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup4
        /* \"test/unit/ConstantProductPair.t.sol\":10374:10426  _getToken0Token1(address(_tokenA), address(_tokenB)) */
      tag_1081
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":10399:10406  _tokenA */
      0x19
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      dup3
        /* \"test/unit/ConstantProductPair.t.sol\":10417:10424  _tokenB */
      0x1a
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":10374:10426  _getToken0Token1(address(_tokenA), address(_tokenB)) */
      swap1
      tag_49
      jump\t// in
    tag_1081:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap8
      swap1
      dup6
      dup4
      dup6
      sload
      and
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":10445:10491  ConstantProductPair(lToken0).balanceOf(_alice) */
      swap5
      dup6
      swap4
      dup5
      swap3
      dup10
      dup5
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":10445:10491  ConstantProductPair(lToken0).balanceOf(_alice) */
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      and
        /* \"test/unit/ConstantProductPair.t.sol\":10445:10491  ConstantProductPair(lToken0).balanceOf(_alice) */
      gas
      staticcall
      swap1
      dup2
      iszero
      tag_376
      jumpi
      dup13
      dup12
      swap2
      dup14
      swap9
      swap4
      tag_1084
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1085:
      pop
      swap2
        /* \"test/unit/ConstantProductPair.t.sol\":10493:10542  lLpTokenBalance * lReserve0 / lLpTokenTotalSupply */
      tag_1086
      tag_1087
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":10493:10520  lLpTokenBalance * lReserve0 */
      tag_1088
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup10
      swap7
      swap6
      0xffffffffffffffffffffffffff
      swap15
      dup16
      and
        /* \"test/unit/ConstantProductPair.t.sol\":10493:10520  lLpTokenBalance * lReserve0 */
      swap1
      tag_17
      jump\t// in
    tag_1088:
        /* \"test/unit/ConstantProductPair.t.sol\":10493:10542  lLpTokenBalance * lReserve0 / lLpTokenTotalSupply */
      tag_21
      jump\t// in
    tag_1086:
      swap1
      tag_39
      jump\t// in
    tag_1087:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      swap3
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":10562:10608  ConstantProductPair(lToken1).balanceOf(_alice) */
      swap6
      dup7
      swap5
      dup6
      swap4
      dup5
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":10562:10608  ConstantProductPair(lToken1).balanceOf(_alice) */
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      and
        /* \"test/unit/ConstantProductPair.t.sol\":10562:10608  ConstantProductPair(lToken1).balanceOf(_alice) */
      gas
      staticcall
      swap5
      dup6
      iszero
      tag_1089
      jumpi
      dup8
      swap6
      tag_1091
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1092:
      pop
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":10610:10659  lLpTokenBalance * lReserve1 / lLpTokenTotalSupply */
      tag_316
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap5
        /* \"test/unit/ConstantProductPair.t.sol\":10610:10659  lLpTokenBalance * lReserve1 / lLpTokenTotalSupply */
      tag_1086
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap4
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":10610:10637  lLpTokenBalance * lReserve1 */
      tag_1088
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap3
      and
        /* \"test/unit/ConstantProductPair.t.sol\":10610:10637  lLpTokenBalance * lReserve1 */
      swap1
      tag_17
      jump\t// in
        /* \"test/unit/ConstantProductPair.t.sol\":10562:10608  ConstantProductPair(lToken1).balanceOf(_alice) */
    tag_1091:
      swap1
      dup1
      swap3
      swap6
      pop
      dup2
      swap5
      swap4
      swap5
      returndatasize
      dup4
      gt
      tag_1096
      jumpi
    tag_1097:
      tag_1098
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1098:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
      mload
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":10562:10608  ConstantProductPair(lToken1).balanceOf(_alice) */
      swap1
      swap2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      dup5
        /* \"test/unit/ConstantProductPair.t.sol\":10610:10659  lLpTokenBalance * lReserve1 / lLpTokenTotalSupply */
      tag_1086
        /* \"test/unit/ConstantProductPair.t.sol\":10562:10608  ConstantProductPair(lToken1).balanceOf(_alice) */
      jump(tag_1092)
    tag_1096:
      pop
      returndatasize
      jump(tag_1097)
    tag_1089:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      returndatasize
      dup10
      dup3
      returndatacopy
      returndatasize
      swap1
      revert
        /* \"test/unit/ConstantProductPair.t.sol\":10445:10491  ConstantProductPair(lToken0).balanceOf(_alice) */
    tag_1084:
      swap4
      swap8
      swap3
      pop
      pop
      pop
      dup2
      dup2
      returndatasize
      dup4
      gt
      tag_1101
      jumpi
    tag_1102:
      tag_1103
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1103:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
      mload
      dup10
      swap5
      swap1
      dup10
      dup13
        /* \"test/unit/ConstantProductPair.t.sol\":10493:10542  lLpTokenBalance * lReserve0 / lLpTokenTotalSupply */
      tag_1086
        /* \"test/unit/ConstantProductPair.t.sol\":10445:10491  ConstantProductPair(lToken0).balanceOf(_alice) */
      jump(tag_1085)
    tag_1101:
      pop
      returndatasize
      jump(tag_1102)
        /* \"test/unit/ConstantProductPair.t.sol\":10285:10323  _constantProductPair.balanceOf(_alice) */
    tag_1078:
      swap6
      pop
      pop
      swap5
      dup5
      dup2
      returndatasize
      dup4
      gt
      tag_1106
      jumpi
    tag_1107:
      tag_1108
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1108:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
      dup9
      swap5
        /* \"test/unit/ConstantProductPair.t.sol\":10276:10327  assertEq(_constantProductPair.balanceOf(_alice), 0) */
      tag_1080
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup13
      swap6
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":10285:10323  _constantProductPair.balanceOf(_alice) */
      swap1
      jump(tag_1079)
    tag_1106:
      pop
      returndatasize
      jump(tag_1107)
        /* \"test/unit/ConstantProductPair.t.sol\":10214:10247  _constantProductPair.burn(_alice) */
    tag_1074:
      tag_1111
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40
        /* \"test/unit/ConstantProductPair.t.sol\":10214:10247  _constantProductPair.burn(_alice) */
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40
        /* \"test/unit/ConstantProductPair.t.sol\":10214:10247  _constantProductPair.burn(_alice) */
      gt
      tag_407
      jumpi
      tag_409
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1111:
      pop
      jump(tag_1075)
        /* \"test/unit/ConstantProductPair.t.sol\":10104:10204  _constantProductPair.transfer(address(_constantProductPair), _constantProductPair.balanceOf(_alice)) */
    tag_1070:
      tag_1115
      swap1
      dup11
      returndatasize
      dup13
      gt
      tag_547
      jumpi
      tag_549
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1115:
      pop
      codesize
      jump(tag_1071)
        /* \"test/unit/ConstantProductPair.t.sol\":10165:10203  _constantProductPair.balanceOf(_alice) */
    tag_1065:
      swap3
      dup1
      swap3
      swap8
      pop
      dup4
      swap2
      pop
      returndatasize
      dup4
      gt
      tag_1119
      jumpi
    tag_1120:
      tag_1121
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1121:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
      mload
      dup12
      swap5
      dup11
      swap2
      dup7
        /* \"test/unit/ConstantProductPair.t.sol\":10165:10203  _constantProductPair.balanceOf(_alice) */
      jump(tag_1066)
    tag_1119:
      pop
      returndatasize
      jump(tag_1120)
        /* \"test/unit/ConstantProductPair.t.sol\":10044:10078  _constantProductPair.getReserves() */
    tag_1061:
      swap1
      swap8
      pop
      tag_1124
      swap2
      swap9
      pop
      0x80
      returndatasize
      dup2
      gt
      tag_328
      jumpi
      tag_330
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1124:
      pop
      pop
      swap8
      swap1
      swap8
      swap7
      codesize
      jump(tag_1062)
        /* \"test/unit/ConstantProductPair.t.sol\":9957:9991  _constantProductPair.totalSupply() */
    tag_1057:
      dup10
      dup1
      swap3
      swap10
      pop
      dup2
      swap6
      pop
      returndatasize
      dup4
      gt
      tag_1128
      jumpi
    tag_1129:
      tag_1130
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1130:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
      dup10
      swap3
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":9957:9991  _constantProductPair.totalSupply() */
      swap7
      codesize
      jump(tag_1058)
    tag_1128:
      pop
      returndatasize
      jump(tag_1129)
        /* \"test/unit/ConstantProductPair.t.sol\":9879:9917  _constantProductPair.balanceOf(_alice) */
    tag_1053:
      dup9
      dup1
      swap3
      swap11
      pop
      dup2
      swap5
      pop
      returndatasize
      dup4
      gt
      tag_1133
      jumpi
    tag_1134:
      tag_1135
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1135:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
      dup9
      swap2
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":9879:9917  _constantProductPair.balanceOf(_alice) */
      swap8
      codesize
      jump(tag_1054)
    tag_1133:
      pop
      returndatasize
      jump(tag_1134)
        /* \"test/unit/ConstantProductPair.t.sol\":9822:9843  vm.startPrank(_alice) */
    tag_1049:
      tag_1138
      swap1
      tag_1
      jump\t// in
    tag_1138:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_285
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":9822:9843  vm.startPrank(_alice) */
      dup4
      codesize
      jump(tag_1050)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_172:
      pop
      jumpi(tag_196, callvalue)
      dup1
      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
      slt
      tag_196
      jumpi
      0xffffffffffffffffffffffffffffffffffffffff
      swap1
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":14333:14353  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      swap2
      mload(0x40)
      swap3
      0x0902f1ac00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":14333:14367  _constantProductPair.getReserves() */
      dup1
      dup6
      mstore
      0x80
      swap3
      dup4
      dup7
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":14333:14367  _constantProductPair.getReserves() */
      dup2
      dup7
      gas
      staticcall
      swap6
      dup7
      iszero
      tag_201
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup6
        /* \"test/unit/ConstantProductPair.t.sol\":14333:14367  _constantProductPair.getReserves() */
      swap7
      tag_1147
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1148:
        /* \"test/__fixtures/BaseTest.sol\":5270:5993  function _writeObservation(... */
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x00
        /* \"test/__fixtures/BaseTest.sol\":5488:5495  2 ** 31 */
      0x80000000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x7fffffff
        /* \"test/unit/ConstantProductPair.t.sol\":14483:14498  block.timestamp */
      timestamp
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      and
        /* \"test/__fixtures/BaseTest.sol\":5480:5495  aTime < 2 ** 31 */
      lt
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      iszero
      tag_1149
      jumpi
      mload(0x40)
      swap1
      0x20
      swap5
      dup6
      dup4
      add
      0x7fffffff00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":14483:14498  block.timestamp */
      timestamp
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xe0
      shl
      and
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      swap4
      dup4
      dup6
      dup3
      add
      mstore
      0x7fffffffffffff00000000000000000000000000000000000000000000000000
      0x2b
      dup3
      add
      mstore
      0x7fffffffffffffffffffffffffff000000000000000000000000000000000000
      0x32
      dup3
      add
      mstore
      dup8
      dup2
      mstore
      tag_1151
      dup2
      tag_4
      jump\t// in
    tag_1151:
      mload
      swap1
      mload
      swap1
      dup8
      dup2
      lt
      tag_1152
      jumpi
    tag_1153:
      pop
      swap1
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"test/__fixtures/BaseTest.sol\":5727:5738  vm.record() */
      swap1
      dup2
      extcodesize
      iszero
      tag_285
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      0x266cf10900000000000000000000000000000000000000000000000000000000
        /* \"test/__fixtures/BaseTest.sol\":5727:5738  vm.record() */
      dup2
      mstore
      dup5
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/__fixtures/BaseTest.sol\":5727:5738  vm.record() */
      dup2
      dup4
      dup8
      gas
      call
      dup1
      iszero
      tag_201
      jumpi
      swap1
      dup13
      swap7
      swap6
      swap5
      swap4
      swap3
      swap2
      tag_1158
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1159:
      pop
      0x44
      dup11
      dup9
      dup12
      sload
      and
      mload(0x40)
      swap3
      dup4
      dup1
      swap3
      0xffff
      0xc9d163d100000000000000000000000000000000000000000000000000000000
        /* \"test/__fixtures/BaseTest.sol\":5748:5788  _oracleCaller.observation(aPair, aIndex) */
      swap13
      dup14
      dup5
      mstore
      dup9
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/__fixtures/BaseTest.sol\":5748:5788  _oracleCaller.observation(aPair, aIndex) */
      dup6
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
      and
      dup12
      dup4
      add
      mstore
        /* \"test/__fixtures/BaseTest.sol\":5748:5788  _oracleCaller.observation(aPair, aIndex) */
      gas
      staticcall
      dup1
      iszero
      tag_201
      jumpi
      tag_1162
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1163:
      pop
      mload(0x40)
      0x65bc948100000000000000000000000000000000000000000000000000000000
        /* \"test/__fixtures/BaseTest.sol\":5830:5857  vm.accesses(address(aPair)) */
      dup2
      mstore
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/__fixtures/BaseTest.sol\":5830:5857  vm.accesses(address(aPair)) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/__fixtures/BaseTest.sol\":5830:5857  vm.accesses(address(aPair)) */
      dup5
      dup2
      dup8
      dup2
      dup4
      dup8
      gas
      call
      swap1
      dup2
      iszero
      tag_201
      jumpi
      dup6
      swap2
      tag_1166
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1167:
      pop
        /* \"test/__fixtures/BaseTest.sol\":5895:5896  2 */
      0x02
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      mload
        /* \"test/__fixtures/BaseTest.sol\":5875:5896  lAccesses.length == 2 */
      sub
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_1168
      jumpi
        /* \"test/__fixtures/BaseTest.sol\":5963:5975  lAccesses[1] */
      tag_1170
      swap1
      tag_82
      jump\t// in
    tag_1170:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
        /* \"test/__fixtures/BaseTest.sol\":5938:5986  vm.store(address(aPair), lAccesses[1], lEncoded) */
      swap1
      dup3
      extcodesize
      iszero
      tag_249
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      0x70ca10bb00000000000000000000000000000000000000000000000000000000
        /* \"test/__fixtures/BaseTest.sol\":5938:5986  vm.store(address(aPair), lAccesses[1], lEncoded) */
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      swap2
      swap1
      swap2
      and
      0x04
        /* \"test/__fixtures/BaseTest.sol\":5938:5986  vm.store(address(aPair), lAccesses[1], lEncoded) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      dup2
      add
      swap2
      swap1
      swap2
      mstore
      0x44
      dup2
      add
      swap3
      swap1
      swap3
      mstore
      dup3
      swap1
      dup3
      swap1
      0x64
      swap1
      dup3
      swap1
      dup5
      swap1
        /* \"test/__fixtures/BaseTest.sol\":5938:5986  vm.store(address(aPair), lAccesses[1], lEncoded) */
      gas
      call
      dup1
      iszero
      tag_219
      jumpi
      tag_1176
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1177:
      pop
      pop
      dup5
      sload
        /* \"test/unit/ConstantProductPair.t.sol\":14333:14353  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":14559:14614  _oracleCaller.observation(_constantProductPair, lIndex) */
      dup5
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      dup6
      and
      0xffffffffffffffffffffffffffffffffffffffff
      dup2
      and
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":14559:14614  _oracleCaller.observation(_constantProductPair, lIndex) */
      dup4
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
      0xffff
      swap11
      swap1
      swap11
      and
      0x24
      dup3
      add
      mstore
      swap8
      swap9
      swap7
      swap8
      swap7
      dup10
      swap2
      dup10
      swap1
      dup10
      swap1
      0x44
      swap1
      dup3
      swap1
      dup10
      and
        /* \"test/unit/ConstantProductPair.t.sol\":14559:14614  _oracleCaller.observation(_constantProductPair, lIndex) */
      gas
      staticcall
      swap8
      dup9
      iszero
      tag_219
      jumpi
      dup3
      swap9
      tag_1181
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1182:
      pop
      dup5
        /* \"test/unit/ConstantProductPair.t.sol\":14678:14685  _tokenB */
      0x1a
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":14678:14736  _tokenB.mint(address(_constantProductPair), lAmountToSwap) */
      swap1
      dup2
      extcodesize
      iszero
      tag_291
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      swap2
      0x44
      dup4
      swap3
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":14678:14736  _tokenB.mint(address(_constantProductPair), lAmountToSwap) */
      swap5
      dup6
      swap4
      dup5
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40c10f1900000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":14678:14736  _tokenB.mint(address(_constantProductPair), lAmountToSwap) */
      dup5
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":14678:14736  _tokenB.mint(address(_constantProductPair), lAmountToSwap) */
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":14664:14668  1e18 */
      0x0de0b6b3a7640000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup10
      dup5
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":14678:14736  _tokenB.mint(address(_constantProductPair), lAmountToSwap) */
      gas
      call
      dup1
      iszero
      tag_219
      jumpi
      tag_1187
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1188:
      pop
      pop
      dup5
        /* \"test/unit/ConstantProductPair.t.sol\":14796:14800  true */
      0x01
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xa4
      dup6
        /* \"test/unit/ConstantProductPair.t.sol\":14333:14353  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      swap4
      dup12
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":14746:14820  _constantProductPair.swap(-int256(lAmountToSwap), true, address(this), \"\") */
      swap6
      dup7
      swap5
      dup6
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xe12bd9d800000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":14746:14820  _constantProductPair.swap(-int256(lAmountToSwap), true, address(this), \"\") */
      dup6
      mstore
        /* \"lib/forge-std/src/StdMath.sol\":124:202  -57896044618658097711785492504343953926634992332820282019728792003956564819968 */
      0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":14746:14820  _constantProductPair.swap(-int256(lAmountToSwap), true, address(this), \"\") */
      dup7
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
      dup5
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":14810:14814  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x44
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup13
      0x64
      dup5
      add
      mstore
      0x00
      0x84
      dup5
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":14746:14820  _constantProductPair.swap(-int256(lAmountToSwap), true, address(this), \"\") */
      gas
      call
      swap1
      dup2
      iszero
      tag_1200
      jumpi
      dup6
      swap2
      tag_1191
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1192:
        /* \"test/unit/ConstantProductPair.t.sol\":14831:14843  _stepTime(5) */
      pop
      pop
      tag_1193
      tag_77
      jump\t// in
    tag_1193:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup7
      dup3
        /* \"test/unit/ConstantProductPair.t.sol\":14333:14353  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":14853:14880  _constantProductPair.sync() */
      dup1
      extcodesize
      iszero
      tag_255
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      dup1
      swap2
      0x04
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":14853:14880  _constantProductPair.sync() */
      dup1
      swap5
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xfff6cae900000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":14853:14880  _constantProductPair.sync() */
      dup4
      mstore
      gas
      call
      dup1
      iszero
      tag_219
      jumpi
      tag_1198
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1199:
      pop
      pop
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":14333:14353  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":15006:15040  _constantProductPair.getReserves() */
      swap4
      dup5
      mstore
      dup7
      dup5
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":15006:15040  _constantProductPair.getReserves() */
      dup2
      dup5
      gas
      staticcall
      swap3
      dup4
      iszero
      tag_1200
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":15080:15135  _oracleCaller.observation(_constantProductPair, lIndex) */
      tag_1202
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap6
      dup9
      swap6
      dup11
        /* \"test/unit/ConstantProductPair.t.sol\":15006:15040  _constantProductPair.getReserves() */
      swap6
      tag_1203
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1204:
      pop
      sload
      and
      swap2
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":15080:15135  _oracleCaller.observation(_constantProductPair, lIndex) */
      swap6
      dup7
      swap5
      dup6
      swap4
      dup5
      swap4
      dup5
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":15080:15135  _oracleCaller.observation(_constantProductPair, lIndex) */
      dup5
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      swap3
      swap2
      0xffff
      0x20
      swap2
      0xffffffffffffffffffffffffffffffffffffffff
      0x40
      dup6
      add
      swap7
      and
      dup5
      mstore
      and
      swap2
      add
      mstore
      jump
        /* \"test/unit/ConstantProductPair.t.sol\":15080:15135  _oracleCaller.observation(_constantProductPair, lIndex) */
    tag_1202:
      sub
      swap2
      gas
      staticcall
      swap1
      dup2
      iszero
      tag_841
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":15145:15203  assertLt(lCurrObs.logAccRawPrice, lPrevObs.logAccRawPrice) */
      tag_316
        /* \"test/unit/ConstantProductPair.t.sol\":15080:15135  _oracleCaller.observation(_constantProductPair, lIndex) */
      swap4
      dup6
      swap3
      tag_1208
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1209:
      pop
      pop
      mload
      swap1
      mload
      0x0d
      signextend
      swap1
      0x0d
      signextend
        /* \"test/unit/ConstantProductPair.t.sol\":15145:15203  assertLt(lCurrObs.logAccRawPrice, lPrevObs.logAccRawPrice) */
      tag_86
      jump\t// in
        /* \"test/unit/ConstantProductPair.t.sol\":15080:15135  _oracleCaller.observation(_constantProductPair, lIndex) */
    tag_1208:
      tag_1210
      swap3
      pop
      dup1
      returndatasize
      lt
      tag_320
      jumpi
      tag_322
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1210:
      codesize
      dup1
      jump(tag_1209)
        /* \"test/unit/ConstantProductPair.t.sol\":15006:15040  _constantProductPair.getReserves() */
    tag_1203:
      tag_1214
      swap2
      swap6
      pop
      dup7
      returndatasize
      dup9
      gt
      tag_328
      jumpi
      tag_330
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1214:
      swap3
      pop
      pop
      pop
      swap4
      codesize
      jump(tag_1204)
    tag_1200:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      returndatasize
      dup11
      dup3
      returndatacopy
      returndatasize
      swap1
      revert
        /* \"test/unit/ConstantProductPair.t.sol\":14853:14880  _constantProductPair.sync() */
    tag_1198:
      tag_1218
      swap1
      tag_1
      jump\t// in
    tag_1218:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_1219
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":14853:14880  _constantProductPair.sync() */
      dup7
      codesize
      jump(tag_1199)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1219:
      dup7
      dup1
      revert
        /* \"test/unit/ConstantProductPair.t.sol\":14746:14820  _constantProductPair.swap(-int256(lAmountToSwap), true, address(this), \"\") */
    tag_1191:
      dup2
      returndatasize
      dup4
      gt
      tag_1221
      jumpi
    tag_1222:
      tag_1223
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1223:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":14746:14820  _constantProductPair.swap(-int256(lAmountToSwap), true, address(this), \"\") */
      dup4
      codesize
      jump(tag_1192)
    tag_1221:
      pop
      returndatasize
      jump(tag_1222)
        /* \"test/unit/ConstantProductPair.t.sol\":14678:14736  _tokenB.mint(address(_constantProductPair), lAmountToSwap) */
    tag_1187:
      tag_1226
      swap1
      tag_1
      jump\t// in
    tag_1226:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_1227
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":14678:14736  _tokenB.mint(address(_constantProductPair), lAmountToSwap) */
      dup8
      codesize
      jump(tag_1188)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1227:
      dup8
      dup1
      revert
        /* \"test/unit/ConstantProductPair.t.sol\":14559:14614  _oracleCaller.observation(_constantProductPair, lIndex) */
    tag_1181:
      tag_1229
      swap2
      swap9
      pop
      dup10
      returndatasize
      dup12
      gt
      tag_320
      jumpi
      tag_322
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1229:
      swap7
      codesize
      jump(tag_1182)
        /* \"test/__fixtures/BaseTest.sol\":5938:5986  vm.store(address(aPair), lAccesses[1], lEncoded) */
    tag_1176:
      tag_1233
      dup3
      swap2
      tag_1
      jump\t// in
    tag_1233:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_196
      jumpi
        /* \"test/__fixtures/BaseTest.sol\":5938:5986  vm.store(address(aPair), lAccesses[1], lEncoded) */
      dup1
      jump(tag_1177)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1168:
      0x64
      dup11
      0x1a
      dup9
      mload(0x40)
      swap3
      0x08c379a000000000000000000000000000000000000000000000000000000000
      dup5
      mstore
      0x04
      dup5
      add
      mstore
      dup3
      add
      mstore
      0x696e76616c6964206e756d626572206f66206163636573736573000000000000
      0x44
      dup3
      add
      mstore
      revert
        /* \"test/__fixtures/BaseTest.sol\":5830:5857  vm.accesses(address(aPair)) */
    tag_1166:
      tag_1236
      swap2
      pop
      returndatasize
      dup1
      dup8
      dup4
      returndatacopy
      tag_1237
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1237:
      dup2
      add
      swap1
      tag_81
      jump\t// in
    tag_1236:
      pop
      codesize
      jump(tag_1167)
        /* \"test/__fixtures/BaseTest.sol\":5748:5788  _oracleCaller.observation(aPair, aIndex) */
    tag_1162:
      tag_1238
      swap1
      dup12
      returndatasize
      dup14
      gt
      tag_320
      jumpi
      tag_322
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1238:
      pop
      codesize
      jump(tag_1163)
        /* \"test/__fixtures/BaseTest.sol\":5727:5738  vm.record() */
    tag_1158:
      tag_1242
      swap1
      swap5
      swap2
      swap5
      tag_1
      jump\t// in
    tag_1242:
      swap3
      codesize
      jump(tag_1159)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1152:
      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
      swap1
      dup9
      sub
      0x03
      shl
      shl
      and
      codesize
      jump(tag_1153)
    tag_1149:
      0x64
      mload(0x40)
      0x08c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x20
      0x04
      dup3
      add
      mstore
      0x11
      0x24
      dup3
      add
      mstore
      0x54494d455354414d5020544f4f20424947000000000000000000000000000000
      0x44
      dup3
      add
      mstore
      revert
        /* \"test/unit/ConstantProductPair.t.sol\":14333:14367  _constantProductPair.getReserves() */
    tag_1147:
      tag_1243
      swap2
      swap7
      pop
      dup5
      returndatasize
      dup7
      gt
      tag_328
      jumpi
      tag_330
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1243:
      swap3
      pop
      pop
      pop
      swap5
      codesize
      jump(tag_1148)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_170:
      pop
      jumpi(tag_196, callvalue)
      dup1
      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
      slt
      tag_196
      jumpi
      0xffffffffffffffffffffffffffffffffffffffff
      dup1
        /* \"test/unit/ConstantProductPair.t.sol\":17639:17689  _createPair(address(_tokenA), address(_tokenD), 0) */
      tag_1251
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":17659:17666  _tokenA */
      0x19
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      dup3
        /* \"test/unit/ConstantProductPair.t.sol\":17677:17684  _tokenD */
      0x1c
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":17639:17689  _createPair(address(_tokenA), address(_tokenD), 0) */
      swap1
      tag_46
      jump\t// in
    tag_1251:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      and
      swap1
      dup1
        /* \"test/unit/ConstantProductPair.t.sol\":17659:17666  _tokenA */
      0x19
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":17700:17736  _tokenA.mint(address(lPair), 100e18) */
      dup1
      extcodesize
      iszero
      tag_285
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      0x40c10f1900000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":17700:17736  _tokenA.mint(address(lPair), 100e18) */
      dup1
      dup3
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      dup6
      and
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":17700:17736  _tokenA.mint(address(lPair), 100e18) */
      dup4
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":18441:18447  100e18 */
      0x056bc75e2d63100000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      dup4
      add
      mstore
      swap1
      swap2
      dup6
      swap1
      dup4
      swap1
      0x44
      swap1
      dup3
      swap1
      dup5
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":17700:17736  _tokenA.mint(address(lPair), 100e18) */
      gas
      call
      swap2
      dup3
      iszero
      tag_312
      jumpi
      dup6
      swap3
      tag_1257
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1258:
      pop
      dup3
        /* \"test/unit/ConstantProductPair.t.sol\":17677:17684  _tokenD */
      0x1c
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":17746:17780  _tokenD.mint(address(lPair), 50e6) */
      dup1
      extcodesize
      iszero
      tag_291
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x44
      dup4
      swap3
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":17746:17780  _tokenD.mint(address(lPair), 50e6) */
      swap5
      dup6
      swap4
      dup5
      swap3
      dup4
      mstore
      dup9
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":17746:17780  _tokenD.mint(address(lPair), 50e6) */
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":17775:17779  50e6 */
      0x02faf080
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      dup5
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":17746:17780  _tokenD.mint(address(lPair), 50e6) */
      gas
      call
      dup1
      iszero
      tag_312
      jumpi
      tag_1263
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1264:
      pop
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":17790:17815  lPair.mint(address(this)) */
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x6a62784200000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":17790:17815  lPair.mint(address(this)) */
      dup3
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":17809:17813  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":17790:17815  lPair.mint(address(this)) */
      dup4
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":17790:17815  lPair.mint(address(this)) */
      swap2
      dup3
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":17790:17815  lPair.mint(address(this)) */
      dup2
      dup9
      dup9
      gas
      call
      swap1
      dup2
      iszero
      tag_312
      jumpi
      dup4
      swap2
      tag_1267
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1268:
        /* \"test/unit/ConstantProductPair.t.sol\":17841:17853  _stepTime(5) */
      pop
      pop
      tag_1269
      tag_77
      jump\t// in
    tag_1269:
        /* \"test/unit/ConstantProductPair.t.sol\":17863:17875  lPair.sync() */
      dup3
      extcodesize
      iszero
      tag_285
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":17863:17875  lPair.sync() */
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xfff6cae900000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":17863:17875  lPair.sync() */
      dup5
      mstore
      dup5
      dup5
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":17863:17875  lPair.sync() */
      dup2
      dup4
      dup6
      gas
      call
      swap2
      dup3
      iszero
      tag_312
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":17930:17965  _oracleCaller.observation(lPair, 0) */
      tag_1274
        /* \"test/unit/ConstantProductPair.t.sol\":17863:17875  lPair.sync() */
      swap5
        /* \"test/unit/ConstantProductPair.t.sol\":17930:17965  _oracleCaller.observation(lPair, 0) */
      0x80
        /* \"test/unit/ConstantProductPair.t.sol\":17863:17875  lPair.sync() */
      swap4
      tag_1275
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1276:
      pop
      dup4
      sload
      and
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":17930:17965  _oracleCaller.observation(lPair, 0) */
      dup1
      dup1
      swap7
      dup2
      swap5
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xc9d163d100000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":17930:17965  _oracleCaller.observation(lPair, 0) */
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":17930:17965  _oracleCaller.observation(lPair, 0) */
      dup4
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
      0x00
      swap2
      swap4
      swap3
      swap4
      0xffffffffffffffffffffffffffffffffffffffff
      0x40
      dup3
      add
      swap6
      and
      dup2
      mstore
      add
      mstore
      jump
        /* \"test/unit/ConstantProductPair.t.sol\":17930:17965  _oracleCaller.observation(lPair, 0) */
    tag_1274:
      sub
      swap2
      gas
      staticcall
      swap2
      dup3
      iszero
      tag_312
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x05
        /* \"test/unit/ConstantProductPair.t.sol\":17930:17965  _oracleCaller.observation(lPair, 0) */
      swap3
        /* \"src/libraries/LogCompression.sol\":2760:2807  LogExpMath.exp(value * _LOG_COMPRESSION_FACTOR) */
      tag_1279
        /* \"test/unit/ConstantProductPair.t.sol\":17930:17965  _oracleCaller.observation(lPair, 0) */
      swap2
      dup6
      swap2
      tag_1280
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1281:
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      pop
      0x5af3107a4000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap4
      dup5
      swap2
      mload
      0x0d
      signextend
      sdiv
      0x0d
      signextend
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      mul
        /* \"src/libraries/LogCompression.sol\":2760:2807  LogExpMath.exp(value * _LOG_COMPRESSION_FACTOR) */
      tag_96
      jump\t// in
    tag_1279:
        /* \"test/unit/ConstantProductPair.t.sol\":18048:18054  0.5e18 */
      0x06f05b59d3b20000
      swap2
        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x00
        /* \"lib/forge-std/src/StdMath.sol\":607:612  a > b */
      dup4
      dup3
      gt
        /* \"test/unit/ConstantProductPair.t.sol\":18048:18054  0.5e18 */
      iszero
      tag_1282
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      pop
      0xfffffffffffffffffffffffffffffffffffffffffffffffff90fa4a62c4e0000
      dup2
      add
      dup2
      dup2
      gt
      tag_505
      jumpi
        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */
    tag_1286:
        /* \"lib/forge-std/src/StdMath.sol\":1144:1148  1e18 */
      0x0de0b6b3a7640000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      dup2
      dup2
      mul
      swap2
      dup2
      dup4
      div
      eq
      swap1
      iszero
      or
      iszero
      tag_505
      jumpi
      dup4
      swap1
      div
        /* \"lib/forge-std/src/StdAssertions.sol\":5389:5419  percentDelta > maxPercentDelta */
      swap4
      dup5
      gt
        /* \"lib/forge-std/src/StdAssertions.sol\":5385:5769  if (percentDelta > maxPercentDelta) {... */
      tag_1289
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup5
      dup1
      return
        /* \"lib/forge-std/src/StdAssertions.sol\":5385:5769  if (percentDelta > maxPercentDelta) {... */
    tag_1289:
        /* \"lib/forge-std/src/StdAssertions.sol\":5440:5481  log(\"Error: a ~= b not satisfied [uint]\") */
      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50
        /* \"test/unit/ConstantProductPair.t.sol\":17930:17965  _oracleCaller.observation(lPair, 0) */
      0x80
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      dup5
      dup2
      mstore
      0x22
      dup6
      dup3
      add
      mstore
      0x4572726f723a2061207e3d2062206e6f7420736174697366696564205b75696e
      0x40
      dup3
      add
      mstore
      0x745d000000000000000000000000000000000000000000000000000000000000
      0x60
      dup3
      add
      mstore
        /* \"lib/forge-std/src/StdAssertions.sol\":5440:5481  log(\"Error: a ~= b not satisfied [uint]\") */
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      swap3
      0x40
      dup5
      mstore
      tag_1291
      0x40
      dup6
      add
      0x40
      swap1
      0x0c
      dup2
      mstore
      0x2020202045787065637465640000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_1291:
      swap1
      dup4
      dup6
      add
      mstore
        /* \"lib/forge-std/src/StdAssertions.sol\":5500:5533  log_named_uint(\"    Expected\", b) */
      dup4
      0xb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8
      swap5
      dup6
      swap3
      sub
      swap1
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      swap2
      dup3
      swap2
      0x40
      dup4
      mstore
      tag_1292
      0x40
      dup5
      add
      0x40
      swap1
      0x0c
      dup2
      mstore
      0x20202020202041637475616c0000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_1292:
      swap2
      dup4
      add
      mstore
        /* \"lib/forge-std/src/StdAssertions.sol\":5552:5585  log_named_uint(\"      Actual\", a) */
      sub
      swap1
      log1
        /* \"lib/forge-std/src/StdAssertions.sol\":5682:5738  log_named_decimal_uint(\"     % Delta\", percentDelta, 18) */
      tag_1293
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"lib/forge-std/src/StdAssertions.sol\":5604:5663  log_named_decimal_uint(\" Max % Delta\", maxPercentDelta, 18) */
      swap2
      0xeb8ba43ced7537421946bd43e828b8b2b8428927aa8f801c13d934bf11aca57b
      dup4
      dup1
      tag_512
      dup4
      swap7
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      0x60
      dup3
      mstore
      0x0c
      0x60
      dup4
      add
      mstore
      0x204d617820252044656c74610000000000000000000000000000000000000000
      0x80
      dup4
      add
      mstore
        /* \"lib/forge-std/src/StdAssertions.sol\":6831:6833  18 */
      0x12
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40
      0xa0
      dup5
      add
      swap4
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      0x5af3107a4000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
      dup3
      add
      mstore
      add
      mstore
      jump
        /* \"lib/forge-std/src/StdAssertions.sol\":5682:5738  log_named_decimal_uint(\"     % Delta\", percentDelta, 18) */
    tag_1293:
      sub
      swap1
      log1
      tag_1295
      tag_42
      jump\t// in
    tag_1295:
        /* \"lib/forge-std/src/StdAssertions.sol\":5385:5769  if (percentDelta > maxPercentDelta) {... */
      codesize
      dup1
      dup1
      dup1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup5
      dup1
      return
        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */
    tag_1282:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      dup5
      sub
      swap1
      dup5
      dup3
      gt
      tag_514
      jumpi
        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */
      pop
      jump(tag_1286)
        /* \"test/unit/ConstantProductPair.t.sol\":17930:17965  _oracleCaller.observation(lPair, 0) */
    tag_1280:
      tag_1298
      swap2
      pop
      0x80
      returndatasize
      dup2
      gt
      tag_320
      jumpi
      tag_322
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1298:
      codesize
      jump(tag_1281)
        /* \"test/unit/ConstantProductPair.t.sol\":17863:17875  lPair.sync() */
    tag_1275:
      tag_1302
      swap1
      tag_1
      jump\t// in
    tag_1302:
      codesize
      jump(tag_1276)
        /* \"test/unit/ConstantProductPair.t.sol\":17790:17815  lPair.mint(address(this)) */
    tag_1267:
      dup2
      returndatasize
      dup4
      gt
      tag_1303
      jumpi
    tag_1304:
      tag_1305
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1305:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":17790:17815  lPair.mint(address(this)) */
      dup2
      codesize
      jump(tag_1268)
    tag_1303:
      pop
      returndatasize
      jump(tag_1304)
        /* \"test/unit/ConstantProductPair.t.sol\":17746:17780  _tokenD.mint(address(lPair), 50e6) */
    tag_1263:
      tag_1308
      swap1
      tag_1
      jump\t// in
    tag_1308:
      codesize
      jump(tag_1264)
        /* \"test/unit/ConstantProductPair.t.sol\":17700:17736  _tokenA.mint(address(lPair), 100e18) */
    tag_1257:
      tag_1309
      swap1
      tag_1
      jump\t// in
    tag_1309:
      codesize
      jump(tag_1258)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_168:
      pop
      jumpi(tag_196, callvalue)
      dup1
      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
      slt
      tag_196
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":15991:16003  _stepTime(5) */
      tag_1314
      tag_77
      jump\t// in
    tag_1314:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      dup1
        /* \"test/unit/ConstantProductPair.t.sol\":16029:16036  _tokenA */
      0x19
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":16050:16070  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      dup2
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":16029:16087  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */
      swap2
      dup1
      extcodesize
      iszero
      tag_249
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      0x40c10f1900000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":16029:16087  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */
      dup1
      dup3
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      swap5
      swap1
      swap5
      and
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":16029:16087  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":15977:15981  1e18 */
      0x0de0b6b3a7640000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      dup3
      add
      mstore
      swap1
      dup6
      swap1
      dup3
      swap1
      0x44
      swap1
      dup3
      swap1
      dup5
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":16029:16087  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */
      gas
      call
      dup1
      iszero
      tag_312
      jumpi
      tag_1320
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1321:
      pop
      dup3
      dup2
      sload
      and
      swap1
      mload(0x40)
      swap4
      dup5
      0xe12bd9d800000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":16097:16170  _constantProductPair.swap(int256(lAmountToSwap), true, address(this), \"\") */
      swap4
      dup5
      dup3
      mstore
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":16160:16164  this */
      swap7
      dup8
      swap2
      dup2
      dup11
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":16097:16170  _constantProductPair.swap(int256(lAmountToSwap), true, address(this), \"\") */
      tag_1322
        /* \"test/unit/ConstantProductPair.t.sol\":16160:16164  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":16097:16170  _constantProductPair.swap(int256(lAmountToSwap), true, address(this), \"\") */
      dup4
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      0xa0
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":5471:5475  1e18 */
      0x0de0b6b3a7640000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup4
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":15394:15398  true */
      0x01
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
      dup5
      add
      mstore
      and
      0x40
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x80
      0x60
      dup3
      add
      mstore
      0x00
      0x80
      dup3
      add
      mstore
      add
      swap1
      jump
        /* \"test/unit/ConstantProductPair.t.sol\":16097:16170  _constantProductPair.swap(int256(lAmountToSwap), true, address(this), \"\") */
    tag_1322:
      sub
      swap3
      gas
      call
      swap1
      dup2
      iszero
      tag_312
      jumpi
      dup7
      swap2
      tag_1325
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1326:
      pop
      pop
      dup1
      dup3
      sload
      and
      mload(0x40)
      dup1
      swap5
      0x0902f1ac00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":16228:16262  _constantProductPair.getReserves() */
      swap3
      dup4
      dup4
      mstore
      dup3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":16228:16262  _constantProductPair.getReserves() */
      0x80
      swap9
      dup10
      swap4
      gas
      staticcall
      dup1
      iszero
      tag_312
      jumpi
      dup10
      swap3
      dup11
      swap2
      tag_1329
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1330:
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":16290:16322  lReserve1_1 * 1e18 / lReserve0_1 */
      tag_1331
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":16290:16308  lReserve1_1 * 1e18 */
      tag_1088
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffff
      dup1
      dup1
      swap7
      and
      swap3
      and
        /* \"test/unit/ConstantProductPair.t.sol\":16290:16308  lReserve1_1 * 1e18 */
      tag_16
      jump\t// in
        /* \"test/unit/ConstantProductPair.t.sol\":16290:16322  lReserve1_1 * 1e18 / lReserve0_1 */
    tag_1331:
        /* \"test/unit/ConstantProductPair.t.sol\":16332:16344  _stepTime(5) */
      swap7
      tag_1333
      tag_77
      jump\t// in
    tag_1333:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup10
      dup6
        /* \"test/unit/ConstantProductPair.t.sol\":16029:16036  _tokenA */
      0x19
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      dup7
      dup9
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":16355:16413  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */
      swap1
      dup1
      extcodesize
      iszero
      tag_291
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":16355:16413  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */
      swap4
      dup5
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      swap2
      swap1
      swap2
      and
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":16355:16413  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":15977:15981  1e18 */
      0x0de0b6b3a7640000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      dup5
      add
      mstore
      dup3
      swap1
      0x44
      swap1
      dup3
      swap1
      dup5
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":16355:16413  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */
      gas
      call
      dup1
      iszero
      tag_312
      jumpi
      tag_1339
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1340:
      pop
      dup5
      sload
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":16423:16496  _constantProductPair.swap(int256(lAmountToSwap), true, address(this), \"\") */
      swap2
      dup3
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":5471:5475  1e18 */
      0x0de0b6b3a7640000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":16423:16496  _constantProductPair.swap(int256(lAmountToSwap), true, address(this), \"\") */
      dup4
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":15394:15398  true */
      0x01
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      dup4
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":16160:16164  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x44
      dup4
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x80
      0x64
      dup4
      add
      mstore
      0x00
      0x84
      dup4
      add
      mstore
      dup9
      swap1
      dup3
      swap1
      0xa4
      swap1
      dup3
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":16160:16164  this */
      dup14
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup10
      and
        /* \"test/unit/ConstantProductPair.t.sol\":16423:16496  _constantProductPair.swap(int256(lAmountToSwap), true, address(this), \"\") */
      gas
      call
      swap1
      dup2
      iszero
      tag_312
      jumpi
      dup9
      swap2
      tag_1344
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1345:
      pop
      pop
      dup5
      dup4
      dup6
      sload
      and
      swap3
      0x04
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":16553:16587  _constantProductPair.getReserves() */
      dup1
      swap6
      dup2
      swap4
      dup3
      mstore
      gas
      staticcall
      swap2
      dup3
      iszero
      tag_312
      jumpi
      dup9
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":16615:16647  lReserve1_2 * 1e18 / lReserve0_2 */
      tag_1348
        /* \"test/unit/ConstantProductPair.t.sol\":16553:16587  _constantProductPair.getReserves() */
      swap3
      dup5
      swap3
      dup6
      swap3
      tag_1349
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1350:
      pop
      dup1
        /* \"test/unit/ConstantProductPair.t.sol\":16615:16633  lReserve1_2 * 1e18 */
      tag_1088
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap3
      swap4
      and
      swap3
      and
        /* \"test/unit/ConstantProductPair.t.sol\":16615:16633  lReserve1_2 * 1e18 */
      tag_16
      jump\t// in
        /* \"test/unit/ConstantProductPair.t.sol\":16615:16647  lReserve1_2 * 1e18 / lReserve0_2 */
    tag_1348:
        /* \"test/unit/ConstantProductPair.t.sol\":16658:16670  _stepTime(5) */
      swap6
      tag_1352
      tag_77
      jump\t// in
    tag_1352:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      dup5
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":16680:16707  _constantProductPair.sync() */
      dup1
      extcodesize
      iszero
      tag_291
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      swap1
      0x04
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":16680:16707  _constantProductPair.sync() */
      dup1
      swap6
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xfff6cae900000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":16680:16707  _constantProductPair.sync() */
      dup4
      mstore
      gas
      call
      swap2
      dup3
      iszero
      tag_312
      jumpi
      dup4
      swap3
      tag_1357
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1358:
      pop
      sload
      and
      swap2
      sload
      and
      swap2
      mload(0x40)
      swap3
      0xc9d163d100000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":16763:16813  _oracleCaller.observation(_constantProductPair, 0) */
      swap3
      dup4
      dup6
      mstore
      dup3
      dup6
      dup1
      tag_1359
      dup6
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":16763:16813  _oracleCaller.observation(_constantProductPair, 0) */
      dup4
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
      0x00
      swap2
      swap4
      swap3
      swap4
      0xffffffffffffffffffffffffffffffffffffffff
      0x40
      dup3
      add
      swap6
      and
      dup2
      mstore
      add
      mstore
      jump
        /* \"test/unit/ConstantProductPair.t.sol\":16763:16813  _oracleCaller.observation(_constantProductPair, 0) */
    tag_1359:
      sub
      dup2
      dup5
      gas
      staticcall
      swap5
      dup6
      iszero
      tag_312
      jumpi
      dup9
      swap6
      tag_1362
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1363:
      pop
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":16850:16900  _oracleCaller.observation(_constantProductPair, 1) */
      dup5
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      dup4
      and
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":16850:16900  _oracleCaller.observation(_constantProductPair, 1) */
      dup3
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":18492:18496  true */
      0x01
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      dup3
      add
      mstore
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":16850:16900  _oracleCaller.observation(_constantProductPair, 1) */
      dup4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup6
      0x44
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":16850:16900  _oracleCaller.observation(_constantProductPair, 1) */
      dup6
      gas
      staticcall
      swap5
      dup6
      iszero
      tag_312
      jumpi
      dup10
      swap6
      tag_1367
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1368:
      pop
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":16937:16987  _oracleCaller.observation(_constantProductPair, 2) */
      swap1
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      swap1
      swap3
      and
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":16937:16987  _oracleCaller.observation(_constantProductPair, 2) */
      dup4
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":19011:19012  2 */
      0x02
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      dup4
      add
      mstore
      dup3
      swap1
      dup3
      swap1
      dup2
      dup1
      0x44
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":16937:16987  _oracleCaller.observation(_constantProductPair, 2) */
    tag_1369:
      sub
      swap2
      gas
      staticcall
      swap2
      dup3
      iszero
      tag_312
      jumpi
      dup8
      swap3
      tag_1372
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1373:
      pop
      pop
      dup4
      dup3
      mload
      swap3
      dup5
      mload
      swap4
      0x0d
      swap5
      dup6
      signextend
      swap1
      dup6
      signextend
        /* \"test/unit/ConstantProductPair.t.sol\":17076:17119  lObs1.logAccRawPrice - lObs0.logAccRawPrice */
      swap1
      tag_1374
      swap2
      tag_88
      jump\t// in
    tag_1374:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      0xffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":17129:17144  lObs1.timestamp */
      dup1
      swap7
      dup2
      swap5
      dup3
      0x60
      dup2
      swap6
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":17129:17144  lObs1.timestamp */
      0x60
        /* \"test/unit/ConstantProductPair.t.sol\":17147:17162  lObs0.timestamp */
      dup4
      add
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      swap6
      0x5af3107a4000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap11
      dup12
      swap3
      dup2
      dup10
      mload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":17129:17162  lObs1.timestamp - lObs0.timestamp */
      tag_1375
      swap2
      tag_89
      jump\t// in
    tag_1375:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      and
      0x03
      signextend
        /* \"test/unit/ConstantProductPair.t.sol\":17075:17163  (lObs1.logAccRawPrice - lObs0.logAccRawPrice) / int32(lObs1.timestamp - lObs0.timestamp) */
      tag_1376
      swap2
      tag_90
      jump\t// in
    tag_1376:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup10
      signextend
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      mul
        /* \"src/libraries/LogCompression.sol\":2760:2807  LogExpMath.exp(value * _LOG_COMPRESSION_FACTOR) */
      tag_1377
      swap1
      tag_96
      jump\t// in
    tag_1377:
        /* \"test/unit/ConstantProductPair.t.sol\":16998:17231  assertApproxEqRel(... */
      swap1
      tag_1378
      swap2
      tag_91
      jump\t// in
    tag_1378:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup6
      mload
      dup8
      signextend
      swap1
      mload
      dup8
      signextend
        /* \"test/unit/ConstantProductPair.t.sol\":17319:17362  lObs2.logAccRawPrice - lObs0.logAccRawPrice */
      tag_1379
      swap2
      tag_88
      jump\t// in
    tag_1379:
        /* \"test/unit/ConstantProductPair.t.sol\":17372:17387  lObs2.timestamp */
      swap5
        /* \"test/unit/ConstantProductPair.t.sol\":17129:17144  lObs1.timestamp */
      0x60
        /* \"test/unit/ConstantProductPair.t.sol\":17372:17387  lObs2.timestamp */
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
      and
      swap2
      mload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":17372:17405  lObs2.timestamp - lObs0.timestamp */
      tag_1380
      swap2
      tag_89
      jump\t// in
    tag_1380:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      and
      0x03
      signextend
        /* \"test/unit/ConstantProductPair.t.sol\":17318:17406  (lObs2.logAccRawPrice - lObs0.logAccRawPrice) / int32(lObs2.timestamp - lObs0.timestamp) */
      tag_1381
      swap2
      tag_90
      jump\t// in
    tag_1381:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      signextend
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      mul
        /* \"src/libraries/LogCompression.sol\":2760:2807  LogExpMath.exp(value * _LOG_COMPRESSION_FACTOR) */
      tag_1382
      swap1
      tag_96
      jump\t// in
    tag_1382:
        /* \"test/unit/ConstantProductPair.t.sol\":17444:17461  lPrice1 * lPrice2 */
      swap2
      tag_1383
      swap2
      tag_17
      jump\t// in
    tag_1383:
        /* \"test/unit/ConstantProductPair.t.sol\":17434:17462  Math.sqrt(lPrice1 * lPrice2) */
      tag_1384
      swap1
      tag_45
      jump\t// in
    tag_1384:
        /* \"test/unit/ConstantProductPair.t.sol\":17241:17495  assertApproxEqRel(... */
      tag_316
      swap2
      tag_91
      jump\t// in
        /* \"test/unit/ConstantProductPair.t.sol\":16937:16987  _oracleCaller.observation(_constantProductPair, 2) */
    tag_1372:
      tag_1386
      swap3
      pop
      dup1
      returndatasize
      lt
      tag_320
      jumpi
      tag_322
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1386:
      codesize
      dup1
      jump(tag_1373)
        /* \"test/unit/ConstantProductPair.t.sol\":16850:16900  _oracleCaller.observation(_constantProductPair, 1) */
    tag_1367:
        /* \"test/unit/ConstantProductPair.t.sol\":16937:16987  _oracleCaller.observation(_constantProductPair, 2) */
      tag_1369
        /* \"test/unit/ConstantProductPair.t.sol\":16850:16900  _oracleCaller.observation(_constantProductPair, 1) */
      swap4
      swap2
      swap6
      pop
      swap2
      tag_1390
      dup6
      swap4
      dup5
      returndatasize
      dup7
      gt
      tag_320
      jumpi
      tag_322
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1390:
      swap6
      swap2
      swap4
      pop
      swap2
      jump(tag_1368)
        /* \"test/unit/ConstantProductPair.t.sol\":16763:16813  _oracleCaller.observation(_constantProductPair, 0) */
    tag_1362:
      tag_1394
      swap2
      swap6
      pop
      dup4
      returndatasize
      dup6
      gt
      tag_320
      jumpi
      tag_322
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1394:
      swap4
      codesize
      jump(tag_1363)
        /* \"test/unit/ConstantProductPair.t.sol\":16680:16707  _constantProductPair.sync() */
    tag_1357:
      tag_1398
      swap1
      tag_1
      jump\t// in
    tag_1398:
      codesize
      jump(tag_1358)
        /* \"test/unit/ConstantProductPair.t.sol\":16553:16587  _constantProductPair.getReserves() */
    tag_1349:
      dup2
      swap4
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":16615:16633  lReserve1_2 * 1e18 */
      tag_1088
        /* \"test/unit/ConstantProductPair.t.sol\":16553:16587  _constantProductPair.getReserves() */
      swap3
      pop
      tag_1399
      swap1
      dup10
      returndatasize
      dup12
      gt
      tag_328
      jumpi
      tag_330
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1399:
      pop
      pop
      swap4
      swap1
      swap4
      swap3
      pop
      jump(tag_1350)
        /* \"test/unit/ConstantProductPair.t.sol\":16423:16496  _constantProductPair.swap(int256(lAmountToSwap), true, address(this), \"\") */
    tag_1344:
      dup2
      returndatasize
      dup4
      gt
      tag_1403
      jumpi
    tag_1404:
      tag_1405
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1405:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":16423:16496  _constantProductPair.swap(int256(lAmountToSwap), true, address(this), \"\") */
      dup7
      codesize
      jump(tag_1345)
    tag_1403:
      pop
      returndatasize
      jump(tag_1404)
        /* \"test/unit/ConstantProductPair.t.sol\":16355:16413  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */
    tag_1339:
      tag_1408
      swap1
      tag_1
      jump\t// in
    tag_1408:
      codesize
      jump(tag_1340)
        /* \"test/unit/ConstantProductPair.t.sol\":16228:16262  _constantProductPair.getReserves() */
    tag_1329:
        /* \"test/unit/ConstantProductPair.t.sol\":16290:16322  lReserve1_1 * 1e18 / lReserve0_1 */
      tag_1331
        /* \"test/unit/ConstantProductPair.t.sol\":16228:16262  _constantProductPair.getReserves() */
      swap4
      pop
      tag_1409
      swap2
      pop
      dup8
      returndatasize
      dup10
      gt
      tag_328
      jumpi
      tag_330
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1409:
      pop
      pop
      swap3
      swap1
      swap3
      swap1
      jump(tag_1330)
        /* \"test/unit/ConstantProductPair.t.sol\":16097:16170  _constantProductPair.swap(int256(lAmountToSwap), true, address(this), \"\") */
    tag_1325:
      dup2
      returndatasize
      dup4
      gt
      tag_1413
      jumpi
    tag_1414:
      tag_1415
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1415:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":16097:16170  _constantProductPair.swap(int256(lAmountToSwap), true, address(this), \"\") */
      dup5
      codesize
      jump(tag_1326)
    tag_1413:
      pop
      returndatasize
      jump(tag_1414)
        /* \"test/unit/ConstantProductPair.t.sol\":16029:16087  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */
    tag_1320:
      tag_1418
      swap1
      tag_1
      jump\t// in
    tag_1418:
      codesize
      jump(tag_1321)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_166:
      pop
      jumpi(tag_196, callvalue)
      dup1
      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
      slt
      tag_196
      jumpi
      0x20
      mload(0x40)
        /* \"test/__fixtures/BaseTest.sol\":859:862  100 */
      0x64
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      mstore
      return
    tag_164:
      pop
      jumpi(tag_196, callvalue)
      dup1
      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
      slt
      tag_196
      jumpi
      0x20
      tag_1427
      tag_15
      jump\t// in
    tag_1427:
      mload(0x40)
      swap1
      iszero
      iszero
      dup2
      mstore
      return
    tag_162:
      pop
      jumpi(tag_196, callvalue)
      dup1
      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
      slt
      tag_196
      jumpi
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"test/unit/ConstantProductPair.t.sol\":7232:7269  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */
      dup1
      extcodesize
      iszero
      tag_255
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      0xf28dceb300000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":7232:7269  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */
      dup1
      dup3
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":7232:7269  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */
      dup4
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
      0x12
      0x24
      dup4
      add
      mstore
      0x43503a204e4f545f454e4f5547485f4c49510000000000000000000000000000
      0x44
      dup4
      add
      mstore
      swap1
      dup4
      swap1
      dup2
      dup2
      0x64
      dup2
      dup4
        /* \"test/unit/ConstantProductPair.t.sol\":7232:7269  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */
      dup9
      gas
      call
      dup1
      iszero
      tag_219
      jumpi
      tag_1437
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1438:
      pop
      pop
      tag_1439
      swap2
      0xffffffffffffffffffffffffffffffffffffffff
      dup5
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":7279:7299  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      swap4
      mload(0x40)
      tag_1440
      dup2
      tag_2
      jump\t// in
    tag_1440:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      dup3
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      swap1
      dup2
      0xe12bd9d800000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":7279:7366  _constantProductPair.swap(int256(INITIAL_MINT_AMOUNT), false, address(this), bytes(\"\")) */
      swap8
      dup9
      dup3
      mstore
        /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */
      0x056bc75e2d63100000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":7279:7366  _constantProductPair.swap(int256(INITIAL_MINT_AMOUNT), false, address(this), bytes(\"\")) */
      dup4
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
      0x00
      0x24
      dup4
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":7349:7353  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x44
      dup4
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x80
      0x64
      dup4
      add
      mstore
      dup2
      dup7
      dup2
      0x20
      swap13
      dup14
      swap7
      0x84
      dup4
      add
      swap1
      tag_10
      jump\t// in
    tag_1439:
        /* \"test/unit/ConstantProductPair.t.sol\":7279:7366  _constantProductPair.swap(int256(INITIAL_MINT_AMOUNT), false, address(this), bytes(\"\")) */
      sub
      swap3
      gas
      call
      swap1
      dup2
      iszero
      tag_215
      jumpi
      dup8
      swap2
      tag_1443
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1444:
        /* \"test/unit/ConstantProductPair.t.sol\":7377:7414  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */
      pop
      pop
      dup4
      extcodesize
      iszero
      tag_255
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":7377:7414  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */
      dup2
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":7377:7414  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */
      dup3
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
      0x12
      0x24
      dup3
      add
      mstore
      0x43503a204e4f545f454e4f5547485f4c49510000000000000000000000000000
      0x44
      dup3
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":7377:7414  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */
      dup3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      0x64
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":7377:7414  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */
      dup4
      dup10
      gas
      call
      swap1
      dup2
      iszero
      tag_215
      jumpi
      dup4
      swap2
      tag_1450
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1451:
      pop
      dup7
      tag_1452
      dup6
        /* \"test/unit/ConstantProductPair.t.sol\":7279:7299  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      mload(0x40)
      tag_1453
      dup2
      tag_2
      jump\t// in
    tag_1453:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      dup5
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":7424:7515  _constantProductPair.swap(int256(INITIAL_MINT_AMOUNT + 1), false, address(this), bytes(\"\")) */
      swap5
      dup6
      dup1
      swap5
      dup2
      swap4
      dup14
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x056bc75e2d63100001
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":7424:7515  _constantProductPair.swap(int256(INITIAL_MINT_AMOUNT + 1), false, address(this), bytes(\"\")) */
      dup5
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
      0x00
      0x24
      dup5
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":7349:7353  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x44
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x80
      0x64
      dup5
      add
      mstore
      0x84
      dup4
      add
      swap1
      tag_10
      jump\t// in
    tag_1452:
        /* \"test/unit/ConstantProductPair.t.sol\":7424:7515  _constantProductPair.swap(int256(INITIAL_MINT_AMOUNT + 1), false, address(this), bytes(\"\")) */
      sub
      swap3
      gas
      call
      swap1
      dup2
      iszero
      tag_215
      jumpi
      dup8
      swap2
      tag_1456
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1457:
        /* \"test/unit/ConstantProductPair.t.sol\":7526:7563  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */
      pop
      pop
      dup4
      extcodesize
      iszero
      tag_255
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":7526:7563  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */
      dup2
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":7526:7563  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */
      dup3
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
      0x12
      0x24
      dup3
      add
      mstore
      0x43503a204e4f545f454e4f5547485f4c49510000000000000000000000000000
      0x44
      dup3
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":7526:7563  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */
      dup3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      0x64
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":7526:7563  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */
      dup4
      dup10
      gas
      call
      swap1
      dup2
      iszero
      tag_215
      jumpi
      dup4
      swap2
      tag_1463
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1464:
      pop
      dup7
      tag_1465
      dup6
        /* \"test/unit/ConstantProductPair.t.sol\":7279:7299  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      mload(0x40)
      tag_1466
      dup2
      tag_2
      jump\t// in
    tag_1466:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      dup5
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":7573:7661  _constantProductPair.swap(-int256(INITIAL_MINT_AMOUNT), false, address(this), bytes(\"\")) */
      swap5
      dup6
      dup1
      swap5
      dup2
      swap4
      dup14
      dup4
      mstore
        /* \"lib/forge-std/src/StdMath.sol\":124:202  -57896044618658097711785492504343953926634992332820282019728792003956564819968 */
      0xfffffffffffffffffffffffffffffffffffffffffffffffa9438a1d29cf00000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":7573:7661  _constantProductPair.swap(-int256(INITIAL_MINT_AMOUNT), false, address(this), bytes(\"\")) */
      dup5
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
      0x00
      0x24
      dup5
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":7349:7353  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x44
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x80
      0x64
      dup5
      add
      mstore
      0x84
      dup4
      add
      swap1
      tag_10
      jump\t// in
    tag_1465:
        /* \"test/unit/ConstantProductPair.t.sol\":7573:7661  _constantProductPair.swap(-int256(INITIAL_MINT_AMOUNT), false, address(this), bytes(\"\")) */
      sub
      swap3
      gas
      call
      swap1
      dup2
      iszero
      tag_215
      jumpi
      dup8
      swap2
      tag_1469
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1470:
        /* \"test/unit/ConstantProductPair.t.sol\":7672:7709  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */
      pop
      pop
      dup4
      extcodesize
      iszero
      tag_255
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":7672:7709  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */
      swap1
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":7672:7709  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */
      dup3
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
      0x12
      0x24
      dup3
      add
      mstore
      0x43503a204e4f545f454e4f5547485f4c49510000000000000000000000000000
      0x44
      dup3
      add
      mstore
      swap3
      dup2
      swap1
      dup5
      swap1
      0x64
      swap1
      dup3
      swap1
      dup5
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":7672:7709  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */
      gas
      call
      swap3
      dup4
      iszero
      tag_1474
      jumpi
      dup6
      swap4
      tag_1476
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1477:
      pop
      pop
      swap2
      tag_1478
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":7279:7299  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      mload(0x40)
      swap2
      tag_1479
      dup4
      tag_2
      jump\t// in
    tag_1479:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      dup7
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup7
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":7719:7811  _constantProductPair.swap(-int256(INITIAL_MINT_AMOUNT + 1), false, address(this), bytes(\"\")) */
      dup1
      swap7
      dup2
      swap6
      dup3
      swap5
      dup4
      mstore
        /* \"lib/forge-std/src/StdMath.sol\":124:202  -57896044618658097711785492504343953926634992332820282019728792003956564819968 */
      0xfffffffffffffffffffffffffffffffffffffffffffffffa9438a1d29cefffff
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":7719:7811  _constantProductPair.swap(-int256(INITIAL_MINT_AMOUNT + 1), false, address(this), bytes(\"\")) */
      dup5
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
      0x00
      0x24
      dup5
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":7349:7353  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x44
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x80
      0x64
      dup5
      add
      mstore
      0x84
      dup4
      add
      swap1
      tag_10
      jump\t// in
    tag_1478:
        /* \"test/unit/ConstantProductPair.t.sol\":7719:7811  _constantProductPair.swap(-int256(INITIAL_MINT_AMOUNT + 1), false, address(this), bytes(\"\")) */
      sub
      swap3
      gas
      call
      dup1
      iszero
      tag_215
      jumpi
      tag_1482
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      dup1
      return
        /* \"test/unit/ConstantProductPair.t.sol\":7719:7811  _constantProductPair.swap(-int256(INITIAL_MINT_AMOUNT + 1), false, address(this), bytes(\"\")) */
    tag_1482:
      dup2
      returndatasize
      dup4
      gt
      tag_1484
      jumpi
    tag_1485:
      tag_1486
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1486:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":7719:7811  _constantProductPair.swap(-int256(INITIAL_MINT_AMOUNT + 1), false, address(this), bytes(\"\")) */
      codesize
      dup1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      dup1
      return
        /* \"test/unit/ConstantProductPair.t.sol\":7719:7811  _constantProductPair.swap(-int256(INITIAL_MINT_AMOUNT + 1), false, address(this), bytes(\"\")) */
    tag_1484:
      pop
      returndatasize
      jump(tag_1485)
        /* \"test/unit/ConstantProductPair.t.sol\":7672:7709  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */
    tag_1476:
      tag_1489
      swap2
      swap3
      swap4
      pop
      tag_1
      jump\t// in
    tag_1489:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_285
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":7672:7709  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */
      dup3
      swap1
      dup5
      codesize
      jump(tag_1477)
    tag_1474:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      pop
      mload(0x40)
      swap1
      returndatasize
      swap1
      dup3
      returndatacopy
      returndatasize
      swap1
      revert
        /* \"test/unit/ConstantProductPair.t.sol\":7573:7661  _constantProductPair.swap(-int256(INITIAL_MINT_AMOUNT), false, address(this), bytes(\"\")) */
    tag_1469:
      swap1
      dup1
      swap3
      swap4
      pop
      returndatasize
      dup4
      gt
      tag_1492
      jumpi
    tag_1493:
      tag_1494
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1494:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":7573:7661  _constantProductPair.swap(-int256(INITIAL_MINT_AMOUNT), false, address(this), bytes(\"\")) */
      dup6
      swap1
      dup6
      codesize
      jump(tag_1470)
    tag_1492:
      pop
      returndatasize
      jump(tag_1493)
        /* \"test/unit/ConstantProductPair.t.sol\":7526:7563  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */
    tag_1463:
      tag_1497
      swap1
      tag_1
      jump\t// in
    tag_1497:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_255
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":7526:7563  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */
      dup2
      codesize
      jump(tag_1464)
        /* \"test/unit/ConstantProductPair.t.sol\":7424:7515  _constantProductPair.swap(int256(INITIAL_MINT_AMOUNT + 1), false, address(this), bytes(\"\")) */
    tag_1456:
      swap1
      dup1
      swap3
      swap4
      pop
      returndatasize
      dup4
      gt
      tag_1500
      jumpi
    tag_1501:
      tag_1502
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1502:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":7424:7515  _constantProductPair.swap(int256(INITIAL_MINT_AMOUNT + 1), false, address(this), bytes(\"\")) */
      dup6
      swap1
      dup6
      codesize
      jump(tag_1457)
    tag_1500:
      pop
      returndatasize
      jump(tag_1501)
        /* \"test/unit/ConstantProductPair.t.sol\":7377:7414  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */
    tag_1450:
      tag_1505
      swap1
      tag_1
      jump\t// in
    tag_1505:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_255
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":7377:7414  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */
      dup2
      codesize
      jump(tag_1451)
        /* \"test/unit/ConstantProductPair.t.sol\":7279:7366  _constantProductPair.swap(int256(INITIAL_MINT_AMOUNT), false, address(this), bytes(\"\")) */
    tag_1443:
      swap1
      dup1
      swap3
      swap4
      pop
      returndatasize
      dup4
      gt
      tag_1508
      jumpi
    tag_1509:
      tag_1510
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1510:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":7279:7366  _constantProductPair.swap(int256(INITIAL_MINT_AMOUNT), false, address(this), bytes(\"\")) */
      dup6
      swap1
      dup6
      codesize
      jump(tag_1444)
    tag_1508:
      pop
      returndatasize
      jump(tag_1509)
        /* \"test/unit/ConstantProductPair.t.sol\":7232:7269  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */
    tag_1437:
      tag_1513
      swap1
      tag_1
      jump\t// in
    tag_1513:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_291
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":7232:7269  vm.expectRevert(\"CP: NOT_ENOUGH_LIQ\") */
      dup3
      codesize
      jump(tag_1438)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_160:
      pop
      jumpi(tag_196, callvalue)
      dup1
      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
      slt
      tag_196
      jumpi
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":11493:11513  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      dup2
      sload
      and
      swap2
      dup4
      mload(0x40)
      swap2
      0x0902f1ac00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":11493:11527  _constantProductPair.getReserves() */
      swap4
      dup5
      dup5
      mstore
      0x80
      swap6
      dup7
      dup6
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":11493:11527  _constantProductPair.getReserves() */
      dup2
      dup5
      gas
      staticcall
      swap5
      dup6
      iszero
      tag_841
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup5
        /* \"test/unit/ConstantProductPair.t.sol\":11493:11527  _constantProductPair.getReserves() */
      swap6
      tag_1522
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1523:
      pop
      dup3
        /* \"test/unit/ConstantProductPair.t.sol\":11591:11598  _tokenA */
      0x19
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":11591:11649  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */
      swap1
      dup2
      extcodesize
      iszero
      tag_249
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup5
      swap2
      0x44
      dup4
      swap3
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":11591:11649  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */
      swap5
      dup6
      swap4
      dup5
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40c10f1900000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":11591:11649  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */
      dup5
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":11591:11649  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":11561:11565  1e17 */
      0x016345785d8a0000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      dup5
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":11591:11649  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */
      gas
      call
      swap1
      dup2
      iszero
      tag_841
      jumpi
      dup5
      swap2
      tag_1528
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1529:
      pop
      pop
      dup1
      sload
      mload(0x40)
      0xe12bd9d800000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":11659:11732  _constantProductPair.swap(int256(lAmountToSwap), true, address(this), \"\") */
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":12175:12179  1e17 */
      0x016345785d8a0000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":11659:11732  _constantProductPair.swap(int256(lAmountToSwap), true, address(this), \"\") */
      dup3
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":12337:12338  1 */
      0x01
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      dup3
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":11722:11726  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x44
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x80
      0x64
      dup3
      add
      mstore
      0x00
      0x84
      dup3
      add
      mstore
      0x20
      swap2
      dup3
      swap1
      dup3
      swap1
      0xa4
      swap1
      dup3
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":11722:11726  this */
      dup10
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup10
      and
        /* \"test/unit/ConstantProductPair.t.sol\":11659:11732  _constantProductPair.swap(int256(lAmountToSwap), true, address(this), \"\") */
      gas
      call
      dup1
      iszero
      tag_201
      jumpi
      tag_1533
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1534:
      pop
      dup3
        /* \"test/unit/ConstantProductPair.t.sol\":11752:11758  _alice */
      0x16
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"test/unit/ConstantProductPair.t.sol\":11743:11759  vm.prank(_alice) */
      swap1
      dup2
      extcodesize
      iszero
      tag_1565
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup6
      swap2
      0x24
      dup4
      swap3
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":11743:11759  vm.prank(_alice) */
      swap5
      dup6
      swap4
      dup5
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xca669fa700000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":11743:11759  vm.prank(_alice) */
      dup5
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":11743:11759  vm.prank(_alice) */
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":11743:11759  vm.prank(_alice) */
      gas
      call
      swap1
      dup2
      iszero
      tag_201
      jumpi
      dup6
      swap2
      tag_1539
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1540:
      pop
      dup2
      dup5
      dup5
      sload
      and
      0x44
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":11769:11835  _constantProductPair.transfer(address(_constantProductPair), 1e18) */
      dup1
      swap5
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xa9059cbb00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":11769:11835  _constantProductPair.transfer(address(_constantProductPair), 1e18) */
      dup4
      mstore
      dup1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":11769:11835  _constantProductPair.transfer(address(_constantProductPair), 1e18) */
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":11830:11834  1e18 */
      0x0de0b6b3a7640000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      dup5
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":11769:11835  _constantProductPair.transfer(address(_constantProductPair), 1e18) */
      gas
      call
      dup1
      iszero
      tag_201
      jumpi
      tag_1543
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1544:
      pop
      pop
      dup3
      0x40
      dup4
      dup4
      sload
      and
      0x24
      dup3
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":11845:11885  _constantProductPair.burn(address(this)) */
      dup1
      swap5
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x89afcb4400000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":11845:11885  _constantProductPair.burn(address(this)) */
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":11722:11726  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":11845:11885  _constantProductPair.burn(address(this)) */
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":11845:11885  _constantProductPair.burn(address(this)) */
      gas
      call
      dup1
      iszero
      tag_841
      jumpi
      tag_1547
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1548:
      pop
      dup2
      dup2
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":11896:11923  _constantProductPair.sync() */
      dup1
      extcodesize
      iszero
      tag_285
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup4
      dup1
      swap2
      0x04
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":11896:11923  _constantProductPair.sync() */
      dup1
      swap8
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xfff6cae900000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":11896:11923  _constantProductPair.sync() */
      dup4
      mstore
      gas
      call
      swap4
      dup5
      iszero
      tag_1474
      jumpi
      dup8
      swap5
      tag_1553
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1554:
      pop
      pop
      sload
      and
      swap3
      0x04
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":11979:12013  _constantProductPair.getReserves() */
      dup1
      swap6
      dup2
      swap4
      dup3
      mstore
      gas
      staticcall
      swap2
      dup3
      iszero
      tag_841
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":12023:12059  assertEq(lFinalIndex, lInitialIndex) */
      tag_316
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap4
      dup6
        /* \"test/unit/ConstantProductPair.t.sol\":11979:12013  _constantProductPair.getReserves() */
      swap4
      tag_1558
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1559:
      pop
      pop
      0xffff
      dup1
      swap2
      and
      swap2
      and
        /* \"test/unit/ConstantProductPair.t.sol\":12023:12059  assertEq(lFinalIndex, lInitialIndex) */
      tag_39
      jump\t// in
        /* \"test/unit/ConstantProductPair.t.sol\":11979:12013  _constantProductPair.getReserves() */
    tag_1558:
      tag_1560
      swap3
      swap4
      pop
      dup1
      returndatasize
      lt
      tag_328
      jumpi
      tag_330
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1560:
      swap3
      pop
      pop
      pop
      swap1
      codesize
      dup1
      jump(tag_1559)
        /* \"test/unit/ConstantProductPair.t.sol\":11896:11923  _constantProductPair.sync() */
    tag_1553:
      tag_1564
      swap2
      swap3
      swap5
      pop
      tag_1
      jump\t// in
    tag_1564:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_1565
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":11896:11923  _constantProductPair.sync() */
      dup5
      swap2
      dup7
      codesize
      jump(tag_1554)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1565:
      dup6
      dup1
      revert
        /* \"test/unit/ConstantProductPair.t.sol\":11845:11885  _constantProductPair.burn(address(this)) */
    tag_1547:
      tag_1567
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40
        /* \"test/unit/ConstantProductPair.t.sol\":11845:11885  _constantProductPair.burn(address(this)) */
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40
        /* \"test/unit/ConstantProductPair.t.sol\":11845:11885  _constantProductPair.burn(address(this)) */
      gt
      tag_407
      jumpi
      tag_409
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1567:
      pop
      jump(tag_1548)
        /* \"test/unit/ConstantProductPair.t.sol\":11769:11835  _constantProductPair.transfer(address(_constantProductPair), 1e18) */
    tag_1543:
      dup2
      tag_1571
      swap3
      swap1
      returndatasize
      lt
      tag_547
      jumpi
      tag_549
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1571:
      pop
      codesize
      dup1
      jump(tag_1544)
        /* \"test/unit/ConstantProductPair.t.sol\":11743:11759  vm.prank(_alice) */
    tag_1539:
      tag_1575
      swap1
      tag_1
      jump\t// in
    tag_1575:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_285
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":11743:11759  vm.prank(_alice) */
      dup4
      codesize
      jump(tag_1540)
        /* \"test/unit/ConstantProductPair.t.sol\":11659:11732  _constantProductPair.swap(int256(lAmountToSwap), true, address(this), \"\") */
    tag_1533:
      dup2
      dup1
      swap6
      pop
      returndatasize
      dup4
      gt
      tag_1578
      jumpi
    tag_1579:
      tag_1580
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1580:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":11659:11732  _constantProductPair.swap(int256(lAmountToSwap), true, address(this), \"\") */
      dup7
      swap3
      codesize
      jump(tag_1534)
    tag_1578:
      pop
      returndatasize
      jump(tag_1579)
        /* \"test/unit/ConstantProductPair.t.sol\":11591:11649  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */
    tag_1528:
      tag_1583
      swap1
      tag_1
      jump\t// in
    tag_1583:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_291
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":11591:11649  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */
      dup3
      codesize
      jump(tag_1529)
        /* \"test/unit/ConstantProductPair.t.sol\":11493:11527  _constantProductPair.getReserves() */
    tag_1522:
      tag_1586
      swap2
      swap6
      pop
      dup8
      returndatasize
      dup10
      gt
      tag_328
      jumpi
      tag_330
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1586:
      swap3
      pop
      pop
      pop
      swap4
      codesize
      jump(tag_1523)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_158:
      pop
      jumpi(tag_196, callvalue)
      dup1
      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
      slt
      tag_196
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":12767:12779  _stepTime(1) */
      tag_1594
      tag_79
      jump\t// in
    tag_1594:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      swap1
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":12789:12796  _tokenA */
      0x19
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":12810:12830  _constantProductPair */
      swap1
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap2
      dup4
      dup4
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":12789:12838  _tokenA.mint(address(_constantProductPair), 1e17) */
      swap3
      dup2
      extcodesize
      iszero
      tag_291
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      0x40c10f1900000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":12789:12838  _tokenA.mint(address(_constantProductPair), 1e17) */
      swap5
      dup6
      dup3
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":12789:12838  _tokenA.mint(address(_constantProductPair), 1e17) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":12833:12837  1e17 */
      0x016345785d8a0000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      dup5
      dup2
      0x44
      dup2
      dup4
      0x24
      swap9
      dup8
      dup11
      dup5
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":12789:12838  _tokenA.mint(address(_constantProductPair), 1e17) */
      gas
      call
      dup1
      iszero
      tag_201
      jumpi
      swap1
      dup6
      swap2
      tag_1599
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1600:
      pop
      pop
      dup6
      dup3
      sload
      and
      swap1
      mload(0x40)
      swap6
      dup7
      0xe12bd9d800000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":12848:12904  _constantProductPair.swap(1e17, true, address(this), \"\") */
      swap4
      dup5
      dup3
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":12894:12898  this */
      swap9
      dup10
      swap2
      dup2
      dup11
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":12848:12904  _constantProductPair.swap(1e17, true, address(this), \"\") */
      tag_1601
        /* \"test/unit/ConstantProductPair.t.sol\":12894:12898  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":12848:12904  _constantProductPair.swap(1e17, true, address(this), \"\") */
      dup4
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      0xa0
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":12175:12179  1e17 */
      0x016345785d8a0000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":12337:12338  1 */
      0x01
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
      dup5
      add
      mstore
      and
      0x40
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x80
      0x60
      dup3
      add
      mstore
      0x00
      0x80
      dup3
      add
      mstore
      add
      swap1
      jump
        /* \"test/unit/ConstantProductPair.t.sol\":12848:12904  _constantProductPair.swap(1e17, true, address(this), \"\") */
    tag_1601:
      sub
      swap3
      gas
      call
      dup1
      iszero
      tag_1089
      jumpi
      swap1
      dup9
      swap2
      tag_1604
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1605:
        /* \"test/unit/ConstantProductPair.t.sol\":12933:12945  _stepTime(1) */
      pop
      pop
      tag_1606
      tag_79
      jump\t// in
    tag_1606:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup8
        /* \"test/unit/ConstantProductPair.t.sol\":12789:12796  _tokenA */
      0x19
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      swap1
      dup9
      dup6
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":12955:13004  _tokenA.mint(address(_constantProductPair), 1e17) */
      swap2
      dup1
      extcodesize
      iszero
      tag_1227
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup8
      swap3
      swap2
      dup4
      0x44
      swap3
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":12955:13004  _tokenA.mint(address(_constantProductPair), 1e17) */
      swap7
      dup8
      swap6
      dup7
      swap5
      dup6
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":12955:13004  _tokenA.mint(address(_constantProductPair), 1e17) */
      dup6
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup11
      dup5
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":12955:13004  _tokenA.mint(address(_constantProductPair), 1e17) */
      gas
      call
      dup1
      iszero
      tag_201
      jumpi
      swap1
      dup6
      swap2
      tag_1611
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1612:
      pop
      pop
      dup2
      sload
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":13014:13070  _constantProductPair.swap(1e17, true, address(this), \"\") */
      swap2
      dup3
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":12175:12179  1e17 */
      0x016345785d8a0000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":13014:13070  _constantProductPair.swap(1e17, true, address(this), \"\") */
      dup4
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":12337:12338  1 */
      0x01
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      dup4
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":12894:12898  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x44
      dup4
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x80
      0x64
      dup4
      add
      mstore
      0x00
      0x84
      dup4
      add
      mstore
      dup6
      swap1
      dup3
      swap1
      0xa4
      swap1
      dup3
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":12894:12898  this */
      dup9
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup12
      and
        /* \"test/unit/ConstantProductPair.t.sol\":13014:13070  _constantProductPair.swap(1e17, true, address(this), \"\") */
      gas
      call
      dup1
      iszero
      tag_841
      jumpi
      swap1
      dup6
      swap2
      tag_1616
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1617:
      pop
      pop
      dup5
      dup2
      sload
      and
      swap1
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":13122:13156  _constantProductPair.getReserves() */
      swap6
      dup7
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x0902f1ac00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":13122:13156  _constantProductPair.getReserves() */
      dup5
      mstore
      dup4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":13122:13156  _constantProductPair.getReserves() */
      0x80
      swap6
      dup7
      swap4
      gas
      staticcall
      swap7
      dup8
      iszero
      tag_201
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffff
      0x44
      swap9
        /* \"test/unit/ConstantProductPair.t.sol\":13166:13185  assertEq(lIndex, 1) */
      tag_1620
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap3
      dup9
        /* \"test/unit/ConstantProductPair.t.sol\":13122:13156  _constantProductPair.getReserves() */
      swap2
      tag_1621
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1622:
      pop
      and
        /* \"test/unit/ConstantProductPair.t.sol\":13166:13185  assertEq(lIndex, 1) */
      tag_37
      jump\t// in
    tag_1620:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup1
      dup7
      sload
      and
      swap1
      dup4
      dup2
      dup5
      sload
      and
      swap3
      mload(0x40)
      swap10
      dup11
      dup1
      swap3
      0xc9d163d100000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":13222:13272  _oracleCaller.observation(_constantProductPair, 0) */
      swap7
      dup8
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":13222:13272  _oracleCaller.observation(_constantProductPair, 0) */
      dup4
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
      dup11
      dup11
      dup4
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":13222:13272  _oracleCaller.observation(_constantProductPair, 0) */
      gas
      staticcall
      swap8
      dup9
      iszero
      tag_376
      jumpi
      dup7
      swap8
      swap9
        /* \"test/unit/ConstantProductPair.t.sol\":13386:13405  lObs.timestamp != 0 */
      tag_1625
        /* \"test/unit/ConstantProductPair.t.sol\":13222:13272  _oracleCaller.observation(_constantProductPair, 0) */
      swap2
        /* \"test/unit/ConstantProductPair.t.sol\":13386:13400  lObs.timestamp */
      0x60
        /* \"test/unit/ConstantProductPair.t.sol\":13222:13272  _oracleCaller.observation(_constantProductPair, 0) */
      swap8
      swap9
      swap2
      tag_1626
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1627:
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":13293:13317  lObs.logAccRawPrice == 0 */
      tag_1628
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      mload
      0x0d
      signextend
        /* \"test/unit/ConstantProductPair.t.sol\":13293:13317  lObs.logAccRawPrice == 0 */
      iszero
      tag_76
      jump\t// in
    tag_1628:
        /* \"test/unit/ConstantProductPair.t.sol\":13339:13364  lObs.logAccLiquidity != 0 */
      tag_1629
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40
        /* \"test/unit/ConstantProductPair.t.sol\":13339:13359  lObs.logAccLiquidity */
      dup3
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
      0x06
      signextend
        /* \"test/unit/ConstantProductPair.t.sol\":13339:13364  lObs.logAccLiquidity != 0 */
      iszero
      iszero
      tag_76
      jump\t// in
    tag_1629:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":13386:13400  lObs.timestamp */
      swap7
      dup8
      swap2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":13386:13405  lObs.timestamp != 0 */
      iszero
      iszero
      tag_76
      jump\t// in
    tag_1625:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup1
      dup9
      sload
      and
      dup5
      dup3
      dup6
      sload
      and
      0x44
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":13424:13474  _oracleCaller.observation(_constantProductPair, 1) */
      dup1
      swap5
      dup2
      swap4
      dup9
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":13424:13474  _oracleCaller.observation(_constantProductPair, 1) */
      dup4
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":12777:12778  1 */
      0x01
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup13
      dup4
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":13424:13474  _oracleCaller.observation(_constantProductPair, 1) */
      gas
      staticcall
      swap1
      dup2
      iszero
      tag_1200
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":13386:13400  lObs.timestamp */
      0x60
        /* \"test/unit/ConstantProductPair.t.sol\":13588:13607  lObs.timestamp != 0 */
      tag_1632
        /* \"test/unit/ConstantProductPair.t.sol\":13424:13474  _oracleCaller.observation(_constantProductPair, 1) */
      swap3
      dup9
      swap3
      dup12
      swap2
      tag_1633
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1634:
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":13495:13519  lObs.logAccRawPrice != 0 */
      tag_1635
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      mload
      0x0d
      signextend
        /* \"test/unit/ConstantProductPair.t.sol\":13495:13519  lObs.logAccRawPrice != 0 */
      iszero
      iszero
      tag_76
      jump\t// in
    tag_1635:
        /* \"test/unit/ConstantProductPair.t.sol\":13541:13566  lObs.logAccLiquidity != 0 */
      tag_1636
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40
        /* \"test/unit/ConstantProductPair.t.sol\":13541:13561  lObs.logAccLiquidity */
      dup3
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
      0x06
      signextend
        /* \"test/unit/ConstantProductPair.t.sol\":13541:13566  lObs.logAccLiquidity != 0 */
      iszero
      iszero
      tag_76
      jump\t// in
    tag_1636:
        /* \"test/unit/ConstantProductPair.t.sol\":13588:13602  lObs.timestamp */
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":13588:13607  lObs.timestamp != 0 */
      iszero
      iszero
      tag_76
      jump\t// in
    tag_1632:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup1
      dup4
      sload
      and
        /* \"test/__fixtures/BaseTest.sol\":5270:5993  function _writeObservation(... */
      swap8
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x00
      mload(0x40)
      swap10
      dup3
      dup12
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      swap11
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x029a00000000000000000000000000000000000000000000000000000000
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      dup13
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xfffffffffffac700000000000000000000000000000000000000000000000000
      dup1
      dup12
      dup4
      add
      mstore
      0x2b
      dup3
      add
      mstore
      0x0539000000000000000000000000000000000000
      0x32
      dup3
      add
      mstore
      dup4
      dup2
      mstore
      tag_1637
      dup2
      tag_4
      jump\t// in
    tag_1637:
      mload
      swap11
      mload
      swap11
      dup4
      dup2
      lt
      tag_1638
      jumpi
    tag_1639:
      pop
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"test/__fixtures/BaseTest.sol\":5727:5738  vm.record() */
      dup1
      extcodesize
      iszero
      tag_291
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      0x266cf10900000000000000000000000000000000000000000000000000000000
        /* \"test/__fixtures/BaseTest.sol\":5727:5738  vm.record() */
      dup2
      mstore
      dup4
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/__fixtures/BaseTest.sol\":5727:5738  vm.record() */
      dup2
      dup4
      dup7
      gas
      call
      dup1
      iszero
      tag_841
      jumpi
      tag_1644
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1645:
      pop
      dup5
      dup5
      sload
      and
      dup9
      dup5
      0x44
      dup14
      mload(0x40)
        /* \"test/__fixtures/BaseTest.sol\":5748:5788  _oracleCaller.observation(aPair, aIndex) */
      swap5
      dup6
      swap4
      dup5
      swap3
      dup14
      dup5
      mstore
      dup10
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/__fixtures/BaseTest.sol\":5748:5788  _oracleCaller.observation(aPair, aIndex) */
      dup6
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
      dup4
      add
      mstore
        /* \"test/__fixtures/BaseTest.sol\":5748:5788  _oracleCaller.observation(aPair, aIndex) */
      gas
      staticcall
      dup1
      iszero
      tag_841
      jumpi
      tag_1648
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1649:
      pop
      mload(0x40)
      0x65bc948100000000000000000000000000000000000000000000000000000000
        /* \"test/__fixtures/BaseTest.sol\":5830:5857  vm.accesses(address(aPair)) */
      dup2
      mstore
      dup3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/__fixtures/BaseTest.sol\":5830:5857  vm.accesses(address(aPair)) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/__fixtures/BaseTest.sol\":5830:5857  vm.accesses(address(aPair)) */
      dup4
      dup2
      dup13
      dup2
      dup4
      dup7
      gas
      call
      swap1
      dup2
      iszero
      tag_841
      jumpi
      dup5
      swap2
      tag_1652
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1653:
      pop
        /* \"test/__fixtures/BaseTest.sol\":5895:5896  2 */
      0x02
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      mload
        /* \"test/__fixtures/BaseTest.sol\":5875:5896  lAccesses.length == 2 */
      sub
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_1654
      jumpi
        /* \"test/__fixtures/BaseTest.sol\":5963:5975  lAccesses[1] */
      tag_1656
      swap1
      tag_82
      jump\t// in
    tag_1656:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
        /* \"test/__fixtures/BaseTest.sol\":5938:5986  vm.store(address(aPair), lAccesses[1], lEncoded) */
      swap12
      dup2
      extcodesize
      iszero
      tag_285
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      0x70ca10bb00000000000000000000000000000000000000000000000000000000
        /* \"test/__fixtures/BaseTest.sol\":5938:5986  vm.store(address(aPair), lAccesses[1], lEncoded) */
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      swap4
      swap1
      swap4
      and
      0x04
        /* \"test/__fixtures/BaseTest.sol\":5938:5986  vm.store(address(aPair), lAccesses[1], lEncoded) */
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      dup4
      add
      swap13
      swap1
      swap13
      mstore
      0x44
      dup3
      add
      swap12
      swap1
      swap12
      mstore
      swap10
      dup2
      swap1
      dup12
      swap1
      0x64
      swap1
      dup3
      swap1
      dup5
      swap1
        /* \"test/__fixtures/BaseTest.sol\":5938:5986  vm.store(address(aPair), lAccesses[1], lEncoded) */
      gas
      call
      swap10
      dup11
      iszero
      tag_1474
      jumpi
      dup10
      swap11
      swap10
      swap7
      swap8
      swap9
      swap10
      tag_1662
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1663:
      pop
      pop
      swap1
      dup2
      dup7
      dup10
      0x44
      dup5
      dup10
      swap8
      swap7
      sload
      and
      dup6
      dup10
      sload
      and
      swap1
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":13767:13817  _oracleCaller.observation(_constantProductPair, 0) */
      swap11
      dup12
      swap5
      dup6
      swap4
      dup11
      dup6
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":13767:13817  _oracleCaller.observation(_constantProductPair, 0) */
      dup6
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
      dup4
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":13767:13817  _oracleCaller.observation(_constantProductPair, 0) */
      gas
      staticcall
      swap1
      dup2
      iszero
      tag_841
      jumpi
      dup9
        /* \"test/unit/ConstantProductPair.t.sol\":13386:13400  lObs.timestamp */
      0x60
        /* \"test/unit/ConstantProductPair.t.sol\":13767:13817  _oracleCaller.observation(_constantProductPair, 0) */
      dup5
      swap4
      dup11
      swap10
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x44
        /* \"test/unit/ConstantProductPair.t.sol\":13767:13817  _oracleCaller.observation(_constantProductPair, 0) */
      swap9
      swap2
      tag_1666
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1667:
      pop
      dup1
      mload
      0x0d
      signextend
      0x0539
        /* \"lib/solmate/lib/ds-test/src/test.sol\":4814:4820  a != b */
      swap1
      dup2
      dup2
      sub
        /* \"lib/solmate/lib/ds-test/src/test.sol\":4810:5010  if (a != b) {... */
      tag_1668
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1669:
        /* \"test/unit/ConstantProductPair.t.sol\":13889:13909  lObs.logAccLiquidity */
      pop
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40
        /* \"test/unit/ConstantProductPair.t.sol\":13889:13909  lObs.logAccLiquidity */
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
      0x06
      signextend
      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffac7
        /* \"lib/solmate/lib/ds-test/src/test.sol\":4814:4820  a != b */
      swap1
      dup2
      dup2
      sub
        /* \"lib/solmate/lib/ds-test/src/test.sol\":4810:5010  if (a != b) {... */
      tag_1670
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1671:
        /* \"test/unit/ConstantProductPair.t.sol\":13944:13958  lObs.timestamp */
      pop
      pop
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
      and
      0x029a
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5259:5265  a != b */
      swap1
      dup2
      dup2
      sub
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5255:5458  if (a != b) {... */
      tag_1672
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1673:
      pop
      pop
      sload
      and
      swap4
      sload
      and
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":12777:12778  1 */
      0x01
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":13990:14040  _oracleCaller.observation(_constantProductPair, 1) */
      swap9
      dup10
      swap6
      dup7
      swap5
      dup6
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":13990:14040  _oracleCaller.observation(_constantProductPair, 1) */
      dup6
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
      dup4
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":13990:14040  _oracleCaller.observation(_constantProductPair, 1) */
      gas
      staticcall
      dup1
      iszero
      tag_841
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":14154:14173  lObs.timestamp != 0 */
      tag_316
        /* \"test/unit/ConstantProductPair.t.sol\":13990:14040  _oracleCaller.observation(_constantProductPair, 1) */
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":13386:13400  lObs.timestamp */
      0x60
        /* \"test/unit/ConstantProductPair.t.sol\":13990:14040  _oracleCaller.observation(_constantProductPair, 1) */
      swap3
      dup7
      swap3
      tag_1677
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1678:
      pop
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":14061:14085  lObs.logAccRawPrice != 0 */
      tag_1635
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      mload
      0x0d
      signextend
        /* \"test/unit/ConstantProductPair.t.sol\":14061:14085  lObs.logAccRawPrice != 0 */
      iszero
      iszero
      tag_76
      jump\t// in
        /* \"test/unit/ConstantProductPair.t.sol\":13990:14040  _oracleCaller.observation(_constantProductPair, 1) */
    tag_1677:
      tag_1681
      swap3
      pop
      dup1
      returndatasize
      lt
      tag_320
      jumpi
      tag_322
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1681:
      codesize
      dup1
      jump(tag_1678)
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5255:5458  if (a != b) {... */
    tag_1672:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5286:5327  log(\"Error: a == b not satisfied [uint]\") */
      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup10
      mload(0x40)
      dup6
      dup2
      mstore
      0x22
      dup7
      dup3
      add
      mstore
      0x4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e
      0x40
      dup3
      add
      mstore
      0x745d000000000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":13386:13400  lObs.timestamp */
      0x60
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5286:5327  log(\"Error: a == b not satisfied [uint]\") */
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      swap2
      0x40
      dup4
      mstore
      tag_1685
      0x40
      dup5
      add
      0x40
      swap1
      0x0a
      dup2
      mstore
      0x2020457870656374656400000000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_1685:
      swap1
      dup5
      dup5
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5346:5377  log_named_uint(\"  Expected\", b) */
      dup3
      0xb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8
      swap4
      dup5
      swap3
      sub
      swap1
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      dup1
      swap2
      0x40
      dup3
      mstore
      tag_1686
      0x40
      dup4
      add
      0x40
      swap1
      0x0a
      dup2
      mstore
      0x2020202041637475616c00000000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_1686:
      swap1
      dup6
      dup4
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5396:5427  log_named_uint(\"    Actual\", a) */
      sub
      swap1
      log1
      tag_1687
      tag_42
      jump\t// in
    tag_1687:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5255:5458  if (a != b) {... */
      codesize
      dup1
      jump(tag_1673)
        /* \"lib/solmate/lib/ds-test/src/test.sol\":4810:5010  if (a != b) {... */
    tag_1670:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":4841:4881  log(\"Error: a == b not satisfied [int]\") */
      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup13
      mload(0x40)
      dup9
      dup2
      mstore
      0x21
      dup10
      dup3
      add
      mstore
      0x4572726f723a2061203d3d2062206e6f7420736174697366696564205b696e74
      0x40
      dup3
      add
      mstore
      0x5d00000000000000000000000000000000000000000000000000000000000000
      dup8
      dup3
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":4841:4881  log(\"Error: a == b not satisfied [int]\") */
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      swap2
      0x40
      dup4
      mstore
      tag_1688
      0x40
      dup5
      add
      0x40
      swap1
      0x0a
      dup2
      mstore
      0x2020457870656374656400000000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_1688:
      swap1
      dup8
      dup5
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":4900:4930  log_named_int(\"  Expected\", b) */
      dup3
      0x2fe632779174374378442a8e978bccfbdcc1d6b2b0d81f7e8eb776ab2286f168
      swap4
      dup5
      swap3
      sub
      swap1
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      dup1
      swap2
      0x40
      dup3
      mstore
      tag_1689
      0x40
      dup4
      add
      0x40
      swap1
      0x0a
      dup2
      mstore
      0x2020202041637475616c00000000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_1689:
      swap1
      dup9
      dup4
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":4949:4979  log_named_int(\"    Actual\", a) */
      sub
      swap1
      log1
      tag_1690
      tag_42
      jump\t// in
    tag_1690:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":4810:5010  if (a != b) {... */
      codesize
      dup1
      jump(tag_1671)
    tag_1668:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":4841:4881  log(\"Error: a == b not satisfied [int]\") */
      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup13
      mload(0x40)
      dup9
      dup2
      mstore
      0x21
      dup10
      dup3
      add
      mstore
      0x4572726f723a2061203d3d2062206e6f7420736174697366696564205b696e74
      0x40
      dup3
      add
      mstore
      0x5d00000000000000000000000000000000000000000000000000000000000000
      dup8
      dup3
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":4841:4881  log(\"Error: a == b not satisfied [int]\") */
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      swap2
      0x40
      dup4
      mstore
      tag_1691
      0x40
      dup5
      add
      0x40
      swap1
      0x0a
      dup2
      mstore
      0x2020457870656374656400000000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_1691:
      swap1
      dup8
      dup5
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":4900:4930  log_named_int(\"  Expected\", b) */
      dup3
      0x2fe632779174374378442a8e978bccfbdcc1d6b2b0d81f7e8eb776ab2286f168
      swap4
      dup5
      swap3
      sub
      swap1
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      dup1
      swap2
      0x40
      dup3
      mstore
      tag_1692
      0x40
      dup4
      add
      0x40
      swap1
      0x0a
      dup2
      mstore
      0x2020202041637475616c00000000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_1692:
      swap1
      dup9
      dup4
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":4949:4979  log_named_int(\"    Actual\", a) */
      sub
      swap1
      log1
      tag_1693
      tag_42
      jump\t// in
    tag_1693:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":4810:5010  if (a != b) {... */
      codesize
      dup1
      jump(tag_1669)
        /* \"test/unit/ConstantProductPair.t.sol\":13767:13817  _oracleCaller.observation(_constantProductPair, 0) */
    tag_1666:
      tag_1694
      swap2
      pop
      dup11
      returndatasize
      dup13
      gt
      tag_320
      jumpi
      tag_322
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1694:
      codesize
      jump(tag_1667)
        /* \"test/__fixtures/BaseTest.sol\":5938:5986  vm.store(address(aPair), lAccesses[1], lEncoded) */
    tag_1662:
      dup2
      swap3
      swap4
      swap5
      swap6
      swap7
      pop
      tag_1698
      swap1
      tag_1
      jump\t// in
    tag_1698:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_196
      jumpi
        /* \"test/__fixtures/BaseTest.sol\":5938:5986  vm.store(address(aPair), lAccesses[1], lEncoded) */
      swap1
      dup2
      dup10
      swap6
      swap5
      swap4
      swap3
      jump(tag_1663)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1654:
      0x64
      dup6
      0x1a
      dup14
      mload(0x40)
      swap3
      0x08c379a000000000000000000000000000000000000000000000000000000000
      dup5
      mstore
      0x04
      dup5
      add
      mstore
      dup3
      add
      mstore
      0x696e76616c6964206e756d626572206f66206163636573736573000000000000
      0x44
      dup3
      add
      mstore
      revert
        /* \"test/__fixtures/BaseTest.sol\":5830:5857  vm.accesses(address(aPair)) */
    tag_1652:
      tag_1701
      swap2
      pop
      returndatasize
      dup1
      dup7
      dup4
      returndatacopy
      tag_1237
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1701:
      pop
      codesize
      jump(tag_1653)
        /* \"test/__fixtures/BaseTest.sol\":5748:5788  _oracleCaller.observation(aPair, aIndex) */
    tag_1648:
      tag_1703
      swap1
      dup10
      returndatasize
      dup12
      gt
      tag_320
      jumpi
      tag_322
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1703:
      pop
      codesize
      jump(tag_1649)
        /* \"test/__fixtures/BaseTest.sol\":5727:5738  vm.record() */
    tag_1644:
      tag_1707
      swap1
      swap4
      swap2
      swap4
      tag_1
      jump\t// in
    tag_1707:
      swap2
      codesize
      jump(tag_1645)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1638:
      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
      swap1
      dup5
      sub
      0x03
      shl
      shl
      swap1
      swap11
      and
      swap10
      codesize
      jump(tag_1639)
        /* \"test/unit/ConstantProductPair.t.sol\":13424:13474  _oracleCaller.observation(_constantProductPair, 1) */
    tag_1633:
      tag_1708
      swap2
      pop
      dup9
      returndatasize
      dup11
      gt
      tag_320
      jumpi
      tag_322
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1708:
      codesize
      jump(tag_1634)
        /* \"test/unit/ConstantProductPair.t.sol\":13222:13272  _oracleCaller.observation(_constantProductPair, 0) */
    tag_1626:
      tag_1712
      swap2
      pop
      dup7
      returndatasize
      dup9
      gt
      tag_320
      jumpi
      tag_322
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1712:
      codesize
      jump(tag_1627)
        /* \"test/unit/ConstantProductPair.t.sol\":13122:13156  _constantProductPair.getReserves() */
    tag_1621:
      tag_1716
      swap2
      pop
      dup7
      returndatasize
      dup9
      gt
      tag_328
      jumpi
      tag_330
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1716:
      swap3
      pop
      pop
      pop
      codesize
      jump(tag_1622)
        /* \"test/unit/ConstantProductPair.t.sol\":13014:13070  _constantProductPair.swap(1e17, true, address(this), \"\") */
    tag_1616:
      dup2
      returndatasize
      dup4
      gt
      tag_1720
      jumpi
    tag_1721:
      tag_1722
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1722:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":13014:13070  _constantProductPair.swap(1e17, true, address(this), \"\") */
      dup4
      codesize
      jump(tag_1617)
    tag_1720:
      pop
      returndatasize
      jump(tag_1721)
        /* \"test/unit/ConstantProductPair.t.sol\":12955:13004  _tokenA.mint(address(_constantProductPair), 1e17) */
    tag_1611:
      tag_1725
      swap1
      tag_1
      jump\t// in
    tag_1725:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_285
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":12955:13004  _tokenA.mint(address(_constantProductPair), 1e17) */
      dup4
      codesize
      jump(tag_1612)
        /* \"test/unit/ConstantProductPair.t.sol\":12848:12904  _constantProductPair.swap(1e17, true, address(this), \"\") */
    tag_1604:
      dup2
      returndatasize
      dup4
      gt
      tag_1728
      jumpi
    tag_1729:
      tag_1730
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1730:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":12848:12904  _constantProductPair.swap(1e17, true, address(this), \"\") */
      dup7
      codesize
      jump(tag_1605)
    tag_1728:
      pop
      returndatasize
      jump(tag_1729)
        /* \"test/unit/ConstantProductPair.t.sol\":12789:12838  _tokenA.mint(address(_constantProductPair), 1e17) */
    tag_1599:
      tag_1733
      swap1
      tag_1
      jump\t// in
    tag_1733:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_285
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":12789:12838  _tokenA.mint(address(_constantProductPair), 1e17) */
      dup4
      codesize
      jump(tag_1600)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_156:
      pop
      jumpi(tag_196, callvalue)
      dup1
      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
      slt
      tag_196
      jumpi
      0xffffffffffffffffffffffffffffffffffffffff
      dup1
        /* \"test/unit/ConstantProductPair.t.sol\":6177:6227  _createPair(address(_tokenB), address(_tokenC), 0) */
      tag_1740
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":6197:6204  _tokenB */
      0x1a
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      dup3
        /* \"test/unit/ConstantProductPair.t.sol\":6215:6222  _tokenC */
      0x1b
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":6177:6227  _createPair(address(_tokenB), address(_tokenC), 0) */
      swap1
      tag_46
      jump\t// in
    tag_1740:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      and
      swap1
      dup1
        /* \"test/unit/ConstantProductPair.t.sol\":6197:6204  _tokenB */
      0x1a
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":6384:6422  _tokenB.mint(address(lPair), lAmountB) */
      swap2
      dup3
      extcodesize
      iszero
      tag_285
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      swap1
      dup5
      0x40c10f1900000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":6384:6422  _tokenB.mint(address(lPair), lAmountB) */
      swap3
      dup4
      dup2
      mstore
      dup3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":6384:6422  _tokenB.mint(address(lPair), lAmountB) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      dup2
      0x44
      dup2
      dup4
      0x24
      swap11
      0xfffffffffffffc72815b397fff
      dup13
      dup5
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":6384:6422  _tokenB.mint(address(lPair), lAmountB) */
      gas
      call
      dup1
      iszero
      tag_219
      jumpi
      tag_1745
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1746:
      pop
      dup4
        /* \"test/unit/ConstantProductPair.t.sol\":6215:6222  _tokenC */
      0x1b
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":6432:6470  _tokenC.mint(address(lPair), lAmountC) */
      dup1
      extcodesize
      iszero
      tag_255
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      dup1
      swap2
      0x44
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":6432:6470  _tokenC.mint(address(lPair), lAmountC) */
      dup1
      swap5
      dup2
      swap4
      dup10
      dup4
      mstore
      dup9
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":6432:6470  _tokenC.mint(address(lPair), lAmountC) */
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffff
      dup13
      dup5
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":6432:6470  _tokenC.mint(address(lPair), lAmountC) */
      gas
      call
      dup1
      iszero
      tag_219
      jumpi
      tag_1751
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1752:
      pop
      pop
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":6480:6505  lPair.mint(address(this)) */
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x6a62784200000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":6480:6505  lPair.mint(address(this)) */
      dup5
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":6499:6503  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":6480:6505  lPair.mint(address(this)) */
      dup6
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":6480:6505  lPair.mint(address(this)) */
      swap4
      dup5
      dup2
      dup8
      dup2
      dup11
      dup8
      gas
      call
      swap1
      dup2
      iszero
      tag_1089
      jumpi
      dup6
      swap2
      tag_1755
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1756:
      pop
      pop
      dup6
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":6197:6204  _tokenB */
      0x1a
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":6531:6572  _tokenB.mint(address(lPair), lSwapAmount) */
      swap4
      dup5
      extcodesize
      iszero
      tag_255
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":6531:6572  _tokenB.mint(address(lPair), lSwapAmount) */
      swap1
      dup2
      mstore
      dup4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":6531:6572  _tokenB.mint(address(lPair), lSwapAmount) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":6260:6268  0.001e18 */
      dup2
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x44
        /* \"test/unit/ConstantProductPair.t.sol\":6260:6268  0.001e18 */
      dup2
      dup4
      0x038d7ea4c68000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap10
      dup11
      dup14
      dup5
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":6531:6572  _tokenB.mint(address(lPair), lSwapAmount) */
      gas
      call
      dup1
      iszero
      tag_219
      jumpi
      tag_1761
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1762:
      pop
      pop
      mload(0x40)
      0x0dfe168100000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":6606:6620  lPair.token0() */
      dup2
      mstore
      dup5
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":6606:6620  lPair.token0() */
      dup2
      dup7
      gas
      staticcall
      swap4
      dup5
      iszero
      tag_1089
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_1765
        /* \"test/unit/ConstantProductPair.t.sol\":6606:6620  lPair.token0() */
      swap5
      dup7
      swap3
      dup10
      swap2
      tag_1766
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1767:
      pop
      dup4
      dup1
        /* \"test/unit/ConstantProductPair.t.sol\":6197:6204  _tokenB */
      0x1a
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      swap2
      and
        /* \"test/unit/ConstantProductPair.t.sol\":6606:6631  lPair.token0() == _tokenB */
      eq
        /* \"test/unit/ConstantProductPair.t.sol\":6606:6676  lPair.token0() == _tokenB ? int256(lSwapAmount) : -int256(lSwapAmount) */
      0x00
      eq
      tag_1768
      jumpi
    tag_1770:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      swap1
      tag_1771
      dup3
      tag_2
      jump\t// in
    tag_1771:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      dup9
      dup3
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":6582:6718  lPair.swap(... */
      swap6
      dup7
      swap3
      dup4
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xe12bd9d800000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":6582:6718  lPair.swap(... */
      dup5
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":6582:6718  lPair.swap(... */
      dup5
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":6678:6682  true */
      0x01
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup11
      dup5
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":6499:6503  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x44
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x80
      0x64
      dup5
      add
      mstore
      0x84
      dup4
      add
      swap1
      tag_10
      jump\t// in
    tag_1765:
        /* \"test/unit/ConstantProductPair.t.sol\":6582:6718  lPair.swap(... */
      sub
      dup2
      dup10
      dup7
      gas
      call
      dup1
      iszero
      tag_376
      jumpi
      dup6
      swap4
      dup6
      swap2
      tag_1774
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":6606:6676  lPair.token0() == _tokenB ? int256(lSwapAmount) : -int256(lSwapAmount) */
    tag_1775:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      pop
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":6197:6204  _tokenB */
      0x1a
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      mload(0x40)
      swap5
      dup6
      dup1
      swap3
      0x70a0823100000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":6756:6789  _tokenB.balanceOf(address(lPair)) */
      swap7
      dup8
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":6756:6789  _tokenB.balanceOf(address(lPair)) */
      dup4
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":6756:6789  _tokenB.balanceOf(address(lPair)) */
      gas
      staticcall
      dup1
      iszero
      tag_376
      jumpi
      dup5
      swap4
      dup8
      swap2
      tag_1778
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":6606:6676  lPair.token0() == _tokenB ? int256(lSwapAmount) : -int256(lSwapAmount) */
    tag_1779:
        /* \"test/unit/ConstantProductPair.t.sol\":6747:6809  assertEq(_tokenB.balanceOf(address(lPair)), type(uint104).max) */
      pop
      tag_1780
      swap1
      tag_38
      jump\t// in
    tag_1780:
        /* \"test/unit/ConstantProductPair.t.sol\":6215:6222  _tokenC */
      0x1b
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      swap4
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":6828:6860  _tokenC.balanceOf(address(this)) */
      dup1
      swap6
      dup2
      swap4
      dup3
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":6499:6503  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":6828:6860  _tokenC.balanceOf(address(this)) */
      dup4
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":6828:6860  _tokenC.balanceOf(address(this)) */
      gas
      staticcall
      swap2
      dup3
      iszero
      tag_215
      jumpi
      dup4
      swap3
      tag_1783
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":6606:6676  lPair.token0() == _tokenB ? int256(lSwapAmount) : -int256(lSwapAmount) */
    tag_1784:
        /* \"test/unit/ConstantProductPair.t.sol\":6862:6873  0.000997e18 */
      pop
      0x038ac426d75000
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5259:5265  a != b */
      swap2
      dup3
      dup2
      sub
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5255:5458  if (a != b) {... */
      tag_592
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup4
      dup1
      return
        /* \"test/unit/ConstantProductPair.t.sol\":6828:6860  _tokenC.balanceOf(address(this)) */
    tag_1783:
      swap1
      dup1
      swap3
      pop
      dup2
      dup2
      returndatasize
      dup4
      gt
      tag_1790
      jumpi
    tag_1791:
      tag_1792
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1792:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":6828:6860  _tokenC.balanceOf(address(this)) */
      swap1
      codesize
      jump(tag_1784)
    tag_1790:
      pop
      returndatasize
      jump(tag_1791)
        /* \"test/unit/ConstantProductPair.t.sol\":6756:6789  _tokenB.balanceOf(address(lPair)) */
    tag_1778:
      dup5
      dup2
      swap6
      swap3
      pop
      returndatasize
      dup4
      gt
      tag_1795
      jumpi
    tag_1796:
      tag_1797
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1797:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":6747:6809  assertEq(_tokenB.balanceOf(address(lPair)), type(uint104).max) */
      tag_1780
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup5
      swap4
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":6756:6789  _tokenB.balanceOf(address(lPair)) */
      swap1
      jump(tag_1779)
    tag_1795:
      pop
      returndatasize
      jump(tag_1796)
        /* \"test/unit/ConstantProductPair.t.sol\":6582:6718  lPair.swap(... */
    tag_1774:
      swap1
      dup1
      swap3
      swap5
      pop
      returndatasize
      dup4
      gt
      tag_1800
      jumpi
    tag_1801:
      tag_1802
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1802:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":6582:6718  lPair.swap(... */
      dup4
      swap2
      dup4
      codesize
      jump(tag_1775)
    tag_1800:
      pop
      returndatasize
      jump(tag_1801)
        /* \"test/unit/ConstantProductPair.t.sol\":6606:6676  lPair.token0() == _tokenB ? int256(lSwapAmount) : -int256(lSwapAmount) */
    tag_1768:
      pop
        /* \"lib/forge-std/src/StdMath.sol\":124:202  -57896044618658097711785492504343953926634992332820282019728792003956564819968 */
      0xfffffffffffffffffffffffffffffffffffffffffffffffffffc72815b398000
        /* \"test/unit/ConstantProductPair.t.sol\":6606:6676  lPair.token0() == _tokenB ? int256(lSwapAmount) : -int256(lSwapAmount) */
      jump(tag_1770)
        /* \"test/unit/ConstantProductPair.t.sol\":6606:6620  lPair.token0() */
    tag_1766:
      tag_1805
      swap2
      pop
      dup4
      returndatasize
      dup6
      gt
      tag_1018
      jumpi
      tag_1020
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1805:
      codesize
      jump(tag_1767)
        /* \"test/unit/ConstantProductPair.t.sol\":6531:6572  _tokenB.mint(address(lPair), lSwapAmount) */
    tag_1761:
      tag_1809
      swap1
      tag_1
      jump\t// in
    tag_1809:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_1565
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":6531:6572  _tokenB.mint(address(lPair), lSwapAmount) */
      dup6
      codesize
      jump(tag_1762)
        /* \"test/unit/ConstantProductPair.t.sol\":6480:6505  lPair.mint(address(this)) */
    tag_1755:
      dup2
      returndatasize
      dup4
      gt
      tag_1812
      jumpi
    tag_1813:
      tag_1814
      dup2
      dup4
      tag_6
      jump\t// in
    tag_1814:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":6480:6505  lPair.mint(address(this)) */
      dup4
      codesize
      jump(tag_1756)
    tag_1812:
      pop
      returndatasize
      jump(tag_1813)
        /* \"test/unit/ConstantProductPair.t.sol\":6432:6470  _tokenC.mint(address(lPair), lAmountC) */
    tag_1751:
      tag_1817
      swap1
      tag_1
      jump\t// in
    tag_1817:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_249
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":6432:6470  _tokenC.mint(address(lPair), lAmountC) */
      dup5
      codesize
      jump(tag_1752)
        /* \"test/unit/ConstantProductPair.t.sol\":6384:6422  _tokenB.mint(address(lPair), lAmountB) */
    tag_1745:
      tag_1820
      swap1
      tag_1
      jump\t// in
    tag_1820:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_249
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":6384:6422  _tokenB.mint(address(lPair), lAmountB) */
      dup5
      codesize
      jump(tag_1746)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_154:
      pop
      jumpi(tag_196, callvalue)
      dup1
      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
      slt
      tag_196
      jumpi
      0x010000000000000000000000000000000000000000
      0xffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":5673:5705  _validateCallback = _reenterSwap */
      0x21
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      or
        /* \"test/unit/ConstantProductPair.t.sol\":5673:5705  _validateCallback = _reenterSwap */
      0x21
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sstore
      0xffffffffffffffffffffffffffffffffffffffff
      dup1
        /* \"test/unit/ConstantProductPair.t.sol\":5786:5838  _getToken0Token1(address(_tokenA), address(_tokenB)) */
      tag_1827
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":5811:5818  _tokenA */
      0x19
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      dup3
        /* \"test/unit/ConstantProductPair.t.sol\":5829:5836  _tokenB */
      0x1a
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":5786:5838  _getToken0Token1(address(_tokenA), address(_tokenB)) */
      swap1
      tag_49
      jump\t// in
    tag_1827:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      pop
      and
      swap1
      dup3
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":5900:5920  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":5864:5928  MintableERC20(lToken0).mint(address(_constantProductPair), 1e18) */
      dup4
      extcodesize
      iszero
      tag_255
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":5864:5928  MintableERC20(lToken0).mint(address(_constantProductPair), 1e18) */
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40c10f1900000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":5864:5928  MintableERC20(lToken0).mint(address(_constantProductPair), 1e18) */
      dup3
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":5864:5928  MintableERC20(lToken0).mint(address(_constantProductPair), 1e18) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":5923:5927  1e18 */
      dup2
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x44
        /* \"test/unit/ConstantProductPair.t.sol\":5923:5927  1e18 */
      dup2
      dup4
      0x0de0b6b3a7640000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap9
      dup10
      0x24
      dup5
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":5864:5928  MintableERC20(lToken0).mint(address(_constantProductPair), 1e18) */
      gas
      call
      dup1
      iszero
      tag_219
      jumpi
      tag_1832
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1833:
      pop
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"test/unit/ConstantProductPair.t.sol\":5938:5967  vm.expectRevert(\"REENTRANCY\") */
      dup1
      extcodesize
      iszero
      tag_255
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      dup1
      swap2
      0x64
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":5938:5967  vm.expectRevert(\"REENTRANCY\") */
      dup1
      swap5
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xf28dceb300000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":5938:5967  vm.expectRevert(\"REENTRANCY\") */
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":5938:5967  vm.expectRevert(\"REENTRANCY\") */
      dup5
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
      0x0a
      0x24
      dup5
      add
      mstore
      0x5245454e5452414e435900000000000000000000000000000000000000000000
      0x44
      dup5
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":5938:5967  vm.expectRevert(\"REENTRANCY\") */
      gas
      call
      dup1
      iszero
      tag_219
      jumpi
      tag_1838
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1839:
      pop
      pop
      tag_1840
      swap2
      0x20
      swap2
        /* \"test/unit/ConstantProductPair.t.sol\":5900:5920  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      tag_1841
      tag_50
      jump\t// in
    tag_1841:
      swap2
      dup6
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":5977:6045  _constantProductPair.swap(1e18, true, address(this), bytes(hex\"00\")) */
      dup1
      swap7
      dup2
      swap6
      dup3
      swap5
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xe12bd9d800000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":5977:6045  _constantProductPair.swap(1e18, true, address(this), bytes(hex\"00\")) */
      dup5
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":5977:6045  _constantProductPair.swap(1e18, true, address(this), bytes(hex\"00\")) */
      dup5
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":5693:5705  _reenterSwap */
      0x01
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      dup5
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":6023:6027  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x44
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x80
      0x64
      dup5
      add
      mstore
      0x84
      dup4
      add
      swap1
      tag_10
      jump\t// in
    tag_1840:
        /* \"test/unit/ConstantProductPair.t.sol\":5977:6045  _constantProductPair.swap(1e18, true, address(this), bytes(hex\"00\")) */
      sub
      swap3
      gas
      call
      dup1
      iszero
      tag_219
      jumpi
      tag_221
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      pop
      dup1
      return
        /* \"test/unit/ConstantProductPair.t.sol\":5938:5967  vm.expectRevert(\"REENTRANCY\") */
    tag_1838:
      tag_1851
      swap1
      tag_1
      jump\t// in
    tag_1851:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_291
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":5938:5967  vm.expectRevert(\"REENTRANCY\") */
      dup3
      codesize
      jump(tag_1839)
        /* \"test/unit/ConstantProductPair.t.sol\":5864:5928  MintableERC20(lToken0).mint(address(_constantProductPair), 1e18) */
    tag_1832:
      tag_1854
      swap1
      tag_1
      jump\t// in
    tag_1854:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_291
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":5864:5928  MintableERC20(lToken0).mint(address(_constantProductPair), 1e18) */
      dup3
      codesize
      jump(tag_1833)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_152:
      pop
      jumpi(tag_196, callvalue)
      dup1
      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
      slt
      tag_196
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":7040:7064  stdError.arithmeticError */
      dup1
      tag_1861
      tag_47
      jump\t// in
    tag_1861:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"test/unit/ConstantProductPair.t.sol\":7024:7065  vm.expectRevert(stdError.arithmeticError) */
      dup1
      extcodesize
      iszero
      tag_1862
      jumpi
        /* \"lib/forge-std/src/StdError.sol\":317:364  abi.encodeWithSignature(\"Panic(uint256)\", 0x11) */
      tag_1864
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup4
      swap3
      swap2
      dup4
      swap3
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":7024:7065  vm.expectRevert(stdError.arithmeticError) */
      swap5
      dup6
      dup1
      swap5
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xf28dceb300000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":7024:7065  vm.expectRevert(stdError.arithmeticError) */
      dup4
      mstore
        /* \"lib/forge-std/src/StdError.sol\":317:364  abi.encodeWithSignature(\"Panic(uint256)\", 0x11) */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":7024:7065  vm.expectRevert(stdError.arithmeticError) */
      dup5
      add
        /* \"lib/forge-std/src/StdError.sol\":317:364  abi.encodeWithSignature(\"Panic(uint256)\", 0x11) */
      mstore
      0x24
      dup4
      add
      swap1
      tag_10
      jump\t// in
    tag_1864:
        /* \"test/unit/ConstantProductPair.t.sol\":7024:7065  vm.expectRevert(stdError.arithmeticError) */
      sub
      swap3
      gas
      call
      dup1
      iszero
      tag_219
      jumpi
      tag_1867
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1868:
      pop
        /* \"lib/forge-std/src/StdError.sol\":317:364  abi.encodeWithSignature(\"Panic(uint256)\", 0x11) */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":7075:7095  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      0xa4
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":7075:7135  _constantProductPair.swap(lSwapAmt, true, address(this), \"\") */
      dup1
      swap5
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xe12bd9d800000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":7075:7135  _constantProductPair.swap(lSwapAmt, true, address(this), \"\") */
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":6973:6989  type(int256).min */
      0x8000000000000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":7075:7135  _constantProductPair.swap(lSwapAmt, true, address(this), \"\") */
      dup5
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":7111:7115  true */
      0x01
        /* \"lib/forge-std/src/StdError.sol\":317:364  abi.encodeWithSignature(\"Panic(uint256)\", 0x11) */
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup5
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":7125:7129  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x44
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x80
      0x64
      dup5
      add
      mstore
      0x00
      0x84
      dup5
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":7075:7135  _constantProductPair.swap(lSwapAmt, true, address(this), \"\") */
      gas
      call
      dup1
      iszero
      tag_219
      jumpi
      tag_221
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      pop
      dup1
      return
        /* \"test/unit/ConstantProductPair.t.sol\":7024:7065  vm.expectRevert(stdError.arithmeticError) */
    tag_1867:
      tag_1878
      swap1
      tag_1
      jump\t// in
    tag_1878:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_196
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":7024:7065  vm.expectRevert(stdError.arithmeticError) */
      dup1
      codesize
      jump(tag_1868)
    tag_1862:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      pop
      pop
      revert
    tag_150:
      pop
      jumpi(tag_196, callvalue)
      dup1
      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
      slt
      tag_196
      jumpi
      0xffffffffffffffffffffffffffffffffffffffff
      dup2
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":18245:18253  _factory */
      0x13
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"test/unit/ConstantProductPair.t.sol\":18228:18255  vm.prank(address(_factory)) */
      dup1
      extcodesize
      iszero
      tag_291
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      dup4
      swap3
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":18228:18255  vm.prank(address(_factory)) */
      swap5
      dup6
      swap4
      dup5
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xca669fa700000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":18228:18255  vm.prank(address(_factory)) */
      dup5
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":18228:18255  vm.prank(address(_factory)) */
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":18228:18255  vm.prank(address(_factory)) */
      gas
      call
      dup1
      iszero
      tag_312
      jumpi
      tag_1889
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1890:
        /* \"test/unit/ConstantProductPair.t.sol\":18265:18285  _constantProductPair */
      pop
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      dup3
      dup2
      dup4
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":18265:18305  _constantProductPair.setCustomSwapFee(0) */
      dup1
      extcodesize
      iszero
      tag_255
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      swap1
      0x24
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":18265:18305  _constantProductPair.setCustomSwapFee(0) */
      dup1
      swap5
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x9568e73b00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":18265:18305  _constantProductPair.setCustomSwapFee(0) */
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x00
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":18265:18305  _constantProductPair.setCustomSwapFee(0) */
      dup5
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":18265:18305  _constantProductPair.setCustomSwapFee(0) */
      gas
      call
      dup1
      iszero
      tag_312
      jumpi
      tag_1895
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1896:
        /* \"test/unit/ConstantProductPair.t.sol\":18337:18350  _stepTime(10) */
      pop
      tag_1897
      tag_78
      jump\t// in
    tag_1897:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup1
        /* \"test/unit/ConstantProductPair.t.sol\":18397:18404  _tokenA */
      0x19
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      dup2
      dup4
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":18397:18448  _tokenA.mint(address(_constantProductPair), 100e18) */
      swap1
      dup1
      extcodesize
      iszero
      tag_249
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      0x40c10f1900000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":18397:18448  _tokenA.mint(address(_constantProductPair), 100e18) */
      dup1
      dup3
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      swap4
      swap1
      swap4
      and
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":18397:18448  _tokenA.mint(address(_constantProductPair), 100e18) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":18441:18447  100e18 */
      0x056bc75e2d63100000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      dup3
      add
      mstore
      swap1
      dup6
      swap1
      dup3
      swap1
      0x44
      swap1
      dup3
      swap1
      dup5
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":18397:18448  _tokenA.mint(address(_constantProductPair), 100e18) */
      gas
      call
      dup1
      iszero
      tag_312
      jumpi
      tag_1903
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1904:
      pop
      dup2
      dup4
      sload
      and
      swap1
      dup5
      0x20
      dup5
        /* \"test/unit/ConstantProductPair.t.sol\":18498:18502  _bob */
      0x17
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      swap4
      0xa4
      mload(0x40)
      dup1
      swap5
      dup2
      swap4
      0xe12bd9d800000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":18458:18507  _constantProductPair.swap(100e18, true, _bob, \"\") */
      swap9
      dup10
      dup5
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":18441:18447  100e18 */
      0x056bc75e2d63100000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":18458:18507  _constantProductPair.swap(100e18, true, _bob, \"\") */
      dup6
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":18492:18496  true */
      0x01
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      dup6
      add
      mstore
      0x44
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x80
      0x64
      dup5
      add
      mstore
      0x00
      0x84
      dup5
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":18458:18507  _constantProductPair.swap(100e18, true, _bob, \"\") */
      gas
      call
      dup1
      iszero
      tag_312
      jumpi
      tag_1907
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1908:
        /* \"test/unit/ConstantProductPair.t.sol\":18517:18530  _stepTime(10) */
      pop
      tag_1909
      tag_78
      jump\t// in
    tag_1909:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
        /* \"test/unit/ConstantProductPair.t.sol\":18397:18404  _tokenA */
      0x19
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      dup4
      dup6
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":18563:18614  _tokenA.mint(address(_constantProductPair), 200e18) */
      dup2
      extcodesize
      iszero
      tag_1219
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":18563:18614  _tokenA.mint(address(_constantProductPair), 200e18) */
      swap3
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":18563:18614  _tokenA.mint(address(_constantProductPair), 200e18) */
      dup4
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":18607:18613  200e18 */
      dup6
      dup3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x44
        /* \"test/unit/ConstantProductPair.t.sol\":18607:18613  200e18 */
      dup2
      dup4
      0x0ad78ebc5ac6200000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap6
      dup7
      0x24
      dup5
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":18563:18614  _tokenA.mint(address(_constantProductPair), 200e18) */
      gas
      call
      swap2
      dup3
      iszero
      tag_312
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":18563:18614  _tokenA.mint(address(_constantProductPair), 200e18) */
      swap3
      tag_1914
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1915:
      pop
      0xa4
      dup5
      dup7
      sload
      and
      swap4
      dup8
      dup7
        /* \"test/unit/ConstantProductPair.t.sol\":18498:18502  _bob */
      0x17
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      swap6
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":18624:18673  _constantProductPair.swap(200e18, true, _bob, \"\") */
      swap7
      dup8
      swap6
      dup7
      swap5
      dup6
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":18624:18673  _constantProductPair.swap(200e18, true, _bob, \"\") */
      dup6
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":18492:18496  true */
      0x01
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      dup6
      add
      mstore
      0x44
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x80
      0x64
      dup5
      add
      mstore
      0x00
      0x84
      dup5
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":18624:18673  _constantProductPair.swap(200e18, true, _bob, \"\") */
      gas
      call
      dup1
      iszero
      tag_312
      jumpi
      tag_1918
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1919:
        /* \"test/unit/ConstantProductPair.t.sol\":18683:18696  _stepTime(10) */
      pop
      tag_1920
      tag_78
      jump\t// in
    tag_1920:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      dup2
      dup4
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":18706:18733  _constantProductPair.sync() */
      dup1
      extcodesize
      iszero
      tag_255
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      swap1
      0x04
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":18706:18733  _constantProductPair.sync() */
      dup1
      swap5
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xfff6cae900000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":18706:18733  _constantProductPair.sync() */
      dup4
      mstore
      gas
      call
      dup1
      iszero
      tag_312
      jumpi
      tag_1925
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1926:
      pop
      dup1
      sload(0x20)
      and
      swap2
      sload
      and
      mload(0x40)
      swap2
      0xc9d163d100000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":18789:18839  _oracleCaller.observation(_constantProductPair, 0) */
      swap1
      dup2
      dup5
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x80
        /* \"test/unit/ConstantProductPair.t.sol\":18789:18839  _oracleCaller.observation(_constantProductPair, 0) */
      dup5
      dup1
      tag_1927
      dup7
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":18789:18839  _oracleCaller.observation(_constantProductPair, 0) */
      dup4
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
      0x00
      swap2
      swap4
      swap3
      swap4
      0xffffffffffffffffffffffffffffffffffffffff
      0x40
      dup3
      add
      swap6
      and
      dup2
      mstore
      add
      mstore
      jump
        /* \"test/unit/ConstantProductPair.t.sol\":18789:18839  _oracleCaller.observation(_constantProductPair, 0) */
    tag_1927:
      sub
      dup2
      dup5
      gas
      staticcall
      swap4
      dup5
      iszero
      tag_312
      jumpi
      dup6
      swap5
      tag_1930
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1931:
      pop
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":18876:18926  _oracleCaller.observation(_constantProductPair, 1) */
      dup3
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      dup5
      and
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":18876:18926  _oracleCaller.observation(_constantProductPair, 1) */
      dup3
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":18492:18496  true */
      0x01
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      dup3
      add
      mstore
      swap3
      0x80
      dup5
      0x44
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":18876:18926  _oracleCaller.observation(_constantProductPair, 1) */
      dup6
      gas
      staticcall
      swap2
      dup3
      iszero
      tag_312
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":18963:19013  _oracleCaller.observation(_constantProductPair, 2) */
      tag_1935
        /* \"test/unit/ConstantProductPair.t.sol\":18876:18926  _oracleCaller.observation(_constantProductPair, 1) */
      swap5
      dup8
      swap4
      tag_1936
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1937:
      pop
      0x80
      swap3
      swap4
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":18963:19013  _oracleCaller.observation(_constantProductPair, 2) */
      dup1
      swap7
      dup2
      swap5
      dup3
      swap4
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":18963:19013  _oracleCaller.observation(_constantProductPair, 2) */
      dup4
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":19011:19012  2 */
      0x02
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap2
      swap4
      swap3
      swap4
      0xffffffffffffffffffffffffffffffffffffffff
      0x40
      dup3
      add
      swap6
      and
      dup2
      mstore
      add
      mstore
      jump
        /* \"test/unit/ConstantProductPair.t.sol\":18963:19013  _oracleCaller.observation(_constantProductPair, 2) */
    tag_1935:
      sub
      swap2
      gas
      staticcall
      swap2
      dup3
      iszero
      tag_312
      jumpi
      dup5
      swap3
      tag_1940
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1941:
      pop
      dup3
      mload
      0x0d
      signextend
      mload(0x40)
      tag_1942
      dup2
      tag_4
      jump\t// in
    tag_1942:
        /* \"test/unit/ConstantProductPair.t.sol\":18492:18496  true */
      0x01
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x3100000000000000000000000000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5095:5101  a != b */
      dup2
      iszero
      iszero
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5091:5191  if (a != b) {... */
      swap1
      dup2
      tag_1943
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1944:
      pop
      pop
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":19108:19247  assertEq(... */
      tag_1945
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      mload
      0x0d
      signextend
        /* \"test/unit/ConstantProductPair.t.sol\":19192:19232  LogCompression.toLowResLog(0.25e18) * 10 */
      tag_1946
        /* \"test/unit/ConstantProductPair.t.sol\":19192:19227  LogCompression.toLowResLog(0.25e18) */
      tag_1947
      tag_100
      jump\t// in
    tag_1947:
        /* \"test/unit/ConstantProductPair.t.sol\":19192:19232  LogCompression.toLowResLog(0.25e18) * 10 */
      tag_98
      jump\t// in
    tag_1946:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      swap2
      tag_1948
      dup4
      tag_4
      jump\t// in
    tag_1948:
        /* \"test/unit/ConstantProductPair.t.sol\":18492:18496  true */
      0x01
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x3200000000000000000000000000000000000000000000000000000000000000
      0x20
      dup5
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":19108:19247  assertEq(... */
      tag_99
      jump\t// in
    tag_1945:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      mload
      0x0d
      signextend
        /* \"test/unit/ConstantProductPair.t.sol\":19353:19393  LogCompression.toLowResLog(0.25e18) * 10 */
      tag_1949
        /* \"test/unit/ConstantProductPair.t.sol\":19353:19388  LogCompression.toLowResLog(0.25e18) */
      tag_1947
      tag_100
      jump\t// in
        /* \"test/unit/ConstantProductPair.t.sol\":19353:19393  LogCompression.toLowResLog(0.25e18) * 10 */
    tag_1949:
        /* \"src/libraries/LogExpMath.sol\":15101:15107  _ln(a) */
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":19412:19454  LogCompression.toLowResLog(0.0625e18) * 10 */
      tag_1951
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      0x5af3107a4000
        /* \"src/libraries/LogExpMath.sol\":15101:15107  _ln(a) */
      tag_1952
        /* \"test/unit/ConstantProductPair.t.sol\":19439:19448  0.0625e18 */
      0xde0b6b3a764000
        /* \"src/libraries/LogExpMath.sol\":15101:15107  _ln(a) */
      tag_101
      jump\t// in
    tag_1952:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x00
        /* \"src/libraries/LogCompression.sol\":2247:2253  ln > 0 */
      dup2
      sgt
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      iszero
      tag_1953
      jumpi
        /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
      0x2d79883d2000
        /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */
      add
        /* \"src/libraries/LogCompression.sol\":2247:2325  ln > 0 ? ln + _HALF_LOG_COMPRESSION_FACTOR : ln - _HALF_LOG_COMPRESSION_FACTOR */
    tag_1955:
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      sdiv
        /* \"test/unit/ConstantProductPair.t.sol\":19412:19454  LogCompression.toLowResLog(0.0625e18) * 10 */
      tag_98
      jump\t// in
    tag_1951:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap2
      0x00
      dup4
      dup3
      add
      swap4
      dup5
      slt
      swap2
      slt
      swap1
      dup1
      iszero
      dup3
      and
      swap2
      iszero
      and
      or
      tag_505
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":19257:19481  assertEq(... */
      tag_1958
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap2
      mload(0x40)
      swap2
      tag_1959
      dup4
      tag_4
      jump\t// in
    tag_1959:
        /* \"test/unit/ConstantProductPair.t.sol\":18492:18496  true */
      0x01
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x3300000000000000000000000000000000000000000000000000000000000000
      0x20
      dup5
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":19257:19481  assertEq(... */
      tag_99
      jump\t// in
    tag_1958:
        /* \"src/libraries/LogCompression.sol\":2760:2807  LogExpMath.exp(value * _LOG_COMPRESSION_FACTOR) */
      tag_1960
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      0x5af3107a4000
        /* \"test/unit/ConstantProductPair.t.sol\":19613:19701  (lObs1.logAccRawPrice - lObs0.logAccRawPrice) / int32(lObs1.timestamp - lObs0.timestamp) */
      tag_1961
        /* \"test/unit/ConstantProductPair.t.sol\":19614:19657  lObs1.logAccRawPrice - lObs0.logAccRawPrice */
      tag_1962
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup5
      mload
      0x0d
      signextend
      dup8
      mload
      0x0d
      signextend
        /* \"test/unit/ConstantProductPair.t.sol\":19614:19657  lObs1.logAccRawPrice - lObs0.logAccRawPrice */
      swap1
      tag_88
      jump\t// in
    tag_1962:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":19667:19700  lObs1.timestamp - lObs0.timestamp */
      tag_1963
        /* \"test/unit/ConstantProductPair.t.sol\":19667:19682  lObs1.timestamp */
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x60
        /* \"test/unit/ConstantProductPair.t.sol\":19667:19682  lObs1.timestamp */
      dup9
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":19685:19700  lObs0.timestamp */
      dup3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x60
        /* \"test/unit/ConstantProductPair.t.sol\":19685:19700  lObs0.timestamp */
      dup12
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":19667:19700  lObs1.timestamp - lObs0.timestamp */
      swap1
      tag_89
      jump\t// in
    tag_1963:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      and
      0x03
      signextend
        /* \"test/unit/ConstantProductPair.t.sol\":19613:19701  (lObs1.logAccRawPrice - lObs0.logAccRawPrice) / int32(lObs1.timestamp - lObs0.timestamp) */
      swap1
      tag_90
      jump\t// in
    tag_1961:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x0d
      signextend
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      mul
        /* \"src/libraries/LogCompression.sol\":2760:2807  LogExpMath.exp(value * _LOG_COMPRESSION_FACTOR) */
      tag_96
      jump\t// in
    tag_1960:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x00
        /* \"test/unit/ConstantProductPair.t.sol\":19219:19226  0.25e18 */
      0x03782dace9d90000
        /* \"lib/forge-std/src/StdMath.sol\":607:612  a > b */
      dup3
      gt
        /* \"test/unit/ConstantProductPair.t.sol\":19219:19226  0.25e18 */
      iszero
      tag_1964
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      pop
      0xfffffffffffffffffffffffffffffffffffffffffffffffffc87d25316270000
      dup2
      add
      dup2
      dup2
      gt
      tag_505
      jumpi
        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */
    tag_1968:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup1
        /* \"lib/forge-std/src/StdMath.sol\":1144:1148  1e18 */
      0x0de0b6b3a7640000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      mul
      div
        /* \"lib/forge-std/src/StdMath.sol\":1144:1148  1e18 */
      0x0de0b6b3a7640000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      eq
      dup2
      iszero
      or
      iszero
      tag_505
      jumpi
        /* \"src/libraries/LogCompression.sol\":2760:2807  LogExpMath.exp(value * _LOG_COMPRESSION_FACTOR) */
      tag_1971
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap3
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      0x5af3107a4000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":19219:19226  0.25e18 */
      0x03782dace9d90000
        /* \"lib/forge-std/src/StdMath.sol\":1144:1148  1e18 */
      0x0de0b6b3a7640000
        /* \"test/unit/ConstantProductPair.t.sol\":19900:19988  (lObs2.logAccRawPrice - lObs1.logAccRawPrice) / int32(lObs2.timestamp - lObs1.timestamp) */
      tag_1961
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap5
      mul
      div
        /* \"lib/forge-std/src/StdAssertions.sol\":5389:5419  percentDelta > maxPercentDelta */
      swap1
      dup5
      dup3
      gt
        /* \"lib/forge-std/src/StdAssertions.sol\":5385:5769  if (percentDelta > maxPercentDelta) {... */
      tag_1973
      jumpi
        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */
    tag_1974:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      pop
      pop
      0xffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":19954:19987  lObs2.timestamp - lObs1.timestamp */
      tag_1963
        /* \"test/unit/ConstantProductPair.t.sol\":19901:19944  lObs2.logAccRawPrice - lObs1.logAccRawPrice */
      tag_1976
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup8
      mload
      0x0d
      signextend
      dup5
      mload
      0x0d
      signextend
        /* \"test/unit/ConstantProductPair.t.sol\":19901:19944  lObs2.logAccRawPrice - lObs1.logAccRawPrice */
      swap1
      tag_88
      jump\t// in
    tag_1976:
        /* \"test/unit/ConstantProductPair.t.sol\":19954:19969  lObs2.timestamp */
      swap3
      dup3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x60
        /* \"test/unit/ConstantProductPair.t.sol\":19954:19969  lObs2.timestamp */
      dup2
      dup2
      dup12
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":19667:19682  lObs1.timestamp */
      swap3
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":19954:19987  lObs2.timestamp - lObs1.timestamp */
      swap1
      tag_89
      jump\t// in
        /* \"src/libraries/LogCompression.sol\":2760:2807  LogExpMath.exp(value * _LOG_COMPRESSION_FACTOR) */
    tag_1971:
        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */
      swap2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x00
        /* \"test/unit/ConstantProductPair.t.sol\":19439:19448  0.0625e18 */
      0xde0b6b3a764000
        /* \"lib/forge-std/src/StdMath.sol\":607:612  a > b */
      dup5
      gt
        /* \"test/unit/ConstantProductPair.t.sol\":19439:19448  0.0625e18 */
      iszero
      tag_1977
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      pop
      0xffffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c000
      dup4
      add
      dup4
      dup2
      gt
      tag_505
      jumpi
        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */
      swap2
    tag_1981:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
        /* \"lib/forge-std/src/StdMath.sol\":1144:1148  1e18 */
      0x0de0b6b3a7640000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      mul
      div
        /* \"lib/forge-std/src/StdMath.sol\":1144:1148  1e18 */
      0x0de0b6b3a7640000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      eq
      dup4
      iszero
      or
      iszero
      tag_505
      jumpi
      0xffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":20243:20276  lObs2.timestamp - lObs0.timestamp */
      tag_1963
        /* \"test/unit/ConstantProductPair.t.sol\":20189:20277  (lObs2.logAccRawPrice - lObs0.logAccRawPrice) / int32(lObs2.timestamp - lObs0.timestamp) */
      tag_1961
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap4
        /* \"src/libraries/LogCompression.sol\":2760:2807  LogExpMath.exp(value * _LOG_COMPRESSION_FACTOR) */
      tag_1986
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap7
        /* \"test/unit/ConstantProductPair.t.sol\":19439:19448  0.0625e18 */
      0xde0b6b3a764000
        /* \"lib/forge-std/src/StdMath.sol\":1144:1148  1e18 */
      0x0de0b6b3a7640000
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      0x5af3107a4000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap9
      mul
      div
        /* \"lib/forge-std/src/StdAssertions.sol\":5389:5419  percentDelta > maxPercentDelta */
      swap1
      dup8
      dup3
      gt
        /* \"lib/forge-std/src/StdAssertions.sol\":5385:5769  if (percentDelta > maxPercentDelta) {... */
      tag_1987
      jumpi
        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */
    tag_1988:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      pop
      pop
      dup3
      0x60
      dup2
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":20190:20233  lObs2.logAccRawPrice - lObs0.logAccRawPrice */
      tag_1989
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup9
      mload
      0x0d
      signextend
      dup7
      mload
      0x0d
      signextend
        /* \"test/unit/ConstantProductPair.t.sol\":20190:20233  lObs2.logAccRawPrice - lObs0.logAccRawPrice */
      swap1
      tag_88
      jump\t// in
    tag_1989:
        /* \"test/unit/ConstantProductPair.t.sol\":19954:19969  lObs2.timestamp */
      swap8
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":19685:19700  lObs0.timestamp */
      swap3
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":20243:20276  lObs2.timestamp - lObs0.timestamp */
      swap1
      tag_89
      jump\t// in
        /* \"src/libraries/LogCompression.sol\":2760:2807  LogExpMath.exp(value * _LOG_COMPRESSION_FACTOR) */
    tag_1986:
        /* \"test/unit/ConstantProductPair.t.sol\":20305:20313  0.125e18 */
      0x01bc16d674ec8000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x00
        /* \"lib/forge-std/src/StdMath.sol\":607:612  a > b */
      dup2
      dup4
      gt
        /* \"test/unit/ConstantProductPair.t.sol\":20305:20313  0.125e18 */
      iszero
      tag_500
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      pop
      0xfffffffffffffffffffffffffffffffffffffffffffffffffe43e9298b138000
      dup3
      add
      dup3
      dup2
      gt
      tag_505
      jumpi
        /* \"lib/forge-std/src/StdMath.sol\":1144:1148  1e18 */
      0x0de0b6b3a7640000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      mul
      swap1
      dup1
      dup3
      div
        /* \"lib/forge-std/src/StdMath.sol\":1144:1148  1e18 */
      0x0de0b6b3a7640000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      eq
      swap1
      iszero
      or
      iszero
      tag_505
      jumpi
      dup2
      swap1
      div
        /* \"lib/forge-std/src/StdAssertions.sol\":5389:5419  percentDelta > maxPercentDelta */
      swap2
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      0x5af3107a4000
        /* \"lib/forge-std/src/StdAssertions.sol\":5389:5419  percentDelta > maxPercentDelta */
      dup4
      gt
        /* \"lib/forge-std/src/StdAssertions.sol\":5385:5769  if (percentDelta > maxPercentDelta) {... */
      tag_507
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup4
      dup1
      return
        /* \"lib/forge-std/src/StdAssertions.sol\":5385:5769  if (percentDelta > maxPercentDelta) {... */
    tag_1987:
        /* \"lib/forge-std/src/StdAssertions.sol\":5440:5481  log(\"Error: a ~= b not satisfied [uint]\") */
      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x80
      mload(0x40)
      0x20
      dup2
      mstore
      0x22
      0x20
      dup3
      add
      mstore
      0x4572726f723a2061207e3d2062206e6f7420736174697366696564205b75696e
      0x40
      dup3
      add
      mstore
      0x745d000000000000000000000000000000000000000000000000000000000000
      0x60
      dup3
      add
      mstore
        /* \"lib/forge-std/src/StdAssertions.sol\":5440:5481  log(\"Error: a ~= b not satisfied [uint]\") */
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      swap1
      0x40
      dup3
      mstore
      tag_2006
      0x40
      dup4
      add
      0x40
      swap1
      0x0c
      dup2
      mstore
      0x2020202045787065637465640000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_2006:
        /* \"test/unit/ConstantProductPair.t.sol\":19439:19448  0.0625e18 */
      0xde0b6b3a764000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
      dup5
      add
      mstore
        /* \"lib/forge-std/src/StdAssertions.sol\":5500:5533  log_named_uint(\"    Expected\", b) */
      dup3
      0xb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8
      swap4
      dup5
      swap3
      sub
      swap1
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      dup1
      swap2
      0x40
      dup3
      mstore
      tag_2007
      0x40
      dup4
      add
      0x40
      swap1
      0x0c
      dup2
      mstore
      0x20202020202041637475616c0000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_2007:
      swap1
      0x20
      dup4
      add
      mstore
        /* \"lib/forge-std/src/StdAssertions.sol\":5552:5585  log_named_uint(\"      Actual\", a) */
      sub
      swap1
      log1
        /* \"lib/forge-std/src/StdAssertions.sol\":5682:5738  log_named_decimal_uint(\"     % Delta\", percentDelta, 18) */
      tag_2008
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"lib/forge-std/src/StdAssertions.sol\":5604:5663  log_named_decimal_uint(\" Max % Delta\", maxPercentDelta, 18) */
      swap2
      0xeb8ba43ced7537421946bd43e828b8b2b8428927aa8f801c13d934bf11aca57b
      dup4
      dup1
      tag_512
      dup4
      swap7
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      0x60
      dup3
      mstore
      0x0c
      0x60
      dup4
      add
      mstore
      0x204d617820252044656c74610000000000000000000000000000000000000000
      0x80
      dup4
      add
      mstore
        /* \"lib/forge-std/src/StdAssertions.sol\":6831:6833  18 */
      0x12
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40
      0xa0
      dup5
      add
      swap4
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      0x5af3107a4000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
      dup3
      add
      mstore
      add
      mstore
      jump
        /* \"lib/forge-std/src/StdAssertions.sol\":5682:5738  log_named_decimal_uint(\"     % Delta\", percentDelta, 18) */
    tag_2008:
      sub
      swap1
      log1
      tag_2010
      tag_42
      jump\t// in
    tag_2010:
        /* \"lib/forge-std/src/StdAssertions.sol\":5385:5769  if (percentDelta > maxPercentDelta) {... */
      codesize
      dup1
      jump(tag_1988)
        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */
    tag_1977:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup4
        /* \"test/unit/ConstantProductPair.t.sol\":19439:19448  0.0625e18 */
      0xde0b6b3a764000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":19439:19448  0.0625e18 */
      0xde0b6b3a764000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      gt
      tag_514
      jumpi
        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */
      pop
      swap2
      jump(tag_1981)
        /* \"lib/forge-std/src/StdAssertions.sol\":5385:5769  if (percentDelta > maxPercentDelta) {... */
    tag_1973:
        /* \"lib/forge-std/src/StdAssertions.sol\":5440:5481  log(\"Error: a ~= b not satisfied [uint]\") */
      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x80
      mload(0x40)
      0x20
      dup2
      mstore
      0x22
      0x20
      dup3
      add
      mstore
      0x4572726f723a2061207e3d2062206e6f7420736174697366696564205b75696e
      0x40
      dup3
      add
      mstore
      0x745d000000000000000000000000000000000000000000000000000000000000
      0x60
      dup3
      add
      mstore
        /* \"lib/forge-std/src/StdAssertions.sol\":5440:5481  log(\"Error: a ~= b not satisfied [uint]\") */
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      swap1
      0x40
      dup3
      mstore
      tag_2013
      0x40
      dup4
      add
      0x40
      swap1
      0x0c
      dup2
      mstore
      0x2020202045787065637465640000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_2013:
        /* \"test/unit/ConstantProductPair.t.sol\":19219:19226  0.25e18 */
      0x03782dace9d90000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
      dup5
      add
      mstore
        /* \"lib/forge-std/src/StdAssertions.sol\":5500:5533  log_named_uint(\"    Expected\", b) */
      dup3
      0xb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8
      swap4
      dup5
      swap3
      sub
      swap1
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      dup1
      swap2
      0x40
      dup3
      mstore
      tag_2014
      0x40
      dup4
      add
      0x40
      swap1
      0x0c
      dup2
      mstore
      0x20202020202041637475616c0000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_2014:
      swap1
      0x20
      dup4
      add
      mstore
        /* \"lib/forge-std/src/StdAssertions.sol\":5552:5585  log_named_uint(\"      Actual\", a) */
      sub
      swap1
      log1
        /* \"lib/forge-std/src/StdAssertions.sol\":5682:5738  log_named_decimal_uint(\"     % Delta\", percentDelta, 18) */
      tag_2015
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"lib/forge-std/src/StdAssertions.sol\":5604:5663  log_named_decimal_uint(\" Max % Delta\", maxPercentDelta, 18) */
      swap2
      0xeb8ba43ced7537421946bd43e828b8b2b8428927aa8f801c13d934bf11aca57b
      dup4
      dup1
      tag_512
      dup4
      swap7
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      0x60
      dup3
      mstore
      0x0c
      0x60
      dup4
      add
      mstore
      0x204d617820252044656c74610000000000000000000000000000000000000000
      0x80
      dup4
      add
      mstore
        /* \"lib/forge-std/src/StdAssertions.sol\":6831:6833  18 */
      0x12
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40
      0xa0
      dup5
      add
      swap4
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      0x5af3107a4000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
      dup3
      add
      mstore
      add
      mstore
      jump
        /* \"lib/forge-std/src/StdAssertions.sol\":5682:5738  log_named_decimal_uint(\"     % Delta\", percentDelta, 18) */
    tag_2015:
      sub
      swap1
      log1
      tag_2017
      tag_42
      jump\t// in
    tag_2017:
        /* \"lib/forge-std/src/StdAssertions.sol\":5385:5769  if (percentDelta > maxPercentDelta) {... */
      codesize
      dup1
      jump(tag_1974)
        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */
    tag_1964:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":19219:19226  0.25e18 */
      0x03782dace9d90000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":19219:19226  0.25e18 */
      0x03782dace9d90000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      gt
      tag_514
      jumpi
        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */
      pop
      jump(tag_1968)
        /* \"src/libraries/LogCompression.sol\":2247:2325  ln > 0 ? ln + _HALF_LOG_COMPRESSION_FACTOR : ln - _HALF_LOG_COMPRESSION_FACTOR */
    tag_1953:
        /* \"src/libraries/LogExpMath.sol\":3324:3350  64_000_000_000_000_000_000 */
      0xffffffffffffffffffffffffffffffffffffffffffffffffffffd28677c2e000
      add
        /* \"src/libraries/LogCompression.sol\":2247:2325  ln > 0 ? ln + _HALF_LOG_COMPRESSION_FACTOR : ln - _HALF_LOG_COMPRESSION_FACTOR */
      jump(tag_1955)
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5091:5191  if (a != b) {... */
    tag_1943:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_2020
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5122:5152  log_named_string(\"Error\", err) */
      0x280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap2
      mload(0x40)
      swap2
      dup3
      swap2
      0x40
      dup4
      mstore
      0x05
      0x40
      dup5
      add
      mstore
      0x4572726f72000000000000000000000000000000000000000000000000000000
      0x60
      dup5
      add
      mstore
      0x80
      0x20
      dup5
      add
      mstore
      0x80
      dup4
      add
      swap1
      tag_10
      jump\t// in
    tag_2020:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5122:5152  log_named_string(\"Error\", err) */
      sub
      swap1
      log1
        /* \"lib/solmate/lib/ds-test/src/test.sol\":4810:5010  if (a != b) {... */
      tag_2021
      jumpi
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5091:5191  if (a != b) {... */
    tag_2022:
      dup1
      dup1
      jump(tag_1944)
        /* \"lib/solmate/lib/ds-test/src/test.sol\":4810:5010  if (a != b) {... */
    tag_2021:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":4841:4881  log(\"Error: a == b not satisfied [int]\") */
      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x80
      mload(0x40)
      0x20
      dup2
      mstore
      0x21
      0x20
      dup3
      add
      mstore
      0x4572726f723a2061203d3d2062206e6f7420736174697366696564205b696e74
      0x40
      dup3
      add
      mstore
      0x5d00000000000000000000000000000000000000000000000000000000000000
      0x60
      dup3
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":4841:4881  log(\"Error: a == b not satisfied [int]\") */
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      swap1
      0x40
      dup3
      mstore
      tag_2023
      0x40
      dup4
      add
      0x40
      swap1
      0x0a
      dup2
      mstore
      0x2020457870656374656400000000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_2023:
      0x00
      0x20
      dup5
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":4900:4930  log_named_int(\"  Expected\", b) */
      dup3
      0x2fe632779174374378442a8e978bccfbdcc1d6b2b0d81f7e8eb776ab2286f168
      swap4
      dup5
      swap3
      sub
      swap1
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      dup1
      swap2
      0x40
      dup3
      mstore
      tag_2024
      0x40
      dup4
      add
      0x40
      swap1
      0x0a
      dup2
      mstore
      0x2020202041637475616c00000000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_2024:
      swap1
      0x20
      dup4
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":4949:4979  log_named_int(\"    Actual\", a) */
      sub
      swap1
      log1
      tag_2025
      tag_42
      jump\t// in
    tag_2025:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":4810:5010  if (a != b) {... */
      codesize
      jump(tag_2022)
        /* \"test/unit/ConstantProductPair.t.sol\":18963:19013  _oracleCaller.observation(_constantProductPair, 2) */
    tag_1940:
      tag_2026
      swap2
      swap3
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x80
        /* \"test/unit/ConstantProductPair.t.sol\":18963:19013  _oracleCaller.observation(_constantProductPair, 2) */
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x80
        /* \"test/unit/ConstantProductPair.t.sol\":18963:19013  _oracleCaller.observation(_constantProductPair, 2) */
      gt
      tag_320
      jumpi
      tag_322
      dup2
      dup4
      tag_6
      jump\t// in
    tag_2026:
      swap1
      codesize
      jump(tag_1941)
        /* \"test/unit/ConstantProductPair.t.sol\":18876:18926  _oracleCaller.observation(_constantProductPair, 1) */
    tag_1936:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x80
        /* \"test/unit/ConstantProductPair.t.sol\":18876:18926  _oracleCaller.observation(_constantProductPair, 1) */
      swap4
      pop
      tag_2030
      swap1
      dup5
      returndatasize
      dup7
      gt
      tag_320
      jumpi
      tag_322
      dup2
      dup4
      tag_6
      jump\t// in
    tag_2030:
      swap3
      jump(tag_1937)
        /* \"test/unit/ConstantProductPair.t.sol\":18789:18839  _oracleCaller.observation(_constantProductPair, 0) */
    tag_1930:
      tag_2034
      swap2
      swap5
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x80
        /* \"test/unit/ConstantProductPair.t.sol\":18789:18839  _oracleCaller.observation(_constantProductPair, 0) */
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x80
        /* \"test/unit/ConstantProductPair.t.sol\":18789:18839  _oracleCaller.observation(_constantProductPair, 0) */
      gt
      tag_320
      jumpi
      tag_322
      dup2
      dup4
      tag_6
      jump\t// in
    tag_2034:
      swap3
      codesize
      jump(tag_1931)
        /* \"test/unit/ConstantProductPair.t.sol\":18706:18733  _constantProductPair.sync() */
    tag_1925:
      tag_2038
      swap1
      tag_1
      jump\t// in
    tag_2038:
      codesize
      jump(tag_1926)
        /* \"test/unit/ConstantProductPair.t.sol\":18624:18673  _constantProductPair.swap(200e18, true, _bob, \"\") */
    tag_1918:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":18624:18673  _constantProductPair.swap(200e18, true, _bob, \"\") */
      swap1
      dup2
      returndatasize
      dup4
      gt
      tag_2039
      jumpi
    tag_2040:
      tag_2041
      dup2
      dup4
      tag_6
      jump\t// in
    tag_2041:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":18624:18673  _constantProductPair.swap(200e18, true, _bob, \"\") */
      codesize
      jump(tag_1919)
    tag_2039:
      pop
      returndatasize
      jump(tag_2040)
        /* \"test/unit/ConstantProductPair.t.sol\":18563:18614  _tokenA.mint(address(_constantProductPair), 200e18) */
    tag_1914:
      tag_2044
      swap1
      tag_1
      jump\t// in
    tag_2044:
      codesize
      jump(tag_1915)
        /* \"test/unit/ConstantProductPair.t.sol\":18458:18507  _constantProductPair.swap(100e18, true, _bob, \"\") */
    tag_1907:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":18458:18507  _constantProductPair.swap(100e18, true, _bob, \"\") */
      swap1
      dup2
      returndatasize
      dup4
      gt
      tag_2045
      jumpi
    tag_2046:
      tag_2047
      dup2
      dup4
      tag_6
      jump\t// in
    tag_2047:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":18458:18507  _constantProductPair.swap(100e18, true, _bob, \"\") */
      codesize
      jump(tag_1908)
    tag_2045:
      pop
      returndatasize
      jump(tag_2046)
        /* \"test/unit/ConstantProductPair.t.sol\":18397:18448  _tokenA.mint(address(_constantProductPair), 100e18) */
    tag_1903:
      tag_2050
      swap1
      tag_1
      jump\t// in
    tag_2050:
      codesize
      jump(tag_1904)
        /* \"test/unit/ConstantProductPair.t.sol\":18265:18305  _constantProductPair.setCustomSwapFee(0) */
    tag_1895:
      tag_2051
      swap1
      tag_1
      jump\t// in
    tag_2051:
      codesize
      jump(tag_1896)
        /* \"test/unit/ConstantProductPair.t.sol\":18228:18255  vm.prank(address(_factory)) */
    tag_1889:
      tag_2052
      swap1
      tag_1
      jump\t// in
    tag_2052:
      codesize
      jump(tag_1890)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_148:
      pop
      jumpi(tag_196, callvalue)
      dup1
      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
      slt
      tag_196
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":23734:23746  _stepTime(5) */
      tag_2057
      tag_77
      jump\t// in
    tag_2057:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      dup1
        /* \"test/unit/ConstantProductPair.t.sol\":23918:23925  _tokenB */
      0x1a
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":23939:23959  _constantProductPair */
      dup3
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap2
      dup4
      dup4
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":23918:23971  _tokenB.mint(address(_constantProductPair), lSwapAmt) */
      dup2
      extcodesize
      iszero
      tag_291
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      swap2
      0x44
      dup4
      swap3
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":23918:23971  _tokenB.mint(address(_constantProductPair), lSwapAmt) */
      swap5
      dup6
      swap4
      dup5
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40c10f1900000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":23918:23971  _tokenB.mint(address(_constantProductPair), lSwapAmt) */
      dup5
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":23918:23971  _tokenB.mint(address(_constantProductPair), lSwapAmt) */
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":23888:23908  0.125109637135501e18 */
      0x01bc7a8d577086c8
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      dup5
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":23918:23971  _tokenB.mint(address(_constantProductPair), lSwapAmt) */
      gas
      call
      dup1
      iszero
      tag_219
      jumpi
      tag_2062
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2063:
      pop
      pop
      dup1
      dup3
      tag_2064
      swap3
      sload
      and
      mload(0x40)
      tag_2065
      dup2
      tag_2
      jump\t// in
    tag_2065:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      dup6
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":23981:24057  _constantProductPair.swap(-int256(lSwapAmt), true, address(this), bytes(\"\")) */
      dup1
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xe12bd9d800000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":23981:24057  _constantProductPair.swap(-int256(lSwapAmt), true, address(this), bytes(\"\")) */
      dup3
      mstore
        /* \"lib/forge-std/src/StdMath.sol\":124:202  -57896044618658097711785492504343953926634992332820282019728792003956564819968 */
      0xfffffffffffffffffffffffffffffffffffffffffffffffffe438572a88f7938
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":23981:24057  _constantProductPair.swap(-int256(lSwapAmt), true, address(this), bytes(\"\")) */
      dup4
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":24026:24030  true */
      0x01
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      dup4
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":24040:24044  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x44
      dup4
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x80
      0x64
      dup4
      add
      mstore
      dup2
      dup9
      dup2
      0x20
      swap9
      dup10
      swap7
      0x84
      dup4
      add
      swap1
      tag_10
      jump\t// in
    tag_2064:
        /* \"test/unit/ConstantProductPair.t.sol\":23981:24057  _constantProductPair.swap(-int256(lSwapAmt), true, address(this), bytes(\"\")) */
      sub
      swap3
      gas
      call
      swap1
      dup2
      iszero
      tag_201
      jumpi
      dup4
      swap2
      tag_2068
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2069:
      pop
      pop
      dup3
      dup2
      sload
      and
      swap3
      mload(0x40)
      dup4
      dup2
      0x04
      dup2
      0x495bc0fb00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":24095:24134  _constantProductPair.prevClampedPrice() */
      swap9
      dup10
      dup3
      mstore
      gas
      staticcall
      dup1
      iszero
      tag_376
      jumpi
      dup7
      swap1
      tag_2072
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2073:
        /* \"test/unit/ConstantProductPair.t.sol\":24086:24141  assertEq(_constantProductPair.prevClampedPrice(), 1e18) */
      tag_2074
      swap2
      pop
      tag_33
      jump\t// in
    tag_2074:
        /* \"test/unit/ConstantProductPair.t.sol\":24167:24179  _stepTime(5) */
      tag_2075
      tag_77
      jump\t// in
    tag_2075:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup5
      dup2
      dup4
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":24189:24216  _constantProductPair.sync() */
      dup1
      extcodesize
      iszero
      tag_255
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      dup1
      swap2
      0x04
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":24189:24216  _constantProductPair.sync() */
      dup1
      swap5
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xfff6cae900000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":24189:24216  _constantProductPair.sync() */
      dup4
      mstore
      gas
      call
      dup1
      iszero
      tag_219
      jumpi
      tag_2080
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2081:
      pop
      pop
      dup1
      dup4
      sload
      and
      swap2
      0x80
      dup3
      dup3
      sload
      and
      0x44
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":24272:24322  _oracleCaller.observation(_constantProductPair, 1) */
      dup1
      swap7
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xc9d163d100000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":24272:24322  _oracleCaller.observation(_constantProductPair, 1) */
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":24272:24322  _oracleCaller.observation(_constantProductPair, 1) */
      dup4
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":24026:24030  true */
      0x01
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      dup4
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":24272:24322  _oracleCaller.observation(_constantProductPair, 1) */
      gas
      staticcall
      swap3
      dup4
      iszero
      tag_376
      jumpi
      dup5
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":24382:24438  assertEq(lObs1.logAccClampedPrice, lObs1.logAccRawPrice) */
      tag_2084
        /* \"test/unit/ConstantProductPair.t.sol\":24272:24322  _oracleCaller.observation(_constantProductPair, 1) */
      swap2
      dup9
      swap2
      tag_2085
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2086:
        /* \"test/unit/ConstantProductPair.t.sol\":24391:24415  lObs1.logAccClampedPrice */
      pop
      dup5
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
      0x06
      signextend
      swap1
      mload
      0x0d
      signextend
        /* \"test/unit/ConstantProductPair.t.sol\":24382:24438  assertEq(lObs1.logAccClampedPrice, lObs1.logAccRawPrice) */
      swap1
      tag_58
      jump\t// in
    tag_2084:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      swap3
      0x04
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":24457:24496  _constantProductPair.prevClampedPrice() */
      dup1
      swap6
      dup2
      swap4
      dup3
      mstore
      gas
      staticcall
      swap1
      dup2
      iszero
      tag_215
      jumpi
      dup4
      swap2
      tag_2089
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2090:
        /* \"test/unit/ConstantProductPair.t.sol\":24448:24508  assertLt(_constantProductPair.prevClampedPrice(), 1.0025e18) */
      dup4
      tag_316
      dup4
      tag_103
      jump\t// in
        /* \"test/unit/ConstantProductPair.t.sol\":24457:24496  _constantProductPair.prevClampedPrice() */
    tag_2089:
      swap1
      pop
      dup2
      dup2
      returndatasize
      dup4
      gt
      tag_2092
      jumpi
    tag_2093:
      tag_2094
      dup2
      dup4
      tag_6
      jump\t// in
    tag_2094:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":24448:24508  assertLt(_constantProductPair.prevClampedPrice(), 1.0025e18) */
      tag_316
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":24457:24496  _constantProductPair.prevClampedPrice() */
      codesize
      jump(tag_2090)
    tag_2092:
      pop
      returndatasize
      jump(tag_2093)
        /* \"test/unit/ConstantProductPair.t.sol\":24272:24322  _oracleCaller.observation(_constantProductPair, 1) */
    tag_2085:
      tag_2097
      swap2
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x80
        /* \"test/unit/ConstantProductPair.t.sol\":24272:24322  _oracleCaller.observation(_constantProductPair, 1) */
      returndatasize
      dup2
      gt
      tag_320
      jumpi
      tag_322
      dup2
      dup4
      tag_6
      jump\t// in
    tag_2097:
      codesize
      jump(tag_2086)
        /* \"test/unit/ConstantProductPair.t.sol\":24189:24216  _constantProductPair.sync() */
    tag_2080:
      tag_2101
      swap1
      tag_1
      jump\t// in
    tag_2101:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_249
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":24189:24216  _constantProductPair.sync() */
      dup5
      codesize
      jump(tag_2081)
        /* \"test/unit/ConstantProductPair.t.sol\":24095:24134  _constantProductPair.prevClampedPrice() */
    tag_2072:
      pop
      dup4
      dup2
      dup2
      returndatasize
      dup4
      gt
      tag_2104
      jumpi
    tag_2105:
      tag_2106
      dup2
      dup4
      tag_6
      jump\t// in
    tag_2106:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":24086:24141  assertEq(_constantProductPair.prevClampedPrice(), 1e18) */
      tag_2074
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":24095:24134  _constantProductPair.prevClampedPrice() */
      jump(tag_2073)
    tag_2104:
      pop
      returndatasize
      jump(tag_2105)
        /* \"test/unit/ConstantProductPair.t.sol\":23981:24057  _constantProductPair.swap(-int256(lSwapAmt), true, address(this), bytes(\"\")) */
    tag_2068:
      dup2
      returndatasize
      dup4
      gt
      tag_2109
      jumpi
    tag_2110:
      tag_2111
      dup2
      dup4
      tag_6
      jump\t// in
    tag_2111:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":23981:24057  _constantProductPair.swap(-int256(lSwapAmt), true, address(this), bytes(\"\")) */
      dup2
      codesize
      jump(tag_2069)
    tag_2109:
      pop
      returndatasize
      jump(tag_2110)
        /* \"test/unit/ConstantProductPair.t.sol\":23918:23971  _tokenB.mint(address(_constantProductPair), lSwapAmt) */
    tag_2062:
      tag_2114
      swap1
      tag_1
      jump\t// in
    tag_2114:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_291
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":23918:23971  _tokenB.mint(address(_constantProductPair), lSwapAmt) */
      dup3
      codesize
      jump(tag_2063)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_146:
      pop
      jumpi(tag_196, callvalue)
      dup1
      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
      slt
      tag_196
      jumpi
      0xffffffffffffffffffffffffffffffffffffffff
      swap1
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":2500:2520  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      swap2
      mload(0x40)
      0x18160ddd00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":2500:2534  _constantProductPair.totalSupply() */
      dup2
      mstore
      0x20
      swap1
      dup2
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":2500:2534  _constantProductPair.totalSupply() */
      dup2
      dup9
      gas
      staticcall
      swap1
      dup2
      iszero
      tag_841
      jumpi
      dup5
      swap2
      tag_2123
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2124:
      pop
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":2608:2642  _constantProductPair.getReserves() */
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x0902f1ac00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":2608:2642  _constantProductPair.getReserves() */
      dup3
      mstore
      0x80
      dup3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":2608:2642  _constantProductPair.getReserves() */
      dup2
      dup10
      gas
      staticcall
      swap2
      dup3
      iszero
      tag_201
      jumpi
      dup6
      swap3
      tag_2127
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2128:
      pop
      dup4
        /* \"test/unit/ConstantProductPair.t.sol\":2668:2675  _tokenA */
      0x19
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":2668:2728  _tokenA.mint(address(_constantProductPair), lLiquidityToAdd) */
      swap6
      dup7
      extcodesize
      iszero
      tag_1565
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      0x40c10f1900000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":2668:2728  _tokenA.mint(address(_constantProductPair), lLiquidityToAdd) */
      swap2
      dup3
      dup3
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":2668:2728  _tokenA.mint(address(_constantProductPair), lLiquidityToAdd) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":2570:2574  5e18 */
      dup7
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x44
        /* \"test/unit/ConstantProductPair.t.sol\":2570:2574  5e18 */
      dup2
      dup4
      0x4563918244f40000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap13
      dup14
      0x24
      dup5
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":2668:2728  _tokenA.mint(address(_constantProductPair), lLiquidityToAdd) */
      gas
      call
      dup1
      iszero
      tag_1089
      jumpi
      swap1
      dup8
      swap2
      tag_2133
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2134:
      pop
      pop
      dup5
        /* \"test/unit/ConstantProductPair.t.sol\":2738:2745  _tokenB */
      0x1a
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      swap1
      dup6
        /* \"test/unit/ConstantProductPair.t.sol\":2500:2520  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":2738:2798  _tokenB.mint(address(_constantProductPair), lLiquidityToAdd) */
      swap1
      dup3
      extcodesize
      iszero
      tag_1227
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      0x44
      dup9
      swap3
      dup4
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":2738:2798  _tokenB.mint(address(_constantProductPair), lLiquidityToAdd) */
      swap6
      dup7
      swap5
      dup6
      swap4
      dup5
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":2738:2798  _tokenB.mint(address(_constantProductPair), lLiquidityToAdd) */
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup13
      0x24
      dup5
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":2738:2798  _tokenB.mint(address(_constantProductPair), lLiquidityToAdd) */
      gas
      call
      dup1
      iszero
      tag_376
      jumpi
      swap1
      dup7
      swap2
      tag_2139
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2140:
      pop
      dup4
      dup6
        /* \"test/unit/ConstantProductPair.t.sol\":2500:2520  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      0x24
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":2808:2848  _constantProductPair.mint(address(this)) */
      dup1
      swap5
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x6a62784200000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":2808:2848  _constantProductPair.mint(address(this)) */
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":2842:2846  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":2808:2848  _constantProductPair.mint(address(this)) */
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":2808:2848  _constantProductPair.mint(address(this)) */
      gas
      call
      dup1
      iszero
      tag_376
      jumpi
      swap1
      dup5
      swap2
      tag_2143
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2144:
      pop
      pop
      dup1
      dup7
      mul
      swap6
      dup7
      div
      sub
      tag_2145
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":2907:2955  lLiquidityToAdd * lTotalSupplyLpToken / reserve0 */
      tag_2147
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      swap5
      swap6
      0xffffffffffffffffffffffffff
      dup5
      swap4
      and
        /* \"test/unit/ConstantProductPair.t.sol\":2907:2955  lLiquidityToAdd * lTotalSupplyLpToken / reserve0 */
      swap1
      tag_21
      jump\t// in
    tag_2147:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":2500:2520  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":2974:3019  _constantProductPair.balanceOf(address(this)) */
      swap5
      dup6
      dup1
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x70a0823100000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":2974:3019  _constantProductPair.balanceOf(address(this)) */
      dup3
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":2842:2846  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":2974:3019  _constantProductPair.balanceOf(address(this)) */
      dup4
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":2974:3019  _constantProductPair.balanceOf(address(this)) */
      gas
      staticcall
      swap1
      dup2
      iszero
      tag_841
      jumpi
      dup5
      swap2
      tag_2150
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2151:
        /* \"test/unit/ConstantProductPair.t.sol\":3021:3040  lAdditionalLpTokens */
      pop
      tag_316
      swap3
      pop
      tag_39
      jump\t// in
        /* \"test/unit/ConstantProductPair.t.sol\":2974:3019  _constantProductPair.balanceOf(address(this)) */
    tag_2150:
      swap1
      pop
      dup3
      dup2
      returndatasize
      dup4
      gt
      tag_2153
      jumpi
    tag_2154:
      tag_2155
      dup2
      dup4
      tag_6
      jump\t// in
    tag_2155:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":3021:3040  lAdditionalLpTokens */
      tag_316
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap2
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":2974:3019  _constantProductPair.balanceOf(address(this)) */
      codesize
      jump(tag_2151)
    tag_2153:
      pop
      returndatasize
      jump(tag_2154)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2145:
      0x24
      dup5
      0x4e487b7100000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      mstore(0x04, 0x11)
      revert
        /* \"test/unit/ConstantProductPair.t.sol\":2808:2848  _constantProductPair.mint(address(this)) */
    tag_2143:
      dup2
      returndatasize
      dup4
      gt
      tag_2158
      jumpi
    tag_2159:
      tag_2160
      dup2
      dup4
      tag_6
      jump\t// in
    tag_2160:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":2808:2848  _constantProductPair.mint(address(this)) */
      dup3
      codesize
      jump(tag_2144)
    tag_2158:
      pop
      returndatasize
      jump(tag_2159)
        /* \"test/unit/ConstantProductPair.t.sol\":2738:2798  _tokenB.mint(address(_constantProductPair), lLiquidityToAdd) */
    tag_2139:
      tag_2163
      swap1
      tag_1
      jump\t// in
    tag_2163:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_249
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":2738:2798  _tokenB.mint(address(_constantProductPair), lLiquidityToAdd) */
      dup5
      codesize
      jump(tag_2140)
        /* \"test/unit/ConstantProductPair.t.sol\":2668:2728  _tokenA.mint(address(_constantProductPair), lLiquidityToAdd) */
    tag_2133:
      tag_2166
      swap1
      tag_1
      jump\t// in
    tag_2166:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_1565
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":2668:2728  _tokenA.mint(address(_constantProductPair), lLiquidityToAdd) */
      dup6
      codesize
      jump(tag_2134)
        /* \"test/unit/ConstantProductPair.t.sol\":2608:2642  _constantProductPair.getReserves() */
    tag_2127:
      tag_2169
      swap2
      swap3
      pop
      0x80
      returndatasize
      dup2
      gt
      tag_328
      jumpi
      tag_330
      dup2
      dup4
      tag_6
      jump\t// in
    tag_2169:
      pop
      pop
      pop
      swap1
      codesize
      jump(tag_2128)
        /* \"test/unit/ConstantProductPair.t.sol\":2500:2534  _constantProductPair.totalSupply() */
    tag_2123:
      swap1
      pop
      dup2
      dup2
      dup2
      returndatasize
      dup4
      gt
      tag_2173
      jumpi
    tag_2174:
      tag_2175
      dup2
      dup4
      tag_6
      jump\t// in
    tag_2175:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":2500:2534  _constantProductPair.totalSupply() */
      codesize
      jump(tag_2124)
    tag_2173:
      pop
      returndatasize
      jump(tag_2174)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_144:
      pop
      jumpi(tag_196, callvalue)
      dup1
      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
      slt
      tag_196
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":12254:12267  uint256 i = 0 */
      dup1
        /* \"test/unit/ConstantProductPair.t.sol\":12337:12338  1 */
      0x01
        /* \"test/unit/ConstantProductPair.t.sol\":12322:12334  block.number */
      number
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      add
        /* \"test/unit/ConstantProductPair.t.sol\":12322:12334  block.number */
      dup1
      number
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      gt
        /* \"test/unit/ConstantProductPair.t.sol\":12361:12376  block.timestamp */
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":12379:12380  5 */
      0x05
        /* \"test/unit/ConstantProductPair.t.sol\":12361:12376  block.timestamp */
      timestamp
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      add
        /* \"test/unit/ConstantProductPair.t.sol\":12361:12376  block.timestamp */
      dup1
      timestamp
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      gt
        /* \"test/unit/ConstantProductPair.t.sol\":12249:12551  for (uint256 i = 0; i < lMaxObservations + 4; ++i) {... */
      swap2
        /* \"test/unit/ConstantProductPair.t.sol\":12269:12293  i < lMaxObservations + 4 */
    tag_2182:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x010004
        /* \"test/unit/ConstantProductPair.t.sol\":12269:12293  i < lMaxObservations + 4 */
      dup2
      lt
      tag_2183
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup5
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":12602:12636  _constantProductPair.getReserves() */
      0x80
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":12416:12436  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":12602:12636  _constantProductPair.getReserves() */
      swap3
      dup4
      dup1
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x0902f1ac00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":12602:12636  _constantProductPair.getReserves() */
      dup3
      mstore
      gas
      staticcall
      dup1
      iszero
      tag_219
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffff
      swap2
      dup4
        /* \"test/unit/ConstantProductPair.t.sol\":12602:12636  _constantProductPair.getReserves() */
      swap2
      tag_2187
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":12249:12551  for (uint256 i = 0; i < lMaxObservations + 4; ++i) {... */
    tag_2188:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      pop
      and
        /* \"test/unit/ConstantProductPair.t.sol\":12663:12664  3 */
      0x03
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5259:5265  a != b */
      dup2
      sub
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5255:5458  if (a != b) {... */
      tag_2189
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      pop
      dup1
      return
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5255:5458  if (a != b) {... */
    tag_2189:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5286:5327  log(\"Error: a == b not satisfied [uint]\") */
      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50
        /* \"test/unit/ConstantProductPair.t.sol\":12602:12636  _constantProductPair.getReserves() */
      0x80
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      0x20
      dup2
      mstore
      0x22
      0x20
      dup3
      add
      mstore
      0x4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e
      0x40
      dup3
      add
      mstore
      0x745d000000000000000000000000000000000000000000000000000000000000
      0x60
      dup3
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5286:5327  log(\"Error: a == b not satisfied [uint]\") */
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      swap1
      0x40
      dup3
      mstore
      tag_2191
      0x40
      dup4
      add
      0x40
      swap1
      0x0a
      dup2
      mstore
      0x2020457870656374656400000000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_2191:
        /* \"test/unit/ConstantProductPair.t.sol\":12663:12664  3 */
      0x03
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
      dup5
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5346:5377  log_named_uint(\"  Expected\", b) */
      dup3
      0xb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8
      swap4
      dup5
      swap3
      sub
      swap1
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      dup1
      swap2
      0x40
      dup3
      mstore
      tag_2192
      0x40
      dup4
      add
      0x40
      swap1
      0x0a
      dup2
      mstore
      0x2020202041637475616c00000000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_2192:
      swap1
      0x20
      dup4
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5396:5427  log_named_uint(\"    Actual\", a) */
      sub
      swap1
      log1
      tag_316
      tag_42
      jump\t// in
        /* \"test/unit/ConstantProductPair.t.sol\":12602:12636  _constantProductPair.getReserves() */
    tag_2187:
      tag_2194
      swap2
      pop
      0x80
      returndatasize
      dup2
      gt
      tag_328
      jumpi
      tag_330
      dup2
      dup4
      tag_6
      jump\t// in
    tag_2194:
      swap3
      pop
      pop
      pop
      dup4
      jump(tag_2188)
        /* \"test/unit/ConstantProductPair.t.sol\":12295:12298  ++i */
    tag_2183:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup6
      tag_2198
      jumpi
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"test/unit/ConstantProductPair.t.sol\":12314:12339  vm.roll(block.number + 1) */
      dup1
      extcodesize
      iszero
      tag_1565
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":12314:12339  vm.roll(block.number + 1) */
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x1f7b4f3000000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":12314:12339  vm.roll(block.number + 1) */
      dup3
      mstore
      dup6
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":12314:12339  vm.roll(block.number + 1) */
      dup4
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":12314:12339  vm.roll(block.number + 1) */
      swap2
      dup8
      dup2
      dup5
      dup2
      dup4
      dup7
      gas
      call
      dup1
      iszero
      tag_1200
      jumpi
      dup7
      swap2
      dup10
      swap2
      tag_2204
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":12295:12298  ++i */
    tag_2205:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      pop
      pop
      tag_2206
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":12353:12381  vm.warp(block.timestamp + 5) */
      dup1
      extcodesize
      iszero
      tag_1219
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup7
      dup1
      swap2
      dup4
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":12353:12381  vm.warp(block.timestamp + 5) */
      dup1
      swap5
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xe5d6bf0200000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":12353:12381  vm.warp(block.timestamp + 5) */
      dup4
      mstore
      dup10
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":12353:12381  vm.warp(block.timestamp + 5) */
      dup5
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":12353:12381  vm.warp(block.timestamp + 5) */
      gas
      call
      dup1
      iszero
      tag_1089
      jumpi
      swap1
      dup8
      swap2
      tag_2212
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":12295:12298  ++i */
    tag_2213:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      pop
      pop
      0xffffffffffffffffffffffffffffffffffffffff
      swap1
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":12395:12402  _tokenA */
      0x19
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":12416:12436  _constantProductPair */
      swap1
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap2
      dup4
      dup4
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":12395:12453  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */
      swap1
      dup1
      extcodesize
      iszero
      tag_2214
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap2
      0x44
      dup11
      swap3
      dup4
        /* \"test/unit/ConstantProductPair.t.sol\":12175:12179  1e17 */
      0x016345785d8a0000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap6
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":12395:12453  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */
      swap7
      dup8
      swap6
      dup7
      swap5
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40c10f1900000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":12395:12453  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */
      dup7
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":12395:12453  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */
      dup7
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup5
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":12395:12453  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */
      gas
      call
      dup1
      iszero
      tag_1200
      jumpi
      swap1
      dup9
      swap2
      tag_2218
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":12295:12298  ++i */
    tag_2219:
      pop
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      mload(0x40)
      0xe12bd9d800000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":12467:12540  _constantProductPair.swap(int256(lAmountToSwap), true, address(this), \"\") */
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":12175:12179  1e17 */
      0x016345785d8a0000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":12467:12540  _constantProductPair.swap(int256(lAmountToSwap), true, address(this), \"\") */
      dup3
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":12337:12338  1 */
      0x01
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      dup3
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":12530:12534  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x44
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x80
      0x64
      dup3
      add
      mstore
      0x00
      0x84
      dup3
      add
      mstore
      0x20
      swap3
      swap1
      swap2
      dup4
      swap2
      dup4
      swap2
      0xa4
      swap2
      dup4
      swap2
        /* \"test/unit/ConstantProductPair.t.sol\":12530:12534  this */
      dup13
      swap2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      and
        /* \"test/unit/ConstantProductPair.t.sol\":12467:12540  _constantProductPair.swap(int256(lAmountToSwap), true, address(this), \"\") */
      gas
      call
      dup1
      iszero
      tag_1089
      jumpi
      tag_2223
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":12295:12298  ++i */
    tag_2224:
      pop
      pop
      tag_2225
      swap1
      tag_19
      jump\t// in
    tag_2225:
        /* \"test/unit/ConstantProductPair.t.sol\":12254:12267  uint256 i = 0 */
      jump(tag_2182)
        /* \"test/unit/ConstantProductPair.t.sol\":12467:12540  _constantProductPair.swap(int256(lAmountToSwap), true, address(this), \"\") */
    tag_2223:
      dup2
      returndatasize
      dup4
      gt
      tag_2226
      jumpi
    tag_2227:
      tag_2228
      dup2
      dup4
      tag_6
      jump\t// in
    tag_2228:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":12467:12540  _constantProductPair.swap(int256(lAmountToSwap), true, address(this), \"\") */
      codesize
      dup1
      jump(tag_2224)
    tag_2226:
      pop
      returndatasize
      jump(tag_2227)
        /* \"test/unit/ConstantProductPair.t.sol\":12395:12453  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */
    tag_2218:
      tag_2231
      swap1
      tag_1
      jump\t// in
    tag_2231:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_1219
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":12395:12453  _tokenA.mint(address(_constantProductPair), lAmountToSwap) */
      dup7
      codesize
      jump(tag_2219)
    tag_2214:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup10
      dup1
      revert
        /* \"test/unit/ConstantProductPair.t.sol\":12353:12381  vm.warp(block.timestamp + 5) */
    tag_2212:
      tag_2234
      swap1
      tag_1
      jump\t// in
    tag_2234:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_1565
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":12353:12381  vm.warp(block.timestamp + 5) */
      dup6
      codesize
      jump(tag_2213)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2206:
      pop
      dup6
      0x4e487b7100000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      mstore(0x04, 0x11)
      revert
        /* \"test/unit/ConstantProductPair.t.sol\":12314:12339  vm.roll(block.number + 1) */
    tag_2204:
      tag_2237
      swap2
      swap3
      pop
      tag_1
      jump\t// in
    tag_2237:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_1219
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":12314:12339  vm.roll(block.number + 1) */
      dup5
      dup8
      codesize
      jump(tag_2205)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2198:
      0x24
      dup6
      0x4e487b7100000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      mstore(0x04, 0x11)
      revert
    tag_142:
      pop
      jumpi(tag_196, callvalue)
      dup1
      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
      slt
      tag_196
      jumpi
      0x20
      mload(0x40)
        /* \"test/__fixtures/BaseTest.sol\":795:799  3000 */
      0x0bb8
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      mstore
      return
    tag_140:
      pop
      jumpi(tag_196, callvalue)
      dup1
      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
      slt
      tag_196
      jumpi
      0xffffffffffffffffffffffffffffffffffffffff
      dup1
        /* \"test/unit/ConstantProductPair.t.sol\":4654:4674  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":4654:4688  _constantProductPair.getReserves() */
      swap2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x0902f1ac00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":4654:4688  _constantProductPair.getReserves() */
      dup4
      mstore
      0x80
      dup4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":4654:4688  _constantProductPair.getReserves() */
      dup2
      dup6
      gas
      staticcall
      swap2
      dup3
      iszero
      tag_841
      jumpi
      dup5
      swap4
      dup6
      swap4
      tag_2250
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2251:
      pop
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":1428:1463  _constantProductPair.FEE_ACCURACY() */
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xdb6488dc00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":1428:1463  _constantProductPair.FEE_ACCURACY() */
      dup3
      mstore
      0x20
      swap4
      dup5
      dup4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":1428:1463  _constantProductPair.FEE_ACCURACY() */
      dup2
      dup6
      gas
      staticcall
      swap3
      dup4
      iszero
      tag_1089
      jumpi
      dup8
      swap4
      tag_2254
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2255:
      pop
      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff448
      dup4
      add
      swap1
      dup4
      dup3
      gt
      tag_505
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":4760:4764  1e18 */
      0x0de0b6b3a7640000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap7
      dup3
      dup9
      mul
      swap3
      dup9
      dup5
      div
      sub
      tag_505
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":1622:1661  aReserveIn * lMaxFee + lAmountInWithFee */
      tag_2260
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup10
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":1622:1642  aReserveIn * lMaxFee */
      tag_2261
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup9
      swap8
        /* \"test/unit/ConstantProductPair.t.sol\":1687:1712  lNumerator / lDenominator */
      tag_2262
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap6
        /* \"test/unit/ConstantProductPair.t.sol\":1559:1589  lAmountInWithFee * aReserveOut */
      tag_2263
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffff
      dup1
      swap3
      and
        /* \"test/unit/ConstantProductPair.t.sol\":1559:1589  lAmountInWithFee * aReserveOut */
      dup6
      tag_17
      jump\t// in
    tag_2263:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap6
      and
        /* \"test/unit/ConstantProductPair.t.sol\":1622:1642  aReserveIn * lMaxFee */
      tag_17
      jump\t// in
    tag_2261:
        /* \"test/unit/ConstantProductPair.t.sol\":1622:1661  aReserveIn * lMaxFee + lAmountInWithFee */
      tag_25
      jump\t// in
    tag_2260:
        /* \"test/unit/ConstantProductPair.t.sol\":1687:1712  lNumerator / lDenominator */
      swap1
      tag_21
      jump\t// in
    tag_2262:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap2
        /* \"test/unit/ConstantProductPair.t.sol\":4879:4931  _getToken0Token1(address(_tokenA), address(_tokenB)) */
      tag_2264
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup5
        /* \"test/unit/ConstantProductPair.t.sol\":4904:4911  _tokenA */
      0x19
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      dup6
        /* \"test/unit/ConstantProductPair.t.sol\":4922:4929  _tokenB */
      0x1a
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":4879:4931  _getToken0Token1(address(_tokenA), address(_tokenB)) */
      swap1
      tag_49
      jump\t// in
    tag_2264:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap5
      and
        /* \"test/unit/ConstantProductPair.t.sol\":4942:5005  MintableERC20(token0).mint(address(_constantProductPair), 1e18) */
      swap7
      dup8
      extcodesize
      iszero
      tag_291
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":4942:5005  MintableERC20(token0).mint(address(_constantProductPair), 1e18) */
      swap2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40c10f1900000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":4942:5005  MintableERC20(token0).mint(address(_constantProductPair), 1e18) */
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":4942:5005  MintableERC20(token0).mint(address(_constantProductPair), 1e18) */
      dup4
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      dup3
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":4942:5005  MintableERC20(token0).mint(address(_constantProductPair), 1e18) */
      dup2
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x44
        /* \"test/unit/ConstantProductPair.t.sol\":4942:5005  MintableERC20(token0).mint(address(_constantProductPair), 1e18) */
      dup2
      dup4
      dup12
      gas
      call
      dup1
      iszero
      tag_219
      jumpi
      tag_2269
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2270:
      pop
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":4654:4674  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      mload(0x40)
      0xe12bd9d800000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":5015:5071  _constantProductPair.swap(1e18, true, address(this), \"\") */
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":5471:5475  1e18 */
      0x0de0b6b3a7640000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":5015:5071  _constantProductPair.swap(1e18, true, address(this), \"\") */
      dup3
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":15394:15398  true */
      0x01
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      dup3
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":5061:5065  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x44
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x80
      0x64
      dup3
      add
      mstore
      0x00
      0x84
      dup3
      add
      mstore
      swap1
      dup6
      swap1
      dup3
      swap1
      0xa4
      swap1
      dup3
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":5061:5065  this */
      dup12
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup10
      and
        /* \"test/unit/ConstantProductPair.t.sol\":5015:5071  _constantProductPair.swap(1e18, true, address(this), \"\") */
      gas
      call
      swap1
      dup2
      iszero
      tag_1089
      jumpi
      dup6
      swap2
      tag_2274
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2275:
      pop
      0x24
      swap4
      mload(0x40)
      swap5
      dup6
      dup1
      swap3
      0x70a0823100000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":5109:5155  MintableERC20(token1).balanceOf(address(this)) */
      swap7
      dup8
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":5061:5065  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":5109:5155  MintableERC20(token1).balanceOf(address(this)) */
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      and
        /* \"test/unit/ConstantProductPair.t.sol\":5109:5155  MintableERC20(token1).balanceOf(address(this)) */
      gas
      staticcall
      dup1
      iszero
      tag_376
      jumpi
      dup5
      swap4
      dup8
      swap2
      tag_2278
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2279:
        /* \"test/unit/ConstantProductPair.t.sol\":5157:5171  expectedOutput */
      pop
      swap1
      tag_2280
      swap2
      tag_39
      jump\t// in
    tag_2280:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":5191:5237  MintableERC20(token0).balanceOf(address(this)) */
      dup1
      swap6
      dup2
      swap4
      dup3
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":5061:5065  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":5191:5237  MintableERC20(token0).balanceOf(address(this)) */
      dup4
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":5191:5237  MintableERC20(token0).balanceOf(address(this)) */
      gas
      staticcall
      swap1
      dup2
      iszero
      tag_215
      jumpi
      dup4
      swap2
      tag_2283
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2284:
        /* \"test/unit/ConstantProductPair.t.sol\":5182:5241  assertEq(MintableERC20(token0).balanceOf(address(this)), 0) */
      dup4
      tag_316
      dup4
      tag_36
      jump\t// in
        /* \"test/unit/ConstantProductPair.t.sol\":5191:5237  MintableERC20(token0).balanceOf(address(this)) */
    tag_2283:
      swap1
      pop
      dup2
      dup2
      returndatasize
      dup4
      gt
      tag_2286
      jumpi
    tag_2287:
      tag_2288
      dup2
      dup4
      tag_6
      jump\t// in
    tag_2288:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":5182:5241  assertEq(MintableERC20(token0).balanceOf(address(this)), 0) */
      tag_316
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":5191:5237  MintableERC20(token0).balanceOf(address(this)) */
      codesize
      jump(tag_2284)
    tag_2286:
      pop
      returndatasize
      jump(tag_2287)
        /* \"test/unit/ConstantProductPair.t.sol\":5109:5155  MintableERC20(token1).balanceOf(address(this)) */
    tag_2278:
      dup5
      dup2
      swap4
      swap6
      swap3
      pop
      returndatasize
      dup4
      gt
      tag_2291
      jumpi
    tag_2292:
      tag_2293
      dup2
      dup4
      tag_6
      jump\t// in
    tag_2293:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
      mload
      dup4
      swap3
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":5157:5171  expectedOutput */
      tag_2280
        /* \"test/unit/ConstantProductPair.t.sol\":5109:5155  MintableERC20(token1).balanceOf(address(this)) */
      jump(tag_2279)
    tag_2291:
      pop
      returndatasize
      jump(tag_2292)
        /* \"test/unit/ConstantProductPair.t.sol\":5015:5071  _constantProductPair.swap(1e18, true, address(this), \"\") */
    tag_2274:
      dup2
      returndatasize
      dup4
      gt
      tag_2296
      jumpi
    tag_2297:
      tag_2298
      dup2
      dup4
      tag_6
      jump\t// in
    tag_2298:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":5015:5071  _constantProductPair.swap(1e18, true, address(this), \"\") */
      dup4
      codesize
      jump(tag_2275)
    tag_2296:
      pop
      returndatasize
      jump(tag_2297)
        /* \"test/unit/ConstantProductPair.t.sol\":4942:5005  MintableERC20(token0).mint(address(_constantProductPair), 1e18) */
    tag_2269:
      tag_2301
      swap1
      tag_1
      jump\t// in
    tag_2301:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_1565
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":4942:5005  MintableERC20(token0).mint(address(_constantProductPair), 1e18) */
      dup6
      codesize
      jump(tag_2270)
        /* \"test/unit/ConstantProductPair.t.sol\":1428:1463  _constantProductPair.FEE_ACCURACY() */
    tag_2254:
      swap1
      swap3
      pop
      dup5
      dup2
      dup2
      returndatasize
      dup4
      gt
      tag_2304
      jumpi
    tag_2305:
      tag_2306
      dup2
      dup4
      tag_6
      jump\t// in
    tag_2306:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":1428:1463  _constantProductPair.FEE_ACCURACY() */
      swap2
      codesize
      jump(tag_2255)
    tag_2304:
      pop
      returndatasize
      jump(tag_2305)
        /* \"test/unit/ConstantProductPair.t.sol\":4654:4688  _constantProductPair.getReserves() */
    tag_2250:
      swap1
      swap3
      pop
      tag_2309
      swap2
      swap4
      pop
      0x80
      returndatasize
      dup2
      gt
      tag_328
      jumpi
      tag_330
      dup2
      dup4
      tag_6
      jump\t// in
    tag_2309:
      pop
      pop
      swap3
      swap1
      swap3
      swap2
      codesize
      jump(tag_2251)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_138:
      pop
      jumpi(tag_196, callvalue)
      dup1
      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
      slt
      tag_196
      jumpi
      0xffffffffffffffffffffffffffffffffffffffff
      swap1
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":15317:15337  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      swap2
      mload(0x40)
      swap3
      0x0902f1ac00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":15317:15351  _constantProductPair.getReserves() */
      dup1
      dup6
      mstore
      0x80
      swap3
      dup4
      dup7
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":15317:15351  _constantProductPair.getReserves() */
      dup2
      dup7
      gas
      staticcall
      swap6
      dup7
      iszero
      tag_201
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup6
        /* \"test/unit/ConstantProductPair.t.sol\":15317:15351  _constantProductPair.getReserves() */
      swap7
      tag_2319
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2320:
        /* \"test/__fixtures/BaseTest.sol\":5270:5993  function _writeObservation(... */
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x00
        /* \"test/__fixtures/BaseTest.sol\":5488:5495  2 ** 31 */
      0x80000000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":15439:15454  block.timestamp */
      timestamp
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      and
        /* \"test/__fixtures/BaseTest.sol\":5480:5495  aTime < 2 ** 31 */
      lt
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      iszero
      tag_1149
      jumpi
      mload(0x40)
      swap4
      0x20
      swap5
      dup6
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":15439:15454  block.timestamp */
      swap1
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      0xffffffff00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":15439:15454  block.timestamp */
      timestamp
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xe0
      shl
      and
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      dup3
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x7fffffffffffff00000000000000000000000000000000000000000000000000
      0x24
      dup3
      add
      mstore
      dup4
      0x2b
      dup3
      add
      mstore
      dup4
      0x32
      dup3
      add
      mstore
      dup7
      dup2
      mstore
      tag_2323
      dup2
      tag_4
      jump\t// in
    tag_2323:
      mload
      swap1
      mload
      swap1
      dup7
      dup2
      lt
      tag_2324
      jumpi
    tag_2325:
      pop
      swap1
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"test/__fixtures/BaseTest.sol\":5727:5738  vm.record() */
      swap1
      dup2
      extcodesize
      iszero
      tag_285
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      0x266cf10900000000000000000000000000000000000000000000000000000000
        /* \"test/__fixtures/BaseTest.sol\":5727:5738  vm.record() */
      dup2
      mstore
      dup5
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/__fixtures/BaseTest.sol\":5727:5738  vm.record() */
      dup2
      dup4
      dup8
      gas
      call
      dup1
      iszero
      tag_201
      jumpi
      swap1
      dup12
      swap6
      swap5
      swap4
      swap3
      swap2
      tag_2330
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2331:
      pop
      0x44
      dup10
      dup8
      dup11
      sload
      and
      mload(0x40)
      swap3
      dup4
      dup1
      swap3
      0xffff
      0xc9d163d100000000000000000000000000000000000000000000000000000000
        /* \"test/__fixtures/BaseTest.sol\":5748:5788  _oracleCaller.observation(aPair, aIndex) */
      swap12
      dup13
      dup5
      mstore
      dup9
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/__fixtures/BaseTest.sol\":5748:5788  _oracleCaller.observation(aPair, aIndex) */
      dup6
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
      and
      0x24
      dup4
      add
      mstore
        /* \"test/__fixtures/BaseTest.sol\":5748:5788  _oracleCaller.observation(aPair, aIndex) */
      gas
      staticcall
      dup1
      iszero
      tag_201
      jumpi
      tag_2334
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2335:
      pop
      mload(0x40)
      0x65bc948100000000000000000000000000000000000000000000000000000000
        /* \"test/__fixtures/BaseTest.sol\":5830:5857  vm.accesses(address(aPair)) */
      dup2
      mstore
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/__fixtures/BaseTest.sol\":5830:5857  vm.accesses(address(aPair)) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/__fixtures/BaseTest.sol\":5830:5857  vm.accesses(address(aPair)) */
      dup5
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
        /* \"test/__fixtures/BaseTest.sol\":5830:5857  vm.accesses(address(aPair)) */
      dup2
      dup4
      dup8
      gas
      call
      swap1
      dup2
      iszero
      tag_201
      jumpi
      dup6
      swap2
      tag_2338
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2339:
      pop
        /* \"test/__fixtures/BaseTest.sol\":5895:5896  2 */
      0x02
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      mload
        /* \"test/__fixtures/BaseTest.sol\":5875:5896  lAccesses.length == 2 */
      sub
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_2340
      jumpi
        /* \"test/__fixtures/BaseTest.sol\":5963:5975  lAccesses[1] */
      tag_2342
      swap1
      tag_82
      jump\t// in
    tag_2342:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
        /* \"test/__fixtures/BaseTest.sol\":5938:5986  vm.store(address(aPair), lAccesses[1], lEncoded) */
      swap1
      dup3
      extcodesize
      iszero
      tag_249
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      0x70ca10bb00000000000000000000000000000000000000000000000000000000
        /* \"test/__fixtures/BaseTest.sol\":5938:5986  vm.store(address(aPair), lAccesses[1], lEncoded) */
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      swap2
      swap1
      swap2
      and
      0x04
        /* \"test/__fixtures/BaseTest.sol\":5938:5986  vm.store(address(aPair), lAccesses[1], lEncoded) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      dup2
      add
      swap2
      swap1
      swap2
      mstore
      0x44
      dup2
      add
      swap3
      swap1
      swap3
      mstore
      dup3
      swap1
      dup3
      swap1
      0x64
      swap1
      dup3
      swap1
      dup5
      swap1
        /* \"test/__fixtures/BaseTest.sol\":5938:5986  vm.store(address(aPair), lAccesses[1], lEncoded) */
      gas
      call
      dup1
      iszero
      tag_219
      jumpi
      tag_2348
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2349:
      pop
      pop
      dup5
        /* \"test/unit/ConstantProductPair.t.sol\":15496:15551  _oracleCaller.observation(_constantProductPair, lIndex) */
      tag_2350
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap6
      swap7
      swap8
      dup4
      dup7
      sload
      and
      dup5
        /* \"test/unit/ConstantProductPair.t.sol\":15317:15337  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":15496:15551  _oracleCaller.observation(_constantProductPair, lIndex) */
      dup1
      swap10
      dup2
      swap5
      dup3
      swap4
      dup9
      dup5
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":15496:15551  _oracleCaller.observation(_constantProductPair, lIndex) */
      dup5
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      swap3
      swap2
      0xffff
      0x20
      swap2
      0xffffffffffffffffffffffffffffffffffffffff
      0x40
      dup6
      add
      swap7
      and
      dup5
      mstore
      and
      swap2
      add
      mstore
      jump
        /* \"test/unit/ConstantProductPair.t.sol\":15496:15551  _oracleCaller.observation(_constantProductPair, lIndex) */
    tag_2350:
      sub
      swap2
      gas
      staticcall
      swap5
      dup6
      iszero
      tag_1089
      jumpi
      dup8
      swap6
      tag_2353
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2354:
        /* \"test/unit/ConstantProductPair.t.sol\":15577:15589  _stepTime(5) */
      pop
      tag_2355
      tag_77
      jump\t// in
    tag_2355:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup7
      dup3
        /* \"test/unit/ConstantProductPair.t.sol\":15317:15337  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":15599:15626  _constantProductPair.sync() */
      dup1
      extcodesize
      iszero
      tag_255
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      dup1
      swap2
      0x04
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":15599:15626  _constantProductPair.sync() */
      dup1
      swap5
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xfff6cae900000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":15599:15626  _constantProductPair.sync() */
      dup4
      mstore
      gas
      call
      dup1
      iszero
      tag_219
      jumpi
      tag_2360
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2361:
      pop
      pop
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":15317:15337  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":15670:15704  _constantProductPair.getReserves() */
      swap4
      dup5
      mstore
      dup7
      dup5
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":15670:15704  _constantProductPair.getReserves() */
      dup2
      dup5
      gas
      staticcall
      swap3
      dup4
      iszero
      tag_1200
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":15744:15799  _oracleCaller.observation(_constantProductPair, lIndex) */
      tag_2364
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap6
      dup9
      swap6
      dup11
        /* \"test/unit/ConstantProductPair.t.sol\":15670:15704  _constantProductPair.getReserves() */
      swap6
      tag_1203
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      pop
      sload
      and
      swap2
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":15744:15799  _oracleCaller.observation(_constantProductPair, lIndex) */
      swap6
      dup7
      swap5
      dup6
      swap4
      dup5
      swap4
      dup5
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":15744:15799  _oracleCaller.observation(_constantProductPair, lIndex) */
      dup5
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      swap3
      swap2
      0xffff
      0x20
      swap2
      0xffffffffffffffffffffffffffffffffffffffff
      0x40
      dup6
      add
      swap7
      and
      dup5
      mstore
      and
      swap2
      add
      mstore
      jump
        /* \"test/unit/ConstantProductPair.t.sol\":15744:15799  _oracleCaller.observation(_constantProductPair, lIndex) */
    tag_2364:
      sub
      swap2
      gas
      staticcall
      swap3
      dup4
      iszero
      tag_841
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":15809:15869  assertLt(lCurrObs.logAccLiquidity, lPrevObs.logAccLiquidity) */
      tag_316
        /* \"test/unit/ConstantProductPair.t.sol\":15744:15799  _oracleCaller.observation(_constantProductPair, lIndex) */
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40
        /* \"test/unit/ConstantProductPair.t.sol\":15744:15799  _oracleCaller.observation(_constantProductPair, lIndex) */
      swap3
      dup4
      swap3
      dup8
      swap3
      tag_2370
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2371:
        /* \"test/unit/ConstantProductPair.t.sol\":15818:15842  lCurrObs.logAccLiquidity */
      pop
      pop
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":15844:15868  lPrevObs.logAccLiquidity */
      swap2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
      0x06
      signextend
      swap1
      0x06
      signextend
        /* \"test/unit/ConstantProductPair.t.sol\":15809:15869  assertLt(lCurrObs.logAccLiquidity, lPrevObs.logAccLiquidity) */
      tag_86
      jump\t// in
        /* \"test/unit/ConstantProductPair.t.sol\":15744:15799  _oracleCaller.observation(_constantProductPair, lIndex) */
    tag_2370:
      tag_2372
      swap3
      pop
      dup1
      returndatasize
      lt
      tag_320
      jumpi
      tag_322
      dup2
      dup4
      tag_6
      jump\t// in
    tag_2372:
      codesize
      dup1
      jump(tag_2371)
        /* \"test/unit/ConstantProductPair.t.sol\":15599:15626  _constantProductPair.sync() */
    tag_2360:
      tag_2380
      swap1
      tag_1
      jump\t// in
    tag_2380:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_1219
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":15599:15626  _constantProductPair.sync() */
      dup7
      codesize
      jump(tag_2361)
        /* \"test/unit/ConstantProductPair.t.sol\":15496:15551  _oracleCaller.observation(_constantProductPair, lIndex) */
    tag_2353:
      tag_2383
      swap2
      swap6
      pop
      dup7
      returndatasize
      dup9
      gt
      tag_320
      jumpi
      tag_322
      dup2
      dup4
      tag_6
      jump\t// in
    tag_2383:
      swap4
      codesize
      jump(tag_2354)
        /* \"test/__fixtures/BaseTest.sol\":5938:5986  vm.store(address(aPair), lAccesses[1], lEncoded) */
    tag_2348:
      tag_2387
      dup3
      swap2
      tag_1
      jump\t// in
    tag_2387:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_196
      jumpi
        /* \"test/__fixtures/BaseTest.sol\":5938:5986  vm.store(address(aPair), lAccesses[1], lEncoded) */
      dup1
      jump(tag_2349)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2340:
      0x64
      dup10
      mload(0x40)
      swap1
      0x08c379a000000000000000000000000000000000000000000000000000000000
      dup3
      mstore
      0x04
      dup3
      add
      mstore
      0x1a
      0x24
      dup3
      add
      mstore
      0x696e76616c6964206e756d626572206f66206163636573736573000000000000
      0x44
      dup3
      add
      mstore
      revert
        /* \"test/__fixtures/BaseTest.sol\":5830:5857  vm.accesses(address(aPair)) */
    tag_2338:
      tag_2390
      swap2
      pop
      returndatasize
      dup1
      dup8
      dup4
      returndatacopy
      tag_1237
      dup2
      dup4
      tag_6
      jump\t// in
    tag_2390:
      pop
      codesize
      jump(tag_2339)
        /* \"test/__fixtures/BaseTest.sol\":5748:5788  _oracleCaller.observation(aPair, aIndex) */
    tag_2334:
      tag_2392
      swap1
      dup11
      returndatasize
      dup13
      gt
      tag_320
      jumpi
      tag_322
      dup2
      dup4
      tag_6
      jump\t// in
    tag_2392:
      pop
      codesize
      jump(tag_2335)
        /* \"test/__fixtures/BaseTest.sol\":5727:5738  vm.record() */
    tag_2330:
      tag_2396
      swap1
      swap5
      swap2
      swap5
      tag_1
      jump\t// in
    tag_2396:
      swap3
      codesize
      jump(tag_2331)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2324:
      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
      swap1
      dup8
      sub
      0x03
      shl
      shl
      and
      codesize
      jump(tag_2325)
        /* \"test/unit/ConstantProductPair.t.sol\":15317:15351  _constantProductPair.getReserves() */
    tag_2319:
      tag_2397
      swap2
      swap7
      pop
      dup5
      returndatasize
      dup7
      gt
      tag_328
      jumpi
      tag_330
      dup2
      dup4
      tag_6
      jump\t// in
    tag_2397:
      swap3
      pop
      pop
      pop
      swap5
      codesize
      jump(tag_2320)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_136:
      pop
      jumpi(tag_196, callvalue)
      0x80
      dup1
      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
      slt
      tag_255
      jumpi
      calldataload(0x04)
      0xffffffffffffffffffffffffffffffffffffffff
      swap2
      dup3
      dup3
      and
      dup1
      swap3
      sub
      tag_285
      jumpi
      calldataload(0x24)
      calldataload(0x44)
      swap1
      calldataload(0x64)
      swap1
      0xffffffffffffffff
      swap5
      dup6
      dup4
      gt
      tag_1227
      jumpi
      calldatasize
      0x23
      dup5
      add
      slt
      iszero
      tag_1227
      jumpi
      dup3
      0x04
      add
      calldataload
      swap6
      dup1
      dup8
      gt
      tag_2413
      jumpi
      calldatasize
      0x24
      dup9
      dup7
      add
      add
      gt
      tag_2413
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":1163:1180  _validateCallback */
      0x21
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      0xa0
      shr
      and
      0x01
      eq
      tag_2415
      jumpi
      0x24
      dup9
      0x4e487b7100000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      mstore(0x04, 0x51)
      revert
    tag_2415:
        /* \"test/unit/ConstantProductPair.t.sol\":5394:5398  this */
      address
        /* \"lib/solmate/lib/ds-test/src/test.sol\":3678:3684  a != b */
      dup2
      sub
        /* \"lib/solmate/lib/ds-test/src/test.sol\":3674:3886  if (a != b) {... */
      tag_2417
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2418:
        /* \"test/unit/ConstantProductPair.t.sol\":5428:5433  -1e18 */
      pop
      0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000
        /* \"lib/solmate/lib/ds-test/src/test.sol\":4814:4820  a != b */
      swap1
      dup2
      dup2
      sub
        /* \"lib/solmate/lib/ds-test/src/test.sol\":4810:5010  if (a != b) {... */
      tag_2419
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2420:
        /* \"lib/forge-std/src/StdMath.sol\":1268:1279  delta(a, b) */
      pop
      pop
      tag_2421
      dup3
      tag_57
      jump\t// in
    tag_2421:
        /* \"test/unit/ConstantProductPair.t.sol\":5471:5475  1e18 */
      swap2
      0x0de0b6b3a7640000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      dup2
      dup5
      mul
      swap4
      dup1
      dup6
      div
      dup4
      eq
      swap1
      iszero
      or
      iszero
      tag_505
      jumpi
      dup2
      tag_2424
      swap5
      div
        /* \"test/unit/ConstantProductPair.t.sol\":5477:5485  0.013e18 */
      0x2e2f6e5e148000
        /* \"lib/forge-std/src/StdAssertions.sol\":6563:6593  percentDelta > maxPercentDelta */
      dup1
      dup3
      gt
        /* \"lib/forge-std/src/StdAssertions.sol\":6559:6940  if (percentDelta > maxPercentDelta) {... */
      tag_2425
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2426:
      pop
      pop
      pop
      pop
      tag_2427
      tag_50
      jump\t// in
    tag_2427:
      swap4
      0x24
      calldatasize
      swap3
      add
      tag_8
      jump\t// in
    tag_2424:
      0x01
        /* \"lib/solmate/lib/ds-test/src/test.sol\":15389:15398  ok = true */
      dup1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      mload
      dup6
      mload
        /* \"lib/solmate/lib/ds-test/src/test.sol\":15412:15432  a.length == b.length */
      eq
        /* \"lib/solmate/lib/ds-test/src/test.sol\":15408:15636  if (a.length == b.length) {... */
      0x00
        /* \"lib/solmate/lib/ds-test/src/test.sol\":15424:15432  b.length */
      eq
      tag_2428
      jumpi
        /* \"lib/solmate/lib/ds-test/src/test.sol\":15453:15463  uint i = 0 */
      dup7
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2430:
      tag_2431
      jumpi
        /* \"lib/solmate/lib/ds-test/src/test.sol\":15448:15585  for (uint i = 0; i < a.length; i++) {... */
    tag_2432:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":15408:15636  if (a.length == b.length) {... */
      pop
      pop
    tag_2433:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":15721:15736  !checkEq0(a, b) */
      iszero
        /* \"lib/solmate/lib/ds-test/src/test.sol\":15717:15932  if (!checkEq0(a, b)) {... */
      tag_2434
      jumpi
        /* \"lib/solmate/lib/ds-test/src/test.sol\":15408:15636  if (a.length == b.length) {... */
    tag_2435:
      pop
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":5538:5558  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      mload(0x40)
      0xe12bd9d800000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":5538:5594  _constantProductPair.swap(1e18, true, address(this), \"\") */
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":5471:5475  1e18 */
      0x0de0b6b3a7640000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":5538:5594  _constantProductPair.swap(1e18, true, address(this), \"\") */
      dup3
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":15394:15398  true */
      0x01
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      dup3
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":5394:5398  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x44
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x80
      0x64
      dup3
      add
      mstore
      0x00
      0x84
      dup3
      add
      mstore
      swap3
      0x20
      swap3
      pop
      dup4
      swap2
      and
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":5394:5398  this */
      dup6
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      0xa4
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":5538:5594  _constantProductPair.swap(1e18, true, address(this), \"\") */
      tag_1840
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      jump
        /* \"lib/solmate/lib/ds-test/src/test.sol\":15717:15932  if (!checkEq0(a, b)) {... */
    tag_2434:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":15757:15799  log(\"Error: a == b not satisfied [bytes]\") */
      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_2446
      swap3
      mload(0x40)
      0x20
      dup2
      mstore
      0x23
      0x20
      dup3
      add
      mstore
      0x4572726f723a2061203d3d2062206e6f7420736174697366696564205b627974
      0x40
      dup3
      add
      mstore
      0x65735d0000000000000000000000000000000000000000000000000000000000
      0x60
      dup3
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":15757:15799  log(\"Error: a == b not satisfied [bytes]\") */
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      swap3
      0x40
      dup5
      mstore
      tag_2447
      0x40
      dup6
      add
      0x40
      swap1
      0x0a
      dup2
      mstore
      0x2020457870656374656400000000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_2447:
      swap4
      dup1
      dup6
      sub
      0x20
      dup3
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":15818:15850  log_named_bytes(\"  Expected\", b) */
      dup1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_2448
        /* \"lib/solmate/lib/ds-test/src/test.sol\":15818:15850  log_named_bytes(\"  Expected\", b) */
      0xd26e16cad4548705e4c9e2d94f98ee91c289085ee425594fd5635fa2964ccf18
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap7
      dup8
      swap5
      tag_10
      jump\t// in
    tag_2448:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":15818:15850  log_named_bytes(\"  Expected\", b) */
      sub
      swap1
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      swap2
      dup3
      swap2
      0x40
      dup4
      mstore
      tag_2449
      0x40
      dup5
      add
      0x40
      swap1
      0x0a
      dup2
      mstore
      0x2020202041637475616c00000000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_2449:
      swap1
      dup4
      dup3
      sub
      0x20
      dup6
      add
      mstore
      tag_10
      jump\t// in
    tag_2446:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":15869:15901  log_named_bytes(\"    Actual\", a) */
      sub
      swap1
      log1
      tag_2450
      tag_42
      jump\t// in
    tag_2450:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":15717:15932  if (!checkEq0(a, b)) {... */
      codesize
      dup1
      dup1
      jump(tag_2435)
        /* \"lib/solmate/lib/ds-test/src/test.sol\":15479:15482  i++ */
    tag_2431:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup4
      mload
        /* \"lib/solmate/lib/ds-test/src/test.sol\":15465:15477  i < a.length */
      dup2
      lt
      iszero
      tag_2451
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xff00000000000000000000000000000000000000000000000000000000000000
        /* \"lib/solmate/lib/ds-test/src/test.sol\":15506:15510  a[i] */
      dup1
      tag_2453
      dup4
      dup8
      tag_20
      jump\t// in
    tag_2453:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
      and
        /* \"lib/solmate/lib/ds-test/src/test.sol\":15514:15518  b[i] */
      swap1
      tag_2454
      dup4
      dup10
      tag_20
      jump\t// in
    tag_2454:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
      and
        /* \"lib/solmate/lib/ds-test/src/test.sol\":15506:15518  a[i] != b[i] */
      sub
        /* \"lib/solmate/lib/ds-test/src/test.sol\":15502:15571  if (a[i] != b[i]) {... */
      tag_2455
      jumpi
        /* \"lib/solmate/lib/ds-test/src/test.sol\":15479:15482  i++ */
    tag_2456:
      tag_2457
      swap1
      tag_19
      jump\t// in
    tag_2457:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":15453:15463  uint i = 0 */
      dup2
      jump(tag_2430)
        /* \"lib/solmate/lib/ds-test/src/test.sol\":15502:15571  if (a[i] != b[i]) {... */
    tag_2455:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":15542:15552  ok = false */
      dup8
      swap3
      pop
        /* \"lib/solmate/lib/ds-test/src/test.sol\":15502:15571  if (a[i] != b[i]) {... */
      jump(tag_2456)
        /* \"lib/solmate/lib/ds-test/src/test.sol\":15465:15477  i < a.length */
    tag_2451:
      jump(tag_2432)
        /* \"lib/solmate/lib/ds-test/src/test.sol\":15408:15636  if (a.length == b.length) {... */
    tag_2428:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":15615:15625  ok = false */
      pop
      pop
      dup5
        /* \"lib/solmate/lib/ds-test/src/test.sol\":15408:15636  if (a.length == b.length) {... */
      jump(tag_2433)
        /* \"lib/forge-std/src/StdAssertions.sol\":6559:6940  if (percentDelta > maxPercentDelta) {... */
    tag_2425:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xa0
      swap4
        /* \"lib/forge-std/src/StdAssertions.sol\":6853:6909  log_named_decimal_uint(\"     % Delta\", percentDelta, 18) */
      tag_2458
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap4
        /* \"lib/forge-std/src/StdAssertions.sol\":6614:6654  log(\"Error: a ~= b not satisfied [int]\") */
      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup10
      mload(0x40)
      0x20
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":1163:1180  _validateCallback */
      0x21
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
      dup3
      add
      mstore
      0x4572726f723a2061207e3d2062206e6f7420736174697366696564205b696e74
      0x40
      dup3
      add
      mstore
      0x5d00000000000000000000000000000000000000000000000000000000000000
      0x60
      dup3
      add
      mstore
        /* \"lib/forge-std/src/StdAssertions.sol\":6614:6654  log(\"Error: a ~= b not satisfied [int]\") */
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      swap2
      0x40
      dup4
      mstore
      tag_2459
      0x40
      dup5
      add
      0x40
      swap1
      0x0c
      dup2
      mstore
      0x2020202045787065637465640000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_2459:
      swap1
      0x20
      dup5
      add
      mstore
        /* \"lib/forge-std/src/StdAssertions.sol\":6673:6705  log_named_int(\"    Expected\", b) */
      dup3
      0x2fe632779174374378442a8e978bccfbdcc1d6b2b0d81f7e8eb776ab2286f168
      swap4
      dup5
      swap3
      sub
      swap1
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      dup1
      swap2
      0x40
      dup3
      mstore
      tag_2460
      0x40
      dup4
      add
      0x40
      swap1
      0x0c
      dup2
      mstore
      0x20202020202041637475616c0000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_2460:
      swap1
      0x20
      dup4
      add
      mstore
        /* \"lib/forge-std/src/StdAssertions.sol\":6724:6756  log_named_int(\"      Actual\", a) */
      sub
      swap1
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      swap1
      0x60
      dup3
      mstore
      0x0c
      0x60
      dup4
      add
      mstore
      0x204d617820252044656c74610000000000000000000000000000000000000000
      dup9
      dup4
      add
      mstore
      0x20
      dup3
      add
      mstore
        /* \"lib/forge-std/src/StdAssertions.sol\":6831:6833  18 */
      0x12
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40
      dup3
      add
      mstore
        /* \"lib/forge-std/src/StdAssertions.sol\":6775:6834  log_named_decimal_uint(\" Max % Delta\", maxPercentDelta, 18) */
      0xeb8ba43ced7537421946bd43e828b8b2b8428927aa8f801c13d934bf11aca57b
      swap4
      dup5
      swap2
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"lib/forge-std/src/StdAssertions.sol\":6853:6909  log_named_decimal_uint(\"     % Delta\", percentDelta, 18) */
      swap2
      dup3
      swap2
      dup3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40
        /* \"lib/forge-std/src/StdAssertions.sol\":6831:6833  18 */
      0x12
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap2
      swap4
      swap3
      swap4
      0x60
      dup2
      mstore
      0x0c
      0x60
      dup3
      add
      mstore
      0x2020202020252044656c74610000000000000000000000000000000000000000
      0x80
      dup3
      add
      mstore
      0xa0
      dup2
      add
      swap5
      0x20
      dup3
      add
      mstore
      add
      mstore
      jump
        /* \"lib/forge-std/src/StdAssertions.sol\":6853:6909  log_named_decimal_uint(\"     % Delta\", percentDelta, 18) */
    tag_2458:
      sub
      swap1
      log1
      tag_2461
      tag_42
      jump\t// in
    tag_2461:
        /* \"lib/forge-std/src/StdAssertions.sol\":6559:6940  if (percentDelta > maxPercentDelta) {... */
      codesize
      dup1
      dup1
      dup1
      jump(tag_2426)
        /* \"lib/solmate/lib/ds-test/src/test.sol\":4810:5010  if (a != b) {... */
    tag_2419:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":4841:4881  log(\"Error: a == b not satisfied [int]\") */
      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup6
      mload(0x40)
      0x20
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":1163:1180  _validateCallback */
      0x21
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
      dup3
      add
      mstore
      0x4572726f723a2061203d3d2062206e6f7420736174697366696564205b696e74
      0x40
      dup3
      add
      mstore
      0x5d00000000000000000000000000000000000000000000000000000000000000
      0x60
      dup3
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":4841:4881  log(\"Error: a == b not satisfied [int]\") */
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      swap2
      0x40
      dup4
      mstore
      tag_2462
      0x40
      dup5
      add
      0x40
      swap1
      0x0a
      dup2
      mstore
      0x2020457870656374656400000000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_2462:
      swap1
      0x20
      dup5
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":4900:4930  log_named_int(\"  Expected\", b) */
      dup3
      0x2fe632779174374378442a8e978bccfbdcc1d6b2b0d81f7e8eb776ab2286f168
      swap4
      dup5
      swap3
      sub
      swap1
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      dup1
      swap2
      0x40
      dup3
      mstore
      tag_2463
      0x40
      dup4
      add
      0x40
      swap1
      0x0a
      dup2
      mstore
      0x2020202041637475616c00000000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_2463:
      swap1
      0x20
      dup4
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":4949:4979  log_named_int(\"    Actual\", a) */
      sub
      swap1
      log1
      tag_2464
      tag_42
      jump\t// in
    tag_2464:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":4810:5010  if (a != b) {... */
      codesize
      dup1
      jump(tag_2420)
        /* \"lib/solmate/lib/ds-test/src/test.sol\":3674:3886  if (a != b) {... */
    tag_2417:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":3705:3749  log(\"Error: a == b not satisfied [address]\") */
      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup6
      mload(0x40)
      0x20
      dup2
      mstore
      0x25
      0x20
      dup3
      add
      mstore
      0x4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464
      0x40
      dup3
      add
      mstore
      0x726573735d000000000000000000000000000000000000000000000000000000
      0x60
      dup3
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":3705:3749  log(\"Error: a == b not satisfied [address]\") */
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      swap1
      0x40
      dup3
      mstore
      tag_2465
      0x40
      dup4
      add
      0x40
      swap1
      0x0a
      dup2
      mstore
      0x2020457870656374656400000000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_2465:
        /* \"test/unit/ConstantProductPair.t.sol\":5394:5398  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":3768:3802  log_named_address(\"  Expected\", b) */
      dup3
      0x9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f
      swap4
      dup5
      swap3
      sub
      swap1
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      dup1
      swap2
      0x40
      dup3
      mstore
      tag_2466
      0x40
      dup4
      add
      0x40
      swap1
      0x0a
      dup2
      mstore
      0x2020202041637475616c00000000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_2466:
      swap1
      0x20
      dup4
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":3821:3855  log_named_address(\"    Actual\", a) */
      sub
      swap1
      log1
      tag_2467
      tag_42
      jump\t// in
    tag_2467:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":3674:3886  if (a != b) {... */
      codesize
      jump(tag_2418)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2413:
      dup9
      dup1
      revert
    tag_134:
      pop
      jumpi(tag_196, callvalue)
      0x20
      dup1
      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
      slt
      tag_255
      jumpi
      calldataload(0x04)
      swap2
      0xffffffffffffffff
      dup4
      gt
      tag_196
      jumpi
      calldatasize
      0x23
      dup5
      add
      slt
      iszero
      tag_196
      jumpi
      tag_2476
      0x24
      swap4
      calldatasize
      swap1
      dup6
      dup2
      0x04
      add
      calldataload
      swap2
      add
      tag_8
      jump\t// in
    tag_2476:
      swap3
      dup4
      mload
      swap2
      0x01
      swap2
      dup4
      dup4
      shl
        /* \"test/__fixtures/BaseTest.sol\":4405:4406  2 */
      0x02
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap5
      dup1
      dup3
      div
      dup7
      eq
      swap1
      iszero
      or
      iszero
      tag_2477
      jumpi
        /* \"test/__fixtures/BaseTest.sol\":4379:4407  new bytes(buffer.length * 2) */
      dup4
      dup8
      swap4
      dup8
      swap4
      tag_2479
      dup9
      swap5
      tag_18
      jump\t// in
    tag_2479:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap6
      mload(0x40)
      tag_2480
      dup2
      tag_4
      jump\t// in
    tag_2480:
      0x10
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x3031323334353637383961626364656600000000000000000000000000000000
      dup8
      dup3
      add
      mstore
        /* \"test/__fixtures/BaseTest.sol\":4473:4486  uint256 i = 0 */
      dup4
        /* \"test/__fixtures/BaseTest.sol\":4468:4669  for (uint256 i = 0; i < buffer.length; i++) {... */
      swap9
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2481:
      tag_2482
      jumpi
        /* \"test/__fixtures/BaseTest.sol\":4468:4669  for (uint256 i = 0; i < buffer.length; i++) {... */
    tag_2483:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup8
      dup8
        /* \"test/__fixtures/BaseTest.sol\":4693:4726  abi.encodePacked(\"0x\", converted) */
      tag_2484
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x22
      dup10
      mload(0x40)
        /* \"test/__fixtures/BaseTest.sol\":4693:4726  abi.encodePacked(\"0x\", converted) */
      dup1
      swap6
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x3078000000000000000000000000000000000000000000000000000000000000
        /* \"test/__fixtures/BaseTest.sol\":4693:4726  abi.encodePacked(\"0x\", converted) */
      dup7
      dup4
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      tag_2485
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      mload
      dup1
      swap3
      dup9
      dup8
      dup7
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      swap2
      add
      tag_9
      jump\t// in
    tag_2485:
      dup2
      add
        /* \"test/__fixtures/BaseTest.sol\":4693:4726  abi.encodePacked(\"0x\", converted) */
      sub
      swap1
      dup2
      add
      dup6
      mstore
      add
      dup4
      tag_6
      jump\t// in
    tag_2484:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_2486
      mload(0x40)
      swap3
      dup3
      dup5
      swap4
      dup5
      mstore
      dup4
      add
      swap1
      tag_10
      jump\t// in
    tag_2486:
      sub
      swap1
      return
        /* \"test/__fixtures/BaseTest.sol\":4507:4510  i++ */
    tag_2482:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      mload
        /* \"test/__fixtures/BaseTest.sol\":4488:4505  i < buffer.length */
      dup10
      lt
      iszero
      tag_2487
      jumpi
        /* \"test/__fixtures/BaseTest.sol\":4557:4566  buffer[i] */
      tag_2489
      dup10
      dup4
      tag_20
      jump\t// in
    tag_2489:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
      0xff00000000000000000000000000000000000000000000000000000000000000
      dup1
        /* \"test/__fixtures/BaseTest.sol\":4545:4583  _base[uint8(buffer[i]) / _base.length] */
      tag_2490
        /* \"test/__fixtures/BaseTest.sol\":4551:4582  uint8(buffer[i]) / _base.length */
      tag_2491
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup6
      mload
      0xf8
      swap6
      dup7
      shr
        /* \"test/__fixtures/BaseTest.sol\":4551:4582  uint8(buffer[i]) / _base.length */
      tag_21
      jump\t// in
    tag_2491:
        /* \"test/__fixtures/BaseTest.sol\":4545:4583  _base[uint8(buffer[i]) / _base.length] */
      dup6
      tag_20
      jump\t// in
    tag_2490:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
      and
      swap2
      dup12
      dup9
      shl
      swap3
      dup13
      dup5
      div
      dup11
      eq
      dup14
      iszero
      or
      iszero
      tag_2492
      jumpi
        /* \"test/__fixtures/BaseTest.sol\":4620:4658  _base[uint8(buffer[i]) % _base.length] */
      tag_2494
        /* \"test/__fixtures/BaseTest.sol\":4526:4583  converted[i * 2] = _base[uint8(buffer[i]) / _base.length] */
      swap2
        /* \"test/__fixtures/BaseTest.sol\":4632:4641  buffer[i] */
      tag_2495
        /* \"test/__fixtures/BaseTest.sol\":4526:4583  converted[i * 2] = _base[uint8(buffer[i]) / _base.length] */
      dup15
      dup15
      tag_2496
      dup9
        /* \"test/__fixtures/BaseTest.sol\":4626:4657  uint8(buffer[i]) % _base.length */
      tag_2497
        /* \"test/__fixtures/BaseTest.sol\":4526:4583  converted[i * 2] = _base[uint8(buffer[i]) / _base.length] */
      swap7
      dup15
      byte
      swap3
      tag_20
      jump\t// in
    tag_2496:
      mstore8
        /* \"test/__fixtures/BaseTest.sol\":4632:4641  buffer[i] */
      dup9
      tag_20
      jump\t// in
    tag_2495:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
      dup7
      mload
      swap2
      shr
        /* \"test/__fixtures/BaseTest.sol\":4626:4657  uint8(buffer[i]) % _base.length */
      tag_22
      jump\t// in
    tag_2497:
        /* \"test/__fixtures/BaseTest.sol\":4620:4658  _base[uint8(buffer[i]) % _base.length] */
      dup5
      tag_20
      jump\t// in
    tag_2494:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
      and
      dup7
      dup3
      add
      dup1
      swap3
      gt
      tag_2498
      jumpi
        /* \"test/__fixtures/BaseTest.sol\":4597:4658  converted[i * 2 + 1] = _base[uint8(buffer[i]) % _base.length] */
      swap10
        /* \"test/__fixtures/BaseTest.sol\":4507:4510  i++ */
      tag_2500
        /* \"test/__fixtures/BaseTest.sol\":4597:4658  converted[i * 2 + 1] = _base[uint8(buffer[i]) % _base.length] */
      swap2
      tag_2501
      dup9
      swap10
      swap11
      swap12
      swap13
      dup9
      byte
      swap2
      dup14
      tag_20
      jump\t// in
    tag_2501:
      mstore8
        /* \"test/__fixtures/BaseTest.sol\":4507:4510  i++ */
      tag_19
      jump\t// in
    tag_2500:
        /* \"test/__fixtures/BaseTest.sol\":4473:4486  uint256 i = 0 */
      swap9
      swap8
      swap7
      swap6
      jump(tag_2481)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2498:
      dup5
      dup7
      0x4e487b7100000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      mstore(0x04, 0x11)
      revert
    tag_2492:
      dup7
      dup9
      0x4e487b7100000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      mstore(0x04, 0x11)
      revert
        /* \"test/__fixtures/BaseTest.sol\":4488:4505  i < buffer.length */
    tag_2487:
      jump(tag_2483)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2477:
      pop
      swap1
      0x4e487b7100000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      mstore(0x04, 0x11)
      revert
    tag_132:
      pop
      jumpi(tag_196, callvalue)
      dup1
      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
      slt
      tag_196
      jumpi
      0xffffffffffffffffffffffffffffffffffffffff
      dup2
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":3508:3558  _createPair(address(_tokenA), address(_tokenC), 0) */
      tag_2506
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":3528:3535  _tokenA */
      0x19
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      dup3
        /* \"test/unit/ConstantProductPair.t.sol\":3546:3553  _tokenC */
      0x1b
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":3508:3558  _createPair(address(_tokenA), address(_tokenC), 0) */
      swap1
      tag_46
      jump\t// in
    tag_2506:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      and
      swap2
      dup1
        /* \"test/unit/ConstantProductPair.t.sol\":3528:3535  _tokenA */
      0x19
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":3585:3619  _tokenA.mint(address(lPair), 1001) */
      swap1
      dup2
      extcodesize
      iszero
      tag_291
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      swap1
      0x40c10f1900000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":3585:3619  _tokenA.mint(address(lPair), 1001) */
      swap2
      dup3
      dup2
      mstore
      dup6
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":3585:3619  _tokenA.mint(address(lPair), 1001) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":3614:3618  1001 */
      dup5
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x44
        /* \"test/unit/ConstantProductPair.t.sol\":3614:3618  1001 */
      dup2
      dup4
      0x03e9
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap9
      dup10
      0x24
      dup5
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":3585:3619  _tokenA.mint(address(lPair), 1001) */
      gas
      call
      swap1
      dup2
      iszero
      tag_201
      jumpi
      dup6
      swap2
      tag_2511
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2512:
      pop
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":3546:3553  _tokenC */
      0x1b
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":3629:3663  _tokenC.mint(address(lPair), 1001) */
      swap2
      dup3
      extcodesize
      iszero
      tag_285
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x44
      dup5
      swap3
      dup4
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":3629:3663  _tokenC.mint(address(lPair), 1001) */
      swap6
      dup7
      swap5
      dup6
      swap4
      dup5
      mstore
      dup10
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":3629:3663  _tokenC.mint(address(lPair), 1001) */
      dup6
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      dup5
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":3629:3663  _tokenC.mint(address(lPair), 1001) */
      gas
      call
      dup1
      iszero
      tag_219
      jumpi
      tag_2517
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2518:
      pop
      pop
      mload(0x40)
      0x6a62784200000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":3673:3698  lPair.mint(address(this)) */
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":3692:3696  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":3673:3698  lPair.mint(address(this)) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":3673:3698  lPair.mint(address(this)) */
      swap1
      dup2
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":3673:3698  lPair.mint(address(this)) */
      dup2
      dup8
      dup8
      gas
      call
      dup1
      iszero
      tag_841
      jumpi
      tag_2521
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2522:
      pop
      dup1
      0x24
      swap3
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":3736:3766  lPair.balanceOf(address(this)) */
      swap4
      dup5
      dup1
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x70a0823100000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":3736:3766  lPair.balanceOf(address(this)) */
      dup3
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":3692:3696  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":3736:3766  lPair.balanceOf(address(this)) */
      dup4
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":3736:3766  lPair.balanceOf(address(this)) */
      gas
      staticcall
      swap1
      dup2
      iszero
      tag_215
      jumpi
      dup4
      swap2
      tag_2525
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2526:
        /* \"test/unit/ConstantProductPair.t.sol\":3727:3770  assertEq(lPair.balanceOf(address(this)), 1) */
      dup4
      tag_316
      dup4
      tag_37
      jump\t// in
        /* \"test/unit/ConstantProductPair.t.sol\":3736:3766  lPair.balanceOf(address(this)) */
    tag_2525:
      swap1
      pop
      dup2
      dup2
      returndatasize
      dup4
      gt
      tag_2528
      jumpi
    tag_2529:
      tag_2530
      dup2
      dup4
      tag_6
      jump\t// in
    tag_2530:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":3727:3770  assertEq(lPair.balanceOf(address(this)), 1) */
      tag_316
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":3736:3766  lPair.balanceOf(address(this)) */
      codesize
      jump(tag_2526)
    tag_2528:
      pop
      returndatasize
      jump(tag_2529)
        /* \"test/unit/ConstantProductPair.t.sol\":3673:3698  lPair.mint(address(this)) */
    tag_2521:
      dup2
      swap1
      dup2
      returndatasize
      dup4
      gt
      tag_2533
      jumpi
    tag_2534:
      tag_2535
      dup2
      dup4
      tag_6
      jump\t// in
    tag_2535:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":3673:3698  lPair.mint(address(this)) */
      codesize
      jump(tag_2522)
    tag_2533:
      pop
      returndatasize
      jump(tag_2534)
        /* \"test/unit/ConstantProductPair.t.sol\":3629:3663  _tokenC.mint(address(lPair), 1001) */
    tag_2517:
      tag_2538
      swap1
      tag_1
      jump\t// in
    tag_2538:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_255
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":3629:3663  _tokenC.mint(address(lPair), 1001) */
      dup2
      codesize
      jump(tag_2518)
        /* \"test/unit/ConstantProductPair.t.sol\":3585:3619  _tokenA.mint(address(lPair), 1001) */
    tag_2511:
      tag_2541
      swap1
      tag_1
      jump\t// in
    tag_2541:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_285
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":3585:3619  _tokenA.mint(address(lPair), 1001) */
      dup4
      codesize
      jump(tag_2512)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_130:
      pop
      jumpi(tag_196, callvalue)
      dup1
      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
      slt
      tag_196
      jumpi
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25443  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      swap3
      dup4
      dup1
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x26232a2e00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      dup3
      mstore
      gas
      staticcall
      dup1
      iszero
      tag_219
      jumpi
      dup3
      swap1
      tag_2550
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2551:
        /* \"test/unit/ConstantProductPair.t.sol\":25414:25461  assertGt(_constantProductPair.platformFee(), 0) */
      tag_2552
      swap2
      pop
      tag_68
      jump\t// in
    tag_2552:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup1
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25443  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":25471:25498  _constantProductPair.sync() */
      dup1
      extcodesize
      iszero
      tag_229
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      dup1
      swap2
      0x04
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":25471:25498  _constantProductPair.sync() */
      dup1
      swap5
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xfff6cae900000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":25471:25498  _constantProductPair.sync() */
      dup4
      mstore
      gas
      call
      dup1
      iszero
      tag_219
      jumpi
      tag_2557
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2558:
      pop
      pop
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25443  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      swap1
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":25524:25553  _constantProductPair.token0() */
      swap2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x0dfe168100000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":25524:25553  _constantProductPair.token0() */
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":25524:25553  _constantProductPair.token0() */
      dup4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":25524:25553  _constantProductPair.token0() */
      dup2
      dup5
      gas
      staticcall
      swap1
      dup2
      iszero
      tag_219
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":25524:25553  _constantProductPair.token0() */
      swap4
      dup4
      swap3
      tag_2561
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2562:
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":25579:25608  _constantProductPair.token1() */
      swap5
      dup6
      dup1
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xd21220a700000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":25579:25608  _constantProductPair.token1() */
      dup3
      mstore
      gas
      staticcall
      swap3
      dup4
      iszero
      tag_219
      jumpi
      dup3
      swap4
      tag_2565
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2566:
      pop
      dup2
      dup1
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */
      dup2
      add
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x70a0823100000000000000000000000000000000000000000000000000000000
        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */
      dup3
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":25704:25708  this */
      address
        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */
      0x24
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */
      0x24
      dup2
      mstore
      tag_2567
      dup2
      tag_5
      jump\t// in
    tag_2567:
        /* \"lib/forge-std/src/StdCheats.sol\":19719:19769  token.call(abi.encodeWithSelector(0x70a08231, to)) */
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      dup3
      0xffffffffffffffffffffffffffffffffffffffff
      dup7
      and
        /* \"lib/forge-std/src/StdCheats.sol\":19719:19769  token.call(abi.encodeWithSelector(0x70a08231, to)) */
      gas
      call
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"lib/forge-std/src/StdCheats.sol\":19719:19769  token.call(abi.encodeWithSelector(0x70a08231, to)) */
      tag_2568
      tag_13
      jump\t// in
    tag_2568:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup1
      mload
        /* \"lib/forge-std/src/StdCheats.sol\":19797:19827  abi.decode(balData, (uint256)) */
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
      0xffffffffffffffffffffffffffffffffffffffff
      dup2
      and
      0xffffffffffffffffffffffff0000000000000000000000000000000000000000
        /* \"lib/forge-std/src/StdStorage.sol\":4581:4593  self._target */
      0x0a
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      or
        /* \"lib/forge-std/src/StdStorage.sol\":4581:4593  self._target */
      0x0a
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sstore
        /* \"lib/forge-std/src/StdCheats.sol\":19753:19763  0x70a08231 */
      0x70a08231
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000
        /* \"lib/forge-std/src/StdStorage.sol\":4736:4745  self._sig */
      0x08
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      or
        /* \"lib/forge-std/src/StdStorage.sol\":4736:4745  self._sig */
      0x08
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sstore
        /* \"lib/forge-std/src/StdStorage.sol\":5052:5062  self._keys */
      0x07
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      0x010000000000000000
      dup2
      lt
      iszero
      tag_2571
      jumpi
      0x01
      dup2
      add
      dup1
        /* \"lib/forge-std/src/StdStorage.sol\":5052:5062  self._keys */
      0x07
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sstore
      dup2
      lt
      iszero
      tag_2573
      jumpi
        /* \"lib/forge-std/src/StdStorage.sol\":5052:5062  self._keys */
      0x07
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":25704:25708  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688
      add
      sstore
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"lib/forge-std/src/StdStorage.sol\":4581:4593  self._target */
      0x0a
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      swap3
        /* \"lib/forge-std/src/StdStorage.sol\":4736:4745  self._sig */
      0x08
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      0xe0
      shl
        /* \"lib/forge-std/src/StdStorage.sol\":9476:9487  self._depth */
      0x09
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      swap5
      dup5
      dup1
      tag_2575
      tag_104
      jump\t// in
    tag_2575:
        /* \"lib/forge-std/src/StdStorage.sol\":9584:9596  flatten(ins) */
      swap4
      tag_2576
      dup6
      tag_113
      jump\t// in
    tag_2576:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      mload(0x40)
        /* \"lib/forge-std/src/StdStorage.sol\":9561:9597  abi.encodePacked(fsig, flatten(ins)) */
      swap6
      dup7
      tag_2577
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"lib/forge-std/src/StdStorage.sol\":9561:9597  abi.encodePacked(fsig, flatten(ins)) */
      dup3
      add
      swap5
      dup5
      dup7
      tag_12
      jump\t// in
    tag_2577:
      sub
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap2
        /* \"lib/forge-std/src/StdStorage.sol\":9561:9597  abi.encodePacked(fsig, flatten(ins)) */
      tag_2578
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
        /* \"lib/forge-std/src/StdStorage.sol\":9561:9597  abi.encodePacked(fsig, flatten(ins)) */
      swap4
      dup5
      dup2
      add
      dup11
      mstore
      dup10
      tag_6
      jump\t// in
    tag_2578:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      0xffffffff00000000000000000000000000000000000000000000000000000000
        /* \"lib/forge-std/src/StdStorage.sol\":9612:9627  self.finds[who] */
      tag_2579
      dup9
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0x00
      mstore
        /* \"lib/forge-std/src/StdStorage.sol\":9612:9622  self.finds */
      0x06
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
      mstore
      keccak256(0x00, 0x40)
      swap1
      jump
        /* \"lib/forge-std/src/StdStorage.sol\":9612:9627  self.finds[who] */
    tag_2579:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      swap2
      and
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      dup2
      dup7
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
      0x40
      dup6
      keccak256
      dup13
      mload(0x40)
        /* \"lib/forge-std/src/StdStorage.sol\":9644:9678  abi.encodePacked(ins, field_depth) */
      tag_2580
      dup2
      tag_662
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"lib/forge-std/src/StdStorage.sol\":9644:9678  abi.encodePacked(ins, field_depth) */
      dup3
      add
      swap5
      dup9
      dup7
      tag_107
      jump\t// in
    tag_2580:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
        /* \"lib/forge-std/src/StdStorage.sol\":9634:9679  keccak256(abi.encodePacked(ins, field_depth)) */
      swap1
      keccak256
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup7
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
      0xff
      0x40
      dup7
      keccak256
      sload
      and
        /* \"lib/forge-std/src/StdStorage.sol\":9611:9680  !self.finds[who][fsig][keccak256(abi.encodePacked(ins, field_depth))] */
      iszero
        /* \"lib/forge-std/src/StdStorage.sol\":9607:9717  if (!self.finds[who][fsig][keccak256(abi.encodePacked(ins, field_depth))]) {... */
      tag_2582
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2583:
        /* \"lib/forge-std/src/StdStorage.sol\":9749:9764  self.slots[who] */
      tag_2584
      dup8
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0x00
      mstore
        /* \"lib/forge-std/src/StdCheats.sol\":19864:19872  stdstore */
      0x05
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
      mstore
      keccak256(0x00, 0x40)
      swap1
      jump
        /* \"lib/forge-std/src/StdStorage.sol\":9749:9764  self.slots[who] */
    tag_2584:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      dup6
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"lib/forge-std/src/StdStorage.sol\":9781:9815  abi.encodePacked(ins, field_depth) */
      tag_667
      tag_2586
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40
      dup7
      keccak256
      swap4
      dup14
      mload(0x40)
        /* \"lib/forge-std/src/StdStorage.sol\":9781:9815  abi.encodePacked(ins, field_depth) */
      swap4
      dup5
      swap2
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"lib/forge-std/src/StdStorage.sol\":9781:9815  abi.encodePacked(ins, field_depth) */
      dup4
      add
      swap7
      dup8
      tag_107
      jump\t// in
    tag_2586:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
        /* \"lib/forge-std/src/StdStorage.sol\":9771:9816  keccak256(abi.encodePacked(ins, field_depth)) */
      swap1
      keccak256
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
      0x40
      dup3
      keccak256
      sload
        /* \"lib/forge-std/src/StdStorage.sol\":9889:9909  who.staticcall(cald) */
      swap5
      mload
      swap1
      dup5
      gas
      staticcall
      pop
      tag_2587
      tag_13
      jump\t// in
    tag_2587:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap6
      0x07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
      dup2
      and
      dup2
      sub
      tag_2588
      jumpi
      dup6
      swap7
        /* \"lib/forge-std/src/StdStorage.sol\":9930:9968  bytesToBytes32(rdat, 32 * field_depth) */
      tag_2590
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap2
        /* \"lib/forge-std/src/StdCheats.sol\":19864:19872  stdstore */
      0x05
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      shl
        /* \"lib/forge-std/src/StdStorage.sol\":9930:9968  bytesToBytes32(rdat, 32 * field_depth) */
      swap1
      tag_112
      jump\t// in
    tag_2590:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      0x667f9d7000000000000000000000000000000000000000000000000000000000
        /* \"lib/forge-std/src/StdStorage.sol\":10003:10021  vm.load(who, slot) */
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      dup4
      and
      0x04
        /* \"lib/forge-std/src/StdStorage.sol\":10003:10021  vm.load(who, slot) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
      0x24
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup5
      swap1
      mstore
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      0x44
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"lib/forge-std/src/StdStorage.sol\":10003:10021  vm.load(who, slot) */
      gas
      staticcall
      swap2
      dup3
      iszero
      tag_1089
      jumpi
      dup8
      swap3
      tag_2594
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2595:
        /* \"lib/forge-std/src/StdStorage.sol\":10036:10048  fdat != curr */
      pop
      sub
        /* \"lib/forge-std/src/StdStorage.sol\":10032:10250  if (fdat != curr) {... */
      tag_2596
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2597:
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"lib/forge-std/src/StdStorage.sol\":10259:10283  vm.store(who, slot, set) */
      extcodesize
      iszero
      tag_249
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      0x70ca10bb00000000000000000000000000000000000000000000000000000000
        /* \"lib/forge-std/src/StdStorage.sol\":10259:10283  vm.store(who, slot, set) */
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      swap2
      swap1
      swap2
      and
      0x04
        /* \"lib/forge-std/src/StdStorage.sol\":10259:10283  vm.store(who, slot, set) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      dup2
      add
      swap2
      swap1
      swap2
      mstore
      0x02b5e3af16b1880000
      0x44
      dup3
      add
      mstore
      dup4
      dup2
      0x64
      dup2
      dup4
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"lib/forge-std/src/StdStorage.sol\":10259:10283  vm.store(who, slot, set) */
      gas
      call
      swap1
      dup2
      iszero
      tag_841
      jumpi
      dup5
      swap2
      tag_2603
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2604:
        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      pop
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffff0000000000000000000000000000000000000000
        /* \"lib/forge-std/src/StdStorage.sol\":4581:4593  self._target */
      0x0a
        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      sload
      and
        /* \"lib/forge-std/src/StdStorage.sol\":4581:4593  self._target */
      0x0a
        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      sstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000
        /* \"lib/forge-std/src/StdStorage.sol\":4736:4745  self._sig */
      0x08
        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      sload
      and
        /* \"lib/forge-std/src/StdStorage.sol\":4736:4745  self._sig */
      0x08
        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      sstore
        /* \"lib/forge-std/src/StdStorage.sol\":10348:10365  delete self._keys */
      tag_2605
      tag_109
      jump\t// in
    tag_2605:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x00
        /* \"lib/forge-std/src/StdStorage.sol\":9476:9487  self._depth */
      0x09
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sstore
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25443  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      mload(0x40)
      0xa9059cbb00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":25777:25837  lToken0.transfer(address(_constantProductPair), lSwapAmount) */
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      swap1
      swap2
      and
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":25777:25837  lToken0.transfer(address(_constantProductPair), lSwapAmount) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x02b5e3af16b1880000
      0x24
      dup3
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      dup1
      0x44
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":25777:25837  lToken0.transfer(address(_constantProductPair), lSwapAmount) */
      sub
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      dup8
      0xffffffffffffffffffffffffffffffffffffffff
      dup9
      and
        /* \"test/unit/ConstantProductPair.t.sol\":25777:25837  lToken0.transfer(address(_constantProductPair), lSwapAmount) */
      gas
      call
      dup1
      iszero
      tag_841
      jumpi
      tag_2609
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2610:
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":25868:25946  _constantProductPair.swap(int256(lSwapAmount), true, address(this), bytes(\"\")) */
      tag_2611
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25443  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      mload(0x40)
      tag_2612
      dup2
      tag_2
      jump\t// in
    tag_2612:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      dup7
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":25868:25946  _constantProductPair.swap(int256(lSwapAmount), true, address(this), bytes(\"\")) */
      swap7
      dup8
      dup1
      swap5
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xe12bd9d800000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":25868:25946  _constantProductPair.swap(int256(lSwapAmount), true, address(this), bytes(\"\")) */
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":25704:25708  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":25868:25946  _constantProductPair.swap(int256(lSwapAmount), true, address(this), bytes(\"\")) */
      dup5
      add
      tag_61
      jump\t// in
    tag_2611:
      sub
      swap3
      gas
      call
      dup1
      iszero
      tag_841
      jumpi
      dup5
      swap1
      tag_2615
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2616:
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25443  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      mload(0x40)
      0xa9059cbb00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":25956:26015  lToken1.transfer(address(_constantProductPair), lAmountOut) */
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      swap1
      swap2
      and
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":25956:26015  lToken1.transfer(address(_constantProductPair), lAmountOut) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
      0x24
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      swap1
      mstore
      swap4
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup5
      dup1
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      0x44
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":25956:26015  lToken1.transfer(address(_constantProductPair), lAmountOut) */
    tag_2617:
      sub
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      dup9
      0xffffffffffffffffffffffffffffffffffffffff
      dup8
      and
        /* \"test/unit/ConstantProductPair.t.sol\":25956:26015  lToken1.transfer(address(_constantProductPair), lAmountOut) */
      gas
      call
      swap1
      dup2
      iszero
      tag_201
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":26038:26116  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
      tag_2620
        /* \"test/unit/ConstantProductPair.t.sol\":25956:26015  lToken1.transfer(address(_constantProductPair), lAmountOut) */
      swap5
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":25956:26015  lToken1.transfer(address(_constantProductPair), lAmountOut) */
      swap3
      tag_2621
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2622:
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":26064:26083  -int256(lAmountOut) */
      tag_2623
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25443  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":26064:26083  -int256(lAmountOut) */
      swap2
      tag_55
      jump\t// in
    tag_2623:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      mload(0x40)
      swap2
      tag_2624
      dup4
      tag_2
      jump\t// in
    tag_2624:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      dup8
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup8
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":26038:26116  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
      dup1
      swap9
      dup2
      swap6
      dup3
      swap5
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xe12bd9d800000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":26038:26116  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
      dup5
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":25704:25708  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":26038:26116  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":26038:26116  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
      dup6
      add
      tag_62
      jump\t// in
    tag_2620:
      sub
      swap3
      gas
      call
      swap3
      dup4
      iszero
      tag_841
      jumpi
      dup5
      swap4
      tag_2627
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2628:
      pop
      dup4
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25443  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":26127:26154  _constantProductPair.sync() */
      dup1
      extcodesize
      iszero
      tag_255
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      dup1
      swap2
      0x04
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":26127:26154  _constantProductPair.sync() */
      dup1
      swap5
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xfff6cae900000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":26127:26154  _constantProductPair.sync() */
      dup4
      mstore
      gas
      call
      dup1
      iszero
      tag_219
      jumpi
      tag_2633
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2634:
      pop
      pop
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25443  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":26173:26221  lToken0.balanceOf(address(_constantProductPair)) */
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x70a0823100000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":26173:26221  lToken0.balanceOf(address(_constantProductPair)) */
      dup3
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":26173:26221  lToken0.balanceOf(address(_constantProductPair)) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      0xffffffffffffffffffffffffffffffffffffffff
      dup8
      and
        /* \"test/unit/ConstantProductPair.t.sol\":26173:26221  lToken0.balanceOf(address(_constantProductPair)) */
      gas
      staticcall
      dup1
      iszero
      tag_201
      jumpi
      dup6
      swap1
      tag_2637
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2638:
        /* \"test/unit/ConstantProductPair.t.sol\":26223:26242  INITIAL_MINT_AMOUNT */
      tag_2639
      swap2
      pop
      tag_69
      jump\t// in
    tag_2639:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25443  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":26262:26310  lToken1.balanceOf(address(_constantProductPair)) */
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x70a0823100000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":26262:26310  lToken1.balanceOf(address(_constantProductPair)) */
      dup3
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":26262:26310  lToken1.balanceOf(address(_constantProductPair)) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      0xffffffffffffffffffffffffffffffffffffffff
      dup7
      and
        /* \"test/unit/ConstantProductPair.t.sol\":26262:26310  lToken1.balanceOf(address(_constantProductPair)) */
      gas
      staticcall
      dup1
      iszero
      tag_201
      jumpi
      dup6
      swap1
      tag_2642
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2643:
        /* \"test/unit/ConstantProductPair.t.sol\":26312:26331  INITIAL_MINT_AMOUNT */
      tag_2644
      swap2
      pop
      tag_34
      jump\t// in
    tag_2644:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25443  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":26351:26385  _constantProductPair.platformFee() */
      swap3
      dup4
      dup1
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x26232a2e00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":26351:26385  _constantProductPair.platformFee() */
      dup3
      mstore
      gas
      staticcall
      dup1
      iszero
      tag_201
      jumpi
      dup6
      swap1
      tag_2647
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2648:
        /* \"test/unit/ConstantProductPair.t.sol\":26387:26407  DEFAULT_PLATFORM_FEE */
      tag_2649
      swap2
      pop
      tag_35
      jump\t// in
    tag_2649:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25443  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":26466:26480  _platformFeeTo */
      0x15
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":26427:26482  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      dup1
      swap5
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x70a0823100000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":26427:26482  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":26427:26482  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      dup4
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":26427:26482  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      gas
      staticcall
      dup1
      iszero
      tag_201
      jumpi
      dup6
      swap1
      tag_2652
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2653:
        /* \"test/unit/ConstantProductPair.t.sol\":26418:26486  assertEq(_constantProductPair.balanceOf(address(_platformFeeTo)), 0) */
      tag_2654
      swap2
      pop
      tag_36
      jump\t// in
    tag_2654:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup4
      0x40
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25443  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":26497:26537  _constantProductPair.burn(address(this)) */
      dup1
      swap5
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x89afcb4400000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":26497:26537  _constantProductPair.burn(address(this)) */
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":25704:25708  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":26497:26537  _constantProductPair.burn(address(this)) */
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":26497:26537  _constantProductPair.burn(address(this)) */
      gas
      call
      dup1
      iszero
      tag_201
      jumpi
      tag_2657
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2658:
      pop
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25443  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":26466:26480  _platformFeeTo */
      0x15
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":26573:26628  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      dup1
      swap8
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x70a0823100000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":26573:26628  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":26573:26628  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      dup4
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":26573:26628  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      gas
      staticcall
      swap4
      dup5
      iszero
      tag_201
      jumpi
      dup6
      swap5
      tag_2661
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2662:
        /* \"test/unit/ConstantProductPair.t.sol\":26638:26666  assertGt(lPlatformShares, 0) */
      pop
      tag_2663
      dup5
      tag_68
      jump\t// in
    tag_2663:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup5
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":26713:26721  _factory */
      0x13
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"test/unit/ConstantProductPair.t.sol\":26696:26723  vm.prank(address(_factory)) */
      extcodesize
      iszero
      tag_255
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":26696:26723  vm.prank(address(_factory)) */
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xca669fa700000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":26696:26723  vm.prank(address(_factory)) */
      dup3
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":26696:26723  vm.prank(address(_factory)) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":26696:26723  vm.prank(address(_factory)) */
      dup2
      dup2
        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":26696:26723  vm.prank(address(_factory)) */
      dup2
      dup4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"test/unit/ConstantProductPair.t.sol\":26696:26723  vm.prank(address(_factory)) */
      gas
      call
      dup1
      iszero
      tag_219
      jumpi
      tag_2668
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2669:
      pop
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25443  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":26733:26777  _constantProductPair.setCustomPlatformFee(0) */
      dup1
      extcodesize
      iszero
      tag_255
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      dup1
      swap2
        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":26733:26777  _constantProductPair.setCustomPlatformFee(0) */
      dup1
      swap5
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xafb4a43b00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":26733:26777  _constantProductPair.setCustomPlatformFee(0) */
      dup4
      mstore
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":26733:26777  _constantProductPair.setCustomPlatformFee(0) */
      dup5
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":26733:26777  _constantProductPair.setCustomPlatformFee(0) */
      gas
      call
      dup1
      iszero
      tag_219
      jumpi
      tag_2674
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2675:
      pop
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25443  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      mload(0x40)
      0xa9059cbb00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":26803:26862  lToken0.transfer(address(_constantProductPair), lAmountOut) */
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      swap2
      dup3
      and
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":26803:26862  lToken0.transfer(address(_constantProductPair), lAmountOut) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
      0x24
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup4
      swap1
      mstore
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
      swap2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup6
      swap2
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      0x44
      swap2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup4
      swap2
      dup11
      swap2
      and
        /* \"test/unit/ConstantProductPair.t.sol\":26803:26862  lToken0.transfer(address(_constantProductPair), lAmountOut) */
      gas
      call
      swap1
      dup2
      iszero
      tag_201
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":26885:26962  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */
      tag_2679
        /* \"test/unit/ConstantProductPair.t.sol\":26803:26862  lToken0.transfer(address(_constantProductPair), lAmountOut) */
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":26803:26862  lToken0.transfer(address(_constantProductPair), lAmountOut) */
      swap3
      tag_833
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      pop
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25443  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      mload(0x40)
      swap2
      tag_835
      dup4
      tag_2
      jump\t// in
        /* \"test/unit/ConstantProductPair.t.sol\":26885:26962  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */
    tag_2679:
      sub
      swap3
      gas
      call
      swap2
      dup3
      iszero
      tag_841
      jumpi
      dup5
      swap3
      tag_2685
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2686:
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25443  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      mload(0x40)
      0xa9059cbb00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":26972:27031  lToken1.transfer(address(_constantProductPair), lAmountOut) */
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      swap2
      dup3
      and
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":26972:27031  lToken1.transfer(address(_constantProductPair), lAmountOut) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
      0x24
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup5
      swap1
      mstore
      swap3
      swap2
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
      swap2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup5
      swap2
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      0x44
      swap2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup4
      swap2
      dup10
      swap2
      and
        /* \"test/unit/ConstantProductPair.t.sol\":26972:27031  lToken1.transfer(address(_constantProductPair), lAmountOut) */
      gas
      call
      swap1
      dup2
      iszero
      tag_841
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":27041:27119  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
      tag_2690
        /* \"test/unit/ConstantProductPair.t.sol\":26972:27031  lToken1.transfer(address(_constantProductPair), lAmountOut) */
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":26972:27031  lToken1.transfer(address(_constantProductPair), lAmountOut) */
      swap3
      tag_844
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":27067:27086  -int256(lAmountOut) */
      tag_846
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25443  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":27067:27086  -int256(lAmountOut) */
      swap2
      tag_55
      jump\t// in
        /* \"test/unit/ConstantProductPair.t.sol\":27041:27119  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
    tag_2690:
      sub
      swap3
      gas
      call
      dup1
      iszero
      tag_215
      jumpi
      tag_2697
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2698:
      pop
      dup2
      0x40
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25443  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":27148:27188  _constantProductPair.burn(address(this)) */
      dup1
      swap5
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x89afcb4400000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":27148:27188  _constantProductPair.burn(address(this)) */
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":25704:25708  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":27148:27188  _constantProductPair.burn(address(this)) */
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":27148:27188  _constantProductPair.burn(address(this)) */
      gas
      call
      dup1
      iszero
      tag_215
      jumpi
      tag_2701
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2702:
      pop
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25443  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":26466:26480  _platformFeeTo */
      0x15
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":27207:27262  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      dup1
      swap6
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x70a0823100000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":27207:27262  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":27207:27262  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      dup4
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":27207:27262  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      gas
      staticcall
      dup1
      iszero
      tag_215
      jumpi
      dup4
      swap1
      tag_2705
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2706:
        /* \"test/unit/ConstantProductPair.t.sol\":27264:27279  lPlatformShares */
      tag_316
      swap3
      pop
      tag_39
      jump\t// in
        /* \"test/unit/ConstantProductPair.t.sol\":27207:27262  _constantProductPair.balanceOf(address(_platformFeeTo)) */
    tag_2705:
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":27207:27262  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      dup3
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":27207:27262  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      gt
      tag_2708
      jumpi
    tag_2709:
      dup2
      tag_2710
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":27207:27262  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      swap4
      dup4
      tag_6
      jump\t// in
    tag_2710:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":27264:27279  lPlatformShares */
      tag_316
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap2
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":27207:27262  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      jump(tag_2706)
    tag_2708:
      returndatasize
      swap2
      pop
      jump(tag_2709)
        /* \"test/unit/ConstantProductPair.t.sol\":27148:27188  _constantProductPair.burn(address(this)) */
    tag_2701:
      tag_2713
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40
        /* \"test/unit/ConstantProductPair.t.sol\":27148:27188  _constantProductPair.burn(address(this)) */
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40
        /* \"test/unit/ConstantProductPair.t.sol\":27148:27188  _constantProductPair.burn(address(this)) */
      gt
      tag_407
      jumpi
      tag_409
      dup2
      dup4
      tag_6
      jump\t// in
    tag_2713:
      pop
      jump(tag_2702)
        /* \"test/unit/ConstantProductPair.t.sol\":27041:27119  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
    tag_2697:
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":27041:27119  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
      swap1
      dup2
      returndatasize
      dup4
      gt
      tag_2717
      jumpi
    tag_2718:
      tag_2719
      dup2
      dup4
      tag_6
      jump\t// in
    tag_2719:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":27041:27119  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
      codesize
      jump(tag_2698)
    tag_2717:
      pop
      returndatasize
      jump(tag_2718)
        /* \"test/unit/ConstantProductPair.t.sol\":26885:26962  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */
    tag_2685:
      swap2
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":26885:26962  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */
      dup3
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":26885:26962  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */
      gt
      tag_2726
      jumpi
    tag_2727:
      dup2
      tag_2728
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":26885:26962  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */
      swap4
      dup4
      tag_6
      jump\t// in
    tag_2728:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
      swap1
      mload
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":26885:26962  _constantProductPair.swap(int256(lAmountOut), true, address(this), bytes(\"\")) */
      jump(tag_2686)
    tag_2726:
      returndatasize
      swap2
      pop
      jump(tag_2727)
        /* \"test/unit/ConstantProductPair.t.sol\":26733:26777  _constantProductPair.setCustomPlatformFee(0) */
    tag_2674:
      tag_2735
      swap1
      tag_1
      jump\t// in
    tag_2735:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_249
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":26733:26777  _constantProductPair.setCustomPlatformFee(0) */
      dup5
      codesize
      jump(tag_2675)
        /* \"test/unit/ConstantProductPair.t.sol\":26696:26723  vm.prank(address(_factory)) */
    tag_2668:
      tag_2738
      swap1
      tag_1
      jump\t// in
    tag_2738:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_249
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":26696:26723  vm.prank(address(_factory)) */
      dup5
      codesize
      jump(tag_2669)
        /* \"test/unit/ConstantProductPair.t.sol\":26573:26628  _constantProductPair.balanceOf(address(_platformFeeTo)) */
    tag_2661:
      swap1
      swap4
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":26573:26628  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      dup2
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":26573:26628  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      gt
      tag_2741
      jumpi
    tag_2742:
      dup2
      tag_2743
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":26573:26628  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      swap4
      dup4
      tag_6
      jump\t// in
    tag_2743:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":26573:26628  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      swap3
      codesize
      jump(tag_2662)
    tag_2741:
      returndatasize
      swap2
      pop
      jump(tag_2742)
        /* \"test/unit/ConstantProductPair.t.sol\":26497:26537  _constantProductPair.burn(address(this)) */
    tag_2657:
      tag_2746
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40
        /* \"test/unit/ConstantProductPair.t.sol\":26497:26537  _constantProductPair.burn(address(this)) */
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40
        /* \"test/unit/ConstantProductPair.t.sol\":26497:26537  _constantProductPair.burn(address(this)) */
      gt
      tag_407
      jumpi
      tag_409
      dup2
      dup4
      tag_6
      jump\t// in
    tag_2746:
      pop
      jump(tag_2658)
        /* \"test/unit/ConstantProductPair.t.sol\":26427:26482  _constantProductPair.balanceOf(address(_platformFeeTo)) */
    tag_2652:
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":26427:26482  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      dup2
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":26427:26482  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      gt
      tag_2750
      jumpi
    tag_2751:
      dup2
      tag_2752
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":26427:26482  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      swap4
      dup4
      tag_6
      jump\t// in
    tag_2752:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":26418:26486  assertEq(_constantProductPair.balanceOf(address(_platformFeeTo)), 0) */
      tag_2654
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":26427:26482  _constantProductPair.balanceOf(address(_platformFeeTo)) */
      jump(tag_2653)
    tag_2750:
      returndatasize
      swap2
      pop
      jump(tag_2751)
        /* \"test/unit/ConstantProductPair.t.sol\":26351:26385  _constantProductPair.platformFee() */
    tag_2647:
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":26351:26385  _constantProductPair.platformFee() */
      dup2
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":26351:26385  _constantProductPair.platformFee() */
      gt
      tag_2755
      jumpi
    tag_2756:
      dup2
      tag_2757
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":26351:26385  _constantProductPair.platformFee() */
      swap4
      dup4
      tag_6
      jump\t// in
    tag_2757:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":26387:26407  DEFAULT_PLATFORM_FEE */
      tag_2649
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":26351:26385  _constantProductPair.platformFee() */
      jump(tag_2648)
    tag_2755:
      returndatasize
      swap2
      pop
      jump(tag_2756)
        /* \"test/unit/ConstantProductPair.t.sol\":26262:26310  lToken1.balanceOf(address(_constantProductPair)) */
    tag_2642:
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":26262:26310  lToken1.balanceOf(address(_constantProductPair)) */
      dup2
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":26262:26310  lToken1.balanceOf(address(_constantProductPair)) */
      gt
      tag_2760
      jumpi
    tag_2761:
      dup2
      tag_2762
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":26262:26310  lToken1.balanceOf(address(_constantProductPair)) */
      swap4
      dup4
      tag_6
      jump\t// in
    tag_2762:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":26312:26331  INITIAL_MINT_AMOUNT */
      tag_2644
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":26262:26310  lToken1.balanceOf(address(_constantProductPair)) */
      jump(tag_2643)
    tag_2760:
      returndatasize
      swap2
      pop
      jump(tag_2761)
        /* \"test/unit/ConstantProductPair.t.sol\":26173:26221  lToken0.balanceOf(address(_constantProductPair)) */
    tag_2637:
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":26173:26221  lToken0.balanceOf(address(_constantProductPair)) */
      dup2
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":26173:26221  lToken0.balanceOf(address(_constantProductPair)) */
      gt
      tag_2765
      jumpi
    tag_2766:
      dup2
      tag_2767
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":26173:26221  lToken0.balanceOf(address(_constantProductPair)) */
      swap4
      dup4
      tag_6
      jump\t// in
    tag_2767:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":26223:26242  INITIAL_MINT_AMOUNT */
      tag_2639
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":26173:26221  lToken0.balanceOf(address(_constantProductPair)) */
      jump(tag_2638)
    tag_2765:
      returndatasize
      swap2
      pop
      jump(tag_2766)
        /* \"test/unit/ConstantProductPair.t.sol\":26127:26154  _constantProductPair.sync() */
    tag_2633:
      tag_2770
      swap1
      tag_1
      jump\t// in
    tag_2770:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_285
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":26127:26154  _constantProductPair.sync() */
      dup4
      codesize
      jump(tag_2634)
        /* \"test/unit/ConstantProductPair.t.sol\":26038:26116  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
    tag_2627:
      swap1
      swap3
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":26038:26116  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
      dup2
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":26038:26116  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
      gt
      tag_2773
      jumpi
    tag_2774:
      dup2
      tag_2775
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":26038:26116  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
      swap4
      dup4
      tag_6
      jump\t// in
    tag_2775:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":26038:26116  _constantProductPair.swap(-int256(lAmountOut), true, address(this), bytes(\"\")) */
      swap2
      codesize
      jump(tag_2628)
    tag_2773:
      returndatasize
      swap2
      pop
      jump(tag_2774)
        /* \"test/unit/ConstantProductPair.t.sol\":25956:26015  lToken1.transfer(address(_constantProductPair), lAmountOut) */
    tag_2621:
      tag_2778
      swap1
      dup4
      returndatasize
      dup6
      gt
      tag_547
      jumpi
      tag_549
      dup2
      dup4
      tag_6
      jump\t// in
    tag_2778:
      pop
      codesize
      jump(tag_2622)
        /* \"test/unit/ConstantProductPair.t.sol\":25868:25946  _constantProductPair.swap(int256(lSwapAmount), true, address(this), bytes(\"\")) */
    tag_2615:
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":25868:25946  _constantProductPair.swap(int256(lSwapAmount), true, address(this), bytes(\"\")) */
      dup4
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":25868:25946  _constantProductPair.swap(int256(lSwapAmount), true, address(this), bytes(\"\")) */
      gt
      tag_2782
      jumpi
    tag_2783:
      dup2
      tag_2784
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":25868:25946  _constantProductPair.swap(int256(lSwapAmount), true, address(this), bytes(\"\")) */
      swap4
      dup4
      tag_6
      jump\t// in
    tag_2784:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":25956:26015  lToken1.transfer(address(_constantProductPair), lAmountOut) */
      tag_2617
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap3
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":25868:25946  _constantProductPair.swap(int256(lSwapAmount), true, address(this), bytes(\"\")) */
      jump(tag_2616)
    tag_2782:
      returndatasize
      swap2
      pop
      jump(tag_2783)
        /* \"test/unit/ConstantProductPair.t.sol\":25777:25837  lToken0.transfer(address(_constantProductPair), lSwapAmount) */
    tag_2609:
      tag_2787
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":25777:25837  lToken0.transfer(address(_constantProductPair), lSwapAmount) */
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":25777:25837  lToken0.transfer(address(_constantProductPair), lSwapAmount) */
      gt
      tag_547
      jumpi
      tag_549
      dup2
      dup4
      tag_6
      jump\t// in
    tag_2787:
      pop
      codesize
      jump(tag_2610)
        /* \"lib/forge-std/src/StdStorage.sol\":10259:10283  vm.store(who, slot, set) */
    tag_2603:
      tag_2791
      swap1
      tag_1
      jump\t// in
    tag_2791:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_1862
      jumpi
        /* \"lib/forge-std/src/StdStorage.sol\":10259:10283  vm.store(who, slot, set) */
      dup3
      codesize
      jump(tag_2604)
        /* \"lib/forge-std/src/StdStorage.sol\":10032:10250  if (fdat != curr) {... */
    tag_2596:
        /* \"lib/forge-std/src/StdStorage.sol\":10064:10239  require(... */
      tag_2794
      tag_108
      jump\t// in
    tag_2794:
        /* \"lib/forge-std/src/StdStorage.sol\":10032:10250  if (fdat != curr) {... */
      jump(tag_2597)
        /* \"lib/forge-std/src/StdStorage.sol\":10003:10021  vm.load(who, slot) */
    tag_2594:
      swap7
      pop
      swap1
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"lib/forge-std/src/StdStorage.sol\":10003:10021  vm.load(who, slot) */
      dup7
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"lib/forge-std/src/StdStorage.sol\":10003:10021  vm.load(who, slot) */
      gt
      tag_2795
      jumpi
    tag_2796:
      dup2
      tag_2797
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"lib/forge-std/src/StdStorage.sol\":10003:10021  vm.load(who, slot) */
      swap4
      dup4
      tag_6
      jump\t// in
    tag_2797:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
      dup7
      swap6
      mload
        /* \"lib/forge-std/src/StdStorage.sol\":10003:10021  vm.load(who, slot) */
      swap1
      codesize
      jump(tag_2595)
    tag_2795:
      returndatasize
      swap2
      pop
      jump(tag_2796)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2588:
        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup7
      0x4e487b7100000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      mstore(0x04, 0x11)
      revert
        /* \"lib/forge-std/src/StdStorage.sol\":9607:9717  if (!self.finds[who][fsig][keccak256(abi.encodePacked(ins, field_depth))]) {... */
    tag_2582:
        /* \"lib/forge-std/src/StdStorage.sol\":7670:7695  stdStorageSafe.find(self) */
      tag_2800
      tag_111
      jump\t// in
    tag_2800:
      pop
        /* \"lib/forge-std/src/StdStorage.sol\":9607:9717  if (!self.finds[who][fsig][keccak256(abi.encodePacked(ins, field_depth))]) {... */
      jump(tag_2583)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2573:
        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup4
      0x4e487b7100000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      mstore(0x04, 0x32)
      revert
    tag_2571:
        /* \"lib/forge-std/src/StdCheats.sol\":19730:19768  abi.encodeWithSelector(0x70a08231, to) */
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup4
      0x4e487b7100000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      mstore(0x04, 0x41)
      revert
        /* \"test/unit/ConstantProductPair.t.sol\":25579:25608  _constantProductPair.token1() */
    tag_2565:
      tag_2801
      swap2
      swap4
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":25579:25608  _constantProductPair.token1() */
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":25579:25608  _constantProductPair.token1() */
      gt
      tag_1018
      jumpi
      tag_1020
      dup2
      dup4
      tag_6
      jump\t// in
    tag_2801:
      swap2
      codesize
      jump(tag_2566)
        /* \"test/unit/ConstantProductPair.t.sol\":25524:25553  _constantProductPair.token0() */
    tag_2561:
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":25524:25553  _constantProductPair.token0() */
      swap2
      swap3
      pop
      tag_2805
      swap1
      dup3
      returndatasize
      dup5
      gt
      tag_1018
      jumpi
      tag_1020
      dup2
      dup4
      tag_6
      jump\t// in
    tag_2805:
      swap2
      swap1
      jump(tag_2562)
        /* \"test/unit/ConstantProductPair.t.sol\":25471:25498  _constantProductPair.sync() */
    tag_2557:
      tag_2809
      swap1
      tag_1
      jump\t// in
    tag_2809:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_196
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":25471:25498  _constantProductPair.sync() */
      dup1
      codesize
      jump(tag_2558)
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
    tag_2550:
      pop
      0x20
      dup2
      jumpi(tag_2812, gt(0x20, returndatasize))
    tag_2813:
      dup2
      tag_2814
      0x20
      swap4
      dup4
      tag_6
      jump\t// in
    tag_2814:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":25414:25461  assertGt(_constantProductPair.platformFee(), 0) */
      tag_2552
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":25423:25457  _constantProductPair.platformFee() */
      jump(tag_2551)
    tag_2812:
      returndatasize
      swap2
      pop
      jump(tag_2813)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_128:
      pop
      jumpi(tag_196, callvalue)
      dup1
      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
      slt
      tag_196
      jumpi
      dup1
      0xffffffffffffffffffffffffffffffffffffffff
      dup1
        /* \"test/unit/ConstantProductPair.t.sol\":3904:3954  _createPair(address(_tokenA), address(_tokenC), 0) */
      tag_2821
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":3924:3931  _tokenA */
      0x19
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      dup3
        /* \"test/unit/ConstantProductPair.t.sol\":3942:3949  _tokenC */
      0x1b
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":3904:3954  _createPair(address(_tokenA), address(_tokenC), 0) */
      swap1
      tag_46
      jump\t// in
    tag_2821:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      and
      swap1
      dup1
        /* \"test/unit/ConstantProductPair.t.sol\":3924:3931  _tokenA */
      0x19
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":3965:3999  _tokenA.mint(address(lPair), 1000) */
      swap1
      dup2
      extcodesize
      iszero
      tag_212
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      swap1
      0x40c10f1900000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":3965:3999  _tokenA.mint(address(lPair), 1000) */
      swap2
      dup3
      dup2
      mstore
      dup5
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":3965:3999  _tokenA.mint(address(lPair), 1000) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":3994:3998  1000 */
      dup6
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x44
        /* \"test/unit/ConstantProductPair.t.sol\":3994:3998  1000 */
      dup2
      dup4
      0x03e8
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap9
      dup10
      0x24
      dup5
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":3965:3999  _tokenA.mint(address(lPair), 1000) */
      gas
      call
      swap1
      dup2
      iszero
      tag_376
      jumpi
      dup7
      swap2
      tag_2826
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2827:
      pop
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":3942:3949  _tokenC */
      0x1b
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":4009:4043  _tokenC.mint(address(lPair), 1000) */
      swap2
      dup3
      extcodesize
      iszero
      tag_249
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x44
      dup6
      swap3
      dup4
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":4009:4043  _tokenC.mint(address(lPair), 1000) */
      swap6
      dup7
      swap5
      dup6
      swap4
      dup5
      mstore
      dup9
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":4009:4043  _tokenC.mint(address(lPair), 1000) */
      dup6
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      dup5
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":4009:4043  _tokenC.mint(address(lPair), 1000) */
      gas
      call
      swap1
      dup2
      iszero
      tag_215
      jumpi
      dup4
      swap2
      tag_2832
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2833:
      pop
      pop
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"test/unit/ConstantProductPair.t.sol\":4078:4124  vm.expectRevert(\"CP: INSUFFICIENT_LIQ_MINTED\") */
      dup1
      extcodesize
      iszero
      tag_1862
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      dup1
      swap2
        /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
      0x64
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":4078:4124  vm.expectRevert(\"CP: INSUFFICIENT_LIQ_MINTED\") */
      dup1
      swap5
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xf28dceb300000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":4078:4124  vm.expectRevert(\"CP: INSUFFICIENT_LIQ_MINTED\") */
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":4078:4124  vm.expectRevert(\"CP: INSUFFICIENT_LIQ_MINTED\") */
      dup5
      add
        /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":3942:3949  _tokenC */
      0x1b
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
        /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
      dup5
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
      0x43503a20494e53554646494349454e545f4c49515f4d494e5445440000000000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x44
      dup5
      add
        /* \"lib/forge-std/src/Base.sol\":1057:1071  Vm(VM_ADDRESS) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":4078:4124  vm.expectRevert(\"CP: INSUFFICIENT_LIQ_MINTED\") */
      gas
      call
      swap1
      dup2
      iszero
      tag_215
      jumpi
      dup4
      swap2
      tag_217
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      pop
      pop
      0x20
      swap1
      0x24
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":4134:4159  lPair.mint(address(this)) */
      dup1
      swap5
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x6a62784200000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":4134:4159  lPair.mint(address(this)) */
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":4153:4157  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":4134:4159  lPair.mint(address(this)) */
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":4134:4159  lPair.mint(address(this)) */
      gas
      call
      dup1
      iszero
      tag_219
      jumpi
      tag_221
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      pop
      dup1
      return
        /* \"test/unit/ConstantProductPair.t.sol\":4009:4043  _tokenC.mint(address(lPair), 1000) */
    tag_2832:
      tag_2852
      swap1
      tag_1
      jump\t// in
    tag_2852:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_229
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":4009:4043  _tokenC.mint(address(lPair), 1000) */
      dup2
      codesize
      jump(tag_2833)
        /* \"test/unit/ConstantProductPair.t.sol\":3965:3999  _tokenA.mint(address(lPair), 1000) */
    tag_2826:
      tag_2855
      swap1
      tag_1
      jump\t// in
    tag_2855:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_249
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":3965:3999  _tokenA.mint(address(lPair), 1000) */
      dup5
      codesize
      jump(tag_2827)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_126:
      pop
      jumpi(tag_196, callvalue)
      0x20
      dup1
      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
      slt
      tag_255
      jumpi
      0xffffffffffffffffffffffffff
      swap1
      dup2
      tag_2862
      tag_43
      jump\t// in
    tag_2862:
      div
      0x01
      dup2
      add
      dup2
      gt
      tag_2145
      jumpi
      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
        /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */
      0x056bc75e2d63100000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap2
      dup3
      sub
      add
      swap1
      dup2
      gt
      tag_2145
      jumpi
        /* \"lib/forge-std/src/StdUtils.sol\":1998:2017  _bound(x, min, max) */
      tag_2867
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      calldataload(0x04)
        /* \"lib/forge-std/src/StdUtils.sol\":1998:2017  _bound(x, min, max) */
      tag_65
      jump\t// in
    tag_2867:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      dup4
      dup1
      mload(0x40)
      tag_2868
      dup2
      tag_4
      jump\t// in
    tag_2868:
      0x0c
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x426f756e6420526573756c740000000000000000000000000000000000000000
      dup5
      dup3
      add
      mstore
      mload(0x40)
        /* \"lib/forge-std/src/StdUtils.sol\":6436:6490  abi.encodeWithSignature(\"log(string,uint256)\", p0, p1) */
      tag_2869
      dup2
        /* \"lib/forge-std/src/StdUtils.sol\":297:339  0x000000000000000000636F6e736F6c652e6c6f67 */
      tag_2870
        /* \"lib/forge-std/src/StdUtils.sol\":6436:6490  abi.encodeWithSignature(\"log(string,uint256)\", p0, p1) */
      dup8
      dup3
      add
      swap5
      0xb60e72cc00000000000000000000000000000000000000000000000000000000
      dup7
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40
        /* \"lib/forge-std/src/StdUtils.sol\":6436:6490  abi.encodeWithSignature(\"log(string,uint256)\", p0, p1) */
      0x24
      dup5
      add
        /* \"lib/forge-std/src/StdUtils.sol\":297:339  0x000000000000000000636F6e736F6c652e6c6f67 */
      mstore
      0x64
      dup4
      add
      swap1
      tag_10
      jump\t// in
    tag_2870:
      dup9
      0x44
      dup4
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"lib/forge-std/src/StdUtils.sol\":6436:6490  abi.encodeWithSignature(\"log(string,uint256)\", p0, p1) */
      sub
      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
      dup2
      add
      dup4
      mstore
      dup3
      tag_6
      jump\t// in
    tag_2869:
        /* \"lib/forge-std/src/StdUtils.sol\":6399:6491  address(CONSOLE2_ADDRESS).staticcall(abi.encodeWithSignature(\"log(string,uint256)\", p0, p1)) */
      mload
      swap1
        /* \"lib/forge-std/src/StdUtils.sol\":297:339  0x000000000000000000636F6e736F6c652e6c6f67 */
      0x636f6e736f6c652e6c6f67
        /* \"lib/forge-std/src/StdUtils.sol\":6399:6491  address(CONSOLE2_ADDRESS).staticcall(abi.encodeWithSignature(\"log(string,uint256)\", p0, p1)) */
      gas
      staticcall
      pop
      tag_2871
      tag_13
      jump\t// in
    tag_2871:
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      swap3
      dup5
      dup5
        /* \"test/unit/ConstantProductPair.t.sol\":8271:8279  _factory */
      0x13
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"test/unit/ConstantProductPair.t.sol\":8254:8281  vm.prank(address(_factory)) */
      swap1
      dup2
      extcodesize
      iszero
      tag_291
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      swap2
        /* \"lib/forge-std/src/StdUtils.sol\":6436:6490  abi.encodeWithSignature(\"log(string,uint256)\", p0, p1) */
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup4
      swap3
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":8254:8281  vm.prank(address(_factory)) */
      swap5
      dup6
      swap4
      dup5
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xca669fa700000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":8254:8281  vm.prank(address(_factory)) */
      dup5
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":8254:8281  vm.prank(address(_factory)) */
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":8254:8281  vm.prank(address(_factory)) */
      gas
      call
      dup1
      iszero
      tag_219
      jumpi
      tag_2876
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2877:
      pop
      dup5
        /* \"test/unit/ConstantProductPair.t.sol\":8291:8311  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":8291:8331  _constantProductPair.setCustomSwapFee(0) */
      dup1
      extcodesize
      iszero
      tag_255
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      dup1
      swap2
        /* \"lib/forge-std/src/StdUtils.sol\":6436:6490  abi.encodeWithSignature(\"log(string,uint256)\", p0, p1) */
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":8291:8331  _constantProductPair.setCustomSwapFee(0) */
      dup1
      swap5
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x9568e73b00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":8291:8331  _constantProductPair.setCustomSwapFee(0) */
      dup4
      mstore
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":8291:8331  _constantProductPair.setCustomSwapFee(0) */
      dup5
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":8291:8331  _constantProductPair.setCustomSwapFee(0) */
      gas
      call
      dup1
      iszero
      tag_219
      jumpi
      tag_2882
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2883:
      pop
      pop
      dup4
        /* \"test/unit/ConstantProductPair.t.sol\":8291:8311  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      swap1
      dup6
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":8384:8418  _constantProductPair.getReserves() */
      swap2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x0902f1ac00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":8384:8418  _constantProductPair.getReserves() */
      dup4
      mstore
      0x80
      dup4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":8384:8418  _constantProductPair.getReserves() */
      dup2
      dup8
      gas
      staticcall
      swap3
      dup4
      iszero
      tag_219
      jumpi
      dup3
      swap1
      dup4
      swap5
      tag_2886
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2887:
      pop
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":8498:8528  _constantProductPair.swapFee() */
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x54cf2aeb00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":8498:8528  _constantProductPair.swapFee() */
      dup3
      mstore
      dup7
      dup3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":8498:8528  _constantProductPair.swapFee() */
      dup2
      dup10
      gas
      staticcall
      swap3
      dup4
      iszero
      tag_841
      jumpi
      dup9
      swap3
      dup6
      swap5
      tag_2890
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2891:
      pop
      dup1
        /* \"test/unit/ConstantProductPair.t.sol\":8448:8529  _calculateInput(lReserve0, lReserve1, lAmountOut, _constantProductPair.swapFee()) */
      tag_2892
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap6
      swap7
      and
      swap2
      and
        /* \"test/unit/ConstantProductPair.t.sol\":8448:8529  _calculateInput(lReserve0, lReserve1, lAmountOut, _constantProductPair.swapFee()) */
      tag_70
      jump\t// in
    tag_2892:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap2
      dup6
        /* \"test/unit/ConstantProductPair.t.sol\":8574:8581  _tokenA */
      0x19
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":8574:8628  _tokenA.mint(address(_constantProductPair), lAmountIn) */
      dup1
      extcodesize
      iszero
      tag_291
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      0x40c10f1900000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":8574:8628  _tokenA.mint(address(_constantProductPair), lAmountIn) */
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      swap3
      swap1
      swap3
      and
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":8574:8628  _tokenA.mint(address(_constantProductPair), lAmountIn) */
      dup4
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
      0x24
      dup3
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup5
      swap1
      mstore
      dup3
      swap1
      dup3
      swap1
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      0x44
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      swap1
      dup5
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":8574:8628  _tokenA.mint(address(_constantProductPair), lAmountIn) */
      gas
      call
      dup1
      iszero
      tag_219
      jumpi
      tag_2898
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2899:
      pop
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":8665:8744  _constantProductPair.swap(-int256(lAmountOut), false, address(this), bytes(\"\")) */
      tag_2900
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      dup3
      dup6
        /* \"test/unit/ConstantProductPair.t.sol\":8291:8311  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":8691:8710  -int256(lAmountOut) */
      tag_2901
      dup7
      tag_55
      jump\t// in
    tag_2901:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      mload(0x40)
      swap2
      tag_2902
      dup4
      tag_2
      jump\t// in
    tag_2902:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      dup10
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup10
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":8665:8744  _constantProductPair.swap(-int256(lAmountOut), false, address(this), bytes(\"\")) */
      dup1
      swap8
      dup2
      swap6
      dup3
      swap5
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xe12bd9d800000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":8665:8744  _constantProductPair.swap(-int256(lAmountOut), false, address(this), bytes(\"\")) */
      dup5
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":8727:8731  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":8665:8744  _constantProductPair.swap(-int256(lAmountOut), false, address(this), bytes(\"\")) */
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":8665:8744  _constantProductPair.swap(-int256(lAmountOut), false, address(this), bytes(\"\")) */
      dup6
      add
      tag_60
      jump\t// in
    tag_2900:
      sub
      swap3
      gas
      call
      swap2
      dup3
      iszero
      tag_376
      jumpi
      dup7
      swap3
      tag_2905
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2906:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":6813:6819  a <= b */
      pop
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":8841:8851  lAmountOut */
      tag_2907
        /* \"lib/solmate/lib/ds-test/src/test.sol\":6813:6819  a <= b */
      dup5
      dup5
      swap4
      dup8
      dup3
        /* \"lib/forge-std/src/StdUtils.sol\":6436:6490  abi.encodeWithSignature(\"log(string,uint256)\", p0, p1) */
      0x24
        /* \"lib/solmate/lib/ds-test/src/test.sol\":6813:6819  a <= b */
      swap10
      gt
      iszero
        /* \"lib/solmate/lib/ds-test/src/test.sol\":6809:7009  if (a <= b) {... */
      tag_2908
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2909:
        /* \"test/unit/ConstantProductPair.t.sol\":8841:8851  lAmountOut */
      pop
      tag_39
      jump\t// in
    tag_2907:
        /* \"test/unit/ConstantProductPair.t.sol\":8871:8878  _tokenB */
      0x1a
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":8871:8903  _tokenB.balanceOf(address(this)) */
      swap5
      dup6
      dup1
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x70a0823100000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":8871:8903  _tokenB.balanceOf(address(this)) */
      dup3
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":8727:8731  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":8871:8903  _tokenB.balanceOf(address(this)) */
      dup4
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":8871:8903  _tokenB.balanceOf(address(this)) */
      gas
      staticcall
      swap1
      dup2
      iszero
      tag_841
      jumpi
      dup5
      swap2
      tag_2150
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":8905:8915  lAmountOut */
      pop
      tag_316
      swap3
      pop
      tag_39
      jump\t// in
        /* \"lib/solmate/lib/ds-test/src/test.sol\":6809:7009  if (a <= b) {... */
    tag_2908:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":6840:6880  log(\"Error: a > b not satisfied [uint]\") */
      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50
        /* \"test/unit/ConstantProductPair.t.sol\":8384:8418  _constantProductPair.getReserves() */
      0x80
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      dup9
      dup2
      mstore
      0x21
      dup10
      dup3
      add
      mstore
      0x4572726f723a2061203e2062206e6f7420736174697366696564205b75696e74
      0x40
      dup3
      add
      mstore
      0x5d00000000000000000000000000000000000000000000000000000000000000
      0x60
      dup3
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":6840:6880  log(\"Error: a > b not satisfied [uint]\") */
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      swap1
      0x40
      dup3
      mstore
      tag_2920
      0x40
      dup4
      add
      0x40
      swap1
      0x09
      dup2
      mstore
      0x202056616c756520610000000000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_2920:
      swap1
      dup8
      dup4
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":6899:6929  log_named_uint(\"  Value a\", a) */
      dup2
      0xb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8
      swap3
      dup4
      swap3
      sub
      swap1
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      0x40
      dup2
      mstore
      dup1
      tag_2921
      0x40
      dup3
      add
      0x40
      swap1
      0x09
      dup2
      mstore
      0x202056616c756520620000000000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_2921:
      dup6
      dup10
      dup4
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":6948:6978  log_named_uint(\"  Value b\", b) */
      sub
      swap1
      log1
      tag_2922
      tag_42
      jump\t// in
    tag_2922:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":6809:7009  if (a <= b) {... */
      codesize
      jump(tag_2909)
        /* \"test/unit/ConstantProductPair.t.sol\":8665:8744  _constantProductPair.swap(-int256(lAmountOut), false, address(this), bytes(\"\")) */
    tag_2905:
      swap2
      pop
      swap4
      dup3
      dup3
      dup2
      returndatasize
      dup4
      gt
      tag_2923
      jumpi
    tag_2924:
      tag_2925
      dup2
      dup4
      tag_6
      jump\t// in
    tag_2925:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
      swap1
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":8665:8744  _constantProductPair.swap(-int256(lAmountOut), false, address(this), bytes(\"\")) */
      swap1
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":8841:8851  lAmountOut */
      tag_2907
        /* \"test/unit/ConstantProductPair.t.sol\":8665:8744  _constantProductPair.swap(-int256(lAmountOut), false, address(this), bytes(\"\")) */
      jump(tag_2906)
    tag_2923:
      pop
      returndatasize
      jump(tag_2924)
        /* \"test/unit/ConstantProductPair.t.sol\":8574:8628  _tokenA.mint(address(_constantProductPair), lAmountIn) */
    tag_2898:
      tag_2928
      swap1
      tag_1
      jump\t// in
    tag_2928:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_249
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":8574:8628  _tokenA.mint(address(_constantProductPair), lAmountIn) */
      dup5
      codesize
      jump(tag_2899)
        /* \"test/unit/ConstantProductPair.t.sol\":8498:8528  _constantProductPair.swapFee() */
    tag_2890:
      swap3
      pop
      swap4
      pop
      swap4
      swap2
      pop
      dup6
      dup2
      dup2
      returndatasize
      dup4
      gt
      tag_2931
      jumpi
    tag_2932:
      tag_2933
      dup2
      dup4
      tag_6
      jump\t// in
    tag_2933:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":8498:8528  _constantProductPair.swapFee() */
      swap1
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup9
      swap3
      dup8
      swap2
      swap1
      dup1
        /* \"test/unit/ConstantProductPair.t.sol\":8498:8528  _constantProductPair.swapFee() */
      jump(tag_2891)
    tag_2931:
      pop
      returndatasize
      jump(tag_2932)
        /* \"test/unit/ConstantProductPair.t.sol\":8384:8418  _constantProductPair.getReserves() */
    tag_2886:
      swap1
      pop
      tag_2936
      swap2
      swap4
      pop
      0x80
      returndatasize
      dup2
      gt
      tag_328
      jumpi
      tag_330
      dup2
      dup4
      tag_6
      jump\t// in
    tag_2936:
      pop
      pop
      swap3
      swap1
      codesize
      jump(tag_2887)
        /* \"test/unit/ConstantProductPair.t.sol\":8291:8331  _constantProductPair.setCustomSwapFee(0) */
    tag_2882:
      tag_2940
      swap1
      tag_1
      jump\t// in
    tag_2940:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_249
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":8291:8331  _constantProductPair.setCustomSwapFee(0) */
      dup5
      codesize
      jump(tag_2883)
        /* \"test/unit/ConstantProductPair.t.sol\":8254:8281  vm.prank(address(_factory)) */
    tag_2876:
      tag_2943
      swap1
      tag_1
      jump\t// in
    tag_2943:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_249
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":8254:8281  vm.prank(address(_factory)) */
      dup5
      codesize
      jump(tag_2877)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_124:
      pop
      jumpi(tag_196, callvalue)
      dup1
      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
      slt
      tag_196
      jumpi
      0xffffffffffffffffffffffffffffffffffffffff
      dup1
        /* \"test/unit/ConstantProductPair.t.sol\":9036:9044  _factory */
      0x13
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"test/unit/ConstantProductPair.t.sol\":9019:9046  vm.prank(address(_factory)) */
      dup1
      extcodesize
      iszero
      tag_285
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":9019:9046  vm.prank(address(_factory)) */
      swap2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xca669fa700000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":9019:9046  vm.prank(address(_factory)) */
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":9019:9046  vm.prank(address(_factory)) */
      dup4
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup4
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":9019:9046  vm.prank(address(_factory)) */
      swap3
      dup2
      dup2
      dup6
      dup2
      dup4
      dup8
      gas
      call
      dup1
      iszero
      tag_219
      jumpi
      tag_2954
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2955:
      pop
      dup4
        /* \"test/unit/ConstantProductPair.t.sol\":9056:9076  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":9056:9096  _constantProductPair.setCustomSwapFee(0) */
      dup1
      extcodesize
      iszero
      tag_255
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      dup1
      swap2
      dup6
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":9056:9096  _constantProductPair.setCustomSwapFee(0) */
      dup1
      swap5
      dup2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x9568e73b00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":9056:9096  _constantProductPair.setCustomSwapFee(0) */
      dup4
      mstore
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":9056:9096  _constantProductPair.setCustomSwapFee(0) */
      dup5
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":9056:9096  _constantProductPair.setCustomSwapFee(0) */
      gas
      call
      dup1
      iszero
      tag_219
      jumpi
      tag_2960
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2961:
      pop
      pop
      0xffffffffffffffffffffffffff
      swap3
      dup4
      tag_2962
      tag_43
      jump\t// in
    tag_2962:
      div
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":9182:9183  1 */
      0x01
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup5
      add
      dup5
      gt
      tag_2967
      jumpi
        /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */
      0x056bc75e2d63100000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap4
      dup5
      sub
      swap4
      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
      dup6
      add
      swap1
      dup2
      gt
      tag_2206
      jumpi
      dup5
      lt
      tag_2967
      jumpi
      dup6
      swap1
      dup3
        /* \"test/unit/ConstantProductPair.t.sol\":9056:9076  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      mload(0x40)
      0x0902f1ac00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":9389:9423  _constantProductPair.getReserves() */
      dup2
      mstore
      0x80
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":9389:9423  _constantProductPair.getReserves() */
      dup2
      dup6
      gas
      staticcall
      swap1
      dup2
      iszero
      tag_841
      jumpi
      dup5
      swap1
      dup6
      swap3
      tag_2971
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2972:
      pop
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":9503:9533  _constantProductPair.swapFee() */
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x54cf2aeb00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":9503:9533  _constantProductPair.swapFee() */
      dup3
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":9503:9533  _constantProductPair.swapFee() */
      swap10
      dup11
      dup4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":9503:9533  _constantProductPair.swapFee() */
      dup2
      dup9
      gas
      staticcall
      swap4
      dup5
      iszero
      tag_1089
      jumpi
      dup11
      swap4
      dup9
      swap6
      tag_2975
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2976:
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":9453:9534  _calculateInput(lReserve0, lReserve1, lAmountOut, _constantProductPair.swapFee()) */
      tag_2977
      swap5
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap4
      swap3
      swap1
      dup3
      and
      swap2
      and
        /* \"test/unit/ConstantProductPair.t.sol\":9453:9534  _calculateInput(lReserve0, lReserve1, lAmountOut, _constantProductPair.swapFee()) */
      tag_70
      jump\t// in
    tag_2977:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      dup5
        /* \"test/unit/ConstantProductPair.t.sol\":9569:9576  _tokenA */
      0x19
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":9569:9623  _tokenA.mint(address(_constantProductPair), lAmountIn) */
      swap2
      dup3
      extcodesize
      iszero
      tag_249
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      0x40c10f1900000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":9569:9623  _tokenA.mint(address(_constantProductPair), lAmountIn) */
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      swap3
      swap1
      swap3
      and
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":9569:9623  _tokenA.mint(address(_constantProductPair), lAmountIn) */
      dup4
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
      0x24
      dup3
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
      swap1
      dup4
      swap1
      dup3
      swap1
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      0x44
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      swap1
      dup5
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":9569:9623  _tokenA.mint(address(_constantProductPair), lAmountIn) */
      gas
      call
      swap1
      dup2
      iszero
      tag_215
      jumpi
      dup4
      swap2
      tag_2983
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2984:
        /* \"test/unit/ConstantProductPair.t.sol\":9633:9664  vm.expectRevert(\"RP: OVERFLOW\") */
      pop
      pop
      dup4
      extcodesize
      iszero
      tag_255
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x0c
      0x64
      dup4
      swap3
      dup4
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":9633:9664  vm.expectRevert(\"RP: OVERFLOW\") */
      swap8
      dup9
      swap5
      dup6
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xf28dceb300000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":9633:9664  vm.expectRevert(\"RP: OVERFLOW\") */
      dup6
      mstore
      dup13
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":9633:9664  vm.expectRevert(\"RP: OVERFLOW\") */
      dup7
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
      dup5
      add
      mstore
      0x52503a204f564552464c4f570000000000000000000000000000000000000000
      0x44
      dup5
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":9633:9664  vm.expectRevert(\"RP: OVERFLOW\") */
      gas
      call
      swap3
      dup4
      iszero
      tag_1474
      jumpi
      dup6
      swap4
      tag_2989
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2990:
      pop
      pop
      swap2
        /* \"test/unit/ConstantProductPair.t.sol\":9700:9719  -int256(lAmountOut) */
      tag_2991
        /* \"test/unit/ConstantProductPair.t.sol\":9674:9753  _constantProductPair.swap(-int256(lAmountOut), false, address(this), bytes(\"\")) */
      tag_1478
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":9056:9076  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":9700:9719  -int256(lAmountOut) */
      swap2
      tag_55
      jump\t// in
    tag_2991:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      mload(0x40)
      swap2
      tag_2993
      dup4
      tag_2
      jump\t// in
    tag_2993:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      dup7
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup7
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":9674:9753  _constantProductPair.swap(-int256(lAmountOut), false, address(this), bytes(\"\")) */
      dup1
      swap7
      dup2
      swap6
      dup3
      swap5
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xe12bd9d800000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":9674:9753  _constantProductPair.swap(-int256(lAmountOut), false, address(this), bytes(\"\")) */
      dup5
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":9736:9740  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":9674:9753  _constantProductPair.swap(-int256(lAmountOut), false, address(this), bytes(\"\")) */
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":9674:9753  _constantProductPair.swap(-int256(lAmountOut), false, address(this), bytes(\"\")) */
      dup6
      add
      tag_60
      jump\t// in
        /* \"test/unit/ConstantProductPair.t.sol\":9633:9664  vm.expectRevert(\"RP: OVERFLOW\") */
    tag_2989:
      tag_3003
      swap2
      swap3
      swap4
      pop
      tag_1
      jump\t// in
    tag_3003:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_285
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":9633:9664  vm.expectRevert(\"RP: OVERFLOW\") */
      dup3
      swap1
      dup5
      codesize
      jump(tag_2990)
        /* \"test/unit/ConstantProductPair.t.sol\":9569:9623  _tokenA.mint(address(_constantProductPair), lAmountIn) */
    tag_2983:
      tag_3006
      swap1
      tag_1
      jump\t// in
    tag_3006:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_255
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":9569:9623  _tokenA.mint(address(_constantProductPair), lAmountIn) */
      dup2
      codesize
      jump(tag_2984)
        /* \"test/unit/ConstantProductPair.t.sol\":9503:9533  _constantProductPair.swapFee() */
    tag_2975:
      swap3
      swap8
      pop
      swap3
      pop
      swap3
      pop
      dup10
      dup2
      dup2
      returndatasize
      dup4
      gt
      tag_3009
      jumpi
    tag_3010:
      tag_3011
      dup2
      dup4
      tag_6
      jump\t// in
    tag_3011:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
      mload
      dup11
      swap6
      swap1
      swap3
      dup10
      swap3
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":9503:9533  _constantProductPair.swapFee() */
      jump(tag_2976)
    tag_3009:
      pop
      returndatasize
      jump(tag_3010)
        /* \"test/unit/ConstantProductPair.t.sol\":9389:9423  _constantProductPair.getReserves() */
    tag_2971:
      swap1
      pop
      tag_3014
      swap2
      pop
      0x80
      returndatasize
      dup2
      gt
      tag_328
      jumpi
      tag_330
      dup2
      dup4
      tag_6
      jump\t// in
    tag_3014:
      pop
      pop
      swap1
      codesize
      jump(tag_2972)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_2967:
      dup6
      0x4e487b7100000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      mstore(0x04, 0x11)
      revert
        /* \"test/unit/ConstantProductPair.t.sol\":9056:9096  _constantProductPair.setCustomSwapFee(0) */
    tag_2960:
      tag_3018
      swap1
      tag_1
      jump\t// in
    tag_3018:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_285
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":9056:9096  _constantProductPair.setCustomSwapFee(0) */
      dup4
      codesize
      jump(tag_2961)
        /* \"test/unit/ConstantProductPair.t.sol\":9019:9046  vm.prank(address(_factory)) */
    tag_2954:
      tag_3021
      swap1
      tag_1
      jump\t// in
    tag_3021:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_285
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":9019:9046  vm.prank(address(_factory)) */
      dup4
      codesize
      jump(tag_2955)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_122:
      pop
      jumpi(tag_196, callvalue)
      dup1
      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
      slt
      tag_196
      jumpi
      0x20
      mload(0x40)
        /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */
      0x056bc75e2d63100000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      mstore
      return
    tag_120:
      pop
      jumpi(tag_196, callvalue)
      dup1
      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
      slt
      tag_196
      jumpi
      0xffffffffffffffffffffffffffffffffffffffff
      dup1
        /* \"test/unit/ConstantProductPair.t.sol\":3146:3166  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":3177:3183  _alice */
      0x16
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":3146:3184  _constantProductPair.balanceOf(_alice) */
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x70a0823100000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":3146:3184  _constantProductPair.balanceOf(_alice) */
      dup3
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":3146:3184  _constantProductPair.balanceOf(_alice) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":3146:3184  _constantProductPair.balanceOf(_alice) */
      0x20
      dup1
      dup3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":3146:3184  _constantProductPair.balanceOf(_alice) */
      dup2
      dup7
      gas
      staticcall
      swap2
      dup3
      iszero
      tag_841
      jumpi
      dup5
      swap3
      tag_3034
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_3035:
      pop
      0x04
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":3228:3263  Math.sqrt(INITIAL_MINT_AMOUNT ** 2) */
      tag_3036
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_3037
      tag_43
      jump\t// in
    tag_3037:
        /* \"test/unit/ConstantProductPair.t.sol\":3228:3263  Math.sqrt(INITIAL_MINT_AMOUNT ** 2) */
      tag_45
      jump\t// in
    tag_3036:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap5
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":3266:3306  _constantProductPair.MINIMUM_LIQUIDITY() */
      swap3
      dup4
      dup1
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xba9a7a5600000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":3266:3306  _constantProductPair.MINIMUM_LIQUIDITY() */
      dup3
      mstore
      gas
      staticcall
      swap2
      dup3
      iszero
      tag_201
      jumpi
      dup6
      swap3
      tag_3040
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_3041:
        /* \"test/unit/ConstantProductPair.t.sol\":3228:3306  Math.sqrt(INITIAL_MINT_AMOUNT ** 2) - _constantProductPair.MINIMUM_LIQUIDITY() */
      pop
      pop
      tag_1086
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":3341:3364  lExpectedLpTokenBalance */
      tag_316
        /* \"test/unit/ConstantProductPair.t.sol\":3228:3306  Math.sqrt(INITIAL_MINT_AMOUNT ** 2) - _constantProductPair.MINIMUM_LIQUIDITY() */
      swap4
      tag_44
      jump\t// in
        /* \"test/unit/ConstantProductPair.t.sol\":3266:3306  _constantProductPair.MINIMUM_LIQUIDITY() */
    tag_3040:
      swap1
      dup1
      swap3
      pop
      dup2
      returndatasize
      dup4
      gt
      tag_3044
      jumpi
    tag_3045:
      tag_3046
      dup2
      dup4
      tag_6
      jump\t// in
    tag_3046:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
      mload
      dup3
        /* \"test/unit/ConstantProductPair.t.sol\":3228:3306  Math.sqrt(INITIAL_MINT_AMOUNT ** 2) - _constantProductPair.MINIMUM_LIQUIDITY() */
      tag_1086
        /* \"test/unit/ConstantProductPair.t.sol\":3266:3306  _constantProductPair.MINIMUM_LIQUIDITY() */
      jump(tag_3041)
    tag_3044:
      pop
      returndatasize
      jump(tag_3045)
        /* \"test/unit/ConstantProductPair.t.sol\":3146:3184  _constantProductPair.balanceOf(_alice) */
    tag_3034:
      swap1
      dup1
      swap3
      pop
      dup2
      dup2
      returndatasize
      dup4
      gt
      tag_3049
      jumpi
    tag_3050:
      tag_3051
      dup2
      dup4
      tag_6
      jump\t// in
    tag_3051:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":3146:3184  _constantProductPair.balanceOf(_alice) */
      swap1
      codesize
      jump(tag_3035)
    tag_3049:
      pop
      returndatasize
      jump(tag_3050)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_118:
      pop
      jumpi(tag_196, callvalue)
      dup1
      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
      slt
      tag_196
      jumpi
      0x20
      mload(0x40)
        /* \"test/__fixtures/BaseTest.sol\":988:992  1000 */
      0x03e8
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      mstore
      return
    tag_116:
      pop
      jumpi(tag_196, callvalue)
      dup1
      add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
      slt
      tag_196
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":22992:23004  _stepTime(5) */
      tag_3062
      tag_77
      jump\t// in
    tag_3062:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      dup1
        /* \"test/unit/ConstantProductPair.t.sol\":23050:23057  _tokenB */
      0x1a
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":23071:23091  _constantProductPair */
      dup3
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap2
      dup4
      dup4
      sload
      and
        /* \"test/unit/ConstantProductPair.t.sol\":23050:23103  _tokenB.mint(address(_constantProductPair), lSwapAmt) */
      swap1
      dup1
      extcodesize
      iszero
      tag_291
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x44
      dup4
      swap3
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":23050:23103  _tokenB.mint(address(_constantProductPair), lSwapAmt) */
      swap5
      dup6
      swap4
      dup5
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40c10f1900000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":23050:23103  _tokenB.mint(address(_constantProductPair), lSwapAmt) */
      dup5
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":23050:23103  _tokenB.mint(address(_constantProductPair), lSwapAmt) */
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":23033:23040  0.12e18 */
      0x01aa535d3d0c0000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      dup5
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":23050:23103  _tokenB.mint(address(_constantProductPair), lSwapAmt) */
      gas
      call
      dup1
      iszero
      tag_841
      jumpi
      tag_3067
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_3068:
      pop
      dup1
      dup3
      tag_2064
      swap3
      sload
      and
      mload(0x40)
      tag_3070
      dup2
      tag_2
      jump\t// in
    tag_3070:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      dup6
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":23113:23189  _constantProductPair.swap(-int256(lSwapAmt), true, address(this), bytes(\"\")) */
      dup1
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xe12bd9d800000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":23113:23189  _constantProductPair.swap(-int256(lSwapAmt), true, address(this), bytes(\"\")) */
      dup3
      mstore
        /* \"lib/forge-std/src/StdMath.sol\":124:202  -57896044618658097711785492504343953926634992332820282019728792003956564819968 */
      0xfffffffffffffffffffffffffffffffffffffffffffffffffe55aca2c2f40000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":23113:23189  _constantProductPair.swap(-int256(lSwapAmt), true, address(this), bytes(\"\")) */
      dup4
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":23158:23162  true */
      0x01
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      dup4
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":23172:23176  this */
      address
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x44
      dup4
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x80
      0x64
      dup4
      add
      mstore
      dup2
      dup9
      dup2
      0x20
      swap9
      dup10
      swap7
      0x84
      dup4
      add
      swap1
      tag_10
      jump\t// in
        /* \"test/unit/ConstantProductPair.t.sol\":23050:23103  _tokenB.mint(address(_constantProductPair), lSwapAmt) */
    tag_3067:
      swap3
      tag_3119
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_2064
        /* \"test/unit/ConstantProductPair.t.sol\":23050:23103  _tokenB.mint(address(_constantProductPair), lSwapAmt) */
      swap3
      swap5
      tag_1
      jump\t// in
    tag_3119:
      swap3
      swap1
      jump(tag_3068)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_1:
      0xffffffffffffffff
      dup2
      gt
      tag_3120
      jumpi
      0x40
      mstore
      jump\t// out
    tag_3120:
      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)
      mstore(0x04, 0x41)
      revert(0x00, 0x24)
    tag_2:
      0x20
      dup2
      add
      swap1
      dup2
      lt
      0xffffffffffffffff
      dup3
      gt
      or
      tag_3120
      jumpi
      0x40
      mstore
      jump\t// out
    tag_4:
      0x40
      dup2
      add
      swap1
      dup2
      lt
      0xffffffffffffffff
      dup3
      gt
      or
      tag_3120
      jumpi
      0x40
      mstore
      jump\t// out
    tag_5:
      0x60
      dup2
      add
      swap1
      dup2
      lt
      0xffffffffffffffff
      dup3
      gt
      or
      tag_3120
      jumpi
      0x40
      mstore
      jump\t// out
    tag_6:
      swap1
      0x1f
      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
      swap2
      add
      and
      dup2
      add
      swap1
      dup2
      lt
      0xffffffffffffffff
      dup3
      gt
      or
      tag_3120
      jumpi
      0x40
      mstore
      jump\t// out
    tag_7:
      0xffffffffffffffff
      dup2
      gt
      tag_3120
      jumpi
      0x1f
      add
      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
      and
      0x20
      add
      swap1
      jump\t// out
    tag_8:
      swap3
      swap2
      swap3
      tag_3134
      dup3
      tag_7
      jump\t// in
    tag_3134:
      swap2
      tag_3135
      mload(0x40)
      swap4
      dup5
      tag_6
      jump\t// in
    tag_3135:
      dup3
      swap5
      dup2
      dup5
      mstore
      dup2
      dup4
      add
      gt
      tag_226
      jumpi
      dup3
      dup2
      0x20
      swap4
      dup5
      0x00
      swap7
      add
      calldatacopy
      add
      add
      mstore
      jump\t// out
    tag_9:
      0x00
    tag_3138:
      dup4
      dup2
      lt
      tag_3139
      jumpi
      pop
      pop
      0x00
      swap2
      add
      mstore
      jump\t// out
    tag_3139:
      dup2
      dup2
      add
      mload
      dup4
      dup3
      add
      mstore
      0x20
      add
      jump(tag_3138)
    tag_10:
      swap1
      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
      0x1f
      0x20
      swap4
      tag_3141
      dup2
      mload
      dup1
      swap3
      dup2
      dup8
      mstore
      dup8
      dup1
      dup9
      add
      swap2
      add
      tag_9
      jump\t// in
    tag_3141:
      add
      and
      add
      add
      swap1
      jump\t// out
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
    tag_12:
      0xffffffff00000000000000000000000000000000000000000000000000000000
      0x04
      swap4
      swap3
      and
      dup2
      mstore
      tag_3142
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      mload
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      dup1
      swap4
      0x20
      dup7
      dup6
      add
      swap2
      add
      tag_9
      jump\t// in
    tag_3142:
      add
      add
      swap1
      jump\t// out
    tag_13:
      jumpi(tag_3143, iszero(returndatasize))
      returndatasize
      swap1
      tag_3145
      dup3
      tag_7
      jump\t// in
    tag_3145:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap2
      tag_3146
      mload(0x40)
      swap4
      dup5
      tag_6
      jump\t// in
    tag_3146:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      dup3
      mstore
      returndatasize
      0x00
      0x20
      dup5
      add
      returndatacopy
      jump\t// out
    tag_3143:
      0x60
      swap1
      jump\t// out
    tag_14:
      swap1
      dup2
      0x20
      swap2
      sub
      slt
      tag_226
      jumpi
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup1
      iszero
      iszero
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      dup2
      sub
      tag_226
      jumpi
      swap1
      jump\t// out
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1819:2403  function failed() public returns (bool) {... */
    tag_15:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1873:1880  _failed */
      0x00
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup1
      sload
      0x08
      shr
      0xff
      and
      iszero
      tag_3152
      jumpi
      sload
      0x08
      shr
      0xff
      and
      swap1
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1896:1910  return _failed */
      jump\t// out
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1869:2397  if (_failed) {... */
    tag_3152:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1941:1966  bool globalFailed = false */
      dup1
        /* \"lib/solmate/lib/ds-test/src/test.sol\":2939:3043  assembly {... */
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
      dup1
      extcodesize
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1980:2354  if (hasHEVMContext()) {... */
      tag_3154
      jumpi
        /* \"lib/solmate/lib/ds-test/src/test.sol\":2367:2386  return globalFailed */
      pop
      pop
      swap1
      jump\t// out
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1980:2354  if (hasHEVMContext()) {... */
    tag_3154:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      swap3
      pop
      mload(0x40)
        /* \"lib/solmate/lib/ds-test/src/test.sol\":2196:2239  abi.encode(HEVM_ADDRESS, bytes32(\"failed\")) */
      dup3
      0x20
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      dup4
      dup2
      mstore
      0x6661696c65640000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      dup5
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
      0x40
        /* \"lib/solmate/lib/ds-test/src/test.sol\":2196:2239  abi.encode(HEVM_ADDRESS, bytes32(\"failed\")) */
      dup4
      mstore
      tag_3156
      dup4
      tag_5
      jump\t// in
    tag_3156:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":2086:2261  abi.encodePacked(... */
      tag_3157
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"lib/solmate/lib/ds-test/src/test.sol\":2086:2261  abi.encodePacked(... */
      dup1
      swap4
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      tag_3158
        /* \"lib/solmate/lib/ds-test/src/test.sol\":2196:2239  abi.encode(HEVM_ADDRESS, bytes32(\"failed\")) */
      0x20
        /* \"lib/solmate/lib/ds-test/src/test.sol\":2086:2261  abi.encodePacked(... */
      dup4
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      swap8
      0x667f9d7000000000000000000000000000000000000000000000000000000000
      dup10
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      dup1
      swap3
      dup6
      dup6
      add
      swap1
      tag_9
      jump\t// in
    tag_3158:
      dup2
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":2086:2261  abi.encodePacked(... */
      sub
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      0x04
        /* \"lib/solmate/lib/ds-test/src/test.sol\":2086:2261  abi.encodePacked(... */
      dup2
      add
      dup5
      mstore
      add
      dup3
      tag_6
      jump\t// in
    tag_3157:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":2047:2279  HEVM_ADDRESS.call(... */
      mload
      swap3
      gas
      call
      pop
        /* \"lib/solmate/lib/ds-test/src/test.sol\":2312:2339  abi.decode(retdata, (bool)) */
      tag_3159
        /* \"lib/solmate/lib/ds-test/src/test.sol\":2047:2279  HEVM_ADDRESS.call(... */
      tag_3160
      tag_13
      jump\t// in
    tag_3160:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":2196:2239  abi.encode(HEVM_ADDRESS, bytes32(\"failed\")) */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup1
      dup3
      mload
        /* \"lib/solmate/lib/ds-test/src/test.sol\":2312:2339  abi.decode(retdata, (bool)) */
      dup4
      add
      add
      swap2
      add
      tag_14
      jump\t// in
    tag_3159:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":2367:2386  return globalFailed */
      swap1
      jump\t// out
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_16:
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":15977:15981  1e18 */
      0x0de0b6b3a7640000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap2
      dup3
      dup2
      mul
      swap3
      dup2
      dup5
      div
      eq
      swap1
      iszero
      or
      iszero
      tag_505
      jumpi
      jump\t// out
    tag_17:
      dup2
      dup2
      mul
      swap3
      swap2
      dup2
      iszero
      swap2
      dup5
      div
      eq
      or
      iszero
      tag_505
      jumpi
      jump\t// out
    tag_18:
      swap1
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      tag_3165
      dup3
      tag_7
      jump\t// in
    tag_3165:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_3166
      mload(0x40)
      swap2
      dup3
      tag_6
      jump\t// in
    tag_3166:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      dup3
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
      tag_3167
      dup3
      swap5
      tag_7
      jump\t// in
    tag_3167:
      add
      swap1
      0x20
      calldatasize
      swap2
      add
      calldatacopy
      jump\t// out
    tag_19:
      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
      dup2
      eq
      tag_505
      jumpi
      0x01
      add
      swap1
      jump\t// out
    tag_20:
      swap1
      dup2
      mload
      dup2
      lt
      iszero
      tag_3170
      jumpi
      add
      0x20
      add
      swap1
      jump\t// out
    tag_3170:
      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)
      mstore(0x04, 0x32)
      revert(0x00, 0x24)
    tag_21:
      dup2
      iszero
      tag_3172
      jumpi
      div
      swap1
      jump\t// out
    tag_3172:
      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)
      mstore(0x04, 0x12)
      revert(0x00, 0x24)
    tag_22:
      dup2
      iszero
      tag_3172
      jumpi
      mod
      swap1
      jump\t// out
    tag_23:
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":20511:20512  1 */
      0x01
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      add
      dup1
      swap3
      gt
      tag_505
      jumpi
      jump\t// out
    tag_24:
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":20549:20550  5 */
      0x05
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      add
      dup1
      swap3
      gt
      tag_505
      jumpi
      jump\t// out
    tag_25:
      swap2
      swap1
      dup3
      add
      dup1
      swap3
      gt
      tag_505
      jumpi
      jump\t// out
    tag_26:
      mload
      swap1
      0xffffffffffffffffffffffffff
      dup3
      and
      dup3
      sub
      tag_226
      jumpi
      jump\t// out
    tag_27:
      mload
      swap1
      0xffffffff
      dup3
      and
      dup3
      sub
      tag_226
      jumpi
      jump\t// out
    tag_28:
      swap2
      swap1
      dup3
      0x80
      swap2
      sub
      slt
      tag_226
      jumpi
      tag_3188
      dup3
      tag_26
      jump\t// in
    tag_3188:
      swap2
      tag_3189
      0x20
      dup3
      add
      tag_26
      jump\t// in
    tag_3189:
      swap2
      0x60
      tag_3190
      0x40
      dup5
      add
      tag_27
      jump\t// in
    tag_3190:
      swap3
      add
      mload
      0xffff
      dup2
      and
      dup2
      sub
      tag_226
      jumpi
      swap1
      jump\t// out
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5202:5464  function assertEq(uint a, uint b) internal {... */
    tag_33:
        /* \"test/unit/ConstantProductPair.t.sol\":23268:23272  1e18 */
      0x0de0b6b3a7640000
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5259:5265  a != b */
      swap1
      dup2
      dup2
      sub
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5255:5458  if (a != b) {... */
      tag_3193
      jumpi
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5202:5464  function assertEq(uint a, uint b) internal {... */
      pop
      pop
      jump\t// out
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5255:5458  if (a != b) {... */
    tag_3193:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_3195
      swap1
      0x40
      swap1
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5286:5327  log(\"Error: a == b not satisfied [uint]\") */
      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x80
      dup4
      mload
      0x20
      dup2
      mstore
      0x22
      0x20
      dup3
      add
      mstore
      0x4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e
      dup6
      dup3
      add
      mstore
      0x745d000000000000000000000000000000000000000000000000000000000000
      0x60
      dup3
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5286:5327  log(\"Error: a == b not satisfied [uint]\") */
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      mload
      swap4
      dup3
      dup6
      mstore
      tag_3196
      dup4
      dup7
      add
      0x40
      swap1
      0x0a
      dup2
      mstore
      0x2020457870656374656400000000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_3196:
      swap1
      0x20
      dup7
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5346:5377  log_named_uint(\"  Expected\", b) */
      dup5
      0xb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8
      swap6
      dup7
      swap3
      sub
      swap1
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      mload
      swap3
      dup3
      dup5
      swap4
      dup5
      mstore
      dup4
      add
      0x40
      swap1
      0x0a
      dup2
      mstore
      0x2020202041637475616c00000000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_3195:
      swap1
      0x20
      dup4
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5396:5427  log_named_uint(\"    Actual\", a) */
      sub
      swap1
      log1
      tag_3197
      tag_42
      jump\t// in
    tag_3197:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5202:5464  function assertEq(uint a, uint b) internal {... */
      jump\t// out
    tag_34:
        /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */
      0x056bc75e2d63100000
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5259:5265  a != b */
      swap1
      dup2
      dup2
      sub
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5255:5458  if (a != b) {... */
      tag_3193
      jumpi
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5202:5464  function assertEq(uint a, uint b) internal {... */
      pop
      pop
      jump\t// out
    tag_35:
        /* \"test/__fixtures/BaseTest.sol\":924:931  250_000 */
      0x03d090
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5259:5265  a != b */
      swap1
      dup2
      dup2
      sub
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5255:5458  if (a != b) {... */
      tag_3193
      jumpi
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5202:5464  function assertEq(uint a, uint b) internal {... */
      pop
      pop
      jump\t// out
    tag_36:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5259:5265  a != b */
      dup1
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5255:5458  if (a != b) {... */
      tag_3208
      jumpi
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5202:5464  function assertEq(uint a, uint b) internal {... */
      pop
      jump\t// out
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5255:5458  if (a != b) {... */
    tag_3208:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_3195
      0x40
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5286:5327  log(\"Error: a == b not satisfied [uint]\") */
      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x80
      dup3
      mload
      0x20
      dup2
      mstore
      0x22
      0x20
      dup3
      add
      mstore
      0x4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e
      dup5
      dup3
      add
      mstore
      0x745d000000000000000000000000000000000000000000000000000000000000
      0x60
      dup3
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5286:5327  log(\"Error: a == b not satisfied [uint]\") */
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup1
      mload
      swap3
      dup2
      dup5
      mstore
      tag_3211
      dup3
      dup6
      add
      0x40
      swap1
      0x0a
      dup2
      mstore
      0x2020457870656374656400000000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_3211:
      0x00
      0x20
      dup7
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5346:5377  log_named_uint(\"  Expected\", b) */
      dup5
      0xb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8
      swap6
      dup7
      swap3
      sub
      swap1
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      mload
      swap3
      dup3
      dup5
      swap4
      dup5
      mstore
      dup4
      add
      0x40
      swap1
      0x0a
      dup2
      mstore
      0x2020202041637475616c00000000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5202:5464  function assertEq(uint a, uint b) internal {... */
    tag_37:
        /* \"test/unit/ConstantProductPair.t.sol\":3768:3769  1 */
      0x01
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5259:5265  a != b */
      dup2
      sub
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5255:5458  if (a != b) {... */
      tag_3213
      jumpi
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5202:5464  function assertEq(uint a, uint b) internal {... */
      pop
      jump\t// out
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5255:5458  if (a != b) {... */
    tag_3213:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_3195
      0x40
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5286:5327  log(\"Error: a == b not satisfied [uint]\") */
      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x80
      dup3
      mload
      0x20
      dup2
      mstore
      0x22
      0x20
      dup3
      add
      mstore
      0x4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e
      dup5
      dup3
      add
      mstore
      0x745d000000000000000000000000000000000000000000000000000000000000
      0x60
      dup3
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5286:5327  log(\"Error: a == b not satisfied [uint]\") */
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup1
      mload
      swap3
      dup2
      dup5
      mstore
      tag_3216
      dup3
      dup6
      add
      0x40
      swap1
      0x0a
      dup2
      mstore
      0x2020457870656374656400000000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_3216:
        /* \"test/unit/ConstantProductPair.t.sol\":3768:3769  1 */
      0x01
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
      dup7
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5346:5377  log_named_uint(\"  Expected\", b) */
      dup5
      0xb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8
      swap6
      dup7
      swap3
      sub
      swap1
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      mload
      swap3
      dup3
      dup5
      swap4
      dup5
      mstore
      dup4
      add
      0x40
      swap1
      0x0a
      dup2
      mstore
      0x2020202041637475616c00000000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5202:5464  function assertEq(uint a, uint b) internal {... */
    tag_38:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffff
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5259:5265  a != b */
      swap1
      dup2
      dup2
      sub
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5255:5458  if (a != b) {... */
      tag_3193
      jumpi
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5202:5464  function assertEq(uint a, uint b) internal {... */
      pop
      pop
      jump\t// out
    tag_39:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5259:5265  a != b */
      dup2
      dup2
      sub
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5255:5458  if (a != b) {... */
      tag_3193
      jumpi
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5202:5464  function assertEq(uint a, uint b) internal {... */
      pop
      pop
      jump\t// out
        /* \"lib/solmate/lib/ds-test/src/test.sol\":2410:2834  function fail() internal {... */
    tag_42:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":2939:3043  assembly {... */
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
      dup1
      extcodesize
        /* \"lib/solmate/lib/ds-test/src/test.sol\":2445:2804  if (hasHEVMContext()) {... */
      tag_3228
      jumpi
        /* \"lib/solmate/lib/ds-test/src/test.sol\":2410:2834  function fail() internal {... */
    tag_3229:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      pop
      0x0100
      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff
        /* \"lib/solmate/lib/ds-test/src/test.sol\":2928:2929  0 */
      0x00
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      or
        /* \"lib/solmate/lib/ds-test/src/test.sol\":2928:2929  0 */
      0x00
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":2410:2834  function fail() internal {... */
      jump\t// out
        /* \"lib/solmate/lib/ds-test/src/test.sol\":2445:2804  if (hasHEVMContext()) {... */
    tag_3228:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"lib/solmate/lib/ds-test/src/test.sol\":2645:2712  abi.encode(HEVM_ADDRESS, bytes32(\"failed\"), bytes32(uint256(0x01))) */
      swap1
      0x20
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      swap1
      dup1
      dup3
      mstore
      0x6661696c65640000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40
      dup5
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":2705:2709  0x01 */
      0x01
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x60
      dup5
      add
      mstore
      0x60
        /* \"lib/solmate/lib/ds-test/src/test.sol\":2645:2712  abi.encode(HEVM_ADDRESS, bytes32(\"failed\"), bytes32(uint256(0x01))) */
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x80
      dup4
      add
      swap2
      dup4
      dup4
      lt
      0xffffffffffffffff
      dup5
      gt
      or
      tag_3120
      jumpi
      0x00
      dup4
        /* \"lib/solmate/lib/ds-test/src/test.sol\":2534:2730  abi.encodePacked(... */
      tag_3232
      0x24
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup4
      swap8
      dup5
      swap8
      0x40
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":2534:2730  abi.encodePacked(... */
      0xa0
      dup2
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      swap6
      0x70ca10bb00000000000000000000000000000000000000000000000000000000
      dup8
      mstore
      tag_3158
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      mload
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      dup1
      swap3
      0xa4
      dup6
      add
      swap1
      tag_9
      jump\t// in
        /* \"lib/solmate/lib/ds-test/src/test.sol\":2534:2730  abi.encodePacked(... */
    tag_3232:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":2499:2744  HEVM_ADDRESS.call(... */
      mload
      swap3
      gas
      call
      pop
      tag_3234
      tag_13
      jump\t// in
    tag_3234:
      pop
        /* \"lib/solmate/lib/ds-test/src/test.sol\":2445:2804  if (hasHEVMContext()) {... */
      codesize
      jump(tag_3229)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_43:
        /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */
      0x056bc75e2d63100000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x01
      0x02
      dup2
    tag_3235:
      dup1
      dup3
      gt
      tag_3236
      jumpi
      pop
      pop
      dup2
      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
      div
      dup2
      gt
      tag_505
      jumpi
      mul
      swap1
      jump\t// out
    tag_3236:
      swap1
      swap3
      dup1
      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
      div
      dup2
      gt
      tag_505
      jumpi
      dup2
      dup5
      and
      tag_3242
      jumpi
    tag_3243:
      dup1
      mul
      swap3
      dup2
      shr
      swap1
      jump(tag_3235)
    tag_3242:
      dup1
      swap3
      mul
      swap2
      jump(tag_3243)
    tag_44:
      swap2
      swap1
      dup3
      sub
      swap2
      dup3
      gt
      tag_505
      jumpi
      jump\t// out
        /* \"test/__fixtures/Math.sol\":153:454  function sqrt(uint256 y) internal pure returns (uint256 z) {... */
    tag_45:
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x00
        /* \"test/__fixtures/Math.sol\":230:231  3 */
      0x03
        /* \"test/__fixtures/Math.sol\":226:231  y > 3 */
      dup4
      gt
        /* \"test/__fixtures/Math.sol\":230:231  3 */
      iszero
      tag_3246
      jumpi
        /* \"test/__fixtures/Math.sol\":247:252  z = y */
      pop
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x01
      swap1
      dup1
      dup3
      shr
      dup3
      dup2
      add
      dup1
      swap2
      gt
      tag_505
      jumpi
        /* \"test/__fixtures/Math.sol\":266:287  uint256 x = y / 2 + 1 */
      swap2
      swap1
        /* \"test/__fixtures/Math.sol\":308:313  x < z */
    tag_3250:
      dup5
      dup4
      lt
      tag_3251
      jumpi
        /* \"test/__fixtures/Math.sol\":222:448  if (y > 3) {... */
      pop
      pop
      pop
        /* \"test/__fixtures/Math.sol\":153:454  function sqrt(uint256 y) internal pure returns (uint256 z) {... */
      jump\t// out
        /* \"test/__fixtures/Math.sol\":301:390  while (x < z) {... */
    tag_3251:
        /* \"test/__fixtures/Math.sol\":333:338  z = x */
      swap1
      swap2
      swap4
      pop
        /* \"test/__fixtures/Math.sol\":361:370  y / x + x */
      tag_3254
        /* \"test/__fixtures/Math.sol\":333:338  z = x */
      dup5
        /* \"test/__fixtures/Math.sol\":361:366  y / x */
      tag_2261
      dup2
      dup5
      tag_21
      jump\t// in
        /* \"test/__fixtures/Math.sol\":361:370  y / x + x */
    tag_3254:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      shr
      swap2
      swap1
        /* \"test/__fixtures/Math.sol\":301:390  while (x < z) {... */
      jump(tag_3250)
        /* \"test/__fixtures/Math.sol\":222:448  if (y > 3) {... */
    tag_3246:
        /* \"test/__fixtures/Math.sol\":410:416  y != 0 */
      swap2
        /* \"test/__fixtures/Math.sol\":406:448  if (y != 0) {... */
      tag_3256
      jumpi
        /* \"test/__fixtures/Math.sol\":153:454  function sqrt(uint256 y) internal pure returns (uint256 z) {... */
      jump\t// out
        /* \"test/__fixtures/Math.sol\":406:448  if (y != 0) {... */
    tag_3256:
        /* \"test/__fixtures/Math.sol\":436:437  1 */
      0x01
      swap2
      pop
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5202:5464  function assertEq(uint a, uint b) internal {... */
      jump\t// out
        /* \"test/__fixtures/BaseTest.sol\":4974:5152  function _createPair(address aTokenA, address aTokenB, uint256 aCurveId) internal returns (address rPair) {... */
    tag_46:
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      swap1
      dup2
      dup1
        /* \"test/__fixtures/BaseTest.sol\":5098:5106  _factory */
      0x13
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      swap2
      dup2
      mload(0x40)
        /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */
      swap6
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x6b600d1c00000000000000000000000000000000000000000000000000000000
        /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */
      dup8
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      and
        /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */
      0x04
      dup7
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      and
      0x24
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup4
      0x64
      dup2
      0x00
      dup1
      swap6
      dup2
      0x44
      dup5
      add
      mstore
        /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */
      gas
      call
      swap3
      dup4
      iszero
      tag_1474
      jumpi
      dup2
      swap4
      tag_3260
      jumpi
        /* \"test/__fixtures/BaseTest.sol\":4974:5152  function _createPair(address aTokenA, address aTokenB, uint256 aCurveId) internal returns (address rPair) {... */
    tag_3261:
        /* \"test/__fixtures/BaseTest.sol\":5090:5145  rPair = _factory.createPair(aTokenA, aTokenB, aCurveId) */
      pop
      pop
      pop
        /* \"test/__fixtures/BaseTest.sol\":4974:5152  function _createPair(address aTokenA, address aTokenB, uint256 aCurveId) internal returns (address rPair) {... */
      swap1
      jump\t// out
        /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */
    tag_3260:
      swap1
      swap2
      swap3
      pop
      0x20
      dup2
      returndatasize
      dup3
      gt
      tag_3262
      jumpi
    tag_3263:
      dup2
      tag_3264
      0x20
      swap4
      dup4
      tag_6
      jump\t// in
    tag_3264:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_255
      jumpi
      mload
      swap2
      dup3
      and
      dup3
      sub
      tag_196
      jumpi
        /* \"test/__fixtures/BaseTest.sol\":5098:5145  _factory.createPair(aTokenA, aTokenB, aCurveId) */
      pop
      codesize
      dup1
      dup1
      jump(tag_3261)
    tag_3262:
      returndatasize
      swap2
      pop
      jump(tag_3263)
        /* \"lib/forge-std/src/StdError.sol\":277:364  bytes public constant arithmeticError = abi.encodeWithSignature(\"Panic(uint256)\", 0x11) */
    tag_47:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"lib/forge-std/src/StdError.sol\":317:364  abi.encodeWithSignature(\"Panic(uint256)\", 0x11) */
      0x4e487b7100000000000000000000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
        /* \"lib/forge-std/src/StdError.sol\":359:363  0x11 */
      0x11
        /* \"lib/forge-std/src/StdError.sol\":317:364  abi.encodeWithSignature(\"Panic(uint256)\", 0x11) */
      0x24
      dup3
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"lib/forge-std/src/StdError.sol\":317:364  abi.encodeWithSignature(\"Panic(uint256)\", 0x11) */
      0x24
      dup2
      mstore
      tag_3159
      dup2
      tag_5
      jump\t// in
        /* \"test/unit/ConstantProductPair.t.sol\":2167:2408  function _getToken0Token1(address aTokenA, address aTokenB)... */
    tag_49:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      dup3
      dup2
      and
      swap1
      dup3
      and
        /* \"test/unit/ConstantProductPair.t.sol\":2342:2359  aTokenA < aTokenB */
      lt
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      iszero
      tag_3270
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":2167:2408  function _getToken0Token1(address aTokenA, address aTokenB)... */
      swap2
      jump\t// out
        /* \"test/unit/ConstantProductPair.t.sol\":2342:2401  aTokenA < aTokenB ? (aTokenA, aTokenB) : (aTokenB, aTokenA) */
    tag_3270:
        /* \"test/unit/ConstantProductPair.t.sol\":2321:2401  (rToken0, rToken1) = aTokenA < aTokenB ? (aTokenA, aTokenB) : (aTokenB, aTokenA) */
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":2167:2408  function _getToken0Token1(address aTokenA, address aTokenB)... */
      swap2
      jump\t// out
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_50:
      mload(0x40)
      swap1
      tag_3273
      dup3
      tag_4
      jump\t// in
    tag_3273:
      0x01
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      dup3
      mstore
      0x00
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
      dup4
      add
      mstore
      jump\t// out
        /* \"lib/forge-std/src/StdMath.sol\":124:202  -57896044618658097711785492504343953926634992332820282019728792003956564819968 */
    tag_55:
      0x8000000000000000000000000000000000000000000000000000000000000000
      dup2
      eq
      tag_505
      jumpi
      0x00
      sub
      swap1
      jump\t// out
        /* \"lib/forge-std/src/StdMath.sol\":209:515  function abs(int256 a) internal pure returns (uint256) {... */
    tag_56:
        /* \"lib/forge-std/src/StdMath.sol\":124:202  -57896044618658097711785492504343953926634992332820282019728792003956564819968 */
      0x8000000000000000000000000000000000000000000000000000000000000000
        /* \"lib/forge-std/src/StdMath.sol\":342:357  a == INT256_MIN */
      dup1
      dup3
      eq
        /* \"lib/forge-std/src/StdMath.sol\":338:468  if (a == INT256_MIN) {... */
      tag_3276
      jumpi
      pop
        /* \"lib/forge-std/src/StdMath.sol\":497:498  0 */
      0x00
        /* \"lib/forge-std/src/StdMath.sol\":493:498  a > 0 */
      dup2
      sgt
        /* \"lib/forge-std/src/StdMath.sol\":497:498  0 */
      iszero
      tag_3278
      jumpi
        /* \"lib/forge-std/src/StdMath.sol\":209:515  function abs(int256 a) internal pure returns (uint256) {... */
      swap1
      jump\t// out
        /* \"lib/forge-std/src/StdMath.sol\":493:507  a > 0 ? a : -a */
    tag_3278:
        /* \"lib/forge-std/src/StdMath.sol\":505:507  -a */
      tag_3159
      swap1
      tag_55
      jump\t// in
        /* \"lib/forge-std/src/StdMath.sol\":338:468  if (a == INT256_MIN) {... */
    tag_3276:
        /* \"lib/forge-std/src/StdMath.sol\":373:457  return 57896044618658097711785492504343953926634992332820282019728792003956564819968 */
      swap1
      pop
      swap1
      jump\t// out
        /* \"lib/forge-std/src/StdMath.sol\":641:993  function delta(int256 a, int256 b) internal pure returns (uint256) {... */
    tag_57:
        /* \"test/unit/ConstantProductPair.t.sol\":5471:5475  1e18 */
      0x0de0b6b3a7640000
        /* \"lib/forge-std/src/StdMath.sol\":847:852  a ^ b */
      swap1
        /* \"lib/forge-std/src/StdMath.sol\":856:858  -1 */
      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
        /* \"lib/forge-std/src/StdMath.sol\":847:852  a ^ b */
      dup3
      dup3
      xor
        /* \"lib/forge-std/src/StdMath.sol\":846:858  (a ^ b) > -1 */
      sgt
        /* \"lib/forge-std/src/StdMath.sol\":842:913  if ((a ^ b) > -1) {... */
      tag_3282
      jumpi
        /* \"lib/forge-std/src/StdMath.sol\":971:977  abs(a) */
      tag_3284
      swap1
      tag_56
      jump\t// in
    tag_3284:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      dup2
      add
      dup1
      swap2
      gt
      tag_505
      jumpi
        /* \"lib/forge-std/src/StdMath.sol\":641:993  function delta(int256 a, int256 b) internal pure returns (uint256) {... */
      swap1
      jump\t// out
        /* \"lib/forge-std/src/StdMath.sol\":842:913  if ((a ^ b) > -1) {... */
    tag_3282:
        /* \"lib/forge-std/src/StdMath.sol\":887:893  abs(a) */
      tag_3287
      swap1
      tag_56
      jump\t// in
    tag_3287:
        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */
      swap1
      0x00
        /* \"lib/forge-std/src/StdMath.sol\":607:612  a > b */
      dup2
      dup4
      gt
        /* \"test/unit/ConstantProductPair.t.sol\":5471:5475  1e18 */
      iszero
      tag_3288
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      pop
      pop
      0xfffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c0000
      dup2
      add
      swap1
      dup2
      gt
      tag_505
      jumpi
        /* \"lib/forge-std/src/StdMath.sol\":874:902  return delta(abs(a), abs(b)) */
      swap1
      jump\t// out
        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */
    tag_3288:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      swap2
      dup3
      sub
      swap2
      dup3
      gt
      tag_514
      jumpi
        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */
      pop
        /* \"lib/forge-std/src/StdMath.sol\":874:902  return delta(abs(a), abs(b)) */
      swap1
      jump\t// out
        /* \"lib/solmate/lib/ds-test/src/test.sol\":4759:5016  function assertEq(int a, int b) internal {... */
    tag_58:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":4814:4820  a != b */
      dup2
      dup2
      sub
        /* \"lib/solmate/lib/ds-test/src/test.sol\":4810:5010  if (a != b) {... */
      tag_3295
      jumpi
        /* \"lib/solmate/lib/ds-test/src/test.sol\":4759:5016  function assertEq(int a, int b) internal {... */
      pop
      pop
      jump\t// out
        /* \"lib/solmate/lib/ds-test/src/test.sol\":4810:5010  if (a != b) {... */
    tag_3295:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_3195
      swap1
      0x40
      swap1
        /* \"lib/solmate/lib/ds-test/src/test.sol\":4841:4881  log(\"Error: a == b not satisfied [int]\") */
      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x80
      dup4
      mload
      0x20
      dup2
      mstore
      0x21
      0x20
      dup3
      add
      mstore
      0x4572726f723a2061203d3d2062206e6f7420736174697366696564205b696e74
      dup6
      dup3
      add
      mstore
      0x5d00000000000000000000000000000000000000000000000000000000000000
      0x60
      dup3
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":4841:4881  log(\"Error: a == b not satisfied [int]\") */
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      mload
      swap4
      dup3
      dup6
      mstore
      tag_3298
      dup4
      dup7
      add
      0x40
      swap1
      0x0a
      dup2
      mstore
      0x2020457870656374656400000000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_3298:
      swap1
      0x20
      dup7
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":4900:4930  log_named_int(\"  Expected\", b) */
      dup5
      0x2fe632779174374378442a8e978bccfbdcc1d6b2b0d81f7e8eb776ab2286f168
      swap6
      dup7
      swap3
      sub
      swap1
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      mload
      swap3
      dup3
      dup5
      swap4
      dup5
      mstore
      dup4
      add
      0x40
      swap1
      0x0a
      dup2
      mstore
      0x2020202041637475616c00000000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_59:
      swap1
      dup2
      0x20
      swap2
      sub
      slt
      tag_226
      jumpi
      mload
      0xffffffffffffffffffffffffffffffffffffffff
      dup2
      and
      dup2
      sub
      tag_226
      jumpi
      swap1
      jump\t// out
    tag_60:
      0xffffffffffffffffffffffffffffffffffffffff
      tag_3159
      swap5
      swap4
      0x80
      swap4
      dup4
      mstore
      0x00
      0x20
      dup5
      add
      mstore
      and
      0x40
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      0x60
      dup3
      add
      mstore
      add
      swap1
      tag_10
      jump\t// in
    tag_61:
      0x80
      swap1
      0xffffffffffffffffffffffffffffffffffffffff
      tag_3159
      swap5
      swap4
      0x02b5e3af16b1880000
      dup4
      mstore
      0x01
      0x20
      dup5
      add
      mstore
      and
      0x40
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      0x60
      dup3
      add
      mstore
      add
      swap1
      tag_10
      jump\t// in
    tag_62:
      0xffffffffffffffffffffffffffffffffffffffff
      tag_3159
      swap5
      swap4
      0x80
      swap4
      dup4
      mstore
      0x01
      0x20
      dup5
      add
      mstore
      and
      0x40
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      0x60
      dup3
      add
      mstore
      add
      swap1
      tag_10
      jump\t// in
        /* \"lib/forge-std/src/StdUtils.sol\":611:1874  function _bound(uint256 x, uint256 min, uint256 max) internal pure virtual returns (uint256 result) {... */
    tag_65:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x00
      dup1
        /* \"test/unit/ConstantProductPair.t.sol\":7982:7983  1 */
      swap2
      0x01
        /* \"lib/forge-std/src/StdUtils.sol\":729:739  min <= max */
      swap2
      dup5
      dup4
      gt
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_3307
      jumpi
        /* \"lib/forge-std/src/StdUtils.sol\":1035:1043  x >= min */
      dup3
      dup3
      lt
      dup1
      iszero
        /* \"lib/forge-std/src/StdUtils.sol\":1035:1055  x >= min && x <= max */
      dup1
      tag_3309
      jumpi
        /* \"lib/forge-std/src/StdUtils.sol\":611:1874  function _bound(uint256 x, uint256 min, uint256 max) internal pure virtual returns (uint256 result) {... */
    tag_3310:
        /* \"lib/forge-std/src/StdUtils.sol\":1031:1065  if (x >= min && x <= max) return x */
      tag_3311
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup6
      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
      dup2
      add
      gt
      tag_2198
      jumpi
        /* \"lib/forge-std/src/StdUtils.sol\":1299:1300  3 */
      0x03
        /* \"lib/forge-std/src/StdUtils.sol\":1294:1300  x <= 3 */
      dup4
      gt
      iszero
        /* \"lib/forge-std/src/StdUtils.sol\":1294:1312  x <= 3 && size > x */
      dup1
      tag_3315
      jumpi
        /* \"lib/forge-std/src/StdUtils.sol\":611:1874  function _bound(uint256 x, uint256 min, uint256 max) internal pure virtual returns (uint256 result) {... */
    tag_3316:
        /* \"lib/forge-std/src/StdUtils.sol\":1290:1328  if (x <= 3 && size > x) return min + x */
      tag_3317
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc
        /* \"lib/forge-std/src/StdUtils.sol\":1342:1362  x >= UINT256_MAX - 3 */
      dup4
      lt
      iszero
        /* \"lib/forge-std/src/StdUtils.sol\":1342:1388  x >= UINT256_MAX - 3 && size > UINT256_MAX - x */
      dup1
      tag_3319
      jumpi
        /* \"lib/forge-std/src/StdUtils.sol\":611:1874  function _bound(uint256 x, uint256 min, uint256 max) internal pure virtual returns (uint256 result) {... */
    tag_3320:
        /* \"lib/forge-std/src/StdUtils.sol\":1338:1420  if (x >= UINT256_MAX - 3 && size > UINT256_MAX - x) return max - (UINT256_MAX - x) */
      tag_3321
      jumpi
        /* \"lib/forge-std/src/StdUtils.sol\":1520:1527  x > max */
      dup6
      dup4
      gt
      iszero
      tag_3323
      jumpi
        /* \"lib/forge-std/src/StdUtils.sol\":1558:1565  x - max */
      pop
      pop
      dup4
      tag_3325
      dup2
        /* \"lib/forge-std/src/StdUtils.sol\":1593:1604  diff % size */
      tag_3326
        /* \"lib/forge-std/src/StdUtils.sol\":1558:1565  x - max */
      swap4
      tag_44
      jump\t// in
    tag_3325:
        /* \"lib/forge-std/src/StdUtils.sol\":1593:1604  diff % size */
      tag_22
      jump\t// in
    tag_3326:
        /* \"lib/forge-std/src/StdUtils.sol\":1622:1630  rem == 0 */
      swap3
      dup4
      iszero
        /* \"lib/forge-std/src/StdUtils.sol\":1618:1642  if (rem == 0) return max */
      tag_3327
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      pop
      dup3
      dup2
      add
      dup1
      swap2
      gt
      tag_3329
      jumpi
      dup3
      gt
      tag_514
      jumpi
        /* \"lib/forge-std/src/StdUtils.sol\":1656:1678  result = min + rem - 1 */
      pop
        /* \"lib/forge-std/src/StdUtils.sol\":1516:1868  if (x > max) {... */
      swap1
        /* \"lib/forge-std/src/StdUtils.sol\":611:1874  function _bound(uint256 x, uint256 min, uint256 max) internal pure virtual returns (uint256 result) {... */
      jump\t// out
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_3329:
      0x24
      dup3
      0x4e487b7100000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      mstore(0x04, 0x11)
      revert
        /* \"lib/forge-std/src/StdUtils.sol\":1618:1642  if (rem == 0) return max */
    tag_3327:
        /* \"lib/forge-std/src/StdUtils.sol\":1632:1642  return max */
      swap3
      pop
      pop
      pop
      swap1
      jump\t// out
        /* \"lib/forge-std/src/StdUtils.sol\":1516:1868  if (x > max) {... */
    tag_3323:
        /* \"lib/forge-std/src/StdUtils.sol\":1695:1868  if (x < min) {... */
      swap6
      swap5
      swap2
      swap1
      swap6
      swap4
      swap3
      swap4
      tag_3334
      jumpi
        /* \"lib/forge-std/src/StdUtils.sol\":1516:1868  if (x > max) {... */
    tag_3335:
      pop
      pop
      pop
      pop
        /* \"lib/forge-std/src/StdUtils.sol\":611:1874  function _bound(uint256 x, uint256 min, uint256 max) internal pure virtual returns (uint256 result) {... */
      jump\t// out
        /* \"lib/forge-std/src/StdUtils.sol\":1695:1868  if (x < min) {... */
    tag_3334:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      swap2
      swap3
      dup1
      swap5
      swap6
      pop
      sub
      dup4
      dup2
      gt
      tag_3336
      jumpi
        /* \"lib/forge-std/src/StdUtils.sol\":1772:1783  diff % size */
      dup2
      tag_3338
      swap2
      tag_22
      jump\t// in
    tag_3338:
        /* \"lib/forge-std/src/StdUtils.sol\":1801:1809  rem == 0 */
      dup1
      iszero
        /* \"lib/forge-std/src/StdUtils.sol\":1797:1821  if (rem == 0) return min */
      tag_3261
      jumpi
        /* \"lib/forge-std/src/StdUtils.sol\":1844:1853  max - rem */
      tag_3341
      swap2
      tag_44
      jump\t// in
    tag_3341:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap2
      dup3
      add
      dup1
      swap3
      gt
      tag_514
      jumpi
        /* \"lib/forge-std/src/StdUtils.sol\":1835:1857  result = max - rem + 1 */
      pop
        /* \"lib/forge-std/src/StdUtils.sol\":1695:1868  if (x < min) {... */
      swap1
      codesize
      dup1
      dup1
      dup1
      jump(tag_3335)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_3336:
      0x24
      dup4
      0x4e487b7100000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      mstore(0x04, 0x11)
      revert
        /* \"lib/forge-std/src/StdUtils.sol\":1338:1420  if (x >= UINT256_MAX - 3 && size > UINT256_MAX - x) return max - (UINT256_MAX - x) */
    tag_3321:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      pop
      pop
      swap1
      pop
        /* \"lib/forge-std/src/StdUtils.sol\":1397:1420  max - (UINT256_MAX - x) */
      tag_3159
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap3
      swap2
      pop
      not
        /* \"lib/forge-std/src/StdUtils.sol\":1397:1420  max - (UINT256_MAX - x) */
      swap1
      tag_44
      jump\t// in
        /* \"lib/forge-std/src/StdUtils.sol\":1342:1388  x >= UINT256_MAX - 3 && size > UINT256_MAX - x */
    tag_3319:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      pop
      dup3
      not
        /* \"lib/forge-std/src/StdUtils.sol\":1366:1388  size > UINT256_MAX - x */
      dup7
      gt
        /* \"lib/forge-std/src/StdUtils.sol\":1342:1388  x >= UINT256_MAX - 3 && size > UINT256_MAX - x */
      jump(tag_3320)
        /* \"lib/forge-std/src/StdUtils.sol\":1290:1328  if (x <= 3 && size > x) return min + x */
    tag_3317:
      pop
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      add
      swap3
      pop
      dup3
      lt
      tag_514
      jumpi
        /* \"lib/forge-std/src/StdUtils.sol\":1314:1328  return min + x */
      pop
      swap1
      jump\t// out
        /* \"lib/forge-std/src/StdUtils.sol\":1294:1312  x <= 3 && size > x */
    tag_3315:
        /* \"lib/forge-std/src/StdUtils.sol\":1304:1312  size > x */
      pop
      dup3
      dup7
      gt
        /* \"lib/forge-std/src/StdUtils.sol\":1294:1312  x <= 3 && size > x */
      jump(tag_3316)
        /* \"lib/forge-std/src/StdUtils.sol\":1031:1065  if (x >= min && x <= max) return x */
    tag_3311:
        /* \"lib/forge-std/src/StdUtils.sol\":1057:1065  return x */
      pop
      pop
      swap3
      pop
      pop
      pop
      swap1
      jump\t// out
        /* \"lib/forge-std/src/StdUtils.sol\":1035:1055  x >= min && x <= max */
    tag_3309:
        /* \"lib/forge-std/src/StdUtils.sol\":1047:1055  x <= max */
      pop
      dup6
      dup4
      gt
      iszero
        /* \"lib/forge-std/src/StdUtils.sol\":1035:1055  x >= min && x <= max */
      jump(tag_3310)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_3307:
      0x84
      mload(0x40)
      0x08c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x20
      0x04
      dup3
      add
      mstore
      0x3e
      0x24
      dup3
      add
      mstore
      0x5374645574696c7320626f756e642875696e743235362c75696e743235362c75
      0x44
      dup3
      add
      mstore
      0x696e74323536293a204d6178206973206c657373207468616e206d696e2e0000
      0x64
      dup3
      add
      mstore
      revert
        /* \"lib/solmate/lib/ds-test/src/test.sol\":6756:7015  function assertGt(uint a, uint b) internal {... */
    tag_68:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":6813:6819  a <= b */
      dup1
      iszero
        /* \"lib/solmate/lib/ds-test/src/test.sol\":6809:7009  if (a <= b) {... */
      tag_3347
      jumpi
        /* \"lib/solmate/lib/ds-test/src/test.sol\":6756:7015  function assertGt(uint a, uint b) internal {... */
      pop
      jump\t// out
        /* \"lib/solmate/lib/ds-test/src/test.sol\":6809:7009  if (a <= b) {... */
    tag_3347:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_3349
      0x40
        /* \"lib/solmate/lib/ds-test/src/test.sol\":6840:6880  log(\"Error: a > b not satisfied [uint]\") */
      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x80
      dup3
      mload
      0x20
      dup2
      mstore
      0x21
      0x20
      dup3
      add
      mstore
      0x4572726f723a2061203e2062206e6f7420736174697366696564205b75696e74
      dup5
      dup3
      add
      mstore
      0x5d00000000000000000000000000000000000000000000000000000000000000
      0x60
      dup3
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":6840:6880  log(\"Error: a > b not satisfied [uint]\") */
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup1
      mload
      swap3
      dup2
      dup5
      mstore
      tag_3350
      dup3
      dup6
      add
      0x40
      swap1
      0x09
      dup2
      mstore
      0x202056616c756520610000000000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_3350:
      swap1
      0x20
      dup6
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":6899:6929  log_named_uint(\"  Value a\", a) */
      dup4
      0xb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8
      swap5
      dup6
      swap3
      sub
      swap1
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup1
      mload
      swap2
      dup2
      dup4
      swap3
      dup4
      mstore
      dup3
      add
      0x40
      swap1
      0x09
      dup2
      mstore
      0x202056616c756520620000000000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_3349:
      0x00
      0x20
      dup4
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":6948:6978  log_named_uint(\"  Value b\", b) */
      sub
      swap1
      log1
      tag_3197
      tag_42
      jump\t// in
        /* \"lib/solmate/lib/ds-test/src/test.sol\":6756:7015  function assertGt(uint a, uint b) internal {... */
    tag_69:
        /* \"test/__fixtures/BaseTest.sol\":737:743  100e18 */
      0x056bc75e2d63100000
        /* \"lib/solmate/lib/ds-test/src/test.sol\":6813:6819  a <= b */
      dup1
      dup3
      gt
      iszero
        /* \"lib/solmate/lib/ds-test/src/test.sol\":6809:7009  if (a <= b) {... */
      tag_3352
      jumpi
        /* \"lib/solmate/lib/ds-test/src/test.sol\":6756:7015  function assertGt(uint a, uint b) internal {... */
      pop
      pop
      jump\t// out
        /* \"lib/solmate/lib/ds-test/src/test.sol\":6809:7009  if (a <= b) {... */
    tag_3352:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_3195
      swap1
      0x40
      swap1
        /* \"lib/solmate/lib/ds-test/src/test.sol\":6840:6880  log(\"Error: a > b not satisfied [uint]\") */
      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x80
      dup4
      mload
      0x20
      dup2
      mstore
      0x21
      0x20
      dup3
      add
      mstore
      0x4572726f723a2061203e2062206e6f7420736174697366696564205b75696e74
      dup6
      dup3
      add
      mstore
      0x5d00000000000000000000000000000000000000000000000000000000000000
      0x60
      dup3
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":6840:6880  log(\"Error: a > b not satisfied [uint]\") */
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      mload
      swap4
      dup3
      dup6
      mstore
      tag_3355
      dup4
      dup7
      add
      0x40
      swap1
      0x09
      dup2
      mstore
      0x202056616c756520610000000000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_3355:
      swap1
      0x20
      dup7
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":6899:6929  log_named_uint(\"  Value a\", a) */
      dup5
      0xb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8
      swap6
      dup7
      swap3
      sub
      swap1
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      mload
      swap3
      dup3
      dup5
      swap4
      dup5
      mstore
      dup4
      add
      0x40
      swap1
      0x09
      dup2
      mstore
      0x202056616c756520620000000000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
        /* \"test/unit/ConstantProductPair.t.sol\":1725:2161  function _calculateInput(uint256 aReserveIn, uint256 aReserveOut, uint256 aAmountOut, uint256 aFee)... */
    tag_70:
      swap2
        /* \"test/unit/ConstantProductPair.t.sol\":1924:1959  _constantProductPair.FEE_ACCURACY() */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":1725:2161  function _calculateInput(uint256 aReserveIn, uint256 aReserveOut, uint256 aAmountOut, uint256 aFee)... */
      swap3
      swap4
      swap2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":1924:1959  _constantProductPair.FEE_ACCURACY() */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"test/unit/ConstantProductPair.t.sol\":1924:1944  _constantProductPair */
      0x1e
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      and
      mload(0x40)
        /* \"test/unit/ConstantProductPair.t.sol\":1924:1959  _constantProductPair.FEE_ACCURACY() */
      swap6
      dup7
      dup1
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xdb6488dc00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":1924:1959  _constantProductPair.FEE_ACCURACY() */
      dup3
      mstore
      gas
      staticcall
      swap4
      dup5
      iszero
      tag_312
      jumpi
      0x00
      swap5
      tag_3359
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":1725:2161  function _calculateInput(uint256 aReserveIn, uint256 aReserveOut, uint256 aAmountOut, uint256 aFee)... */
    tag_3360:
        /* \"test/unit/ConstantProductPair.t.sol\":1990:2013  aReserveIn * aAmountOut */
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":2056:2101  (aReserveOut - aAmountOut) * (lMaxFee - aFee) */
      tag_2260
        /* \"test/unit/ConstantProductPair.t.sol\":1990:2013  aReserveIn * aAmountOut */
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":2057:2081  aReserveOut - aAmountOut */
      tag_3362
        /* \"test/unit/ConstantProductPair.t.sol\":1990:2013  aReserveIn * aAmountOut */
      dup4
        /* \"test/unit/ConstantProductPair.t.sol\":1990:2023  aReserveIn * aAmountOut * lMaxFee */
      tag_3363
        /* \"test/unit/ConstantProductPair.t.sol\":1990:2013  aReserveIn * aAmountOut */
      dup8
      tag_3364
        /* \"test/unit/ConstantProductPair.t.sol\":2125:2150  lNumerator / lDenominator */
      tag_3365
        /* \"test/unit/ConstantProductPair.t.sol\":1990:2013  aReserveIn * aAmountOut */
      swap11
      swap10
      swap8
        /* \"test/unit/ConstantProductPair.t.sol\":2086:2100  lMaxFee - aFee */
      tag_3366
        /* \"test/unit/ConstantProductPair.t.sol\":1990:2013  aReserveIn * aAmountOut */
      swap8
      tag_17
      jump\t// in
    tag_3364:
        /* \"test/unit/ConstantProductPair.t.sol\":1990:2023  aReserveIn * aAmountOut * lMaxFee */
      tag_17
      jump\t// in
    tag_3363:
        /* \"test/unit/ConstantProductPair.t.sol\":2057:2081  aReserveOut - aAmountOut */
      swap7
      tag_44
      jump\t// in
    tag_3362:
        /* \"test/unit/ConstantProductPair.t.sol\":2086:2100  lMaxFee - aFee */
      swap3
      tag_44
      jump\t// in
    tag_3366:
        /* \"test/unit/ConstantProductPair.t.sol\":2056:2101  (aReserveOut - aAmountOut) * (lMaxFee - aFee) */
      swap1
      tag_17
      jump\t// in
        /* \"test/unit/ConstantProductPair.t.sol\":2125:2150  lNumerator / lDenominator */
    tag_3365:
        /* \"test/unit/ConstantProductPair.t.sol\":2153:2154  1 */
      0x01
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      add
      dup1
      swap2
      gt
      tag_505
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":1725:2161  function _calculateInput(uint256 aReserveIn, uint256 aReserveOut, uint256 aAmountOut, uint256 aFee)... */
      swap1
      jump\t// out
        /* \"test/unit/ConstantProductPair.t.sol\":1924:1959  _constantProductPair.FEE_ACCURACY() */
    tag_3359:
      swap1
      swap2
      swap4
      0x20
      dup3
      returndatasize
      dup3
      gt
      tag_3369
      jumpi
    tag_3370:
      dup2
      tag_3371
      0x20
      swap4
      dup4
      tag_6
      jump\t// in
    tag_3371:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_196
      jumpi
      pop
      mload
      swap3
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":2056:2101  (aReserveOut - aAmountOut) * (lMaxFee - aFee) */
      tag_2260
        /* \"test/unit/ConstantProductPair.t.sol\":1924:1959  _constantProductPair.FEE_ACCURACY() */
      jump(tag_3360)
    tag_3369:
      returndatasize
      swap2
      pop
      jump(tag_3370)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_71:
      swap2
      swap1
      dup3
      0x40
      swap2
      sub
      slt
      tag_226
      jumpi
      0x20
      dup3
      mload
      swap3
      add
      mload
      swap1
      jump\t// out
    tag_72:
      mload
      swap1
      dup2
      0x06
      signextend
      dup3
      sub
      tag_226
      jumpi
      jump\t// out
    tag_73:
      swap1
      dup2
      0x80
      swap2
      sub
      slt
      tag_226
      jumpi
      mload(0x40)
      swap1
      0x80
      dup3
      add
      dup3
      dup2
      lt
      0xffffffffffffffff
      dup3
      gt
      or
      tag_3120
      jumpi
      0x40
      mstore
      dup1
      mload
      dup1
      0x0d
      signextend
      dup2
      sub
      tag_226
      jumpi
      tag_3384
      swap2
      0x60
      swap2
      dup5
      mstore
      tag_3385
      0x20
      dup3
      add
      tag_72
      jump\t// in
    tag_3385:
      0x20
      dup6
      add
      mstore
      tag_3386
      0x40
      dup3
      add
      tag_72
      jump\t// in
    tag_3386:
      0x40
      dup6
      add
      mstore
      add
      tag_27
      jump\t// in
    tag_3384:
      0x60
      dup3
      add
      mstore
      swap1
      jump\t// out
        /* \"lib/solmate/lib/ds-test/src/test.sol\":3255:3412  function assertTrue(bool condition) internal {... */
    tag_76:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":3314:3324  !condition */
      iszero
        /* \"lib/solmate/lib/ds-test/src/test.sol\":3310:3406  if (!condition) {... */
      tag_3387
      jumpi
        /* \"lib/solmate/lib/ds-test/src/test.sol\":3255:3412  function assertTrue(bool condition) internal {... */
      jump\t// out
        /* \"lib/solmate/lib/ds-test/src/test.sol\":3310:3406  if (!condition) {... */
    tag_3387:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":3345:3375  log(\"Error: Assertion Failed\") */
      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x60
      mload(0x40)
      0x20
      dup2
      mstore
      0x17
      0x20
      dup3
      add
      mstore
      0x4572726f723a20417373657274696f6e204661696c6564000000000000000000
      0x40
      dup3
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":3345:3375  log(\"Error: Assertion Failed\") */
      log1
      tag_3197
      tag_42
      jump\t// in
        /* \"test/__fixtures/BaseTest.sol\":5158:5264  function _stepTime(uint256 aTime) internal {... */
    tag_77:
      0x00
        /* \"test/__fixtures/BaseTest.sol\":5234:5235  1 */
      0x01
        /* \"test/__fixtures/BaseTest.sol\":5219:5231  block.number */
      number
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      add
        /* \"test/__fixtures/BaseTest.sol\":5219:5231  block.number */
      swap1
      dup2
      number
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      gt
      tag_514
      jumpi
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"test/__fixtures/BaseTest.sol\":5211:5236  vm.roll(block.number + 1) */
      swap2
      dup3
      extcodesize
      iszero
      tag_255
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/__fixtures/BaseTest.sol\":5211:5236  vm.roll(block.number + 1) */
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x1f7b4f3000000000000000000000000000000000000000000000000000000000
        /* \"test/__fixtures/BaseTest.sol\":5211:5236  vm.roll(block.number + 1) */
      dup3
      mstore
      0x04
      dup3
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"test/__fixtures/BaseTest.sol\":5211:5236  vm.roll(block.number + 1) */
      dup2
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
        /* \"test/__fixtures/BaseTest.sol\":5211:5236  vm.roll(block.number + 1) */
      dup2
      dup4
      dup8
      gas
      call
      dup1
      iszero
      tag_219
      jumpi
      tag_3396
      jumpi
        /* \"test/__fixtures/BaseTest.sol\":5158:5264  function _stepTime(uint256 aTime) internal {... */
    tag_3397:
        /* \"lib/forge-std/src/StdCheats.sol\":17583:17598  block.timestamp */
      pop
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":23002:23003  5 */
      0x05
        /* \"lib/forge-std/src/StdCheats.sol\":17583:17598  block.timestamp */
      timestamp
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      add
        /* \"lib/forge-std/src/StdCheats.sol\":17583:17598  block.timestamp */
      dup1
      timestamp
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      gt
      tag_505
      jumpi
        /* \"lib/forge-std/src/StdCheats.sol\":17575:17606  vm.warp(block.timestamp + time) */
      dup2
      extcodesize
      iszero
      tag_291
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      swap2
      0x24
      dup4
      swap3
      mload(0x40)
        /* \"lib/forge-std/src/StdCheats.sol\":17575:17606  vm.warp(block.timestamp + time) */
      swap5
      dup6
      swap4
      dup5
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xe5d6bf0200000000000000000000000000000000000000000000000000000000
        /* \"lib/forge-std/src/StdCheats.sol\":17575:17606  vm.warp(block.timestamp + time) */
      dup5
      mstore
        /* \"test/__fixtures/BaseTest.sol\":5211:5236  vm.roll(block.number + 1) */
      0x04
        /* \"lib/forge-std/src/StdCheats.sol\":17575:17606  vm.warp(block.timestamp + time) */
      dup5
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"lib/forge-std/src/StdCheats.sol\":17575:17606  vm.warp(block.timestamp + time) */
      gas
      call
      dup1
      iszero
      tag_219
      jumpi
      tag_3404
      jumpi
        /* \"test/__fixtures/BaseTest.sol\":5158:5264  function _stepTime(uint256 aTime) internal {... */
      pop
      pop
      jump\t// out
        /* \"lib/forge-std/src/StdCheats.sol\":17575:17606  vm.warp(block.timestamp + time) */
    tag_3404:
      tag_3406
      dup3
      swap2
      tag_1
      jump\t// in
    tag_3406:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_196
      jumpi
        /* \"test/__fixtures/BaseTest.sol\":5158:5264  function _stepTime(uint256 aTime) internal {... */
      pop
      jump\t// out
        /* \"test/__fixtures/BaseTest.sol\":5211:5236  vm.roll(block.number + 1) */
    tag_3396:
      tag_3409
      swap1
      tag_1
      jump\t// in
    tag_3409:
      codesize
      jump(tag_3397)
        /* \"test/__fixtures/BaseTest.sol\":5158:5264  function _stepTime(uint256 aTime) internal {... */
    tag_78:
      0x00
        /* \"test/__fixtures/BaseTest.sol\":5234:5235  1 */
      0x01
        /* \"test/__fixtures/BaseTest.sol\":5219:5231  block.number */
      number
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      add
        /* \"test/__fixtures/BaseTest.sol\":5219:5231  block.number */
      swap1
      dup2
      number
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      gt
      tag_514
      jumpi
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"test/__fixtures/BaseTest.sol\":5211:5236  vm.roll(block.number + 1) */
      swap2
      dup3
      extcodesize
      iszero
      tag_255
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/__fixtures/BaseTest.sol\":5211:5236  vm.roll(block.number + 1) */
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x1f7b4f3000000000000000000000000000000000000000000000000000000000
        /* \"test/__fixtures/BaseTest.sol\":5211:5236  vm.roll(block.number + 1) */
      dup3
      mstore
      0x04
      dup3
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"test/__fixtures/BaseTest.sol\":5211:5236  vm.roll(block.number + 1) */
      dup2
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
        /* \"test/__fixtures/BaseTest.sol\":5211:5236  vm.roll(block.number + 1) */
      dup2
      dup4
      dup8
      gas
      call
      dup1
      iszero
      tag_219
      jumpi
      tag_3416
      jumpi
        /* \"test/__fixtures/BaseTest.sol\":5158:5264  function _stepTime(uint256 aTime) internal {... */
    tag_3417:
        /* \"lib/forge-std/src/StdCheats.sol\":17583:17598  block.timestamp */
      pop
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":18347:18349  10 */
      0x0a
        /* \"lib/forge-std/src/StdCheats.sol\":17583:17598  block.timestamp */
      timestamp
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      add
        /* \"lib/forge-std/src/StdCheats.sol\":17583:17598  block.timestamp */
      dup1
      timestamp
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      gt
      tag_505
      jumpi
        /* \"lib/forge-std/src/StdCheats.sol\":17575:17606  vm.warp(block.timestamp + time) */
      dup2
      extcodesize
      iszero
      tag_291
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      swap2
      0x24
      dup4
      swap3
      mload(0x40)
        /* \"lib/forge-std/src/StdCheats.sol\":17575:17606  vm.warp(block.timestamp + time) */
      swap5
      dup6
      swap4
      dup5
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xe5d6bf0200000000000000000000000000000000000000000000000000000000
        /* \"lib/forge-std/src/StdCheats.sol\":17575:17606  vm.warp(block.timestamp + time) */
      dup5
      mstore
        /* \"test/__fixtures/BaseTest.sol\":5211:5236  vm.roll(block.number + 1) */
      0x04
        /* \"lib/forge-std/src/StdCheats.sol\":17575:17606  vm.warp(block.timestamp + time) */
      dup5
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"lib/forge-std/src/StdCheats.sol\":17575:17606  vm.warp(block.timestamp + time) */
      gas
      call
      dup1
      iszero
      tag_219
      jumpi
      tag_3404
      jumpi
        /* \"test/__fixtures/BaseTest.sol\":5158:5264  function _stepTime(uint256 aTime) internal {... */
      pop
      pop
      jump\t// out
        /* \"test/__fixtures/BaseTest.sol\":5211:5236  vm.roll(block.number + 1) */
    tag_3416:
      tag_3429
      swap1
      tag_1
      jump\t// in
    tag_3429:
      codesize
      jump(tag_3417)
        /* \"test/__fixtures/BaseTest.sol\":5158:5264  function _stepTime(uint256 aTime) internal {... */
    tag_79:
      0x00
        /* \"test/unit/ConstantProductPair.t.sol\":12777:12778  1 */
      0x01
        /* \"test/__fixtures/BaseTest.sol\":5219:5231  block.number */
      number
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      add
        /* \"test/__fixtures/BaseTest.sol\":5219:5231  block.number */
      swap1
      dup2
      number
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      gt
      tag_514
      jumpi
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"test/__fixtures/BaseTest.sol\":5211:5236  vm.roll(block.number + 1) */
      swap2
      dup3
      extcodesize
      iszero
      tag_255
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"test/__fixtures/BaseTest.sol\":5211:5236  vm.roll(block.number + 1) */
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x1f7b4f3000000000000000000000000000000000000000000000000000000000
        /* \"test/__fixtures/BaseTest.sol\":5211:5236  vm.roll(block.number + 1) */
      dup3
      mstore
      0x04
      dup3
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"test/__fixtures/BaseTest.sol\":5211:5236  vm.roll(block.number + 1) */
      dup2
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
        /* \"test/__fixtures/BaseTest.sol\":5211:5236  vm.roll(block.number + 1) */
      dup2
      dup4
      dup8
      gas
      call
      dup1
      iszero
      tag_219
      jumpi
      tag_3436
      jumpi
        /* \"test/__fixtures/BaseTest.sol\":5158:5264  function _stepTime(uint256 aTime) internal {... */
    tag_3437:
        /* \"lib/forge-std/src/StdCheats.sol\":17583:17598  block.timestamp */
      pop
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":12777:12778  1 */
      0x01
        /* \"lib/forge-std/src/StdCheats.sol\":17583:17598  block.timestamp */
      timestamp
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      add
        /* \"lib/forge-std/src/StdCheats.sol\":17583:17598  block.timestamp */
      dup1
      timestamp
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      gt
      tag_505
      jumpi
        /* \"lib/forge-std/src/StdCheats.sol\":17575:17606  vm.warp(block.timestamp + time) */
      dup2
      extcodesize
      iszero
      tag_291
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      swap2
      0x24
      dup4
      swap3
      mload(0x40)
        /* \"lib/forge-std/src/StdCheats.sol\":17575:17606  vm.warp(block.timestamp + time) */
      swap5
      dup6
      swap4
      dup5
      swap3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xe5d6bf0200000000000000000000000000000000000000000000000000000000
        /* \"lib/forge-std/src/StdCheats.sol\":17575:17606  vm.warp(block.timestamp + time) */
      dup5
      mstore
        /* \"test/__fixtures/BaseTest.sol\":5211:5236  vm.roll(block.number + 1) */
      0x04
        /* \"lib/forge-std/src/StdCheats.sol\":17575:17606  vm.warp(block.timestamp + time) */
      dup5
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"lib/forge-std/src/StdCheats.sol\":17575:17606  vm.warp(block.timestamp + time) */
      gas
      call
      dup1
      iszero
      tag_219
      jumpi
      tag_3404
      jumpi
        /* \"test/__fixtures/BaseTest.sol\":5158:5264  function _stepTime(uint256 aTime) internal {... */
      pop
      pop
      jump\t// out
        /* \"test/__fixtures/BaseTest.sol\":5211:5236  vm.roll(block.number + 1) */
    tag_3436:
      tag_3449
      swap1
      tag_1
      jump\t// in
    tag_3449:
      codesize
      jump(tag_3437)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_80:
      swap1
      dup1
      0x1f
      dup4
      add
      slt
      iszero
      tag_226
      jumpi
      dup2
      mload
      swap1
      0xffffffffffffffff
      dup3
      gt
      tag_3120
      jumpi
      dup2
      0x05
      shl
      mload(0x40)
      swap4
      0x20
      swap4
      tag_3454
      dup6
      dup5
      add
      dup8
      tag_6
      jump\t// in
    tag_3454:
      dup6
      mstore
      dup4
      dup1
      dup7
      add
      swap3
      dup3
      add
      add
      swap3
      dup4
      gt
      tag_226
      jumpi
      dup4
      add
      swap1
    tag_3457:
      dup3
      dup3
      lt
      tag_3458
      jumpi
      pop
      pop
      pop
      pop
      swap1
      jump\t// out
    tag_3458:
      dup2
      mload
      dup2
      mstore
      swap1
      dup4
      add
      swap1
      dup4
      add
      jump(tag_3457)
    tag_81:
      swap2
      swap1
      swap2
      0x40
      dup2
      dup5
      sub
      slt
      tag_226
      jumpi
      dup1
      mload
      swap3
      0xffffffffffffffff
      swap4
      dup5
      dup2
      gt
      tag_226
      jumpi
      dup2
      tag_3464
      swap2
      dup5
      add
      tag_80
      jump\t// in
    tag_3464:
      swap4
      0x20
      dup4
      add
      mload
      swap1
      dup2
      gt
      tag_226
      jumpi
      tag_3159
      swap3
      add
      tag_80
      jump\t// in
    tag_82:
      dup1
      mload
        /* \"test/__fixtures/BaseTest.sol\":5973:5974  1 */
      0x01
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      lt
      iszero
      tag_3170
      jumpi
      0x40
      add
      swap1
      jump\t// out
    tag_83:
      dup1
      mload
      iszero
      tag_3170
      jumpi
      0x20
      add
      swap1
      jump\t// out
    tag_84:
      dup1
      mload
      dup3
      lt
      iszero
      tag_3170
      jumpi
      0x20
      swap2
      0x05
      shl
      add
      add
      swap1
      jump\t// out
        /* \"lib/solmate/lib/ds-test/src/test.sol\":11169:11423  function assertLt(int a, int b) internal {... */
    tag_86:
      swap1
        /* \"lib/solmate/lib/ds-test/src/test.sol\":11224:11230  a >= b */
      dup1
      dup3
      slt
      iszero
        /* \"lib/solmate/lib/ds-test/src/test.sol\":11220:11417  if (a >= b) {... */
      tag_3474
      jumpi
        /* \"lib/solmate/lib/ds-test/src/test.sol\":11169:11423  function assertLt(int a, int b) internal {... */
      pop
      pop
      jump\t// out
        /* \"lib/solmate/lib/ds-test/src/test.sol\":11220:11417  if (a >= b) {... */
    tag_3474:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_3195
      swap1
      0x40
      swap1
        /* \"lib/solmate/lib/ds-test/src/test.sol\":11251:11290  log(\"Error: a < b not satisfied [int]\") */
      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x60
      dup4
      mload
      0x20
      dup2
      mstore
      0x20
      dup1
      dup3
      add
      mstore
      0x4572726f723a2061203c2062206e6f7420736174697366696564205b696e745d
      dup6
      dup3
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":11251:11290  log(\"Error: a < b not satisfied [int]\") */
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      mload
      swap4
      dup3
      dup6
      mstore
      tag_3477
      dup4
      dup7
      add
      0x40
      swap1
      0x09
      dup2
      mstore
      0x202056616c756520610000000000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_3477:
      swap1
      0x20
      dup7
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":11309:11338  log_named_int(\"  Value a\", a) */
      dup5
      0x2fe632779174374378442a8e978bccfbdcc1d6b2b0d81f7e8eb776ab2286f168
      swap6
      dup7
      swap3
      sub
      swap1
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      mload
      swap3
      dup3
      dup5
      swap4
      dup5
      mstore
      dup4
      add
      0x40
      swap1
      0x09
      dup2
      mstore
      0x202056616c756520620000000000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_88:
      swap1
      0x0d
      signextend
      swap1
      0x0d
      signextend
      sub
      swap1
      0x7fffffffffffffffffffffffffff
      dup3
      sgt
      0xffffffffffffffffffffffffffffffffffff8000000000000000000000000000
      dup4
      slt
      or
      tag_505
      jumpi
      jump\t// out
    tag_89:
      0xffffffff
      swap2
      dup3
      and
      swap1
      dup3
      and
      sub
      swap2
      swap1
      dup3
      gt
      tag_505
      jumpi
      jump\t// out
    tag_90:
      0x0d
      signextend
      swap1
      0x0d
      signextend
      swap1
      dup2
      iszero
      tag_3172
      jumpi
      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
      dup3
      eq
      0xffffffffffffffffffffffffffffffffffff8000000000000000000000000000
      dup3
      eq
      and
      tag_505
      jumpi
      sdiv
      swap1
      jump\t// out
        /* \"lib/forge-std/src/StdAssertions.sol\":5049:5775  function assertApproxEqRel(... */
    tag_91:
      swap1
        /* \"lib/forge-std/src/StdAssertions.sol\":5240:5246  b == 0 */
      dup1
      iszero
        /* \"lib/forge-std/src/StdAssertions.sol\":5236:5269  if (b == 0) return assertEq(a, b) */
      tag_3487
      jumpi
        /* \"lib/forge-std/src/StdMath.sol\":607:612  a > b */
      dup1
      dup3
      gt
      iszero
      tag_3489
      jumpi
        /* \"lib/forge-std/src/StdMath.sol\":615:620  a - b */
      tag_3491
      dup2
      dup4
      tag_44
      jump\t// in
    tag_3491:
        /* \"lib/forge-std/src/StdMath.sol\":1144:1148  1e18 */
      0x0de0b6b3a7640000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      dup2
      dup2
      mul
      swap2
      dup2
      dup4
      div
      eq
      swap1
      iszero
      or
      iszero
      tag_505
      jumpi
        /* \"lib/forge-std/src/StdMath.sol\":1133:1152  absDelta * 1e18 / b */
      dup2
      tag_3495
      swap2
      tag_21
      jump\t// in
    tag_3495:
        /* \"test/unit/ConstantProductPair.t.sol\":17212:17221  0.0001e18 */
      0x5af3107a4000
        /* \"lib/forge-std/src/StdAssertions.sol\":5389:5419  percentDelta > maxPercentDelta */
      dup2
      gt
        /* \"lib/forge-std/src/StdAssertions.sol\":5385:5769  if (percentDelta > maxPercentDelta) {... */
      tag_3496
      jumpi
        /* \"lib/forge-std/src/StdAssertions.sol\":5049:5775  function assertApproxEqRel(... */
      pop
      pop
      pop
      jump\t// out
        /* \"lib/forge-std/src/StdAssertions.sol\":5385:5769  if (percentDelta > maxPercentDelta) {... */
    tag_3496:
        /* \"lib/forge-std/src/StdAssertions.sol\":5682:5738  log_named_decimal_uint(\"     % Delta\", percentDelta, 18) */
      tag_3498
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap2
      0x40
      swap4
        /* \"lib/forge-std/src/StdAssertions.sol\":5440:5481  log(\"Error: a ~= b not satisfied [uint]\") */
      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x80
      dup7
      mload
      0x20
      dup2
      mstore
      0x22
      0x20
      dup3
      add
      mstore
      0x4572726f723a2061207e3d2062206e6f7420736174697366696564205b75696e
      dup9
      dup3
      add
      mstore
      0x745d000000000000000000000000000000000000000000000000000000000000
      0x60
      dup3
      add
      mstore
        /* \"lib/forge-std/src/StdAssertions.sol\":5440:5481  log(\"Error: a ~= b not satisfied [uint]\") */
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup5
      mload
      swap2
      dup6
      dup4
      mstore
      tag_3499
      dup7
      dup5
      add
      0x40
      swap1
      0x0c
      dup2
      mstore
      0x2020202045787065637465640000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_3499:
      swap1
      0x20
      dup5
      add
      mstore
        /* \"lib/forge-std/src/StdAssertions.sol\":5500:5533  log_named_uint(\"    Expected\", b) */
      dup3
      0xb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8
      swap4
      dup5
      swap3
      sub
      swap1
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup5
      mload
      dup1
      swap2
      dup7
      dup3
      mstore
      tag_3500
      dup8
      dup4
      add
      0x40
      swap1
      0x0c
      dup2
      mstore
      0x20202020202041637475616c0000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_3500:
      swap1
      0x20
      dup4
      add
      mstore
        /* \"lib/forge-std/src/StdAssertions.sol\":5552:5585  log_named_uint(\"      Actual\", a) */
      sub
      swap1
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      mload
        /* \"lib/forge-std/src/StdAssertions.sol\":5604:5663  log_named_decimal_uint(\" Max % Delta\", maxPercentDelta, 18) */
      swap3
      0xeb8ba43ced7537421946bd43e828b8b2b8428927aa8f801c13d934bf11aca57b
      dup5
      dup1
      tag_3501
      dup4
      swap8
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      0x60
      dup3
      mstore
      0x0c
      0x60
      dup4
      add
      mstore
      0x204d617820252044656c74610000000000000000000000000000000000000000
      0x80
      dup4
      add
      mstore
        /* \"lib/forge-std/src/StdAssertions.sol\":6831:6833  18 */
      0x12
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40
      0xa0
      dup5
      add
      swap4
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      0x5af3107a4000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
      dup3
      add
      mstore
      add
      mstore
      jump
        /* \"lib/forge-std/src/StdAssertions.sol\":5604:5663  log_named_decimal_uint(\" Max % Delta\", maxPercentDelta, 18) */
    tag_3501:
      sub
      swap1
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
        /* \"lib/forge-std/src/StdAssertions.sol\":5682:5738  log_named_decimal_uint(\"     % Delta\", percentDelta, 18) */
      swap2
      dup3
      swap2
      dup3
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40
        /* \"lib/forge-std/src/StdAssertions.sol\":6831:6833  18 */
      0x12
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap2
      swap4
      swap3
      swap4
      0x60
      dup2
      mstore
      0x0c
      0x60
      dup3
      add
      mstore
      0x2020202020252044656c74610000000000000000000000000000000000000000
      0x80
      dup3
      add
      mstore
      0xa0
      dup2
      add
      swap5
      0x20
      dup3
      add
      mstore
      add
      mstore
      jump
        /* \"lib/forge-std/src/StdAssertions.sol\":5682:5738  log_named_decimal_uint(\"     % Delta\", percentDelta, 18) */
    tag_3498:
      sub
      swap1
      log1
      tag_3197
      tag_42
      jump\t// in
        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */
    tag_3489:
        /* \"lib/forge-std/src/StdMath.sol\":623:628  b - a */
      tag_3503
      dup3
      dup3
      tag_44
      jump\t// in
    tag_3503:
        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */
      jump(tag_3491)
        /* \"lib/forge-std/src/StdAssertions.sol\":5236:5269  if (b == 0) return assertEq(a, b) */
    tag_3487:
        /* \"lib/forge-std/src/StdAssertions.sol\":5267:5268  b */
      tag_3197
      swap2
      tag_39
      jump\t// in
        /* \"lib/forge-std/src/StdAssertions.sol\":5049:5775  function assertApproxEqRel(... */
    tag_92:
        /* \"lib/forge-std/src/StdAssertions.sol\":5240:5246  b == 0 */
      dup1
      iszero
        /* \"lib/forge-std/src/StdAssertions.sol\":5236:5269  if (b == 0) return assertEq(a, b) */
      tag_3505
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffff
      swap1
      0x00
        /* \"lib/forge-std/src/StdMath.sol\":607:612  a > b */
      dup2
      dup4
      gt
      iszero
      tag_3507
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      pop
      dup1
      dup3
      sub
      dup3
      dup2
      gt
      tag_505
      jumpi
        /* \"lib/forge-std/src/StdMath.sol\":1144:1148  1e18 */
      0x0de0b6b3a7640000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      dup2
      dup2
      mul
      swap2
      dup2
      dup4
      div
      eq
      swap1
      iszero
      or
      iszero
      tag_505
      jumpi
        /* \"lib/forge-std/src/StdMath.sol\":1133:1152  absDelta * 1e18 / b */
      dup2
      tag_3495
      swap2
      tag_21
      jump\t// in
        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */
    tag_3507:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffff00000000000000000000000001
      dup3
      add
      swap1
      dup3
      dup3
      gt
      tag_514
      jumpi
        /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */
      pop
      jump(tag_3491)
        /* \"lib/forge-std/src/StdAssertions.sol\":5236:5269  if (b == 0) return assertEq(a, b) */
    tag_3505:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffff
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5259:5265  a != b */
      dup2
      dup2
      sub
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5255:5458  if (a != b) {... */
      tag_3193
      jumpi
        /* \"lib/forge-std/src/StdAssertions.sol\":5248:5269  return assertEq(a, b) */
      pop
      pop
      jump\t// out
        /* \"src/libraries/LogExpMath.sol\":2685:2691  130e18 */
    tag_93:
      iszero
      tag_3529
      jumpi
      jump\t// out
    tag_3529:
      0x64
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"src/libraries/LogExpMath.sol\":2685:2691  130e18 */
      0x08c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x20
      0x04
      dup3
      add
      mstore
      0x14
      0x24
      dup3
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"src/libraries/LogExpMath.sol\":2685:2691  130e18 */
      0x454d3a20494e56414c49445f4558504f4e454e54000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x44
      dup3
      add
        /* \"src/libraries/LogExpMath.sol\":2685:2691  130e18 */
      mstore
      revert
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
    tag_94:
      dup1
      iszero
      tag_3172
      jumpi
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      0xc097ce7bc90715b34b9f1000000000
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      sdiv
      swap1
      jump\t// out
    tag_95:
      dup2
      iszero
      tag_3172
      jumpi
      sdiv
      swap1
      jump\t// out
        /* \"src/libraries/LogExpMath.sol\":7623:13596  function exp(int256 x) internal pure returns (int256) {... */
    tag_96:
        /* \"src/libraries/LogExpMath.sol\":2736:2742  -41e18 */
      0xfffffffffffffffffffffffffffffffffffffffffffffffdc702bd3a30fc0000
        /* \"src/libraries/LogExpMath.sol\":7719:7744  x >= MIN_NATURAL_EXPONENT */
      dup2
      slt
      iszero
        /* \"src/libraries/LogExpMath.sol\":7719:7773  x >= MIN_NATURAL_EXPONENT && x <= MAX_NATURAL_EXPONENT */
      dup1
      tag_3535
      jumpi
        /* \"src/libraries/LogExpMath.sol\":7623:13596  function exp(int256 x) internal pure returns (int256) {... */
    tag_3536:
        /* \"src/libraries/LogExpMath.sol\":7711:7798  require(x >= MIN_NATURAL_EXPONENT && x <= MAX_NATURAL_EXPONENT, \"EM: INVALID_EXPONENT\") */
      tag_3537
      swap1
      tag_93
      jump\t// in
    tag_3537:
        /* \"src/libraries/LogExpMath.sol\":7820:7821  0 */
      0x00
        /* \"src/libraries/LogExpMath.sol\":7816:7821  x < 0 */
      dup2
      slt
        /* \"src/libraries/LogExpMath.sol\":7812:8204  if (x < 0) {... */
      tag_3538
      jumpi
        /* \"src/libraries/LogExpMath.sol\":10072:10075  100 */
      0x64
      swap1
        /* \"src/libraries/LogExpMath.sol\":3125:3152  128_000_000_000_000_000_000 */
      0x06f05b59d3b2000000
        /* \"src/libraries/LogExpMath.sol\":9657:9664  x >= x0 */
      dup2
      slt
        /* \"src/libraries/LogExpMath.sol\":3125:3152  128_000_000_000_000_000_000 */
      tag_3540
      jumpi
        /* \"src/libraries/LogExpMath.sol\":3324:3350  64_000_000_000_000_000_000 */
      0xfffffffffffffffffffffffffffffffffffffffffffffff90fa4a62c4e000000
      add
        /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
      0x056bc75e2d63100000
        /* \"src/libraries/LogExpMath.sol\":9709:9721  firstAN = a0 */
      dup3
        /* \"src/libraries/LogExpMath.sol\":3187:3261  38_877_084_059_945_950_922_200_000_000_000_000_000_000_000_000_000_000_000 */
      0x0195e54c5dd42177f53a27172fa9ec630262827000000000
        /* \"src/libraries/LogExpMath.sol\":9653:9905  if (x >= x0) {... */
      swap3
    tag_3542:
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      mul
        /* \"src/libraries/LogExpMath.sol\":10315:10338  int256 product = ONE_20 */
      dup2
        /* \"src/libraries/LogExpMath.sol\":10357:10364  x >= x2 */
      swap1
        /* \"src/libraries/LogExpMath.sol\":3503:3532  3_200_000_000_000_000_000_000 */
      0xad78ebc5ac62000000
        /* \"src/libraries/LogExpMath.sol\":10357:10364  x >= x2 */
      dup2
      slt
      iszero
        /* \"src/libraries/LogExpMath.sol\":10353:10457  if (x >= x2) {... */
      tag_3543
      jumpi
        /* \"src/libraries/LogExpMath.sol\":9653:9905  if (x >= x0) {... */
    tag_3544:
        /* \"src/libraries/LogExpMath.sol\":10474:10481  x >= x3 */
      dup1
        /* \"src/libraries/LogExpMath.sol\":3650:3679  1_600_000_000_000_000_000_000 */
      0x56bc75e2d631000000
        /* \"src/libraries/LogExpMath.sol\":10474:10481  x >= x3 */
      dup5
      swap3
      slt
      iszero
        /* \"src/libraries/LogExpMath.sol\":10470:10574  if (x >= x3) {... */
      tag_3545
      jumpi
        /* \"src/libraries/LogExpMath.sol\":9653:9905  if (x >= x0) {... */
    tag_3546:
        /* \"src/libraries/LogExpMath.sol\":3787:3814  800_000_000_000_000_000_000 */
      0x2b5e3af16b18800000
        /* \"src/libraries/LogExpMath.sol\":10591:10598  x >= x4 */
      dup2
      slt
      iszero
        /* \"src/libraries/LogExpMath.sol\":10587:10691  if (x >= x4) {... */
      tag_3547
      jumpi
        /* \"src/libraries/LogExpMath.sol\":9653:9905  if (x >= x0) {... */
    tag_3548:
        /* \"src/libraries/LogExpMath.sol\":3918:3945  400_000_000_000_000_000_000 */
      0x15af1d78b58c400000
        /* \"src/libraries/LogExpMath.sol\":10708:10715  x >= x5 */
      dup2
      slt
      iszero
        /* \"src/libraries/LogExpMath.sol\":10704:10808  if (x >= x5) {... */
      tag_3549
      jumpi
        /* \"src/libraries/LogExpMath.sol\":9653:9905  if (x >= x0) {... */
    tag_3550:
        /* \"src/libraries/LogExpMath.sol\":4047:4074  200_000_000_000_000_000_000 */
      0x0ad78ebc5ac6200000
        /* \"src/libraries/LogExpMath.sol\":10825:10832  x >= x6 */
      dup2
      slt
      iszero
        /* \"src/libraries/LogExpMath.sol\":10821:10925  if (x >= x6) {... */
      tag_3551
      jumpi
        /* \"src/libraries/LogExpMath.sol\":9653:9905  if (x >= x0) {... */
    tag_3552:
        /* \"src/libraries/LogExpMath.sol\":10942:10949  x >= x7 */
      dup2
      dup2
      slt
      iszero
        /* \"src/libraries/LogExpMath.sol\":10938:11042  if (x >= x7) {... */
      tag_3553
      jumpi
        /* \"src/libraries/LogExpMath.sol\":9653:9905  if (x >= x0) {... */
    tag_3554:
        /* \"src/libraries/LogExpMath.sol\":4301:4327  50_000_000_000_000_000_000 */
      0x02b5e3af16b1880000
        /* \"src/libraries/LogExpMath.sol\":11059:11066  x >= x8 */
      dup2
      slt
      iszero
        /* \"src/libraries/LogExpMath.sol\":11055:11159  if (x >= x8) {... */
      tag_3555
      jumpi
        /* \"src/libraries/LogExpMath.sol\":9653:9905  if (x >= x0) {... */
    tag_3556:
        /* \"src/libraries/LogExpMath.sol\":4428:4454  25_000_000_000_000_000_000 */
      0x015af1d78b58c40000
        /* \"src/libraries/LogExpMath.sol\":11176:11183  x >= x9 */
      dup2
      slt
      iszero
        /* \"src/libraries/LogExpMath.sol\":11172:11276  if (x >= x9) {... */
      tag_3557
      jumpi
        /* \"src/libraries/LogExpMath.sol\":9653:9905  if (x >= x0) {... */
    tag_3558:
        /* \"src/libraries/LogExpMath.sol\":12152:12153  2 */
      0x02
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      dup3
      dup3
      dup1
      mul
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      sdiv
      sdiv
        /* \"src/libraries/LogExpMath.sol\":12230:12231  3 */
      0x03
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      dup4
      dup4
      dup4
      mul
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      sdiv
      sdiv
        /* \"src/libraries/LogExpMath.sol\":12308:12309  4 */
      0x04
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      dup5
      dup5
      dup4
      mul
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      sdiv
      sdiv
        /* \"src/libraries/LogExpMath.sol\":12386:12387  5 */
      0x05
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      dup6
      dup6
      dup4
      mul
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      sdiv
      sdiv
        /* \"src/libraries/LogExpMath.sol\":12464:12465  6 */
      0x06
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      dup7
      dup7
      dup4
      mul
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      sdiv
      sdiv
        /* \"src/libraries/LogExpMath.sol\":12542:12543  7 */
      0x07
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      dup8
      dup8
      dup4
      mul
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      sdiv
      sdiv
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      swap1
        /* \"src/libraries/LogExpMath.sol\":12620:12621  8 */
      0x08
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      dup9
      dup9
      dup5
      mul
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      sdiv
      sdiv
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      swap3
        /* \"src/libraries/LogExpMath.sol\":12698:12699  9 */
      0x09
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      dup10
      dup10
      dup7
      mul
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      sdiv
      sdiv
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      swap5
        /* \"src/libraries/LogExpMath.sol\":12776:12778  10 */
      0x0a
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      dup11
      dup11
      dup9
      mul
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      sdiv
      sdiv
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      swap7
        /* \"src/libraries/LogExpMath.sol\":12855:12857  11 */
      0x0b
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      dup12
      dup12
      dup11
      mul
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      sdiv
      sdiv
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      swap9
        /* \"src/libraries/LogExpMath.sol\":12934:12936  12 */
      0x0c
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      dup13
      dup13
      dup13
      mul
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      sdiv
      sdiv
        /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */
      swap11
      add
      add
      add
      add
      add
      add
      add
      add
      add
      add
      add
      add
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      mul
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      sdiv
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      mul
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      sdiv
        /* \"src/libraries/LogExpMath.sol\":7623:13596  function exp(int256 x) internal pure returns (int256) {... */
      swap1
      jump\t// out
        /* \"src/libraries/LogExpMath.sol\":11172:11276  if (x >= x9) {... */
    tag_3557:
        /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */
      0x06f5f1775788937937
        /* \"src/libraries/LogExpMath.sol\":3324:3350  64_000_000_000_000_000_000 */
      0xfffffffffffffffffffffffffffffffffffffffffffffffea50e2874a73c0000
      dup4
      swap3
      add
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      swap4
      mul
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      sdiv
        /* \"src/libraries/LogExpMath.sol\":11172:11276  if (x >= x9) {... */
      swap2
      jump(tag_3558)
        /* \"src/libraries/LogExpMath.sol\":11055:11159  if (x >= x8) {... */
    tag_3555:
        /* \"src/libraries/LogExpMath.sol\":4363:4390  164_872_127_070_012_814_685 */
      0x08f00f760a4b2db55d
        /* \"src/libraries/LogExpMath.sol\":3324:3350  64_000_000_000_000_000_000 */
      0xfffffffffffffffffffffffffffffffffffffffffffffffd4a1c50e94e780000
      dup4
      swap3
      add
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      swap4
      mul
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      sdiv
        /* \"src/libraries/LogExpMath.sol\":11055:11159  if (x >= x8) {... */
      swap2
      jump(tag_3556)
        /* \"src/libraries/LogExpMath.sol\":10938:11042  if (x >= x7) {... */
    tag_3553:
        /* \"src/libraries/LogExpMath.sol\":4236:4263  271_828_182_845_904_523_536 */
      0x0ebc5fb41746121110
        /* \"src/libraries/LogExpMath.sol\":3324:3350  64_000_000_000_000_000_000 */
      0xfffffffffffffffffffffffffffffffffffffffffffffffa9438a1d29cf00000
      dup4
      swap3
      add
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      swap4
      mul
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      sdiv
        /* \"src/libraries/LogExpMath.sol\":10938:11042  if (x >= x7) {... */
      swap2
      jump(tag_3554)
        /* \"src/libraries/LogExpMath.sol\":10821:10925  if (x >= x6) {... */
    tag_3551:
        /* \"src/libraries/LogExpMath.sol\":4109:4136  738_905_609_893_065_022_723 */
      0x280e60114edb805d03
        /* \"src/libraries/LogExpMath.sol\":3324:3350  64_000_000_000_000_000_000 */
      0xfffffffffffffffffffffffffffffffffffffffffffffff5287143a539e00000
      dup4
      swap3
      add
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      swap4
      mul
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      sdiv
        /* \"src/libraries/LogExpMath.sol\":10821:10925  if (x >= x6) {... */
      swap2
      jump(tag_3552)
        /* \"src/libraries/LogExpMath.sol\":10704:10808  if (x >= x5) {... */
    tag_3549:
        /* \"src/libraries/LogExpMath.sol\":3980:4009  5_459_815_003_314_423_907_810 */
      0x0127fa27722cc06cc5e2
        /* \"src/libraries/LogExpMath.sol\":3324:3350  64_000_000_000_000_000_000 */
      0xffffffffffffffffffffffffffffffffffffffffffffffea50e2874a73c00000
      dup4
      swap3
      add
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      swap4
      mul
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      sdiv
        /* \"src/libraries/LogExpMath.sol\":10704:10808  if (x >= x5) {... */
      swap2
      jump(tag_3550)
        /* \"src/libraries/LogExpMath.sol\":10587:10691  if (x >= x4) {... */
    tag_3547:
        /* \"src/libraries/LogExpMath.sol\":3849:3880  298_095_798_704_172_827_474_000 */
      0x3f1fce3da636ea5cf850
        /* \"src/libraries/LogExpMath.sol\":3324:3350  64_000_000_000_000_000_000 */
      0xffffffffffffffffffffffffffffffffffffffffffffffd4a1c50e94e7800000
      dup4
      swap3
      add
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      swap4
      mul
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      sdiv
        /* \"src/libraries/LogExpMath.sol\":10587:10691  if (x >= x4) {... */
      swap2
      jump(tag_3548)
        /* \"src/libraries/LogExpMath.sol\":10470:10574  if (x >= x3) {... */
    tag_3545:
        /* \"src/libraries/LogExpMath.sol\":3714:3749  888_611_052_050_787_263_676_000_000 */
      0x02df0ab5a80a22c61ab5a700
        /* \"src/libraries/LogExpMath.sol\":3324:3350  64_000_000_000_000_000_000 */
      0xffffffffffffffffffffffffffffffffffffffffffffffa9438a1d29cf000000
      dup4
      swap3
      add
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      swap4
      mul
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      sdiv
        /* \"src/libraries/LogExpMath.sol\":10470:10574  if (x >= x3) {... */
      swap2
      jump(tag_3546)
        /* \"src/libraries/LogExpMath.sol\":10353:10457  if (x >= x2) {... */
    tag_3543:
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      0x01855144814a7ff805980ff0084000
      swap2
      pop
        /* \"src/libraries/LogExpMath.sol\":3324:3350  64_000_000_000_000_000_000 */
      0xffffffffffffffffffffffffffffffffffffffffffffff5287143a539e000000
      add
        /* \"src/libraries/LogExpMath.sol\":10353:10457  if (x >= x2) {... */
      jump(tag_3544)
        /* \"src/libraries/LogExpMath.sol\":9653:9905  if (x >= x0) {... */
    tag_3540:
        /* \"src/libraries/LogExpMath.sol\":3324:3350  64_000_000_000_000_000_000 */
      0x03782dace9d9000000
        /* \"src/libraries/LogExpMath.sol\":9746:9753  x >= x1 */
      dup2
      slt
        /* \"src/libraries/LogExpMath.sol\":3324:3350  64_000_000_000_000_000_000 */
      tag_3559
      jumpi
      0xfffffffffffffffffffffffffffffffffffffffffffffffc87d2531627000000
      add
        /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
      0x056bc75e2d63100000
        /* \"src/libraries/LogExpMath.sol\":9798:9810  firstAN = a1 */
      dup3
        /* \"src/libraries/LogExpMath.sol\":3385:3422  6_235_149_080_811_616_882_910_000_000 */
      0x1425982cf597cd205cef7380
        /* \"src/libraries/LogExpMath.sol\":9742:9905  if (x >= x1) {... */
      swap3
        /* \"src/libraries/LogExpMath.sol\":9653:9905  if (x >= x0) {... */
      jump(tag_3542)
        /* \"src/libraries/LogExpMath.sol\":9742:9905  if (x >= x1) {... */
    tag_3559:
        /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
      0x056bc75e2d63100000
        /* \"src/libraries/LogExpMath.sol\":9849:9860  firstAN = 1 */
      dup3
        /* \"src/libraries/LogExpMath.sol\":9859:9860  1 */
      0x01
        /* \"src/libraries/LogExpMath.sol\":9742:9905  if (x >= x1) {... */
      swap3
        /* \"src/libraries/LogExpMath.sol\":9653:9905  if (x >= x0) {... */
      jump(tag_3542)
        /* \"src/libraries/LogExpMath.sol\":7812:8204  if (x < 0) {... */
    tag_3538:
        /* \"src/libraries/LogExpMath.sol\":8181:8188  exp(-x) */
      tag_3562
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      swap1
        /* \"src/libraries/LogExpMath.sol\":7820:7821  0 */
      0x00
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      sub
        /* \"src/libraries/LogExpMath.sol\":8181:8188  exp(-x) */
      tag_96
      jump\t// in
    tag_3562:
        /* \"src/libraries/LogExpMath.sol\":8161:8188  (ONE_18 * ONE_18) / exp(-x) */
      tag_3159
      swap1
      tag_94
      jump\t// in
        /* \"src/libraries/LogExpMath.sol\":7719:7773  x >= MIN_NATURAL_EXPONENT && x <= MAX_NATURAL_EXPONENT */
    tag_3535:
      pop
        /* \"src/libraries/LogExpMath.sol\":2685:2691  130e18 */
      0x070c1cc73b00c80000
        /* \"src/libraries/LogExpMath.sol\":7748:7773  x <= MAX_NATURAL_EXPONENT */
      dup2
      sgt
      iszero
        /* \"src/libraries/LogExpMath.sol\":7719:7773  x >= MIN_NATURAL_EXPONENT && x <= MAX_NATURAL_EXPONENT */
      jump(tag_3536)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_98:
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":18347:18349  10 */
      0x0a
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      mul
      swap2
      dup1
      dup4
      sdiv
        /* \"test/unit/ConstantProductPair.t.sol\":18347:18349  10 */
      0x0a
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      eq
      swap1
      iszero
      or
      iszero
      tag_505
      jumpi
      jump\t// out
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5021:5197  function assertEq(int a, int b, string memory err) internal {... */
    tag_99:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5095:5101  a != b */
      dup2
      dup2
      sub
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5091:5191  if (a != b) {... */
      tag_3566
      jumpi
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5021:5197  function assertEq(int a, int b, string memory err) internal {... */
      pop
      pop
      pop
      jump\t// out
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5091:5191  if (a != b) {... */
    tag_3566:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5122:5152  log_named_string(\"Error\", err) */
      0x280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_3568
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5178:5179  b */
      tag_3197
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap5
      mload(0x40)
      swap2
      dup3
      swap2
      0x40
      dup4
      mstore
      0x05
      0x40
      dup5
      add
      mstore
      0x4572726f72000000000000000000000000000000000000000000000000000000
      0x60
      dup5
      add
      mstore
      0x80
      0x20
      dup5
      add
      mstore
      0x80
      dup4
      add
      swap1
      tag_10
      jump\t// in
    tag_3568:
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5122:5152  log_named_string(\"Error\", err) */
      sub
      swap1
      log1
        /* \"lib/solmate/lib/ds-test/src/test.sol\":5178:5179  b */
      tag_58
      jump\t// in
        /* \"src/libraries/LogCompression.sol\":2015:2401  function toLowResLog(uint256 value) internal pure returns (int256) {... */
    tag_100:
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      0x5af3107a4000
        /* \"src/libraries/LogExpMath.sol\":15101:15107  _ln(a) */
      tag_3570
        /* \"test/unit/ConstantProductPair.t.sol\":19219:19226  0.25e18 */
      0x03782dace9d90000
        /* \"src/libraries/LogExpMath.sol\":15101:15107  _ln(a) */
      tag_101
      jump\t// in
    tag_3570:
        /* \"src/libraries/LogCompression.sol\":2252:2253  0 */
      0x00
        /* \"src/libraries/LogCompression.sol\":2247:2253  ln > 0 */
      dup2
      sgt
        /* \"src/libraries/LogCompression.sol\":2252:2253  0 */
      iszero
      tag_3571
      jumpi
        /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
      0x2d79883d2000
        /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */
      add
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      sdiv
        /* \"src/libraries/LogCompression.sol\":2015:2401  function toLowResLog(uint256 value) internal pure returns (int256) {... */
      swap1
      jump\t// out
        /* \"src/libraries/LogCompression.sol\":2247:2325  ln > 0 ? ln + _HALF_LOG_COMPRESSION_FACTOR : ln - _HALF_LOG_COMPRESSION_FACTOR */
    tag_3571:
        /* \"src/libraries/LogExpMath.sol\":3324:3350  64_000_000_000_000_000_000 */
      0xffffffffffffffffffffffffffffffffffffffffffffffffffffd28677c2e000
      add
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      sdiv
        /* \"src/libraries/LogCompression.sol\":2015:2401  function toLowResLog(uint256 value) internal pure returns (int256) {... */
      swap1
      jump\t// out
        /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
    tag_101:
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      0x0de0b6b3a7640000
        /* \"src/libraries/LogExpMath.sol\":15343:15353  a < ONE_18 */
      dup2
      slt
        /* \"src/libraries/LogExpMath.sol\":15339:15760  if (a < ONE_18) {... */
      tag_3574
      jumpi
        /* \"src/libraries/LogExpMath.sol\":17686:17689  100 */
      0x64
        /* \"src/libraries/LogExpMath.sol\":17231:17245  int256 sum = 0 */
      swap1
        /* \"src/libraries/LogExpMath.sol\":17244:17245  0 */
      0x00
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      0x1600ef3172e58d2e933ec884fde10064c63b5372d805e203c0000000000000
        /* \"src/libraries/LogExpMath.sol\":17263:17279  a >= a0 * ONE_18 */
      dup3
      slt
      iszero
        /* \"src/libraries/LogExpMath.sol\":17259:17385  if (a >= a0 * ONE_18) {... */
      tag_3576
      jumpi
        /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
    tag_3577:
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      0x011798004d755d3c8bc8e03204cf44619e000000
        /* \"src/libraries/LogExpMath.sol\":17403:17419  a >= a1 * ONE_18 */
      dup3
      slt
      iszero
        /* \"src/libraries/LogExpMath.sol\":17399:17525  if (a >= a1 * ONE_18) {... */
      tag_3578
      jumpi
        /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
    tag_3579:
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      dup3
      mul
      swap1
      dup3
      mul
      dup2
        /* \"src/libraries/LogExpMath.sol\":3567:3612  7_896_296_018_268_069_516_100_000_000_000_000 */
      0x01855144814a7ff805980ff0084000
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      dup3
        /* \"src/libraries/LogExpMath.sol\":17846:17853  a >= a2 */
      dup2
      dup2
      slt
      iszero
        /* \"src/libraries/LogExpMath.sol\":17842:17936  if (a >= a2) {... */
      tag_3580
      jumpi
        /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
    tag_3581:
        /* \"src/libraries/LogExpMath.sol\":3714:3749  888_611_052_050_787_263_676_000_000 */
      pop
      pop
      pop
      0x02df0ab5a80a22c61ab5a700
        /* \"src/libraries/LogExpMath.sol\":17954:17961  a >= a3 */
      dup1
      dup3
      slt
      iszero
        /* \"src/libraries/LogExpMath.sol\":17950:18044  if (a >= a3) {... */
      tag_3582
      jumpi
        /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
    tag_3583:
        /* \"src/libraries/LogExpMath.sol\":3849:3880  298_095_798_704_172_827_474_000 */
      pop
      0x3f1fce3da636ea5cf850
        /* \"src/libraries/LogExpMath.sol\":18062:18069  a >= a4 */
      dup1
      dup3
      slt
      iszero
        /* \"src/libraries/LogExpMath.sol\":18058:18152  if (a >= a4) {... */
      tag_3584
      jumpi
        /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
    tag_3585:
        /* \"src/libraries/LogExpMath.sol\":3980:4009  5_459_815_003_314_423_907_810 */
      pop
      0x0127fa27722cc06cc5e2
        /* \"src/libraries/LogExpMath.sol\":18170:18177  a >= a5 */
      dup1
      dup3
      slt
      iszero
        /* \"src/libraries/LogExpMath.sol\":18166:18260  if (a >= a5) {... */
      tag_3586
      jumpi
        /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
    tag_3587:
        /* \"src/libraries/LogExpMath.sol\":4109:4136  738_905_609_893_065_022_723 */
      pop
      0x280e60114edb805d03
        /* \"src/libraries/LogExpMath.sol\":18278:18285  a >= a6 */
      dup1
      dup3
      slt
      iszero
        /* \"src/libraries/LogExpMath.sol\":18274:18368  if (a >= a6) {... */
      tag_3588
      jumpi
        /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
    tag_3589:
        /* \"src/libraries/LogExpMath.sol\":4236:4263  271_828_182_845_904_523_536 */
      pop
      0x0ebc5fb41746121110
        /* \"src/libraries/LogExpMath.sol\":18386:18393  a >= a7 */
      dup1
      dup3
      slt
      iszero
        /* \"src/libraries/LogExpMath.sol\":18382:18476  if (a >= a7) {... */
      tag_3590
      jumpi
        /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
    tag_3591:
        /* \"src/libraries/LogExpMath.sol\":4363:4390  164_872_127_070_012_814_685 */
      pop
      0x08f00f760a4b2db55d
        /* \"src/libraries/LogExpMath.sol\":18494:18501  a >= a8 */
      dup1
      dup3
      slt
      iszero
        /* \"src/libraries/LogExpMath.sol\":18490:18584  if (a >= a8) {... */
      tag_3592
      jumpi
        /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
    tag_3593:
        /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */
      pop
      0x06f5f1775788937937
        /* \"src/libraries/LogExpMath.sol\":18602:18609  a >= a9 */
      dup1
      dup3
      slt
      iszero
        /* \"src/libraries/LogExpMath.sol\":18598:18692  if (a >= a9) {... */
      tag_3594
      jumpi
        /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
    tag_3595:
        /* \"src/libraries/LogExpMath.sol\":4619:4646  113_314_845_306_682_631_683 */
      pop
      0x06248f33704b286603
        /* \"src/libraries/LogExpMath.sol\":18710:18718  a >= a10 */
      dup1
      dup3
      slt
      iszero
        /* \"src/libraries/LogExpMath.sol\":18706:18803  if (a >= a10) {... */
      tag_3596
      jumpi
        /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
    tag_3597:
        /* \"src/libraries/LogExpMath.sol\":4748:4775  106_449_445_891_785_942_956 */
      pop
      0x05c548670b9510e7ac
        /* \"src/libraries/LogExpMath.sol\":18821:18829  a >= a11 */
      dup1
      dup3
      slt
      iszero
        /* \"src/libraries/LogExpMath.sol\":18817:18914  if (a >= a11) {... */
      tag_3598
      jumpi
        /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
    tag_3599:
        /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
      pop
        /* \"src/libraries/LogExpMath.sol\":19470:19508  ((a - ONE_20) * ONE_20) / (a + ONE_20) */
      tag_3600
        /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
      0x056bc75e2d63100000
        /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */
      swap2
      dup3
        /* \"src/libraries/LogExpMath.sol\":3324:3350  64_000_000_000_000_000_000 */
      0xfffffffffffffffffffffffffffffffffffffffffffffffa9438a1d29cf00000
        /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */
      dup2
      dup4
      add
        /* \"src/libraries/LogExpMath.sol\":3324:3350  64_000_000_000_000_000_000 */
      swap3
      add
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      mul
        /* \"src/libraries/LogExpMath.sol\":19470:19508  ((a - ONE_20) * ONE_20) / (a + ONE_20) */
      tag_95
      jump\t// in
    tag_3600:
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      swap1
      dup1
      dup3
      dup1
      mul
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      sdiv
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      swap2
      dup2
      dup4
      dup3
      mul
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      sdiv
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      dup3
      dup5
      dup3
      mul
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      sdiv
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      swap2
        /* \"src/libraries/LogExpMath.sol\":19948:19949  3 */
      0x03
        /* \"src/libraries/LogExpMath.sol\":20029:20030  5 */
      0x05
        /* \"src/libraries/LogExpMath.sol\":20110:20111  7 */
      0x07
        /* \"src/libraries/LogExpMath.sol\":20191:20192  9 */
      0x09
        /* \"src/libraries/LogExpMath.sol\":20272:20274  11 */
      0x0b
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      dup9
      dup11
      dup10
      mul
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      sdiv
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      swap9
      dup1
      dup12
      dup12
      mul
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      sdiv
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      swap11
      dup12
      mul
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      sdiv
      sdiv
      swap9
      sdiv
      swap7
      sdiv
      swap5
      sdiv
      swap3
      sdiv
        /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */
      add
      add
      add
      add
      add
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      0x01
      shl
        /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */
      add
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      sdiv
        /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
      swap1
      jump\t// out
        /* \"src/libraries/LogExpMath.sol\":18817:18914  if (a >= a11) {... */
    tag_3598:
        /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
      0x056bc75e2d63100000
        /* \"src/libraries/LogExpMath.sol\":4686:4711  6_250_000_000_000_000_000 */
      0x56bc75e2d6310000
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      swap3
      mul
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      sdiv
        /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */
      swap2
      add
        /* \"src/libraries/LogExpMath.sol\":18817:18914  if (a >= a11) {... */
      swap1
      codesize
      jump(tag_3599)
        /* \"src/libraries/LogExpMath.sol\":18706:18803  if (a >= a10) {... */
    tag_3596:
        /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
      0x056bc75e2d63100000
        /* \"src/libraries/LogExpMath.sol\":4556:4582  12_500_000_000_000_000_000 */
      0xad78ebc5ac620000
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      swap3
      mul
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      sdiv
        /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */
      swap2
      add
        /* \"src/libraries/LogExpMath.sol\":18706:18803  if (a >= a10) {... */
      swap1
      codesize
      jump(tag_3597)
        /* \"src/libraries/LogExpMath.sol\":18598:18692  if (a >= a9) {... */
    tag_3594:
        /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
      0x056bc75e2d63100000
        /* \"src/libraries/LogExpMath.sol\":4428:4454  25_000_000_000_000_000_000 */
      0x015af1d78b58c40000
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      swap3
      mul
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      sdiv
        /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */
      swap2
      add
        /* \"src/libraries/LogExpMath.sol\":18598:18692  if (a >= a9) {... */
      swap1
      codesize
      jump(tag_3595)
        /* \"src/libraries/LogExpMath.sol\":18490:18584  if (a >= a8) {... */
    tag_3592:
        /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
      0x056bc75e2d63100000
        /* \"src/libraries/LogExpMath.sol\":4301:4327  50_000_000_000_000_000_000 */
      0x02b5e3af16b1880000
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      swap3
      mul
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      sdiv
        /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */
      swap2
      add
        /* \"src/libraries/LogExpMath.sol\":18490:18584  if (a >= a8) {... */
      swap1
      codesize
      jump(tag_3593)
        /* \"src/libraries/LogExpMath.sol\":18382:18476  if (a >= a7) {... */
    tag_3590:
        /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
      0x056bc75e2d63100000
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      dup1
      swap3
      mul
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      sdiv
        /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */
      swap2
      add
        /* \"src/libraries/LogExpMath.sol\":18382:18476  if (a >= a7) {... */
      swap1
      codesize
      jump(tag_3591)
        /* \"src/libraries/LogExpMath.sol\":18274:18368  if (a >= a6) {... */
    tag_3588:
        /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
      0x056bc75e2d63100000
        /* \"src/libraries/LogExpMath.sol\":4047:4074  200_000_000_000_000_000_000 */
      0x0ad78ebc5ac6200000
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      swap3
      mul
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      sdiv
        /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */
      swap2
      add
        /* \"src/libraries/LogExpMath.sol\":18274:18368  if (a >= a6) {... */
      swap1
      codesize
      jump(tag_3589)
        /* \"src/libraries/LogExpMath.sol\":18166:18260  if (a >= a5) {... */
    tag_3586:
        /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
      0x056bc75e2d63100000
        /* \"src/libraries/LogExpMath.sol\":3918:3945  400_000_000_000_000_000_000 */
      0x15af1d78b58c400000
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      swap3
      mul
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      sdiv
        /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */
      swap2
      add
        /* \"src/libraries/LogExpMath.sol\":18166:18260  if (a >= a5) {... */
      swap1
      codesize
      jump(tag_3587)
        /* \"src/libraries/LogExpMath.sol\":18058:18152  if (a >= a4) {... */
    tag_3584:
        /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
      0x056bc75e2d63100000
        /* \"src/libraries/LogExpMath.sol\":3787:3814  800_000_000_000_000_000_000 */
      0x2b5e3af16b18800000
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      swap3
      mul
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      sdiv
        /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */
      swap2
      add
        /* \"src/libraries/LogExpMath.sol\":18058:18152  if (a >= a4) {... */
      swap1
      codesize
      jump(tag_3585)
        /* \"src/libraries/LogExpMath.sol\":17950:18044  if (a >= a3) {... */
    tag_3582:
        /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
      0x056bc75e2d63100000
        /* \"src/libraries/LogExpMath.sol\":3650:3679  1_600_000_000_000_000_000_000 */
      0x56bc75e2d631000000
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      swap3
      mul
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      sdiv
        /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */
      swap2
      add
        /* \"src/libraries/LogExpMath.sol\":17950:18044  if (a >= a3) {... */
      swap1
      codesize
      jump(tag_3583)
        /* \"src/libraries/LogExpMath.sol\":17842:17936  if (a >= a2) {... */
    tag_3580:
        /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
      0x056bc75e2d63100000
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      swap2
      swap3
      swap5
      pop
        /* \"src/libraries/LogExpMath.sol\":3503:3532  3_200_000_000_000_000_000_000 */
      0xad78ebc5ac62000000
        /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
      swap4
      pop
      mul
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      sdiv
        /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */
      swap2
      add
        /* \"src/libraries/LogExpMath.sol\":17842:17936  if (a >= a2) {... */
      swap1
      codesize
      dup1
      dup1
      jump(tag_3581)
        /* \"src/libraries/LogExpMath.sol\":17399:17525  if (a >= a1 * ONE_18) {... */
    tag_3578:
        /* \"src/libraries/LogExpMath.sol\":3385:3422  6_235_149_080_811_616_882_910_000_000 */
      0x1425982cf597cd205cef7380
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      swap1
      swap2
      sdiv
      swap1
        /* \"src/libraries/LogExpMath.sol\":3324:3350  64_000_000_000_000_000_000 */
      0x03782dace9d9000000
        /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */
      add
        /* \"src/libraries/LogExpMath.sol\":17399:17525  if (a >= a1 * ONE_18) {... */
      jump(tag_3579)
        /* \"src/libraries/LogExpMath.sol\":17259:17385  if (a >= a0 * ONE_18) {... */
    tag_3576:
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      pop
        /* \"src/libraries/LogExpMath.sol\":3187:3261  38_877_084_059_945_950_922_200_000_000_000_000_000_000_000_000_000_000_000 */
      0x0195e54c5dd42177f53a27172fa9ec630262827000000000
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      swap1
      sdiv
        /* \"src/libraries/LogExpMath.sol\":3125:3152  128_000_000_000_000_000_000 */
      0x06f05b59d3b2000000
        /* \"src/libraries/LogExpMath.sol\":17259:17385  if (a >= a0 * ONE_18) {... */
      jump(tag_3577)
        /* \"src/libraries/LogExpMath.sol\":15339:15760  if (a < ONE_18) {... */
    tag_3574:
        /* \"src/libraries/LogExpMath.sol\":15722:15743  (ONE_18 * ONE_18) / a */
      tag_3601
        /* \"src/libraries/LogExpMath.sol\":15718:15744  _ln((ONE_18 * ONE_18) / a) */
      tag_3602
        /* \"src/libraries/LogExpMath.sol\":15722:15743  (ONE_18 * ONE_18) / a */
      swap2
      tag_94
      jump\t// in
    tag_3601:
        /* \"src/libraries/LogExpMath.sol\":15718:15744  _ln((ONE_18 * ONE_18) / a) */
      tag_101
      jump\t// in
    tag_3602:
      0x00
        /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
      sub
        /* \"src/libraries/LogExpMath.sol\":15709:15745  return (-_ln((ONE_18 * ONE_18) / a)) */
      swap1
      jump\t// out
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_102:
      swap1
      0x06
      signextend
      swap1
      0x06
      signextend
      sub
      swap1
      0x7fffffffffffff
      dup3
      sgt
      0xffffffffffffffffffffffffffffffffffffffffffffffffff80000000000000
      dup4
      slt
      or
      tag_505
      jumpi
      jump\t// out
        /* \"lib/solmate/lib/ds-test/src/test.sol\":10722:10981  function assertLt(uint a, uint b) internal {... */
    tag_103:
        /* \"test/unit/ConstantProductPair.t.sol\":23630:23639  1.0025e18 */
      0x0de9987043544000
        /* \"lib/solmate/lib/ds-test/src/test.sol\":10779:10785  a >= b */
      dup1
      dup3
      lt
      iszero
        /* \"lib/solmate/lib/ds-test/src/test.sol\":10775:10975  if (a >= b) {... */
      tag_3605
      jumpi
        /* \"lib/solmate/lib/ds-test/src/test.sol\":10722:10981  function assertLt(uint a, uint b) internal {... */
      pop
      pop
      jump\t// out
        /* \"lib/solmate/lib/ds-test/src/test.sol\":10775:10975  if (a >= b) {... */
    tag_3605:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_3195
      swap1
      0x40
      swap1
        /* \"lib/solmate/lib/ds-test/src/test.sol\":10806:10846  log(\"Error: a < b not satisfied [uint]\") */
      0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x80
      dup4
      mload
      0x20
      dup2
      mstore
      0x21
      0x20
      dup3
      add
      mstore
      0x4572726f723a2061203c2062206e6f7420736174697366696564205b75696e74
      dup6
      dup3
      add
      mstore
      0x5d00000000000000000000000000000000000000000000000000000000000000
      0x60
      dup3
      add
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":10806:10846  log(\"Error: a < b not satisfied [uint]\") */
      log1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      mload
      swap4
      dup3
      dup6
      mstore
      tag_3355
      dup4
      dup7
      add
      0x40
      swap1
      0x09
      dup2
      mstore
      0x202056616c756520610000000000000000000000000000000000000000000000
      0x20
      dup3
      add
      mstore
      add
      swap1
      jump
    tag_104:
      mload(0x40)
      swap1
        /* \"lib/forge-std/src/StdStorage.sol\":5052:5062  self._keys */
      0x07
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      dup1
      dup4
      mstore
      dup3
      0x20
      swap2
      dup3
      dup3
      add
      swap1
        /* \"lib/forge-std/src/StdStorage.sol\":5052:5062  self._keys */
      0x07
      0x00
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
      0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688
      swap4
      0x00
      swap1
    tag_3610:
      dup3
      dup3
      lt
      tag_3611
      jumpi
      pop
      pop
      pop
      tag_3197
      swap3
      pop
      sub
      dup4
      tag_6
      jump\t// in
    tag_3611:
      dup6
      sload
      dup5
      mstore
      0x01
      swap6
      dup7
      add
      swap6
      dup9
      swap6
      pop
      swap4
      dup2
      add
      swap4
      swap1
      swap2
      add
      swap1
      jump(tag_3610)
    tag_107:
      swap1
      swap2
      dup3
      mload
      0x20
      dup1
      swap5
      add
      swap1
      0x00
    tag_3614:
      dup6
      dup3
      dup3
      lt
      tag_3615
      jumpi
      pop
      pop
      pop
      pop
      dup2
      mstore
      add
      swap1
      jump\t// out
    tag_3615:
      dup4
      mload
      dup7
      mstore
      swap5
      dup6
      add
      swap5
      swap1
      swap3
      add
      swap2
      0x01
      add
      jump(tag_3614)
        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
    tag_108:
      pop
      0xc4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      0x08c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x20
      0x04
      dup3
      add
      mstore
      0x6f
      0x24
      dup3
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      0x73746453746f726167652066696e642853746453746f72616765293a20506163
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x44
      dup3
      add
        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      mstore
      0x6b656420736c6f742e205468697320776f756c642063617573652064616e6765
      0x64
      dup3
      add
      mstore
      0x726f7573206f76657277726974696e6720616e642063757272656e746c792069
      0x84
      dup3
      add
      mstore
      0x736e277420737570706f727465642e0000000000000000000000000000000000
      0xa4
      dup3
      add
      mstore
      revert
    tag_109:
        /* \"lib/forge-std/src/StdStorage.sol\":5052:5062  self._keys */
      0x07
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      0x00
        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      dup1
        /* \"lib/forge-std/src/StdStorage.sol\":5052:5062  self._keys */
      0x07
        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      sstore
      dup2
      tag_3617
      jumpi
      pop
      pop
      jump\t// out
    tag_3617:
        /* \"lib/forge-std/src/StdStorage.sol\":5052:5062  self._keys */
      0x07
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      mstore
      0xa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688
        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      swap2
      dup3
      add
      swap2
    tag_3619:
      dup3
      dup2
      lt
      tag_3620
      jumpi
      pop
      pop
      pop
      jump\t// out
    tag_3620:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      dup2
      sstore
        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      0x01
      add
      jump(tag_3619)
        /* \"lib/forge-std/src/StdStorage.sol\":1264:4469  function find(StdStorage storage self) internal returns (uint256) {... */
    tag_111:
        /* \"lib/forge-std/src/StdStorage.sol\":1354:1366  self._target */
      0x0a
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      0x00
        /* \"lib/forge-std/src/StdStorage.sol\":1390:1399  self._sig */
      0x08
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      0xe0
      shl
        /* \"lib/forge-std/src/StdStorage.sol\":1431:1442  self._depth */
      0x09
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sload
      swap1
      tag_3622
      tag_104
      jump\t// in
    tag_3622:
      swap1
      0xffffffffffffffffffffffffffffffffffffffff
      dup6
      and
      dup5
      mstore
        /* \"lib/forge-std/src/StdStorage.sol\":1536:1546  self.finds */
      0x06
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
      mstore
      0x40
      dup5
      keccak256
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      0xffffffff00000000000000000000000000000000000000000000000000000000
      dup3
      and
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup6
      mstore
      0x20
      mstore
      0x40
      dup5
      keccak256
      mload(0x40)
      0x20
        /* \"lib/forge-std/src/StdStorage.sol\":1568:1602  abi.encodePacked(ins, field_depth) */
      dup2
      add
      swap1
      tag_3623
      dup2
      tag_3624
      dup9
      dup9
      dup7
      tag_107
      jump\t// in
    tag_3624:
      sub
      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
      dup2
      add
      dup4
      mstore
      dup3
      tag_6
      jump\t// in
    tag_3623:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
        /* \"lib/forge-std/src/StdStorage.sol\":1558:1603  keccak256(abi.encodePacked(ins, field_depth)) */
      swap1
      keccak256
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup6
      mstore
      0x20
      mstore
      0xff
      0x40
      dup6
      keccak256
      sload
      and
        /* \"lib/forge-std/src/StdStorage.sol\":1532:1706  if (self.finds[who][fsig][keccak256(abi.encodePacked(ins, field_depth))]) {... */
      tag_3625
      jumpi
        /* \"lib/forge-std/src/StdStorage.sol\":1735:1771  abi.encodePacked(fsig, flatten(ins)) */
      tag_3624
      tag_3628
        /* \"lib/forge-std/src/StdStorage.sol\":1758:1770  flatten(ins) */
      tag_3629
      dup5
      tag_113
      jump\t// in
    tag_3629:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"lib/forge-std/src/StdStorage.sol\":1735:1771  abi.encodePacked(fsig, flatten(ins)) */
      swap3
      dup4
      swap2
      dup6
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
        /* \"lib/forge-std/src/StdStorage.sol\":1735:1771  abi.encodePacked(fsig, flatten(ins)) */
      dup5
      add
      tag_12
      jump\t// in
    tag_3628:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"lib/forge-std/src/StdStorage.sol\":1781:1792  vm.record() */
      extcodesize
      iszero
      tag_249
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      0x266cf10900000000000000000000000000000000000000000000000000000000
        /* \"lib/forge-std/src/StdStorage.sol\":1781:1792  vm.record() */
      dup2
      mstore
      dup6
      dup2
        /* \"lib/forge-std/src/StdStorage.sol\":1431:1442  self._depth */
      0x04
        /* \"lib/forge-std/src/StdStorage.sol\":1781:1792  vm.record() */
      dup2
      dup4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"lib/forge-std/src/StdStorage.sol\":1781:1792  vm.record() */
      gas
      call
      dup1
      iszero
      tag_376
      jumpi
      tag_3634
      jumpi
        /* \"lib/forge-std/src/StdStorage.sol\":1264:4469  function find(StdStorage storage self) internal returns (uint256) {... */
    tag_3635:
        /* \"lib/forge-std/src/StdStorage.sol\":1862:1882  who.staticcall(cald) */
      pop
      dup5
      dup1
      dup3
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
        /* \"lib/forge-std/src/StdStorage.sol\":1735:1771  abi.encodePacked(fsig, flatten(ins)) */
      dup5
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      dup11
      and
        /* \"lib/forge-std/src/StdStorage.sol\":1862:1882  who.staticcall(cald) */
      gas
      staticcall
      pop
      tag_3636
      tag_13
      jump\t// in
    tag_3636:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
      dup6
      and
      dup6
      sub
      tag_2588
      jumpi
        /* \"lib/forge-std/src/StdStorage.sol\":1903:1941  bytesToBytes32(rdat, 32 * field_depth) */
      tag_3639
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      dup6
        /* \"lib/forge-std/src/StdCheats.sol\":19864:19872  stdstore */
      0x05
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      shl
        /* \"lib/forge-std/src/StdStorage.sol\":1903:1941  bytesToBytes32(rdat, 32 * field_depth) */
      swap1
      tag_112
      jump\t// in
    tag_3639:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"lib/forge-std/src/StdStorage.sol\":1990:2015  vm.accesses(address(who)) */
      swap2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x65bc948100000000000000000000000000000000000000000000000000000000
        /* \"lib/forge-std/src/StdStorage.sol\":1990:2015  vm.accesses(address(who)) */
      dup4
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      dup9
      and
        /* \"lib/forge-std/src/StdStorage.sol\":1431:1442  self._depth */
      0x04
        /* \"lib/forge-std/src/StdStorage.sol\":1990:2015  vm.accesses(address(who)) */
      dup5
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"lib/forge-std/src/StdStorage.sol\":1990:2015  vm.accesses(address(who)) */
      dup7
      dup4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
        /* \"lib/forge-std/src/StdStorage.sol\":1990:2015  vm.accesses(address(who)) */
      dup2
      dup4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"lib/forge-std/src/StdStorage.sol\":1990:2015  vm.accesses(address(who)) */
      gas
      call
      swap3
      dup4
      iszero
      tag_1089
      jumpi
      dup8
      swap4
      tag_3642
      jumpi
        /* \"lib/forge-std/src/StdStorage.sol\":1264:4469  function find(StdStorage storage self) internal returns (uint256) {... */
    tag_3643:
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      mload
        /* \"lib/forge-std/src/StdStorage.sol\":1536:1546  self.finds */
      0x01
        /* \"lib/forge-std/src/StdStorage.sol\":2029:2046  reads.length == 1 */
      dup2
      sub
        /* \"lib/forge-std/src/StdStorage.sol\":1536:1546  self.finds */
      tag_3644
      jumpi
        /* \"lib/forge-std/src/StdStorage.sol\":2090:2098  reads[0] */
      pop
      pop
      swap1
        /* \"lib/forge-std/src/StdStorage.sol\":2077:2099  vm.load(who, reads[0]) */
      tag_3646
        /* \"lib/forge-std/src/StdStorage.sol\":2090:2098  reads[0] */
      swap2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
        /* \"lib/forge-std/src/StdStorage.sol\":2090:2098  reads[0] */
      tag_3647
      dup4
      tag_83
      jump\t// in
    tag_3647:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
      mload(0x40)
      0x667f9d7000000000000000000000000000000000000000000000000000000000
        /* \"lib/forge-std/src/StdStorage.sol\":2077:2099  vm.load(who, reads[0]) */
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      dup12
      and
        /* \"lib/forge-std/src/StdStorage.sol\":1431:1442  self._depth */
      0x04
        /* \"lib/forge-std/src/StdStorage.sol\":2077:2099  vm.load(who, reads[0]) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
      0x24
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap2
      swap1
      swap2
      mstore
      swap4
      dup5
      swap1
      dup2
      swap1
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      0x44
      dup3
      add
      swap1
      jump
        /* \"lib/forge-std/src/StdStorage.sol\":2077:2099  vm.load(who, reads[0]) */
    tag_3646:
      sub
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"lib/forge-std/src/StdStorage.sol\":2077:2099  vm.load(who, reads[0]) */
      gas
      staticcall
      swap1
      dup2
      iszero
      tag_1089
      jumpi
      dup8
      swap2
      tag_3650
      jumpi
        /* \"lib/forge-std/src/StdStorage.sol\":2025:4093  if (reads.length == 1) {... */
    tag_3651:
        /* \"lib/forge-std/src/StdStorage.sol\":2667:2675  reads[0] */
      tag_3652
        /* \"lib/forge-std/src/StdStorage.sol\":2117:2135  curr == bytes32(0) */
      swap4
      pop
      dup2
      iszero
        /* \"lib/forge-std/src/StdStorage.sol\":2113:2219  if (curr == bytes32(0)) {... */
      tag_3653
      jumpi
        /* \"lib/forge-std/src/StdStorage.sol\":2025:4093  if (reads.length == 1) {... */
    tag_3654:
        /* \"lib/forge-std/src/StdStorage.sol\":2236:2248  fdat != curr */
      sub
        /* \"lib/forge-std/src/StdStorage.sol\":2232:2470  if (fdat != curr) {... */
      tag_3655
      jumpi
        /* \"lib/forge-std/src/StdStorage.sol\":2025:4093  if (reads.length == 1) {... */
    tag_3656:
        /* \"lib/forge-std/src/StdStorage.sol\":2488:2574  SlotFound(who, fsig, keccak256(abi.encodePacked(ins, field_depth)), uint256(reads[0])) */
      0x9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      dup9
        /* \"lib/forge-std/src/StdStorage.sol\":2488:2574  SlotFound(who, fsig, keccak256(abi.encodePacked(ins, field_depth)), uint256(reads[0])) */
      tag_3657
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      0x20
        /* \"lib/forge-std/src/StdStorage.sol\":2519:2553  abi.encodePacked(ins, field_depth) */
      dup2
      add
      swap1
      tag_3658
      dup2
      tag_3624
      dup14
      dup14
      dup7
      tag_107
      jump\t// in
    tag_3658:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
        /* \"lib/forge-std/src/StdStorage.sol\":2509:2554  keccak256(abi.encodePacked(ins, field_depth)) */
      swap1
      keccak256
        /* \"lib/forge-std/src/StdStorage.sol\":2564:2572  reads[0] */
      tag_3660
      dup7
      tag_83
      jump\t// in
    tag_3660:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
      swap1
      dup9
      mload(0x40)
      swap6
      dup7
      swap6
      and
        /* \"lib/forge-std/src/StdStorage.sol\":2488:2574  SlotFound(who, fsig, keccak256(abi.encodePacked(ins, field_depth)), uint256(reads[0])) */
      dup6
        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      swap1
      swap5
      swap4
      swap3
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      0xffffffff00000000000000000000000000000000000000000000000000000000
        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      0x60
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      0x80
      dup6
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap9
      and
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      dup5
      mstore
      and
        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      0x20
      dup4
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      0x40
      dup3
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      jump
        /* \"lib/forge-std/src/StdStorage.sol\":2488:2574  SlotFound(who, fsig, keccak256(abi.encodePacked(ins, field_depth)), uint256(reads[0])) */
    tag_3657:
      sub
      swap1
      log1
        /* \"lib/forge-std/src/StdStorage.sol\":2667:2675  reads[0] */
      tag_83
      jump\t// in
    tag_3652:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
      0xffffffffffffffffffffffffffffffffffffffff
      dup7
      and
      0x00
      mstore
        /* \"lib/forge-std/src/StdCheats.sol\":19864:19872  stdstore */
      0x05
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
      mstore
      keccak256(0x00, 0x40)
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      0xffffffff00000000000000000000000000000000000000000000000000000000
      dup4
      and
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup7
      mstore
      0x20
      mstore
      0x40
      dup6
      keccak256
      mload(0x40)
      0x20
        /* \"lib/forge-std/src/StdStorage.sol\":2620:2654  abi.encodePacked(ins, field_depth) */
      dup2
      add
      swap1
      tag_3661
      dup2
      tag_3624
      dup10
      dup10
      dup7
      tag_107
      jump\t// in
    tag_3661:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
        /* \"lib/forge-std/src/StdStorage.sol\":2610:2655  keccak256(abi.encodePacked(ins, field_depth)) */
      swap1
      keccak256
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup7
      mstore
      0x20
      mstore
      0x40
      dup6
      keccak256
        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      sstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      dup6
      and
      0x00
      mstore
        /* \"lib/forge-std/src/StdStorage.sol\":1536:1546  self.finds */
      0x06
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
      mstore
      keccak256(0x00, 0x40)
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      0xffffffff00000000000000000000000000000000000000000000000000000000
      dup3
      and
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup6
      mstore
      0x20
      mstore
      0x40
      dup5
      keccak256
      mload(0x40)
      0x20
        /* \"lib/forge-std/src/StdStorage.sol\":2722:2756  abi.encodePacked(ins, field_depth) */
      dup2
      add
      swap1
      tag_3663
      dup2
      tag_3624
      dup9
      dup9
      dup7
      tag_107
      jump\t// in
    tag_3663:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
        /* \"lib/forge-std/src/StdStorage.sol\":2712:2757  keccak256(abi.encodePacked(ins, field_depth)) */
      swap1
      keccak256
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup6
      mstore
      0x20
      mstore
      0x40
      dup5
      keccak256
        /* \"lib/forge-std/src/StdStorage.sol\":1536:1546  self.finds */
      0x01
        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
      dup3
      sload
      and
      or
      swap1
      sstore
        /* \"lib/forge-std/src/StdStorage.sol\":2025:4093  if (reads.length == 1) {... */
    tag_3665:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      dup6
      and
      0x00
      mstore
        /* \"lib/forge-std/src/StdStorage.sol\":1536:1546  self.finds */
      0x06
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
      mstore
      keccak256(0x00, 0x40)
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      0xffffffff00000000000000000000000000000000000000000000000000000000
      dup3
      and
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup6
      mstore
      0x20
      mstore
      0x40
      dup5
      keccak256
      mload(0x40)
      0x20
        /* \"lib/forge-std/src/StdStorage.sol\":4156:4190  abi.encodePacked(ins, field_depth) */
      dup2
      add
      swap1
      tag_3666
      dup2
      tag_3624
      dup9
      dup9
      dup7
      tag_107
      jump\t// in
    tag_3666:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
        /* \"lib/forge-std/src/StdStorage.sol\":4146:4191  keccak256(abi.encodePacked(ins, field_depth)) */
      swap1
      keccak256
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup6
      mstore
      0x20
      mstore
      0xff
      0x40
      dup6
      keccak256
      sload
      and
        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      iszero
      tag_3668
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      0x40
        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      swap6
      0xffffffffffffffffffffffff0000000000000000000000000000000000000000
        /* \"lib/forge-std/src/StdStorage.sol\":1354:1366  self._target */
      0x0a
        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      sload
      and
        /* \"lib/forge-std/src/StdStorage.sol\":1354:1366  self._target */
      0x0a
        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      sstore
      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000
        /* \"lib/forge-std/src/StdStorage.sol\":1390:1399  self._sig */
      0x08
        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      sload
      and
        /* \"lib/forge-std/src/StdStorage.sol\":1390:1399  self._sig */
      0x08
        /* \"lib/forge-std/src/StdStorage.sol\":7397:7456  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      sstore
        /* \"lib/forge-std/src/StdStorage.sol\":4331:4348  delete self._keys */
      tag_3670
      tag_109
      jump\t// in
    tag_3670:
      0x00
        /* \"lib/forge-std/src/StdStorage.sol\":1431:1442  self._depth */
      0x09
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sstore
      and
      0x00
      mstore
        /* \"lib/forge-std/src/StdCheats.sol\":19864:19872  stdstore */
      0x05
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      0xffffffff00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup6
      0x00
      keccak256
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      swap2
      and
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup5
      mstore
      0x20
      mstore
        /* \"lib/forge-std/src/StdStorage.sol\":4426:4460  abi.encodePacked(ins, field_depth) */
      tag_3624
      tag_3672
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup6
      dup6
      keccak256
      swap4
      dup7
      mload
        /* \"lib/forge-std/src/StdStorage.sol\":4426:4460  abi.encodePacked(ins, field_depth) */
      swap3
      dup4
      swap2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
        /* \"lib/forge-std/src/StdStorage.sol\":4426:4460  abi.encodePacked(ins, field_depth) */
      dup4
      add
      swap6
      dup7
      tag_107
      jump\t// in
    tag_3672:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
        /* \"lib/forge-std/src/StdStorage.sol\":4416:4461  keccak256(abi.encodePacked(ins, field_depth)) */
      swap1
      keccak256
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup3
      mstore
      0x20
      mstore
      keccak256
      sload
        /* \"lib/forge-std/src/StdStorage.sol\":1264:4469  function find(StdStorage storage self) internal returns (uint256) {... */
      swap1
      jump\t// out
        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
    tag_3668:
      0x84
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      0x08c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
        /* \"lib/forge-std/src/StdStorage.sol\":1431:1442  self._depth */
      0x04
        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      dup3
      add
      mstore
      0x2f
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      dup3
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      0x73746453746f726167652066696e642853746453746f72616765293a20536c6f
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x44
      dup3
      add
        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      mstore
      0x74287329206e6f7420666f756e642e0000000000000000000000000000000000
      0x64
      dup3
      add
      mstore
      revert
        /* \"lib/forge-std/src/StdStorage.sol\":2232:2470  if (fdat != curr) {... */
    tag_3655:
        /* \"lib/forge-std/src/StdStorage.sol\":2268:2455  require(... */
      tag_3673
      tag_108
      jump\t// in
    tag_3673:
        /* \"lib/forge-std/src/StdStorage.sol\":2232:2470  if (fdat != curr) {... */
      jump(tag_3656)
        /* \"lib/forge-std/src/StdStorage.sol\":2113:2219  if (curr == bytes32(0)) {... */
    tag_3653:
        /* \"lib/forge-std/src/StdStorage.sol\":2160:2204  WARNING_UninitedSlot(who, uint256(reads[0])) */
      0x080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"lib/forge-std/src/StdStorage.sol\":2194:2202  reads[0] */
      dup11
        /* \"lib/forge-std/src/StdStorage.sol\":2160:2204  WARNING_UninitedSlot(who, uint256(reads[0])) */
      tag_3674
        /* \"lib/forge-std/src/StdStorage.sol\":2194:2202  reads[0] */
      tag_3675
      dup8
      tag_83
      jump\t// in
    tag_3675:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
      mload(0x40)
      swap4
      dup5
      swap4
      and
        /* \"lib/forge-std/src/StdStorage.sol\":2160:2204  WARNING_UninitedSlot(who, uint256(reads[0])) */
      dup4
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      0x20
      swap1
      swap4
      swap3
      swap2
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      0x40
      dup3
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap6
      and
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      dup2
      mstore
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      jump
        /* \"lib/forge-std/src/StdStorage.sol\":2160:2204  WARNING_UninitedSlot(who, uint256(reads[0])) */
    tag_3674:
      sub
      swap1
      log1
        /* \"lib/forge-std/src/StdStorage.sol\":2113:2219  if (curr == bytes32(0)) {... */
      jump(tag_3654)
        /* \"lib/forge-std/src/StdStorage.sol\":2077:2099  vm.load(who, reads[0]) */
    tag_3650:
      swap1
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
        /* \"lib/forge-std/src/StdStorage.sol\":2077:2099  vm.load(who, reads[0]) */
      dup4
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
        /* \"lib/forge-std/src/StdStorage.sol\":2077:2099  vm.load(who, reads[0]) */
      gt
      tag_3676
      jumpi
    tag_3677:
      dup2
      tag_3678
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
        /* \"lib/forge-std/src/StdStorage.sol\":2077:2099  vm.load(who, reads[0]) */
      swap4
      dup4
      tag_6
      jump\t// in
    tag_3678:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
        /* \"lib/forge-std/src/StdStorage.sol\":2667:2675  reads[0] */
      tag_3652
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap3
      mload
        /* \"lib/forge-std/src/StdStorage.sol\":2077:2099  vm.load(who, reads[0]) */
      swap1
      jump(tag_3651)
    tag_3676:
      returndatasize
      swap2
      pop
      jump(tag_3677)
        /* \"lib/forge-std/src/StdStorage.sol\":2025:4093  if (reads.length == 1) {... */
    tag_3644:
        /* \"lib/forge-std/src/StdStorage.sol\":1536:1546  self.finds */
      0x01
        /* \"lib/forge-std/src/StdStorage.sol\":2786:2802  reads.length > 1 */
      swap2
      swap7
      swap4
      swap6
      swap3
      pop
      swap9
      swap4
      swap8
      swap7
      swap9
      gt
        /* \"lib/forge-std/src/StdStorage.sol\":2782:4093  if (reads.length > 1) {... */
      0x00
        /* \"lib/forge-std/src/StdStorage.sol\":1536:1546  self.finds */
      eq
      tag_3681
      jumpi
        /* \"lib/forge-std/src/StdStorage.sol\":2823:2836  uint256 i = 0 */
      dup8
        /* \"lib/forge-std/src/StdStorage.sol\":2856:2859  i++ */
    tag_3683:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup5
      mload
        /* \"lib/forge-std/src/StdStorage.sol\":2838:2854  i < reads.length */
      dup2
      lt
      iszero
      tag_3684
      jumpi
        /* \"lib/forge-std/src/StdStorage.sol\":2894:2916  vm.load(who, reads[i]) */
      tag_3686
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
        /* \"lib/forge-std/src/StdStorage.sol\":2907:2915  reads[i] */
      tag_3687
      dup4
      dup9
      tag_84
      jump\t// in
    tag_3687:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
      mload(0x40)
      0x667f9d7000000000000000000000000000000000000000000000000000000000
        /* \"lib/forge-std/src/StdStorage.sol\":2894:2916  vm.load(who, reads[i]) */
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      dup12
      and
        /* \"lib/forge-std/src/StdStorage.sol\":1431:1442  self._depth */
      0x04
        /* \"lib/forge-std/src/StdStorage.sol\":2894:2916  vm.load(who, reads[i]) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
      0x24
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap2
      swap1
      swap2
      mstore
      swap2
      dup3
      swap1
      dup2
      swap1
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      0x44
      dup3
      add
      swap1
      jump
        /* \"lib/forge-std/src/StdStorage.sol\":2894:2916  vm.load(who, reads[i]) */
    tag_3686:
      sub
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"lib/forge-std/src/StdStorage.sol\":2894:2916  vm.load(who, reads[i]) */
      gas
      staticcall
      swap1
      dup2
      iszero
      tag_3688
      jumpi
      dup11
      swap2
      tag_3690
      jumpi
        /* \"lib/forge-std/src/StdStorage.sol\":2856:2859  i++ */
    tag_3691:
        /* \"lib/forge-std/src/StdStorage.sol\":2938:2956  prev == bytes32(0) */
      pop
      dup1
      iszero
        /* \"lib/forge-std/src/StdStorage.sol\":2934:3048  if (prev == bytes32(0)) {... */
      tag_3692
      jumpi
        /* \"lib/forge-std/src/StdStorage.sol\":2856:2859  i++ */
    tag_3693:
        /* \"lib/forge-std/src/StdStorage.sol\":3104:3112  reads[i] */
      dup10
      tag_3694
      dup4
      dup9
      tag_84
      jump\t// in
    tag_3694:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"lib/forge-std/src/StdStorage.sol\":3090:3133  vm.store(who, reads[i], bytes32(hex\"1337\")) */
      extcodesize
      iszero
      tag_255
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"lib/forge-std/src/StdStorage.sol\":3090:3133  vm.store(who, reads[i], bytes32(hex\"1337\")) */
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x70ca10bb00000000000000000000000000000000000000000000000000000000
        /* \"lib/forge-std/src/StdStorage.sol\":3090:3133  vm.store(who, reads[i], bytes32(hex\"1337\")) */
      dup3
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      dup12
      and
        /* \"lib/forge-std/src/StdStorage.sol\":1431:1442  self._depth */
      0x04
        /* \"lib/forge-std/src/StdStorage.sol\":3090:3133  vm.store(who, reads[i], bytes32(hex\"1337\")) */
      dup4
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      dup3
      add
      mstore
        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      0x1337000000000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x44
      dup3
      add
      mstore
        /* \"lib/forge-std/src/StdStorage.sol\":3090:3133  vm.store(who, reads[i], bytes32(hex\"1337\")) */
      dup2
      dup2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x64
        /* \"lib/forge-std/src/StdStorage.sol\":3090:3133  vm.store(who, reads[i], bytes32(hex\"1337\")) */
      dup2
      dup4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"lib/forge-std/src/StdStorage.sol\":3090:3133  vm.store(who, reads[i], bytes32(hex\"1337\")) */
      gas
      call
      dup1
      iszero
      tag_219
      jumpi
      tag_3699
      jumpi
        /* \"lib/forge-std/src/StdStorage.sol\":2856:2859  i++ */
    tag_3700:
        /* \"lib/forge-std/src/StdStorage.sol\":3256:3276  who.staticcall(cald) */
      pop
      dup1
      dup9
      mload
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
        /* \"lib/forge-std/src/StdStorage.sol\":1735:1771  abi.encodePacked(fsig, flatten(ins)) */
      dup11
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      dup13
      and
        /* \"lib/forge-std/src/StdStorage.sol\":3256:3276  who.staticcall(cald) */
      gas
      staticcall
      tag_3701
      tag_13
      jump\t// in
    tag_3701:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
      dup7
      and
      dup7
      sub
      tag_3702
      jumpi
        /* \"lib/forge-std/src/StdStorage.sol\":3305:3343  bytesToBytes32(rdat, 32 * field_depth) */
      tag_3704
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap1
      dup7
        /* \"lib/forge-std/src/StdCheats.sol\":19864:19872  stdstore */
      0x05
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      shl
        /* \"lib/forge-std/src/StdStorage.sol\":3305:3343  bytesToBytes32(rdat, 32 * field_depth) */
      swap1
      tag_112
      jump\t// in
    tag_3704:
        /* \"lib/forge-std/src/StdStorage.sol\":3384:3421  success && fdat == bytes32(hex\"1337\") */
      dup2
      tag_3705
      jumpi
        /* \"lib/forge-std/src/StdStorage.sol\":2856:2859  i++ */
    tag_3706:
        /* \"lib/forge-std/src/StdStorage.sol\":3380:3909  if (success && fdat == bytes32(hex\"1337\")) {... */
      pop
      tag_3707
      jumpi
        /* \"lib/forge-std/src/StdStorage.sol\":3940:3948  reads[i] */
      dup10
      swap1
      tag_3709
      dup4
      dup9
      tag_84
      jump\t// in
    tag_3709:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
        /* \"lib/forge-std/src/StdStorage.sol\":3926:3955  vm.store(who, reads[i], prev) */
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"lib/forge-std/src/StdStorage.sol\":3926:3955  vm.store(who, reads[i], prev) */
      extcodesize
      iszero
      tag_291
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      0x70ca10bb00000000000000000000000000000000000000000000000000000000
        /* \"lib/forge-std/src/StdStorage.sol\":3926:3955  vm.store(who, reads[i], prev) */
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      dup12
      and
        /* \"lib/forge-std/src/StdStorage.sol\":1431:1442  self._depth */
      0x04
        /* \"lib/forge-std/src/StdStorage.sol\":3926:3955  vm.store(who, reads[i], prev) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      dup2
      add
      swap3
      swap1
      swap3
      mstore
      0x44
      dup3
      add
      mstore
      dup2
      dup2
      0x64
      dup2
      dup4
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"lib/forge-std/src/StdStorage.sol\":3926:3955  vm.store(who, reads[i], prev) */
      gas
      call
      dup1
      iszero
      tag_219
      jumpi
      tag_3715
      jumpi
        /* \"lib/forge-std/src/StdStorage.sol\":2856:2859  i++ */
    tag_3716:
      pop
      pop
      tag_3717
      swap1
      tag_19
      jump\t// in
    tag_3717:
        /* \"lib/forge-std/src/StdStorage.sol\":2823:2836  uint256 i = 0 */
      jump(tag_3683)
        /* \"lib/forge-std/src/StdStorage.sol\":3926:3955  vm.store(who, reads[i], prev) */
    tag_3715:
      tag_3718
      swap1
      tag_1
      jump\t// in
    tag_3718:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_2413
      jumpi
        /* \"lib/forge-std/src/StdStorage.sol\":3926:3955  vm.store(who, reads[i], prev) */
      dup9
      codesize
      jump(tag_3716)
        /* \"lib/forge-std/src/StdStorage.sol\":3380:3909  if (success && fdat == bytes32(hex\"1337\")) {... */
    tag_3707:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap3
      swap6
      pop
      dup2
      swap5
        /* \"lib/forge-std/src/StdStorage.sol\":3519:3605  SlotFound(who, fsig, keccak256(abi.encodePacked(ins, field_depth)), uint256(reads[i])) */
      0x9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      dup10
        /* \"lib/forge-std/src/StdStorage.sol\":3519:3605  SlotFound(who, fsig, keccak256(abi.encodePacked(ins, field_depth)), uint256(reads[i])) */
      tag_3721
        /* \"lib/forge-std/src/StdStorage.sol\":3848:3856  reads[i] */
      tag_3722
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap7
        /* \"lib/forge-std/src/StdStorage.sol\":3550:3584  abi.encodePacked(ins, field_depth) */
      tag_3624
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap10
      swap15
      swap13
      swap14
      swap10
        /* \"lib/forge-std/src/StdStorage.sol\":3550:3584  abi.encodePacked(ins, field_depth) */
      tag_3724
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup14
      mload(0x40)
        /* \"lib/forge-std/src/StdStorage.sol\":3550:3584  abi.encodePacked(ins, field_depth) */
      swap3
      dup4
      swap2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
        /* \"lib/forge-std/src/StdStorage.sol\":3550:3584  abi.encodePacked(ins, field_depth) */
      dup4
      add
      swap6
      dup7
      tag_107
      jump\t// in
    tag_3724:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
        /* \"lib/forge-std/src/StdStorage.sol\":3540:3585  keccak256(abi.encodePacked(ins, field_depth)) */
      swap1
      keccak256
        /* \"lib/forge-std/src/StdStorage.sol\":3595:3603  reads[i] */
      tag_3725
      dup8
      dup8
      tag_84
      jump\t// in
    tag_3725:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
      swap1
      dup11
      mload(0x40)
      swap6
      dup7
      swap6
      and
        /* \"lib/forge-std/src/StdStorage.sol\":3519:3605  SlotFound(who, fsig, keccak256(abi.encodePacked(ins, field_depth)), uint256(reads[i])) */
      dup6
        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      swap1
      swap5
      swap4
      swap3
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      0xffffffff00000000000000000000000000000000000000000000000000000000
        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      0x60
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      0x80
      dup6
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap9
      and
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      dup5
      mstore
      and
        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      0x20
      dup4
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      0x40
      dup3
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      jump
        /* \"lib/forge-std/src/StdStorage.sol\":3519:3605  SlotFound(who, fsig, keccak256(abi.encodePacked(ins, field_depth)), uint256(reads[i])) */
    tag_3721:
      sub
      swap1
      log1
        /* \"lib/forge-std/src/StdStorage.sol\":3706:3714  reads[i] */
      tag_3726
      dup3
      dup3
      tag_84
      jump\t// in
    tag_3726:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
      0xffffffffffffffffffffffffffffffffffffffff
      dup11
      and
      0x00
      mstore
        /* \"lib/forge-std/src/StdCheats.sol\":19864:19872  stdstore */
      0x05
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
      mstore
      keccak256(0x00, 0x40)
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      0xffffffff00000000000000000000000000000000000000000000000000000000
      dup8
      and
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup11
      mstore
      0x20
      mstore
      0x40
      dup10
      keccak256
      mload(0x40)
      0x20
        /* \"lib/forge-std/src/StdStorage.sol\":3659:3693  abi.encodePacked(ins, field_depth) */
      dup2
      add
      swap1
      tag_3727
      dup2
      tag_3624
      dup14
      dup14
      dup7
      tag_107
      jump\t// in
    tag_3727:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
        /* \"lib/forge-std/src/StdStorage.sol\":3649:3694  keccak256(abi.encodePacked(ins, field_depth)) */
      swap1
      keccak256
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup11
      mstore
      0x20
      mstore
      0x40
      dup10
      keccak256
        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      sstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      dup10
      and
      0x00
      mstore
        /* \"lib/forge-std/src/StdStorage.sol\":1536:1546  self.finds */
      0x06
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
      mstore
      keccak256(0x00, 0x40)
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      0xffffffff00000000000000000000000000000000000000000000000000000000
      dup7
      and
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup10
      mstore
      0x20
      mstore
      0x40
      dup9
      keccak256
      mload(0x40)
      0x20
        /* \"lib/forge-std/src/StdStorage.sol\":3769:3803  abi.encodePacked(ins, field_depth) */
      dup2
      add
      swap1
      tag_3729
      dup2
      tag_3624
      dup13
      dup13
      dup7
      tag_107
      jump\t// in
    tag_3729:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
        /* \"lib/forge-std/src/StdStorage.sol\":3759:3804  keccak256(abi.encodePacked(ins, field_depth)) */
      swap1
      keccak256
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup10
      mstore
      0x20
      mstore
      0x40
      dup9
      keccak256
        /* \"lib/forge-std/src/StdStorage.sol\":1536:1546  self.finds */
      0x01
        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
      dup3
      sload
      and
      or
      swap1
      sstore
        /* \"lib/forge-std/src/StdStorage.sol\":3848:3856  reads[i] */
      tag_84
      jump\t// in
    tag_3722:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"lib/forge-std/src/StdStorage.sol\":3834:3863  vm.store(who, reads[i], prev) */
      extcodesize
      iszero
      tag_1565
      jumpi
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      0x70ca10bb00000000000000000000000000000000000000000000000000000000
        /* \"lib/forge-std/src/StdStorage.sol\":3834:3863  vm.store(who, reads[i], prev) */
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      dup9
      and
        /* \"lib/forge-std/src/StdStorage.sol\":1431:1442  self._depth */
      0x04
        /* \"lib/forge-std/src/StdStorage.sol\":3834:3863  vm.store(who, reads[i], prev) */
      dup3
      add
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x24
      dup2
      add
      swap2
      swap1
      swap2
      mstore
      0x44
      dup2
      add
      swap2
      swap1
      swap2
      mstore
      dup5
      dup2
      0x64
      dup2
      dup4
      0x7109709ecfa91a80626ff3989d68f67f5b1dd12d
        /* \"lib/forge-std/src/StdStorage.sol\":3834:3863  vm.store(who, reads[i], prev) */
      gas
      call
      dup1
      iszero
      tag_201
      jumpi
      swap1
      dup6
      swap2
      tag_3736
      jumpi
        /* \"lib/forge-std/src/StdStorage.sol\":3380:3909  if (success && fdat == bytes32(hex\"1337\")) {... */
    tag_3737:
        /* \"lib/forge-std/src/StdStorage.sol\":3885:3890  break */
      pop
      pop
        /* \"lib/forge-std/src/StdStorage.sol\":2025:4093  if (reads.length == 1) {... */
      jump(tag_3665)
        /* \"lib/forge-std/src/StdStorage.sol\":3834:3863  vm.store(who, reads[i], prev) */
    tag_3736:
      tag_3739
      swap1
      tag_1
      jump\t// in
    tag_3739:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_285
      jumpi
        /* \"lib/forge-std/src/StdStorage.sol\":3834:3863  vm.store(who, reads[i], prev) */
      dup4
      codesize
      jump(tag_3737)
        /* \"lib/forge-std/src/StdStorage.sol\":3384:3421  success && fdat == bytes32(hex\"1337\") */
    tag_3705:
        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      0x1337000000000000000000000000000000000000000000000000000000000000
        /* \"lib/forge-std/src/StdStorage.sol\":3395:3421  fdat == bytes32(hex\"1337\") */
      swap2
      pop
      eq
        /* \"lib/forge-std/src/StdStorage.sol\":3384:3421  success && fdat == bytes32(hex\"1337\") */
      codesize
      jump(tag_3706)
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
    tag_3702:
      0x24
      dup13
      0x4e487b7100000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x11
        /* \"lib/forge-std/src/StdStorage.sol\":1431:1442  self._depth */
      0x04
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
      revert
        /* \"lib/forge-std/src/StdStorage.sol\":3090:3133  vm.store(who, reads[i], bytes32(hex\"1337\")) */
    tag_3699:
      tag_3742
      swap1
      tag_1
      jump\t// in
    tag_3742:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      tag_2214
      jumpi
        /* \"lib/forge-std/src/StdStorage.sol\":3090:3133  vm.store(who, reads[i], bytes32(hex\"1337\")) */
      dup10
      codesize
      jump(tag_3700)
        /* \"lib/forge-std/src/StdStorage.sol\":2934:3048  if (prev == bytes32(0)) {... */
    tag_3692:
        /* \"lib/forge-std/src/StdStorage.sol\":2985:3029  WARNING_UninitedSlot(who, uint256(reads[i])) */
      0x080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5
      tag_3745
        /* \"lib/forge-std/src/StdStorage.sol\":3019:3027  reads[i] */
      tag_3746
      dup5
      dup10
      tag_84
      jump\t// in
    tag_3746:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
      0x40
      dup1
      mload
      0xffffffffffffffffffffffffffffffffffffffff
      dup14
      and
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      dup2
      mstore
      0x20
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap3
      swap1
      swap3
      mstore
      swap1
      swap2
      dup3
      swap2
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      dup3
      add
      swap1
      jump
        /* \"lib/forge-std/src/StdStorage.sol\":2985:3029  WARNING_UninitedSlot(who, uint256(reads[i])) */
    tag_3745:
      sub
      swap1
      log1
        /* \"lib/forge-std/src/StdStorage.sol\":2934:3048  if (prev == bytes32(0)) {... */
      jump(tag_3693)
        /* \"lib/forge-std/src/StdStorage.sol\":2894:2916  vm.load(who, reads[i]) */
    tag_3690:
      swap1
      pop
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
        /* \"lib/forge-std/src/StdStorage.sol\":2894:2916  vm.load(who, reads[i]) */
      dup2
      returndatasize
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
        /* \"lib/forge-std/src/StdStorage.sol\":2894:2916  vm.load(who, reads[i]) */
      gt
      tag_3747
      jumpi
    tag_3748:
      dup2
      tag_3749
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
        /* \"lib/forge-std/src/StdStorage.sol\":2894:2916  vm.load(who, reads[i]) */
      swap4
      dup4
      tag_6
      jump\t// in
    tag_3749:
      dup2
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      sub
      slt
      tag_226
      jumpi
      mload
        /* \"lib/forge-std/src/StdStorage.sol\":2894:2916  vm.load(who, reads[i]) */
      codesize
      jump(tag_3691)
    tag_3747:
      returndatasize
      swap2
      pop
      jump(tag_3748)
    tag_3688:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
      returndatasize
      dup13
      dup3
      returndatacopy
      returndatasize
      swap1
      revert
        /* \"lib/forge-std/src/StdStorage.sol\":2838:2854  i < reads.length */
    tag_3684:
      pop
      swap3
      pop
      swap3
      pop
      swap5
      swap3
      swap4
        /* \"lib/forge-std/src/StdStorage.sol\":2025:4093  if (reads.length == 1) {... */
      jump(tag_3665)
        /* \"lib/forge-std/src/StdStorage.sol\":2782:4093  if (reads.length > 1) {... */
    tag_3681:
        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      0x84
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload(0x40)
        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      0x08c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
        /* \"lib/forge-std/src/StdStorage.sol\":1431:1442  self._depth */
      0x04
        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      dup3
      add
      mstore
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x40
      0x24
        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      dup3
      add
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mstore
        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      0x73746453746f726167652066696e642853746453746f72616765293a204e6f20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x44
      dup3
      add
        /* \"lib/forge-std/src/StdStorage.sol\":561:620  Vm(address(uint160(uint256(keccak256(\"hevm cheat code\"))))) */
      mstore
      0x73746f726167652075736520646574656374656420666f72207461726765742e
      0x64
      dup3
      add
      mstore
      revert
        /* \"lib/forge-std/src/StdStorage.sol\":1990:2015  vm.accesses(address(who)) */
    tag_3642:
      tag_3752
      swap2
      swap4
      pop
      returndatasize
      dup1
      dup10
      dup4
      returndatacopy
      tag_1237
      dup2
      dup4
      tag_6
      jump\t// in
    tag_3752:
      pop
      swap2
      codesize
      jump(tag_3643)
        /* \"lib/forge-std/src/StdStorage.sol\":1781:1792  vm.record() */
    tag_3634:
      tag_3754
      swap1
      swap6
      swap2
      swap6
      tag_1
      jump\t// in
    tag_3754:
      swap4
      codesize
      jump(tag_3635)
        /* \"lib/forge-std/src/StdStorage.sol\":1532:1706  if (self.finds[who][fsig][keccak256(abi.encodePacked(ins, field_depth))]) {... */
    tag_3625:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xffffffffffffffffffffffffffffffffffffffff
      0x40
      swap6
      and
      dup5
      mstore
        /* \"lib/forge-std/src/StdCheats.sol\":19864:19872  stdstore */
      0x05
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
      mstore
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      0xffffffff00000000000000000000000000000000000000000000000000000000
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup6
      dup6
      keccak256
        /* \"lib/solmate/lib/ds-test/src/test.sol\":1671:1735  address(bytes20(uint160(uint256(keccak256('hevm cheat code'))))) */
      swap2
      and
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup5
      mstore
      0x20
      mstore
        /* \"lib/forge-std/src/StdStorage.sol\":1659:1693  abi.encodePacked(ins, field_depth) */
      tag_3624
      tag_3672
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup6
      dup6
      keccak256
      swap4
      dup7
      mload
        /* \"lib/forge-std/src/StdStorage.sol\":1659:1693  abi.encodePacked(ins, field_depth) */
      swap3
      dup4
      swap2
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x20
        /* \"lib/forge-std/src/StdStorage.sol\":1659:1693  abi.encodePacked(ins, field_depth) */
      dup4
      add
      swap6
      dup7
      tag_107
      jump\t// in
        /* \"lib/forge-std/src/StdStorage.sol\":6640:6944  function bytesToBytes32(bytes memory b, uint256 offset) private pure returns (bytes32) {... */
    tag_112:
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0x00
      swap2
      dup1
      mload
        /* \"lib/forge-std/src/StdStorage.sol\":6784:6786  32 */
      0x20
        /* \"lib/forge-std/src/StdStorage.sol\":6773:6786  b.length > 32 */
      dup2
      gt
        /* \"lib/forge-std/src/StdStorage.sol\":6773:6802  b.length > 32 ? 32 : b.length */
      0x00
        /* \"lib/forge-std/src/StdStorage.sol\":6784:6786  32 */
      eq
      tag_3757
      jumpi
        /* \"lib/forge-std/src/StdStorage.sol\":6773:6802  b.length > 32 ? 32 : b.length */
      pop
        /* \"lib/forge-std/src/StdStorage.sol\":6784:6786  32 */
      0x20
        /* \"lib/forge-std/src/StdStorage.sol\":6773:6802  b.length > 32 ? 32 : b.length */
      swap1
    tag_3759:
        /* \"lib/forge-std/src/StdStorage.sol\":6817:6830  uint256 i = 0 */
      dup4
        /* \"lib/forge-std/src/StdStorage.sol\":6812:6918  for (uint256 i = 0; i < max; i++) {... */
      swap3
        /* \"lib/forge-std/src/StdStorage.sol\":6832:6839  i < max */
    tag_3760:
      dup3
      dup5
      lt
      tag_3761
      jumpi
        /* \"lib/forge-std/src/StdStorage.sol\":6927:6937  return out */
      pop
      pop
      pop
      pop
        /* \"lib/forge-std/src/StdStorage.sol\":6640:6944  function bytesToBytes32(bytes memory b, uint256 offset) private pure returns (bytes32) {... */
      swap1
      jump\t// out
        /* \"lib/forge-std/src/StdStorage.sol\":6841:6844  i++ */
    tag_3761:
        /* \"lib/forge-std/src/StdStorage.sol\":6877:6887  offset + i */
      swap1
      swap2
      swap3
      swap4
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      0xff00000000000000000000000000000000000000000000000000000000000000
        /* \"lib/forge-std/src/StdStorage.sol\":6875:6888  b[offset + i] */
      tag_3763
        /* \"lib/forge-std/src/StdStorage.sol\":6877:6887  offset + i */
      tag_2491
      dup8
      dup6
      tag_25
      jump\t// in
        /* \"lib/forge-std/src/StdStorage.sol\":6875:6888  b[offset + i] */
    tag_3763:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
      and
      swap1
      dup6
      0x03
      shl
      swap2
      dup7
      dup4
      div
        /* \"lib/forge-std/src/StdStorage.sol\":6905:6906  8 */
      0x08
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      eq
      dup8
      iszero
      or
      iszero
      tag_505
      jumpi
        /* \"lib/forge-std/src/StdStorage.sol\":6841:6844  i++ */
      tag_3767
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap3
      shr
        /* \"lib/forge-std/src/StdStorage.sol\":6860:6907  out |= bytes32(b[offset + i] & 0xFF) >> (i * 8) */
      or
        /* \"lib/forge-std/src/StdStorage.sol\":6841:6844  i++ */
      swap5
      tag_19
      jump\t// in
    tag_3767:
        /* \"lib/forge-std/src/StdStorage.sol\":6817:6830  uint256 i = 0 */
      swap3
      swap2
      swap1
      jump(tag_3760)
        /* \"lib/forge-std/src/StdStorage.sol\":6773:6802  b.length > 32 ? 32 : b.length */
    tag_3757:
      swap1
      jump(tag_3759)
        /* \"lib/forge-std/src/StdStorage.sol\":6950:7343  function flatten(bytes32[] memory b) private pure returns (bytes memory) {... */
    tag_113:
      swap1
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup2
      mload
      0x05
      swap1
      dup1
      dup3
      shl
        /* \"lib/forge-std/src/StdStorage.sol\":7076:7078  32 */
      0x20
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      swap2
      dup1
      dup3
      div
      dup4
      eq
      swap1
      iszero
      or
      iszero
      tag_505
      jumpi
        /* \"lib/forge-std/src/StdStorage.sol\":7055:7079  new bytes(b.length * 32) */
      tag_3770
      swap1
      tag_18
      jump\t// in
    tag_3770:
      0x00
        /* \"lib/forge-std/src/StdStorage.sol\":7123:7126  i++ */
    tag_3771:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      dup6
      mload
        /* \"lib/forge-std/src/StdStorage.sol\":7109:7121  i < b.length */
      dup2
      lt
      iszero
      tag_3772
      jumpi
        /* \"lib/forge-std/src/StdStorage.sol\":7154:7158  b[i] */
      dup1
      tag_3774
        /* \"lib/forge-std/src/StdStorage.sol\":7123:7126  i++ */
      tag_3775
        /* \"lib/forge-std/src/StdStorage.sol\":7154:7158  b[i] */
      swap3
      dup9
      tag_84
      jump\t// in
    tag_3774:
        /* \"test/unit/ConstantProductPair.t.sol\":719:30551  contract ConstantProductPairTest is BaseTest, IReservoirCallee {... */
      mload
        /* \"lib/forge-std/src/StdStorage.sol\":7219:7303  assembly {... */
      dup5
      dup3
      dup8
      shl
      dup6
      add
      add
      mstore
        /* \"lib/forge-std/src/StdStorage.sol\":7123:7126  i++ */
      tag_19
      jump\t// in
    tag_3775:
        /* \"lib/forge-std/src/StdStorage.sol\":7094:7107  uint256 i = 0 */
      jump(tag_3771)
        /* \"lib/forge-std/src/StdStorage.sol\":7109:7121  i < b.length */
    tag_3772:
      pop
      swap4
      pop
      pop
      pop
        /* \"lib/forge-std/src/StdStorage.sol\":6950:7343  function flatten(bytes32[] memory b) private pure returns (bytes memory) {... */
      jump\t// out

    auxdata: 0xa164736f6c6343000811000a
}

sub_1: assembly {
        /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
      0x80
      jumpi(tag_7, callvalue)
      0x1f
      bytecodeSize
      codesize
      dup2
      swap1
      sub
      swap2
      dup3
      add
      not(0x1f)
      and
      dup4
      add
      swap2
      sub(shl(0x40, 0x01), 0x01)
      dup4
      gt
      dup5
      dup5
      lt
      or
      tag_3
      jumpi
      dup1
      dup5
      swap3
      0x20
      swap5
      0x40
      mstore
      dup4
      codecopy
      dup2
      add
      sub
      slt
      tag_7
      jumpi
      mload
      sub(shl(0xa0, 0x01), 0x01)
      dup2
      and
      swap1
      dup2
      swap1
      sub
      tag_7
      jumpi
      sload(0x00)
      swap1
      mload(0x40)
        /* \"lib/solmate/src/auth/Owned.sol\":1075:1115  OwnershipTransferred(address(0), _owner) */
      swap2
      dup2
      0x00
      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
      dup2
      dup1
      log3
      not(sub(shl(0xa8, 0x01), 0x01))
        /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
      and
      or
      0x00
      sstore
      dataSize(sub_0)
      swap1
      dup2
      dataOffset(sub_0)
      dup3
      codecopy
      return
    tag_7:
      0x00
      dup1
      revert
    tag_3:
      mstore(0x00, shl(0xe0, 0x4e487b71))
      mstore(0x04, 0x41)
      revert(0x00, 0x24)
    stop

    sub_0: assembly {
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          0x80
          0x40
          swap1
          dup1
          dup3
          mstore
          0x04
          dup1
          calldatasize
          lt
          iszero
          tag_17
          jumpi
          0x00
          dup1
          revert
        tag_17:
          0x00
          swap2
          dup3
          calldataload
          0xe0
          shr
          swap1
          dup2
          0x5accf175
          eq
          tag_19
          jumpi
          pop
          dup1
          0x5eced480
          eq
          tag_21
          jumpi
          dup1
          0x65d0123f
          eq
          tag_23
          jumpi
          dup1
          0x66d3fede
          eq
          tag_25
          jumpi
          dup1
          0x6b600d1c
          eq
          tag_27
          jumpi
          dup1
          0x8da5cb5b
          eq
          tag_29
          jumpi
          dup1
          0x8eaa6ac0
          eq
          tag_31
          jumpi
          dup1
          0xc97682f8
          eq
          tag_33
          jumpi
          dup1
          0xcf9d137c
          eq
          tag_35
          jumpi
            /* \"src/GenericFactory.sol\":8154:8548  assembly (\"memory-safe\") {... */
          dup1
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          0xd025dde2
            /* \"src/GenericFactory.sol\":8154:8548  assembly (\"memory-safe\") {... */
          eq
          tag_37
          jumpi
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          dup1
          0xd47e9c47
          eq
          tag_39
          jumpi
          dup1
          0xf2fde38b
          eq
          tag_41
          jumpi
          dup1
          0xf71f7a25
          eq
          tag_43
          jumpi
          0xff6eef52
          eq
          tag_45
          jumpi
          0x00
          dup1
          revert
        tag_45:
          jumpi(tag_49, callvalue)
          jumpi(tag_49, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))
          dup1
          calldataload
          0xffffffffffffffff
          dup2
          gt
          tag_51
          jumpi
          tag_53
          swap1
          calldatasize
          swap1
          dup4
          add
          tag_6
          jump\t// in
        tag_53:
          swap1
            /* \"lib/solmate/src/auth/Owned.sol\":756:800  require(msg.sender == owner, \"UNAUTHORIZED\") */
          tag_54
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          0xffffffffffffffffffffffffffffffffffffffff
          dup6
          sload
          and
            /* \"lib/solmate/src/auth/Owned.sol\":764:774  msg.sender */
          caller
            /* \"lib/solmate/src/auth/Owned.sol\":764:783  msg.sender == owner */
          eq
            /* \"lib/solmate/src/auth/Owned.sol\":756:800  require(msg.sender == owner, \"UNAUTHORIZED\") */
          tag_9
          jump\t// in
        tag_54:
            /* \"src/GenericFactory.sol\":4409:4416  _curves */
          0x03
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          sload
          swap4
          tag_55
          calldatasize
          dup5
          dup5
          tag_14
          jump\t// in
        tag_55:
          0x20
          dup2
          mload
          swap2
          add
            /* \"src/GenericFactory.sol\":4444:4464  keccak256(aInitCode) */
          keccak256
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          swap4
          0x010000000000000000
          dup7
          lt
          iszero
          tag_56
          jumpi
          pop
          pop
          swap1
            /* \"src/GenericFactory.sol\":4532:4541  aInitCode */
          tag_58
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          swap2
          0x01
          dup6
          add
            /* \"src/GenericFactory.sol\":4409:4416  _curves */
          0x03
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          sstore
          dup4
          tag_59
          dup7
          tag_7
          jump\t// in
        tag_59:
          dup2
          swap3
          swap2
          sload
          swap1
            /* \"src/GenericFactory.sol\":4409:4416  _curves */
          0x03
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          shl
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
            /* \"src/GenericFactory.sol\":389:399  0x6000 - 1 */
          dup2
          shl
          swap3
          dup4
          swap2
          shl
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          and
          swap2
          not
          and
          or
          swap1
          sstore
            /* \"src/GenericFactory.sol\":4532:4541  aInitCode */
          dup4
          tag_15
          jump\t// in
        tag_58:
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          dup3
          mload
          swap2
          dup3
          mstore
          0x20
          dup3
          add
          mstore
          return
        tag_56:
          swap1
          0x41
          0x24
          swap3
          0x4e487b7100000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          mstore
          revert
        tag_51:
          dup3
          dup1
          revert
        tag_49:
          pop
          dup1
          revert
        tag_43:
          pop
          dup3
          swap1
          jumpi(tag_51, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_51
          jumpi
            /* \"lib/solmate/src/auth/Owned.sol\":756:800  require(msg.sender == owner, \"UNAUTHORIZED\") */
          tag_64
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          0xffffffffffffffffffffffffffffffffffffffff
          dup5
          sload
          and
            /* \"lib/solmate/src/auth/Owned.sol\":764:774  msg.sender */
          caller
            /* \"lib/solmate/src/auth/Owned.sol\":764:783  msg.sender == owner */
          eq
            /* \"lib/solmate/src/auth/Owned.sol\":756:800  require(msg.sender == owner, \"UNAUTHORIZED\") */
          tag_9
          jump\t// in
        tag_64:
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          calldataload
          dup3
          mstore
          mstore(0x20, 0x01)
          calldataload(0x24)
          swap1
          dup3
          keccak256
          sstore
          dup1
          return
        tag_41:
          dup3
          jumpi(tag_67, callvalue)
          jumpi(tag_67, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))
          0xffffffffffffffffffffffff0000000000000000000000000000000000000000
          tag_69
          tag_1
          jump\t// in
        tag_69:
          dup3
          sload
          swap1
          0xffffffffffffffffffffffffffffffffffffffff
          swap1
            /* \"lib/solmate/src/auth/Owned.sol\":756:800  require(msg.sender == owner, \"UNAUTHORIZED\") */
          tag_70
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          dup3
          dup5
          and
            /* \"lib/solmate/src/auth/Owned.sol\":764:774  msg.sender */
          caller
            /* \"lib/solmate/src/auth/Owned.sol\":764:783  msg.sender == owner */
          eq
            /* \"lib/solmate/src/auth/Owned.sol\":756:800  require(msg.sender == owner, \"UNAUTHORIZED\") */
          tag_9
          jump\t// in
        tag_70:
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          and
          swap2
          dup3
          swap2
          and
          or
          dup3
          sstore
            /* \"lib/solmate/src/auth/Owned.sol\":764:774  msg.sender */
          caller
            /* \"lib/solmate/src/auth/Owned.sol\":1424:1466  OwnershipTransferred(msg.sender, newOwner) */
          0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
          dup4
          dup1
          log3
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          dup1
          return
        tag_67:
          dup1
          revert
        tag_39:
          pop
          dup3
          swap1
          jumpi(tag_51, callvalue)
          jumpi(tag_51, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))
          calldataload
            /* \"src/GenericFactory.sol\":4153:4177  bytes32[] public _curves */
          0x03
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          sload
            /* \"src/GenericFactory.sol\":4153:4177  bytes32[] public _curves */
          dup2
          lt
          iszero
          tag_51
          jumpi
          0x03
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          0x20
          swap4
          mstore
          0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b
          add
          sload
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_37:
          pop
          swap2
          jumpi(tag_49, callvalue)
          jumpi(tag_49, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))
          dup3
          calldataload
          0xffffffffffffffff
          dup2
          gt
          tag_51
          jumpi
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"lib/solmate/src/auth/Owned.sol\":756:800  require(msg.sender == owner, \"UNAUTHORIZED\") */
          tag_83
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          tag_84
          0x20
          swap7
            /* \"src/GenericFactory.sol\":3924:3933  aInitCode */
          tag_85
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          swap5
          calldatasize
          swap2
          add
          tag_6
          jump\t// in
        tag_84:
          swap3
          swap1
          swap6
          sload
          and
            /* \"lib/solmate/src/auth/Owned.sol\":764:774  msg.sender */
          caller
            /* \"lib/solmate/src/auth/Owned.sol\":764:783  msg.sender == owner */
          eq
            /* \"lib/solmate/src/auth/Owned.sol\":756:800  require(msg.sender == owner, \"UNAUTHORIZED\") */
          tag_9
          jump\t// in
        tag_83:
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          tag_86
          calldatasize
          dup3
          dup7
          tag_14
          jump\t// in
        tag_86:
          dup6
          dup2
          mload
          swap2
          add
            /* \"src/GenericFactory.sol\":3868:3888  keccak256(aInitCode) */
          keccak256
            /* \"src/GenericFactory.sol\":3924:3933  aInitCode */
          swap4
          dup5
          tag_15
          jump\t// in
        tag_85:
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          mload
          swap1
          dup2
          mstore
          return
        tag_35:
          pop
          dup3
          tag_87
          calldatasize
          tag_3
          jump\t// in
        tag_87:
          swap2
          swap4
          0xff
          dup7
          sload
          0xa0
          shr
          and
          iszero
          tag_88
          jumpi
            /* \"src/GenericFactory.sol\":8008:8047  getBytecode(aCodeKey, aToken0, aToken1) */
          pop
          dup5
          swap2
          tag_90
          swap2
          dup6
          tag_11
          jump\t// in
        tag_90:
            /* \"src/GenericFactory.sol\":8154:8548  assembly (\"memory-safe\") {... */
          0x20
          dup2
          mload
          swap2
          add
          callvalue
          create2
          swap3
          dup4
          extcodesize
          iszero
          tag_67
          jumpi
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          pop
            /* \"src/GenericFactory.sol\":8563:8592  Deployed(aCodeKey, rContract) */
          0xe491e278e37782abe0872fe7c7b549cd7b0713d0c5c1e84a81899a5fdf32087b
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          dup2
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/GenericFactory.sol\":8154:8548  assembly (\"memory-safe\") {... */
          0x20
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          swap6
          dup3
          mload
          swap6
          dup7
          mstore
          and
          swap4
          dup5
          dup7
          dup3
          add
          mstore
            /* \"src/GenericFactory.sol\":8563:8592  Deployed(aCodeKey, rContract) */
          log1
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          mload
          swap1
          dup2
          mstore
          return
        tag_88:
          0x64
          swap1
          0x20
          dup6
          mload
          swap2
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          dup3
          add
          mstore
          0x1f
          0x24
          dup3
          add
          mstore
          0x464143544f52593a204f4e4c595f4348494c4452454e5f43414e5f43414c4c00
          0x44
          dup3
          add
          mstore
          revert
        tag_33:
          pop
          pop
          jumpi(tag_67, callvalue)
          dup1
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_67
          jumpi
          swap1
          dup1
          mload
          swap2
          dup3
          swap1
            /* \"src/GenericFactory.sol\":5287:5296  _allPairs */
          0x05
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          sload
          swap2
          dup3
          dup6
          mstore
          0x20
          dup1
          swap6
          add
          dup1
          swap4
            /* \"src/GenericFactory.sol\":5287:5296  _allPairs */
          0x05
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          dup5
          mstore
          0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0
          swap1
          dup5
        tag_97:
          dup2
          dup2
          lt
          tag_98
          jumpi
          pop
          pop
          pop
          dup2
          tag_100
          swap2
          sub
          dup3
          tag_12
          jump\t// in
        tag_100:
          dup4
          mload
          swap5
          dup6
          swap5
          dup2
          dup7
          add
          swap3
          dup3
          dup8
          mstore
          mload
          dup1
          swap4
          mstore
          dup6
          add
          swap4
          swap3
        tag_101:
          dup3
          dup2
          lt
          tag_102
          jumpi
          pop
          pop
          pop
          pop
          sub
          swap1
          return
        tag_102:
          dup4
          mload
          0xffffffffffffffffffffffffffffffffffffffff
          and
          dup6
          mstore
          dup7
          swap6
          pop
          swap4
          dup2
          add
          swap4
          swap3
          dup2
          add
          swap3
          0x01
          add
          jump(tag_101)
        tag_98:
          dup3
          sload
          0xffffffffffffffffffffffffffffffffffffffff
          and
          dup5
          mstore
          swap3
          dup9
          add
          swap3
          0x01
          swap3
          dup4
          add
          swap3
          add
          jump(tag_97)
        tag_31:
          pop
          dup3
          swap1
          jumpi(tag_51, callvalue)
          jumpi(tag_51, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))
          0x20
          swap3
          dup3
          swap2
          calldataload
          dup2
          mstore
          0x01
          dup5
          mstore
          keccak256
          sload
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_29:
          dup3
          dup5
          jumpi(tag_49, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_49
          jumpi
          0xffffffffffffffffffffffffffffffffffffffff
          0x20
          swap3
          sload
          and
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_27:
          pop
          swap2
          jumpi(tag_49, callvalue)
          tag_114
          calldatasize
          tag_2
          jump\t// in
        tag_114:
          swap1
          swap4
          swap2
          swap5
          0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff
          swap2
          0x010000000000000000000000000000000000000000
          dup4
          dup6
          sload
          and
          or
          dup5
          sstore
          0xffffffffffffffffffffffffffffffffffffffff
          swap1
          dup2
          dup8
          and
          swap8
          dup3
          dup2
          and
            /* \"src/GenericFactory.sol\":5615:5633  aTokenA != aTokenB */
          swap9
          dup1
          dup11
          eq
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          tag_115
          jumpi
            /* \"src/GenericFactory.sol\":5684:5705  aTokenA != address(0) */
          dup10
          iszero
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          tag_117
          jumpi
          dup10
          dup8
          mstore
          0x20
          swap10
          dup6
          dup12
          mstore
          dup9
          dup9
          keccak256
          dup3
          dup10
          mstore
          dup12
          mstore
          dup9
          dup9
          keccak256
          dup5
          dup10
          mstore
          dup12
          mstore
          dup5
          dup10
          dup10
          keccak256
          sload
          and
          tag_119
          jumpi
            /* \"src/GenericFactory.sol\":5422:5427  a < b */
          lt
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          iszero
          tag_121
          jumpi
            /* \"src/GenericFactory.sol\":5422:5445  a < b ? (a, b) : (b, a) */
          swap7
          swap3
        tag_123:
            /* \"src/GenericFactory.sol\":4692:4709  _curves[aCurveId] */
          dup3
          dup7
            /* \"src/GenericFactory.sol\":4727:4766  getBytecode(lCodeKey, aToken0, aToken1) */
          tag_124
            /* \"src/GenericFactory.sol\":4692:4709  _curves[aCurveId] */
          dup7
          dup12
          tag_125
          dup8
          tag_7
          jump\t// in
        tag_125:
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          swap1
          sload
          swap1
            /* \"src/GenericFactory.sol\":4692:4699  _curves */
          0x03
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          shl
          shr
            /* \"src/GenericFactory.sol\":4727:4766  getBytecode(lCodeKey, aToken0, aToken1) */
          tag_11
          jump\t// in
        tag_124:
            /* \"src/GenericFactory.sol\":6150:6811  assembly (\"memory-safe\") {... */
          dup12
          dup2
          mload
          swap2
          add
          dup3
          create2
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          and
            /* \"src/GenericFactory.sol\":6828:6847  rPair != address(0) */
          swap8
          dup9
          iszero
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          tag_126
          jumpi
          dup4
          and
          swap3
          dup4
          dup8
          mstore
          dup2
          dup11
          mstore
          dup8
          dup8
          keccak256
          swap5
          and
          swap4
          dup5
          dup8
          mstore
          dup10
          mstore
          dup7
          dup7
          keccak256
          dup3
          dup8
          mstore
          dup10
          mstore
          dup7
          dup7
          keccak256
          swap1
          0xffffffffffffffffffffffff0000000000000000000000000000000000000000
          swap2
          dup10
          dup4
          dup3
          sload
          and
          or
          swap1
          sstore
          dup5
          dup8
          mstore
          dup1
          dup11
          mstore
          dup8
          dup8
          keccak256
          dup5
          dup9
          mstore
          dup11
          mstore
          dup8
          dup8
          keccak256
          dup4
          dup9
          mstore
          dup11
          mstore
          dup8
          dup8
          keccak256
          dup10
          dup4
          dup3
          sload
          and
          or
          swap1
          sstore
            /* \"src/GenericFactory.sol\":7055:7064  _allPairs */
          0x05
            /* \"src/GenericFactory.sol\":389:399  0x6000 - 1 */
          sload
          swap1
          0x010000000000000000
          dup3
          lt
          iszero
          tag_128
          jumpi
          0x01
          dup3
          add
          dup1
            /* \"src/GenericFactory.sol\":7055:7064  _allPairs */
          0x05
            /* \"src/GenericFactory.sol\":389:399  0x6000 - 1 */
          sstore
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          dup3
          lt
          iszero
          tag_130
          jumpi
          pop
          swap2
          dup8
          swap2
          dup10
            /* \"src/GenericFactory.sol\":7092:7138  PairCreated(lToken0, lToken1, aCurveId, rPair) */
          0xc3168168beb4136b347bbd2afd38adb2282984cdfba1e15b86d35942f015f4ca
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          swap5
            /* \"src/GenericFactory.sol\":7055:7064  _allPairs */
          0x05
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          dup11
          mstore
          0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0
          add
            /* \"src/GenericFactory.sol\":389:399  0x6000 - 1 */
          swap2
          dup3
          sload
          and
          or
          swap1
          sstore
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          dup2
          mload
          swap1
          dup2
          mstore
          dup9
          dup11
          dup3
          add
          mstore
            /* \"src/GenericFactory.sol\":7092:7138  PairCreated(lToken0, lToken1, aCurveId, rPair) */
          log3
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          dup2
          sload
          and
          swap1
          sstore
          mload
          swap1
          dup2
          mstore
          return
        tag_130:
          dup8
          0x32
          0x24
          swap3
          0x4e487b7100000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          mstore
          revert
            /* \"src/GenericFactory.sol\":389:399  0x6000 - 1 */
        tag_128:
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          dup8
          0x41
          0x24
          swap3
          0x4e487b7100000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          mstore
          revert
        tag_126:
          0x64
          dup3
          dup12
          dup11
          mload
          swap2
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          dup3
          add
          mstore
          0x16
          0x24
          dup3
          add
          mstore
          0x464143544f52593a204445504c4f595f4641494c454400000000000000000000
          0x44
          dup3
          add
          mstore
          revert
            /* \"src/GenericFactory.sol\":5422:5445  a < b ? (a, b) : (b, a) */
        tag_121:
          swap3
          jump(tag_123)
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
        tag_119:
          0x64
          dup7
          dup13
          dup12
          mload
          swap2
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          dup3
          add
          mstore
          0x14
          0x24
          dup3
          add
          mstore
          0x464143544f52593a20504149525f455849535453000000000000000000000000
          0x44
          dup3
          add
          mstore
          revert
        tag_117:
          0x64
          dup6
          0x20
          dup11
          mload
          swap2
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          dup3
          add
          mstore
          0x15
          0x24
          dup3
          add
          mstore
          0x464143544f52593a205a45524f5f414444524553530000000000000000000000
          0x44
          dup3
          add
          mstore
          revert
        tag_115:
          0x64
          dup6
          0x20
          dup11
          mload
          swap2
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          dup3
          add
          mstore
          0x1c
          0x24
          dup3
          add
          mstore
          0x464143544f52593a204944454e544943414c5f41444452455353455300000000
          0x44
          dup3
          add
          mstore
          revert
        tag_25:
          pop
          swap1
          jumpi(tag_67, callvalue)
          jumpi(tag_67, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x60))
          tag_136
          tag_1
          jump\t// in
        tag_136:
          0xffffffffffffffff
          swap2
          swap1
          calldataload(0x24)
          dup4
          dup2
          gt
          tag_51
          jumpi
          swap1
          tag_139
          tag_140
          swap3
          calldatasize
          swap1
          dup8
          add
          tag_6
          jump\t// in
        tag_139:
          swap3
          swap1
          calldataload(0x44)
          swap4
            /* \"lib/solmate/src/auth/Owned.sol\":756:800  require(msg.sender == owner, \"UNAUTHORIZED\") */
          tag_141
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          0xffffffffffffffffffffffffffffffffffffffff
          dup8
          sload
          and
            /* \"lib/solmate/src/auth/Owned.sol\":764:774  msg.sender */
          caller
            /* \"lib/solmate/src/auth/Owned.sol\":764:783  msg.sender == owner */
          eq
            /* \"lib/solmate/src/auth/Owned.sol\":756:800  require(msg.sender == owner, \"UNAUTHORIZED\") */
          tag_9
          jump\t// in
        tag_141:
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          calldatasize
          swap2
          tag_14
          jump\t// in
        tag_140:
          swap2
          dup7
          mload
          swap5
          dup8
          dup7
          add
          swap1
          dup7
          dup3
          lt
          swap1
          dup3
          gt
          or
          tag_142
          jumpi
          dup8
          mstore
          0x1a
          dup6
          mstore
          0x20
          swap6
          0x464143544f52593a205241575f43414c4c5f5245564552544544000000000000
          dup8
          dup8
          add
          mstore
            /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":5145:5166  address(this).balance */
          dup2
          selfbalance
            /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":5145:5175  address(this).balance >= value */
          lt
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          tag_144
          jumpi
            /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":1465:1484  account.code.length */
          dup3
          extcodesize
            /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */
          iszero
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          tag_146
          jumpi
            /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":5341:5372  target.call{value: value}(data) */
          pop
          swap3
          dup1
          dup4
          dup2
          swap4
            /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */
          tag_148
            /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":5341:5372  target.call{value: value}(data) */
          swap7
          dup10
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          tag_149
            /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":5341:5372  target.call{value: value}(data) */
          swap10
          swap8
          mload
          swap4
          add
          swap2
          gas
          call
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          jumpi(tag_150, iszero(returndatasize))
          returndatasize
          tag_152
          dup2
          tag_13
          jump\t// in
        tag_152:
          swap1
          tag_153
          dup10
          mload
          swap3
          dup4
          tag_12
          jump\t// in
        tag_153:
          dup2
          mstore
          dup1
          swap3
          dup8
          returndatasize
          swap3
          add
          returndatacopy
            /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */
          tag_16
          jump\t// in
        tag_148:
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          swap3
          mload
          swap3
          dup3
          dup5
          swap4
          dup5
          mstore
          dup4
          add
          swap1
          tag_5
          jump\t// in
        tag_149:
          sub
          swap1
          return
        tag_150:
          0x60
          swap2
          pop
            /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */
          tag_16
          jump\t// in
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
        tag_146:
          0x64
          swap1
          dup8
          dup10
          mload
          swap2
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          dup3
          add
          mstore
          0x1d
          0x24
          dup3
          add
          mstore
          0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000
          0x44
          dup3
          add
          mstore
          revert
        tag_144:
          0x84
          swap1
          dup8
          dup10
          mload
          swap2
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          dup3
          add
          mstore
          0x26
          0x24
          dup3
          add
          mstore
          0x416464726573733a20696e73756666696369656e742062616c616e636520666f
          0x44
          dup3
          add
          mstore
          0x722063616c6c0000000000000000000000000000000000000000000000000000
          0x64
          dup3
          add
          mstore
          revert
        tag_142:
          0x24
          dup6
          0x41
          dup10
          0x4e487b7100000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          mstore
          revert
        tag_23:
          dup3
          dup5
          jumpi(tag_49, callvalue)
          tag_149
          swap1
          tag_158
          tag_159
          calldatasize
          tag_3
          jump\t// in
        tag_159:
          swap2
          tag_11
          jump\t// in
        tag_158:
          swap1
          mload
          swap2
          dup3
          swap2
          0x20
          dup4
          mstore
          0x20
          dup4
          add
          swap1
          tag_5
          jump\t// in
        tag_21:
          pop
          dup3
          swap1
          jumpi(tag_51, callvalue)
          dup2
          0x20
          swap4
          tag_162
          calldatasize
          tag_2
          jump\t// in
        tag_162:
          swap2
          swap5
          0xffffffffffffffffffffffffffffffffffffffff
          dup1
          swap7
          and
          dup5
          mstore
          dup8
          mstore
          dup5
          dup5
          dup5
          keccak256
          swap2
          and
          dup4
          mstore
          dup7
          mstore
          dup3
          dup3
          keccak256
          swap1
          dup3
          mstore
          dup6
          mstore
          keccak256
          sload
          and
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_19:
          swap2
          pop
          pop
          jumpi(tag_49, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_49
          jumpi
          swap2
          swap1
            /* \"src/GenericFactory.sol\":4260:4267  _curves */
          0x03
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          sload
          swap1
          dup2
          dup5
          mstore
          0x20
          swap4
          dup5
          dup2
          add
          dup1
          swap4
            /* \"src/GenericFactory.sol\":4260:4267  _curves */
          0x03
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          dup5
          mstore
          0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b
          swap1
          dup5
        tag_167:
          dup2
          dup2
          lt
          tag_168
          jumpi
          pop
          pop
          pop
          dup2
          tag_170
          swap2
          sub
          dup3
          tag_12
          jump\t// in
        tag_170:
          dup4
          mload
          swap5
          dup6
          swap5
          dup2
          dup7
          add
          swap3
          dup3
          dup8
          mstore
          mload
          dup1
          swap4
          mstore
          dup6
          add
          swap4
          swap3
        tag_171:
          dup3
          dup2
          lt
          tag_172
          jumpi
          pop
          pop
          pop
          pop
          sub
          swap1
          return
        tag_172:
          dup4
          mload
          dup6
          mstore
          dup7
          swap6
          pop
          swap4
          dup2
          add
          swap4
          swap3
          dup2
          add
          swap3
          0x01
          add
          jump(tag_171)
        tag_168:
          dup3
          sload
          dup5
          mstore
          swap3
          dup9
          add
          swap3
          0x01
          swap3
          dup4
          add
          swap3
          add
          jump(tag_167)
        tag_1:
          calldataload(0x04)
          swap1
          0xffffffffffffffffffffffffffffffffffffffff
          dup3
          and
          dup3
          sub
          tag_174
          jumpi
          jump\t// out
        tag_174:
          0x00
          dup1
          revert
        tag_2:
          0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc
          0x60
          swap2
          add
          slt
          tag_174
          jumpi
          0xffffffffffffffffffffffffffffffffffffffff
          swap1
          calldataload(0x04)
          dup3
          dup2
          and
          dup2
          sub
          tag_174
          jumpi
          swap2
          calldataload(0x24)
          swap1
          dup2
          and
          dup2
          sub
          tag_174
          jumpi
          swap1
          calldataload(0x44)
          swap1
          jump\t// out
        tag_3:
          0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc
          0x60
          swap2
          add
          slt
          tag_174
          jumpi
          calldataload(0x04)
          swap1
          0xffffffffffffffffffffffffffffffffffffffff
          swap1
          calldataload(0x24)
          dup3
          dup2
          and
          dup2
          sub
          tag_174
          jumpi
          swap2
          calldataload(0x44)
          swap1
          dup2
          and
          dup2
          sub
          tag_174
          jumpi
          swap1
          jump\t// out
        tag_4:
          0x00
        tag_188:
          dup4
          dup2
          lt
          tag_189
          jumpi
          pop
          pop
          0x00
          swap2
          add
          mstore
          jump\t// out
        tag_189:
          dup2
          dup2
          add
          mload
          dup4
          dup3
          add
          mstore
          0x20
          add
          jump(tag_188)
        tag_5:
          swap1
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
          0x1f
          0x20
          swap4
          tag_191
          dup2
          mload
          dup1
          swap3
          dup2
          dup8
          mstore
          dup8
          dup1
          dup9
          add
          swap2
          add
          tag_4
          jump\t// in
        tag_191:
          add
          and
          add
          add
          swap1
          jump\t// out
        tag_6:
          swap2
          dup2
          0x1f
          dup5
          add
          slt
          iszero
          tag_174
          jumpi
          dup3
          calldataload
          swap2
          0xffffffffffffffff
          dup4
          gt
          tag_174
          jumpi
          0x20
          dup4
          dup2
          dup7
          add
          swap6
          add
          add
          gt
          tag_174
          jumpi
          jump\t// out
        tag_7:
            /* \"src/GenericFactory.sol\":4692:4699  _curves */
          0x03
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          sload
          dup2
          lt
          iszero
          tag_198
          jumpi
            /* \"src/GenericFactory.sol\":4692:4699  _curves */
          0x03
          0x00
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          mstore
          0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b
          add
          swap1
          0x00
          swap1
          jump\t// out
        tag_198:
          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)
          mstore(0x04, 0x32)
          revert(0x00, 0x24)
        tag_8:
          dup1
          sload
          dup3
          lt
          iszero
          tag_198
          jumpi
          0x00
          mstore
          keccak256(0x00, 0x20)
          add
          swap1
          0x00
          swap1
          jump\t// out
        tag_9:
          iszero
          tag_202
          jumpi
          jump\t// out
        tag_202:
          0x64
          mload(0x40)
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
          0x20
          0x04
          dup3
          add
          mstore
          0x0c
          0x24
          dup3
          add
          mstore
          0x554e415554484f52495a45440000000000000000000000000000000000000000
          0x44
          dup3
          add
          mstore
          revert
        tag_10:
          swap2
          swap1
          dup3
          add
          dup1
          swap3
          gt
          tag_204
          jumpi
          jump\t// out
        tag_204:
          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)
          mstore(0x04, 0x11)
          revert(0x00, 0x24)
            /* \"src/GenericFactory.sol\":1959:3748  function getBytecode(bytes32 aCodeKey, address aToken0, address aToken1) public view returns (bytes memory) {... */
        tag_11:
          swap3
          swap2
          swap3
          0x00
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          swap1
          dup2
          mstore
            /* \"src/GenericFactory.sol\":2107:2119  _getByteCode */
          0x02
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          0x20
          mstore
          0x40
          swap1
          dup2
          dup2
          keccak256
            /* \"src/GenericFactory.sol\":2453:2571  assembly (\"memory-safe\") {... */
          dup3
          mload
          swap4
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          0x20
            /* \"src/GenericFactory.sol\":2453:2571  assembly (\"memory-safe\") {... */
          dup6
          add
            /* \"src/GenericFactory.sol\":2581:2608  uint256 lByteCodeLength = 0 */
          swap3
          dup1
            /* \"src/GenericFactory.sol\":2623:2636  uint256 i = 0 */
          swap3
          dup2
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          dup2
          sload
            /* \"src/GenericFactory.sol\":2618:3250  for (uint256 i = 0; i < lByteCode.length; ++i) {... */
          swap2
            /* \"src/GenericFactory.sol\":2638:2658  i < lByteCode.length */
        tag_206:
          dup3
          dup5
          lt
          tag_207
          jumpi
            /* \"src/GenericFactory.sol\":3379:3715  assembly (\"memory-safe\") {... */
          pop
          pop
          pop
          pop
          swap1
          dup4
          swap5
          swap6
          swap7
          dup5
          swap3
          dup5
          mstore
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          0x20
            /* \"src/GenericFactory.sol\":3379:3715  assembly (\"memory-safe\") {... */
          dup5
          add
          mstore
          add
          dup5
          mstore
          add
          swap1
          mstore
            /* \"src/GenericFactory.sol\":1959:3748  function getBytecode(bytes32 aCodeKey, address aToken0, address aToken1) public view returns (bytes memory) {... */
          swap1
          jump\t// out
            /* \"src/GenericFactory.sol\":2660:2663  ++i */
        tag_207:
            /* \"src/GenericFactory.sol\":2698:2710  lByteCode[i] */
          swap1
          swap2
          swap3
          swap5
          swap6
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/GenericFactory.sol\":2698:2710  lByteCode[i] */
          tag_209
          dup8
          dup5
          tag_8
          jump\t// in
        tag_209:
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          swap1
          sload
          swap1
          0x03
          shl
          shr
          and
            /* \"src/GenericFactory.sol\":2740:2760  lPointer.code.length */
          swap1
          dup2
          extcodesize
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
          swap1
          dup2
          dup2
          add
          swap4
          dup2
          dup6
          gt
          tag_210
          jumpi
            /* \"src/GenericFactory.sol\":2914:3118  assembly (\"memory-safe\") {... */
          swap3
            /* \"src/GenericFactory.sol\":3132:3149  lFreeMem += lSize */
          tag_212
            /* \"src/GenericFactory.sol\":2914:3118  assembly (\"memory-safe\") {... */
          swap3
          dup6
          swap5
          swap3
          dup6
            /* \"src/GenericFactory.sol\":2763:2767  0x01 */
          0x01
            /* \"src/GenericFactory.sol\":2914:3118  assembly (\"memory-safe\") {... */
          dup5
            /* \"src/GenericFactory.sol\":3215:3239  lByteCodeLength += lSize */
          tag_213
            /* \"src/GenericFactory.sol\":2914:3118  assembly (\"memory-safe\") {... */
          swap10
          swap7
          extcodecopy
          dup3
          add
          add
          dup13
          mstore
            /* \"src/GenericFactory.sol\":3132:3149  lFreeMem += lSize */
          tag_10
          jump\t// in
        tag_212:
            /* \"src/GenericFactory.sol\":3215:3239  lByteCodeLength += lSize */
          swap8
          tag_10
          jump\t// in
        tag_213:
            /* \"src/GenericFactory.sol\":2660:2663  ++i */
          swap5
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
          dup2
          eq
          tag_214
          jumpi
            /* \"src/GenericFactory.sol\":2763:2767  0x01 */
          0x01
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          add
            /* \"src/GenericFactory.sol\":2623:2636  uint256 i = 0 */
          swap3
          swap2
          swap1
          jump(tag_206)
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
        tag_214:
          0x24
          dup4
          0x4e487b7100000000000000000000000000000000000000000000000000000000
          dup2
          mstore
          mstore(0x04, 0x11)
          revert
        tag_210:
          0x24
          dup8
          0x4e487b7100000000000000000000000000000000000000000000000000000000
          dup2
          mstore
          mstore(0x04, 0x11)
          revert
        tag_12:
          swap1
          0x1f
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
          swap2
          add
          and
          dup2
          add
          swap1
          dup2
          lt
          0xffffffffffffffff
          dup3
          gt
          or
          tag_216
          jumpi
          0x40
          mstore
          jump\t// out
        tag_216:
          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)
          mstore(0x04, 0x41)
          revert(0x00, 0x24)
        tag_13:
          0xffffffffffffffff
          dup2
          gt
          tag_216
          jumpi
          0x1f
          add
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
          and
          0x20
          add
          swap1
          jump\t// out
        tag_14:
          swap3
          swap2
          swap3
          tag_220
          dup3
          tag_13
          jump\t// in
        tag_220:
          swap2
          tag_221
          mload(0x40)
          swap4
          dup5
          tag_12
          jump\t// in
        tag_221:
          dup3
          swap5
          dup2
          dup5
          mstore
          dup2
          dup4
          add
          gt
          tag_174
          jumpi
          dup3
          dup2
          0x20
          swap4
          dup5
          0x00
          swap7
          add
          calldatacopy
          add
          add
          mstore
          jump\t// out
            /* \"src/GenericFactory.sol\":1323:1953  function _writeBytecode(bytes32 aCodeKey, bytes calldata aInitCode) internal {... */
        tag_15:
          swap2
            /* \"src/GenericFactory.sol\":1427:1428  0 */
          0x00
            /* \"src/GenericFactory.sol\":1438:1466  uint256 lInitCodePointer = 0 */
          swap2
          dup3
            /* \"src/GenericFactory.sol\":1483:1518  lInitCodePointer < aInitCode.length */
        tag_224:
          dup3
          dup5
          lt
          tag_225
          jumpi
            /* \"src/GenericFactory.sol\":1323:1953  function _writeBytecode(bytes32 aCodeKey, bytes calldata aInitCode) internal {... */
          pop
          pop
          pop
          pop
          pop
          jump\t// out
            /* \"src/GenericFactory.sol\":1476:1947  while (lInitCodePointer < aInitCode.length) {... */
        tag_225:
            /* \"src/GenericFactory.sol\":389:399  0x6000 - 1 */
          0x5fff
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          dup5
          add
          dup1
          dup6
          gt
          tag_204
          jumpi
            /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":673:678  a < b */
          dup1
          dup5
          lt
          iszero
          tag_229
          jumpi
            /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":673:686  a < b ? a : b */
          pop
          dup3
          swap4
        tag_231:
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          dup6
            /* \"src/GenericFactory.sol\":1427:1428  0 */
          0x00
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          mstore
          0x20
            /* \"src/GenericFactory.sol\":1787:1799  _getByteCode */
          0x02
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          dup2
          mstore
          0x40
          dup1
            /* \"src/GenericFactory.sol\":1427:1428  0 */
          0x00
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          keccak256
            /* \"src/GenericFactory.sol\":389:399  0x6000 - 1 */
          swap3
          dup8
          dup2
          gt
          tag_174
          jumpi
          dup7
          dup9
          gt
          tag_174
          jumpi
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          tag_236
          swap1
          calldatasize
            /* \"src/GenericFactory.sol\":389:399  0x6000 - 1 */
          swap1
          dup1
          dup11
          sub
          swap1
          dup9
          add
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          tag_14
          jump\t// in
        tag_236:
          swap3
          dup2
          mload
            /* \"lib/solmate/src/utils/SSTORE2.sol\":879:910  abi.encodePacked(hex\"00\", data) */
          swap3
          dup1
          dup5
          add
            /* \"src/GenericFactory.sol\":1427:1428  0 */
          0x00
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          dup2
          mstore
            /* \"lib/solmate/src/utils/SSTORE2.sol\":879:910  abi.encodePacked(hex\"00\", data) */
          tag_237
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          dup6
          dup8
          mload
          tag_238
          dup2
          0x21
          swap11
          dup8
          dup13
          dup7
          add
          swap2
          add
          tag_4
          jump\t// in
        tag_238:
          dup2
          add
            /* \"lib/solmate/src/utils/SSTORE2.sol\":879:910  abi.encodePacked(hex\"00\", data) */
          sub
          swap7
          0x01
          swap8
          dup9
          dup2
          add
          dup9
          mstore
          add
          dup7
          tag_12
          jump\t// in
        tag_237:
            /* \"lib/solmate/src/utils/SSTORE2.sol\":949:3033  abi.encodePacked(... */
          tag_239
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          dup5
          mload
            /* \"lib/solmate/src/utils/SSTORE2.sol\":949:3033  abi.encodePacked(... */
          swap2
          dup3
          dup5
          dup2
          add
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          swap8
          0x600b5981380380925939f3000000000000000000000000000000000000000000
          dup10
          mstore
          mload
          tag_240
          dup2
          0x2b
          swap5
          dup6
          dup6
          add
          swap1
          tag_4
          jump\t// in
        tag_240:
          dup2
          add
            /* \"lib/solmate/src/utils/SSTORE2.sol\":949:3033  abi.encodePacked(... */
          sub
          0x0b
          dup2
          add
          dup5
          mstore
          add
          dup3
          tag_12
          jump\t// in
        tag_239:
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"lib/solmate/src/utils/SSTORE2.sol\":3087:3336  assembly {... */
          swap5
          dup6
          swap2
          mload
          swap1
            /* \"src/GenericFactory.sol\":1427:1428  0 */
          0x00
            /* \"lib/solmate/src/utils/SSTORE2.sol\":3087:3336  assembly {... */
          create
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          and
            /* \"lib/solmate/src/utils/SSTORE2.sol\":3354:3375  pointer != address(0) */
          swap3
          dup4
          iszero
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          tag_241
          jumpi
            /* \"src/GenericFactory.sol\":389:399  0x6000 - 1 */
          pop
          pop
          dup1
          sload
          0x010000000000000000
          dup2
          lt
          iszero
          tag_216
          jumpi
          tag_245
          swap2
          dup6
          dup3
          add
          dup2
          sstore
          tag_8
          jump\t// in
        tag_245:
          swap1
          swap3
          dup4
          sload
          swap2
          0x03
          shl
          swap1
          dup2
          shl
          swap3
          dup4
          swap2
          shl
          and
          swap2
          not
          and
          or
          swap1
          sstore
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          dup2
          add
          dup1
          swap2
          gt
          iszero
            /* \"src/GenericFactory.sol\":1476:1947  while (lInitCodePointer < aInitCode.length) {... */
          tag_224
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          jumpi
          0x4e487b7100000000000000000000000000000000000000000000000000000000
            /* \"src/GenericFactory.sol\":1427:1428  0 */
          0x00
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          mstore
          mstore(0x04, 0x11)
          0x24
            /* \"src/GenericFactory.sol\":1427:1428  0 */
          0x00
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          revert
        tag_241:
          0x64
          swap3
          pop
          mload
          swap1
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup3
          mstore
          0x04
          dup3
          add
          mstore
          0x11
          0x24
          dup3
          add
          mstore
          0x4445504c4f594d454e545f4641494c4544000000000000000000000000000000
          0x44
          dup3
          add
          mstore
          revert
            /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":673:686  a < b ? a : b */
        tag_229:
          swap4
          jump(tag_231)
            /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":7561:8303  function verifyCallResult(... */
        tag_16:
          swap1
          swap2
          swap1
            /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":7731:8297  if (success) {... */
          iszero
          tag_248
          jumpi
            /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":7758:7775  return returndata */
          pop
          swap1
          jump\t// out
            /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":7731:8297  if (success) {... */
        tag_248:
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          dup2
          mload
            /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":7876:7897  returndata.length > 0 */
          iszero
            /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":7876:7893  returndata.length */
          tag_250
          jumpi
            /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":8060:8214  assembly {... */
          pop
          dup1
          mload
          swap1
          0x20
          add
          revert
            /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":7872:8287  if (returndata.length > 0) {... */
        tag_250:
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          tag_252
          swap1
          mload(0x40)
            /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":8252:8272  revert(errorMessage) */
          swap2
          dup3
          swap2
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup4
          mstore
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          0x20
            /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":8252:8272  revert(errorMessage) */
          0x04
          dup5
          add
            /* \"src/GenericFactory.sol\":402:8601  contract GenericFactory is IGenericFactory, Owned {... */
          mstore
          0x24
          dup4
          add
          swap1
          tag_5
          jump\t// in
        tag_252:
            /* \"lib/openzeppelin-contracts/contracts/utils/Address.sol\":8252:8272  revert(errorMessage) */
          sub
          swap1
          revert

        auxdata: 0xa164736f6c6343000811000a
    }
}

sub_2: assembly {
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      0x01a0
      0x40
      dup2
      dup2
      mstore
      jumpi(tag_15, callvalue)
      dup1
      dup3
      bytecodeSize
      dup1
      codesize
      sub
      dup1
      swap2
      tag_14
      dup3
      dup6
      tag_2
      jump\t// in
    tag_14:
      dup4
      codecopy
      dup2
      add
      sub
      slt
      tag_15
      jumpi
      tag_17
      dup3
      tag_3
      jump\t// in
    tag_17:
      swap1
      tag_18
      0x20
      dup1
      swap5
      add
      tag_3
      jump\t// in
    tag_18:
      swap3
      dup2
      mload
      swap4
      tag_19
      dup6
      tag_1
      jump\t// in
    tag_19:
      0x0b
      dup6
      mstore
      shl(0xa8, 0x43503a3a73776170466565)
      dup3
      dup7
      add
      mstore
      dup3
      mload
      swap1
      tag_20
      dup3
      tag_1
      jump\t// in
    tag_20:
      0x12
      dup3
      mstore
      shl(0x71, 0x2932b9b2b93b37b4b9102628102a37b5b2b7)
      dup4
      dup4
      add
      mstore
      dup4
      mload
      swap4
      tag_21
      dup6
      tag_1
      jump\t// in
    tag_21:
      0x06
      dup6
      mstore
      shl(0xd4, 0x05245532d4c5)
      dup5
      dup7
      add
      mstore
      dup3
      mload
      swap5
      sub(shl(0x40, 0x01), 0x01)
      swap4
      dup5
      dup8
      gt
      tag_22
      jumpi
      0x00
      swap7
      dup1
      tag_24
      dup10
      sload
      tag_8
      jump\t// in
    tag_24:
      swap3
      0x1f
      swap4
      dup5
      dup2
      gt
      tag_25
      jumpi
    tag_26:
      pop
      dup9
      swap1
      dup5
      dup4
      gt
      0x01
      eq
      tag_27
      jumpi
      dup11
      swap3
      tag_29
      jumpi
    tag_30:
      pop
      pop
      dup2
      0x01
      shl
      swap2
      not(0x00)
      swap1
      0x03
      shl
      shr
      not
      and
      or
      dup8
      sstore
    tag_31:
      dup2
      mload
      swap1
      dup6
      dup3
      gt
      tag_50
      jumpi
      dup2
      swap1
      0x01
      swap4
      tag_34
      dup6
      sload
      tag_8
      jump\t// in
    tag_34:
      dup3
      dup2
      gt
      tag_35
      jumpi
    tag_36:
      pop
      dup9
      swap2
      dup4
      gt
      0x01
      eq
      tag_37
      jumpi
      dup10
      swap3
      tag_39
      jumpi
    tag_40:
      pop
      pop
      not(0x00)
      0x03
      dup4
      swap1
      shl
      shr
      not
      and
      swap1
      dup3
      shl
      or
      dup2
      sstore
    tag_41:
      0x12
        /* \"lib/solmate/src/tokens/ERC20.sol\":2142:2162  decimals = _decimals */
      0x80
      mstore
        /* \"lib/solmate/src/tokens/ERC20.sol\":2192:2205  block.chainid */
      chainid
        /* \"lib/solmate/src/tokens/ERC20.sol\":2173:2205  INITIAL_CHAIN_ID = block.chainid */
      0xa0
      mstore
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      dup2
      mload
      dup7
      sload
      swap2
      dup2
      dup9
      tag_42
      dup6
      tag_8
      jump\t// in
    tag_42:
      swap3
      dup4
      dup4
      mstore
      dup10
      dup4
      add
      swap6
      dup11
      dup3
      dup3
      and
        /* \"lib/solmate/src/tokens/ERC20.sol\":2116:2132  symbol = _symbol */
      swap2
      dup3
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      0x00
        /* \"lib/solmate/src/tokens/ERC20.sol\":2116:2132  symbol = _symbol */
      eq
      tag_43
      jumpi
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      pop
      pop
      0x01
      eq
      tag_45
      jumpi
    tag_46:
      pop
      tag_47
      swap3
      pop
      sub
      dup3
      tag_2
      jump\t// in
    tag_47:
      mload
        /* \"lib/solmate/src/tokens/ERC20.sol\":5789:5811  keccak256(bytes(name)) */
      swap1
      keccak256
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      swap2
      dup2
      mload
        /* \"lib/solmate/src/tokens/ERC20.sol\":5640:5935  abi.encode(... */
      swap3
      dup6
      dup5
      add
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      swap1
        /* \"lib/solmate/src/tokens/ERC20.sol\":5672:5767  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */
      0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      dup3
      mstore
      dup4
      dup6
      add
      mstore
        /* \"lib/solmate/src/tokens/ERC20.sol\":5833:5847  keccak256(\"1\") */
      0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      0x60
      dup6
      add
      mstore
        /* \"lib/solmate/src/tokens/ERC20.sol\":2192:2205  block.chainid */
      chainid
        /* \"lib/solmate/src/tokens/ERC20.sol\":2142:2162  decimals = _decimals */
      0x80
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      dup6
      add
      mstore
        /* \"lib/solmate/src/tokens/ERC20.sol\":5912:5916  this */
      address
        /* \"lib/solmate/src/tokens/ERC20.sol\":2173:2205  INITIAL_CHAIN_ID = block.chainid */
      0xa0
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      dup6
      add
      mstore
        /* \"lib/solmate/src/tokens/ERC20.sol\":2173:2205  INITIAL_CHAIN_ID = block.chainid */
      0xa0
        /* \"lib/solmate/src/tokens/ERC20.sol\":5640:5935  abi.encode(... */
      dup5
      mstore
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      0xc0
      dup5
      add
      swap1
      dup5
      dup3
      lt
      dup7
      dup4
      gt
      or
      tag_50
      jumpi
      dup2
      dup5
      mstore
      dup5
      mload
        /* \"lib/solmate/src/tokens/ERC20.sol\":5613:5949  keccak256(... */
      swap1
      keccak256
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      0xc0
        /* \"lib/solmate/src/tokens/ERC20.sol\":2215:2266  INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator() */
      mstore
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      0x0140
      swap5
      dup6
      dup6
      add
      swap1
      dup2
      gt
      dup3
      dup3
      lt
      or
      tag_50
      jumpi
      swap1
      dup8
      swap2
      dup5
      mstore
      mstore
        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */
      0xe0
      swap8
      dup7
      dup10
      dup6
      add
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      mstore
        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */
      0x0100
      swap8
      dup8
      dup10
      dup7
      add
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      mstore
        /* \"src/ReservoirPair.sol\":3435:3451  type(uint16).max */
      0xffff
        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */
      0x0120
      dup1
      swap7
      add
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      mstore
      sstore(0x06, shl(0xf0, 0xffff))
      not(0x00)
      dup1
        /* \"src/ReservoirPair.sol\":3519:3536  type(uint256).max */
      0x08
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      sstore
        /* \"src/ReservoirPair.sol\":3654:3671  type(uint256).max */
      0x0a
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      sstore
        /* \"src/ReservoirPair.sol\":3899:3909  msg.sender */
      caller
        /* \"src/ReservoirPair.sol\":3874:3910  factory = GenericFactory(msg.sender) */
      dup11
      mstore
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      0x01
      dup1
      0xa0
      shl
      sub
      swap3
      dup4
      dup1
      swap3
      and
        /* \"src/ReservoirPair.sol\":3920:3943  token0 = ERC20(aToken0) */
      dup11
      mstore
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      and
        /* \"src/ReservoirPair.sol\":3953:3976  token1 = ERC20(aToken1) */
      dup5
      mstore
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      dup3
      mload
        /* \"src/ReservoirPair.sol\":4011:4041  abi.encodePacked(aSwapFeeName) */
      tag_52
      dup2
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      tag_53
        /* \"src/ReservoirPair.sol\":4011:4041  abi.encodePacked(aSwapFeeName) */
      dup10
      dup3
      add
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      dup1
      swap6
      tag_4
      jump\t// in
    tag_53:
        /* \"src/ReservoirPair.sol\":4011:4041  abi.encodePacked(aSwapFeeName) */
      sub
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      not(0x1f)
        /* \"src/ReservoirPair.sol\":4011:4041  abi.encodePacked(aSwapFeeName) */
      dup2
      add
      dup4
      mstore
      dup3
      tag_2
      jump\t// in
    tag_52:
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      mload
        /* \"src/ReservoirPair.sol\":4001:4042  keccak256(abi.encodePacked(aSwapFeeName)) */
      swap1
      keccak256
        /* \"src/ReservoirPair.sol\":3987:4042  swapFeeName = keccak256(abi.encodePacked(aSwapFeeName)) */
      swap6
      0x0180
      swap7
      dup8
      mstore
      tag_54
      tag_9
      jump\t// in
    tag_54:
      tag_55
      tag_10
      jump\t// in
    tag_55:
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      dup2
      dup9
      mload
      and
      dup4
      mload
      dup8
      dup2
        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */
      0x04
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      dup2
      shl(0xe0, 0x313ce567)
        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */
      swap6
      dup7
      dup3
      mstore
      gas
      staticcall
      swap1
      dup2
      iszero
      tag_56
      jumpi
        /* \"src/ReservoirPair.sol\":4151:4173  18 - token0.decimals() */
      tag_58
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      tag_59
        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */
      swap3
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      0xff
        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */
      swap3
      dup7
      swap2
      tag_60
      jumpi
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
    tag_61:
        /* \"src/ReservoirPair.sol\":4151:4173  18 - token0.decimals() */
      pop
      tag_6
      jump\t// in
    tag_58:
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      and
      tag_7
      jump\t// in
    tag_59:
        /* \"src/ReservoirPair.sol\":4107:4174  token0PrecisionMultiplier = uint128(10) ** (18 - token0.decimals()) */
      dup7
      mstore
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      dup7
      dup4
      dup7
      mload
      and
      swap2
        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */
      0x04
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      dup7
      mload
        /* \"src/ReservoirPair.sol\":4233:4250  token1.decimals() */
      dup1
      swap5
      dup2
      swap4
      dup3
      mstore
      gas
      staticcall
      swap2
      dup3
      iszero
      tag_62
      jumpi
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      tag_64
        /* \"src/ReservoirPair.sol\":4233:4250  token1.decimals() */
      swap3
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      0xff
        /* \"src/ReservoirPair.sol\":4233:4250  token1.decimals() */
      swap3
        /* \"src/ReservoirPair.sol\":4228:4250  18 - token1.decimals() */
      tag_58
        /* \"src/ReservoirPair.sol\":4233:4250  token1.decimals() */
      swap3
      swap2
      tag_66
      jumpi
        /* \"src/ReservoirPair.sol\":4228:4250  18 - token1.decimals() */
      pop
      tag_6
      jump\t// in
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
    tag_64:
        /* \"src/ReservoirPair.sol\":4184:4251  token1PrecisionMultiplier = uint128(10) ** (18 - token1.decimals()) */
      swap5
      0x0160
      swap6
      dup7
      mstore
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      dup2
        /* \"src/ReservoirPair.sol\":17490:17522  factory.read(ORACLE_CALLER_NAME) */
      tag_68
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      dup2
      dup12
      mload
      and
      dup6
      mload
      swap1
      tag_69
      dup3
      tag_1
      jump\t// in
    tag_69:
      0x14
      dup3
      mstore
      0x5368617265643a3a6f7261636c6543616c6c6572000000000000000000000000
      dup6
      dup4
      add
      mstore
        /* \"src/ReservoirPair.sol\":17490:17522  factory.read(ORACLE_CALLER_NAME) */
      tag_11
      jump\t// in
    tag_68:
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      and
        /* \"src/ReservoirPair.sol\":17562:17574  oracleCaller */
      0x01000f
        /* \"src/ReservoirPair.sol\":16881:16903  \"Shared::oracleCaller\" */
      swap1
      dup2
      sload
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      dup5
      dup2
      and
        /* \"src/ReservoirPair.sol\":17548:17574  lNewCaller != oracleCaller */
      dup7
      dup2
      dup5
      sub
        /* \"src/ReservoirPair.sol\":17544:17690  if (lNewCaller != oracleCaller) {... */
      tag_70
      jumpi
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
    tag_71:
      pop
      pop
      pop
      pop
      pop
        /* \"src/ReservoirPair.sol\":4309:4343  factory.read(MAX_CHANGE_RATE_NAME) */
      tag_72
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      dup3
      dup11
      mload
      and
      dup5
      mload
      swap1
      tag_73
      dup3
      tag_1
      jump\t// in
    tag_73:
      0x15
      dup3
      mstore
      0x5368617265643a3a6d61784368616e6765526174650000000000000000000000
      dup5
      dup4
      add
      mstore
        /* \"src/ReservoirPair.sol\":4309:4343  factory.read(MAX_CHANGE_RATE_NAME) */
      tag_11
      jump\t// in
    tag_72:
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      swap2
      dup10
      mload
      and
        /* \"src/ReservoirPair.sol\":3899:3909  msg.sender */
      caller
        /* \"src/ReservoirPair.sol\":3719:3749  msg.sender == address(factory) */
      sub
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      tag_74
      jumpi
        /* \"src/ReservoirPair.sol\":17789:17807  0 < aMaxChangeRate */
      dup2
      iszero
      iszero
        /* \"src/ReservoirPair.sol\":17789:17847  0 < aMaxChangeRate && aMaxChangeRate <= MAX_CHANGE_PER_SEC */
      dup1
      tag_76
      jumpi
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
    tag_77:
        /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */
      iszero
      tag_78
      jumpi
        /* \"src/ReservoirPair.sol\":17896:17947  MaxChangeRateUpdated(maxChangeRate, aMaxChangeRate) */
      0x807b9f5907da3f00bf587e77bc07247e1c7ff5ae46c93a584b3a075be0b1bac2
        /* \"src/ReservoirPair.sol\":17917:17930  maxChangeRate */
      dup4
      0x01000d
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      swap3
      dup5
      dup5
      sload
      swap2
      dup4
      mload
      swap3
      dup4
      mstore
        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */
      dup3
      add
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      mstore
        /* \"src/ReservoirPair.sol\":17896:17947  MaxChangeRateUpdated(maxChangeRate, aMaxChangeRate) */
      log1
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      sstore
      mload
      swap5
      dataSize(sub_0)
      swap7
      dup8
      dataOffset(sub_0)
      dup9
      codecopy
        /* \"lib/solmate/src/tokens/ERC20.sol\":2142:2162  decimals = _decimals */
      0x80
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      mload
      dup8
      assignImmutable(\"0xb7b2278e6c1d8d0abc309f6bf9256046dfb6cd1d61f6bb10388e8ea4928d3539\")
        /* \"lib/solmate/src/tokens/ERC20.sol\":2173:2205  INITIAL_CHAIN_ID = block.chainid */
      0xa0
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      mload
      dup8
      assignImmutable(\"0x81290bb363e768cff9ff9a5d447e434874948b933698048b966fdf5d744bf636\")
      mload(0xc0)
      dup8
      assignImmutable(\"0x34382e0db9f4d1365b2614bb97467901a574db9e05159d2f14a2053ade673b06\")
      mload
      dup7
      assignImmutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")
      mload
      dup6
      assignImmutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")
      mload
      dup5
      assignImmutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")
      mload
      dup4
      assignImmutable(\"0x372e991e4284f7d12d6b2461cce9899511b05ac053845de253542adb96f2dca0\")
      mload
      dup3
      assignImmutable(\"0xc4ba931b733b92a51f51c0955dd7716c7a38f3de911d23a5d0fbd5d23c0fbe8c\")
      mload
      dup2
      assignImmutable(\"0x4c21324e1a4fdca228db96f937188124acece199982b123b328bdd8fee41b354\")
      return
        /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */
    tag_78:
      0x64
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      swap1
      dup4
      mload
      swap1
      shl(0xe5, 0x461bcd)
        /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */
      dup3
      mstore
        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */
      0x04
        /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */
      dup3
      add
      mstore
      0x1d
      0x24
      dup3
      add
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      mstore
        /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */
      0x4f573a20494e56414c49445f4348414e47455f5045525f5345434f4e44000000
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      0x44
      dup3
      add
        /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */
      mstore
      revert
        /* \"src/ReservoirPair.sol\":17789:17847  0 < aMaxChangeRate && aMaxChangeRate <= MAX_CHANGE_PER_SEC */
    tag_76:
        /* \"src/ReservoirPair.sol\":17811:17847  aMaxChangeRate <= MAX_CHANGE_PER_SEC */
      pop
        /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */
      0x2386f26fc10000
        /* \"src/ReservoirPair.sol\":17811:17847  aMaxChangeRate <= MAX_CHANGE_PER_SEC */
      dup3
      gt
      iszero
        /* \"src/ReservoirPair.sol\":17789:17847  0 < aMaxChangeRate && aMaxChangeRate <= MAX_CHANGE_PER_SEC */
      jump(tag_77)
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
    tag_74:
      0x64
      swap1
      dup4
      mload
      swap1
      shl(0xe5, 0x461bcd)
      dup3
      mstore
        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */
      0x04
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      dup3
      add
      mstore
      0x0c
      0x24
      dup3
      add
      mstore
      shl(0xa1, 0x281d102327a92124a22222a7)
      0x44
      dup3
      add
      mstore
      revert
        /* \"src/ReservoirPair.sol\":17544:17690  if (lNewCaller != oracleCaller) {... */
    tag_70:
        /* \"src/ReservoirPair.sol\":17595:17640  OracleCallerUpdated(oracleCaller, lNewCaller) */
      0x262681b3b01b61ff6d02569759105771205cdd274fb3c45535b50632e0a3523f
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      swap2
      dup2
      mload
      swap1
      dup2
      mstore
        /* \"src/ReservoirPair.sol\":16881:16903  \"Shared::oracleCaller\" */
      dup5
      dup8
      dup3
      add
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      mstore
        /* \"src/ReservoirPair.sol\":17595:17640  OracleCallerUpdated(oracleCaller, lNewCaller) */
      log1
      not(sub(shl(0xa0, 0x01), 0x01))
        /* \"src/ReservoirPair.sol\":16881:16903  \"Shared::oracleCaller\" */
      and
      or
      swap1
      sstore
        /* \"src/ReservoirPair.sol\":17544:17690  if (lNewCaller != oracleCaller) {... */
      codesize
      dup1
      dup1
      dup1
      dup7
      jump(tag_71)
        /* \"src/ReservoirPair.sol\":4233:4250  token1.decimals() */
    tag_66:
      tag_80
      swap2
      pop
      dup10
      returndatasize
      dup12
      gt
      tag_81
      jumpi
    tag_82:
      tag_83
      dup2
      dup4
      tag_2
      jump\t// in
    tag_83:
      dup2
      add
      swap1
      tag_5
      jump\t// in
    tag_80:
      codesize
      jump(tag_61)
    tag_81:
      pop
      returndatasize
      jump(tag_82)
    tag_62:
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      dup5
      mload
      swap1
      returndatasize
      swap1
      dup3
      returndatacopy
      returndatasize
      swap1
      revert
        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */
    tag_60:
      tag_80
      swap2
      pop
      dup12
      returndatasize
      dup14
      gt
      tag_81
      jumpi
      tag_83
      dup2
      dup4
      tag_2
      jump\t// in
    tag_56:
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      dup6
      mload
      returndatasize
      dup6
      dup3
      returndatacopy
      returndatasize
      swap1
      revert
    tag_50:
      shl(0xe0, 0x4e487b71)
      dup9
      mstore
      mstore(0x04, 0x41)
      0x24
      dup9
      revert
    tag_45:
      dup10
      swap2
      pop
      dup11
      dup1
      mstore
      dup2
      dup12
      keccak256
      swap1
      dup12
      swap2
    tag_88:
      dup6
      dup4
      lt
      tag_89
      jumpi
      pop
      pop
      tag_47
      swap4
      pop
      dup3
      add
      add
      codesize
      jump(tag_46)
    tag_89:
      dup1
      sload
      dup4
      dup9
      add
      dup6
      add
      mstore
      dup7
      swap5
      pop
      dup12
      swap4
      swap1
      swap3
      add
      swap2
      dup2
      add
      jump(tag_88)
    tag_43:
      not(0xff)
      and
      dup9
      mstore
      tag_47
      swap6
      iszero
      iszero
      0x05
      shl
      dup6
      add
      add
      swap3
      pop
      codesize
      swap2
      pop
      tag_46
      swap1
      pop
      jump
    tag_39:
      add
      mload
      swap1
      pop
      codesize
      dup1
      jump(tag_40)
    tag_37:
      dup5
      dup11
      mstore
      dup9
      dup11
      keccak256
      dup6
      swap5
      pop
      swap2
      swap1
      not(0x1f)
      dup5
      and
      dup12
    tag_91:
      dup12
      dup3
      dup3
      lt
      tag_92
      jumpi
      pop
      pop
      dup5
      gt
      tag_94
      jumpi
    tag_95:
      pop
      pop
      pop
      dup2
      shl
      add
      dup2
      sstore
      jump(tag_41)
    tag_94:
      add
      mload
      not(0x00)
      0xf8
      dup5
      0x03
      shl
      and
      shr
      not
      and
      swap1
      sstore
      codesize
      dup1
      dup1
      jump(tag_95)
    tag_92:
      dup4
      dup6
      add
      mload
      dup7
      sstore
      dup9
      swap8
      swap1
      swap6
      add
      swap5
      swap4
      dup5
      add
      swap4
      add
      jump(tag_91)
    tag_35:
      swap1
      swap2
      swap3
      pop
      dup5
      dup11
      mstore
      dup9
      dup11
      keccak256
      dup4
      dup1
      dup7
      add
      0x05
      shr
      dup3
      add
      swap3
      dup12
      dup8
      lt
      tag_96
      jumpi
    tag_97:
      swap2
      dup7
      swap6
      dup9
      swap3
      swap6
      swap5
      swap4
      add
      0x05
      shr
      add
      swap2
    tag_98:
      dup3
      dup2
      lt
      tag_99
      jumpi
      pop
      pop
      jump(tag_36)
    tag_99:
      dup13
      dup2
      sstore
      dup7
      swap6
      pop
      dup8
      swap2
      add
      jump(tag_98)
    tag_96:
      swap3
      pop
      dup2
      swap3
      jump(tag_97)
    tag_29:
      add
      mload
      swap1
      pop
      codesize
      dup1
      jump(tag_30)
    tag_27:
      dup11
      dup1
      mstore
      dup10
      dup12
      keccak256
      swap3
      pop
      not(0x1f)
      dup5
      and
      dup12
    tag_101:
      dup12
      dup3
      dup3
      lt
      tag_102
      jumpi
      pop
      pop
      swap1
      dup5
      0x01
      swap6
      swap5
      swap4
      swap3
      lt
      tag_104
      jumpi
    tag_105:
      pop
      pop
      pop
      dup2
      shl
      add
      dup8
      sstore
      jump(tag_31)
    tag_104:
      add
      mload
      not(0x00)
      0xf8
      dup5
      0x03
      shl
      and
      shr
      not
      and
      swap1
      sstore
      codesize
      dup1
      dup1
      jump(tag_105)
    tag_102:
      0x01
      dup6
      swap7
      dup3
      swap4
      swap7
      dup7
      add
      mload
      dup2
      sstore
      add
      swap6
      add
      swap4
      add
      jump(tag_101)
    tag_25:
      swap1
      swap2
      pop
      dup10
      dup1
      mstore
      dup9
      dup11
      keccak256
      dup5
      dup1
      dup6
      add
      0x05
      shr
      dup3
      add
      swap3
      dup12
      dup7
      lt
      tag_106
      jumpi
    tag_107:
      swap1
      dup6
      swap5
      swap4
      swap3
      swap2
      add
      0x05
      shr
      add
      swap1
    tag_108:
      dup2
      dup2
      lt
      tag_109
      jumpi
      pop
      jump(tag_26)
    tag_109:
      dup12
      dup2
      sstore
      dup5
      swap4
      pop
      0x01
      add
      jump(tag_108)
    tag_106:
      swap3
      pop
      dup2
      swap3
      jump(tag_107)
    tag_22:
      mstore(0x00, shl(0xe0, 0x4e487b71))
      mstore(0x04, 0x41)
      revert(0x00, 0x24)
    tag_15:
      0x00
      dup1
      revert
    tag_1:
      0x40
      dup2
      add
      swap1
      dup2
      lt
      sub(shl(0x40, 0x01), 0x01)
      dup3
      gt
      or
      tag_22
      jumpi
      0x40
      mstore
      jump\t// out
    tag_2:
      0x1f
      swap1
      swap2
      add
      not(0x1f)
      and
      dup2
      add
      swap1
      sub(shl(0x40, 0x01), 0x01)
      dup3
      gt
      swap1
      dup3
      lt
      or
      tag_22
      jumpi
      0x40
      mstore
      jump\t// out
    tag_3:
      mload
      swap1
      sub(shl(0xa0, 0x01), 0x01)
      dup3
      and
      dup3
      sub
      tag_15
      jumpi
      jump\t// out
    tag_4:
      swap1
      dup2
      mload
      swap2
      0x00
    tag_117:
      dup4
      dup2
      lt
      tag_118
      jumpi
      pop
      pop
      add
      0x00
      dup2
      mstore
      swap1
      jump\t// out
    tag_118:
      dup1
      0x20
      dup1
      swap3
      dup5
      add
      add
      mload
      dup2
      dup6
      add
      mstore
      add
      jump(tag_117)
    tag_5:
      swap1
      dup2
      0x20
      swap2
      sub
      slt
      tag_15
      jumpi
      mload
      0xff
      dup2
      and
      dup2
      sub
      tag_15
      jumpi
      swap1
      jump\t// out
    tag_6:
      0xff
      and
      0x12
      sub
      swap1
      0xff
      dup3
      gt
      tag_124
      jumpi
      jump\t// out
    tag_124:
      mstore(0x00, shl(0xe0, 0x4e487b71))
      mstore(0x04, 0x11)
      revert(0x00, 0x24)
    tag_7:
      dup1
      iszero
      tag_126
      jumpi
      0x01
      swap1
      0x20
      dup2
      lt
      dup3
      and
      0x4e
      dup3
      lt
      dup4
      and
      or
      tag_128
      jumpi
      dup2
      swap1
      0x0a
      swap3
    tag_130:
      dup1
      dup3
      gt
      tag_131
      jumpi
      pop
      pop
      sub(shl(0x80, 0x01), 0x01)
      dup3
      swap1
      div
      dup2
      gt
      tag_124
      jumpi
      mul
      swap1
      jump\t// out
    tag_131:
      swap1
      swap3
      sub(shl(0x80, 0x01), 0x01)
      dup2
      swap1
      div
      dup2
      gt
      tag_124
      jumpi
      dup2
      dup5
      and
      tag_137
      jumpi
    tag_138:
      dup1
      mul
      swap3
      dup2
      shr
      swap1
      jump(tag_130)
    tag_137:
      dup1
      swap3
      mul
      swap2
      jump(tag_138)
    tag_128:
      0x0a
      exp
      swap2
      swap1
      pop
      sub(shl(0x80, 0x01), 0x01)
      dup3
      gt
      tag_124
      jumpi
      jump\t// out
    tag_126:
      pop
      0x01
      swap1
      jump\t// out
    tag_8:
      swap1
      0x01
      dup3
      dup2
      shr
      swap3
      and
      dup1
      iszero
      tag_141
      jumpi
    tag_142:
      0x20
      dup4
      lt
      eq
      tag_143
      jumpi
      jump\t// out
    tag_143:
      mstore(0x00, shl(0xe0, 0x4e487b71))
      mstore(0x04, 0x22)
      revert(0x00, 0x24)
    tag_141:
      swap2
      0x7f
      and
      swap2
      jump(tag_142)
        /* \"src/ReservoirPair.sol\":7293:7635  function updateSwapFee() public {... */
    tag_9:
        /* \"src/ReservoirPair.sol\":7354:7367  customSwapFee */
      0x08
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      sload
      0x00
      not(0x00)
        /* \"src/ReservoirPair.sol\":7354:7388  customSwapFee != type(uint256).max */
      dup3
      eq
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      tag_145
      jumpi
        /* \"src/ReservoirPair.sol\":7354:7443  customSwapFee != type(uint256).max ? customSwapFee : factory.get(swapFeeName).toUint256() */
      pop
    tag_147:
        /* \"src/ReservoirPair.sol\":7469:7476  swapFee */
      0x07
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      sload
        /* \"src/ReservoirPair.sol\":7457:7476  _swapFee == swapFee */
      dup1
      dup3
      eq
        /* \"src/ReservoirPair.sol\":7453:7485  if (_swapFee == swapFee) return; */
      tag_148
      jumpi
        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */
      0x4e20
        /* \"src/ReservoirPair.sol\":7503:7527  _swapFee <= MAX_SWAP_FEE */
      dup3
      gt
        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */
      tag_150
      jumpi
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      0x40
        /* \"src/ReservoirPair.sol\":7567:7600  SwapFeeChanged(swapFee, _swapFee) */
      0xad321f810529281bbb90384fd6fecbdda41509a5ccd7bd5aed986ed827f6a026
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      swap2
      dup2
      mload
      swap1
      dup2
      mstore
        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */
      dup4
      0x20
      dup3
      add
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      mstore
        /* \"src/ReservoirPair.sol\":7567:7600  SwapFeeChanged(swapFee, _swapFee) */
      log1
        /* \"src/ReservoirPair.sol\":7469:7476  swapFee */
      0x07
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      sstore
        /* \"src/ReservoirPair.sol\":7293:7635  function updateSwapFee() public {... */
      jump\t// out
        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */
    tag_150:
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      mload(0x40)
      shl(0xe5, 0x461bcd)
        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */
      dup2
      mstore
      0x20
      0x04
      dup3
      add
      mstore
      0x13
      0x24
      dup3
      add
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      mstore
        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */
      0x503a20494e56414c49445f535741505f46454500000000000000000000000000
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      0x44
      dup3
      add
        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */
      mstore
      0x64
      swap1
      revert
        /* \"src/ReservoirPair.sol\":7453:7485  if (_swapFee == swapFee) return; */
    tag_148:
        /* \"src/ReservoirPair.sol\":7478:7485  return; */
      pop
      pop
      jump\t// out
        /* \"src/ReservoirPair.sol\":7354:7443  customSwapFee != type(uint256).max ? customSwapFee : factory.get(swapFeeName).toUint256() */
    tag_145:
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      swap1
      pop
      0x01
      dup1
      0xa0
      shl
      sub
        /* \"src/ReservoirPair.sol\":7407:7414  factory */
      0xe0
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      mload
      and
        /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */
      0x20
        /* \"src/ReservoirPair.sol\":7419:7430  swapFeeName */
      0x0180
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      mload
      0x24
      mload(0x40)
      dup1
      swap5
      dup2
      swap4
      shl(0xe6, 0x023aa9ab)
        /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */
      dup4
      mstore
      0x04
      dup4
      add
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      mstore
        /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */
      gas
      staticcall
      swap2
      dup3
      iszero
      tag_152
      jumpi
      dup1
      swap3
      tag_154
      jumpi
        /* \"src/ReservoirPair.sol\":7354:7443  customSwapFee != type(uint256).max ? customSwapFee : factory.get(swapFeeName).toUint256() */
    tag_155:
      pop
      pop
      jump(tag_147)
        /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */
    tag_154:
      swap1
      swap2
      pop
      0x20
      dup3
      returndatasize
      dup3
      gt
      tag_156
      jumpi
    tag_157:
      dup2
      tag_158
      0x20
      swap4
      dup4
      tag_2
      jump\t// in
    tag_158:
      dup2
      add
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      sub
      slt
      tag_159
      jumpi
      pop
      mload
        /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */
      codesize
      dup1
      jump(tag_155)
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
    tag_159:
      dup1
      revert
        /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */
    tag_156:
      returndatasize
      swap2
      pop
      jump(tag_157)
    tag_152:
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      mload(0x40)
      swap1
      returndatasize
      swap1
      dup3
      returndatacopy
      returndatasize
      swap1
      revert
        /* \"src/ReservoirPair.sol\":7641:8058  function updatePlatformFee() public {... */
    tag_10:
        /* \"src/ReservoirPair.sol\":7722:7739  customPlatformFee */
      0x0a
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      sload
      not(0x00)
        /* \"src/ReservoirPair.sol\":7722:7760  customPlatformFee != type(uint256).max */
      dup2
      eq
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      tag_161
      jumpi
        /* \"src/ReservoirPair.sol\":7722:7826  customPlatformFee != type(uint256).max ? customPlatformFee : factory.read(PLATFORM_FEE_NAME).toUint256() */
    tag_163:
        /* \"src/ReservoirPair.sol\":7856:7867  platformFee */
      0x09
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      sload
        /* \"src/ReservoirPair.sol\":7840:7867  _platformFee == platformFee */
      dup1
      dup3
      eq
        /* \"src/ReservoirPair.sol\":7836:7876  if (_platformFee == platformFee) return; */
      tag_148
      jumpi
        /* \"src/ReservoirPair.sol\":2789:2796  500_000 */
      0x07a120
        /* \"src/ReservoirPair.sol\":7894:7926  _platformFee <= MAX_PLATFORM_FEE */
      dup3
      gt
        /* \"src/ReservoirPair.sol\":2789:2796  500_000 */
      tag_166
      jumpi
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      0x40
        /* \"src/ReservoirPair.sol\":7970:8015  PlatformFeeChanged(platformFee, _platformFee) */
      0xc98a8b10b63c929f7799380bb4a0c444c713ebf74d8732f944c915034121aad1
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      swap2
      dup2
      mload
      swap1
      dup2
      mstore
        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */
      dup4
      0x20
      dup3
      add
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      mstore
        /* \"src/ReservoirPair.sol\":7970:8015  PlatformFeeChanged(platformFee, _platformFee) */
      log1
        /* \"src/ReservoirPair.sol\":7856:7867  platformFee */
      0x09
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      sstore
        /* \"src/ReservoirPair.sol\":7641:8058  function updatePlatformFee() public {... */
      jump\t// out
        /* \"src/ReservoirPair.sol\":2789:2796  500_000 */
    tag_166:
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      mload(0x40)
      shl(0xe5, 0x461bcd)
        /* \"src/ReservoirPair.sol\":2789:2796  500_000 */
      dup2
      mstore
      0x20
      0x04
      dup3
      add
      mstore
      0x17
      0x24
      dup3
      add
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      mstore
        /* \"src/ReservoirPair.sol\":2789:2796  500_000 */
      0x503a20494e56414c49445f504c4154464f524d5f464545000000000000000000
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      0x44
      dup3
      add
        /* \"src/ReservoirPair.sol\":2789:2796  500_000 */
      mstore
      0x64
      swap1
      revert
        /* \"src/ReservoirPair.sol\":7722:7826  customPlatformFee != type(uint256).max ? customPlatformFee : factory.read(PLATFORM_FEE_NAME).toUint256() */
    tag_161:
      pop
        /* \"src/ReservoirPair.sol\":7783:7790  factory */
      0xe0
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      mload
      mload(0x40)
        /* \"src/ReservoirPair.sol\":7783:7814  factory.read(PLATFORM_FEE_NAME) */
      tag_168
      swap2
      sub(shl(0xa0, 0x01), 0x01)
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      and
      tag_169
      dup3
      tag_1
      jump\t// in
    tag_169:
      0x13
      dup3
      mstore
      0x5368617265643a3a706c6174666f726d46656500000000000000000000000000
      0x20
      dup4
      add
      mstore
        /* \"src/ReservoirPair.sol\":7783:7814  factory.read(PLATFORM_FEE_NAME) */
      tag_11
      jump\t// in
    tag_168:
        /* \"src/ReservoirPair.sol\":7722:7826  customPlatformFee != type(uint256).max ? customPlatformFee : factory.read(PLATFORM_FEE_NAME).toUint256() */
      jump(tag_163)
        /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */
    tag_11:
      swap1
        /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */
      0x20
        /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */
      swap1
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      mload(0x40)
        /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */
      tag_170
      dup2
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      tag_53
        /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */
      dup6
      dup3
      add
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      dup1
      swap6
      tag_4
      jump\t// in
        /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */
    tag_170:
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      mload
        /* \"src/libraries/FactoryStore.sol\":476:509  keccak256(abi.encodePacked(aKey)) */
      swap1
      keccak256
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      mload(0x40)
      shl(0xe6, 0x023aa9ab)
        /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */
      dup2
      mstore
      0x04
      dup2
      add
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      swap2
      swap1
      swap2
      mstore
      swap2
      dup3
      swap1
      0x24
      swap1
      dup3
      swap1
      sub(shl(0xa0, 0x01), 0x01)
      and
        /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */
      gas
      staticcall
      swap1
      dup2
      iszero
      tag_172
      jumpi
      0x00
      swap2
      tag_174
      jumpi
        /* \"src/libraries/FactoryStore.sol\":456:510  return aFactory.get(keccak256(abi.encodePacked(aKey))) */
      pop
        /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */
      swap1
      jump\t// out
        /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */
    tag_174:
      swap1
        /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */
      0x20
        /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */
      dup3
      returndatasize
      dup3
      gt
      tag_176
      jumpi
    tag_177:
      dup2
      tag_178
        /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */
      0x20
        /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */
      swap4
      dup4
      tag_2
      jump\t// in
    tag_178:
      dup2
      add
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      sub
      slt
      tag_159
      jumpi
      pop
      mload
        /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */
      swap1
      jump\t// out
        /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */
    tag_176:
      returndatasize
      swap2
      pop
      jump(tag_177)
    tag_172:
        /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
      mload(0x40)
      returndatasize
      0x00
      dup3
      returndatacopy
      returndatasize
      swap1
      revert
    stop

    sub_0: assembly {
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0xa0
          0x40
          swap1
          dup1
          dup3
          mstore
          0x04
          swap2
          dup3
          calldatasize
          lt
          iszero
          tag_55
          jumpi
          0x00
          dup1
          revert
        tag_55:
          0x00
          swap3
          dup4
          calldataload
          0xe0
          shr
          swap3
          dup4
          0x06fdde03
          eq
          tag_57
          jumpi
          pop
          dup3
          0x0902f1ac
          eq
          tag_59
          jumpi
          dup3
          0x095ea7b3
          eq
          tag_61
          jumpi
          dup3
          0x0c472afd
          eq
          tag_63
          jumpi
          dup3
          0x0dfe1681
          eq
          tag_65
          jumpi
          dup3
          0x18160ddd
          eq
          tag_67
          jumpi
          dup3
          0x23b872dd
          eq
          tag_69
          jumpi
          dup3
          0x26232a2e
          eq
          tag_71
          jumpi
          dup3
          0x313ce567
          eq
          tag_73
          jumpi
          dup3
          0x31c49074
          eq
          tag_75
          jumpi
          dup3
          0x3644e515
          eq
          tag_77
          jumpi
          dup3
          0x3998a681
          eq
          tag_79
          jumpi
          dup3
          0x48ee4332
          eq
          tag_81
          jumpi
          dup3
          0x495bc0fb
          eq
          tag_83
          jumpi
          dup3
          0x4dfa1ff9
          eq
          tag_85
          jumpi
          dup3
          0x54cf2aeb
          eq
          tag_87
          jumpi
          dup3
          0x6a627842
          eq
          tag_89
          jumpi
          dup3
          0x70a08231
          eq
          tag_91
          jumpi
          dup3
          0x7464fc3d
          eq
          tag_93
          jumpi
          dup3
          0x7c3cbc7c
          eq
          tag_95
          jumpi
          dup3
          0x7ecebe00
          eq
          tag_97
          jumpi
          dup3
          0x85faf624
          eq
          tag_99
          jumpi
          dup3
          0x89afcb44
          eq
          tag_101
          jumpi
          dup3
          0x94217ad1
          eq
          tag_103
          jumpi
          dup3
          0x9568e73b
          eq
          tag_105
          jumpi
          dup3
          0x95d89b41
          eq
          tag_107
          jumpi
          dup3
          0x97e37764
          eq
          tag_109
          jumpi
          dup3
          0x9be65a60
          eq
          tag_111
          jumpi
          dup3
          0x9d62a694
          eq
          tag_113
          jumpi
          dup3
          0xa9059cbb
          eq
          tag_115
          jumpi
          dup3
          0xab3d8544
          eq
          tag_117
          jumpi
          dup3
          0xad7853e9
          eq
          tag_119
          jumpi
          dup3
          0xafb4a43b
          eq
          tag_121
          jumpi
          dup3
          0xb62221e0
          eq
          tag_123
          jumpi
          dup3
          0xba9a7a56
          eq
          tag_125
          jumpi
          dup3
          0xbc25cf77
          eq
          tag_127
          jumpi
          dup3
          0xc45a0155
          eq
          tag_129
          jumpi
          dup3
          0xc58771ef
          eq
          tag_131
          jumpi
          dup3
          0xd0ebdbe7
          eq
          tag_133
          jumpi
          dup3
          0xd21220a7
          eq
          tag_135
          jumpi
          dup3
          0xd505accf
          eq
          tag_137
          jumpi
          dup3
          0xdb6488dc
          eq
          tag_139
          jumpi
          dup3
          0xdbc781bc
          eq
          tag_141
          jumpi
          dup3
          0xdd62ed3e
          eq
          tag_143
          jumpi
          dup3
          0xe12bd9d8
          eq
          tag_145
          jumpi
          pop
          dup2
          0xe9bdf7b8
          eq
          tag_147
          jumpi
          dup2
          0xfbcd9b05
          eq
          tag_149
          jumpi
          pop
          0xfff6cae9
          eq
          tag_151
          jumpi
          0x00
          dup1
          revert
        tag_151:
          jumpi(tag_155, callvalue)
          dup1
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_155
          jumpi
            /* \"src/ReservoirPair.sol\":6307:6326  lBlockTimestampLast */
          tag_157
            /* \"src/ReservoirPair.sol\":6191:6225  _syncManaged(lReserve0, lReserve1) */
          tag_158
            /* \"src/ReservoirPair.sol\":6142:6156  _lockAndLoad() */
          tag_159
          tag_13
          jump\t// in
        tag_159:
          pop
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap3
          swap2
          0xffffffffffffffffffffffffff
          swap2
          dup3
          and
          swap2
          and
            /* \"src/ReservoirPair.sol\":6191:6225  _syncManaged(lReserve0, lReserve1) */
          tag_27
          jump\t// in
        tag_158:
            /* \"src/ReservoirPair.sol\":6253:6267  _totalToken0() */
          swap1
          tag_160
          tag_24
          jump\t// in
        tag_160:
            /* \"src/ReservoirPair.sol\":6269:6283  _totalToken1() */
          tag_161
          tag_25
          jump\t// in
        tag_161:
            /* \"src/ReservoirPair.sol\":6307:6326  lBlockTimestampLast */
          swap1
          tag_22
          jump\t// in
        tag_157:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup1
          return
        tag_155:
          dup1
          revert
        tag_149:
          swap1
          pop
          jumpi(tag_164, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_164
          jumpi
          0x20
          swap1
          mload
            /* \"src/curve/constant-product/ConstantProductPair.sol\":1117:1121  1e38 */
          0x4b3b4ca85a86c47a098a224000000000
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup2
          mstore
          return
        tag_164:
          pop
          dup1
          revert
        tag_147:
          swap1
          pop
          jumpi(tag_164, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_164
          jumpi
          0x20
          swap1
          0xffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":12800:12828  uint104 public token0Managed */
          0x0c
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
          and
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_145:
          swap2
          pop
          jumpi(tag_176, callvalue)
          jumpi(tag_176, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x80))
          0x24
          swap3
          dup4
          calldataload
          dup4
          calldataload
          dup2
          iszero
          iszero
          dup3
          sub
          tag_176
          jumpi
          calldataload(0x44)
          swap3
          0xffffffffffffffffffffffffffffffffffffffff
          swap3
          dup4
          dup6
          and
          swap5
          dup6
          dup2
          sub
          tag_176
          jumpi
          calldataload(0x64)
          swap9
          0xffffffffffffffff
          swap9
          dup10
          dup12
          gt
          tag_184
          jumpi
          calldatasize
          0x23
          dup13
          add
          slt
          iszero
          tag_184
          jumpi
          dup11
          dup2
          add
          calldataload
          swap10
          dup11
          gt
          tag_184
          jumpi
          calldatasize
          dup3
          dup12
          dup14
          add
          add
          gt
          tag_184
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":8669:8683  _lockAndLoad() */
          tag_186
          tag_13
          jump\t// in
        tag_186:
          pop
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap13
          0xffffffffffffffffffffffffff
          swap3
          dup4
          and
          swap13
          swap2
          swap1
          swap3
          and
          swap6
            /* \"src/curve/constant-product/ConstantProductPair.sol\":8701:8713  aAmount != 0 */
          dup9
          iszero
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          tag_187
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":8743:8760  uint256 lAmountIn */
          dup13
          swap6
          swap5
          swap4
          swap3
          swap2
          swap1
            /* \"src/curve/constant-product/ConstantProductPair.sol\":8816:10099  if (aInOrOut) {... */
          iszero
          tag_189
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":8908:8919  aAmount > 0 */
          dup8
          dup10
          sgt
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          iszero
          tag_191
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":8951:8957  token1 */
          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")
            /* \"src/curve/constant-product/ConstantProductPair.sol\":8975:9003  lAmountIn = uint256(aAmount) */
          swap5
          dup8
          dup11
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup9
          dup3
            /* \"src/curve/constant-product/ConstantProductPair.sol\":9081:9088  swapFee */
          0x07
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
            /* \"src/curve/constant-product/ConstantProductPair.sol\":9034:9089  _getAmountOut(lAmountIn, lReserve0, lReserve1, swapFee) */
          swap2
          tag_193
          swap4
          tag_45
          jump\t// in
        tag_193:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":8904:9366  if (aAmount > 0) {... */
          swap15
          dup16
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10208:10217  lReserve1 */
          tag_194
            /* \"src/curve/constant-product/ConstantProductPair.sol\":8904:9366  if (aAmount > 0) {... */
          swap4
        tag_195:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10208:10217  lReserve1 */
          dup10
          tag_20
          jump\t// in
        tag_194:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10233:10249  aData.length > 0 */
          dup1
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10229:10534  if (aData.length > 0) {... */
          tag_197
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":8816:10099  if (aInOrOut) {... */
        tag_198:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10564:10578  _totalToken0() */
          pop
          pop
          tag_199
          tag_24
          jump\t// in
        tag_199:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10608:10622  _totalToken1() */
          swap2
          dup9
          tag_200
          tag_25
          jump\t// in
        tag_200:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap5
          and
          swap7
          pop
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10666:10672  token0 */
          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup10
          and
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10653:10672  lTokenOut == token0 */
          dup8
          sub
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          tag_201
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10675:10696  lBalance1 - lReserve1 */
          tag_203
          dup7
          dup6
          tag_10
          jump\t// in
        tag_203:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10653:10720  lTokenOut == token0 ? lBalance1 - lReserve1 : lBalance0 - lReserve0 */
          dup1
          swap9
        tag_204:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10738:10760  lAmountIn <= lReceived */
          gt
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          tag_205
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10863:10882  lBlockTimestampLast */
          pop
          pop
          swap2
          tag_207
          swap4
          swap2
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0x20
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10863:10882  lBlockTimestampLast */
          swap12
          swap4
          tag_22
          jump\t// in
        tag_207:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup5
          mload
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10928:10934  token1 */
          swap3
          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          and
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10915:10934  lTokenOut == token1 */
          eq
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup3
          mstore
          dup6
          dup3
          add
          mstore
          dup4
          dup4
          dup3
          add
          mstore
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10898:10963  Swap(msg.sender, lTokenOut == token1, lReceived, rAmountOut, aTo) */
          0x66251e495e6e69e208ab08e2bc259dbe2ef482a8c4a93b8984b03a1eb27e1b9e
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0x60
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10903:10913  msg.sender */
          caller
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10898:10963  Swap(msg.sender, lTokenOut == token1, lReceived, rAmountOut, aTo) */
          swap3
          log3
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mload
          swap1
          dup2
          mstore
          return
        tag_205:
          swap1
          0x1a
          0x64
          swap3
          0x20
          dup14
          mload
          swap4
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup6
          mstore
          dup5
          add
          mstore
          dup3
          add
          mstore
          0x43503a20494e53554646494349454e545f414d4f554e545f494e000000000000
          0x44
          dup3
          add
          mstore
          revert
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10653:10720  lTokenOut == token0 ? lBalance1 - lReserve1 : lBalance0 - lReserve0 */
        tag_201:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10699:10720  lBalance0 - lReserve0 */
          tag_208
          dup6
          dup5
          tag_10
          jump\t// in
        tag_208:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10653:10720  lTokenOut == token0 ? lBalance1 - lReserve1 : lBalance0 - lReserve0 */
          dup1
          swap9
          jump(tag_204)
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10229:10534  if (aData.length > 0) {... */
        tag_197:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup5
          dup11
          and
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10359:10365  token0 */
          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup12
          and
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10346:10365  lTokenOut == token0 */
          dup2
          sub
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          tag_209
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10346:10407  lTokenOut == token0 ? int256(rAmountOut) : -int256(lAmountIn) */
          dup14
          swap1
        tag_211:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10438:10444  token1 */
          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup13
          and
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10425:10444  lTokenOut == token1 */
          sub
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          tag_212
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10425:10486  lTokenOut == token1 ? int256(rAmountOut) : -int256(lAmountIn) */
          dup14
          swap2
        tag_214:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10265:10523  IReservoirCallee(aTo).reservoirCall(... */
          dup13
          extcodesize
          iszero
          tag_215
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup10
          swap3
          swap2
          dup4
          dup16
          dup16
          swap4
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
          0x1f
          dup3
          dup12
          swap4
          dup14
          0xa4
          swap7
          mload
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10265:10523  IReservoirCallee(aTo).reservoirCall(... */
          swap13
          dup14
          swap12
          dup13
          swap11
          dup12
          swap9
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0x4fc7c21700000000000000000000000000000000000000000000000000000000
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10265:10523  IReservoirCallee(aTo).reservoirCall(... */
          dup11
          mstore
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10318:10328  msg.sender */
          caller
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10265:10523  IReservoirCallee(aTo).reservoirCall(... */
          swap1
          dup11
          add
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mstore
          dup4
          dup10
          add
          mstore
          0x44
          dup9
          add
          mstore
          0x80
          0x64
          dup9
          add
          mstore
          dup3
          0x84
          dup9
          add
          mstore
          add
          dup7
          dup7
          add
          calldatacopy
          dup6
          dup6
          dup3
          dup7
          add
          add
          mstore
          add
          and
          dup2
          add
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10265:10523  IReservoirCallee(aTo).reservoirCall(... */
          sub
          add
          swap3
          gas
          call
          dup1
          iszero
          tag_217
          jumpi
          tag_219
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10425:10486  lTokenOut == token1 ? int256(rAmountOut) : -int256(lAmountIn) */
        tag_220:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10229:10534  if (aData.length > 0) {... */
          dup1
          jump(tag_198)
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10265:10523  IReservoirCallee(aTo).reservoirCall(... */
        tag_219:
          tag_221
          swap1
          tag_3
          jump\t// in
        tag_221:
          codesize
          jump(tag_220)
        tag_217:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup12
          mload
          returndatasize
          dup10
          dup3
          returndatacopy
          returndatasize
          swap1
          revert
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10265:10523  IReservoirCallee(aTo).reservoirCall(... */
        tag_215:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup10
          dup1
          revert
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10425:10486  lTokenOut == token1 ? int256(rAmountOut) : -int256(lAmountIn) */
        tag_212:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10468:10486  -int256(lAmountIn) */
          tag_222
          dup11
          tag_31
          jump\t// in
        tag_222:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10425:10486  lTokenOut == token1 ? int256(rAmountOut) : -int256(lAmountIn) */
          swap2
          jump(tag_214)
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10346:10407  lTokenOut == token0 ? int256(rAmountOut) : -int256(lAmountIn) */
        tag_209:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10389:10407  -int256(lAmountIn) */
          tag_223
          dup11
          tag_31
          jump\t// in
        tag_223:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10346:10407  lTokenOut == token0 ? int256(rAmountOut) : -int256(lAmountIn) */
          swap1
          jump(tag_211)
            /* \"src/curve/constant-product/ConstantProductPair.sol\":8904:9366  if (aAmount > 0) {... */
        tag_191:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":9212:9218  token0 */
          swap8
          swap4
          swap8
          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")
            /* \"src/curve/constant-product/ConstantProductPair.sol\":9256:9264  -aAmount */
          swap5
          tag_224
          swap1
          tag_31
          jump\t// in
        tag_224:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap9
          dup8
          dup11
          dup2
          dup10
            /* \"src/curve/constant-product/ConstantProductPair.sol\":9343:9350  swapFee */
          0x07
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
            /* \"src/curve/constant-product/ConstantProductPair.sol\":9296:9351  _getAmountOut(lAmountIn, lReserve1, lReserve0, swapFee) */
          swap2
          tag_225
          swap4
          tag_45
          jump\t// in
        tag_225:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":8904:9366  if (aAmount > 0) {... */
          swap15
          dup16
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10208:10217  lReserve1 */
          tag_194
            /* \"src/curve/constant-product/ConstantProductPair.sol\":8904:9366  if (aAmount > 0) {... */
          swap4
          jump(tag_195)
            /* \"src/curve/constant-product/ConstantProductPair.sol\":8816:10099  if (aInOrOut) {... */
        tag_189:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":9489:9500  aAmount > 0 */
          swap1
          swap2
          swap3
          swap4
          swap8
          swap5
          pop
          dup7
          dup6
          sgt
            /* \"src/curve/constant-product/ConstantProductPair.sol\":9485:10089  if (aAmount > 0) {... */
          0x00
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          eq
          tag_226
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":9520:9549  rAmountOut = uint256(aAmount) */
          swap1
          dup5
          swap4
          swap3
          swap2
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10208:10217  lReserve1 */
          tag_194
            /* \"src/curve/constant-product/ConstantProductPair.sol\":9520:9549  rAmountOut = uint256(aAmount) */
          dup8
          dup15
          swap8
            /* \"src/curve/constant-product/ConstantProductPair.sol\":9575:9597  rAmountOut < lReserve0 */
          swap15
          dup16
            /* \"src/curve/constant-product/ConstantProductPair.sol\":9567:9620  require(rAmountOut < lReserve0, \"CP: NOT_ENOUGH_LIQ\") */
          tag_228
            /* \"src/curve/constant-product/ConstantProductPair.sol\":9575:9597  rAmountOut < lReserve0 */
          dup3
          dup11
          lt
            /* \"src/curve/constant-product/ConstantProductPair.sol\":9567:9620  require(rAmountOut < lReserve0, \"CP: NOT_ENOUGH_LIQ\") */
          tag_43
          jump\t// in
        tag_228:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":9686:9741  _getAmountIn(rAmountOut, lReserve1, lReserve0, swapFee) */
          tag_229
            /* \"src/curve/constant-product/ConstantProductPair.sol\":9650:9656  token0 */
          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap10
          dup4
          dup6
            /* \"src/curve/constant-product/ConstantProductPair.sol\":9733:9740  swapFee */
          0x07
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
            /* \"src/curve/constant-product/ConstantProductPair.sol\":9686:9741  _getAmountIn(rAmountOut, lReserve1, lReserve0, swapFee) */
          swap3
          tag_46
          jump\t// in
        tag_229:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":9485:10089  if (aAmount > 0) {... */
          swap13
            /* \"src/curve/constant-product/ConstantProductPair.sol\":8816:10099  if (aInOrOut) {... */
          jump(tag_195)
            /* \"src/curve/constant-product/ConstantProductPair.sol\":9485:10089  if (aAmount > 0) {... */
        tag_226:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":9873:9881  -aAmount */
          swap3
          swap2
          swap1
          swap11
          swap4
          tag_231
          swap1
          tag_31
          jump\t// in
        tag_231:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":9908:9930  rAmountOut < lReserve1 */
          swap11
          dup12
          swap4
            /* \"src/curve/constant-product/ConstantProductPair.sol\":9900:9953  require(rAmountOut < lReserve1, \"CP: NOT_ENOUGH_LIQ\") */
          tag_232
            /* \"src/curve/constant-product/ConstantProductPair.sol\":9908:9930  rAmountOut < lReserve1 */
          dup8
          dup7
          lt
            /* \"src/curve/constant-product/ConstantProductPair.sol\":9900:9953  require(rAmountOut < lReserve1, \"CP: NOT_ENOUGH_LIQ\") */
          tag_43
          jump\t// in
        tag_232:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10208:10217  lReserve1 */
          tag_194
            /* \"src/curve/constant-product/ConstantProductPair.sol\":9983:9989  token1 */
          dup8
          dup8
          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap8
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10019:10074  _getAmountIn(rAmountOut, lReserve0, lReserve1, swapFee) */
          tag_229
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10066:10073  swapFee */
          0x07
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
            /* \"src/curve/constant-product/ConstantProductPair.sol\":10019:10074  _getAmountIn(rAmountOut, lReserve0, lReserve1, swapFee) */
          dup5
          dup5
          dup5
          tag_46
          jump\t// in
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
        tag_187:
          pop
          0x64
          dup4
          0x0f
          dup7
          0x20
          dup16
          mload
          swap4
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup6
          mstore
          dup5
          add
          mstore
          dup3
          add
          mstore
          0x43503a20414d4f554e545f5a45524f0000000000000000000000000000000000
          0x44
          dup3
          add
          mstore
          revert
        tag_184:
          dup5
          dup1
          revert
        tag_176:
          dup3
          dup1
          revert
        tag_143:
          swap1
          swap2
          pop
          jumpi(tag_176, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_176
          jumpi
          0x20
          swap3
          dup3
          swap2
          tag_238
          tag_8
          jump\t// in
        tag_238:
          tag_239
          tag_9
          jump\t// in
        tag_239:
          swap2
          0xffffffffffffffffffffffffffffffffffffffff
          dup1
          swap3
          and
          dup5
          mstore
          dup7
          mstore
          dup4
          dup4
          keccak256
          swap2
          and
          dup3
          mstore
          dup5
          mstore
          keccak256
          sload
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_141:
          dup4
          jumpi(tag_155, callvalue)
          dup1
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_155
          jumpi
          tag_157
          tag_17
          jump\t// in
        tag_139:
          dup4
          dup3
          jumpi(tag_164, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_164
          jumpi
          0x20
          swap1
          mload
            /* \"src/ReservoirPair.sol\":2723:2732  1_000_000 */
          0x0f4240
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup2
          mstore
          return
        tag_137:
          dup4
          dup3
          jumpi(tag_164, callvalue)
          jumpi(tag_164, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0xe0))
          tag_253
          tag_8
          jump\t// in
        tag_253:
          tag_254
          tag_9
          jump\t// in
        tag_254:
          calldataload(0x44)
          calldataload(0x64)
          swap4
          calldataload(0x84)
          swap4
          0xff
          dup6
          and
          dup1
          swap6
          sub
          tag_255
          jumpi
            /* \"lib/solmate/src/tokens/ERC20.sol\":4057:4072  block.timestamp */
          timestamp
            /* \"lib/solmate/src/tokens/ERC20.sol\":4045:4072  deadline >= block.timestamp */
          dup7
          lt
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          tag_257
          jumpi
            /* \"lib/solmate/src/tokens/ERC20.sol\":4428:4446  DOMAIN_SEPARATOR() */
          tag_259
          tag_11
          jump\t// in
        tag_259:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap5
          0xffffffffffffffffffffffffffffffffffffffff
          dup1
          swap3
          and
          swap6
          dup7
          dup10
          mstore
          0x20
          swap6
            /* \"lib/solmate/src/tokens/ERC20.sol\":4873:4879  nonces */
          0x05
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup8
          mstore
          dup5
          dup11
          keccak256
          swap9
          dup10
          sload
          swap10
          0x01
          dup12
          add
          swap1
          sstore
          dup6
          mload
            /* \"lib/solmate/src/tokens/ERC20.sol\":4511:4960  abi.encode(... */
          swap1
          dup6
          dup10
          dup4
          add
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap4
            /* \"lib/solmate/src/tokens/ERC20.sol\":4555:4720  keccak256(... */
          0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup6
          mstore
          dup12
          dup10
          dup6
          add
          mstore
          and
          swap11
          dup12
          0x60
          dup5
          add
          mstore
          dup9
          0x80
          dup5
          add
          mstore
          0xa0
          dup4
          add
          mstore
          0xc0
          dup3
          add
          mstore
          0xc0
            /* \"lib/solmate/src/tokens/ERC20.sol\":4511:4960  abi.encode(... */
          dup2
          mstore
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0xe0
          dup2
          add
          swap2
          dup2
          dup4
          lt
          0xffffffffffffffff
          dup5
          gt
          or
          tag_260
          jumpi
          swap3
          dup3
          dup10
          swap6
          swap3
          0x0122
          dup15
          swap7
          0x80
          swap7
          dup12
          mstore
          dup3
          mload
            /* \"lib/solmate/src/tokens/ERC20.sol\":4472:4986  keccak256(... */
          swap1
          keccak256
            /* \"lib/solmate/src/tokens/ERC20.sol\":4350:5008  abi.encodePacked(... */
          swap2
          0x0100
          dup2
          add
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap5
          0x1901000000000000000000000000000000000000000000000000000000000000
          dup7
          mstore
          0x0102
          dup3
          add
          mstore
          add
          mstore
          0x42
            /* \"lib/solmate/src/tokens/ERC20.sol\":4350:5008  abi.encodePacked(... */
          dup2
          mstore
          tag_262
          dup2
          tag_2
          jump\t// in
        tag_262:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mload
            /* \"lib/solmate/src/tokens/ERC20.sol\":4319:5026  keccak256(... */
          swap1
          keccak256
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap1
          dup7
          mload
          swap2
          dup3
          mstore
          dup5
          dup3
          add
          mstore
          calldataload(0xa4)
          dup7
          dup3
          add
          mstore
          calldataload(0xc4)
          0x60
          dup3
          add
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":4292:5097  ecrecover(... */
          dup3
          dup1
          mstore
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0x01
            /* \"lib/solmate/src/tokens/ERC20.sol\":4292:5097  ecrecover(... */
          gas
          staticcall
          iszero
          tag_263
          jumpi
          dup7
          mload
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          and
            /* \"lib/solmate/src/tokens/ERC20.sol\":5120:5150  recoveredAddress != address(0) */
          swap7
          dup8
          iszero
          iszero
            /* \"lib/solmate/src/tokens/ERC20.sol\":5120:5179  recoveredAddress != address(0) && recoveredAddress == owner */
          dup1
          tag_265
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
        tag_266:
          iszero
          tag_267
          jumpi
          dup7
          swap8
            /* \"lib/solmate/src/tokens/ERC20.sol\":5283:5314  Approval(owner, spender, value) */
          0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap6
          swap7
          swap8
          mstore
          dup4
          mstore
          dup1
          dup8
          keccak256
          dup7
          dup9
          mstore
          dup4
          mstore
          dup2
          dup2
          dup9
          keccak256
          sstore
          mload
          swap1
          dup2
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":5283:5314  Approval(owner, spender, value) */
          log3
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup1
          return
        tag_267:
          dup4
          0x64
          swap3
          mload
          swap2
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          dup3
          add
          mstore
          0x0e
          0x24
          dup3
          add
          mstore
          0x494e56414c49445f5349474e4552000000000000000000000000000000000000
          0x44
          dup3
          add
          mstore
          revert
            /* \"lib/solmate/src/tokens/ERC20.sol\":5120:5179  recoveredAddress != address(0) && recoveredAddress == owner */
        tag_265:
            /* \"lib/solmate/src/tokens/ERC20.sol\":5154:5179  recoveredAddress == owner */
          pop
          dup5
          dup9
          eq
            /* \"lib/solmate/src/tokens/ERC20.sol\":5120:5179  recoveredAddress != address(0) && recoveredAddress == owner */
          jump(tag_266)
            /* \"lib/solmate/src/tokens/ERC20.sol\":4292:5097  ecrecover(... */
        tag_263:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup2
          mload
          returndatasize
          dup9
          dup3
          returndatacopy
          returndatasize
          swap1
          revert
        tag_260:
          0x24
          dup13
          0x41
          dup16
          0x4e487b7100000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          mstore
          revert
        tag_257:
          0x64
          dup9
          0x20
          dup5
          mload
          swap2
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          dup3
          add
          mstore
          0x17
          0x24
          dup3
          add
          mstore
          0x5045524d49545f444541444c494e455f45585049524544000000000000000000
          0x44
          dup3
          add
          mstore
          revert
        tag_255:
          dup7
          dup1
          revert
        tag_135:
          dup4
          dup3
          jumpi(tag_164, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_164
          jumpi
          0x20
          swap1
          mload
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":2950:2979  ERC20 public immutable token1 */
          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          and
          dup2
          mstore
          return
        tag_133:
          swap1
          swap2
          pop
          jumpi(tag_176, callvalue)
          jumpi(tag_176, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))
          dup1
          calldataload
          swap2
          0xffffffffffffffffffffffffffffffffffffffff
          dup1
          dup5
          and
          dup1
          swap5
          sub
          tag_184
          jumpi
            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */
          tag_279
            /* \"src/ReservoirPair.sol\":3741:3748  factory */
          swap1
          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":3719:3729  msg.sender */
          caller
            /* \"src/ReservoirPair.sol\":3719:3749  msg.sender == address(factory) */
          eq
            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */
          tag_15
          jump\t// in
        tag_279:
            /* \"src/ReservoirPair.sol\":12690:12703  token0Managed */
          0x0c
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
          0xffffffffffffffffffffffffff
          dup1
          dup3
          and
            /* \"src/ReservoirPair.sol\":12690:12708  token0Managed == 0 */
          iszero
            /* \"src/ReservoirPair.sol\":12690:12730  token0Managed == 0 && token1Managed == 0 */
          swap2
          dup3
          tag_280
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
        tag_281:
          pop
          pop
          iszero
          tag_282
          jumpi
          pop
          pop
          0xffffffffffffffffffffffff0000000000000000000000000000000000000000
            /* \"src/ReservoirPair.sol\":12765:12787  assetManager = manager */
          0x0b
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
          and
          or
            /* \"src/ReservoirPair.sol\":12765:12787  assetManager = manager */
          0x0b
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sstore
          dup1
          return
        tag_282:
          swap1
          0x20
          0x64
          swap3
          mload
          swap2
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          dup3
          add
          mstore
          0x14
          0x24
          dup3
          add
          mstore
          0x414d503a20414d5f5354494c4c5f414354495645000000000000000000000000
          0x44
          dup3
          add
          mstore
          revert
            /* \"src/ReservoirPair.sol\":12690:12730  token0Managed == 0 && token1Managed == 0 */
        tag_280:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0x68
          shr
          and
            /* \"src/ReservoirPair.sol\":12712:12730  token1Managed == 0 */
          iszero
          swap1
          pop
            /* \"src/ReservoirPair.sol\":12690:12730  token0Managed == 0 && token1Managed == 0 */
          codesize
          dup1
          jump(tag_281)
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
        tag_131:
          dup4
          dup3
          jumpi(tag_164, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_164
          jumpi
          0x20
          swap1
            /* \"src/ReservoirPair.sol\":3488:3536  uint256 public customSwapFee = type(uint256).max */
          0x08
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_129:
          dup4
          dup3
          jumpi(tag_164, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_164
          jumpi
          0x20
          swap1
          mload
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":2870:2909  GenericFactory public immutable factory */
          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          and
          dup2
          mstore
          return
        tag_127:
          dup4
          jumpi(tag_155, callvalue)
          jumpi(tag_155, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))
            /* \"src/ReservoirPair.sol\":5579:5584  false */
          tag_157
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          tag_297
          tag_8
          jump\t// in
        tag_297:
            /* \"src/ReservoirPair.sol\":6689:6698  lReserve1 */
          tag_298
            /* \"src/ReservoirPair.sol\":6506:6520  _lockAndLoad() */
          tag_299
          tag_13
          jump\t// in
        tag_299:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          pop
          swap4
          swap2
          0xffffffffffffffffffffffffff
          dup1
          swap2
          and
          swap2
          and
            /* \"src/ReservoirPair.sol\":6561:6575  _totalToken0() */
          swap2
            /* \"src/ReservoirPair.sol\":6600:6609  lReserve1 */
          tag_300
            /* \"src/ReservoirPair.sol\":6561:6575  _totalToken0() */
          dup4
          dup4
            /* \"src/ReservoirPair.sol\":6561:6587  _totalToken0() - lReserve0 */
          tag_301
            /* \"src/ReservoirPair.sol\":6561:6575  _totalToken0() */
          dup2
          tag_302
          tag_24
          jump\t// in
        tag_302:
            /* \"src/ReservoirPair.sol\":6561:6587  _totalToken0() - lReserve0 */
          tag_10
          jump\t// in
        tag_301:
            /* \"src/ReservoirPair.sol\":6548:6554  token0 */
          dup5
          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")
            /* \"src/ReservoirPair.sol\":6600:6609  lReserve1 */
          tag_20
          jump\t// in
        tag_300:
            /* \"src/ReservoirPair.sol\":6650:6676  _totalToken1() - lReserve1 */
          tag_303
            /* \"src/ReservoirPair.sol\":6650:6664  _totalToken1() */
          dup4
          tag_302
          tag_25
          jump\t// in
            /* \"src/ReservoirPair.sol\":6650:6676  _totalToken1() - lReserve1 */
        tag_303:
            /* \"src/ReservoirPair.sol\":6637:6643  token1 */
          swap1
          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")
            /* \"src/ReservoirPair.sol\":6689:6698  lReserve1 */
          tag_20
          jump\t// in
        tag_298:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0xffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffff
          0xffffffff0000000000000000000000000000000000000000000000000000
            /* \"src/ReservoirPair.sol\":4847:4853  _slot0 */
          0x06
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
          swap3
          0xd0
          shl
          and
          swap2
          and
          or
            /* \"src/ReservoirPair.sol\":4847:4853  _slot0 */
          0x06
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sstore
            /* \"src/ReservoirPair.sol\":4701:4899  function _writeSlot0Timestamp(uint32 aTimestamp, bool aLocked) internal {... */
          jump
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
        tag_125:
          dup4
          dup3
          jumpi(tag_164, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_164
          jumpi
          0x20
          swap1
          mload
            /* \"src/ReservoirPair.sol\":2671:2678  10 ** 3 */
          0x03e8
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup2
          mstore
          return
        tag_123:
          dup4
          dup3
          jumpi(tag_164, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_164
          jumpi
          0x20
          swap1
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":17166:17193  address public oracleCaller */
          0x01000f
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
          and
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_121:
          swap1
          swap2
          pop
          jumpi(tag_176, callvalue)
          jumpi(tag_176, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))
            /* \"src/ReservoirPair.sol\":7139:7202  CustomPlatformFeeChanged(customPlatformFee, aCustomPlatformFee) */
          0xe044af8ebdaeeed3e95065fac857c503c7eabb71acfbcdcb7823ec6ca603c26e
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap1
          calldataload
            /* \"src/ReservoirPair.sol\":3741:3748  factory */
          swap2
            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */
          tag_317
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":3741:3748  factory */
          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":3719:3729  msg.sender */
          caller
            /* \"src/ReservoirPair.sol\":3719:3749  msg.sender == address(factory) */
          eq
            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */
          tag_15
          jump\t// in
        tag_317:
            /* \"src/ReservoirPair.sol\":7164:7181  customPlatformFee */
          0x0a
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
          dup2
          mload
          swap1
          dup2
          mstore
          dup4
          0x20
          dup3
          add
          mstore
            /* \"src/ReservoirPair.sol\":7139:7202  CustomPlatformFeeChanged(customPlatformFee, aCustomPlatformFee) */
          log1
            /* \"src/ReservoirPair.sol\":7164:7181  customPlatformFee */
          0x0a
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sstore
            /* \"src/ReservoirPair.sol\":7212:7250  customPlatformFee = aCustomPlatformFee */
          tag_157
          tag_17
          jump\t// in
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
        tag_119:
          dup4
          dup3
          jumpi(tag_164, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_164
          jumpi
          0x20
          swap1
          0xffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":12834:12862  uint104 public token1Managed */
          0x0c
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
          0x68
          shr
          and
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_117:
          dup4
          dup3
          jumpi(tag_164, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_164
          jumpi
          0x20
          swap1
          mload
            /* \"src/ReservoirPair.sol\":2849:2855  20_000 */
          0x4e20
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup2
          mstore
          return
        tag_115:
          dup4
          dup3
          jumpi(tag_164, callvalue)
          dup1
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_164
          jumpi
          0x20
          swap2
          tag_331
          tag_8
          jump\t// in
        tag_331:
          dup3
          0xffffffffffffffffffffffffffffffffffffffff
          calldataload(0x24)
            /* \"lib/solmate/src/tokens/ERC20.sol\":2774:2784  msg.sender */
          swap3
          caller
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup6
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":2764:2773  balanceOf */
          0x03
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup8
          mstore
          dup3
          dup6
          keccak256
            /* \"lib/solmate/src/tokens/ERC20.sol\":2764:2795  balanceOf[msg.sender] -= amount */
          tag_332
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup6
          dup3
          sload
            /* \"lib/solmate/src/tokens/ERC20.sol\":2764:2795  balanceOf[msg.sender] -= amount */
          tag_10
          jump\t// in
        tag_332:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap1
          sstore
          and
          swap3
          dup4
          dup2
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":2764:2773  balanceOf */
          0x03
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup7
          mstore
          keccak256
          dup2
          dup2
          sload
          add
          swap1
          sstore
          dup3
          mload
          swap1
          dup2
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":2990:3022  Transfer(msg.sender, to, amount) */
          0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
            /* \"lib/solmate/src/tokens/ERC20.sol\":2774:2784  msg.sender */
          dup5
          caller
            /* \"lib/solmate/src/tokens/ERC20.sol\":2990:3022  Transfer(msg.sender, to, amount) */
          swap3
          log3
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mload
          0x01
          dup2
          mstore
          return
        tag_113:
          dup4
          jumpi(tag_155, callvalue)
          jumpi(tag_155, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))
          dup2
          calldataload
          swap2
          dup2
          0x60
          dup6
          mload
          tag_337
          dup2
          tag_2
          jump\t// in
        tag_337:
          dup3
          dup2
          mstore
          dup3
          0x20
          dup3
          add
          mstore
          dup3
          dup8
          dup3
          add
          mstore
          add
          mstore
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":17325:17337  oracleCaller */
          0x01000f
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
          and
            /* \"src/ReservoirPair.sol\":17311:17321  msg.sender */
          caller
            /* \"src/ReservoirPair.sol\":17311:17337  msg.sender == oracleCaller */
          sub
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          tag_338
          jumpi
          0x010000
          dup4
          lt
          iszero
          tag_340
          jumpi
          0x80
          dup4
          0xffffffff
          dup7
          dup1
          mload
          swap3
          tag_342
          dup5
          tag_2
          jump\t// in
        tag_342:
            /* \"src/ReservoirPair.sol\":17388:17401  _observations */
          0x0d
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          add
          sload
          swap1
          dup2
            /* \"src/ReservoirPair.sol\":17388:17401  _observations */
          0x0d
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          signextend
          swap4
          dup5
          dup2
          mstore
          0x20
          dup2
          add
          dup4
          0x70
          shr
          0x06
          signextend
          dup2
          mstore
          0x60
          dup4
          dup4
          add
          swap3
          dup6
          0xa8
          shr
          0x06
          signextend
          dup5
          mstore
          add
          swap4
          0xe0
          shr
          dup5
          mstore
          dup3
          mload
          swap6
          dup7
          mstore
          mload
          0x06
          signextend
          0x20
          dup7
          add
          mstore
          mload
          0x06
          signextend
          swap1
          dup5
          add
          mstore
          mload
          and
          0x60
          dup3
          add
          mstore
          return
        tag_340:
          swap1
          0x32
          0x24
          swap3
          0x4e487b7100000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          mstore
          revert
        tag_338:
          0x64
          swap1
          0x20
          dup6
          mload
          swap2
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          dup3
          add
          mstore
          0x15
          0x24
          dup3
          add
          mstore
          0x4f573a204e4f545f4f5241434c455f43414c4c45520000000000000000000000
          0x44
          dup3
          add
          mstore
          revert
        tag_111:
          swap2
          pop
          jumpi(tag_176, callvalue)
          0x20
          swap2
          dup3
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_364
          jumpi
            /* \"src/ReservoirPair.sol\":8142:8170  factory.read(RECOVERER_NAME) */
          tag_347
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap3
          tag_348
          tag_8
          jump\t// in
        tag_348:
          swap1
          dup4
          mload
          tag_349
          dup2
          tag_4
          jump\t// in
        tag_349:
          0x18
          dup2
          mstore
          0x5368617265643a3a64656661756c745265636f76657265720000000000000000
          dup3
          dup3
          add
          mstore
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":8142:8149  factory */
          swap6
          dup7
          swap2
          dup3
          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":8142:8170  factory.read(RECOVERER_NAME) */
          tag_49
          jump\t// in
        tag_347:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          and
          swap3
          dup6
          dup4
          and
            /* \"src/ReservoirPair.sol\":8218:8224  token0 */
          swap6
          dup1
          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":8200:8225  aToken != address(token0) */
          dup8
          eq
          iszero
            /* \"src/ReservoirPair.sol\":8200:8254  aToken != address(token0) && aToken != address(token1) */
          swap1
          dup2
          tag_350
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
        tag_351:
            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */
          pop
          iszero
          tag_352
          jumpi
            /* \"src/ReservoirPair.sol\":8304:8328  _recoverer != address(0) */
          dup4
          iszero
            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */
          tag_354
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup2
          swap1
          0x24
          dup7
          mload
            /* \"src/ReservoirPair.sol\":8396:8434  ERC20(aToken).balanceOf(address(this)) */
          dup1
          swap9
          dup2
          swap4
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0x70a0823100000000000000000000000000000000000000000000000000000000
            /* \"src/ReservoirPair.sol\":8396:8434  ERC20(aToken).balanceOf(address(this)) */
          dup4
          mstore
            /* \"src/ReservoirPair.sol\":8428:8432  this */
          address
            /* \"src/ReservoirPair.sol\":8396:8434  ERC20(aToken).balanceOf(address(this)) */
          swap1
          dup4
          add
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mstore
            /* \"src/ReservoirPair.sol\":8396:8434  ERC20(aToken).balanceOf(address(this)) */
          gas
          staticcall
          swap4
          dup5
          iszero
          tag_356
          jumpi
          pop
          dup6
          swap4
          tag_358
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
        tag_359:
            /* \"src/ReservoirPair.sol\":8445:8496  _safeTransfer(aToken, _recoverer, _amountToRecover) */
          pop
          tag_360
          swap4
          pop
          tag_18
          jump\t// in
        tag_360:
          pop
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup1
          return
            /* \"src/ReservoirPair.sol\":8396:8434  ERC20(aToken).balanceOf(address(this)) */
        tag_358:
          swap1
          swap3
          pop
          dup4
          dup2
          returndatasize
          dup4
          gt
          tag_361
          jumpi
        tag_362:
          tag_363
          dup2
          dup4
          tag_5
          jump\t// in
        tag_363:
          dup2
          add
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sub
          slt
          tag_364
          jumpi
            /* \"src/ReservoirPair.sol\":8445:8496  _safeTransfer(aToken, _recoverer, _amountToRecover) */
          tag_360
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap3
          mload
            /* \"src/ReservoirPair.sol\":8396:8434  ERC20(aToken).balanceOf(address(this)) */
          swap2
          codesize
          jump(tag_359)
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
        tag_364:
          dup4
          dup1
          revert
            /* \"src/ReservoirPair.sol\":8396:8434  ERC20(aToken).balanceOf(address(this)) */
        tag_361:
          pop
          returndatasize
          jump(tag_362)
        tag_356:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mload
          returndatasize
          dup8
          dup3
          returndatacopy
          returndatasize
          swap1
          revert
            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */
        tag_354:
          0x64
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap2
          dup6
          mload
            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */
          swap2
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          dup3
          add
          mstore
          0x19
          0x24
          dup3
          add
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mstore
            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */
          0x503a205245434f56455245525f5a45524f5f4144445245535300000000000000
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0x44
          dup3
          add
            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */
          mstore
          revert
        tag_352:
          0x64
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap2
          dup6
          mload
            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */
          swap2
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          dup3
          add
          mstore
          0x1b
          0x24
          dup3
          add
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mstore
            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */
          0x503a20494e56414c49445f544f4b454e5f544f5f5245434f5645520000000000
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0x44
          dup3
          add
            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */
          mstore
          revert
            /* \"src/ReservoirPair.sol\":8200:8254  aToken != address(token0) && aToken != address(token1) */
        tag_350:
            /* \"src/ReservoirPair.sol\":8247:8253  token1 */
          swap1
          pop
          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":8229:8254  aToken != address(token1) */
          dup7
          eq
          iszero
            /* \"src/ReservoirPair.sol\":8200:8254  aToken != address(token0) && aToken != address(token1) */
          codesize
          jump(tag_351)
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
        tag_109:
          swap1
          swap2
          pop
          jumpi(tag_176, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_176
          jumpi
          dup1
          calldataload
          swap1
          calldataload(0x24)
          swap3
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":14884:14896  assetManager */
          0x0b
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
          and
            /* \"src/ReservoirPair.sol\":14862:14872  msg.sender */
          caller
            /* \"src/ReservoirPair.sol\":14862:14897  msg.sender == address(assetManager) */
          sub
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          tag_370
          jumpi
          pop
          pop
            /* \"src/ReservoirPair.sol\":14938:14955  aToken0Change > 0 */
          dup3
          dup2
          sgt
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          iszero
          tag_372
          jumpi
            /* \"src/ReservoirPair.sol\":14988:15022  uint256(aToken0Change).toUint104() */
          tag_374
            /* \"src/ReservoirPair.sol\":15073:15112  token0.safeTransfer(msg.sender, lDelta) */
          tag_375
            /* \"src/ReservoirPair.sol\":14988:15022  uint256(aToken0Change).toUint104() */
          swap2
          tag_28
          jump\t// in
        tag_374:
            /* \"src/ReservoirPair.sol\":15036:15059  token0Managed += lDelta */
          0x0c
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
          swap1
          0xffffffffffffffffffffffffff
          swap2
          0xffffffffffffffffffffffffffffffffffffff00000000000000000000000000
          dup4
            /* \"src/ReservoirPair.sol\":15036:15059  token0Managed += lDelta */
          tag_376
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup5
          dup3
          dup6
          and
            /* \"src/ReservoirPair.sol\":15036:15059  token0Managed += lDelta */
          tag_33
          jump\t// in
        tag_376:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          and
          swap2
          and
          or
            /* \"src/ReservoirPair.sol\":15036:15059  token0Managed += lDelta */
          0x0c
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sstore
          and
            /* \"src/ReservoirPair.sol\":14862:14872  msg.sender */
          caller
            /* \"src/ReservoirPair.sol\":15073:15079  token0 */
          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")
            /* \"src/ReservoirPair.sol\":15073:15112  token0.safeTransfer(msg.sender, lDelta) */
          tag_35
          jump\t// in
        tag_375:
            /* \"src/ReservoirPair.sol\":15406:15423  aToken1Change > 0 */
          dup2
          dup2
          sgt
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          iszero
          tag_378
          jumpi
            /* \"src/ReservoirPair.sol\":15456:15490  uint256(aToken1Change).toUint104() */
          tag_380
            /* \"src/ReservoirPair.sol\":15595:15634  token1.safeTransfer(msg.sender, lDelta) */
          tag_157
            /* \"src/ReservoirPair.sol\":15456:15490  uint256(aToken1Change).toUint104() */
          swap2
          tag_28
          jump\t// in
        tag_380:
            /* \"src/ReservoirPair.sol\":15557:15580  token1Managed += lDelta */
          0x0c
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
          swap1
          0xffffffffffffffffffffffffff
          swap2
          0xffffffffffff00000000000000000000000000ffffffffffffffffffffffffff
          0xffffffffffffffffffffffffff00000000000000000000000000
            /* \"src/ReservoirPair.sol\":15557:15580  token1Managed += lDelta */
          tag_382
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup5
          dup7
          dup6
          0x68
          shr
          and
            /* \"src/ReservoirPair.sol\":15557:15580  token1Managed += lDelta */
          tag_33
          jump\t// in
        tag_382:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0x68
          shl
          and
          swap2
          and
          or
            /* \"src/ReservoirPair.sol\":15557:15580  token1Managed += lDelta */
          0x0c
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sstore
          and
            /* \"src/ReservoirPair.sol\":14862:14872  msg.sender */
          caller
            /* \"src/ReservoirPair.sol\":15595:15601  token1 */
          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")
            /* \"src/ReservoirPair.sol\":15595:15634  token1.safeTransfer(msg.sender, lDelta) */
          tag_35
          jump\t// in
            /* \"src/ReservoirPair.sol\":15402:15914  if (aToken1Change > 0) {... */
        tag_378:
            /* \"src/ReservoirPair.sol\":15655:15672  aToken1Change < 0 */
          dup2
          dup2
          slt
            /* \"src/ReservoirPair.sol\":15651:15914  if (aToken1Change < 0) {... */
          tag_384
          jumpi
            /* \"src/ReservoirPair.sol\":15402:15914  if (aToken1Change > 0) {... */
          pop
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup1
          return
            /* \"src/ReservoirPair.sol\":15651:15914  if (aToken1Change < 0) {... */
        tag_384:
            /* \"src/ReservoirPair.sol\":15705:15740  uint256(-aToken1Change).toUint104() */
          tag_386
            /* \"src/ReservoirPair.sol\":15713:15727  -aToken1Change */
          tag_387
            /* \"src/ReservoirPair.sol\":15845:15903  token1.safeTransferFrom(msg.sender, address(this), lDelta) */
          tag_157
            /* \"src/ReservoirPair.sol\":15713:15727  -aToken1Change */
          swap3
          tag_31
          jump\t// in
        tag_387:
            /* \"src/ReservoirPair.sol\":15705:15740  uint256(-aToken1Change).toUint104() */
          tag_28
          jump\t// in
        tag_386:
            /* \"src/ReservoirPair.sol\":15807:15830  token1Managed -= lDelta */
          0x0c
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
          swap1
          0xffffffffffffffffffffffffff
          swap2
          0xffffffffffff00000000000000000000000000ffffffffffffffffffffffffff
          0xffffffffffffffffffffffffff00000000000000000000000000
            /* \"src/ReservoirPair.sol\":15807:15830  token1Managed -= lDelta */
          tag_389
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup5
          dup7
          dup6
          0x68
          shr
          and
            /* \"src/ReservoirPair.sol\":15807:15830  token1Managed -= lDelta */
          tag_32
          jump\t// in
        tag_389:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0x68
          shl
          and
          swap2
          and
          or
            /* \"src/ReservoirPair.sol\":15807:15830  token1Managed -= lDelta */
          0x0c
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sstore
          and
            /* \"src/ReservoirPair.sol\":15889:15893  this */
          address
            /* \"src/ReservoirPair.sol\":14862:14872  msg.sender */
          caller
            /* \"src/ReservoirPair.sol\":15845:15851  token1 */
          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")
            /* \"src/ReservoirPair.sol\":15845:15903  token1.safeTransferFrom(msg.sender, address(this), lDelta) */
          tag_34
          jump\t// in
            /* \"src/ReservoirPair.sol\":14934:15392  if (aToken0Change > 0) {... */
        tag_372:
            /* \"src/ReservoirPair.sol\":15133:15150  aToken0Change < 0 */
          dup3
          dup2
          slt
            /* \"src/ReservoirPair.sol\":15129:15392  if (aToken0Change < 0) {... */
          tag_390
          jumpi
            /* \"src/ReservoirPair.sol\":14934:15392  if (aToken0Change > 0) {... */
        tag_391:
          pop
          jump(tag_375)
            /* \"src/ReservoirPair.sol\":15129:15392  if (aToken0Change < 0) {... */
        tag_390:
            /* \"src/ReservoirPair.sol\":15183:15218  uint256(-aToken0Change).toUint104() */
          tag_392
            /* \"src/ReservoirPair.sol\":15191:15205  -aToken0Change */
          tag_387
            /* \"src/ReservoirPair.sol\":15323:15381  token0.safeTransferFrom(msg.sender, address(this), lDelta) */
          tag_394
            /* \"src/ReservoirPair.sol\":15191:15205  -aToken0Change */
          swap3
          tag_31
          jump\t// in
            /* \"src/ReservoirPair.sol\":15183:15218  uint256(-aToken0Change).toUint104() */
        tag_392:
            /* \"src/ReservoirPair.sol\":15285:15308  token0Managed -= lDelta */
          0x0c
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
          swap1
          0xffffffffffffffffffffffffff
          swap2
          0xffffffffffffffffffffffffffffffffffffff00000000000000000000000000
          dup4
            /* \"src/ReservoirPair.sol\":15285:15308  token0Managed -= lDelta */
          tag_395
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup5
          dup3
          dup6
          and
            /* \"src/ReservoirPair.sol\":15285:15308  token0Managed -= lDelta */
          tag_32
          jump\t// in
        tag_395:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          and
          swap2
          and
          or
            /* \"src/ReservoirPair.sol\":15285:15308  token0Managed -= lDelta */
          0x0c
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sstore
          and
            /* \"src/ReservoirPair.sol\":15367:15371  this */
          address
            /* \"src/ReservoirPair.sol\":14862:14872  msg.sender */
          caller
            /* \"src/ReservoirPair.sol\":15323:15329  token0 */
          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")
            /* \"src/ReservoirPair.sol\":15323:15381  token0.safeTransferFrom(msg.sender, address(this), lDelta) */
          tag_34
          jump\t// in
        tag_394:
            /* \"src/ReservoirPair.sol\":15129:15392  if (aToken0Change < 0) {... */
          codesize
          jump(tag_391)
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
        tag_370:
          swap1
          0x20
          0x64
          swap3
          mload
          swap2
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          dup3
          add
          mstore
          0x15
          0x24
          dup3
          add
          mstore
          0x414d503a20415554485f4e4f545f4d414e414745520000000000000000000000
          0x44
          dup3
          add
          mstore
          revert
        tag_107:
          dup4
          dup3
          jumpi(tag_164, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_164
          jumpi
          dup1
          mload
          swap1
          dup3
            /* \"lib/solmate/src/tokens/ERC20.sol\":1056:1076  string public symbol */
          0x01
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup1
          sload
          swap2
          tag_400
          dup4
          tag_1
          jump\t// in
        tag_400:
          dup1
          dup7
          mstore
          swap3
          dup3
          dup2
          and
          swap1
            /* \"lib/solmate/src/tokens/ERC20.sol\":1056:1076  string public symbol */
          dup2
          iszero
          tag_401
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          pop
          0x01
          eq
          tag_403
          jumpi
        tag_404:
          pop
          pop
          pop
          tag_405
          dup3
          tag_406
          swap5
          sub
          dup4
          tag_5
          jump\t// in
        tag_405:
          mload
          swap2
          dup3
          swap2
          dup3
          tag_7
          jump\t// in
        tag_406:
          sub
          swap1
          return
        tag_403:
          swap5
          pop
          dup1
          dup6
          mstore
          0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6
        tag_407:
          dup3
          dup7
          lt
          tag_408
          jumpi
          pop
          pop
          pop
          tag_405
          dup3
          0x20
          tag_406
          swap6
          dup3
          add
          add
          swap5
          jump(tag_404)
        tag_408:
          dup1
          sload
          0x20
          dup8
          dup8
          add
          dup2
          add
          swap2
          swap1
          swap2
          mstore
          swap1
          swap6
          add
          swap5
          dup2
          add
          jump(tag_407)
        tag_401:
          tag_406
          swap8
          pop
          dup7
          swap4
          pop
          0x20
          swap3
          pop
          tag_405
          swap5
          swap2
          pop
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
          and
          dup3
          dup5
          add
          mstore
          iszero
          iszero
          0x05
          shl
          dup3
          add
          add
          swap5
          jump(tag_404)
        tag_105:
          swap1
          swap2
          pop
          jumpi(tag_176, callvalue)
          jumpi(tag_176, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))
            /* \"src/ReservoirPair.sol\":6915:6966  CustomSwapFeeChanged(customSwapFee, aCustomSwapFee) */
          0x27f958341e42705d80835b6391cbe111df34533c7061beebb873bdb3454cc697
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap1
          calldataload
            /* \"src/ReservoirPair.sol\":3741:3748  factory */
          swap2
            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */
          tag_414
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":3741:3748  factory */
          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":3719:3729  msg.sender */
          caller
            /* \"src/ReservoirPair.sol\":3719:3749  msg.sender == address(factory) */
          eq
            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */
          tag_15
          jump\t// in
        tag_414:
            /* \"src/ReservoirPair.sol\":6936:6949  customSwapFee */
          0x08
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
          dup2
          mload
          swap1
          dup2
          mstore
          dup4
          0x20
          dup3
          add
          mstore
            /* \"src/ReservoirPair.sol\":6915:6966  CustomSwapFeeChanged(customSwapFee, aCustomSwapFee) */
          log1
            /* \"src/ReservoirPair.sol\":6936:6949  customSwapFee */
          0x08
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sstore
            /* \"src/ReservoirPair.sol\":6976:7006  customSwapFee = aCustomSwapFee */
          tag_157
          tag_16
          jump\t// in
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
        tag_103:
          dup4
          dup3
          jumpi(tag_164, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_164
          jumpi
          0x20
          swap1
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":12568:12601  IAssetManager public assetManager */
          0x0b
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
          and
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_101:
          pop
          dup3
          jumpi(tag_155, callvalue)
          0x20
          dup1
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_164
          jumpi
          tag_424
          tag_8
          jump\t// in
        tag_424:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":7293:7307  _lockAndLoad() */
          swap1
          tag_425
          tag_13
          jump\t// in
        tag_425:
          pop
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap2
            /* \"src/curve/constant-product/ConstantProductPair.sol\":7342:7394  _syncManaged(uint104(lReserve0), uint104(lReserve1)) */
          tag_426
          swap2
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0xffffffffffffffffffffffffff
          swap1
          dup2
          and
          swap2
          and
            /* \"src/curve/constant-product/ConstantProductPair.sol\":7342:7394  _syncManaged(uint104(lReserve0), uint104(lReserve1)) */
          tag_27
          jump\t// in
        tag_426:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":7470:7474  this */
          swap2
          swap1
          swap2
          address
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup7
          mstore
            /* \"src/curve/constant-product/ConstantProductPair.sol\":7452:7461  balanceOf */
          0x03
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup5
          mstore
          dup7
          dup7
          keccak256
          sload
            /* \"src/curve/constant-product/ConstantProductPair.sol\":7487:7517  _mintFee(lReserve0, lReserve1) */
          swap5
          tag_427
          dup3
          dup6
          tag_42
          jump\t// in
        tag_427:
          pop
            /* \"src/curve/constant-product/ConstantProductPair.sol\":7550:7561  totalSupply */
          0x02
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
            /* \"src/curve/constant-product/ConstantProductPair.sol\":7672:7686  _totalToken0() */
          swap7
          dup6
          dup9
          tag_428
          tag_24
          jump\t// in
        tag_428:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":7660:7686  liquidity * _totalToken0() */
          tag_429
          swap1
          dup11
          tag_37
          jump\t// in
        tag_429:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":7660:7701  liquidity * _totalToken0() / lTotalSupply */
          swap1
          tag_430
          swap2
          tag_38
          jump\t// in
        tag_430:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":7782:7796  _totalToken1() */
          swap9
          tag_431
          tag_25
          jump\t// in
        tag_431:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":7770:7796  liquidity * _totalToken1() */
          tag_432
          swap1
          dup11
          tag_37
          jump\t// in
        tag_432:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":7770:7811  liquidity * _totalToken1() / lTotalSupply */
          swap1
          tag_433
          swap2
          tag_38
          jump\t// in
        tag_433:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":7470:7474  this */
          swap8
          address
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup4
          mstore
            /* \"src/curve/constant-product/ConstantProductPair.sol\":7452:7461  balanceOf */
          0x03
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup3
          mstore
          dup11
          dup4
          keccak256
          dup2
          dup2
          sload
            /* \"lib/solmate/src/tokens/ERC20.sol\":6553:6578  balanceOf[from] -= amount */
          swap1
          tag_434
          swap2
          tag_10
          jump\t// in
        tag_434:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap1
          sstore
          dup1
            /* \"src/curve/constant-product/ConstantProductPair.sol\":7550:7561  totalSupply */
          0x02
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
          sub
            /* \"src/curve/constant-product/ConstantProductPair.sol\":7550:7561  totalSupply */
          0x02
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sstore
          dup11
          mload
          swap1
          dup2
          mstore
            /* \"src/curve/constant-product/ConstantProductPair.sol\":7470:7474  this */
          address
            /* \"lib/solmate/src/tokens/ERC20.sol\":6768:6802  Transfer(from, address(0), amount) */
          swap2
          0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
          swap2
          log3
            /* \"src/curve/constant-product/ConstantProductPair.sol\":7962:7971  lReserve1 */
          tag_435
            /* \"src/curve/constant-product/ConstantProductPair.sol\":7928:7934  token0 */
          dup3
          dup6
          dup10
          dup5
          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")
            /* \"src/curve/constant-product/ConstantProductPair.sol\":7962:7971  lReserve1 */
          tag_20
          jump\t// in
        tag_435:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":7999:8005  token1 */
          dup2
          dup5
          dup8
          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")
            /* \"src/curve/constant-product/ConstantProductPair.sol\":8033:8042  lReserve1 */
          swap4
          tag_436
          swap5
          tag_20
          jump\t// in
        tag_436:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":8074:8088  _totalToken0() */
          tag_437
          tag_24
          jump\t// in
        tag_437:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":8118:8132  _totalToken1() */
          swap3
          tag_438
          tag_25
          jump\t// in
        tag_438:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":8229:8250  lBalance0 * lBalance1 */
          tag_439
          dup2
          dup7
          tag_37
          jump\t// in
        tag_439:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":6845:6874  kLast = lBalance0 * lBalance1 */
          0x010010
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sstore
          dup9
          dup1
          mload
          dup10
          dup2
          mstore
          dup9
          dup9
          dup3
          add
          mstore
            /* \"src/curve/constant-product/ConstantProductPair.sol\":8270:8280  msg.sender */
          caller
            /* \"src/curve/constant-product/ConstantProductPair.sol\":8265:8301  Burn(msg.sender, rAmount0, rAmount1) */
          swap2
          0x49995e5dd6158cf69ad3e9777c46755a1a826a446c6416992167462dad033b2a
          swap2
          log2
            /* \"src/curve/constant-product/ConstantProductPair.sol\":8373:8392  lBlockTimestampLast */
          tag_440
          swap5
          tag_22
          jump\t// in
        tag_440:
          tag_441
          tag_41
          jump\t// in
        tag_441:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup4
          mload
          swap3
          dup4
          mstore
          dup3
          add
          mstore
          return
        tag_99:
          dup4
          dup3
          jumpi(tag_164, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_164
          jumpi
          0x20
          swap1
            /* \"src/ReservoirPair.sol\":17094:17122  uint256 public maxChangeRate */
          0x01000d
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_97:
          dup4
          dup3
          jumpi(tag_164, callvalue)
          jumpi(tag_164, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))
          dup1
          0x20
          swap3
          0xffffffffffffffffffffffffffffffffffffffff
          tag_450
          tag_8
          jump\t// in
        tag_450:
          and
          dup2
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":1751:1792  mapping(address => uint256) public nonces */
          0x05
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup5
          mstore
          keccak256
          sload
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_95:
          dup4
          dup3
          jumpi(tag_164, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_164
          jumpi
          0x20
          swap1
            /* \"src/ReservoirPair.sol\":3619:3671  uint256 public customPlatformFee = type(uint256).max */
          0x0a
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_93:
          dup4
          dup3
          jumpi(tag_164, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_164
          jumpi
          0x20
          swap1
            /* \"src/curve/constant-product/ConstantProductPair.sol\":1193:1213  uint256 public kLast */
          0x010010
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_91:
          dup4
          dup3
          jumpi(tag_164, callvalue)
          jumpi(tag_164, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))
          dup1
          0x20
          swap3
          0xffffffffffffffffffffffffffffffffffffffff
          tag_463
          tag_8
          jump\t// in
        tag_463:
          and
          dup2
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":1337:1381  mapping(address => uint256) public balanceOf */
          0x03
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup5
          mstore
          keccak256
          sload
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_89:
          swap1
          dup4
          jumpi(tag_155, callvalue)
          0x20
          swap2
          dup3
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_164
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":5865:5917  _syncManaged(uint104(lReserve0), uint104(lReserve1)) */
          tag_468
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          tag_469
          tag_8
          jump\t// in
        tag_469:
          swap5
            /* \"src/curve/constant-product/ConstantProductPair.sol\":5816:5830  _lockAndLoad() */
          tag_470
          tag_13
          jump\t// in
        tag_470:
          pop
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap4
          swap2
          0xffffffffffffffffffffffffff
          swap2
          dup3
          and
          swap2
          and
            /* \"src/curve/constant-product/ConstantProductPair.sol\":5865:5917  _syncManaged(uint104(lReserve0), uint104(lReserve1)) */
          tag_27
          jump\t// in
        tag_468:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":5975:5989  _totalToken0() */
          swap2
          tag_471
          tag_24
          jump\t// in
        tag_471:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":6019:6033  _totalToken1() */
          tag_472
          tag_25
          jump\t// in
        tag_472:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":6062:6083  lBalance0 - lReserve0 */
          swap2
          tag_473
          dup5
          dup4
          tag_10
          jump\t// in
        tag_473:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":6112:6133  lBalance1 - lReserve1 */
          swap1
          tag_474
          dup7
          dup6
          tag_10
          jump\t// in
        tag_474:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":6144:6174  _mintFee(lReserve0, lReserve1) */
          swap1
          tag_475
          dup8
          dup8
          tag_42
          jump\t// in
        tag_475:
          pop
            /* \"src/curve/constant-product/ConstantProductPair.sol\":6207:6218  totalSupply */
          0x02
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
          swap10
            /* \"src/curve/constant-product/ConstantProductPair.sol\":6310:6327  lTotalSupply == 0 */
          dup11
          tag_476
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":6356:6399  FixedPointMathLib.sqrt(lAmount0 * lAmount1) */
          tag_478
            /* \"src/curve/constant-product/ConstantProductPair.sol\":6379:6398  lAmount0 * lAmount1 */
          tag_479
          dup5
          dup7
          tag_37
          jump\t// in
        tag_479:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":6356:6399  FixedPointMathLib.sqrt(lAmount0 * lAmount1) */
          tag_40
          jump\t// in
        tag_478:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc18
          dup2
          add
          swap1
          dup2
          gt
          tag_480
          jumpi
            /* \"src/ReservoirPair.sol\":2671:2678  10 ** 3 */
          swap11
          0x03e8
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap1
          dup2
          dup2
          add
          dup1
          swap2
          gt
          tag_482
          jumpi
          dup14
          dup4
          swap3
            /* \"lib/solmate/src/tokens/ERC20.sol\":6436:6468  Transfer(address(0), to, amount) */
          0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap3
            /* \"src/curve/constant-product/ConstantProductPair.sol\":6207:6218  totalSupply */
          0x02
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sstore
          dup4
          dup1
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":6387:6396  balanceOf */
          0x03
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup3
          mstore
          dup14
          dup5
          keccak256
          dup2
          dup2
          sload
          add
          swap1
          sstore
          dup14
          mload
          swap1
          dup2
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":6436:6468  Transfer(address(0), to, amount) */
          log3
            /* \"src/curve/constant-product/ConstantProductPair.sol\":6306:6661  if (lTotalSupply == 0) {... */
        tag_484:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":6678:6692  rLiquidity > 0 */
          dup10
          iszero
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          tag_485
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":6745:6755  rLiquidity */
          pop
          tag_487
          dup10
            /* \"src/curve/constant-product/ConstantProductPair.sol\":6997:7016  lBlockTimestampLast */
          tag_488
            /* \"src/curve/constant-product/ConstantProductPair.sol\":6745:6755  rLiquidity */
          swap10
          swap11
          swap12
          swap13
          tag_39
          jump\t// in
        tag_487:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":6853:6874  lBalance0 * lBalance1 */
          tag_489
          dup5
          dup5
          tag_37
          jump\t// in
        tag_489:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":6845:6874  kLast = lBalance0 * lBalance1 */
          0x010010
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sstore
          dup9
          mload
          swap2
          dup3
          mstore
          dup11
          dup3
          add
          mstore
            /* \"src/curve/constant-product/ConstantProductPair.sol\":6889:6925  Mint(msg.sender, lAmount0, lAmount1) */
          0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f
            /* \"src/curve/constant-product/ConstantProductPair.sol\":6894:6904  msg.sender */
          dup9
          caller
            /* \"src/curve/constant-product/ConstantProductPair.sol\":6889:6925  Mint(msg.sender, lAmount0, lAmount1) */
          swap3
          log2
            /* \"src/curve/constant-product/ConstantProductPair.sol\":6997:7016  lBlockTimestampLast */
          tag_22
          jump\t// in
        tag_488:
          tag_490
          tag_41
          jump\t// in
        tag_490:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mload
          swap1
          dup2
          mstore
          return
        tag_485:
          0x64
          swap1
          dup12
          dup11
          mload
          swap2
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          dup3
          add
          mstore
          0x1b
          0x24
          dup3
          add
          mstore
          0x43503a20494e53554646494349454e545f4c49515f4d494e5445440000000000
          0x44
          dup3
          add
          mstore
          revert
        tag_482:
          0x24
          dup4
          0x11
          dup7
          0x4e487b7100000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          mstore
          revert
        tag_480:
          pop
          0x11
          0x24
          swap3
          0x4e487b7100000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          mstore
          revert
            /* \"src/curve/constant-product/ConstantProductPair.sol\":6306:6661  if (lTotalSupply == 0) {... */
        tag_476:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":6614:6649  lAmount1 * lTotalSupply / lReserve1 */
          tag_491
            /* \"src/curve/constant-product/ConstantProductPair.sol\":6577:6600  lAmount0 * lTotalSupply */
          dup9
            /* \"src/curve/constant-product/ConstantProductPair.sol\":6614:6637  lAmount1 * lTotalSupply */
          tag_494
            /* \"src/curve/constant-product/ConstantProductPair.sol\":6577:6612  lAmount0 * lTotalSupply / lReserve0 */
          tag_493
            /* \"src/curve/constant-product/ConstantProductPair.sol\":6577:6600  lAmount0 * lTotalSupply */
          dup11
          dup16
          swap7
          swap16
          tag_494
          swap1
          dup11
          tag_37
          jump\t// in
        tag_494:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":6577:6612  lAmount0 * lTotalSupply / lReserve0 */
          tag_38
          jump\t// in
        tag_493:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":6614:6637  lAmount1 * lTotalSupply */
          swap5
          dup7
          tag_37
          jump\t// in
            /* \"src/curve/constant-product/ConstantProductPair.sol\":6614:6649  lAmount1 * lTotalSupply / lReserve1 */
        tag_491:
            /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":673:686  a < b ? a : b */
          swap1
          pop
            /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":673:678  a < b */
          dup1
          dup3
          lt
          iszero
          tag_495
          jumpi
            /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":673:686  a < b ? a : b */
          pop
        tag_497:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":6306:6661  if (lTotalSupply == 0) {... */
          swap9
          jump(tag_484)
            /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":673:686  a < b ? a : b */
        tag_495:
          swap1
          pop
          jump(tag_497)
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
        tag_87:
          dup4
          dup3
          jumpi(tag_164, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_164
          jumpi
          0x20
          swap1
            /* \"src/ReservoirPair.sol\":3460:3482  uint256 public swapFee */
          0x07
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_85:
          swap2
          pop
          jumpi(tag_176, callvalue)
          jumpi(tag_176, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))
          dup2
          calldataload
            /* \"src/ReservoirPair.sol\":3741:3748  factory */
          swap2
            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */
          tag_506
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":3741:3748  factory */
          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":3719:3729  msg.sender */
          caller
            /* \"src/ReservoirPair.sol\":3719:3749  msg.sender == address(factory) */
          eq
            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */
          tag_15
          jump\t// in
        tag_506:
            /* \"src/ReservoirPair.sol\":17789:17807  0 < aMaxChangeRate */
          dup3
          iszero
          iszero
            /* \"src/ReservoirPair.sol\":17789:17847  0 < aMaxChangeRate && aMaxChangeRate <= MAX_CHANGE_PER_SEC */
          dup1
          tag_507
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
        tag_508:
            /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */
          iszero
          tag_509
          jumpi
            /* \"src/ReservoirPair.sol\":17917:17930  maxChangeRate */
          pop
            /* \"src/ReservoirPair.sol\":17896:17947  MaxChangeRateUpdated(maxChangeRate, aMaxChangeRate) */
          0x807b9f5907da3f00bf587e77bc07247e1c7ff5ae46c93a584b3a075be0b1bac2
            /* \"src/ReservoirPair.sol\":17917:17930  maxChangeRate */
          0x01000d
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap2
          dup3
          sload
          dup2
          mload
          swap1
          dup2
          mstore
          dup5
          0x20
          dup3
          add
          mstore
            /* \"src/ReservoirPair.sol\":17896:17947  MaxChangeRateUpdated(maxChangeRate, aMaxChangeRate) */
          log1
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sstore
          dup1
          return
            /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */
        tag_509:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0x20
            /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */
          0x64
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap3
          mload
            /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */
          swap2
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          dup3
          add
          mstore
          0x1d
          0x24
          dup3
          add
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mstore
            /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */
          0x4f573a20494e56414c49445f4348414e47455f5045525f5345434f4e44000000
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0x44
          dup3
          add
            /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */
          mstore
          revert
            /* \"src/ReservoirPair.sol\":17789:17847  0 < aMaxChangeRate && aMaxChangeRate <= MAX_CHANGE_PER_SEC */
        tag_507:
            /* \"src/ReservoirPair.sol\":17811:17847  aMaxChangeRate <= MAX_CHANGE_PER_SEC */
          pop
            /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */
          0x2386f26fc10000
            /* \"src/ReservoirPair.sol\":17811:17847  aMaxChangeRate <= MAX_CHANGE_PER_SEC */
          dup4
          gt
          iszero
            /* \"src/ReservoirPair.sol\":17789:17847  0 < aMaxChangeRate && aMaxChangeRate <= MAX_CHANGE_PER_SEC */
          jump(tag_508)
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
        tag_83:
          dup4
          dup3
          jumpi(tag_164, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_164
          jumpi
          0x20
          swap1
            /* \"src/ReservoirPair.sol\":17128:17159  uint256 public prevClampedPrice */
          0x01000e
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_81:
          dup4
          dup3
          jumpi(tag_164, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_164
          jumpi
          0x20
          swap1
          mload
            /* \"src/curve/constant-product/ConstantProductPair.sol\":1003:1007  1e76 */
          0x161bcca7119915b50764b4abe86529797775a5f1719510000000000000000000
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup2
          mstore
          return
        tag_79:
          dup4
          dup3
          jumpi(tag_164, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_164
          jumpi
          0x20
          swap1
          mload
            /* \"src/ReservoirPair.sol\":2789:2796  500_000 */
          0x07a120
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup2
          mstore
          return
        tag_77:
          dup4
          dup3
          jumpi(tag_164, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_164
          jumpi
          0x20
          swap1
          tag_527
          tag_11
          jump\t// in
        tag_527:
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_75:
          dup4
          dup3
          jumpi(tag_164, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_164
          jumpi
          dup1
            /* \"src/ReservoirPair.sol\":17490:17522  factory.read(ORACLE_CALLER_NAME) */
          tag_532
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap2
          mload
          tag_533
          dup2
          tag_4
          jump\t// in
        tag_533:
          0x14
          dup2
          mstore
          0x5368617265643a3a6f7261636c6543616c6c6572000000000000000000000000
          0x20
          dup3
          add
          mstore
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":17490:17497  factory */
          swap3
          dup4
          swap2
          dup3
          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":17490:17522  factory.read(ORACLE_CALLER_NAME) */
          tag_49
          jump\t// in
        tag_532:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":17562:17574  oracleCaller */
          swap1
          0x01000f
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap3
          dup4
          sload
          swap1
          dup2
          and
            /* \"src/ReservoirPair.sol\":17548:17574  lNewCaller != oracleCaller */
          dup1
          dup5
          sub
            /* \"src/ReservoirPair.sol\":17544:17690  if (lNewCaller != oracleCaller) {... */
          tag_534
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup6
          dup1
          return
            /* \"src/ReservoirPair.sol\":17544:17690  if (lNewCaller != oracleCaller) {... */
        tag_534:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup3
            /* \"src/ReservoirPair.sol\":17595:17640  OracleCallerUpdated(oracleCaller, lNewCaller) */
          0x262681b3b01b61ff6d02569759105771205cdd274fb3c45535b50632e0a3523f
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap2
          0xffffffffffffffffffffffff0000000000000000000000000000000000000000
          swap5
          mload
          swap1
          dup2
          mstore
            /* \"src/ReservoirPair.sol\":16881:16903  \"Shared::oracleCaller\" */
          dup6
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0x20
            /* \"src/ReservoirPair.sol\":16881:16903  \"Shared::oracleCaller\" */
          dup3
          add
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mstore
            /* \"src/ReservoirPair.sol\":17595:17640  OracleCallerUpdated(oracleCaller, lNewCaller) */
          log1
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          and
          or
          swap1
          sstore
            /* \"src/ReservoirPair.sol\":17544:17690  if (lNewCaller != oracleCaller) {... */
          dup2
          dup1
          dup1
          dup1
          dup1
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup6
          dup1
          return
        tag_73:
          dup4
          dup3
          jumpi(tag_164, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_164
          jumpi
          0x20
          swap1
          mload
          0xff
            /* \"lib/solmate/src/tokens/ERC20.sol\":1083:1114  uint8 public immutable decimals */
          immutable(\"0xb7b2278e6c1d8d0abc309f6bf9256046dfb6cd1d61f6bb10388e8ea4928d3539\")
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          and
          dup2
          mstore
          return
        tag_71:
          dup4
          dup3
          jumpi(tag_164, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_164
          jumpi
          0x20
          swap1
            /* \"src/ReservoirPair.sol\":3587:3613  uint256 public platformFee */
          0x09
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_69:
          swap1
          dup4
          jumpi(tag_155, callvalue)
          jumpi(tag_155, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x60))
          tag_548
          tag_8
          jump\t// in
        tag_548:
            /* \"lib/solmate/src/tokens/ERC20.sol\":3594:3620  Transfer(from, to, amount) */
          0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          tag_549
          tag_9
          jump\t// in
        tag_549:
          swap5
          calldataload(0x44)
          dup6
          0xffffffffffffffffffffffffffffffffffffffff
          dup1
          swap6
          and
          swap5
          dup6
          dup8
          mstore
          0x20
          swap9
          dup5
          dup11
          swap6
          dup7
          mstore
          dup4
          dup10
          keccak256
            /* \"lib/solmate/src/tokens/ERC20.sol\":3225:3235  msg.sender */
          caller
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup11
          mstore
          dup7
          mstore
          dup4
          dup10
          keccak256
          sload
            /* \"lib/solmate/src/tokens/ERC20.sol\":3287:3315  allowed != type(uint256).max */
          dup6
            /* \"lib/solmate/src/tokens/ERC20.sol\":3298:3315  type(uint256).max */
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
            /* \"lib/solmate/src/tokens/ERC20.sol\":3287:3315  allowed != type(uint256).max */
          dup3
          sub
            /* \"lib/solmate/src/tokens/ERC20.sol\":3283:3363  if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount */
          tag_550
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
        tag_551:
          pop
          pop
          pop
          dup7
          dup9
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":3374:3383  balanceOf */
          0x03
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup6
          mstore
          dup3
          dup9
          keccak256
            /* \"lib/solmate/src/tokens/ERC20.sol\":3374:3399  balanceOf[from] -= amount */
          tag_552
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup6
          dup3
          sload
            /* \"lib/solmate/src/tokens/ERC20.sol\":3374:3399  balanceOf[from] -= amount */
          tag_10
          jump\t// in
        tag_552:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap1
          sstore
          and
          swap6
          dup7
          dup2
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":3374:3383  balanceOf */
          0x03
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup5
          mstore
          keccak256
          dup2
          dup2
          sload
          add
          swap1
          sstore
          dup6
          mload
          swap1
          dup2
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":3594:3620  Transfer(from, to, amount) */
          log3
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mload
          0x01
          dup2
          mstore
          return
            /* \"lib/solmate/src/tokens/ERC20.sol\":3283:3363  if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount */
        tag_550:
            /* \"lib/solmate/src/tokens/ERC20.sol\":3347:3363  allowed - amount */
          tag_553
          swap2
          tag_10
          jump\t// in
        tag_553:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap1
          dup9
          dup11
          mstore
          dup7
          mstore
          dup4
          dup10
          keccak256
            /* \"lib/solmate/src/tokens/ERC20.sol\":3225:3235  msg.sender */
          caller
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup11
          mstore
          dup7
          mstore
          dup4
          dup10
          keccak256
          sstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":3283:3363  if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount */
          dup11
          dup1
          dup6
          jump(tag_551)
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
        tag_67:
          dup4
          dup3
          jumpi(tag_164, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_164
          jumpi
          0x20
          swap1
            /* \"lib/solmate/src/tokens/ERC20.sol\":1304:1330  uint256 public totalSupply */
          0x02
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_65:
          dup4
          dup3
          jumpi(tag_164, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_164
          jumpi
          0x20
          swap1
          mload
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":2915:2944  ERC20 public immutable token0 */
          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          and
          dup2
          mstore
          return
        tag_63:
          dup4
          jumpi(tag_155, callvalue)
          dup1
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_155
          jumpi
          tag_157
          tag_16
          jump\t// in
        tag_61:
          swap1
          swap2
          pop
          jumpi(tag_176, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_176
          jumpi
          0x20
          swap3
          tag_571
          tag_8
          jump\t// in
        tag_571:
          swap2
          dup4
          calldataload(0x24)
            /* \"lib/solmate/src/tokens/ERC20.sol\":2561:2571  msg.sender */
          swap3
          dup4
          swap3
          caller
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup3
          mstore
          dup8
          mstore
          0xffffffffffffffffffffffffffffffffffffffff
          dup3
          dup3
          keccak256
          swap6
          and
          swap5
          dup6
          dup3
          mstore
          dup8
          mstore
          keccak256
          sstore
          dup3
          mload
          swap1
          dup2
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":2606:2643  Approval(msg.sender, spender, amount) */
          0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
            /* \"lib/solmate/src/tokens/ERC20.sol\":2561:2571  msg.sender */
          dup5
          caller
            /* \"lib/solmate/src/tokens/ERC20.sol\":2606:2643  Approval(msg.sender, spender, amount) */
          swap3
          log3
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mload
          0x01
          dup2
          mstore
          return
        tag_59:
          dup4
          dup3
          jumpi(tag_164, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_164
          jumpi
          0x80
          swap1
          tag_576
          tag_12
          jump\t// in
        tag_576:
          swap1
          0xffffffffffffffffffffffffff
          swap2
          dup3
          dup2
          mload
          and
            /* \"src/ReservoirPair.sol\":5849:5864  lSlot0.reserve1 */
          swap3
          0x20
          dup3
          add
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mload
          and
            /* \"src/ReservoirPair.sol\":5920:5942  lSlot0.packedTimestamp */
          swap2
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0xffff
            /* \"src/ReservoirPair.sol\":5962:5974  lSlot0.index */
          0x60
            /* \"src/ReservoirPair.sol\":4678:4688  0x7FFFFFFF */
          0x7fffffff
            /* \"src/ReservoirPair.sol\":5920:5942  lSlot0.packedTimestamp */
          dup4
          dup6
          add
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mload
            /* \"src/ReservoirPair.sol\":4662:4688  aRawTimestamp & 0x7FFFFFFF */
          and
            /* \"src/ReservoirPair.sol\":5962:5974  lSlot0.index */
          swap4
          add
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mload
          and
          swap3
          dup2
          mload
          swap5
          dup6
          mstore
            /* \"src/ReservoirPair.sol\":5849:5864  lSlot0.reserve1 */
          0x20
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup6
          add
          mstore
          dup4
          add
          mstore
            /* \"src/ReservoirPair.sol\":5962:5974  lSlot0.index */
          0x60
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup3
          add
          mstore
          return
        tag_57:
          swap3
          pop
          pop
          jumpi(tag_176, callvalue)
          dup3
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_176
          jumpi
          dup3
          dup1
          sload
          tag_581
          dup2
          tag_1
          jump\t// in
        tag_581:
          dup1
          dup6
          mstore
          swap2
          0x01
          swap2
          dup1
          dup4
          and
          swap1
          dup2
          iszero
          tag_401
          jumpi
          pop
          0x01
          eq
          tag_584
          jumpi
          pop
          pop
          pop
          tag_405
          dup3
          tag_406
          swap5
          sub
          dup4
          tag_5
          jump\t// in
        tag_584:
          dup1
          dup1
          swap7
          pop
          mstore
          0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563
        tag_588:
          dup3
          dup7
          lt
          tag_589
          jumpi
          pop
          pop
          pop
          tag_405
          dup3
          0x20
          tag_406
          swap6
          dup3
          add
          add
          swap5
          jump(tag_404)
        tag_589:
          dup1
          sload
          0x20
          dup8
          dup8
          add
          dup2
          add
          swap2
          swap1
          swap2
          mstore
          swap1
          swap6
          add
          swap5
          dup2
          add
          jump(tag_588)
        tag_1:
          swap1
          0x01
          dup3
          dup2
          shr
          swap3
          and
          dup1
          iszero
          tag_591
          jumpi
        tag_592:
          0x20
          dup4
          lt
          eq
          tag_593
          jumpi
          jump\t// out
        tag_593:
          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)
          mstore(0x04, 0x22)
          revert(0x00, 0x24)
        tag_591:
          swap2
          0x7f
          and
          swap2
          jump(tag_592)
        tag_2:
          0x80
          dup2
          add
          swap1
          dup2
          lt
          0xffffffffffffffff
          dup3
          gt
          or
          tag_595
          jumpi
          0x40
          mstore
          jump\t// out
        tag_595:
          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)
          mstore(0x04, 0x41)
          revert(0x00, 0x24)
        tag_3:
          0xffffffffffffffff
          dup2
          gt
          tag_595
          jumpi
          0x40
          mstore
          jump\t// out
        tag_4:
          0x40
          dup2
          add
          swap1
          dup2
          lt
          0xffffffffffffffff
          dup3
          gt
          or
          tag_595
          jumpi
          0x40
          mstore
          jump\t// out
        tag_5:
          swap1
          0x1f
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
          swap2
          add
          and
          dup2
          add
          swap1
          dup2
          lt
          0xffffffffffffffff
          dup3
          gt
          or
          tag_595
          jumpi
          0x40
          mstore
          jump\t// out
        tag_6:
          0x00
        tag_603:
          dup4
          dup2
          lt
          tag_604
          jumpi
          pop
          pop
          0x00
          swap2
          add
          mstore
          jump\t// out
        tag_604:
          dup2
          dup2
          add
          mload
          dup4
          dup3
          add
          mstore
          0x20
          add
          jump(tag_603)
        tag_7:
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
          0x1f
          0x40
          swap4
          0x20
          dup5
          mstore
          tag_606
          dup2
          mload
          dup1
          swap3
          dup2
          0x20
          dup9
          add
          mstore
          0x20
          dup9
          dup9
          add
          swap2
          add
          tag_6
          jump\t// in
        tag_606:
          add
          and
          add
          add
          swap1
          jump\t// out
        tag_8:
          calldataload(0x04)
          swap1
          0xffffffffffffffffffffffffffffffffffffffff
          dup3
          and
          dup3
          sub
          tag_607
          jumpi
          jump\t// out
        tag_607:
          0x00
          dup1
          revert
        tag_9:
          calldataload(0x24)
          swap1
          0xffffffffffffffffffffffffffffffffffffffff
          dup3
          and
          dup3
          sub
          tag_607
          jumpi
          jump\t// out
        tag_10:
          swap2
          swap1
          dup3
          sub
          swap2
          dup3
          gt
          tag_611
          jumpi
          jump\t// out
        tag_611:
          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)
          mstore(0x04, 0x11)
          revert(0x00, 0x24)
            /* \"lib/solmate/src/tokens/ERC20.sol\":5327:5504  function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {... */
        tag_11:
          0x00
            /* \"lib/solmate/src/tokens/ERC20.sol\":5410:5423  block.chainid */
          chainid
            /* \"lib/solmate/src/tokens/ERC20.sol\":5427:5443  INITIAL_CHAIN_ID */
          immutable(\"0x81290bb363e768cff9ff9a5d447e434874948b933698048b966fdf5d744bf636\")
            /* \"lib/solmate/src/tokens/ERC20.sol\":5410:5443  block.chainid == INITIAL_CHAIN_ID */
          sub
            /* \"lib/solmate/src/tokens/ERC20.sol\":5427:5443  INITIAL_CHAIN_ID */
          tag_613
          jumpi
            /* \"lib/solmate/src/tokens/ERC20.sol\":5446:5470  INITIAL_DOMAIN_SEPARATOR */
          pop
          immutable(\"0x34382e0db9f4d1365b2614bb97467901a574db9e05159d2f14a2053ade673b06\")
            /* \"lib/solmate/src/tokens/ERC20.sol\":5327:5504  function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {... */
          swap1
          jump\t// out
            /* \"lib/solmate/src/tokens/ERC20.sol\":5410:5497  block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator() */
        tag_613:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mload(0x40)
          dup2
          sload
          dup3
          swap2
          tag_616
          dup3
          tag_1
          jump\t// in
        tag_616:
          dup1
          dup3
          mstore
          dup2
          0x20
          swap5
          dup6
          dup3
          add
          swap5
          0x01
          swap1
          dup8
          dup3
          dup3
          and
          swap2
          dup3
          0x00
          eq
          tag_617
          jumpi
          pop
          pop
          0x01
          eq
          tag_619
          jumpi
        tag_620:
          pop
          tag_621
          swap3
          pop
          sub
          dup3
          tag_5
          jump\t// in
        tag_621:
          mload
            /* \"lib/solmate/src/tokens/ERC20.sol\":5789:5811  keccak256(bytes(name)) */
          swap1
          keccak256
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap2
          mload(0x40)
            /* \"lib/solmate/src/tokens/ERC20.sol\":5640:5935  abi.encode(... */
          swap2
          dup3
          add
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap3
            /* \"lib/solmate/src/tokens/ERC20.sol\":5672:5767  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */
          0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup5
          mstore
          0x40
          dup4
          add
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":5833:5847  keccak256(\"1\") */
          0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0x60
          dup4
          add
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":5410:5423  block.chainid */
          chainid
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0x80
          dup4
          add
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":5912:5916  this */
          address
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0xa0
          dup4
          add
          mstore
          0xa0
            /* \"lib/solmate/src/tokens/ERC20.sol\":5640:5935  abi.encode(... */
          dup3
          mstore
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0xc0
          dup3
          add
          swap1
          dup3
          dup3
          lt
          0xffffffffffffffff
          dup4
          gt
          or
          tag_622
          jumpi
          pop
          0x40
          mstore
          mload
            /* \"lib/solmate/src/tokens/ERC20.sol\":5613:5949  keccak256(... */
          swap1
          keccak256
            /* \"lib/solmate/src/tokens/ERC20.sol\":5327:5504  function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {... */
          swap1
          jump\t// out
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
        tag_622:
          dup1
          0x4e487b7100000000000000000000000000000000000000000000000000000000
          0x24
          swap3
          mstore
          mstore(0x04, 0x41)
          revert
        tag_619:
          dup8
          dup1
          mstore
          dup7
          swap2
          pop
          dup8
          swap1
          0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563
        tag_624:
          dup6
          dup4
          lt
          tag_625
          jumpi
          pop
          pop
          tag_621
          swap4
          pop
          dup3
          add
          add
          codesize
          jump(tag_620)
        tag_625:
          dup1
          sload
          dup4
          dup9
          add
          dup6
          add
          mstore
          dup7
          swap5
          pop
          dup9
          swap4
          swap1
          swap3
          add
          swap2
          dup2
          add
          jump(tag_624)
        tag_617:
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
          and
          dup9
          mstore
          tag_621
          swap6
          iszero
          iszero
          0x05
          shl
          dup6
          add
          add
          swap3
          pop
          codesize
          swap2
          pop
          tag_620
          swap1
          pop
          jump
        tag_12:
          mload(0x40)
          swap1
          tag_627
          dup3
          tag_2
          jump\t// in
        tag_627:
          dup2
          0x60
            /* \"src/ReservoirPair.sol\":5783:5789  _slot0 */
          0x06
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
          0xffffffffffffffffffffffffff
          dup1
          dup3
          and
          dup5
          mstore
          dup2
          0x68
          shr
          and
          0x20
          dup5
          add
          mstore
          0xffffffff
          dup2
          0xd0
          shr
          and
          0x40
          dup5
          add
          mstore
          0xf0
          shr
          swap2
          add
          mstore
          jump\t// out
            /* \"src/ReservoirPair.sol\":4905:5467  function _lockAndLoad()... */
        tag_13:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          tag_628
          tag_12
          jump\t// in
        tag_628:
          swap1
          0xffffffffffffffffffffffffff
          swap2
          dup3
          dup2
          mload
          and
            /* \"src/ReservoirPair.sol\":5196:5211  lSlot0.reserve1 */
          swap3
          0x20
          dup3
          add
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mload
          and
            /* \"src/ReservoirPair.sol\":5273:5295  lSlot0.packedTimestamp */
          swap2
          0x40
          dup3
          add
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mload
            /* \"src/ReservoirPair.sol\":4662:4688  aRawTimestamp & 0x7FFFFFFF */
          swap1
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0x01
            /* \"src/ReservoirPair.sol\":4662:4688  aRawTimestamp & 0x7FFFFFFF */
          dup1
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0xffff
            /* \"src/ReservoirPair.sol\":5315:5327  lSlot0.index */
          0x60
            /* \"src/ReservoirPair.sol\":4678:4688  0x7FFFFFFF */
          0x7fffffff
            /* \"src/ReservoirPair.sol\":4662:4688  aRawTimestamp & 0x7FFFFFFF */
          dup7
          and
            /* \"src/ReservoirPair.sol\":5315:5327  lSlot0.index */
          swap7
          add
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mload
          and
          swap4
            /* \"src/ReservoirPair.sol\":4632:4634  31 */
          0x1f
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          shr
          and
            /* \"src/ReservoirPair.sol\":4615:4639  aRawTimestamp >> 31 == 1 */
          eq
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          tag_629
          jumpi
            /* \"src/ReservoirPair.sol\":4847:4853  _slot0 */
          0x06
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
          0xffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffff
          0xffffffff0000000000000000000000000000000000000000000000000000
            /* \"src/ReservoirPair.sol\":4817:4824  1 << 31 */
          0x80000000
            /* \"src/ReservoirPair.sol\":4872:4892  aTimestamp | lLocked */
          dup7
          or
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0xd0
          shl
          and
          swap2
          and
          or
            /* \"src/ReservoirPair.sol\":4847:4853  _slot0 */
          0x06
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sstore
            /* \"src/ReservoirPair.sol\":4905:5467  function _lockAndLoad()... */
          jump\t// out
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
        tag_629:
          0x64
            /* \"src/ReservoirPair.sol\":5273:5295  lSlot0.packedTimestamp */
          0x40
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mload
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
            /* \"src/ReservoirPair.sol\":5196:5211  lSlot0.reserve1 */
          0x20
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0x04
          dup3
          add
          mstore
          0x0a
          0x24
          dup3
          add
          mstore
          0x5245454e5452414e435900000000000000000000000000000000000000000000
          0x44
          dup3
          add
          mstore
          revert
        tag_15:
          iszero
          tag_631
          jumpi
          jump\t// out
        tag_631:
          0x64
          mload(0x40)
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
          0x20
          0x04
          dup3
          add
          mstore
          0x0c
          0x24
          dup3
          add
          mstore
          0x503a20464f5242494444454e0000000000000000000000000000000000000000
          0x44
          dup3
          add
          mstore
          revert
            /* \"src/ReservoirPair.sol\":7293:7635  function updateSwapFee() public {... */
        tag_16:
            /* \"src/ReservoirPair.sol\":7354:7367  customSwapFee */
          0x08
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
          0x00
            /* \"src/ReservoirPair.sol\":7371:7388  type(uint256).max */
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":7354:7388  customSwapFee != type(uint256).max */
          dup3
          eq
            /* \"src/ReservoirPair.sol\":7371:7388  type(uint256).max */
          tag_633
          jumpi
            /* \"src/ReservoirPair.sol\":7354:7443  customSwapFee != type(uint256).max ? customSwapFee : factory.get(swapFeeName).toUint256() */
          pop
        tag_635:
            /* \"src/ReservoirPair.sol\":7469:7476  swapFee */
          0x07
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
            /* \"src/ReservoirPair.sol\":7457:7476  _swapFee == swapFee */
          dup1
          dup3
          eq
            /* \"src/ReservoirPair.sol\":7453:7485  if (_swapFee == swapFee) return; */
          tag_636
          jumpi
            /* \"src/ReservoirPair.sol\":2849:2855  20_000 */
          0x4e20
            /* \"src/ReservoirPair.sol\":7503:7527  _swapFee <= MAX_SWAP_FEE */
          dup3
          gt
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          tag_638
          jumpi
          0x40
            /* \"src/ReservoirPair.sol\":7567:7600  SwapFeeChanged(swapFee, _swapFee) */
          0xad321f810529281bbb90384fd6fecbdda41509a5ccd7bd5aed986ed827f6a026
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap2
          dup2
          mload
          swap1
          dup2
          mstore
          dup4
          0x20
          dup3
          add
          mstore
            /* \"src/ReservoirPair.sol\":7567:7600  SwapFeeChanged(swapFee, _swapFee) */
          log1
            /* \"src/ReservoirPair.sol\":7469:7476  swapFee */
          0x07
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sstore
            /* \"src/ReservoirPair.sol\":7293:7635  function updateSwapFee() public {... */
          jump\t// out
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
        tag_638:
          0x64
          mload(0x40)
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
          0x20
          0x04
          dup3
          add
          mstore
          0x13
          0x24
          dup3
          add
          mstore
          0x503a20494e56414c49445f535741505f46454500000000000000000000000000
          0x44
          dup3
          add
          mstore
          revert
            /* \"src/ReservoirPair.sol\":7453:7485  if (_swapFee == swapFee) return; */
        tag_636:
            /* \"src/ReservoirPair.sol\":7478:7485  return; */
          pop
          pop
          jump\t// out
            /* \"src/ReservoirPair.sol\":7354:7443  customSwapFee != type(uint256).max ? customSwapFee : factory.get(swapFeeName).toUint256() */
        tag_633:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap1
          pop
          mload(0x40)
          0x8eaa6ac000000000000000000000000000000000000000000000000000000000
            /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */
          dup2
          mstore
            /* \"src/ReservoirPair.sol\":7419:7430  swapFeeName */
          immutable(\"0x4c21324e1a4fdca228db96f937188124acece199982b123b328bdd8fee41b354\")
            /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */
          0x04
          dup3
          add
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mstore
            /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */
          0x20
            /* \"src/ReservoirPair.sol\":7407:7414  factory */
          dup2
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0x24
            /* \"src/ReservoirPair.sol\":7407:7414  factory */
          dup2
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":7407:7414  factory */
          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */
          gas
          staticcall
          swap2
          dup3
          iszero
          tag_640
          jumpi
          dup1
          swap3
          tag_642
          jumpi
            /* \"src/ReservoirPair.sol\":7354:7443  customSwapFee != type(uint256).max ? customSwapFee : factory.get(swapFeeName).toUint256() */
        tag_643:
          pop
          pop
          jump(tag_635)
            /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */
        tag_642:
          swap1
          swap2
          pop
          0x20
          dup3
          returndatasize
          dup3
          gt
          tag_644
          jumpi
        tag_645:
          dup2
          tag_646
          0x20
          swap4
          dup4
          tag_5
          jump\t// in
        tag_646:
          dup2
          add
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sub
          slt
          tag_155
          jumpi
          pop
          mload
            /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */
          codesize
          dup1
          jump(tag_643)
        tag_644:
          returndatasize
          swap2
          pop
          jump(tag_645)
        tag_640:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mload(0x40)
          swap1
          returndatasize
          swap1
          dup3
          returndatacopy
          returndatasize
          swap1
          revert
            /* \"src/ReservoirPair.sol\":7641:8058  function updatePlatformFee() public {... */
        tag_17:
            /* \"src/ReservoirPair.sol\":7722:7739  customPlatformFee */
          0x0a
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
            /* \"src/ReservoirPair.sol\":7743:7760  type(uint256).max */
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":7722:7760  customPlatformFee != type(uint256).max */
          dup2
          eq
            /* \"src/ReservoirPair.sol\":7743:7760  type(uint256).max */
          tag_649
          jumpi
            /* \"src/ReservoirPair.sol\":7722:7826  customPlatformFee != type(uint256).max ? customPlatformFee : factory.read(PLATFORM_FEE_NAME).toUint256() */
        tag_651:
            /* \"src/ReservoirPair.sol\":7856:7867  platformFee */
          0x09
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
            /* \"src/ReservoirPair.sol\":7840:7867  _platformFee == platformFee */
          dup1
          dup3
          eq
            /* \"src/ReservoirPair.sol\":7836:7876  if (_platformFee == platformFee) return; */
          tag_636
          jumpi
            /* \"src/ReservoirPair.sol\":2789:2796  500_000 */
          0x07a120
            /* \"src/ReservoirPair.sol\":7894:7926  _platformFee <= MAX_PLATFORM_FEE */
          dup3
          gt
            /* \"src/ReservoirPair.sol\":2439:2460  \"Shared::platformFee\" */
          tag_654
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0x40
            /* \"src/ReservoirPair.sol\":7970:8015  PlatformFeeChanged(platformFee, _platformFee) */
          0xc98a8b10b63c929f7799380bb4a0c444c713ebf74d8732f944c915034121aad1
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap2
          dup2
          mload
          swap1
          dup2
          mstore
          dup4
          0x20
          dup3
          add
          mstore
            /* \"src/ReservoirPair.sol\":7970:8015  PlatformFeeChanged(platformFee, _platformFee) */
          log1
            /* \"src/ReservoirPair.sol\":7856:7867  platformFee */
          0x09
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sstore
            /* \"src/ReservoirPair.sol\":7641:8058  function updatePlatformFee() public {... */
          jump\t// out
            /* \"src/ReservoirPair.sol\":2439:2460  \"Shared::platformFee\" */
        tag_654:
          0x64
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mload(0x40)
            /* \"src/ReservoirPair.sol\":2439:2460  \"Shared::platformFee\" */
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
          0x20
          0x04
          dup3
          add
          mstore
          0x17
          0x24
          dup3
          add
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mstore
            /* \"src/ReservoirPair.sol\":2439:2460  \"Shared::platformFee\" */
          0x503a20494e56414c49445f504c4154464f524d5f464545000000000000000000
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0x44
          dup3
          add
            /* \"src/ReservoirPair.sol\":2439:2460  \"Shared::platformFee\" */
          mstore
          revert
            /* \"src/ReservoirPair.sol\":7722:7826  customPlatformFee != type(uint256).max ? customPlatformFee : factory.read(PLATFORM_FEE_NAME).toUint256() */
        tag_649:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          pop
            /* \"src/ReservoirPair.sol\":7783:7814  factory.read(PLATFORM_FEE_NAME) */
          tag_656
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mload(0x40)
          tag_657
          dup2
          tag_4
          jump\t// in
        tag_657:
          0x13
          dup2
          mstore
          0x5368617265643a3a706c6174666f726d46656500000000000000000000000000
          0x20
          dup3
          add
          mstore
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":7783:7790  factory */
          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":7783:7814  factory.read(PLATFORM_FEE_NAME) */
          tag_49
          jump\t// in
        tag_656:
            /* \"src/ReservoirPair.sol\":7722:7826  customPlatformFee != type(uint256).max ? customPlatformFee : factory.read(PLATFORM_FEE_NAME).toUint256() */
          jump(tag_651)
            /* \"src/ReservoirPair.sol\":8509:8845  function _safeTransfer(address aToken, address aTo, uint256 aValue) internal returns (bool) {... */
        tag_18:
          swap2
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mload(0x40)
            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */
          swap1
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */
          0x20
          dup4
          add
          swap4
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0xa9059cbb00000000000000000000000000000000000000000000000000000000
            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */
          dup6
          mstore
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */
          0x24
          dup4
          add
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mstore
            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */
          0x44
          dup3
          add
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mstore
            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */
          0x44
            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */
          dup2
          mstore
          tag_658
          dup2
          tag_2
          jump\t// in
        tag_658:
          0x00
            /* \"src/ReservoirPair.sol\":8706:8764  aToken.call(abi.encodeWithSelector(SELECTOR, aTo, aValue)) */
          swap3
          dup4
          swap3
          dup4
          dup1
          swap4
          mload
          swap3
          gas
          call
          swap1
            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */
          jumpi(tag_659, iszero(returndatasize))
          returndatasize
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap1
          0xffffffffffffffff
          dup3
          gt
          tag_622
          jumpi
          mload(0x40)
          swap2
          tag_663
            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */
          0x20
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
          0x1f
          dup5
          add
          and
          add
          dup5
          tag_5
          jump\t// in
        tag_663:
          dup3
          mstore
            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */
          returndatasize
          dup2
            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */
          0x20
            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */
          dup5
          add
          returndatacopy
        tag_664:
            /* \"src/ReservoirPair.sol\":8781:8838  success && (data.length == 0 || abi.decode(data, (bool))) */
          dup3
          tag_665
          jumpi
            /* \"src/ReservoirPair.sol\":8774:8838  return success && (data.length == 0 || abi.decode(data, (bool))) */
          pop
          pop
            /* \"src/ReservoirPair.sol\":8509:8845  function _safeTransfer(address aToken, address aTo, uint256 aValue) internal returns (bool) {... */
          swap1
          jump\t// out
            /* \"src/ReservoirPair.sol\":8781:8838  success && (data.length == 0 || abi.decode(data, (bool))) */
        tag_665:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap1
          dup1
          swap3
          pop
          mload
            /* \"src/ReservoirPair.sol\":8793:8809  data.length == 0 */
          swap2
          dup3
          iszero
            /* \"src/ReservoirPair.sol\":8793:8837  data.length == 0 || abi.decode(data, (bool)) */
          swap3
          dup4
          iszero
          tag_667
          jumpi
            /* \"src/ReservoirPair.sol\":8781:8838  success && (data.length == 0 || abi.decode(data, (bool))) */
        tag_668:
          pop
          pop
          pop
            /* \"src/ReservoirPair.sol\":8509:8845  function _safeTransfer(address aToken, address aTo, uint256 aValue) internal returns (bool) {... */
          swap1
          jump\t// out
            /* \"src/ReservoirPair.sol\":8793:8837  data.length == 0 || abi.decode(data, (bool)) */
        tag_667:
            /* \"src/ReservoirPair.sol\":8813:8837  abi.decode(data, (bool)) */
          dup2
          swap3
          swap4
          pop
          swap1
            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */
          0x20
            /* \"src/ReservoirPair.sol\":8813:8837  abi.decode(data, (bool)) */
          swap2
          dup2
          add
            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */
          sub
          slt
          tag_164
          jumpi
            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */
          0x20
            /* \"src/ReservoirPair.sol\":8813:8837  abi.decode(data, (bool)) */
          add
            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */
          mload
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap1
          dup2
          iszero
          iszero
          dup3
          sub
          tag_155
          jumpi
            /* \"src/ReservoirPair.sol\":8793:8837  data.length == 0 || abi.decode(data, (bool)) */
          pop
          codesize
          dup1
          dup1
          jump(tag_668)
            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */
        tag_659:
          0x60
          swap1
          jump(tag_664)
            /* \"src/ReservoirPair.sol\":8981:9714  function _checkedTransfer(ERC20 aToken, address aDestination, uint256 aAmount, uint256 aReserve0, uint256 aReserve1)... */
        tag_20:
          swap4
          swap1
          swap2
          swap3
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffff
          dup1
          swap6
          and
            /* \"src/ReservoirPair.sol\":9134:9187  _safeTransfer(address(aToken), aDestination, aAmount) */
          swap2
          tag_673
          dup6
          dup6
          dup6
          tag_18
          jump\t// in
        tag_673:
            /* \"src/ReservoirPair.sol\":9133:9187  !_safeTransfer(address(aToken), aDestination, aAmount) */
          iszero
            /* \"src/ReservoirPair.sol\":9129:9708  if (!_safeTransfer(address(aToken), aDestination, aAmount)) {... */
          tag_674
          jumpi
            /* \"src/ReservoirPair.sol\":8981:9714  function _checkedTransfer(ERC20 aToken, address aDestination, uint256 aAmount, uint256 aReserve0, uint256 aReserve1)... */
        tag_675:
          pop
          pop
          pop
          pop
          pop
          pop
          jump\t// out
            /* \"src/ReservoirPair.sol\":9129:9708  if (!_safeTransfer(address(aToken), aDestination, aAmount)) {... */
        tag_674:
            /* \"src/ReservoirPair.sol\":9239:9245  token0 */
          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup7
          and
            /* \"src/ReservoirPair.sol\":9229:9245  aToken == token0 */
          dup4
          eq
          swap2
            /* \"src/ReservoirPair.sol\":9229:9277  aToken == token0 ? token0Managed : token1Managed */
          dup3
          iszero
          tag_676
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0xffffffffffffffffffffffffff
          dup1
            /* \"src/ReservoirPair.sol\":9248:9261  token0Managed */
          0x0c
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
          and
            /* \"src/ReservoirPair.sol\":9229:9277  aToken == token0 ? token0Managed : token1Managed */
        tag_678:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          and
          swap2
            /* \"src/ReservoirPair.sol\":9312:9352  aToken == token0 ? aReserve0 : aReserve1 */
          dup4
          iszero
          tag_679
          jumpi
          pop
          swap6
        tag_681:
            /* \"src/ReservoirPair.sol\":9370:9398  reserveOut - tokenOutManaged */
          dup6
          tag_682
          dup4
          dup10
          tag_10
          jump\t// in
        tag_682:
            /* \"src/ReservoirPair.sol\":9370:9408  reserveOut - tokenOutManaged < aAmount */
          lt
          iszero
          tag_694
          jumpi
            /* \"src/ReservoirPair.sol\":9471:9511  aAmount - (reserveOut - tokenOutManaged) */
          tag_685
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap2
            /* \"src/ReservoirPair.sol\":9482:9510  reserveOut - tokenOutManaged */
          tag_686
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap2
            /* \"src/ReservoirPair.sol\":9428:9440  assetManager */
          0x0b
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
          and
            /* \"src/ReservoirPair.sol\":9482:9510  reserveOut - tokenOutManaged */
          swap8
          tag_10
          jump\t// in
        tag_686:
            /* \"src/ReservoirPair.sol\":9471:9511  aAmount - (reserveOut - tokenOutManaged) */
          dup6
          tag_10
          jump\t// in
        tag_685:
            /* \"src/ReservoirPair.sol\":9428:9512  assetManager.returnAsset(aToken == token0, aAmount - (reserveOut - tokenOutManaged)) */
          dup6
          extcodesize
          iszero
          tag_607
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0x44
          0x00
          swap3
          dup4
          mload(0x40)
            /* \"src/ReservoirPair.sol\":9428:9512  assetManager.returnAsset(aToken == token0, aAmount - (reserveOut - tokenOutManaged)) */
          swap9
          dup10
          swap5
          dup6
          swap4
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0x1566d96d00000000000000000000000000000000000000000000000000000000
            /* \"src/ReservoirPair.sol\":9428:9512  assetManager.returnAsset(aToken == token0, aAmount - (reserveOut - tokenOutManaged)) */
          dup6
          mstore
          0x04
          dup6
          add
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mstore
          0x24
          dup5
          add
          mstore
            /* \"src/ReservoirPair.sol\":9428:9512  assetManager.returnAsset(aToken == token0, aAmount - (reserveOut - tokenOutManaged)) */
          gas
          call
          swap4
          dup5
          iszero
          tag_689
          jumpi
            /* \"src/ReservoirPair.sol\":9538:9591  _safeTransfer(address(aToken), aDestination, aAmount) */
          tag_691
            /* \"src/ReservoirPair.sol\":9428:9512  assetManager.returnAsset(aToken == token0, aAmount - (reserveOut - tokenOutManaged)) */
          swap5
          tag_692
          jumpi
            /* \"src/ReservoirPair.sol\":9366:9698  if (reserveOut - tokenOutManaged < aAmount) {... */
        tag_693:
            /* \"src/ReservoirPair.sol\":9538:9591  _safeTransfer(address(aToken), aDestination, aAmount) */
          pop
          tag_18
          jump\t// in
        tag_691:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          iszero
          tag_694
          jumpi
            /* \"src/ReservoirPair.sol\":9129:9708  if (!_safeTransfer(address(aToken), aDestination, aAmount)) {... */
          codesize
          dup1
          dup1
          dup1
          dup1
          dup1
          jump(tag_675)
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
        tag_694:
          mload(0x40)
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
          0x20
            /* \"src/ReservoirPair.sol\":9428:9512  assetManager.returnAsset(aToken == token0, aAmount - (reserveOut - tokenOutManaged)) */
          0x04
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup3
          add
          mstore
          0x13
          0x24
          dup3
          add
          mstore
          0x52503a205452414e534645525f4641494c454400000000000000000000000000
          0x44
          dup3
          add
          mstore
          0x64
          swap1
          revert
            /* \"src/ReservoirPair.sol\":9428:9512  assetManager.returnAsset(aToken == token0, aAmount - (reserveOut - tokenOutManaged)) */
        tag_692:
          tag_697
          swap1
          tag_3
          jump\t// in
        tag_697:
          codesize
          jump(tag_693)
        tag_689:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mload(0x40)
          returndatasize
          0x00
          dup3
          returndatacopy
          returndatasize
          swap1
          revert
            /* \"src/ReservoirPair.sol\":9312:9352  aToken == token0 ? aReserve0 : aReserve1 */
        tag_679:
          swap1
          pop
          swap6
          jump(tag_681)
            /* \"src/ReservoirPair.sol\":9229:9277  aToken == token0 ? token0Managed : token1Managed */
        tag_676:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0xffffffffffffffffffffffffff
          dup1
            /* \"src/ReservoirPair.sol\":9264:9277  token1Managed */
          0x0c
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
          0x68
          shr
          and
            /* \"src/ReservoirPair.sol\":9229:9277  aToken == token0 ? token0Managed : token1Managed */
          jump(tag_678)
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
        tag_21:
          iszero
          tag_699
          jumpi
          jump\t// out
        tag_699:
          0x64
          mload(0x40)
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
          0x20
          0x04
          dup3
          add
          mstore
          0x0c
          0x24
          dup3
          add
          mstore
          0x52503a204f564552464c4f570000000000000000000000000000000000000000
          0x44
          dup3
          add
          mstore
          revert
            /* \"src/ReservoirPair.sol\":9804:10769  function _updateAndUnlock(... */
        tag_22:
          swap4
          swap3
          swap2
          swap1
          swap3
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0xffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":10007:10037  aBalance0 <= type(uint104).max */
          dup6
          gt
          iszero
            /* \"src/ReservoirPair.sol\":10007:10071  aBalance0 <= type(uint104).max && aBalance1 <= type(uint104).max */
          dup1
          tag_701
          jumpi
            /* \"src/ReservoirPair.sol\":9804:10769  function _updateAndUnlock(... */
        tag_702:
            /* \"src/ReservoirPair.sol\":9999:10088  require(aBalance0 <= type(uint104).max && aBalance1 <= type(uint104).max, \"RP: OVERFLOW\") */
          tag_703
          swap1
          tag_21
          jump\t// in
        tag_703:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0xffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":10106:10136  aReserve0 <= type(uint104).max */
          dup3
          gt
          iszero
            /* \"src/ReservoirPair.sol\":10106:10170  aReserve0 <= type(uint104).max && aReserve1 <= type(uint104).max */
          dup1
          tag_704
          jumpi
            /* \"src/ReservoirPair.sol\":9804:10769  function _updateAndUnlock(... */
        tag_705:
            /* \"src/ReservoirPair.sol\":10098:10187  require(aReserve0 <= type(uint104).max && aReserve1 <= type(uint104).max, \"RP: OVERFLOW\") */
          tag_706
          swap1
          tag_21
          jump\t// in
        tag_706:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0xffffffff
            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */
          dup1
          dup3
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0x7fffffff
            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */
          timestamp
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          and
          sub
          and
            /* \"src/ReservoirPair.sol\":10407:10423  lTimeElapsed > 0 */
          iszero
          iszero
            /* \"src/ReservoirPair.sol\":10407:10441  lTimeElapsed > 0 && aReserve0 != 0 */
          dup1
          tag_707
          jumpi
            /* \"src/ReservoirPair.sol\":9804:10769  function _updateAndUnlock(... */
        tag_708:
            /* \"src/ReservoirPair.sol\":10407:10459  lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0 */
          dup1
          tag_709
          jumpi
            /* \"src/ReservoirPair.sol\":9804:10769  function _updateAndUnlock(... */
        tag_710:
            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */
          tag_711
          jumpi
            /* \"src/ReservoirPair.sol\":9804:10769  function _updateAndUnlock(... */
        tag_712:
          pop
          pop
            /* \"src/ReservoirPair.sol\":10566:10572  _slot0 */
          0x06
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup1
          sload
          0xffff000000000000000000000000000000000000000000000000000000000000
          and
          0xffffffffffffffffffffffffff
          swap6
          dup7
          and
          swap1
          dup2
          or
          0x68
          dup7
          swap1
          shl
          0xffffffffffffffffffffffffff00000000000000000000000000
          and
          or
          0x7fffffff0000000000000000000000000000000000000000000000000000
            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */
          timestamp
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0xd0
          shl
          and
          or
          swap1
          swap2
          sstore
            /* \"src/ReservoirPair.sol\":10718:10762  Sync(uint104(aBalance0), uint104(aBalance1)) */
          0xff388a12130349259b5ae24af90448f511c2340be808f2c371230fc2da175c44
          swap5
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0x40
          swap5
          swap2
          swap4
          pop
          swap2
          pop
          dup4
          mload
          swap3
          dup4
          mstore
          and
          0x20
          dup3
          add
          mstore
            /* \"src/ReservoirPair.sol\":10718:10762  Sync(uint104(aBalance0), uint104(aBalance1)) */
          log1
            /* \"src/ReservoirPair.sol\":9804:10769  function _updateAndUnlock(... */
          jump\t// out
            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */
        tag_711:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap1
          swap2
          swap4
          swap3
          swap5
            /* \"src/curve/constant-product/ConstantProductPair.sol\":11384:11390  _slot0 */
          0x06
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
          swap2
          dup3
          0xf0
          shr
            /* \"src/curve/constant-product/ConstantProductPair.sol\":11370:11397  _observations[_slot0.index] */
          swap3
          tag_714
          dup5
          tag_36
          jump\t// in
        tag_714:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          pop
          swap2
          0xffffffffffffffffffffffffffffffff
            /* \"src/curve/constant-product/ConstantProductPair.sol\":11522:11547  token0PrecisionMultiplier */
          swap3
            /* \"src/curve/constant-product/ConstantProductPair.sol\":11549:11586  aReserve1 * token1PrecisionMultiplier */
          tag_715
            /* \"src/curve/constant-product/ConstantProductPair.sol\":11510:11547  aReserve0 * token0PrecisionMultiplier */
          tag_716
            /* \"src/curve/constant-product/ConstantProductPair.sol\":11522:11547  token0PrecisionMultiplier */
          dup6
          immutable(\"0x372e991e4284f7d12d6b2461cce9899511b05ac053845de253542adb96f2dca0\")
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          and
            /* \"src/curve/constant-product/ConstantProductPair.sol\":11510:11547  aReserve0 * token0PrecisionMultiplier */
          dup12
          tag_37
          jump\t// in
        tag_716:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":11561:11586  token1PrecisionMultiplier */
          swap5
          immutable(\"0xc4ba931b733b92a51f51c0955dd7716c7a38f3de911d23a5d0fbd5d23c0fbe8c\")
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          and
            /* \"src/curve/constant-product/ConstantProductPair.sol\":11549:11586  aReserve1 * token1PrecisionMultiplier */
          dup12
          tag_37
          jump\t// in
        tag_715:
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":655:659  1e18 */
          swap4
          0x0de0b6b3a7640000
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":2274:2762  assembly {... */
          0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21
          dup7
          gt
          dup2
          mul
          iszero
          dup3
          mul
          iszero
          tag_607
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":12514:12541  _observations[_slot0.index] */
          tag_719
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":2274:2762  assembly {... */
          swap6
          mul
          swap1
          dup1
          dup3
          div
          swap2
          mod
          iszero
          iszero
          add
            /* \"src/libraries/ConstantProductOracleMath.sol\":1620:1657  LogCompression.toLowResLog(spotPrice) */
          swap9
          tag_720
          dup11
          tag_52
          jump\t// in
        tag_720:
          0x80
          mstore
            /* \"src/libraries/ConstantProductOracleMath.sol\":2163:2196  LogCompression.toLowResLog(sqrtK) */
          tag_721
            /* \"src/libraries/ConstantProductOracleMath.sol\":2090:2133  FixedPointMathLib.sqrt(reserve0 * reserve1) */
          tag_722
            /* \"src/libraries/ConstantProductOracleMath.sol\":2113:2132  reserve0 * reserve1 */
          tag_479
            /* \"src/curve/constant-product/ConstantProductPair.sol\":11834:11898  _calcClampedPrice(lCurrRawPrice, prevClampedPrice, aTimeElapsed) */
          tag_724
            /* \"src/libraries/ConstantProductOracleMath.sol\":1687:1703  type(int112).min */
          0xffffffffffffffffffffffffffffffffffff8000000000000000000000000000
            /* \"src/libraries/ConstantProductOracleMath.sol\":1674:1703  rawResult >= type(int112).min */
          swap14
          dup15
          mload(0x80)
          slt
          iszero
            /* \"src/libraries/ConstantProductOracleMath.sol\":1674:1736  rawResult >= type(int112).min && rawResult <= type(int112).max */
          dup1
          tag_725
          jumpi
            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */
        tag_726:
            /* \"src/libraries/ConstantProductOracleMath.sol\":1667:1737  assert(rawResult >= type(int112).min && rawResult <= type(int112).max) */
          tag_727
          swap1
          tag_47
          jump\t// in
        tag_727:
            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */
          dup8
          dup14
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0x7fffffff
            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */
          timestamp
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          and
          sub
          and
          swap1
            /* \"src/curve/constant-product/ConstantProductPair.sol\":11867:11883  prevClampedPrice */
          0x01000e
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
            /* \"src/curve/constant-product/ConstantProductPair.sol\":11834:11898  _calcClampedPrice(lCurrRawPrice, prevClampedPrice, aTimeElapsed) */
          swap1
          tag_48
          jump\t// in
        tag_724:
            /* \"src/libraries/ConstantProductOracleMath.sol\":2113:2132  reserve0 * reserve1 */
          swap15
          swap1
          swap5
          tag_37
          jump\t// in
            /* \"src/libraries/ConstantProductOracleMath.sol\":2090:2133  FixedPointMathLib.sqrt(reserve0 * reserve1) */
        tag_722:
            /* \"src/libraries/ConstantProductOracleMath.sol\":2163:2196  LogCompression.toLowResLog(sqrtK) */
          tag_52
          jump\t// in
        tag_721:
            /* \"src/libraries/ConstantProductOracleMath.sol\":2213:2242  rawResult >= type(int112).min */
          swap10
          dup11
          slt
          iszero
            /* \"src/libraries/ConstantProductOracleMath.sol\":2213:2275  rawResult >= type(int112).min && rawResult <= type(int112).max */
          dup1
          tag_728
          jumpi
            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */
        tag_729:
            /* \"src/libraries/ConstantProductOracleMath.sol\":2206:2276  assert(rawResult >= type(int112).min && rawResult <= type(int112).max) */
          tag_730
          swap1
          tag_47
          jump\t// in
        tag_730:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":11867:11883  prevClampedPrice */
          0x01000e
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sstore
          sload
            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */
          swap2
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
          0xffff000000000000000000000000000000000000000000000000000000000000
          0x01
            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */
          dup5
          dup11
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0x7fffffff
            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */
          timestamp
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          and
          sub
          and
            /* \"src/curve/constant-product/ConstantProductPair.sol\":11384:11390  _slot0 */
          0x06
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          signextend
          swap9
          add
          0xf0
          shl
          and
          swap2
          and
          or
          swap2
          dup3
            /* \"src/curve/constant-product/ConstantProductPair.sol\":11384:11390  _slot0 */
          0x06
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sstore
          mload(0x40)
          swap6
          tag_731
          dup8
          tag_2
          jump\t// in
        tag_731:
            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */
          dup3
          dup9
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0x7fffffff
            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */
          timestamp
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          and
          sub
          and
          0x0d
          signextend
            /* \"src/libraries/ConstantProductOracleMath.sol\":1762:1779  int112(rawResult) */
          mload(0x80)
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0x0d
          signextend
          mul
          0x0d
          signextend
          dup3
          0x0d
          signextend
          add
          0x0d
          signextend
          dup8
          mstore
            /* \"src/curve/constant-product/ConstantProductPair.sol\":12544:12618  Observation(logAccRawPrice, logAccClampedPrice, logAccLiq, aTimestampLast) */
          dup1
          0x20
          dup9
          add
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap12
            /* \"src/curve/constant-product/ConstantProductPair.sol\":11384:11390  _slot0 */
          0x06
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          signextend
          mul
            /* \"src/curve/constant-product/ConstantProductPair.sol\":11384:11390  _slot0 */
          0x06
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          signextend
          dup3
          0x70
          shr
            /* \"src/curve/constant-product/ConstantProductPair.sol\":11384:11390  _slot0 */
          0x06
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          signextend
          add
            /* \"src/curve/constant-product/ConstantProductPair.sol\":11384:11390  _slot0 */
          0x06
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          signextend
          dup12
          mstore
          0x40
            /* \"src/curve/constant-product/ConstantProductPair.sol\":12544:12618  Observation(logAccRawPrice, logAccClampedPrice, logAccLiq, aTimestampLast) */
          dup8
          add
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap10
            /* \"src/curve/constant-product/ConstantProductPair.sol\":11384:11390  _slot0 */
          0x06
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          signextend
          mul
            /* \"src/curve/constant-product/ConstantProductPair.sol\":11384:11390  _slot0 */
          0x06
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          signextend
          swap1
          0xa8
          shr
            /* \"src/curve/constant-product/ConstantProductPair.sol\":11384:11390  _slot0 */
          0x06
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          signextend
          add
            /* \"src/curve/constant-product/ConstantProductPair.sol\":11384:11390  _slot0 */
          0x06
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          signextend
          dup9
          mstore
            /* \"src/curve/constant-product/ConstantProductPair.sol\":12544:12618  Observation(logAccRawPrice, logAccClampedPrice, logAccLiq, aTimestampLast) */
          0x60
          dup6
          add
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap6
          and
          dup6
          mstore
          0xf0
          shr
            /* \"src/curve/constant-product/ConstantProductPair.sol\":12514:12541  _observations[_slot0.index] */
          tag_36
          jump\t// in
        tag_719:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          tag_732
          jumpi
          swap2
          mload
          swap6
          mload
          swap5
          mload
          swap3
          mload
          0xffffffff00000000000000000000000000000000000000000000000000000000
          0xe0
          swap2
          swap1
          swap2
          shl
          and
          0xa8
          swap4
          swap1
          swap4
          shl
          0xffffffffffffff000000000000000000000000000000000000000000
          and
          0xffffffffffffffffffffffffffff
          swap1
          swap7
          and
          0x70
          swap6
          swap1
          swap6
          shl
          0xffffffffffffff0000000000000000000000000000
          and
          swap5
          swap1
          swap5
          or
          swap5
          swap1
          swap5
          or
          or
          swap1
          swap3
          sstore
          swap1
          dup1
          0xffffffffffffffffffffffffff
          dup1
            /* \"src/ReservoirPair.sol\":10718:10762  Sync(uint104(aBalance0), uint104(aBalance1)) */
          0xff388a12130349259b5ae24af90448f511c2340be808f2c371230fc2da175c44
            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */
          jump(tag_712)
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
        tag_732:
          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)
          mstore(0x04, 0x00)
          revert(0x00, 0x24)
            /* \"src/libraries/ConstantProductOracleMath.sol\":2213:2275  rawResult >= type(int112).min && rawResult <= type(int112).max */
        tag_728:
          pop
            /* \"src/libraries/ConstantProductOracleMath.sol\":2259:2275  type(int112).max */
          0x7fffffffffffffffffffffffffff
            /* \"src/libraries/ConstantProductOracleMath.sol\":2246:2275  rawResult <= type(int112).max */
          dup11
          sgt
          iszero
            /* \"src/libraries/ConstantProductOracleMath.sol\":2213:2275  rawResult >= type(int112).min && rawResult <= type(int112).max */
          jump(tag_729)
            /* \"src/libraries/ConstantProductOracleMath.sol\":1674:1736  rawResult >= type(int112).min && rawResult <= type(int112).max */
        tag_725:
          pop
            /* \"src/libraries/ConstantProductOracleMath.sol\":1707:1736  rawResult <= type(int112).max */
          mload(0x80)
            /* \"src/libraries/ConstantProductOracleMath.sol\":1720:1736  type(int112).max */
          0x7fffffffffffffffffffffffffff
          slt
            /* \"src/libraries/ConstantProductOracleMath.sol\":1707:1736  rawResult <= type(int112).max */
          iszero
            /* \"src/libraries/ConstantProductOracleMath.sol\":1674:1736  rawResult >= type(int112).min && rawResult <= type(int112).max */
          jump(tag_726)
            /* \"src/ReservoirPair.sol\":10407:10459  lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0 */
        tag_709:
            /* \"src/ReservoirPair.sol\":10445:10459  aReserve1 != 0 */
          pop
          dup4
          iszero
          iszero
            /* \"src/ReservoirPair.sol\":10407:10459  lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0 */
          jump(tag_710)
            /* \"src/ReservoirPair.sol\":10407:10441  lTimeElapsed > 0 && aReserve0 != 0 */
        tag_707:
            /* \"src/ReservoirPair.sol\":10427:10441  aReserve0 != 0 */
          pop
          dup3
          iszero
          iszero
            /* \"src/ReservoirPair.sol\":10407:10441  lTimeElapsed > 0 && aReserve0 != 0 */
          jump(tag_708)
            /* \"src/ReservoirPair.sol\":10106:10170  aReserve0 <= type(uint104).max && aReserve1 <= type(uint104).max */
        tag_704:
          pop
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0xffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":10140:10170  aReserve1 <= type(uint104).max */
          dup4
          gt
          iszero
            /* \"src/ReservoirPair.sol\":10106:10170  aReserve0 <= type(uint104).max && aReserve1 <= type(uint104).max */
          jump(tag_705)
            /* \"src/ReservoirPair.sol\":10007:10071  aBalance0 <= type(uint104).max && aBalance1 <= type(uint104).max */
        tag_701:
          pop
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0xffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":10041:10071  aBalance1 <= type(uint104).max */
          dup5
          gt
          iszero
            /* \"src/ReservoirPair.sol\":10007:10071  aBalance0 <= type(uint104).max && aBalance1 <= type(uint104).max */
          jump(tag_702)
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
        tag_23:
          swap2
          swap1
          dup3
          add
          dup1
          swap3
          gt
          tag_611
          jumpi
          jump\t// out
            /* \"src/ReservoirPair.sol\":12869:13005  function _totalToken0() internal view returns (uint256) {... */
        tag_24:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mload(0x40)
          0x70a0823100000000000000000000000000000000000000000000000000000000
            /* \"src/ReservoirPair.sol\":12942:12973  token0.balanceOf(address(this)) */
          dup2
          mstore
            /* \"src/ReservoirPair.sol\":12967:12971  this */
          address
            /* \"src/ReservoirPair.sol\":12942:12973  token0.balanceOf(address(this)) */
          0x04
          dup3
          add
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mstore
            /* \"src/ReservoirPair.sol\":12942:12973  token0.balanceOf(address(this)) */
          0x20
            /* \"src/ReservoirPair.sol\":12942:12948  token0 */
          dup2
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0x24
            /* \"src/ReservoirPair.sol\":12942:12948  token0 */
          dup2
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":12942:12948  token0 */
          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":12942:12973  token0.balanceOf(address(this)) */
          gas
          staticcall
          dup1
          iszero
          tag_689
          jumpi
          0x00
          swap1
          tag_738
          jumpi
            /* \"src/ReservoirPair.sol\":12869:13005  function _totalToken0() internal view returns (uint256) {... */
        tag_739:
            /* \"src/ReservoirPair.sol\":12942:12998  token0.balanceOf(address(this)) + uint256(token0Managed) */
          tag_740
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap2
          pop
          0xffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":12984:12997  token0Managed */
          0x0c
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
          and
            /* \"src/ReservoirPair.sol\":12942:12998  token0.balanceOf(address(this)) + uint256(token0Managed) */
          swap1
          tag_23
          jump\t// in
        tag_740:
            /* \"src/ReservoirPair.sol\":12869:13005  function _totalToken0() internal view returns (uint256) {... */
          swap1
          jump\t// out
            /* \"src/ReservoirPair.sol\":12942:12973  token0.balanceOf(address(this)) */
        tag_738:
          0x20
          dup3
          returndatasize
          dup3
          gt
          tag_741
          jumpi
        tag_742:
          dup2
          tag_743
          0x20
          swap4
          dup4
          tag_5
          jump\t// in
        tag_743:
          dup2
          add
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sub
          slt
          tag_155
          jumpi
          pop
            /* \"src/ReservoirPair.sol\":12942:12998  token0.balanceOf(address(this)) + uint256(token0Managed) */
          tag_740
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap1
          mload
            /* \"src/ReservoirPair.sol\":12942:12973  token0.balanceOf(address(this)) */
          jump(tag_739)
        tag_741:
          returndatasize
          swap2
          pop
          jump(tag_742)
            /* \"src/ReservoirPair.sol\":13011:13147  function _totalToken1() internal view returns (uint256) {... */
        tag_25:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mload(0x40)
          0x70a0823100000000000000000000000000000000000000000000000000000000
            /* \"src/ReservoirPair.sol\":13084:13115  token1.balanceOf(address(this)) */
          dup2
          mstore
            /* \"src/ReservoirPair.sol\":13109:13113  this */
          address
            /* \"src/ReservoirPair.sol\":13084:13115  token1.balanceOf(address(this)) */
          0x04
          dup3
          add
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mstore
            /* \"src/ReservoirPair.sol\":13084:13115  token1.balanceOf(address(this)) */
          0x20
            /* \"src/ReservoirPair.sol\":13084:13090  token1 */
          dup2
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0x24
            /* \"src/ReservoirPair.sol\":13084:13090  token1 */
          dup2
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":13084:13090  token1 */
          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":13084:13115  token1.balanceOf(address(this)) */
          gas
          staticcall
          dup1
          iszero
          tag_689
          jumpi
          0x00
          swap1
          tag_748
          jumpi
            /* \"src/ReservoirPair.sol\":13011:13147  function _totalToken1() internal view returns (uint256) {... */
        tag_749:
            /* \"src/ReservoirPair.sol\":13084:13140  token1.balanceOf(address(this)) + uint256(token1Managed) */
          tag_740
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap2
          pop
          0xffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":13126:13139  token1Managed */
          0x0c
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
          0x68
          shr
          and
            /* \"src/ReservoirPair.sol\":13084:13140  token1.balanceOf(address(this)) + uint256(token1Managed) */
          swap1
          tag_23
          jump\t// in
            /* \"src/ReservoirPair.sol\":13084:13115  token1.balanceOf(address(this)) */
        tag_748:
          0x20
          dup3
          returndatasize
          dup3
          gt
          tag_751
          jumpi
        tag_752:
          dup2
          tag_753
          0x20
          swap4
          dup4
          tag_5
          jump\t// in
        tag_753:
          dup2
          add
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sub
          slt
          tag_155
          jumpi
          pop
            /* \"src/ReservoirPair.sol\":13084:13140  token1.balanceOf(address(this)) + uint256(token1Managed) */
          tag_740
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap1
          mload
            /* \"src/ReservoirPair.sol\":13084:13115  token1.balanceOf(address(this)) */
          jump(tag_749)
        tag_751:
          returndatasize
          swap2
          pop
          jump(tag_752)
            /* \"src/ReservoirPair.sol\":13916:14584  function _syncManaged(uint256 aReserve0, uint256 aReserve1)... */
        tag_27:
          swap1
          swap2
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffff
          swap2
          dup3
            /* \"src/ReservoirPair.sol\":14074:14086  assetManager */
          0x0b
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
          and
            /* \"src/ReservoirPair.sol\":14066:14101  address(assetManager) == address(0) */
          swap3
          dup4
          iszero
            /* \"src/ReservoirPair.sol\":14062:14157  if (address(assetManager) == address(0)) {... */
          tag_756
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mload(0x40)
          0xd4fac45d00000000000000000000000000000000000000000000000000000000
            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */
          dup1
          dup3
          mstore
            /* \"src/ReservoirPair.sol\":14216:14220  this */
          address
            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */
          0x04
          dup4
          add
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mstore
            /* \"src/ReservoirPair.sol\":14222:14228  token0 */
          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffff
          dup2
          and
          0x24
          dup5
          add
          mstore
          swap2
          swap6
            /* \"src/ReservoirPair.sol\":14222:14228  token0 */
          swap2
          swap4
            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */
          0x20
          swap4
            /* \"src/ReservoirPair.sol\":14222:14228  token0 */
          swap1
          swap3
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap1
            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */
          dup5
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup9
          dup1
          0x44
          dup2
          add
            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */
          sub
          dup2
          0x00
          dup1
          swap7
          gas
          call
          swap8
          dup9
          iszero
          tag_759
          jumpi
          dup3
          swap9
          tag_761
          jumpi
            /* \"src/ReservoirPair.sol\":13916:14584  function _syncManaged(uint256 aReserve0, uint256 aReserve1)... */
        tag_762:
          pop
            /* \"src/ReservoirPair.sol\":14074:14086  assetManager */
          0x0b
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
          mload(0x40)
            /* \"src/ReservoirPair.sol\":14264:14301  assetManager.getBalance(this, token1) */
          swap4
          dup5
          mstore
            /* \"src/ReservoirPair.sol\":14216:14220  this */
          address
            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */
          0x04
            /* \"src/ReservoirPair.sol\":14264:14301  assetManager.getBalance(this, token1) */
          dup6
          add
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mstore
            /* \"src/ReservoirPair.sol\":14294:14300  token1 */
          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffff
          dup2
          and
          0x24
          dup7
          add
          mstore
            /* \"src/ReservoirPair.sol\":14294:14300  token1 */
          swap4
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap3
          swap2
            /* \"src/ReservoirPair.sol\":14294:14300  token1 */
          dup7
          swap2
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup5
          swap2
          0x44
          swap2
          dup4
          swap2
          dup7
          swap2
          and
            /* \"src/ReservoirPair.sol\":14264:14301  assetManager.getBalance(this, token1) */
          gas
          call
          swap5
          dup6
          iszero
          tag_764
          jumpi
          dup2
          swap6
          tag_766
          jumpi
            /* \"src/ReservoirPair.sol\":13916:14584  function _syncManaged(uint256 aReserve0, uint256 aReserve1)... */
        tag_767:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          pop
          pop
          pop
            /* \"src/ReservoirPair.sol\":14551:14577  lToken1Managed.toUint104() */
          tag_768
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0xffffffffffff0000000000000000000000000000000000000000000000000000
          swap3
            /* \"src/ReservoirPair.sol\":14499:14525  lToken0Managed.toUint104() */
          tag_769
            /* \"src/ReservoirPair.sol\":14409:14472  _handleReport(token1, aReserve1, token1Managed, lToken1Managed) */
          tag_770
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup7
          0xffffffffffffffffffffffffff00000000000000000000000000
          swap6
            /* \"src/ReservoirPair.sol\":14324:14387  _handleReport(token0, aReserve0, token0Managed, lToken0Managed) */
          tag_771
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup13
            /* \"src/ReservoirPair.sol\":14357:14370  token0Managed */
          0x0c
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
          swap12
          dup13
          swap8
          0xffffffffffffffffffffffffff
          dup1
          swap10
          and
            /* \"src/ReservoirPair.sol\":14324:14387  _handleReport(token0, aReserve0, token0Managed, lToken0Managed) */
          swap2
          tag_30
          jump\t// in
        tag_771:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap13
          dup6
          dup12
          0x68
          shr
          and
            /* \"src/ReservoirPair.sol\":14409:14472  _handleReport(token1, aReserve1, token1Managed, lToken1Managed) */
          swap2
          tag_30
          jump\t// in
        tag_770:
            /* \"src/ReservoirPair.sol\":14499:14525  lToken0Managed.toUint104() */
          swap9
          tag_28
          jump\t// in
        tag_769:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":14551:14577  lToken1Managed.toUint104() */
          swap4
          tag_28
          jump\t// in
        tag_768:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0x68
          shl
          and
          swap3
          and
          or
          or
            /* \"src/ReservoirPair.sol\":14357:14370  token0Managed */
          0x0c
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sstore
            /* \"src/ReservoirPair.sol\":13916:14584  function _syncManaged(uint256 aReserve0, uint256 aReserve1)... */
          jump\t// out
            /* \"src/ReservoirPair.sol\":14264:14301  assetManager.getBalance(this, token1) */
        tag_766:
          swap1
          swap2
          dup1
          swap4
          swap6
          pop
          dup2
          returndatasize
          dup4
          gt
          tag_772
          jumpi
        tag_773:
          tag_774
          dup2
          dup4
          tag_5
          jump\t// in
        tag_774:
          dup2
          add
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sub
          slt
          tag_155
          jumpi
          pop
          mload
          swap2
            /* \"src/ReservoirPair.sol\":14551:14577  lToken1Managed.toUint104() */
          tag_768
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup3
            /* \"src/ReservoirPair.sol\":14499:14525  lToken0Managed.toUint104() */
          tag_769
            /* \"src/ReservoirPair.sol\":14264:14301  assetManager.getBalance(this, token1) */
          jump(tag_767)
        tag_772:
          pop
          returndatasize
          jump(tag_773)
        tag_764:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          pop
          mload(0x40)
          swap1
          returndatasize
          swap1
          dup3
          returndatacopy
          returndatasize
          swap1
          revert
            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */
        tag_761:
          swap1
          swap8
          pop
          dup5
          dup2
          dup2
          returndatasize
          dup4
          gt
          tag_777
          jumpi
        tag_778:
          tag_779
          dup2
          dup4
          tag_5
          jump\t// in
        tag_779:
          dup2
          add
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sub
          slt
          tag_164
          jumpi
          mload
            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */
          swap7
          codesize
          jump(tag_762)
        tag_777:
          pop
          returndatasize
          jump(tag_778)
        tag_759:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mload(0x40)
          returndatasize
          dup5
          dup3
          returndatacopy
          returndatasize
          swap1
          revert
            /* \"src/ReservoirPair.sol\":14062:14157  if (address(assetManager) == address(0)) {... */
        tag_756:
          pop
            /* \"src/ReservoirPair.sol\":14117:14146  return (aReserve0, aReserve1) */
          swap3
          swap2
          pop
          jump\t// out
            /* \"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":10566:10758  function toUint104(uint256 value) internal pure returns (uint104) {... */
        tag_28:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0xffffffffffffffffffffffffff
            /* \"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":10650:10676  value <= type(uint104).max */
          swap1
          dup2
          dup2
          gt
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          tag_782
          jumpi
          and
            /* \"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":10566:10758  function toUint104(uint256 value) internal pure returns (uint104) {... */
          swap1
          jump\t// out
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
        tag_782:
          0x84
          mload(0x40)
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
          0x20
          0x04
          dup3
          add
          mstore
          0x27
          0x24
          dup3
          add
          mstore
          0x53616665436173743a2076616c756520646f65736e27742066697420696e2031
          0x44
          dup3
          add
          mstore
          0x3034206269747300000000000000000000000000000000000000000000000000
          0x64
          dup3
          add
          mstore
          revert
            /* \"src/ReservoirPair.sol\":13153:13910  function _handleReport(ERC20 aToken, uint256 aReserve, uint256 aPrevBalance, uint256 aNewBalance)... */
        tag_30:
          swap2
          swap1
          swap3
            /* \"src/ReservoirPair.sol\":13327:13353  aNewBalance > aPrevBalance */
          dup2
          dup2
          gt
            /* \"src/ReservoirPair.sol\":13323:13904  if (aNewBalance > aPrevBalance) {... */
          0x00
            /* \"src/ReservoirPair.sol\":13327:13353  aNewBalance > aPrevBalance */
          eq
          tag_784
          jumpi
            /* \"src/ReservoirPair.sol\":13416:13442  aNewBalance - aPrevBalance */
          tag_786
            /* \"src/ReservoirPair.sol\":13526:13544  aReserve + lProfit */
          tag_740
            /* \"src/ReservoirPair.sol\":13416:13442  aNewBalance - aPrevBalance */
          swap5
          swap3
            /* \"src/ReservoirPair.sol\":13462:13493  ProfitReported(aToken, lProfit) */
          0xd85f20827037d49bc45762fefff2ddfe9a1a5412ad3dfc1cdca78d2e52f4ba23
            /* \"src/ReservoirPair.sol\":13416:13442  aNewBalance - aPrevBalance */
          swap3
          tag_10
          jump\t// in
        tag_786:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0x40
          dup1
          mload
          0xffffffffffffffffffffffffffffffffffffffff
          swap6
          swap1
          swap6
          and
          dup6
          mstore
          0x20
          dup6
          add
          dup3
          swap1
          mstore
          swap1
          swap4
            /* \"src/ReservoirPair.sol\":13462:13493  ProfitReported(aToken, lProfit) */
          log1
            /* \"src/ReservoirPair.sol\":13526:13544  aReserve + lProfit */
          tag_23
          jump\t// in
            /* \"src/ReservoirPair.sol\":13323:13904  if (aNewBalance > aPrevBalance) {... */
        tag_784:
            /* \"src/ReservoirPair.sol\":13565:13591  aNewBalance < aPrevBalance */
          swap1
          dup1
          dup3
          lt
          iszero
          tag_668
          jumpi
            /* \"src/ReservoirPair.sol\":13650:13676  aPrevBalance - aNewBalance */
          tag_792
            /* \"src/ReservoirPair.sol\":13756:13772  aReserve - lLoss */
          tag_740
            /* \"src/ReservoirPair.sol\":13650:13676  aPrevBalance - aNewBalance */
          swap5
          swap3
            /* \"src/ReservoirPair.sol\":13696:13723  LossReported(aToken, lLoss) */
          0x3ffa9beb41b46c88b16758ef6c236ebd4d07cdfd4d22471030eb6b2d662482d9
            /* \"src/ReservoirPair.sol\":13650:13676  aPrevBalance - aNewBalance */
          swap3
          tag_10
          jump\t// in
        tag_792:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0x40
          dup1
          mload
          0xffffffffffffffffffffffffffffffffffffffff
          swap6
          swap1
          swap6
          and
          dup6
          mstore
          0x20
          dup6
          add
          dup3
          swap1
          mstore
          swap1
          swap4
            /* \"src/ReservoirPair.sol\":13696:13723  LossReported(aToken, lLoss) */
          log1
            /* \"src/ReservoirPair.sol\":13756:13772  aReserve - lLoss */
          tag_10
          jump\t// in
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
        tag_31:
          0x8000000000000000000000000000000000000000000000000000000000000000
          dup2
          eq
          tag_611
          jumpi
          0x00
          sub
          swap1
          jump\t// out
        tag_32:
          0xffffffffffffffffffffffffff
          swap2
          dup3
          and
          swap1
          dup3
          and
          sub
          swap2
          swap1
          dup3
          gt
          tag_611
          jumpi
          jump\t// out
        tag_33:
          swap2
          swap1
          swap2
          0xffffffffffffffffffffffffff
          dup1
          dup1
          swap5
          and
          swap2
          and
          add
          swap2
          dup3
          gt
          tag_611
          jumpi
          jump\t// out
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1328:2944  function safeTransferFrom(... */
        tag_34:
          swap1
          0x00
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1532:2887  assembly {... */
          0x64
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1328:2944  function safeTransferFrom(... */
          swap3
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1532:2887  assembly {... */
          0x20
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1328:2944  function safeTransferFrom(... */
          swap6
          dup3
          swap6
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1532:2887  assembly {... */
          mload(0x40)
          swap5
          0x23b872dd00000000000000000000000000000000000000000000000000000000
          dup7
          mstore
          0x04
          dup7
          add
          mstore
          0x24
          dup6
          add
          mstore
          0x44
          dup5
          add
          mstore
          gas
          call
          or(and(eq(mload(0x00), 0x01), gt(returndatasize, 0x1f)), iszero(returndatasize))
          and
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          iszero
          tag_802
          jumpi
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1328:2944  function safeTransferFrom(... */
          jump\t// out
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
        tag_802:
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1532:2887  assembly {... */
          0x64
          0x40
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mload
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1532:2887  assembly {... */
          0x20
          0x04
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup3
          add
          mstore
          0x14
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1532:2887  assembly {... */
          0x24
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup3
          add
          mstore
          0x5452414e534645525f46524f4d5f4641494c4544000000000000000000000000
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1532:2887  assembly {... */
          0x44
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup3
          add
          mstore
          revert
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":2950:4449  function safeTransfer(... */
        tag_35:
          0x00
          swap2
          dup3
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":3128:4397  assembly {... */
          0x44
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":2950:4449  function safeTransfer(... */
          swap3
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":3128:4397  assembly {... */
          0x20
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":2950:4449  function safeTransfer(... */
          swap6
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":3128:4397  assembly {... */
          mload(0x40)
          swap4
          0xa9059cbb00000000000000000000000000000000000000000000000000000000
          dup6
          mstore
          0x04
          dup6
          add
          mstore
          0x24
          dup5
          add
          mstore
          gas
          call
          or(and(eq(mload(0x00), 0x01), gt(returndatasize, 0x1f)), iszero(returndatasize))
          and
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          iszero
          tag_804
          jumpi
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":2950:4449  function safeTransfer(... */
          jump\t// out
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
        tag_804:
          0x64
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":3128:4397  assembly {... */
          0x40
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mload
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":3128:4397  assembly {... */
          0x20
          0x04
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup3
          add
          mstore
          0x0f
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":3128:4397  assembly {... */
          0x24
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup3
          add
          mstore
          0x5452414e534645525f4641494c45440000000000000000000000000000000000
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":3128:4397  assembly {... */
          0x44
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup3
          add
          mstore
          revert
        tag_36:
          0x010000
          dup2
          lt
          iszero
          tag_806
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":11370:11383  _observations */
          0x0d
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          add
          swap1
          0x00
          swap1
          jump\t// out
        tag_806:
          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)
          mstore(0x04, 0x32)
          revert(0x00, 0x24)
        tag_37:
          dup2
          dup2
          mul
          swap3
          swap2
          dup2
          iszero
          swap2
          dup5
          div
          eq
          or
          iszero
          tag_611
          jumpi
          jump\t// out
        tag_38:
          dup2
          iszero
          tag_810
          jumpi
          div
          swap1
          jump\t// out
        tag_810:
          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)
          mstore(0x04, 0x12)
          revert(0x00, 0x24)
            /* \"lib/solmate/src/tokens/ERC20.sol\":6150:6475  function _mint(address to, uint256 amount) internal virtual {... */
        tag_39:
            /* \"lib/solmate/src/tokens/ERC20.sol\":6436:6468  Transfer(address(0), to, amount) */
          0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0x20
          0xffffffffffffffffffffffffffffffffffffffff
          0x00
            /* \"lib/solmate/src/tokens/ERC20.sol\":6150:6475  function _mint(address to, uint256 amount) internal virtual {... */
          swap4
            /* \"lib/solmate/src/tokens/ERC20.sol\":6220:6241  totalSupply += amount */
          tag_812
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup7
            /* \"lib/solmate/src/tokens/ERC20.sol\":6220:6241  totalSupply += amount */
          0x02
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
            /* \"lib/solmate/src/tokens/ERC20.sol\":6220:6241  totalSupply += amount */
          tag_23
          jump\t// in
        tag_812:
          0x02
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sstore
          and
          swap4
          dup5
          dup5
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":6387:6396  balanceOf */
          0x03
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup3
          mstore
          0x40
          dup5
          keccak256
          dup2
          dup2
          sload
          add
          swap1
          sstore
          mload(0x40)
          swap1
          dup2
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":6436:6468  Transfer(address(0), to, amount) */
          log3
            /* \"lib/solmate/src/tokens/ERC20.sol\":6150:6475  function _mint(address to, uint256 amount) internal virtual {... */
          jump\t// out
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5746:9142  function sqrt(uint256 x) internal pure returns (uint256 z) {... */
        tag_40:
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */
          0xb5
          dup2
          0x010000000000000000000000000000000000
          dup2
          lt
          iszero
          tag_813
          jumpi
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5746:9142  function sqrt(uint256 x) internal pure returns (uint256 z) {... */
        tag_814:
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */
          dup1
          0x01000000000000000000
          0x010000
          swap3
          lt
          iszero
          tag_815
          jumpi
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5746:9142  function sqrt(uint256 x) internal pure returns (uint256 z) {... */
        tag_816:
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */
          0x010000000000
          dup2
          lt
          iszero
          tag_817
          jumpi
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5746:9142  function sqrt(uint256 x) internal pure returns (uint256 z) {... */
        tag_818:
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */
          0x01000000
          dup2
          lt
          iszero
          tag_819
          jumpi
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5746:9142  function sqrt(uint256 x) internal pure returns (uint256 z) {... */
        tag_820:
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */
          add
          mul
          0x12
          shr
          0x01
          swap1
          dup1
          dup4
          div
          add
          dup2
          shr
          dup1
          dup4
          div
          add
          dup2
          shr
          dup1
          dup4
          div
          add
          dup2
          shr
          dup1
          dup4
          div
          add
          dup2
          shr
          dup1
          dup4
          div
          add
          dup2
          shr
          dup1
          dup4
          div
          add
          dup2
          shr
          dup1
          dup4
          div
          add
          swap1
          shr
          dup1
          dup1
          swap3
          div
          lt
          swap1
          sub
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5746:9142  function sqrt(uint256 x) internal pure returns (uint256 z) {... */
          swap1
          jump\t// out
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */
        tag_819:
          0x10
          shr
          swap2
          0x08
          shl
          swap2
          jump(tag_820)
        tag_817:
          0x20
          shr
          swap2
          0x10
          shl
          swap2
          jump(tag_818)
        tag_815:
          0x40
          shr
          swap2
          0x20
          shl
          swap2
          jump(tag_816)
        tag_813:
          pop
          0xb50000000000000000
          swap1
          pop
          0x80
          dup3
          swap1
          shr
          jump(tag_814)
            /* \"src/ReservoirPair.sol\":14590:14759  function _managerCallback() internal {... */
        tag_41:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":14649:14661  assetManager */
          0x0b
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
          and
            /* \"src/ReservoirPair.sol\":14641:14676  address(assetManager) == address(0) */
          dup1
          iszero
            /* \"src/ReservoirPair.sol\":14637:14709  if (address(assetManager) == address(0)) {... */
          tag_821
          jumpi
            /* \"src/ReservoirPair.sol\":14718:14752  assetManager.afterLiquidityEvent() */
          dup1
          extcodesize
          iszero
          tag_607
          jumpi
          0x00
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup1
          swap2
            /* \"src/ReservoirPair.sol\":14718:14752  assetManager.afterLiquidityEvent() */
          0x04
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mload(0x40)
            /* \"src/ReservoirPair.sol\":14718:14752  assetManager.afterLiquidityEvent() */
          dup1
          swap5
          dup2
          swap4
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0x016312bd00000000000000000000000000000000000000000000000000000000
            /* \"src/ReservoirPair.sol\":14718:14752  assetManager.afterLiquidityEvent() */
          dup4
          mstore
          gas
          call
          dup1
          iszero
          tag_689
          jumpi
          tag_3
          jumpi
            /* \"src/ReservoirPair.sol\":14590:14759  function _managerCallback() internal {... */
          pop
          jump\t// out
            /* \"src/ReservoirPair.sol\":14637:14709  if (address(assetManager) == address(0)) {... */
        tag_821:
            /* \"src/ReservoirPair.sol\":14692:14699  return; */
          pop
          jump\t// out
            /* \"src/curve/constant-product/ConstantProductPair.sol\":4888:5656  function _mintFee(uint256 aReserve0, uint256 aReserve1) private returns (bool rFeeOn) {... */
        tag_42:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":4993:5004  platformFee */
          0x09
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
            /* \"src/curve/constant-product/ConstantProductPair.sol\":4993:5008  platformFee > 0 */
          iszero
          dup1
          iszero
          swap4
            /* \"src/curve/constant-product/ConstantProductPair.sol\":4888:5656  function _mintFee(uint256 aReserve0, uint256 aReserve1) private returns (bool rFeeOn) {... */
          swap3
          swap1
            /* \"src/curve/constant-product/ConstantProductPair.sol\":5019:5650  if (rFeeOn) {... */
          tag_831
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":5065:5094  FixedPointMathLib.sqrt(kLast) */
          tag_833
            /* \"src/curve/constant-product/ConstantProductPair.sol\":5088:5093  kLast */
          0x010010
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
            /* \"src/curve/constant-product/ConstantProductPair.sol\":5065:5094  FixedPointMathLib.sqrt(kLast) */
          tag_40
          jump\t// in
        tag_833:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":5128:5142  lSqrtOldK != 0 */
          swap2
          dup3
            /* \"src/curve/constant-product/ConstantProductPair.sol\":5124:5584  if (lSqrtOldK != 0) {... */
          tag_834
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":5019:5650  if (rFeeOn) {... */
          pop
          pop
          pop
            /* \"src/curve/constant-product/ConstantProductPair.sol\":4888:5656  function _mintFee(uint256 aReserve0, uint256 aReserve1) private returns (bool rFeeOn) {... */
          jump\t// out
            /* \"src/curve/constant-product/ConstantProductPair.sol\":5124:5584  if (lSqrtOldK != 0) {... */
        tag_834:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":5182:5227  FixedPointMathLib.sqrt(aReserve0 * aReserve1) */
          tag_837
            /* \"src/curve/constant-product/ConstantProductPair.sol\":5205:5226  aReserve0 * aReserve1 */
          swap2
          tag_479
          swap2
          tag_37
          jump\t// in
            /* \"src/curve/constant-product/ConstantProductPair.sol\":5182:5227  FixedPointMathLib.sqrt(aReserve0 * aReserve1) */
        tag_837:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":5250:5271  lSqrtNewK > lSqrtOldK */
          dup2
          dup2
          gt
            /* \"src/curve/constant-product/ConstantProductPair.sol\":5246:5570  if (lSqrtNewK > lSqrtOldK) {... */
          tag_839
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":5019:5650  if (rFeeOn) {... */
          pop
          pop
            /* \"src/curve/constant-product/ConstantProductPair.sol\":4888:5656  function _mintFee(uint256 aReserve0, uint256 aReserve1) private returns (bool rFeeOn) {... */
          jump\t// out
            /* \"src/curve/constant-product/ConstantProductPair.sol\":5246:5570  if (lSqrtNewK > lSqrtOldK) {... */
        tag_839:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":4993:5004  platformFee */
          0x09
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
          swap2
            /* \"src/curve/constant-product/ConstantProductPair.sol\":4402:4434  aSqrtNewK * ACCURACY / aSqrtOldK */
          tag_841
            /* \"src/curve/constant-product/ConstantProductPair.sol\":5364:5375  totalSupply */
          0x02
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
            /* \"src/curve/constant-product/ConstantProductPair.sol\":1117:1121  1e38 */
          swap2
          0x4b3b4ca85a86c47a098a224000000000
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup1
          swap5
          mul
            /* \"src/curve/constant-product/ConstantProductPair.sol\":4402:4434  aSqrtNewK * ACCURACY / aSqrtOldK */
          tag_38
          jump\t// in
        tag_841:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup1
          iszero
          tag_810
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":4739:4820  lScaledTargetOwnership * aCirculatingShares / (ACCURACY - lScaledTargetOwnership) */
          tag_844
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap4
            /* \"src/ReservoirPair.sol\":2723:2732  1_000_000 */
          0x0f4240
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap2
            /* \"src/curve/constant-product/ConstantProductPair.sol\":1003:1007  1e76 */
          0x161bcca7119915b50764b4abe86529797775a5f1719510000000000000000000
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          div
          dup5
          sub
          mul
          div
          dup1
          swap3
          sub
          swap2
          mul
            /* \"src/curve/constant-product/ConstantProductPair.sol\":4739:4820  lScaledTargetOwnership * aCirculatingShares / (ACCURACY - lScaledTargetOwnership) */
          tag_38
          jump\t// in
        tag_844:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mload(0x40)
          tag_845
          dup2
          tag_4
          jump\t// in
        tag_845:
          0x15
          dup2
          mstore
          0x5368617265643a3a706c6174666f726d466565546f0000000000000000000000
          0x20
          dup3
          add
          mstore
            /* \"src/curve/constant-product/ConstantProductPair.sol\":5423:5457  factory.read(PLATFORM_FEE_TO_NAME) */
          tag_846
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/curve/constant-product/ConstantProductPair.sol\":5423:5430  factory */
          swap2
          dup3
          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          and
            /* \"src/curve/constant-product/ConstantProductPair.sol\":5423:5457  factory.read(PLATFORM_FEE_TO_NAME) */
          tag_49
          jump\t// in
        tag_846:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          and
            /* \"src/curve/constant-product/ConstantProductPair.sol\":5495:5513  lSharesToIssue > 0 */
          swap1
          dup1
            /* \"src/curve/constant-product/ConstantProductPair.sol\":5491:5551  if (lSharesToIssue > 0) _mint(platformFeeTo, lSharesToIssue) */
          iszero
            /* \"src/curve/constant-product/ConstantProductPair.sol\":5246:5570  if (lSqrtNewK > lSqrtOldK) {... */
          tag_636
            /* \"src/curve/constant-product/ConstantProductPair.sol\":5491:5551  if (lSharesToIssue > 0) _mint(platformFeeTo, lSharesToIssue) */
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":5536:5550  lSharesToIssue */
          tag_849
          swap2
          tag_39
          jump\t// in
        tag_849:
            /* \"src/ReservoirPair.sol\":7478:7485  return; */
          jump\t// out
            /* \"src/curve/constant-product/ConstantProductPair.sol\":5019:5650  if (rFeeOn) {... */
        tag_831:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":5604:5609  kLast */
          pop
          pop
          0x010010
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup1
          sload
            /* \"src/curve/constant-product/ConstantProductPair.sol\":5600:5650  if (kLast != 0) {... */
          tag_850
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":5019:5650  if (rFeeOn) {... */
          pop
            /* \"src/curve/constant-product/ConstantProductPair.sol\":4888:5656  function _mintFee(uint256 aReserve0, uint256 aReserve1) private returns (bool rFeeOn) {... */
          jump\t// out
            /* \"src/curve/constant-product/ConstantProductPair.sol\":5600:5650  if (kLast != 0) {... */
        tag_850:
          0x00
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap1
          sstore
            /* \"src/ReservoirPair.sol\":14692:14699  return; */
          jump\t// out
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
        tag_43:
          iszero
          tag_852
          jumpi
          jump\t// out
        tag_852:
          0x64
          mload(0x40)
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
          0x20
          0x04
          dup3
          add
          mstore
          0x12
          0x24
          dup3
          add
          mstore
          0x43503a204e4f545f454e4f5547485f4c49510000000000000000000000000000
          0x44
          dup3
          add
          mstore
          revert
        tag_44:
          iszero
          tag_854
          jumpi
          jump\t// out
        tag_854:
          0x64
          mload(0x40)
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
          0x20
          0x04
          dup3
          add
          mstore
          0x1a
          0x24
          dup3
          add
          mstore
          0x43503a20494e53554646494349454e545f4c4951554944495459000000000000
          0x44
          dup3
          add
          mstore
          revert
            /* \"src/curve/constant-product/ConstantProductPair.sol\":1498:2085  function _getAmountOut(uint256 aAmountIn, uint256 aReserveIn, uint256 aReserveOut, uint256 aSwapFee)... */
        tag_45:
          swap3
          swap2
          swap3
            /* \"src/curve/constant-product/ConstantProductPair.sol\":1688:1701  aAmountIn > 0 */
          dup1
          iszero
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          tag_856
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":1753:1767  aReserveIn > 0 */
          dup2
          iszero
          swap1
          dup2
          iszero
            /* \"src/curve/constant-product/ConstantProductPair.sol\":1753:1786  aReserveIn > 0 && aReserveOut > 0 */
          dup1
          tag_858
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":1498:2085  function _getAmountOut(uint256 aAmountIn, uint256 aReserveIn, uint256 aReserveOut, uint256 aSwapFee)... */
        tag_859:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":1745:1817  require(aReserveIn > 0 && aReserveOut > 0, \"CP: INSUFFICIENT_LIQUIDITY\") */
          tag_860
          swap1
          tag_44
          jump\t// in
        tag_860:
            /* \"src/ReservoirPair.sol\":2723:2732  1_000_000 */
          0x0f4240
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap4
          dup5
          sub
          swap1
          dup5
          dup3
          gt
          tag_611
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":1923:1953  lAmountInWithFee * aReserveOut */
          tag_863
            /* \"src/curve/constant-product/ConstantProductPair.sol\":1855:1892  aAmountIn * (FEE_ACCURACY - aSwapFee) */
          swap2
          tag_864
          swap2
          tag_37
          jump\t// in
        tag_864:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":1923:1953  lAmountInWithFee * aReserveOut */
          swap5
          dup6
          tag_37
          jump\t// in
        tag_863:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap3
          dup1
          dup4
          mul
          swap3
          dup4
          div
          eq
          or
          iszero
          tag_611
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":2053:2078  lNumerator / lDenominator */
          tag_740
            /* \"src/curve/constant-product/ConstantProductPair.sol\":1986:2030  aReserveIn * FEE_ACCURACY + lAmountInWithFee */
          swap3
          tag_868
          swap2
          tag_23
          jump\t// in
        tag_868:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":2053:2078  lNumerator / lDenominator */
          swap1
          tag_38
          jump\t// in
            /* \"src/curve/constant-product/ConstantProductPair.sol\":1753:1786  aReserveIn > 0 && aReserveOut > 0 */
        tag_858:
          pop
            /* \"src/curve/constant-product/ConstantProductPair.sol\":1771:1786  aReserveOut > 0 */
          dup5
          iszero
          iszero
            /* \"src/curve/constant-product/ConstantProductPair.sol\":1753:1786  aReserveIn > 0 && aReserveOut > 0 */
          jump(tag_859)
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
        tag_856:
          0x64
          mload(0x40)
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
          0x20
          0x04
          dup3
          add
          mstore
          0x1d
          0x24
          dup3
          add
          mstore
          0x43503a20494e53554646494349454e545f494e5055545f414d4f554e54000000
          0x44
          dup3
          add
          mstore
          revert
            /* \"src/curve/constant-product/ConstantProductPair.sol\":2133:2668  function _getAmountIn(uint256 aAmountOut, uint256 aReserveIn, uint256 aReserveOut, uint256 aSwapFee)... */
        tag_46:
          swap3
          swap1
            /* \"src/curve/constant-product/ConstantProductPair.sol\":2322:2336  aAmountOut > 0 */
          dup4
          iszero
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          tag_869
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":2389:2403  aReserveIn > 0 */
          dup4
          dup2
            /* \"src/curve/constant-product/ConstantProductPair.sol\":2485:2508  aReserveIn * aAmountOut */
          tag_871
            /* \"src/curve/constant-product/ConstantProductPair.sol\":2389:2403  aReserveIn > 0 */
          swap3
          iszero
          iszero
            /* \"src/curve/constant-product/ConstantProductPair.sol\":2389:2422  aReserveIn > 0 && aReserveOut > 0 */
          dup1
          tag_872
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":2133:2668  function _getAmountIn(uint256 aAmountOut, uint256 aReserveIn, uint256 aReserveOut, uint256 aSwapFee)... */
        tag_873:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":2381:2453  require(aReserveIn > 0 && aReserveOut > 0, \"CP: INSUFFICIENT_LIQUIDITY\") */
          tag_874
          swap1
          tag_44
          jump\t// in
        tag_874:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":2485:2508  aReserveIn * aAmountOut */
          tag_37
          jump\t// in
        tag_871:
            /* \"src/ReservoirPair.sol\":2723:2732  1_000_000 */
          swap2
          0x0f4240
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap4
          dup5
          dup5
          mul
          swap4
          dup1
          dup6
          div
          dup7
          eq
          swap1
          iszero
          or
          iszero
          tag_611
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":2557:2581  aReserveOut - aAmountOut */
          tag_877
          swap2
          tag_10
          jump\t// in
        tag_877:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap1
          dup4
          sub
          swap3
          dup4
          gt
          tag_611
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":2632:2657  lNumerator / lDenominator */
          tag_880
            /* \"src/curve/constant-product/ConstantProductPair.sol\":2556:2610  (aReserveOut - aAmountOut) * (FEE_ACCURACY - aSwapFee) */
          swap3
          tag_868
          swap2
          tag_37
          jump\t// in
            /* \"src/curve/constant-product/ConstantProductPair.sol\":2632:2657  lNumerator / lDenominator */
        tag_880:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":2660:2661  1 */
          0x01
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup2
          add
          dup1
          swap2
          gt
          tag_611
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":2133:2668  function _getAmountIn(uint256 aAmountOut, uint256 aReserveIn, uint256 aReserveOut, uint256 aSwapFee)... */
          swap1
          jump\t// out
            /* \"src/curve/constant-product/ConstantProductPair.sol\":2389:2422  aReserveIn > 0 && aReserveOut > 0 */
        tag_872:
          pop
            /* \"src/curve/constant-product/ConstantProductPair.sol\":2407:2422  aReserveOut > 0 */
          dup5
          iszero
          iszero
            /* \"src/curve/constant-product/ConstantProductPair.sol\":2389:2422  aReserveIn > 0 && aReserveOut > 0 */
          jump(tag_873)
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
        tag_869:
          0x64
          mload(0x40)
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
          0x20
          0x04
          dup3
          add
          mstore
          0x1e
          0x24
          dup3
          add
          mstore
          0x43503a20494e53554646494349454e545f4f55545055545f414d4f554e540000
          0x44
          dup3
          add
          mstore
          revert
        tag_47:
          iszero
          tag_884
          jumpi
          jump\t// out
        tag_884:
          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)
          mstore(0x04, 0x01)
          revert(0x00, 0x24)
            /* \"src/ReservoirPair.sol\":18000:19057  function _calcClampedPrice(uint256 aCurrRawPrice, uint256 aPrevClampedPrice, uint256 aTimeElapsed)... */
        tag_48:
            /* \"src/ReservoirPair.sol\":18215:18237  aPrevClampedPrice == 0 */
          dup2
          iszero
            /* \"src/ReservoirPair.sol\":18211:18337  if (aPrevClampedPrice == 0) {... */
          tag_886
          jumpi
            /* \"lib/forge-std/src/StdMath.sol\":607:612  a > b */
          dup2
          dup2
          gt
          swap3
            /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */
          dup4
          iszero
          tag_888
          jumpi
            /* \"lib/forge-std/src/StdMath.sol\":615:620  a - b */
          tag_890
          dup4
          dup4
          tag_10
          jump\t// in
        tag_890:
            /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */
          swap4
        tag_891:
            /* \"lib/forge-std/src/StdMath.sol\":1144:1148  1e18 */
          0x0de0b6b3a7640000
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap5
          dup6
          dup2
          mul
          swap1
          dup1
          dup3
          div
          dup8
          eq
          swap1
          iszero
          or
          iszero
          tag_611
          jumpi
            /* \"lib/forge-std/src/StdMath.sol\":1133:1152  absDelta * 1e18 / b */
          dup5
          tag_894
          swap2
          tag_38
          jump\t// in
        tag_894:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap1
            /* \"src/ReservoirPair.sol\":18408:18421  maxChangeRate */
          0x01000d
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sload
            /* \"src/ReservoirPair.sol\":18408:18436  maxChangeRate * aTimeElapsed */
          swap2
          tag_895
          dup5
          dup5
          tag_37
          jump\t// in
        tag_895:
          lt
          iszero
          tag_896
          jumpi
            /* \"src/ReservoirPair.sol\":18487:18520  aCurrRawPrice > aPrevClampedPrice */
          iszero
          tag_898
          jumpi
            /* \"src/ReservoirPair.sol\":18585:18613  maxChangeRate * aTimeElapsed */
          tag_900
          swap3
          pop
          tag_37
          jump\t// in
        tag_900:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup3
          add
          dup1
          dup4
          gt
          tag_611
          jumpi
            /* \"src/ReservoirPair.sol\":18556:18615  aPrevClampedPrice * (1e18 + (maxChangeRate * aTimeElapsed)) */
          tag_903
          swap2
          tag_37
          jump\t// in
        tag_903:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          div
            /* \"src/ReservoirPair.sol\":18483:18817  if (aCurrRawPrice > aPrevClampedPrice) {... */
          swap1
        tag_904:
            /* \"src/ReservoirPair.sol\":18856:18897  LogCompression.toLowResLog(rClampedPrice) */
          tag_905
          dup3
          tag_52
          jump\t// in
        tag_905:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0x0d
          signextend
            /* \"src/ReservoirPair.sol\":18347:19051  if (stdMath.percentDelta(aCurrRawPrice, aPrevClampedPrice) > maxChangeRate * aTimeElapsed) {... */
          swap1
            /* \"src/ReservoirPair.sol\":18000:19057  function _calcClampedPrice(uint256 aCurrRawPrice, uint256 aPrevClampedPrice, uint256 aTimeElapsed)... */
          jump\t// out
            /* \"src/ReservoirPair.sol\":18483:18817  if (aCurrRawPrice > aPrevClampedPrice) {... */
        tag_898:
            /* \"src/ReservoirPair.sol\":18661:18702  assert(aPrevClampedPrice > aCurrRawPrice) */
          tag_874
            /* \"src/ReservoirPair.sol\":18765:18793  maxChangeRate * aTimeElapsed */
          tag_908
            /* \"src/ReservoirPair.sol\":18668:18701  aPrevClampedPrice > aCurrRawPrice */
          swap4
          dup6
          gt
            /* \"src/ReservoirPair.sol\":18661:18702  assert(aPrevClampedPrice > aCurrRawPrice) */
          tag_47
          jump\t// in
            /* \"src/ReservoirPair.sol\":18765:18793  maxChangeRate * aTimeElapsed */
        tag_908:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup3
          sub
          dup3
          dup2
          gt
          tag_611
          jumpi
            /* \"src/ReservoirPair.sol\":18736:18795  aPrevClampedPrice * (1e18 - (maxChangeRate * aTimeElapsed)) */
          tag_911
          swap2
          tag_37
          jump\t// in
        tag_911:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          div
            /* \"src/ReservoirPair.sol\":18483:18817  if (aCurrRawPrice > aPrevClampedPrice) {... */
          swap1
          jump(tag_904)
            /* \"src/ReservoirPair.sol\":18347:19051  if (stdMath.percentDelta(aCurrRawPrice, aPrevClampedPrice) > maxChangeRate * aTimeElapsed) {... */
        tag_896:
            /* \"src/ReservoirPair.sol\":18929:18958  rClampedPrice = aCurrRawPrice */
          pop
          pop
          pop
          dup1
          swap4
          swap3
          pop
            /* \"src/ReservoirPair.sol\":18998:19039  LogCompression.toLowResLog(aCurrRawPrice) */
          tag_905
            /* \"src/ReservoirPair.sol\":18929:18958  rClampedPrice = aCurrRawPrice */
          swap2
          pop
            /* \"src/ReservoirPair.sol\":18998:19039  LogCompression.toLowResLog(aCurrRawPrice) */
          swap3
          tag_52
          jump\t// in
            /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */
        tag_888:
            /* \"lib/forge-std/src/StdMath.sol\":623:628  b - a */
          tag_913
          dup3
          dup5
          tag_10
          jump\t// in
        tag_913:
            /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */
          swap4
          jump(tag_891)
            /* \"src/ReservoirPair.sol\":18211:18337  if (aPrevClampedPrice == 0) {... */
        tag_886:
            /* \"src/ReservoirPair.sol\":18283:18324  LogCompression.toLowResLog(aCurrRawPrice) */
          dup1
          swap4
          swap3
          pop
          tag_905
          swap2
          pop
          tag_52
          jump\t// in
            /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */
        tag_49:
          swap1
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */
          swap2
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mload(0x40)
            /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */
          swap1
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0x24
            /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */
          0x20
          swap4
          dup4
          tag_915
          dup7
          dup3
          dup2
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          tag_916
            /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */
          dup2
          dup1
          swap11
          add
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap7
          dup8
          dup2
          mload
          swap4
          dup5
          swap3
          add
          tag_6
          jump\t// in
        tag_916:
          dup2
          add
            /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */
          sub
          dup1
          dup5
          mstore
          add
          dup3
          tag_5
          jump\t// in
        tag_915:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mload
            /* \"src/libraries/FactoryStore.sol\":476:509  keccak256(abi.encodePacked(aKey)) */
          swap1
          keccak256
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mload(0x40)
            /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */
          swap6
          dup7
          swap4
          dup5
          swap3
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0x8eaa6ac000000000000000000000000000000000000000000000000000000000
            /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */
          dup5
          mstore
          0x04
          dup5
          add
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mstore
          and
            /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */
          gas
          staticcall
          swap1
          dup2
          iszero
          tag_689
          jumpi
          0x00
          swap2
          tag_919
          jumpi
            /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */
        tag_920:
            /* \"src/libraries/FactoryStore.sol\":456:510  return aFactory.get(keccak256(abi.encodePacked(aKey))) */
          pop
          swap1
          pop
            /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */
          swap1
          jump\t// out
            /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */
        tag_919:
          dup3
          dup2
          returndatasize
          dup4
          gt
          tag_921
          jumpi
        tag_922:
          tag_923
          dup2
          dup4
          tag_5
          jump\t// in
        tag_923:
          dup2
          add
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sub
          slt
          tag_155
          jumpi
          pop
          mload
            /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */
          dup1
          codesize
          jump(tag_920)
        tag_921:
          pop
          returndatasize
          jump(tag_922)
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
        tag_50:
          dup1
          iszero
          tag_810
          jumpi
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0xc097ce7bc90715b34b9f1000000000
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
          swap1
          jump\t// out
        tag_51:
          dup2
          iszero
          tag_810
          jumpi
          sdiv
          swap1
          jump\t// out
            /* \"src/libraries/LogCompression.sol\":2015:2401  function toLowResLog(uint256 value) internal pure returns (int256) {... */
        tag_52:
            /* \"src/libraries/LogCompression.sol\":2128:2156  LogExpMath.ln(int256(value)) */
          tag_930
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          0x5af3107a4000
            /* \"src/libraries/LogCompression.sol\":2015:2401  function toLowResLog(uint256 value) internal pure returns (int256) {... */
          swap2
            /* \"src/libraries/LogCompression.sol\":2128:2156  LogExpMath.ln(int256(value)) */
          tag_53
          jump\t// in
        tag_930:
            /* \"src/libraries/LogCompression.sol\":2252:2253  0 */
          0x00
            /* \"src/libraries/LogCompression.sol\":2247:2253  ln > 0 */
          dup2
          sgt
            /* \"src/libraries/LogCompression.sol\":2252:2253  0 */
          iszero
          tag_931
          jumpi
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          0x2d79883d2000
          add
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogCompression.sol\":2015:2401  function toLowResLog(uint256 value) internal pure returns (int256) {... */
          swap1
          jump\t// out
            /* \"src/libraries/LogCompression.sol\":2247:2325  ln > 0 ? ln + _HALF_LOG_COMPRESSION_FACTOR : ln - _HALF_LOG_COMPRESSION_FACTOR */
        tag_931:
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffd28677c2e000
          add
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogCompression.sol\":2015:2401  function toLowResLog(uint256 value) internal pure returns (int256) {... */
          swap1
          jump\t// out
            /* \"src/libraries/LogExpMath.sol\":14736:15138  function ln(int256 a) internal pure returns (int256) {... */
        tag_53:
            /* \"src/libraries/LogExpMath.sol\":14922:14923  0 */
          0x00
            /* \"src/libraries/LogExpMath.sol\":14918:14923  a > 0 */
          dup2
          sgt
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          iszero
          tag_934
          jumpi
            /* \"src/libraries/LogExpMath.sol\":14964:14985  LN_36_LOWER_BOUND < a */
          dup1
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          0x0c7d713b49da0000
            /* \"src/libraries/LogExpMath.sol\":14964:14985  LN_36_LOWER_BOUND < a */
          slt
            /* \"src/libraries/LogExpMath.sol\":14964:15010  LN_36_LOWER_BOUND < a && a < LN_36_UPPER_BOUND */
          dup1
          tag_936
          jumpi
            /* \"src/libraries/LogExpMath.sol\":14736:15138  function ln(int256 a) internal pure returns (int256) {... */
        tag_937:
            /* \"src/libraries/LogExpMath.sol\":14960:15122  if (LN_36_LOWER_BOUND < a && a < LN_36_UPPER_BOUND) {... */
          iszero
          tag_938
          jumpi
            /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
          0x0de0b6b3a7640000
          swap1
            /* \"src/libraries/LogExpMath.sol\":2125:2129  1e36 */
          0xc097ce7bc90715b34b9f1000000000
          swap1
            /* \"src/libraries/LogExpMath.sol\":21785:21823  ((x - ONE_36) * ONE_36) / (x + ONE_36) */
          tag_940
          swap1
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup4
          mul
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          dup3
          dup2
          add
          swap1
          0xffffffffffffffffffffffffffffffffff3f68318436f8ea4cb460f000000000
          add
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup4
          mul
            /* \"src/libraries/LogExpMath.sol\":21785:21823  ((x - ONE_36) * ONE_36) / (x + ONE_36) */
          tag_51
          jump\t// in
        tag_940:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap1
          dup1
          dup3
          dup1
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap2
          dup2
          dup4
          dup3
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup3
          dup5
          dup3
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup4
          dup6
          dup3
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap2
          dup5
          dup7
          dup5
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap4
          dup6
          dup8
          dup7
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap6
          dup1
          dup9
          dup9
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap8
          dup9
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogExpMath.sol\":22751:22753  15 */
          0x0f
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          swap1
          sdiv
          swap7
            /* \"src/libraries/LogExpMath.sol\":22669:22671  13 */
          0x0d
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          swap1
          sdiv
          swap6
            /* \"src/libraries/LogExpMath.sol\":22587:22589  11 */
          0x0b
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          swap1
          sdiv
          swap5
            /* \"src/libraries/LogExpMath.sol\":22506:22507  9 */
          0x09
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          swap1
          sdiv
          swap4
            /* \"src/libraries/LogExpMath.sol\":22425:22426  7 */
          0x07
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          swap1
          sdiv
          swap3
            /* \"src/libraries/LogExpMath.sol\":22344:22345  5 */
          0x05
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          swap1
          sdiv
          swap2
            /* \"src/libraries/LogExpMath.sol\":22263:22264  3 */
          0x03
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          swap1
          sdiv
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          add
          add
          add
          add
          add
          add
          add
          0x01
          shl
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogExpMath.sol\":15030:15055  return _ln_36(a) / ONE_18 */
          swap1
          jump\t// out
            /* \"src/libraries/LogExpMath.sol\":14960:15122  if (LN_36_LOWER_BOUND < a && a < LN_36_UPPER_BOUND) {... */
        tag_938:
            /* \"src/libraries/LogExpMath.sol\":15101:15107  _ln(a) */
          tag_740
          swap1
          tag_54
          jump\t// in
            /* \"src/libraries/LogExpMath.sol\":14964:15010  LN_36_LOWER_BOUND < a && a < LN_36_UPPER_BOUND */
        tag_936:
            /* \"src/libraries/LogExpMath.sol\":14989:15010  a < LN_36_UPPER_BOUND */
          pop
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          0x0f43fc2c04ee0000
            /* \"src/libraries/LogExpMath.sol\":14989:15010  a < LN_36_UPPER_BOUND */
          dup2
          slt
            /* \"src/libraries/LogExpMath.sol\":14964:15010  LN_36_LOWER_BOUND < a && a < LN_36_UPPER_BOUND */
          jump(tag_937)
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
        tag_934:
          0x64
          mload(0x40)
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
          0x20
          0x04
          dup3
          add
          mstore
          0x11
          0x24
          dup3
          add
          mstore
          0x454d3a204f55545f4f465f424f554e4453000000000000000000000000000000
          0x44
          dup3
          add
          mstore
          revert
            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
        tag_54:
            /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
          0x0de0b6b3a7640000
            /* \"src/libraries/LogExpMath.sol\":15343:15353  a < ONE_18 */
          dup2
          slt
            /* \"src/libraries/LogExpMath.sol\":15339:15760  if (a < ONE_18) {... */
          tag_942
          jumpi
            /* \"src/libraries/LogExpMath.sol\":17686:17689  100 */
          0x64
            /* \"src/libraries/LogExpMath.sol\":17231:17245  int256 sum = 0 */
          swap1
            /* \"src/libraries/LogExpMath.sol\":17244:17245  0 */
          0x00
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0x1600ef3172e58d2e933ec884fde10064c63b5372d805e203c0000000000000
            /* \"src/libraries/LogExpMath.sol\":17263:17279  a >= a0 * ONE_18 */
          dup3
          slt
          iszero
            /* \"src/libraries/LogExpMath.sol\":17259:17385  if (a >= a0 * ONE_18) {... */
          tag_944
          jumpi
            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
        tag_945:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          0x011798004d755d3c8bc8e03204cf44619e000000
            /* \"src/libraries/LogExpMath.sol\":17403:17419  a >= a1 * ONE_18 */
          dup3
          slt
          iszero
            /* \"src/libraries/LogExpMath.sol\":17399:17525  if (a >= a1 * ONE_18) {... */
          tag_946
          jumpi
            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
        tag_947:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup3
          mul
          swap1
          dup3
          mul
          dup2
            /* \"src/libraries/LogExpMath.sol\":3567:3612  7_896_296_018_268_069_516_100_000_000_000_000 */
          0x01855144814a7ff805980ff0084000
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup3
            /* \"src/libraries/LogExpMath.sol\":17846:17853  a >= a2 */
          dup2
          dup2
          slt
          iszero
            /* \"src/libraries/LogExpMath.sol\":17842:17936  if (a >= a2) {... */
          tag_948
          jumpi
            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
        tag_949:
            /* \"src/libraries/LogExpMath.sol\":3714:3749  888_611_052_050_787_263_676_000_000 */
          pop
          pop
          pop
          0x02df0ab5a80a22c61ab5a700
            /* \"src/libraries/LogExpMath.sol\":17954:17961  a >= a3 */
          dup1
          dup3
          slt
          iszero
            /* \"src/libraries/LogExpMath.sol\":17950:18044  if (a >= a3) {... */
          tag_950
          jumpi
            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
        tag_951:
            /* \"src/libraries/LogExpMath.sol\":3849:3880  298_095_798_704_172_827_474_000 */
          pop
          0x3f1fce3da636ea5cf850
            /* \"src/libraries/LogExpMath.sol\":18062:18069  a >= a4 */
          dup1
          dup3
          slt
          iszero
            /* \"src/libraries/LogExpMath.sol\":18058:18152  if (a >= a4) {... */
          tag_952
          jumpi
            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
        tag_953:
            /* \"src/libraries/LogExpMath.sol\":3980:4009  5_459_815_003_314_423_907_810 */
          pop
          0x0127fa27722cc06cc5e2
            /* \"src/libraries/LogExpMath.sol\":18170:18177  a >= a5 */
          dup1
          dup3
          slt
          iszero
            /* \"src/libraries/LogExpMath.sol\":18166:18260  if (a >= a5) {... */
          tag_954
          jumpi
            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
        tag_955:
            /* \"src/libraries/LogExpMath.sol\":4109:4136  738_905_609_893_065_022_723 */
          pop
          0x280e60114edb805d03
            /* \"src/libraries/LogExpMath.sol\":18278:18285  a >= a6 */
          dup1
          dup3
          slt
          iszero
            /* \"src/libraries/LogExpMath.sol\":18274:18368  if (a >= a6) {... */
          tag_956
          jumpi
            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
        tag_957:
            /* \"src/libraries/LogExpMath.sol\":4236:4263  271_828_182_845_904_523_536 */
          pop
          0x0ebc5fb41746121110
            /* \"src/libraries/LogExpMath.sol\":18386:18393  a >= a7 */
          dup1
          dup3
          slt
          iszero
            /* \"src/libraries/LogExpMath.sol\":18382:18476  if (a >= a7) {... */
          tag_958
          jumpi
            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
        tag_959:
            /* \"src/libraries/LogExpMath.sol\":4363:4390  164_872_127_070_012_814_685 */
          pop
          0x08f00f760a4b2db55d
            /* \"src/libraries/LogExpMath.sol\":18494:18501  a >= a8 */
          dup1
          dup3
          slt
          iszero
            /* \"src/libraries/LogExpMath.sol\":18490:18584  if (a >= a8) {... */
          tag_960
          jumpi
            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
        tag_961:
            /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */
          pop
          0x06f5f1775788937937
            /* \"src/libraries/LogExpMath.sol\":18602:18609  a >= a9 */
          dup1
          dup3
          slt
          iszero
            /* \"src/libraries/LogExpMath.sol\":18598:18692  if (a >= a9) {... */
          tag_962
          jumpi
            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
        tag_963:
            /* \"src/libraries/LogExpMath.sol\":4619:4646  113_314_845_306_682_631_683 */
          pop
          0x06248f33704b286603
            /* \"src/libraries/LogExpMath.sol\":18710:18718  a >= a10 */
          dup1
          dup3
          slt
          iszero
            /* \"src/libraries/LogExpMath.sol\":18706:18803  if (a >= a10) {... */
          tag_964
          jumpi
            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
        tag_965:
            /* \"src/libraries/LogExpMath.sol\":4748:4775  106_449_445_891_785_942_956 */
          pop
          0x05c548670b9510e7ac
            /* \"src/libraries/LogExpMath.sol\":18821:18829  a >= a11 */
          dup1
          dup3
          slt
          iszero
            /* \"src/libraries/LogExpMath.sol\":18817:18914  if (a >= a11) {... */
          tag_966
          jumpi
            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
        tag_967:
            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
          pop
            /* \"src/libraries/LogExpMath.sol\":19470:19508  ((a - ONE_20) * ONE_20) / (a + ONE_20) */
          tag_968
            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
          0x056bc75e2d63100000
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          swap2
          dup3
          0xfffffffffffffffffffffffffffffffffffffffffffffffa9438a1d29cf00000
          dup2
          dup4
          add
          swap3
          add
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          mul
            /* \"src/libraries/LogExpMath.sol\":19470:19508  ((a - ONE_20) * ONE_20) / (a + ONE_20) */
          tag_51
          jump\t// in
        tag_968:
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap1
          dup1
          dup3
          dup1
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap2
          dup2
          dup4
          dup3
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup3
          dup5
          dup3
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap2
            /* \"src/libraries/LogExpMath.sol\":19948:19949  3 */
          0x03
            /* \"src/libraries/LogExpMath.sol\":20029:20030  5 */
          0x05
            /* \"src/libraries/LogExpMath.sol\":20110:20111  7 */
          0x07
            /* \"src/libraries/LogExpMath.sol\":20191:20192  9 */
          0x09
            /* \"src/libraries/LogExpMath.sol\":20272:20274  11 */
          0x0b
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup9
          dup11
          dup10
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap9
          dup1
          dup12
          dup12
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap11
          dup12
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
          sdiv
          swap9
          sdiv
          swap7
          sdiv
          swap5
          sdiv
          swap3
          sdiv
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          add
          add
          add
          add
          add
          0x01
          shl
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          add
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
          swap1
          jump\t// out
            /* \"src/libraries/LogExpMath.sol\":18817:18914  if (a >= a11) {... */
        tag_966:
            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
          0x056bc75e2d63100000
            /* \"src/libraries/LogExpMath.sol\":4686:4711  6_250_000_000_000_000_000 */
          0x56bc75e2d6310000
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap3
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          swap2
          add
            /* \"src/libraries/LogExpMath.sol\":18817:18914  if (a >= a11) {... */
          swap1
          codesize
          jump(tag_967)
            /* \"src/libraries/LogExpMath.sol\":18706:18803  if (a >= a10) {... */
        tag_964:
            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
          0x056bc75e2d63100000
            /* \"src/libraries/LogExpMath.sol\":4556:4582  12_500_000_000_000_000_000 */
          0xad78ebc5ac620000
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap3
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          swap2
          add
            /* \"src/libraries/LogExpMath.sol\":18706:18803  if (a >= a10) {... */
          swap1
          codesize
          jump(tag_965)
            /* \"src/libraries/LogExpMath.sol\":18598:18692  if (a >= a9) {... */
        tag_962:
            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
          0x056bc75e2d63100000
            /* \"src/libraries/LogExpMath.sol\":4428:4454  25_000_000_000_000_000_000 */
          0x015af1d78b58c40000
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap3
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          swap2
          add
            /* \"src/libraries/LogExpMath.sol\":18598:18692  if (a >= a9) {... */
          swap1
          codesize
          jump(tag_963)
            /* \"src/libraries/LogExpMath.sol\":18490:18584  if (a >= a8) {... */
        tag_960:
            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
          0x056bc75e2d63100000
            /* \"src/libraries/LogExpMath.sol\":4301:4327  50_000_000_000_000_000_000 */
          0x02b5e3af16b1880000
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap3
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          swap2
          add
            /* \"src/libraries/LogExpMath.sol\":18490:18584  if (a >= a8) {... */
          swap1
          codesize
          jump(tag_961)
            /* \"src/libraries/LogExpMath.sol\":18382:18476  if (a >= a7) {... */
        tag_958:
            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
          0x056bc75e2d63100000
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          dup1
          swap3
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          swap2
          add
            /* \"src/libraries/LogExpMath.sol\":18382:18476  if (a >= a7) {... */
          swap1
          codesize
          jump(tag_959)
            /* \"src/libraries/LogExpMath.sol\":18274:18368  if (a >= a6) {... */
        tag_956:
            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
          0x056bc75e2d63100000
            /* \"src/libraries/LogExpMath.sol\":4047:4074  200_000_000_000_000_000_000 */
          0x0ad78ebc5ac6200000
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap3
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          swap2
          add
            /* \"src/libraries/LogExpMath.sol\":18274:18368  if (a >= a6) {... */
          swap1
          codesize
          jump(tag_957)
            /* \"src/libraries/LogExpMath.sol\":18166:18260  if (a >= a5) {... */
        tag_954:
            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
          0x056bc75e2d63100000
            /* \"src/libraries/LogExpMath.sol\":3918:3945  400_000_000_000_000_000_000 */
          0x15af1d78b58c400000
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap3
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          swap2
          add
            /* \"src/libraries/LogExpMath.sol\":18166:18260  if (a >= a5) {... */
          swap1
          codesize
          jump(tag_955)
            /* \"src/libraries/LogExpMath.sol\":18058:18152  if (a >= a4) {... */
        tag_952:
            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
          0x056bc75e2d63100000
            /* \"src/libraries/LogExpMath.sol\":3787:3814  800_000_000_000_000_000_000 */
          0x2b5e3af16b18800000
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap3
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          swap2
          add
            /* \"src/libraries/LogExpMath.sol\":18058:18152  if (a >= a4) {... */
          swap1
          codesize
          jump(tag_953)
            /* \"src/libraries/LogExpMath.sol\":17950:18044  if (a >= a3) {... */
        tag_950:
            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
          0x056bc75e2d63100000
            /* \"src/libraries/LogExpMath.sol\":3650:3679  1_600_000_000_000_000_000_000 */
          0x56bc75e2d631000000
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap3
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          swap2
          add
            /* \"src/libraries/LogExpMath.sol\":17950:18044  if (a >= a3) {... */
          swap1
          codesize
          jump(tag_951)
            /* \"src/libraries/LogExpMath.sol\":17842:17936  if (a >= a2) {... */
        tag_948:
            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
          0x056bc75e2d63100000
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap2
          swap3
          swap5
          pop
            /* \"src/libraries/LogExpMath.sol\":3503:3532  3_200_000_000_000_000_000_000 */
          0xad78ebc5ac62000000
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          swap4
          pop
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          swap2
          add
            /* \"src/libraries/LogExpMath.sol\":17842:17936  if (a >= a2) {... */
          swap1
          codesize
          dup1
          dup1
          jump(tag_949)
            /* \"src/libraries/LogExpMath.sol\":17399:17525  if (a >= a1 * ONE_18) {... */
        tag_946:
            /* \"src/libraries/LogExpMath.sol\":3385:3422  6_235_149_080_811_616_882_910_000_000 */
          0x1425982cf597cd205cef7380
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          swap1
          swap2
          sdiv
          swap1
            /* \"src/libraries/LogExpMath.sol\":3324:3350  64_000_000_000_000_000_000 */
          0x03782dace9d9000000
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          add
            /* \"src/libraries/LogExpMath.sol\":17399:17525  if (a >= a1 * ONE_18) {... */
          jump(tag_947)
            /* \"src/libraries/LogExpMath.sol\":17259:17385  if (a >= a0 * ONE_18) {... */
        tag_944:
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          pop
            /* \"src/libraries/LogExpMath.sol\":3187:3261  38_877_084_059_945_950_922_200_000_000_000_000_000_000_000_000_000_000_000 */
          0x0195e54c5dd42177f53a27172fa9ec630262827000000000
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          swap1
          sdiv
            /* \"src/libraries/LogExpMath.sol\":3125:3152  128_000_000_000_000_000_000 */
          0x06f05b59d3b2000000
            /* \"src/libraries/LogExpMath.sol\":17259:17385  if (a >= a0 * ONE_18) {... */
          jump(tag_945)
            /* \"src/libraries/LogExpMath.sol\":15339:15760  if (a < ONE_18) {... */
        tag_942:
            /* \"src/libraries/LogExpMath.sol\":15722:15743  (ONE_18 * ONE_18) / a */
          tag_969
            /* \"src/libraries/LogExpMath.sol\":15718:15744  _ln((ONE_18 * ONE_18) / a) */
          tag_970
            /* \"src/libraries/LogExpMath.sol\":15722:15743  (ONE_18 * ONE_18) / a */
          swap2
          tag_50
          jump\t// in
        tag_969:
            /* \"src/libraries/LogExpMath.sol\":15718:15744  _ln((ONE_18 * ONE_18) / a) */
          tag_54
          jump\t// in
        tag_970:
          0x00
            /* \"src/curve/constant-product/ConstantProductPair.sol\":698:12637  contract ConstantProductPair is ReservoirPair {... */
          sub
            /* \"src/libraries/LogExpMath.sol\":15709:15745  return (-_ln((ONE_18 * ONE_18) / a)) */
          swap1
          jump\t// out

        auxdata: 0xa164736f6c6343000811000a
    }
}

sub_3: assembly {
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      0x01a0
      dup1
      0x40
      mstore
      jumpi(tag_15, callvalue)
      0x40
      dup2
      bytecodeSize
      dup1
      codesize
      sub
      dup1
      swap2
      tag_14
      dup3
      dup6
      tag_2
      jump\t// in
    tag_14:
      dup4
      codecopy
      dup2
      add
      sub
      slt
      tag_15
      jumpi
      tag_17
      0x20
      tag_18
      dup4
      tag_3
      jump\t// in
    tag_18:
      swap3
      add
      tag_3
      jump\t// in
    tag_17:
      swap1
      mload(0x40)
      tag_19
      dup2
      tag_1
      jump\t// in
    tag_19:
      0x0b
      dup2
      mstore
      shl(0xa8, 0x53503a3a73776170466565)
      0x20
      dup3
      add
      mstore
      mload(0x40)
      swap3
      tag_20
      dup5
      tag_1
      jump\t// in
    tag_20:
      0x12
      dup5
      mstore
      shl(0x71, 0x2932b9b2b93b37b4b9102628102a37b5b2b7)
      0x20
      dup6
      add
      mstore
      mload(0x40)
      tag_21
      dup2
      tag_1
      jump\t// in
    tag_21:
      0x06
      dup2
      mstore
      shl(0xd4, 0x05245532d4c5)
      0x20
      dup3
      add
      mstore
      dup5
      mload
      sub(shl(0x40, 0x01), 0x01)
      dup2
      gt
      tag_50
      jumpi
      dup1
      tag_24
      sload(0x00)
      tag_8
      jump\t// in
    tag_24:
      swap7
      0x1f
      swap8
      dup9
      dup2
      gt
      tag_25
      jumpi
    tag_26:
      pop
      0x20
      swap1
      dup9
      dup4
      gt
      0x01
      eq
      tag_27
      jumpi
      0x00
      swap3
      tag_29
      jumpi
    tag_30:
      pop
      pop
      dup2
      0x01
      shl
      swap2
      not(0x00)
      swap1
      0x03
      shl
      shr
      not
      and
      or
      0x00
      sstore
    tag_31:
      dup1
      mload
      swap1
      sub(shl(0x40, 0x01), 0x01)
      dup3
      gt
      tag_50
      jumpi
      tag_34
      sload(0x01)
      tag_8
      jump\t// in
    tag_34:
      dup7
      dup2
      gt
      tag_35
      jumpi
    tag_36:
      pop
      0x20
      swap6
      dup3
      gt
      0x01
      eq
      tag_37
      jumpi
      swap5
      dup2
      swap3
      swap4
      swap5
      swap6
      0x00
      swap3
      tag_39
      jumpi
    tag_40:
      pop
      pop
      dup2
      0x01
      shl
      swap2
      not(0x00)
      swap1
      0x03
      shl
      shr
      not
      and
      or
      0x01
      sstore
    tag_41:
      0x12
        /* \"lib/solmate/src/tokens/ERC20.sol\":2142:2162  decimals = _decimals */
      0x80
      mstore
        /* \"lib/solmate/src/tokens/ERC20.sol\":2192:2205  block.chainid */
      chainid
        /* \"lib/solmate/src/tokens/ERC20.sol\":2173:2205  INITIAL_CHAIN_ID = block.chainid */
      0xa0
      mstore
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      mload(0x40)
      0x00
      swap1
      sload(0x00)
      swap2
      dup2
      tag_42
      dup5
      tag_8
      jump\t// in
    tag_42:
        /* \"src/libraries/StableMath.sol\":607:613  10_000 */
      swap2
      dup3
      dup3
      mstore
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      0x20
        /* \"src/libraries/StableMath.sol\":607:613  10_000 */
      dup3
      add
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      swap5
      0x01
      dup2
      and
        /* \"lib/solmate/src/tokens/ERC20.sol\":2116:2132  symbol = _symbol */
      swap1
      dup2
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      0x00
        /* \"lib/solmate/src/tokens/ERC20.sol\":2116:2132  symbol = _symbol */
      eq
      tag_43
      jumpi
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      pop
      0x01
      eq
      tag_45
      jumpi
    tag_46:
      tag_47
      swap3
      pop
      sub
      dup3
      tag_2
      jump\t// in
    tag_47:
      mload
        /* \"lib/solmate/src/tokens/ERC20.sol\":5789:5811  keccak256(bytes(name)) */
      swap1
      keccak256
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      swap3
      mload(0x40)
      0x20
        /* \"lib/solmate/src/tokens/ERC20.sol\":5640:5935  abi.encode(... */
      dup2
      add
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      swap5
        /* \"lib/solmate/src/tokens/ERC20.sol\":5672:5767  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */
      0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      dup7
      mstore
      0x40
      dup3
      add
      mstore
        /* \"lib/solmate/src/tokens/ERC20.sol\":5833:5847  keccak256(\"1\") */
      0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      0x60
      dup3
      add
      mstore
        /* \"lib/solmate/src/tokens/ERC20.sol\":2192:2205  block.chainid */
      chainid
        /* \"lib/solmate/src/tokens/ERC20.sol\":2142:2162  decimals = _decimals */
      0x80
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      dup3
      add
      mstore
        /* \"lib/solmate/src/tokens/ERC20.sol\":5912:5916  this */
      address
        /* \"lib/solmate/src/tokens/ERC20.sol\":2173:2205  INITIAL_CHAIN_ID = block.chainid */
      0xa0
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      dup3
      add
      mstore
        /* \"lib/solmate/src/tokens/ERC20.sol\":2173:2205  INITIAL_CHAIN_ID = block.chainid */
      0xa0
        /* \"lib/solmate/src/tokens/ERC20.sol\":5640:5935  abi.encode(... */
      dup2
      mstore
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      0xc0
      dup2
      add
      swap5
      dup2
      dup7
      lt
      0x01
      dup1
      0x40
      shl
      sub
      dup8
      gt
      or
      tag_50
      jumpi
      0x40
      dup7
      swap1
      mstore
      dup2
      mload
        /* \"lib/solmate/src/tokens/ERC20.sol\":5613:5949  keccak256(... */
      swap1
      keccak256
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      0xc0
        /* \"lib/solmate/src/tokens/ERC20.sol\":2215:2266  INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator() */
      mstore
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      0x0140
      swap5
      dup6
      dup3
      add
      swap2
      sub(shl(0x40, 0x01), 0x01)
      dup4
      gt
      dup3
      dup5
      lt
      or
      tag_50
      jumpi
      0x00
        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */
      0x0120
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      swap3
        /* \"src/ReservoirPair.sol\":3435:3451  type(uint16).max */
      0xffff
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      swap5
      0x40
      mstore
      mstore
      0x00
        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */
      0xe0
      dup3
      add
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      mstore
      0x00
        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */
      0x0100
      dup3
      add
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      mstore
        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */
      add
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      mstore
      sstore(0x06, shl(0xf0, 0xffff))
      not(0x00)
        /* \"src/curve/stable/StableMintBurn.sol\":1286:1299  \"SP::swapFee\" */
      dup1
        /* \"src/ReservoirPair.sol\":3519:3536  type(uint256).max */
      0x08
        /* \"src/curve/stable/StableMintBurn.sol\":1286:1299  \"SP::swapFee\" */
      sstore
        /* \"src/ReservoirPair.sol\":3654:3671  type(uint256).max */
      0x0a
        /* \"src/curve/stable/StableMintBurn.sol\":1286:1299  \"SP::swapFee\" */
      sstore
        /* \"src/ReservoirPair.sol\":3899:3909  msg.sender */
      caller
        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */
      0xe0
        /* \"src/ReservoirPair.sol\":3874:3910  factory = GenericFactory(msg.sender) */
      mstore
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      0x01
      dup1
      0xa0
      shl
      sub
      and
        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */
      0x0100
        /* \"src/ReservoirPair.sol\":3920:3943  token0 = ERC20(aToken0) */
      mstore
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      0x01
      dup1
      0xa0
      shl
      sub
      and
        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */
      0x0120
        /* \"src/ReservoirPair.sol\":3953:3976  token1 = ERC20(aToken1) */
      mstore
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      mload(0x40)
        /* \"src/ReservoirPair.sol\":4011:4041  abi.encodePacked(aSwapFeeName) */
      tag_52
      dup2
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      tag_53
      0x20
        /* \"src/ReservoirPair.sol\":4011:4041  abi.encodePacked(aSwapFeeName) */
      dup3
      add
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      dup1
      swap6
      tag_4
      jump\t// in
    tag_53:
        /* \"src/ReservoirPair.sol\":4011:4041  abi.encodePacked(aSwapFeeName) */
      sub
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      not(0x1f)
        /* \"src/ReservoirPair.sol\":4011:4041  abi.encodePacked(aSwapFeeName) */
      dup2
      add
      dup4
      mstore
      dup3
      tag_2
      jump\t// in
    tag_52:
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      mload
        /* \"src/ReservoirPair.sol\":4001:4042  keccak256(abi.encodePacked(aSwapFeeName)) */
      swap1
      keccak256
        /* \"src/ReservoirPair.sol\":3987:4042  swapFeeName = keccak256(abi.encodePacked(aSwapFeeName)) */
      0x0180
      mstore
      tag_54
      tag_9
      jump\t// in
    tag_54:
      tag_55
      tag_10
      jump\t// in
    tag_55:
        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */
      0x0100
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      mload
      mload(0x40)
      shl(0xe0, 0x313ce567)
        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */
      dup2
      mstore
      0x04
      swap2
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      0x20
      swap1
      dup3
      swap1
        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */
      dup5
      swap1
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      dup3
      swap1
      sub(shl(0xa0, 0x01), 0x01)
      and
        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */
      gas
      staticcall
      dup1
      iszero
      tag_62
      jumpi
        /* \"src/ReservoirPair.sol\":4151:4173  18 - token0.decimals() */
      tag_58
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      0xff
        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */
      swap2
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      tag_59
        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */
      swap4
      0x00
      swap2
      tag_66
      jumpi
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
    tag_61:
        /* \"src/ReservoirPair.sol\":4151:4173  18 - token0.decimals() */
      pop
      tag_6
      jump\t// in
    tag_58:
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      and
      tag_7
      jump\t// in
    tag_59:
        /* \"src/ReservoirPair.sol\":4107:4174  token0PrecisionMultiplier = uint128(10) ** (18 - token0.decimals()) */
      dup3
      mstore
        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */
      0x0120
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      mload
      mload(0x40)
      shl(0xe0, 0x313ce567)
        /* \"src/ReservoirPair.sol\":4233:4250  token1.decimals() */
      dup2
      mstore
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      swap1
      0x20
      swap1
      dup3
      swap1
      dup5
      swap1
      dup3
      swap1
      sub(shl(0xa0, 0x01), 0x01)
      and
        /* \"src/ReservoirPair.sol\":4233:4250  token1.decimals() */
      gas
      staticcall
      dup1
      iszero
      tag_62
      jumpi
        /* \"src/ReservoirPair.sol\":4228:4250  18 - token1.decimals() */
      tag_58
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      0xff
        /* \"src/ReservoirPair.sol\":4233:4250  token1.decimals() */
      swap2
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      tag_65
        /* \"src/ReservoirPair.sol\":4233:4250  token1.decimals() */
      swap4
      0x00
      swap2
      tag_66
      jumpi
        /* \"src/ReservoirPair.sol\":4228:4250  18 - token1.decimals() */
      pop
      tag_6
      jump\t// in
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
    tag_65:
        /* \"src/ReservoirPair.sol\":4184:4251  token1PrecisionMultiplier = uint128(10) ** (18 - token1.decimals()) */
      swap1
      0x0160
      swap2
      dup3
      mstore
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      0x01
      dup1
      0xa0
      shl
      sub
        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */
      0xe0
        /* \"src/curve/stable/StableMintBurn.sol\":1286:1299  \"SP::swapFee\" */
      mload
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      and
        /* \"src/ReservoirPair.sol\":17490:17522  factory.read(ORACLE_CALLER_NAME) */
      tag_68
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      mload(0x40)
      tag_69
      dup2
      tag_1
      jump\t// in
    tag_69:
      0x14
      dup2
      mstore
      0x5368617265643a3a6f7261636c6543616c6c6572000000000000000000000000
      0x20
      dup3
      add
      mstore
      sub(shl(0xa0, 0x01), 0x01)
      swap3
        /* \"src/ReservoirPair.sol\":17490:17522  factory.read(ORACLE_CALLER_NAME) */
      tag_11
      jump\t// in
    tag_68:
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      and
        /* \"src/ReservoirPair.sol\":17562:17574  oracleCaller */
      0x01000f
        /* \"src/ReservoirPair.sol\":16881:16903  \"Shared::oracleCaller\" */
      swap1
      dup2
      sload
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      0x01
      dup1
      0xa0
      shl
      sub
      dup2
      and
        /* \"src/ReservoirPair.sol\":17548:17574  lNewCaller != oracleCaller */
      dup1
      dup4
      sub
        /* \"src/ReservoirPair.sol\":17544:17690  if (lNewCaller != oracleCaller) {... */
      tag_70
      jumpi
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
    tag_71:
      pop
      pop
        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */
      0xe0
        /* \"src/curve/stable/StableMintBurn.sol\":1286:1299  \"SP::swapFee\" */
      mload
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      mload(0x40)
        /* \"src/ReservoirPair.sol\":4309:4343  factory.read(MAX_CHANGE_RATE_NAME) */
      tag_72
      swap4
      pop
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      swap2
      pop
      sub(shl(0xa0, 0x01), 0x01)
      and
      tag_73
      dup3
      tag_1
      jump\t// in
    tag_73:
      0x15
      dup3
      mstore
      0x5368617265643a3a6d61784368616e6765526174650000000000000000000000
      0x20
      dup4
      add
      mstore
        /* \"src/ReservoirPair.sol\":4309:4343  factory.read(MAX_CHANGE_RATE_NAME) */
      tag_11
      jump\t// in
    tag_72:
        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */
      0xe0
        /* \"src/curve/stable/StableMintBurn.sol\":1286:1299  \"SP::swapFee\" */
      mload
      sub(shl(0xa0, 0x01), 0x01)
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      and
        /* \"src/ReservoirPair.sol\":3899:3909  msg.sender */
      caller
        /* \"src/ReservoirPair.sol\":3719:3749  msg.sender == address(factory) */
      sub
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      tag_74
      jumpi
        /* \"src/ReservoirPair.sol\":17789:17807  0 < aMaxChangeRate */
      dup1
      iszero
      iszero
        /* \"src/ReservoirPair.sol\":17789:17847  0 < aMaxChangeRate && aMaxChangeRate <= MAX_CHANGE_PER_SEC */
      dup1
      tag_76
      jumpi
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
    tag_77:
        /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */
      iszero
      tag_78
      jumpi
        /* \"src/ReservoirPair.sol\":17917:17930  maxChangeRate */
      0x01000d
        /* \"src/ReservoirPair.sol\":17896:17947  MaxChangeRateUpdated(maxChangeRate, aMaxChangeRate) */
      0x807b9f5907da3f00bf587e77bc07247e1c7ff5ae46c93a584b3a075be0b1bac2
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      0x40
      dup3
      sload
      dup2
      mload
      swap1
      dup2
      mstore
        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */
      dup5
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      0x20
        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */
      dup3
      add
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      mstore
        /* \"src/ReservoirPair.sol\":17896:17947  MaxChangeRateUpdated(maxChangeRate, aMaxChangeRate) */
      log1
        /* \"src/curve/stable/StableMintBurn.sol\":1286:1299  \"SP::swapFee\" */
      sstore
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      0x01
        /* \"src/curve/stable/StableMintBurn.sol\":1464:1465  1 */
      0x010011
        /* \"src/curve/stable/StableMintBurn.sol\":1286:1299  \"SP::swapFee\" */
      sstore
        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */
      0xe0
        /* \"src/curve/stable/StableMintBurn.sol\":1286:1299  \"SP::swapFee\" */
      mload
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      mload(0x40)
        /* \"src/libraries/StableMath.sol\":320:323  100 */
      0x64
      swap2
      sub(shl(0xa0, 0x01), 0x01)
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      and
      swap1
        /* \"src/curve/stable/StableMintBurn.sol\":1826:1870  factory.read(AMPLIFICATION_COEFFICIENT_NAME) */
      tag_80
      swap1
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      tag_81
      dup2
      tag_1
      jump\t// in
    tag_81:
        /* \"src/curve/stable/StableMintBurn.sol\":1286:1299  \"SP::swapFee\" */
      0x1c
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      dup2
      mstore
        /* \"src/curve/stable/StableMintBurn.sol\":1286:1299  \"SP::swapFee\" */
      0x53503a3a616d706c696669636174696f6e436f656666696369656e7400000000
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      0x20
        /* \"src/curve/stable/StableMintBurn.sol\":1286:1299  \"SP::swapFee\" */
      dup3
      add
      mstore
      sub(shl(0x40, 0x01), 0x01)
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      swap3
        /* \"src/curve/stable/StableMintBurn.sol\":1826:1870  factory.read(AMPLIFICATION_COEFFICIENT_NAME) */
      tag_11
      jump\t// in
    tag_80:
        /* \"src/libraries/StableMath.sol\":320:323  100 */
      and
      mul
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      0x01
      dup1
      0x40
      shl
      sub
        /* \"src/libraries/StableMath.sol\":320:323  100 */
      dup2
      and
      swap1
      dup2
      sub
      tag_82
      jumpi
        /* \"src/curve/stable/StableMintBurn.sol\":1807:1814  ampData */
      0x010010
        /* \"src/libraries/StableMath.sol\":320:323  100 */
      dup1
      sload
        /* \"src/curve/stable/StableMintBurn.sol\":1998:2013  block.timestamp */
      timestamp
        /* \"src/libraries/StableMath.sol\":320:323  100 */
      0x80
      dup2
      swap1
      shl
      sub(shl(0xc0, 0x01), shl(0x80, 0x01))
      and
      not(sub(shl(0x40, 0x01), 0x01))
      swap3
      swap1
      swap3
      and
      dup5
      or
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      0x40
        /* \"src/libraries/StableMath.sol\":320:323  100 */
      shl
      0xffffffffffffffff0000000000000000
      and
      dup5
      or
      swap2
      swap1
      swap2
      or
      0xc0
      swap2
      swap1
      swap2
      shl
      not(sub(shl(0xc0, 0x01), 0x01))
      and
      or
      swap1
      sstore
      0x64
        /* \"src/curve/stable/StableMintBurn.sol\":2101:2170  ampData.initialA >= StableMath.MIN_A * uint64(StableMath.A_PRECISION) */
      dup2
      lt
      iszero
      swap1
      dup2
        /* \"src/curve/stable/StableMintBurn.sol\":2101:2259  ampData.initialA >= StableMath.MIN_A * uint64(StableMath.A_PRECISION)... */
      tag_84
      jumpi
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
    tag_85:
        /* \"src/libraries/StableMath.sol\":607:613  10_000 */
      pop
      iszero
      tag_86
      jumpi
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      pop
      mload(0x40)
      swap1
      dataSize(sub_0)
      swap3
      dup4
      dataOffset(sub_0)
      dup5
      codecopy
        /* \"lib/solmate/src/tokens/ERC20.sol\":2142:2162  decimals = _decimals */
      0x80
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      mload
      dup4
      assignImmutable(\"0xb7b2278e6c1d8d0abc309f6bf9256046dfb6cd1d61f6bb10388e8ea4928d3539\")
        /* \"lib/solmate/src/tokens/ERC20.sol\":2173:2205  INITIAL_CHAIN_ID = block.chainid */
      0xa0
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      mload
      dup4
      assignImmutable(\"0x81290bb363e768cff9ff9a5d447e434874948b933698048b966fdf5d744bf636\")
      mload(0xc0)
      dup4
      assignImmutable(\"0x34382e0db9f4d1365b2614bb97467901a574db9e05159d2f14a2053ade673b06\")
        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */
      0xe0
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      mload
      dup4
      assignImmutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")
        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */
      0x0100
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      mload
      dup4
      assignImmutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")
        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */
      0x0120
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      mload
      dup4
      assignImmutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")
      mload
      dup3
      assignImmutable(\"0x372e991e4284f7d12d6b2461cce9899511b05ac053845de253542adb96f2dca0\")
      mload
      dup2
      assignImmutable(\"0xc4ba931b733b92a51f51c0955dd7716c7a38f3de911d23a5d0fbd5d23c0fbe8c\")
        /* \"src/ReservoirPair.sol\":3987:4042  swapFeeName = keccak256(abi.encodePacked(aSwapFeeName)) */
      0x0180
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      mload
      dup2
      assignImmutable(\"0x4c21324e1a4fdca228db96f937188124acece199982b123b328bdd8fee41b354\")
      return
        /* \"src/libraries/StableMath.sol\":607:613  10_000 */
    tag_86:
        /* \"src/libraries/StableMath.sol\":320:323  100 */
      0x64
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      swap1
      0x20
      mload(0x40)
      swap2
      shl(0xe5, 0x461bcd)
        /* \"src/libraries/StableMath.sol\":607:613  10_000 */
      dup4
      mstore
      dup3
      add
      mstore
      0x0d
      0x24
      dup3
      add
      mstore
      shl(0x98, 0x53503a20494e56414c49445f41)
      0x44
      dup3
      add
      mstore
      revert
        /* \"src/curve/stable/StableMintBurn.sol\":2101:2259  ampData.initialA >= StableMath.MIN_A * uint64(StableMath.A_PRECISION)... */
    tag_84:
        /* \"src/libraries/StableMath.sol\":521:522  1 */
      0x0f4240
        /* \"src/curve/stable/StableMintBurn.sol\":2190:2259  ampData.initialA <= StableMath.MAX_A * uint64(StableMath.A_PRECISION) */
      swap2
      pop
      gt
      iszero
        /* \"src/curve/stable/StableMintBurn.sol\":2101:2259  ampData.initialA >= StableMath.MIN_A * uint64(StableMath.A_PRECISION)... */
      codesize
      jump(tag_85)
        /* \"src/libraries/StableMath.sol\":320:323  100 */
    tag_82:
      0x11
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      dup3
      shl(0xe0, 0x4e487b71)
      0x00
        /* \"src/libraries/StableMath.sol\":320:323  100 */
      mstore
      mstore
      revert(0x00, 0x24)
        /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */
    tag_78:
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      mload(0x40)
      shl(0xe5, 0x461bcd)
        /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */
      dup2
      mstore
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      0x20
        /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */
      dup2
      dup5
      add
      mstore
      0x1d
      0x24
      dup3
      add
        /* \"src/libraries/StableMath.sol\":607:613  10_000 */
      mstore
        /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */
      0x4f573a20494e56414c49445f4348414e47455f5045525f5345434f4e44000000
        /* \"src/libraries/StableMath.sol\":607:613  10_000 */
      0x44
      dup3
      add
        /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */
      mstore
      0x64
      swap1
      revert
        /* \"src/ReservoirPair.sol\":17789:17847  0 < aMaxChangeRate && aMaxChangeRate <= MAX_CHANGE_PER_SEC */
    tag_76:
        /* \"src/ReservoirPair.sol\":17811:17847  aMaxChangeRate <= MAX_CHANGE_PER_SEC */
      pop
        /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */
      0x2386f26fc10000
        /* \"src/ReservoirPair.sol\":17811:17847  aMaxChangeRate <= MAX_CHANGE_PER_SEC */
      dup2
      gt
      iszero
        /* \"src/ReservoirPair.sol\":17789:17847  0 < aMaxChangeRate && aMaxChangeRate <= MAX_CHANGE_PER_SEC */
      jump(tag_77)
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
    tag_74:
      mload(0x40)
      shl(0xe5, 0x461bcd)
      dup2
      mstore
      0x20
      dup2
      dup5
      add
      mstore
      0x0c
      0x24
      dup3
      add
        /* \"src/libraries/StableMath.sol\":607:613  10_000 */
      mstore
      shl(0xa1, 0x281d102327a92124a22222a7)
      0x44
      dup3
      add
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      mstore
      0x64
      swap1
      revert
        /* \"src/ReservoirPair.sol\":17544:17690  if (lNewCaller != oracleCaller) {... */
    tag_70:
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      0x40
        /* \"src/ReservoirPair.sol\":17595:17640  OracleCallerUpdated(oracleCaller, lNewCaller) */
      0x262681b3b01b61ff6d02569759105771205cdd274fb3c45535b50632e0a3523f
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      swap2
      dup2
      mload
      swap1
      dup2
      mstore
        /* \"src/ReservoirPair.sol\":16881:16903  \"Shared::oracleCaller\" */
      dup5
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      0x20
        /* \"src/ReservoirPair.sol\":16881:16903  \"Shared::oracleCaller\" */
      dup3
      add
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      mstore
        /* \"src/ReservoirPair.sol\":17595:17640  OracleCallerUpdated(oracleCaller, lNewCaller) */
      log1
      not(sub(shl(0xa0, 0x01), 0x01))
        /* \"src/ReservoirPair.sol\":16881:16903  \"Shared::oracleCaller\" */
      and
      or
      swap1
      sstore
        /* \"src/ReservoirPair.sol\":17544:17690  if (lNewCaller != oracleCaller) {... */
      codesize
      dup1
      dup1
      dup1
      jump(tag_71)
        /* \"src/ReservoirPair.sol\":4233:4250  token1.decimals() */
    tag_66:
      tag_88
      swap2
      pop
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      0x20
        /* \"src/ReservoirPair.sol\":4233:4250  token1.decimals() */
      returndatasize
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      0x20
        /* \"src/ReservoirPair.sol\":4233:4250  token1.decimals() */
      gt
      tag_89
      jumpi
    tag_90:
      tag_91
      dup2
      dup4
      tag_2
      jump\t// in
    tag_91:
      dup2
      add
      swap1
      tag_5
      jump\t// in
    tag_88:
      codesize
      jump(tag_61)
    tag_89:
      pop
      returndatasize
      jump(tag_90)
    tag_62:
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      mload(0x40)
      returndatasize
      0x00
      dup3
      returndatacopy
      returndatasize
      swap1
      revert
    tag_50:
      mstore(0x00, shl(0xe0, 0x4e487b71))
      mstore(0x04, 0x41)
      revert(0x00, 0x24)
    tag_45:
      pop
      0x00
      dup1
      dup1
      mstore
      swap1
      swap2
      0x00
      dup1
      mload
      0x20
      data_510e4e770828ddbf7f7b00ab00a9f6adaf81c0dc9cc85f1f8249c256942d61d9
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
    tag_96:
      dup2
      dup4
      lt
      tag_97
      jumpi
      pop
      pop
      swap1
      0x20
      tag_47
      swap3
      dup3
      add
      add
      jump(tag_46)
    tag_97:
      0x20
      swap2
      swap4
      pop
      dup1
      0x01
      swap2
      sload
      dup4
      dup6
      dup9
      add
      add
      mstore
      add
      swap2
      add
      swap1
      swap2
      dup4
      swap3
      jump(tag_96)
    tag_43:
      not(0xff)
      and
      dup7
      mstore
      pop
      tag_47
      swap3
      iszero
      iszero
      0x05
      shl
      dup3
      add
      0x20
      add
      swap1
      pop
      jump(tag_46)
    tag_39:
      add
      mload
      swap1
      pop
      codesize
      dup1
      jump(tag_40)
    tag_37:
      not(0x1f)
      dup3
      and
      swap6
      mstore(0x00, 0x01)
      keccak256(0x00, 0x20)
      swap2
      0x00
    tag_99:
      dup9
      dup2
      lt
      tag_100
      jumpi
      pop
      dup4
      0x01
      swap6
      swap7
      swap8
      swap9
      lt
      tag_102
      jumpi
    tag_103:
      pop
      pop
      pop
      dup2
      shl
      add
      0x01
      sstore
      jump(tag_41)
    tag_102:
      add
      mload
      not(0x00)
      0xf8
      dup5
      0x03
      shl
      and
      shr
      not
      and
      swap1
      sstore
      codesize
      dup1
      dup1
      jump(tag_103)
    tag_100:
      swap2
      swap3
      0x20
      0x01
      dup2
      swap3
      dup7
      dup6
      add
      mload
      dup2
      sstore
      add
      swap5
      add
      swap3
      add
      jump(tag_99)
    tag_35:
      mstore(0x00, 0x01)
      keccak256(0x00, 0x20)
      dup8
      dup1
      dup6
      add
      0x05
      shr
      dup3
      add
      swap3
      0x20
      dup7
      lt
      tag_104
      jumpi
    tag_105:
      add
      0x05
      shr
      add
      swap1
    tag_106:
      dup2
      dup2
      lt
      tag_107
      jumpi
      pop
      jump(tag_36)
    tag_107:
      0x00
      dup2
      sstore
      0x01
      add
      jump(tag_106)
    tag_104:
      swap3
      pop
      dup2
      swap3
      jump(tag_105)
    tag_29:
      add
      mload
      swap1
      pop
      codesize
      dup1
      jump(tag_30)
    tag_27:
      0x00
      dup1
      dup1
      mstore
      0x00
      dup1
      mload
      0x20
      data_510e4e770828ddbf7f7b00ab00a9f6adaf81c0dc9cc85f1f8249c256942d61d9
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
      swap4
      pop
      not(0x1f)
      dup6
      and
      swap1
    tag_109:
      dup2
      dup2
      lt
      tag_110
      jumpi
      pop
      swap1
      dup5
      0x01
      swap6
      swap5
      swap4
      swap3
      lt
      tag_112
      jumpi
    tag_113:
      pop
      pop
      pop
      dup2
      shl
      add
      0x00
      sstore
      jump(tag_31)
    tag_112:
      add
      mload
      not(0x00)
      0xf8
      dup5
      0x03
      shl
      and
      shr
      not
      and
      swap1
      sstore
      codesize
      dup1
      dup1
      jump(tag_113)
    tag_110:
      swap3
      swap4
      0x20
      0x01
      dup2
      swap3
      dup8
      dup7
      add
      mload
      dup2
      sstore
      add
      swap6
      add
      swap4
      add
      jump(tag_109)
    tag_25:
      swap1
      swap2
      pop
      0x00
      dup1
      mstore
      keccak256(0x00, 0x20)
      dup9
      dup1
      dup6
      add
      0x05
      shr
      dup3
      add
      swap3
      0x20
      dup7
      lt
      tag_114
      jumpi
    tag_115:
      swap1
      dup6
      swap5
      swap4
      swap3
      swap2
      add
      0x05
      shr
      add
      swap1
    tag_116:
      dup2
      dup2
      lt
      tag_117
      jumpi
      pop
      jump(tag_26)
    tag_117:
      0x00
      dup2
      sstore
      dup5
      swap4
      pop
      0x01
      add
      jump(tag_116)
    tag_114:
      swap3
      pop
      dup2
      swap3
      jump(tag_115)
    tag_15:
      0x00
      dup1
      revert
    tag_1:
      0x40
      dup2
      add
      swap1
      dup2
      lt
      sub(shl(0x40, 0x01), 0x01)
      dup3
      gt
      or
      tag_50
      jumpi
      0x40
      mstore
      jump\t// out
    tag_2:
      0x1f
      swap1
      swap2
      add
      not(0x1f)
      and
      dup2
      add
      swap1
      sub(shl(0x40, 0x01), 0x01)
      dup3
      gt
      swap1
      dup3
      lt
      or
      tag_50
      jumpi
      0x40
      mstore
      jump\t// out
    tag_3:
      mload
      swap1
      sub(shl(0xa0, 0x01), 0x01)
      dup3
      and
      dup3
      sub
      tag_15
      jumpi
      jump\t// out
    tag_4:
      swap1
      dup2
      mload
      swap2
      0x00
    tag_125:
      dup4
      dup2
      lt
      tag_126
      jumpi
      pop
      pop
      add
      0x00
      dup2
      mstore
      swap1
      jump\t// out
    tag_126:
      dup1
      0x20
      dup1
      swap3
      dup5
      add
      add
      mload
      dup2
      dup6
      add
      mstore
      add
      jump(tag_125)
    tag_5:
      swap1
      dup2
      0x20
      swap2
      sub
      slt
      tag_15
      jumpi
      mload
      0xff
      dup2
      and
      dup2
      sub
      tag_15
      jumpi
      swap1
      jump\t// out
    tag_6:
      0xff
      and
      0x12
      sub
      swap1
      0xff
      dup3
      gt
      tag_132
      jumpi
      jump\t// out
    tag_132:
      shl(0xe0, 0x4e487b71)
        /* \"src/libraries/StableMath.sol\":320:323  100 */
      0x00
      mstore
      mstore(0x04, 0x11)
      revert(0x00, 0x24)
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
    tag_7:
      dup1
      iszero
      tag_134
      jumpi
      0x01
      swap1
      0x20
      dup2
      lt
      dup3
      and
      0x4e
      dup3
      lt
      dup4
      and
      or
      tag_136
      jumpi
      dup2
      swap1
      0x0a
      swap3
    tag_138:
      dup1
      dup3
      gt
      tag_139
      jumpi
      pop
      pop
      sub(shl(0x80, 0x01), 0x01)
      dup3
      swap1
      div
      dup2
      gt
      tag_132
      jumpi
      mul
      swap1
      jump\t// out
    tag_139:
      swap1
      swap3
      sub(shl(0x80, 0x01), 0x01)
      dup2
      swap1
      div
      dup2
      gt
      tag_132
      jumpi
      dup2
      dup5
      and
      tag_145
      jumpi
    tag_146:
      dup1
      mul
      swap3
      dup2
      shr
      swap1
      jump(tag_138)
    tag_145:
      dup1
      swap3
      mul
      swap2
      jump(tag_146)
    tag_136:
      0x0a
      exp
      swap2
      swap1
      pop
      sub(shl(0x80, 0x01), 0x01)
      dup3
      gt
      tag_132
      jumpi
      jump\t// out
    tag_134:
      pop
      0x01
      swap1
      jump\t// out
    tag_8:
      swap1
      0x01
      dup3
      dup2
      shr
      swap3
      and
      dup1
      iszero
      tag_149
      jumpi
    tag_150:
      0x20
      dup4
      lt
      eq
      tag_151
      jumpi
      jump\t// out
    tag_151:
      mstore(0x00, shl(0xe0, 0x4e487b71))
      mstore(0x04, 0x22)
      revert(0x00, 0x24)
    tag_149:
      swap2
      0x7f
      and
      swap2
      jump(tag_150)
        /* \"src/ReservoirPair.sol\":7293:7635  function updateSwapFee() public {... */
    tag_9:
        /* \"src/ReservoirPair.sol\":7354:7367  customSwapFee */
      0x08
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      sload
      0x00
      not(0x00)
        /* \"src/ReservoirPair.sol\":7354:7388  customSwapFee != type(uint256).max */
      dup3
      eq
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      tag_153
      jumpi
        /* \"src/ReservoirPair.sol\":7354:7443  customSwapFee != type(uint256).max ? customSwapFee : factory.get(swapFeeName).toUint256() */
      pop
    tag_155:
        /* \"src/ReservoirPair.sol\":7469:7476  swapFee */
      0x07
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      sload
        /* \"src/ReservoirPair.sol\":7457:7476  _swapFee == swapFee */
      dup1
      dup3
      eq
        /* \"src/ReservoirPair.sol\":7453:7485  if (_swapFee == swapFee) return; */
      tag_156
      jumpi
        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */
      0x4e20
        /* \"src/ReservoirPair.sol\":7503:7527  _swapFee <= MAX_SWAP_FEE */
      dup3
      gt
        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */
      tag_158
      jumpi
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      0x40
        /* \"src/ReservoirPair.sol\":7567:7600  SwapFeeChanged(swapFee, _swapFee) */
      0xad321f810529281bbb90384fd6fecbdda41509a5ccd7bd5aed986ed827f6a026
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      swap2
      dup2
      mload
      swap1
      dup2
      mstore
        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */
      dup4
      0x20
      dup3
      add
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      mstore
        /* \"src/ReservoirPair.sol\":7567:7600  SwapFeeChanged(swapFee, _swapFee) */
      log1
        /* \"src/ReservoirPair.sol\":7469:7476  swapFee */
      0x07
        /* \"src/curve/stable/StableMintBurn.sol\":1286:1299  \"SP::swapFee\" */
      sstore
        /* \"src/ReservoirPair.sol\":7293:7635  function updateSwapFee() public {... */
      jump\t// out
        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */
    tag_158:
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      mload(0x40)
      shl(0xe5, 0x461bcd)
        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */
      dup2
      mstore
      0x20
      0x04
      dup3
      add
      mstore
      0x13
      0x24
      dup3
      add
        /* \"src/libraries/StableMath.sol\":607:613  10_000 */
      mstore
        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */
      0x503a20494e56414c49445f535741505f46454500000000000000000000000000
        /* \"src/libraries/StableMath.sol\":607:613  10_000 */
      0x44
      dup3
      add
        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */
      mstore
      0x64
      swap1
      revert
        /* \"src/ReservoirPair.sol\":7453:7485  if (_swapFee == swapFee) return; */
    tag_156:
        /* \"src/ReservoirPair.sol\":7478:7485  return; */
      pop
      pop
      jump\t// out
        /* \"src/ReservoirPair.sol\":7354:7443  customSwapFee != type(uint256).max ? customSwapFee : factory.get(swapFeeName).toUint256() */
    tag_153:
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      swap1
      pop
      0x01
      dup1
      0xa0
      shl
      sub
        /* \"src/ReservoirPair.sol\":7407:7414  factory */
      0xe0
        /* \"src/curve/stable/StableMintBurn.sol\":1286:1299  \"SP::swapFee\" */
      mload
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      and
        /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */
      0x20
        /* \"src/ReservoirPair.sol\":7419:7430  swapFeeName */
      0x0180
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      mload
      0x24
      mload(0x40)
      dup1
      swap5
      dup2
      swap4
      shl(0xe6, 0x023aa9ab)
        /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */
      dup4
      mstore
      0x04
      dup4
      add
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      mstore
        /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */
      gas
      staticcall
      swap2
      dup3
      iszero
      tag_160
      jumpi
      dup1
      swap3
      tag_162
      jumpi
        /* \"src/ReservoirPair.sol\":7354:7443  customSwapFee != type(uint256).max ? customSwapFee : factory.get(swapFeeName).toUint256() */
    tag_163:
      pop
      pop
      jump(tag_155)
        /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */
    tag_162:
      swap1
      swap2
      pop
      0x20
      dup3
      returndatasize
      dup3
      gt
      tag_164
      jumpi
    tag_165:
      dup2
      tag_166
      0x20
      swap4
      dup4
      tag_2
      jump\t// in
    tag_166:
      dup2
      add
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      sub
      slt
      tag_167
      jumpi
      pop
      mload
        /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */
      codesize
      dup1
      jump(tag_163)
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
    tag_167:
      dup1
      revert
        /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */
    tag_164:
      returndatasize
      swap2
      pop
      jump(tag_165)
    tag_160:
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      mload(0x40)
      swap1
      returndatasize
      swap1
      dup3
      returndatacopy
      returndatasize
      swap1
      revert
        /* \"src/ReservoirPair.sol\":7641:8058  function updatePlatformFee() public {... */
    tag_10:
        /* \"src/ReservoirPair.sol\":7722:7739  customPlatformFee */
      0x0a
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      sload
      not(0x00)
        /* \"src/ReservoirPair.sol\":7722:7760  customPlatformFee != type(uint256).max */
      dup2
      eq
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      tag_169
      jumpi
        /* \"src/ReservoirPair.sol\":7722:7826  customPlatformFee != type(uint256).max ? customPlatformFee : factory.read(PLATFORM_FEE_NAME).toUint256() */
    tag_171:
        /* \"src/ReservoirPair.sol\":7856:7867  platformFee */
      0x09
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      sload
        /* \"src/ReservoirPair.sol\":7840:7867  _platformFee == platformFee */
      dup1
      dup3
      eq
        /* \"src/ReservoirPair.sol\":7836:7876  if (_platformFee == platformFee) return; */
      tag_156
      jumpi
        /* \"src/ReservoirPair.sol\":2789:2796  500_000 */
      0x07a120
        /* \"src/ReservoirPair.sol\":7894:7926  _platformFee <= MAX_PLATFORM_FEE */
      dup3
      gt
        /* \"src/ReservoirPair.sol\":2789:2796  500_000 */
      tag_174
      jumpi
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      0x40
        /* \"src/ReservoirPair.sol\":7970:8015  PlatformFeeChanged(platformFee, _platformFee) */
      0xc98a8b10b63c929f7799380bb4a0c444c713ebf74d8732f944c915034121aad1
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      swap2
      dup2
      mload
      swap1
      dup2
      mstore
        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */
      dup4
      0x20
      dup3
      add
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      mstore
        /* \"src/ReservoirPair.sol\":7970:8015  PlatformFeeChanged(platformFee, _platformFee) */
      log1
        /* \"src/ReservoirPair.sol\":7856:7867  platformFee */
      0x09
        /* \"src/curve/stable/StableMintBurn.sol\":1286:1299  \"SP::swapFee\" */
      sstore
        /* \"src/ReservoirPair.sol\":7641:8058  function updatePlatformFee() public {... */
      jump\t// out
        /* \"src/ReservoirPair.sol\":2789:2796  500_000 */
    tag_174:
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      mload(0x40)
      shl(0xe5, 0x461bcd)
        /* \"src/ReservoirPair.sol\":2789:2796  500_000 */
      dup2
      mstore
      0x20
      0x04
      dup3
      add
      mstore
      0x17
      0x24
      dup3
      add
        /* \"src/libraries/StableMath.sol\":607:613  10_000 */
      mstore
        /* \"src/ReservoirPair.sol\":2789:2796  500_000 */
      0x503a20494e56414c49445f504c4154464f524d5f464545000000000000000000
        /* \"src/libraries/StableMath.sol\":607:613  10_000 */
      0x44
      dup3
      add
        /* \"src/ReservoirPair.sol\":2789:2796  500_000 */
      mstore
      0x64
      swap1
      revert
        /* \"src/ReservoirPair.sol\":7722:7826  customPlatformFee != type(uint256).max ? customPlatformFee : factory.read(PLATFORM_FEE_NAME).toUint256() */
    tag_169:
      pop
        /* \"src/ReservoirPair.sol\":7783:7790  factory */
      0xe0
        /* \"src/curve/stable/StableMintBurn.sol\":1286:1299  \"SP::swapFee\" */
      mload
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      mload(0x40)
        /* \"src/ReservoirPair.sol\":7783:7814  factory.read(PLATFORM_FEE_NAME) */
      tag_176
      swap2
      sub(shl(0xa0, 0x01), 0x01)
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      and
      tag_177
      dup3
      tag_1
      jump\t// in
    tag_177:
      0x13
      dup3
      mstore
      0x5368617265643a3a706c6174666f726d46656500000000000000000000000000
      0x20
      dup4
      add
      mstore
        /* \"src/ReservoirPair.sol\":7783:7814  factory.read(PLATFORM_FEE_NAME) */
      tag_11
      jump\t// in
    tag_176:
        /* \"src/ReservoirPair.sol\":7722:7826  customPlatformFee != type(uint256).max ? customPlatformFee : factory.read(PLATFORM_FEE_NAME).toUint256() */
      jump(tag_171)
        /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */
    tag_11:
      swap1
        /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */
      0x20
        /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */
      swap1
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      mload(0x40)
        /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */
      tag_178
      dup2
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      tag_53
        /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */
      dup6
      dup3
      add
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      dup1
      swap6
      tag_4
      jump\t// in
        /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */
    tag_178:
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      mload
        /* \"src/libraries/FactoryStore.sol\":476:509  keccak256(abi.encodePacked(aKey)) */
      swap1
      keccak256
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      mload(0x40)
      shl(0xe6, 0x023aa9ab)
        /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */
      dup2
      mstore
      0x04
      dup2
      add
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      swap2
      swap1
      swap2
      mstore
      swap2
      dup3
      swap1
      0x24
      swap1
      dup3
      swap1
      sub(shl(0xa0, 0x01), 0x01)
      and
        /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */
      gas
      staticcall
      swap1
      dup2
      iszero
      tag_62
      jumpi
      0x00
      swap2
      tag_182
      jumpi
        /* \"src/libraries/FactoryStore.sol\":456:510  return aFactory.get(keccak256(abi.encodePacked(aKey))) */
      pop
        /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */
      swap1
      jump\t// out
        /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */
    tag_182:
      swap1
        /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */
      0x20
        /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */
      dup3
      returndatasize
      dup3
      gt
      tag_184
      jumpi
    tag_185:
      dup2
      tag_186
        /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */
      0x20
        /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */
      swap4
      dup4
      tag_2
      jump\t// in
    tag_186:
      dup2
      add
        /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
      sub
      slt
      tag_167
      jumpi
      pop
      mload
        /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */
      swap1
      jump\t// out
        /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */
    tag_184:
      returndatasize
      swap2
      pop
      jump(tag_185)
    stop
    data_510e4e770828ddbf7f7b00ab00a9f6adaf81c0dc9cc85f1f8249c256942d61d9 290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563

    sub_0: assembly {
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x80
          0x40
          swap1
          dup1
          dup3
          mstore
          0x04
          swap2
          dup3
          calldatasize
          lt
          iszero
          tag_61
          jumpi
          0x00
          dup1
          revert
        tag_61:
          0x00
          swap3
          dup4
          calldataload
          0xe0
          shr
          swap3
          dup4
          0x06fdde03
          eq
          tag_63
          jumpi
          pop
          dup3
          0x0902f1ac
          eq
          tag_65
          jumpi
          dup3
          0x095ea7b3
          eq
          tag_67
          jumpi
          dup3
          0x0c472afd
          eq
          tag_69
          jumpi
          dup3
          0x0dfe1681
          eq
          tag_71
          jumpi
          dup3
          0x18160ddd
          eq
          tag_73
          jumpi
          dup3
          0x23b872dd
          eq
          tag_75
          jumpi
          dup3
          0x26232a2e
          eq
          tag_77
          jumpi
          dup3
          0x313ce567
          eq
          tag_79
          jumpi
          dup3
          0x31c49074
          eq
          tag_81
          jumpi
          dup3
          0x3644e515
          eq
          tag_83
          jumpi
          dup3
          0x3998a681
          eq
          tag_85
          jumpi
          dup3
          0x495bc0fb
          eq
          tag_87
          jumpi
          dup3
          0x4dfa1ff9
          eq
          tag_89
          jumpi
          dup3
          0x54cf2aeb
          eq
          tag_91
          jumpi
          dup3
          0x598362f0
          eq
          tag_93
          jumpi
          dup3
          0x6a627842
          eq
          tag_95
          jumpi
          dup3
          0x70a08231
          eq
          tag_97
          jumpi
          dup3
          0x7c3cbc7c
          eq
          tag_99
          jumpi
          dup3
          0x7ecebe00
          eq
          tag_101
          jumpi
          dup3
          0x85faf624
          eq
          tag_103
          jumpi
          dup3
          0x89afcb44
          eq
          tag_105
          jumpi
          dup3
          0x94217ad1
          eq
          tag_107
          jumpi
          dup3
          0x9568e73b
          eq
          tag_109
          jumpi
          dup3
          0x95d89b41
          eq
          tag_111
          jumpi
          dup3
          0x97e37764
          eq
          tag_113
          jumpi
          dup3
          0x9be65a60
          eq
          tag_115
          jumpi
          dup3
          0x9d62a694
          eq
          tag_117
          jumpi
          dup3
          0xa9059cbb
          eq
          tag_119
          jumpi
          dup3
          0xab3d8544
          eq
          tag_121
          jumpi
          dup3
          0xad7853e9
          eq
          tag_123
          jumpi
          dup3
          0xafb4a43b
          eq
          tag_125
          jumpi
          dup3
          0xb62221e0
          eq
          tag_127
          jumpi
          dup3
          0xba9a7a56
          eq
          tag_129
          jumpi
          dup3
          0xbc25cf77
          eq
          tag_131
          jumpi
          dup3
          0xc45a0155
          eq
          tag_133
          jumpi
          dup3
          0xc58771ef
          eq
          tag_135
          jumpi
          dup3
          0xd0ebdbe7
          eq
          tag_137
          jumpi
          dup3
          0xd21220a7
          eq
          tag_139
          jumpi
          dup3
          0xd505accf
          eq
          tag_141
          jumpi
          dup3
          0xdb6488dc
          eq
          tag_143
          jumpi
          dup3
          0xdbc781bc
          eq
          tag_145
          jumpi
          dup3
          0xdd62ed3e
          eq
          tag_147
          jumpi
          dup3
          0xe12bd9d8
          eq
          tag_149
          jumpi
          pop
          dup2
          0xe9bdf7b8
          eq
          tag_151
          jumpi
          pop
          0xfff6cae9
          eq
          tag_153
          jumpi
          0x00
          dup1
          revert
        tag_153:
          jumpi(tag_157, callvalue)
          dup1
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_157
          jumpi
            /* \"src/ReservoirPair.sol\":6307:6326  lBlockTimestampLast */
          tag_159
            /* \"src/ReservoirPair.sol\":6191:6225  _syncManaged(lReserve0, lReserve1) */
          tag_160
            /* \"src/ReservoirPair.sol\":6142:6156  _lockAndLoad() */
          tag_161
          tag_12
          jump\t// in
        tag_161:
          pop
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap3
          swap2
          0xffffffffffffffffffffffffff
          swap2
          dup3
          and
          swap2
          and
            /* \"src/ReservoirPair.sol\":6191:6225  _syncManaged(lReserve0, lReserve1) */
          tag_26
          jump\t// in
        tag_160:
            /* \"src/ReservoirPair.sol\":6253:6267  _totalToken0() */
          swap1
          tag_162
          tag_23
          jump\t// in
        tag_162:
            /* \"src/ReservoirPair.sol\":6269:6283  _totalToken1() */
          tag_163
          tag_24
          jump\t// in
        tag_163:
            /* \"src/ReservoirPair.sol\":6307:6326  lBlockTimestampLast */
          swap1
          tag_21
          jump\t// in
        tag_159:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup1
          return
        tag_157:
          dup1
          revert
        tag_151:
          swap1
          pop
          jumpi(tag_166, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_166
          jumpi
          0x20
          swap1
          0xffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":12800:12828  uint104 public token0Managed */
          0x0c
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
          and
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_166:
          pop
          dup1
          revert
        tag_149:
          dup4
          jumpi(tag_157, callvalue)
          jumpi(tag_157, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x80))
          calldataload(0x24)
          dup1
          iszero
          iszero
          sub
          tag_157
          jumpi
          calldataload(0x44)
          0xffffffffffffffffffffffffffffffffffffffff
          dup2
          and
          sub
          tag_157
          jumpi
          calldataload(0x64)
          0xffffffffffffffff
          dup1
          dup3
          gt
          tag_180
          jumpi
          calldatasize
          0x23
          dup4
          add
          slt
          iszero
          tag_180
          jumpi
          dup2
          dup5
          add
          calldataload
          swap1
          dup2
          gt
          tag_180
          jumpi
          calldatasize
          swap2
          add
          0x24
          add
          gt
          tag_157
          jumpi
          pop
          0x20
          0x64
          swap3
          mload
            /* \"src/curve/stable/StableMintBurn.sol\":6123:6148  revert(\"SMB: IMPOSSIBLE\") */
          swap2
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          dup3
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mstore
          0x0f
          0x24
          dup3
          add
          mstore
          0x534d423a20494d504f535349424c450000000000000000000000000000000000
          0x44
          dup3
          add
          mstore
            /* \"src/curve/stable/StableMintBurn.sol\":6123:6148  revert(\"SMB: IMPOSSIBLE\") */
          revert
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
        tag_180:
          dup3
          dup1
          revert
        tag_147:
          swap1
          swap2
          pop
          jumpi(tag_180, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_180
          jumpi
          0x20
          swap3
          dup3
          swap2
          tag_188
          tag_7
          jump\t// in
        tag_188:
          tag_189
          tag_8
          jump\t// in
        tag_189:
          swap2
          0xffffffffffffffffffffffffffffffffffffffff
          dup1
          swap3
          and
          dup5
          mstore
          dup7
          mstore
          dup4
          dup4
          keccak256
          swap2
          and
          dup3
          mstore
          dup5
          mstore
          keccak256
          sload
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_145:
          dup4
          jumpi(tag_157, callvalue)
          dup1
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_157
          jumpi
          tag_159
          tag_16
          jump\t// in
        tag_143:
          dup4
          dup3
          jumpi(tag_166, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_166
          jumpi
          0x20
          swap1
          mload
            /* \"src/ReservoirPair.sol\":2723:2732  1_000_000 */
          0x0f4240
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup2
          mstore
          return
        tag_141:
          dup4
          dup3
          jumpi(tag_166, callvalue)
          jumpi(tag_166, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0xe0))
          tag_203
          tag_7
          jump\t// in
        tag_203:
          tag_204
          tag_8
          jump\t// in
        tag_204:
          calldataload(0x44)
          calldataload(0x64)
          swap4
          calldataload(0x84)
          swap4
          0xff
          dup6
          and
          dup1
          swap6
          sub
          tag_205
          jumpi
            /* \"lib/solmate/src/tokens/ERC20.sol\":4057:4072  block.timestamp */
          timestamp
            /* \"lib/solmate/src/tokens/ERC20.sol\":4045:4072  deadline >= block.timestamp */
          dup7
          lt
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          tag_207
          jumpi
            /* \"lib/solmate/src/tokens/ERC20.sol\":4428:4446  DOMAIN_SEPARATOR() */
          tag_209
          tag_10
          jump\t// in
        tag_209:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap5
          0xffffffffffffffffffffffffffffffffffffffff
          dup1
          swap3
          and
          swap6
          dup7
          dup10
          mstore
          0x20
          swap6
            /* \"lib/solmate/src/tokens/ERC20.sol\":4873:4879  nonces */
          0x05
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup8
          mstore
          dup5
          dup11
          keccak256
          swap9
          dup10
          sload
          swap10
          0x01
          dup12
          add
          swap1
          sstore
          dup6
          mload
            /* \"lib/solmate/src/tokens/ERC20.sol\":4511:4960  abi.encode(... */
          swap1
          dup6
          dup10
          dup4
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap4
            /* \"lib/solmate/src/tokens/ERC20.sol\":4555:4720  keccak256(... */
          0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup6
          mstore
          dup12
          dup10
          dup6
          add
          mstore
          and
          swap11
          dup12
          0x60
          dup5
          add
          mstore
          dup9
          0x80
          dup5
          add
          mstore
          0xa0
          dup4
          add
          mstore
          0xc0
          dup3
          add
          mstore
          0xc0
            /* \"lib/solmate/src/tokens/ERC20.sol\":4511:4960  abi.encode(... */
          dup2
          mstore
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xe0
          dup2
          add
          swap2
          dup2
          dup4
          lt
          0xffffffffffffffff
          dup5
          gt
          or
          tag_210
          jumpi
          swap3
          dup3
          dup10
          swap6
          swap3
          0x0122
          dup15
          swap7
          0x80
          swap7
          dup12
          mstore
          dup3
          mload
            /* \"lib/solmate/src/tokens/ERC20.sol\":4472:4986  keccak256(... */
          swap1
          keccak256
            /* \"lib/solmate/src/tokens/ERC20.sol\":4350:5008  abi.encodePacked(... */
          swap2
          0x0100
          dup2
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap5
          0x1901000000000000000000000000000000000000000000000000000000000000
          dup7
          mstore
          0x0102
          dup3
          add
          mstore
          add
          mstore
          0x42
            /* \"lib/solmate/src/tokens/ERC20.sol\":4350:5008  abi.encodePacked(... */
          dup2
          mstore
          tag_212
          dup2
          tag_2
          jump\t// in
        tag_212:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mload
            /* \"lib/solmate/src/tokens/ERC20.sol\":4319:5026  keccak256(... */
          swap1
          keccak256
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap1
          dup7
          mload
          swap2
          dup3
          mstore
          dup5
          dup3
          add
          mstore
          calldataload(0xa4)
          dup7
          dup3
          add
          mstore
          calldataload(0xc4)
          0x60
          dup3
          add
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":4292:5097  ecrecover(... */
          dup3
          dup1
          mstore
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x01
            /* \"lib/solmate/src/tokens/ERC20.sol\":4292:5097  ecrecover(... */
          gas
          staticcall
          iszero
          tag_213
          jumpi
          dup7
          mload
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          and
            /* \"lib/solmate/src/tokens/ERC20.sol\":5120:5150  recoveredAddress != address(0) */
          swap7
          dup8
          iszero
          iszero
            /* \"lib/solmate/src/tokens/ERC20.sol\":5120:5179  recoveredAddress != address(0) && recoveredAddress == owner */
          dup1
          tag_215
          jumpi
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
        tag_216:
          iszero
          tag_217
          jumpi
          dup7
          swap8
            /* \"lib/solmate/src/tokens/ERC20.sol\":5283:5314  Approval(owner, spender, value) */
          0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap6
          swap7
          swap8
          mstore
          dup4
          mstore
          dup1
          dup8
          keccak256
          dup7
          dup9
          mstore
          dup4
          mstore
          dup2
          dup2
          dup9
          keccak256
          sstore
          mload
          swap1
          dup2
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":5283:5314  Approval(owner, spender, value) */
          log3
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup1
          return
        tag_217:
          dup4
          0x64
          swap3
          mload
          swap2
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          dup3
          add
          mstore
          0x0e
          0x24
          dup3
          add
          mstore
          0x494e56414c49445f5349474e4552000000000000000000000000000000000000
          0x44
          dup3
          add
          mstore
          revert
            /* \"lib/solmate/src/tokens/ERC20.sol\":5120:5179  recoveredAddress != address(0) && recoveredAddress == owner */
        tag_215:
            /* \"lib/solmate/src/tokens/ERC20.sol\":5154:5179  recoveredAddress == owner */
          pop
          dup5
          dup9
          eq
            /* \"lib/solmate/src/tokens/ERC20.sol\":5120:5179  recoveredAddress != address(0) && recoveredAddress == owner */
          jump(tag_216)
            /* \"lib/solmate/src/tokens/ERC20.sol\":4292:5097  ecrecover(... */
        tag_213:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup2
          mload
          returndatasize
          dup9
          dup3
          returndatacopy
          returndatasize
          swap1
          revert
        tag_210:
          0x24
          dup13
          0x41
          dup16
          0x4e487b7100000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          mstore
          revert
        tag_207:
          0x64
          dup9
          0x20
          dup5
          mload
          swap2
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          dup3
          add
          mstore
          0x17
          0x24
          dup3
          add
          mstore
          0x5045524d49545f444541444c494e455f45585049524544000000000000000000
          0x44
          dup3
          add
          mstore
          revert
        tag_205:
          dup7
          dup1
          revert
        tag_139:
          dup4
          dup3
          jumpi(tag_166, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_166
          jumpi
          0x20
          swap1
          mload
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":2950:2979  ERC20 public immutable token1 */
          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          and
          dup2
          mstore
          return
        tag_137:
          swap1
          swap2
          pop
          jumpi(tag_180, callvalue)
          jumpi(tag_180, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))
          dup1
          calldataload
          swap2
          0xffffffffffffffffffffffffffffffffffffffff
          dup1
          dup5
          and
          dup1
          swap5
          sub
          tag_227
          jumpi
            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */
          tag_229
            /* \"src/ReservoirPair.sol\":3741:3748  factory */
          swap1
          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":3719:3729  msg.sender */
          caller
            /* \"src/ReservoirPair.sol\":3719:3749  msg.sender == address(factory) */
          eq
            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */
          tag_14
          jump\t// in
        tag_229:
            /* \"src/ReservoirPair.sol\":12690:12703  token0Managed */
          0x0c
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
          0xffffffffffffffffffffffffff
          dup1
          dup3
          and
            /* \"src/ReservoirPair.sol\":12690:12708  token0Managed == 0 */
          iszero
            /* \"src/ReservoirPair.sol\":12690:12730  token0Managed == 0 && token1Managed == 0 */
          swap2
          dup3
          tag_230
          jumpi
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
        tag_231:
          pop
          pop
          iszero
          tag_232
          jumpi
          pop
          pop
          0xffffffffffffffffffffffff0000000000000000000000000000000000000000
            /* \"src/ReservoirPair.sol\":12765:12787  assetManager = manager */
          0x0b
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
          and
          or
            /* \"src/ReservoirPair.sol\":12765:12787  assetManager = manager */
          0x0b
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sstore
          dup1
          return
        tag_232:
          swap1
          0x20
          0x64
          swap3
          mload
          swap2
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          dup3
          add
          mstore
          0x14
          0x24
          dup3
          add
          mstore
          0x414d503a20414d5f5354494c4c5f414354495645000000000000000000000000
          0x44
          dup3
          add
          mstore
          revert
            /* \"src/ReservoirPair.sol\":12690:12730  token0Managed == 0 && token1Managed == 0 */
        tag_230:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x68
          shr
          and
            /* \"src/ReservoirPair.sol\":12712:12730  token1Managed == 0 */
          iszero
          swap1
          pop
            /* \"src/ReservoirPair.sol\":12690:12730  token0Managed == 0 && token1Managed == 0 */
          codesize
          dup1
          jump(tag_231)
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
        tag_227:
          dup5
          dup1
          revert
        tag_135:
          dup4
          dup3
          jumpi(tag_166, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_166
          jumpi
          0x20
          swap1
            /* \"src/ReservoirPair.sol\":3488:3536  uint256 public customSwapFee = type(uint256).max */
          0x08
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_133:
          dup4
          dup3
          jumpi(tag_166, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_166
          jumpi
          0x20
          swap1
          mload
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":2870:2909  GenericFactory public immutable factory */
          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          and
          dup2
          mstore
          return
        tag_131:
          dup4
          jumpi(tag_157, callvalue)
          jumpi(tag_157, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))
            /* \"src/ReservoirPair.sol\":5579:5584  false */
          tag_159
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          tag_247
          tag_7
          jump\t// in
        tag_247:
            /* \"src/ReservoirPair.sol\":6689:6698  lReserve1 */
          tag_248
            /* \"src/ReservoirPair.sol\":6506:6520  _lockAndLoad() */
          tag_249
          tag_12
          jump\t// in
        tag_249:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          pop
          swap4
          swap2
          0xffffffffffffffffffffffffff
          dup1
          swap2
          and
          swap2
          and
            /* \"src/ReservoirPair.sol\":6561:6575  _totalToken0() */
          swap2
            /* \"src/ReservoirPair.sol\":6600:6609  lReserve1 */
          tag_250
            /* \"src/ReservoirPair.sol\":6561:6575  _totalToken0() */
          dup4
          dup4
            /* \"src/ReservoirPair.sol\":6561:6587  _totalToken0() - lReserve0 */
          tag_251
            /* \"src/ReservoirPair.sol\":6561:6575  _totalToken0() */
          dup2
          tag_252
          tag_23
          jump\t// in
        tag_252:
            /* \"src/ReservoirPair.sol\":6561:6587  _totalToken0() - lReserve0 */
          tag_9
          jump\t// in
        tag_251:
            /* \"src/ReservoirPair.sol\":6548:6554  token0 */
          dup5
          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")
            /* \"src/ReservoirPair.sol\":6600:6609  lReserve1 */
          tag_19
          jump\t// in
        tag_250:
            /* \"src/ReservoirPair.sol\":6650:6676  _totalToken1() - lReserve1 */
          tag_253
            /* \"src/ReservoirPair.sol\":6650:6664  _totalToken1() */
          dup4
          tag_252
          tag_24
          jump\t// in
            /* \"src/ReservoirPair.sol\":6650:6676  _totalToken1() - lReserve1 */
        tag_253:
            /* \"src/ReservoirPair.sol\":6637:6643  token1 */
          swap1
          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")
            /* \"src/ReservoirPair.sol\":6689:6698  lReserve1 */
          tag_19
          jump\t// in
        tag_248:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffff
          0xffffffff0000000000000000000000000000000000000000000000000000
            /* \"src/ReservoirPair.sol\":4847:4853  _slot0 */
          0x06
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
          swap3
          0xd0
          shl
          and
          swap2
          and
          or
            /* \"src/ReservoirPair.sol\":4847:4853  _slot0 */
          0x06
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sstore
            /* \"src/ReservoirPair.sol\":4701:4899  function _writeSlot0Timestamp(uint32 aTimestamp, bool aLocked) internal {... */
          jump
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
        tag_129:
          dup4
          dup3
          jumpi(tag_166, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_166
          jumpi
          0x20
          swap1
          mload
            /* \"src/ReservoirPair.sol\":2671:2678  10 ** 3 */
          0x03e8
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup2
          mstore
          return
        tag_127:
          dup4
          dup3
          jumpi(tag_166, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_166
          jumpi
          0x20
          swap1
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":17166:17193  address public oracleCaller */
          0x01000f
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
          and
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_125:
          swap1
          swap2
          pop
          jumpi(tag_180, callvalue)
          jumpi(tag_180, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))
            /* \"src/ReservoirPair.sol\":7139:7202  CustomPlatformFeeChanged(customPlatformFee, aCustomPlatformFee) */
          0xe044af8ebdaeeed3e95065fac857c503c7eabb71acfbcdcb7823ec6ca603c26e
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap1
          calldataload
            /* \"src/ReservoirPair.sol\":3741:3748  factory */
          swap2
            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */
          tag_267
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":3741:3748  factory */
          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":3719:3729  msg.sender */
          caller
            /* \"src/ReservoirPair.sol\":3719:3749  msg.sender == address(factory) */
          eq
            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */
          tag_14
          jump\t// in
        tag_267:
            /* \"src/ReservoirPair.sol\":7164:7181  customPlatformFee */
          0x0a
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
          dup2
          mload
          swap1
          dup2
          mstore
          dup4
          0x20
          dup3
          add
          mstore
            /* \"src/ReservoirPair.sol\":7139:7202  CustomPlatformFeeChanged(customPlatformFee, aCustomPlatformFee) */
          log1
            /* \"src/ReservoirPair.sol\":7164:7181  customPlatformFee */
          0x0a
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sstore
            /* \"src/ReservoirPair.sol\":7212:7250  customPlatformFee = aCustomPlatformFee */
          tag_159
          tag_16
          jump\t// in
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
        tag_123:
          dup4
          dup3
          jumpi(tag_166, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_166
          jumpi
          0x20
          swap1
          0xffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":12834:12862  uint104 public token1Managed */
          0x0c
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
          0x68
          shr
          and
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_121:
          dup4
          dup3
          jumpi(tag_166, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_166
          jumpi
          0x20
          swap1
          mload
            /* \"src/ReservoirPair.sol\":2849:2855  20_000 */
          0x4e20
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup2
          mstore
          return
        tag_119:
          dup4
          dup3
          jumpi(tag_166, callvalue)
          dup1
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_166
          jumpi
          0x20
          swap2
          tag_281
          tag_7
          jump\t// in
        tag_281:
          dup3
          0xffffffffffffffffffffffffffffffffffffffff
          calldataload(0x24)
            /* \"lib/solmate/src/tokens/ERC20.sol\":2774:2784  msg.sender */
          swap3
          caller
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup6
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":2764:2773  balanceOf */
          0x03
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup8
          mstore
          dup3
          dup6
          keccak256
            /* \"lib/solmate/src/tokens/ERC20.sol\":2764:2795  balanceOf[msg.sender] -= amount */
          tag_282
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup6
          dup3
          sload
            /* \"lib/solmate/src/tokens/ERC20.sol\":2764:2795  balanceOf[msg.sender] -= amount */
          tag_9
          jump\t// in
        tag_282:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap1
          sstore
          and
          swap3
          dup4
          dup2
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":2764:2773  balanceOf */
          0x03
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup7
          mstore
          keccak256
          dup2
          dup2
          sload
          add
          swap1
          sstore
          dup3
          mload
          swap1
          dup2
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":2990:3022  Transfer(msg.sender, to, amount) */
          0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
            /* \"lib/solmate/src/tokens/ERC20.sol\":2774:2784  msg.sender */
          dup5
          caller
            /* \"lib/solmate/src/tokens/ERC20.sol\":2990:3022  Transfer(msg.sender, to, amount) */
          swap3
          log3
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mload
          0x01
          dup2
          mstore
          return
        tag_117:
          dup4
          jumpi(tag_157, callvalue)
          jumpi(tag_157, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))
          dup2
          calldataload
          swap2
          dup2
          0x60
          dup6
          mload
          tag_287
          dup2
          tag_2
          jump\t// in
        tag_287:
          dup3
          dup2
          mstore
          dup3
          0x20
          dup3
          add
          mstore
          dup3
          dup8
          dup3
          add
          mstore
          add
          mstore
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":17325:17337  oracleCaller */
          0x01000f
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
          and
            /* \"src/ReservoirPair.sol\":17311:17321  msg.sender */
          caller
            /* \"src/ReservoirPair.sol\":17311:17337  msg.sender == oracleCaller */
          sub
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          tag_288
          jumpi
          0x010000
          dup4
          lt
          iszero
          tag_290
          jumpi
          0x80
          dup4
          0xffffffff
          dup7
          dup1
          mload
          swap3
          tag_292
          dup5
          tag_2
          jump\t// in
        tag_292:
            /* \"src/ReservoirPair.sol\":17388:17401  _observations */
          0x0d
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          add
          sload
          swap1
          dup2
            /* \"src/ReservoirPair.sol\":17388:17401  _observations */
          0x0d
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          signextend
          swap4
          dup5
          dup2
          mstore
          0x20
          dup2
          add
          dup4
          0x70
          shr
          0x06
          signextend
          dup2
          mstore
          0x60
          dup4
          dup4
          add
          swap3
          dup6
          0xa8
          shr
          0x06
          signextend
          dup5
          mstore
          add
          swap4
          0xe0
          shr
          dup5
          mstore
          dup3
          mload
          swap6
          dup7
          mstore
          mload
          0x06
          signextend
          0x20
          dup7
          add
          mstore
          mload
          0x06
          signextend
          swap1
          dup5
          add
          mstore
          mload
          and
          0x60
          dup3
          add
          mstore
          return
        tag_290:
          swap1
          0x32
          0x24
          swap3
          0x4e487b7100000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          mstore
          revert
        tag_288:
          0x64
          swap1
          0x20
          dup6
          mload
          swap2
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          dup3
          add
          mstore
          0x15
          0x24
          dup3
          add
          mstore
          0x4f573a204e4f545f4f5241434c455f43414c4c45520000000000000000000000
          0x44
          dup3
          add
          mstore
          revert
        tag_115:
          swap2
          pop
          jumpi(tag_180, callvalue)
          0x20
          swap2
          dup3
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_314
          jumpi
            /* \"src/ReservoirPair.sol\":8142:8170  factory.read(RECOVERER_NAME) */
          tag_297
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap3
          tag_298
          tag_7
          jump\t// in
        tag_298:
          swap1
          dup4
          mload
          tag_299
          dup2
          tag_3
          jump\t// in
        tag_299:
          0x18
          dup2
          mstore
          0x5368617265643a3a64656661756c745265636f76657265720000000000000000
          dup3
          dup3
          add
          mstore
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":8142:8149  factory */
          swap6
          dup7
          swap2
          dup3
          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":8142:8170  factory.read(RECOVERER_NAME) */
          tag_52
          jump\t// in
        tag_297:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          and
          swap3
          dup6
          dup4
          and
            /* \"src/ReservoirPair.sol\":8218:8224  token0 */
          swap6
          dup1
          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":8200:8225  aToken != address(token0) */
          dup8
          eq
          iszero
            /* \"src/ReservoirPair.sol\":8200:8254  aToken != address(token0) && aToken != address(token1) */
          swap1
          dup2
          tag_300
          jumpi
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
        tag_301:
            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */
          pop
          iszero
          tag_302
          jumpi
            /* \"src/ReservoirPair.sol\":8304:8328  _recoverer != address(0) */
          dup4
          iszero
            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */
          tag_304
          jumpi
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup2
          swap1
          0x24
          dup7
          mload
            /* \"src/ReservoirPair.sol\":8396:8434  ERC20(aToken).balanceOf(address(this)) */
          dup1
          swap9
          dup2
          swap4
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x70a0823100000000000000000000000000000000000000000000000000000000
            /* \"src/ReservoirPair.sol\":8396:8434  ERC20(aToken).balanceOf(address(this)) */
          dup4
          mstore
            /* \"src/ReservoirPair.sol\":8428:8432  this */
          address
            /* \"src/ReservoirPair.sol\":8396:8434  ERC20(aToken).balanceOf(address(this)) */
          swap1
          dup4
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mstore
            /* \"src/ReservoirPair.sol\":8396:8434  ERC20(aToken).balanceOf(address(this)) */
          gas
          staticcall
          swap4
          dup5
          iszero
          tag_306
          jumpi
          pop
          dup6
          swap4
          tag_308
          jumpi
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
        tag_309:
            /* \"src/ReservoirPair.sol\":8445:8496  _safeTransfer(aToken, _recoverer, _amountToRecover) */
          pop
          tag_310
          swap4
          pop
          tag_17
          jump\t// in
        tag_310:
          pop
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup1
          return
            /* \"src/ReservoirPair.sol\":8396:8434  ERC20(aToken).balanceOf(address(this)) */
        tag_308:
          swap1
          swap3
          pop
          dup4
          dup2
          returndatasize
          dup4
          gt
          tag_311
          jumpi
        tag_312:
          tag_313
          dup2
          dup4
          tag_4
          jump\t// in
        tag_313:
          dup2
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sub
          slt
          tag_314
          jumpi
            /* \"src/ReservoirPair.sol\":8445:8496  _safeTransfer(aToken, _recoverer, _amountToRecover) */
          tag_310
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap3
          mload
            /* \"src/ReservoirPair.sol\":8396:8434  ERC20(aToken).balanceOf(address(this)) */
          swap2
          codesize
          jump(tag_309)
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
        tag_314:
          dup4
          dup1
          revert
            /* \"src/ReservoirPair.sol\":8396:8434  ERC20(aToken).balanceOf(address(this)) */
        tag_311:
          pop
          returndatasize
          jump(tag_312)
        tag_306:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mload
          returndatasize
          dup8
          dup3
          returndatacopy
          returndatasize
          swap1
          revert
            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */
        tag_304:
          0x64
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap2
          dup6
          mload
            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */
          swap2
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          dup3
          add
          mstore
          0x19
          0x24
          dup3
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mstore
            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */
          0x503a205245434f56455245525f5a45524f5f4144445245535300000000000000
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x44
          dup3
          add
            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */
          mstore
          revert
        tag_302:
          0x64
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap2
          dup6
          mload
            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */
          swap2
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          dup3
          add
          mstore
          0x1b
          0x24
          dup3
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mstore
            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */
          0x503a20494e56414c49445f544f4b454e5f544f5f5245434f5645520000000000
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x44
          dup3
          add
            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */
          mstore
          revert
            /* \"src/ReservoirPair.sol\":8200:8254  aToken != address(token0) && aToken != address(token1) */
        tag_300:
            /* \"src/ReservoirPair.sol\":8247:8253  token1 */
          swap1
          pop
          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":8229:8254  aToken != address(token1) */
          dup7
          eq
          iszero
            /* \"src/ReservoirPair.sol\":8200:8254  aToken != address(token0) && aToken != address(token1) */
          codesize
          jump(tag_301)
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
        tag_113:
          swap1
          swap2
          pop
          jumpi(tag_180, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_180
          jumpi
          dup1
          calldataload
          swap1
          calldataload(0x24)
          swap3
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":14884:14896  assetManager */
          0x0b
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
          and
            /* \"src/ReservoirPair.sol\":14862:14872  msg.sender */
          caller
            /* \"src/ReservoirPair.sol\":14862:14897  msg.sender == address(assetManager) */
          sub
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          tag_320
          jumpi
          pop
          pop
            /* \"src/ReservoirPair.sol\":14938:14955  aToken0Change > 0 */
          dup3
          dup2
          sgt
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          iszero
          tag_322
          jumpi
            /* \"src/ReservoirPair.sol\":14988:15022  uint256(aToken0Change).toUint104() */
          tag_324
            /* \"src/ReservoirPair.sol\":15073:15112  token0.safeTransfer(msg.sender, lDelta) */
          tag_325
            /* \"src/ReservoirPair.sol\":14988:15022  uint256(aToken0Change).toUint104() */
          swap2
          tag_27
          jump\t// in
        tag_324:
            /* \"src/ReservoirPair.sol\":15036:15059  token0Managed += lDelta */
          0x0c
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
          swap1
          0xffffffffffffffffffffffffff
          swap2
          0xffffffffffffffffffffffffffffffffffffff00000000000000000000000000
          dup4
            /* \"src/ReservoirPair.sol\":15036:15059  token0Managed += lDelta */
          tag_326
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup5
          dup3
          dup6
          and
            /* \"src/ReservoirPair.sol\":15036:15059  token0Managed += lDelta */
          tag_32
          jump\t// in
        tag_326:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          and
          swap2
          and
          or
            /* \"src/ReservoirPair.sol\":15036:15059  token0Managed += lDelta */
          0x0c
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sstore
          and
            /* \"src/ReservoirPair.sol\":14862:14872  msg.sender */
          caller
            /* \"src/ReservoirPair.sol\":15073:15079  token0 */
          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")
            /* \"src/ReservoirPair.sol\":15073:15112  token0.safeTransfer(msg.sender, lDelta) */
          tag_34
          jump\t// in
        tag_325:
            /* \"src/ReservoirPair.sol\":15406:15423  aToken1Change > 0 */
          dup2
          dup2
          sgt
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          iszero
          tag_328
          jumpi
            /* \"src/ReservoirPair.sol\":15456:15490  uint256(aToken1Change).toUint104() */
          tag_330
            /* \"src/ReservoirPair.sol\":15595:15634  token1.safeTransfer(msg.sender, lDelta) */
          tag_159
            /* \"src/ReservoirPair.sol\":15456:15490  uint256(aToken1Change).toUint104() */
          swap2
          tag_27
          jump\t// in
        tag_330:
            /* \"src/ReservoirPair.sol\":15557:15580  token1Managed += lDelta */
          0x0c
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
          swap1
          0xffffffffffffffffffffffffff
          swap2
          0xffffffffffff00000000000000000000000000ffffffffffffffffffffffffff
          0xffffffffffffffffffffffffff00000000000000000000000000
            /* \"src/ReservoirPair.sol\":15557:15580  token1Managed += lDelta */
          tag_332
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup5
          dup7
          dup6
          0x68
          shr
          and
            /* \"src/ReservoirPair.sol\":15557:15580  token1Managed += lDelta */
          tag_32
          jump\t// in
        tag_332:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x68
          shl
          and
          swap2
          and
          or
            /* \"src/ReservoirPair.sol\":15557:15580  token1Managed += lDelta */
          0x0c
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sstore
          and
            /* \"src/ReservoirPair.sol\":14862:14872  msg.sender */
          caller
            /* \"src/ReservoirPair.sol\":15595:15601  token1 */
          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")
            /* \"src/ReservoirPair.sol\":15595:15634  token1.safeTransfer(msg.sender, lDelta) */
          tag_34
          jump\t// in
            /* \"src/ReservoirPair.sol\":15402:15914  if (aToken1Change > 0) {... */
        tag_328:
            /* \"src/ReservoirPair.sol\":15655:15672  aToken1Change < 0 */
          dup2
          dup2
          slt
            /* \"src/ReservoirPair.sol\":15651:15914  if (aToken1Change < 0) {... */
          tag_334
          jumpi
            /* \"src/ReservoirPair.sol\":15402:15914  if (aToken1Change > 0) {... */
          pop
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup1
          return
            /* \"src/ReservoirPair.sol\":15651:15914  if (aToken1Change < 0) {... */
        tag_334:
            /* \"src/ReservoirPair.sol\":15705:15740  uint256(-aToken1Change).toUint104() */
          tag_336
            /* \"src/ReservoirPair.sol\":15713:15727  -aToken1Change */
          tag_337
            /* \"src/ReservoirPair.sol\":15845:15903  token1.safeTransferFrom(msg.sender, address(this), lDelta) */
          tag_159
            /* \"src/ReservoirPair.sol\":15713:15727  -aToken1Change */
          swap3
          tag_30
          jump\t// in
        tag_337:
            /* \"src/ReservoirPair.sol\":15705:15740  uint256(-aToken1Change).toUint104() */
          tag_27
          jump\t// in
        tag_336:
            /* \"src/ReservoirPair.sol\":15807:15830  token1Managed -= lDelta */
          0x0c
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
          swap1
          0xffffffffffffffffffffffffff
          swap2
          0xffffffffffff00000000000000000000000000ffffffffffffffffffffffffff
          0xffffffffffffffffffffffffff00000000000000000000000000
            /* \"src/ReservoirPair.sol\":15807:15830  token1Managed -= lDelta */
          tag_339
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup5
          dup7
          dup6
          0x68
          shr
          and
            /* \"src/ReservoirPair.sol\":15807:15830  token1Managed -= lDelta */
          tag_31
          jump\t// in
        tag_339:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x68
          shl
          and
          swap2
          and
          or
            /* \"src/ReservoirPair.sol\":15807:15830  token1Managed -= lDelta */
          0x0c
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sstore
          and
            /* \"src/ReservoirPair.sol\":15889:15893  this */
          address
            /* \"src/ReservoirPair.sol\":14862:14872  msg.sender */
          caller
            /* \"src/ReservoirPair.sol\":15845:15851  token1 */
          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")
            /* \"src/ReservoirPair.sol\":15845:15903  token1.safeTransferFrom(msg.sender, address(this), lDelta) */
          tag_33
          jump\t// in
            /* \"src/ReservoirPair.sol\":14934:15392  if (aToken0Change > 0) {... */
        tag_322:
            /* \"src/ReservoirPair.sol\":15133:15150  aToken0Change < 0 */
          dup3
          dup2
          slt
            /* \"src/ReservoirPair.sol\":15129:15392  if (aToken0Change < 0) {... */
          tag_340
          jumpi
            /* \"src/ReservoirPair.sol\":14934:15392  if (aToken0Change > 0) {... */
        tag_341:
          pop
          jump(tag_325)
            /* \"src/ReservoirPair.sol\":15129:15392  if (aToken0Change < 0) {... */
        tag_340:
            /* \"src/ReservoirPair.sol\":15183:15218  uint256(-aToken0Change).toUint104() */
          tag_342
            /* \"src/ReservoirPair.sol\":15191:15205  -aToken0Change */
          tag_337
            /* \"src/ReservoirPair.sol\":15323:15381  token0.safeTransferFrom(msg.sender, address(this), lDelta) */
          tag_344
            /* \"src/ReservoirPair.sol\":15191:15205  -aToken0Change */
          swap3
          tag_30
          jump\t// in
            /* \"src/ReservoirPair.sol\":15183:15218  uint256(-aToken0Change).toUint104() */
        tag_342:
            /* \"src/ReservoirPair.sol\":15285:15308  token0Managed -= lDelta */
          0x0c
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
          swap1
          0xffffffffffffffffffffffffff
          swap2
          0xffffffffffffffffffffffffffffffffffffff00000000000000000000000000
          dup4
            /* \"src/ReservoirPair.sol\":15285:15308  token0Managed -= lDelta */
          tag_345
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup5
          dup3
          dup6
          and
            /* \"src/ReservoirPair.sol\":15285:15308  token0Managed -= lDelta */
          tag_31
          jump\t// in
        tag_345:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          and
          swap2
          and
          or
            /* \"src/ReservoirPair.sol\":15285:15308  token0Managed -= lDelta */
          0x0c
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sstore
          and
            /* \"src/ReservoirPair.sol\":15367:15371  this */
          address
            /* \"src/ReservoirPair.sol\":14862:14872  msg.sender */
          caller
            /* \"src/ReservoirPair.sol\":15323:15329  token0 */
          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")
            /* \"src/ReservoirPair.sol\":15323:15381  token0.safeTransferFrom(msg.sender, address(this), lDelta) */
          tag_33
          jump\t// in
        tag_344:
            /* \"src/ReservoirPair.sol\":15129:15392  if (aToken0Change < 0) {... */
          codesize
          jump(tag_341)
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
        tag_320:
          swap1
          0x20
          0x64
          swap3
          mload
          swap2
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          dup3
          add
          mstore
          0x15
          0x24
          dup3
          add
          mstore
          0x414d503a20415554485f4e4f545f4d414e414745520000000000000000000000
          0x44
          dup3
          add
          mstore
          revert
        tag_111:
          dup4
          dup3
          jumpi(tag_166, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_166
          jumpi
          dup1
          mload
          swap1
          dup3
            /* \"lib/solmate/src/tokens/ERC20.sol\":1056:1076  string public symbol */
          0x01
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup1
          sload
          swap2
          tag_350
          dup4
          tag_1
          jump\t// in
        tag_350:
          dup1
          dup7
          mstore
          swap3
          dup3
          dup2
          and
          swap1
            /* \"lib/solmate/src/tokens/ERC20.sol\":1056:1076  string public symbol */
          dup2
          iszero
          tag_351
          jumpi
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          pop
          0x01
          eq
          tag_353
          jumpi
        tag_354:
          pop
          pop
          pop
          tag_355
          dup3
          tag_356
          swap5
          sub
          dup4
          tag_4
          jump\t// in
        tag_355:
          mload
          swap2
          dup3
          swap2
          dup3
          tag_6
          jump\t// in
        tag_356:
          sub
          swap1
          return
        tag_353:
          swap5
          pop
          dup1
          dup6
          mstore
          0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6
        tag_357:
          dup3
          dup7
          lt
          tag_358
          jumpi
          pop
          pop
          pop
          tag_355
          dup3
          0x20
          tag_356
          swap6
          dup3
          add
          add
          swap5
          jump(tag_354)
        tag_358:
          dup1
          sload
          0x20
          dup8
          dup8
          add
          dup2
          add
          swap2
          swap1
          swap2
          mstore
          swap1
          swap6
          add
          swap5
          dup2
          add
          jump(tag_357)
        tag_351:
          tag_356
          swap8
          pop
          dup7
          swap4
          pop
          0x20
          swap3
          pop
          tag_355
          swap5
          swap2
          pop
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
          and
          dup3
          dup5
          add
          mstore
          iszero
          iszero
          0x05
          shl
          dup3
          add
          add
          swap5
          jump(tag_354)
        tag_109:
          swap1
          swap2
          pop
          jumpi(tag_180, callvalue)
          jumpi(tag_180, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))
            /* \"src/ReservoirPair.sol\":6915:6966  CustomSwapFeeChanged(customSwapFee, aCustomSwapFee) */
          0x27f958341e42705d80835b6391cbe111df34533c7061beebb873bdb3454cc697
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap1
          calldataload
            /* \"src/ReservoirPair.sol\":3741:3748  factory */
          swap2
            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */
          tag_364
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":3741:3748  factory */
          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":3719:3729  msg.sender */
          caller
            /* \"src/ReservoirPair.sol\":3719:3749  msg.sender == address(factory) */
          eq
            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */
          tag_14
          jump\t// in
        tag_364:
            /* \"src/ReservoirPair.sol\":6936:6949  customSwapFee */
          0x08
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
          dup2
          mload
          swap1
          dup2
          mstore
          dup4
          0x20
          dup3
          add
          mstore
            /* \"src/ReservoirPair.sol\":6915:6966  CustomSwapFeeChanged(customSwapFee, aCustomSwapFee) */
          log1
            /* \"src/ReservoirPair.sol\":6936:6949  customSwapFee */
          0x08
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sstore
            /* \"src/ReservoirPair.sol\":6976:7006  customSwapFee = aCustomSwapFee */
          tag_159
          tag_15
          jump\t// in
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
        tag_107:
          dup4
          dup3
          jumpi(tag_166, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_166
          jumpi
          0x20
          swap1
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":12568:12601  IAssetManager public assetManager */
          0x0b
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
          and
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_105:
          pop
          dup3
          jumpi(tag_157, callvalue)
          0x20
          dup1
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_166
          jumpi
          tag_374
          tag_7
          jump\t// in
        tag_374:
            /* \"src/curve/stable/StableMintBurn.sol\":5113:5127  _lockAndLoad() */
          swap1
          tag_375
          tag_12
          jump\t// in
        tag_375:
          pop
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap2
            /* \"src/curve/stable/StableMintBurn.sol\":5162:5196  _syncManaged(lReserve0, lReserve1) */
          tag_376
          swap2
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xffffffffffffffffffffffffff
          swap1
          dup2
          and
          swap2
          and
            /* \"src/curve/stable/StableMintBurn.sol\":5162:5196  _syncManaged(lReserve0, lReserve1) */
          tag_26
          jump\t// in
        tag_376:
            /* \"src/curve/stable/StableMintBurn.sol\":5245:5249  this */
          swap2
          swap1
          swap2
          address
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup7
          mstore
            /* \"src/curve/stable/StableMintBurn.sol\":5227:5236  balanceOf */
          0x03
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup5
          mstore
          dup7
          dup7
          keccak256
          sload
            /* \"src/curve/stable/StableMintBurn.sol\":5288:5318  _mintFee(lReserve0, lReserve1) */
          swap5
          tag_377
          dup3
          dup6
          tag_45
          jump\t// in
        tag_377:
            /* \"src/curve/stable/StableMintBurn.sol\":5341:5362  liquidity * lReserve0 */
          pop
          swap7
          dup6
          dup9
          tag_378
          dup8
          dup11
          tag_36
          jump\t// in
        tag_378:
            /* \"src/curve/stable/StableMintBurn.sol\":5340:5378  (liquidity * lReserve0) / lTotalSupply */
          swap1
          tag_379
          swap2
          tag_37
          jump\t// in
        tag_379:
            /* \"src/curve/stable/StableMintBurn.sol\":5400:5421  liquidity * lReserve1 */
          swap9
          tag_380
          dup6
          dup11
          tag_36
          jump\t// in
        tag_380:
            /* \"src/curve/stable/StableMintBurn.sol\":5399:5437  (liquidity * lReserve1) / lTotalSupply */
          swap1
          tag_381
          swap2
          tag_37
          jump\t// in
        tag_381:
            /* \"src/curve/stable/StableMintBurn.sol\":5245:5249  this */
          swap8
          address
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup4
          mstore
            /* \"src/curve/stable/StableMintBurn.sol\":5227:5236  balanceOf */
          0x03
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup3
          mstore
          dup11
          dup4
          keccak256
          dup2
          dup2
          sload
            /* \"lib/solmate/src/tokens/ERC20.sol\":6553:6578  balanceOf[from] -= amount */
          swap1
          tag_382
          swap2
          tag_9
          jump\t// in
        tag_382:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap1
          sstore
          dup1
            /* \"lib/solmate/src/tokens/ERC20.sol\":6721:6742  totalSupply -= amount */
          0x02
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
          sub
            /* \"lib/solmate/src/tokens/ERC20.sol\":6721:6742  totalSupply -= amount */
          0x02
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sstore
          dup11
          mload
          swap1
          dup2
          mstore
            /* \"src/curve/stable/StableMintBurn.sol\":5245:5249  this */
          address
            /* \"lib/solmate/src/tokens/ERC20.sol\":6768:6802  Transfer(from, address(0), amount) */
          swap2
          0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
          swap2
          log3
            /* \"src/curve/stable/StableMintBurn.sol\":5541:5550  lReserve1 */
          tag_383
            /* \"src/curve/stable/StableMintBurn.sol\":5507:5513  token0 */
          dup3
          dup6
          dup10
          dup5
          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")
            /* \"src/curve/stable/StableMintBurn.sol\":5541:5550  lReserve1 */
          tag_19
          jump\t// in
        tag_383:
            /* \"src/curve/stable/StableMintBurn.sol\":5578:5584  token1 */
          dup2
          dup5
          dup8
          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")
            /* \"src/curve/stable/StableMintBurn.sol\":5612:5621  lReserve1 */
          swap4
          tag_384
          swap5
          tag_19
          jump\t// in
        tag_384:
            /* \"src/curve/stable/StableMintBurn.sol\":5653:5667  _totalToken0() */
          tag_385
          tag_23
          jump\t// in
        tag_385:
            /* \"src/curve/stable/StableMintBurn.sol\":5697:5711  _totalToken1() */
          swap3
          tag_386
          tag_24
          jump\t// in
        tag_386:
            /* \"src/curve/stable/StableMintBurn.sol\":9453:9474  _getCurrentAPrecise() */
          tag_387
          tag_48
          jump\t// in
        tag_387:
            /* \"src/curve/stable/StableMintBurn.sol\":9449:9474  2 * _getCurrentAPrecise() */
          tag_388
          swap1
          tag_43
          jump\t// in
        tag_388:
            /* \"src/curve/stable/StableMintBurn.sol\":7029:7125  StableMath._computeLiquidityFromAdjustedBalances(lAdjustedReserve0, lAdjustedReserve1, _getNA()) */
          tag_389
          swap1
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xffffffffffffffff
          and
          0xffffffffffffffffffffffffffffffff
            /* \"src/curve/stable/StableMintBurn.sol\":6961:6986  token1PrecisionMultiplier */
          immutable(\"0xc4ba931b733b92a51f51c0955dd7716c7a38f3de911d23a5d0fbd5d23c0fbe8c\")
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup2
          and
          dup5
          mul
          swap1
            /* \"src/curve/stable/StableMintBurn.sol\":6882:6907  token0PrecisionMultiplier */
          immutable(\"0x372e991e4284f7d12d6b2461cce9899511b05ac053845de253542adb96f2dca0\")
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          and
          dup9
          mul
            /* \"src/curve/stable/StableMintBurn.sol\":7029:7125  StableMath._computeLiquidityFromAdjustedBalances(lAdjustedReserve0, lAdjustedReserve1, _getNA()) */
          tag_58
          jump\t// in
        tag_389:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffffffffffff
          and
            /* \"src/curve/stable/StableMintBurn.sol\":5721:5785  lastInvariant = uint192(_computeLiquidity(lBalance0, lBalance1)) */
          tag_390
          swap1
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffffffffffff
            /* \"src/curve/stable/StableMintBurn.sol\":4611:4643  lastInvariant = uint192(lNewLiq) */
          0x010012
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap2
          and
          0xffffffffffffffff000000000000000000000000000000000000000000000000
          dup3
          sload
          and
          or
          swap1
          sstore
          jump
            /* \"src/curve/stable/StableMintBurn.sol\":5721:5785  lastInvariant = uint192(_computeLiquidity(lBalance0, lBalance1)) */
        tag_390:
            /* \"src/curve/stable/StableMintBurn.sol\":5814:5835  _getCurrentAPrecise() */
          tag_391
          tag_48
          jump\t// in
        tag_391:
            /* \"src/curve/stable/StableMintBurn.sol\":5795:5835  lastInvariantAmp = _getCurrentAPrecise() */
          tag_392
          swap1
            /* \"src/curve/stable/StableMintBurn.sol\":4611:4643  lastInvariant = uint192(lNewLiq) */
          0x010012
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap1
          0xffffffffffffffffffffffffffffffffffffffffffffffff
          0xffffffffffffffff000000000000000000000000000000000000000000000000
          dup4
          sload
          swap3
          0xc0
          shl
          and
          swap2
          and
          or
          swap1
          sstore
          jump
            /* \"src/curve/stable/StableMintBurn.sol\":5795:5835  lastInvariantAmp = _getCurrentAPrecise() */
        tag_392:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup9
          dup1
          mload
          dup10
          dup2
          mstore
          dup9
          dup9
          dup3
          add
          mstore
            /* \"src/curve/stable/StableMintBurn.sol\":5855:5865  msg.sender */
          caller
            /* \"src/curve/stable/StableMintBurn.sol\":5850:5886  Burn(msg.sender, rAmount0, rAmount1) */
          swap2
          0x49995e5dd6158cf69ad3e9777c46755a1a826a446c6416992167462dad033b2a
          swap2
          log2
            /* \"src/curve/stable/StableMintBurn.sol\":5958:5977  lBlockTimestampLast */
          tag_393
          swap5
          tag_21
          jump\t// in
        tag_393:
          tag_394
          tag_41
          jump\t// in
        tag_394:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup4
          mload
          swap3
          dup4
          mstore
          dup3
          add
          mstore
          return
        tag_103:
          dup4
          dup3
          jumpi(tag_166, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_166
          jumpi
          0x20
          swap1
            /* \"src/ReservoirPair.sol\":17094:17122  uint256 public maxChangeRate */
          0x01000d
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_101:
          dup4
          dup3
          jumpi(tag_166, callvalue)
          jumpi(tag_166, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))
          dup1
          0x20
          swap3
          0xffffffffffffffffffffffffffffffffffffffff
          tag_403
          tag_7
          jump\t// in
        tag_403:
          and
          dup2
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":1751:1792  mapping(address => uint256) public nonces */
          0x05
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup5
          mstore
          keccak256
          sload
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_99:
          dup4
          dup3
          jumpi(tag_166, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_166
          jumpi
          0x20
          swap1
            /* \"src/ReservoirPair.sol\":3619:3671  uint256 public customPlatformFee = type(uint256).max */
          0x0a
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_97:
          dup4
          dup3
          jumpi(tag_166, callvalue)
          jumpi(tag_166, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))
          dup1
          0x20
          swap3
          0xffffffffffffffffffffffffffffffffffffffff
          tag_412
          tag_7
          jump\t// in
        tag_412:
          and
          dup2
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":1337:1381  mapping(address => uint256) public balanceOf */
          0x03
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup5
          mstore
          keccak256
          sload
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_95:
          swap1
          dup4
          jumpi(tag_157, callvalue)
          0x20
          swap2
          dup3
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_166
          jumpi
            /* \"src/curve/stable/StableMintBurn.sol\":3443:3477  _syncManaged(lReserve0, lReserve1) */
          tag_417
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          tag_418
          tag_7
          jump\t// in
        tag_418:
          swap5
            /* \"src/curve/stable/StableMintBurn.sol\":3394:3408  _lockAndLoad() */
          tag_419
          tag_12
          jump\t// in
        tag_419:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          pop
          swap4
          swap1
          swap2
          0xffffffffffffffffffffffffff
          dup1
          dup1
          swap5
          and
          swap2
          and
            /* \"src/curve/stable/StableMintBurn.sol\":3443:3477  _syncManaged(lReserve0, lReserve1) */
          tag_26
          jump\t// in
        tag_417:
            /* \"src/curve/stable/StableMintBurn.sol\":6265:6279  _totalToken0() */
          tag_420
          tag_23
          jump\t// in
        tag_420:
            /* \"src/curve/stable/StableMintBurn.sol\":6301:6315  _totalToken1() */
          swap1
          tag_421
          tag_24
          jump\t// in
        tag_421:
            /* \"src/curve/stable/StableMintBurn.sol\":9453:9474  _getCurrentAPrecise() */
          swap3
            /* \"src/curve/stable/StableMintBurn.sol\":7029:7125  StableMath._computeLiquidityFromAdjustedBalances(lAdjustedReserve0, lAdjustedReserve1, _getNA()) */
          tag_422
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xffffffffffffffff
            /* \"src/curve/stable/StableMintBurn.sol\":9449:9474  2 * _getCurrentAPrecise() */
          tag_423
            /* \"src/curve/stable/StableMintBurn.sol\":9453:9474  _getCurrentAPrecise() */
          tag_424
          tag_48
          jump\t// in
        tag_424:
            /* \"src/curve/stable/StableMintBurn.sol\":9449:9474  2 * _getCurrentAPrecise() */
          tag_43
          jump\t// in
        tag_423:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          and
          0xffffffffffffffffffffffffffffffff
            /* \"src/curve/stable/StableMintBurn.sol\":6961:6986  token1PrecisionMultiplier */
          dup1
          immutable(\"0xc4ba931b733b92a51f51c0955dd7716c7a38f3de911d23a5d0fbd5d23c0fbe8c\")
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          and
          dup8
          mul
            /* \"src/curve/stable/StableMintBurn.sol\":6882:6907  token0PrecisionMultiplier */
          swap1
          immutable(\"0x372e991e4284f7d12d6b2461cce9899511b05ac053845de253542adb96f2dca0\")
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          and
          dup7
          mul
            /* \"src/curve/stable/StableMintBurn.sol\":7029:7125  StableMath._computeLiquidityFromAdjustedBalances(lAdjustedReserve0, lAdjustedReserve1, _getNA()) */
          tag_58
          jump\t// in
        tag_422:
            /* \"src/curve/stable/StableMintBurn.sol\":3637:3658  lBalance0 - lReserve0 */
          swap11
            /* \"src/curve/stable/StableMintBurn.sol\":3859:3886  lReserve1 += uint104(lFee1) */
          tag_425
            /* \"src/curve/stable/StableMintBurn.sol\":3637:3658  lBalance0 - lReserve0 */
          tag_426
          dup4
          dup7
          tag_9
          jump\t// in
        tag_426:
            /* \"src/curve/stable/StableMintBurn.sol\":3687:3708  lBalance1 - lReserve1 */
          swap4
          dup8
            /* \"src/curve/stable/StableMintBurn.sol\":3822:3849  lReserve0 += uint104(lFee0) */
          tag_427
            /* \"src/curve/stable/StableMintBurn.sol\":3687:3708  lBalance1 - lReserve1 */
          tag_428
          dup4
          dup11
          tag_9
          jump\t// in
        tag_428:
            /* \"src/curve/stable/StableMintBurn.sol\":3752:3812  _nonOptimalMintFee(lAmount0, lAmount1, lReserve0, lReserve1) */
          swap6
          tag_429
          dup5
          dup3
          dup10
          dup12
          tag_42
          jump\t// in
        tag_429:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap12
          and
            /* \"src/curve/stable/StableMintBurn.sol\":3822:3849  lReserve0 += uint104(lFee0) */
          swap1
          tag_22
          jump\t// in
        tag_427:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap9
          and
            /* \"src/curve/stable/StableMintBurn.sol\":3859:3886  lReserve1 += uint104(lFee1) */
          swap1
          tag_22
          jump\t// in
        tag_425:
            /* \"src/curve/stable/StableMintBurn.sol\":3939:3969  _mintFee(lReserve0, lReserve1) */
          swap7
          dup13
          tag_430
          dup10
          dup10
          tag_45
          jump\t// in
        tag_430:
            /* \"src/curve/stable/StableMintBurn.sol\":3984:4001  lTotalSupply == 0 */
          swap2
          dup2
          tag_431
          jumpi
            /* \"src/curve/stable/StableMintBurn.sol\":4025:4037  lAmount0 > 0 */
          pop
          pop
          pop
          dup4
          iszero
          iszero
            /* \"src/curve/stable/StableMintBurn.sol\":4025:4053  lAmount0 > 0 && lAmount1 > 0 */
          dup1
          tag_433
          jumpi
            /* \"src/curve/stable/StableMintBurn.sol\":3980:4282  if (lTotalSupply == 0) {... */
        tag_434:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          iszero
          tag_435
          jumpi
          0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc18
          dup14
          add
          dup14
          dup2
          gt
          tag_437
          jumpi
          swap11
            /* \"lib/solmate/src/tokens/ERC20.sol\":6220:6241  totalSupply += amount */
          0x02
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
            /* \"src/ReservoirPair.sol\":2671:2678  10 ** 3 */
          0x03e8
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap1
          dup2
          dup2
          add
          dup1
          swap2
          gt
          tag_439
          jumpi
          dup15
          dup4
          swap3
          dup15
            /* \"lib/solmate/src/tokens/ERC20.sol\":6436:6468  Transfer(address(0), to, amount) */
          0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap4
            /* \"lib/solmate/src/tokens/ERC20.sol\":6220:6241  totalSupply += amount */
          0x02
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sstore
          dup5
          dup1
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":6387:6396  balanceOf */
          0x03
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup4
          mstore
          dup1
          dup6
          keccak256
          dup3
          dup2
          sload
          add
          swap1
          sstore
          mload
          swap1
          dup2
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":6436:6468  Transfer(address(0), to, amount) */
          log3
            /* \"src/curve/stable/StableMintBurn.sol\":3980:4282  if (lTotalSupply == 0) {... */
        tag_441:
            /* \"src/curve/stable/StableMintBurn.sol\":4299:4314  rLiquidity != 0 */
          dup11
          iszero
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          tag_442
          jumpi
            /* \"src/curve/stable/StableMintBurn.sol\":4367:4377  rLiquidity */
          pop
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffffffffffff
            /* \"src/curve/stable/StableMintBurn.sol\":4367:4377  rLiquidity */
          dup11
          swap12
          swap13
          tag_444
            /* \"src/curve/stable/StableMintBurn.sol\":4817:4836  lBlockTimestampLast */
          tag_445
            /* \"src/curve/stable/StableMintBurn.sol\":4367:4377  rLiquidity */
          swap12
          swap13
            /* \"src/curve/stable/StableMintBurn.sol\":4611:4643  lastInvariant = uint192(lNewLiq) */
          tag_446
            /* \"src/curve/stable/StableMintBurn.sol\":4367:4377  rLiquidity */
          swap5
          tag_40
          jump\t// in
        tag_444:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          and
          0xffffffffffffffffffffffffffffffffffffffffffffffff
            /* \"src/curve/stable/StableMintBurn.sol\":4611:4643  lastInvariant = uint192(lNewLiq) */
          0x010012
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap2
          and
          0xffffffffffffffff000000000000000000000000000000000000000000000000
          dup3
          sload
          and
          or
          swap1
          sstore
          jump
            /* \"src/curve/stable/StableMintBurn.sol\":4611:4643  lastInvariant = uint192(lNewLiq) */
        tag_446:
            /* \"src/curve/stable/StableMintBurn.sol\":4653:4693  lastInvariantAmp = _getCurrentAPrecise() */
          tag_447
            /* \"src/curve/stable/StableMintBurn.sol\":4672:4693  _getCurrentAPrecise() */
          tag_448
          tag_48
          jump\t// in
        tag_448:
            /* \"src/curve/stable/StableMintBurn.sol\":4611:4643  lastInvariant = uint192(lNewLiq) */
          0x010012
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap1
          0xffffffffffffffffffffffffffffffffffffffffffffffff
          0xffffffffffffffff000000000000000000000000000000000000000000000000
          dup4
          sload
          swap3
          0xc0
          shl
          and
          swap2
          and
          or
          swap1
          sstore
          jump
            /* \"src/curve/stable/StableMintBurn.sol\":4653:4693  lastInvariantAmp = _getCurrentAPrecise() */
        tag_447:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup9
          mload
          swap2
          dup3
          mstore
          dup11
          dup3
          add
          mstore
            /* \"src/curve/stable/StableMintBurn.sol\":4709:4745  Mint(msg.sender, lAmount0, lAmount1) */
          0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f
            /* \"src/curve/stable/StableMintBurn.sol\":4714:4724  msg.sender */
          dup9
          caller
            /* \"src/curve/stable/StableMintBurn.sol\":4709:4745  Mint(msg.sender, lAmount0, lAmount1) */
          swap3
          log2
            /* \"src/curve/stable/StableMintBurn.sol\":4817:4836  lBlockTimestampLast */
          tag_21
          jump\t// in
        tag_445:
          tag_449
          tag_41
          jump\t// in
        tag_449:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mload
          swap1
          dup2
          mstore
          return
        tag_442:
          0x64
          swap1
          dup13
          dup12
          mload
          swap2
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          dup3
          add
          mstore
          0x1b
          0x24
          dup3
          add
          mstore
          0x53503a20494e53554646494349454e545f4c49515f4d494e5445440000000000
          0x44
          dup3
          add
          mstore
          revert
        tag_439:
          0x24
          dup4
          0x11
          dup7
          0x4e487b7100000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          mstore
          revert
        tag_437:
          0x24
          dup13
          0x11
          dup5
          0x4e487b7100000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          mstore
          revert
        tag_435:
          0x64
          swap1
          dup13
          dup12
          mload
          swap2
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          dup3
          add
          mstore
          0x13
          0x24
          dup3
          add
          mstore
          0x53503a20494e56414c49445f414d4f554e545300000000000000000000000000
          0x44
          dup3
          add
          mstore
          revert
            /* \"src/curve/stable/StableMintBurn.sol\":4025:4053  lAmount0 > 0 && lAmount1 > 0 */
        tag_433:
            /* \"src/curve/stable/StableMintBurn.sol\":4041:4053  lAmount1 > 0 */
          pop
          dup3
          iszero
          iszero
            /* \"src/curve/stable/StableMintBurn.sol\":4025:4053  lAmount0 > 0 && lAmount1 > 0 */
          jump(tag_434)
            /* \"src/curve/stable/StableMintBurn.sol\":3980:4282  if (lTotalSupply == 0) {... */
        tag_431:
            /* \"src/curve/stable/StableMintBurn.sol\":4225:4271  ((lNewLiq - lOldLiq) * lTotalSupply) / lOldLiq */
          tag_450
            /* \"src/curve/stable/StableMintBurn.sol\":4227:4244  lNewLiq - lOldLiq */
          swap4
          swap14
          pop
          swap1
          tag_451
          dup4
            /* \"src/curve/stable/StableMintBurn.sol\":4226:4260  (lNewLiq - lOldLiq) * lTotalSupply */
          tag_452
            /* \"src/curve/stable/StableMintBurn.sol\":4227:4244  lNewLiq - lOldLiq */
          swap4
          tag_9
          jump\t// in
        tag_451:
            /* \"src/curve/stable/StableMintBurn.sol\":4226:4260  (lNewLiq - lOldLiq) * lTotalSupply */
          tag_36
          jump\t// in
        tag_452:
            /* \"src/curve/stable/StableMintBurn.sol\":4225:4271  ((lNewLiq - lOldLiq) * lTotalSupply) / lOldLiq */
          tag_37
          jump\t// in
        tag_450:
            /* \"src/curve/stable/StableMintBurn.sol\":3980:4282  if (lTotalSupply == 0) {... */
          swap10
          jump(tag_441)
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
        tag_93:
          dup4
          dup3
          jumpi(tag_166, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_166
          jumpi
          0x80
          swap1
            /* \"src/curve/stable/StableMintBurn.sol\":1399:1431  AmplificationData public ampData */
          0x010010
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
          dup2
          mload
          swap2
          0xffffffffffffffff
          dup1
          dup4
          and
          dup5
          mstore
          dup1
          dup4
          dup4
          shr
          and
          0x20
          dup6
          add
          mstore
          dup3
          dup6
          shr
          and
          swap1
          dup4
          add
          mstore
          0xc0
          shr
          0x60
          dup3
          add
          mstore
          return
        tag_91:
          dup4
          dup3
          jumpi(tag_166, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_166
          jumpi
          0x20
          swap1
            /* \"src/ReservoirPair.sol\":3460:3482  uint256 public swapFee */
          0x07
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_89:
          swap2
          pop
          jumpi(tag_180, callvalue)
          jumpi(tag_180, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))
          dup2
          calldataload
            /* \"src/ReservoirPair.sol\":3741:3748  factory */
          swap2
            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */
          tag_465
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":3741:3748  factory */
          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":3719:3729  msg.sender */
          caller
            /* \"src/ReservoirPair.sol\":3719:3749  msg.sender == address(factory) */
          eq
            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */
          tag_14
          jump\t// in
        tag_465:
            /* \"src/ReservoirPair.sol\":17789:17807  0 < aMaxChangeRate */
          dup3
          iszero
          iszero
            /* \"src/ReservoirPair.sol\":17789:17847  0 < aMaxChangeRate && aMaxChangeRate <= MAX_CHANGE_PER_SEC */
          dup1
          tag_466
          jumpi
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
        tag_467:
            /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */
          iszero
          tag_468
          jumpi
            /* \"src/ReservoirPair.sol\":17917:17930  maxChangeRate */
          pop
            /* \"src/ReservoirPair.sol\":17896:17947  MaxChangeRateUpdated(maxChangeRate, aMaxChangeRate) */
          0x807b9f5907da3f00bf587e77bc07247e1c7ff5ae46c93a584b3a075be0b1bac2
            /* \"src/ReservoirPair.sol\":17917:17930  maxChangeRate */
          0x01000d
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap2
          dup3
          sload
          dup2
          mload
          swap1
          dup2
          mstore
          dup5
          0x20
          dup3
          add
          mstore
            /* \"src/ReservoirPair.sol\":17896:17947  MaxChangeRateUpdated(maxChangeRate, aMaxChangeRate) */
          log1
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sstore
          dup1
          return
            /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */
        tag_468:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x20
            /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */
          0x64
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap3
          mload
            /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */
          swap2
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          dup3
          add
          mstore
          0x1d
          0x24
          dup3
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mstore
            /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */
          0x4f573a20494e56414c49445f4348414e47455f5045525f5345434f4e44000000
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x44
          dup3
          add
            /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */
          mstore
          revert
            /* \"src/ReservoirPair.sol\":17789:17847  0 < aMaxChangeRate && aMaxChangeRate <= MAX_CHANGE_PER_SEC */
        tag_466:
            /* \"src/ReservoirPair.sol\":17811:17847  aMaxChangeRate <= MAX_CHANGE_PER_SEC */
          pop
            /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */
          0x2386f26fc10000
            /* \"src/ReservoirPair.sol\":17811:17847  aMaxChangeRate <= MAX_CHANGE_PER_SEC */
          dup4
          gt
          iszero
            /* \"src/ReservoirPair.sol\":17789:17847  0 < aMaxChangeRate && aMaxChangeRate <= MAX_CHANGE_PER_SEC */
          jump(tag_467)
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
        tag_87:
          dup4
          dup3
          jumpi(tag_166, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_166
          jumpi
          0x20
          swap1
            /* \"src/ReservoirPair.sol\":17128:17159  uint256 public prevClampedPrice */
          0x01000e
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_85:
          dup4
          dup3
          jumpi(tag_166, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_166
          jumpi
          0x20
          swap1
          mload
            /* \"src/ReservoirPair.sol\":2789:2796  500_000 */
          0x07a120
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup2
          mstore
          return
        tag_83:
          dup4
          dup3
          jumpi(tag_166, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_166
          jumpi
          0x20
          swap1
          tag_482
          tag_10
          jump\t// in
        tag_482:
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_81:
          dup4
          dup3
          jumpi(tag_166, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_166
          jumpi
          dup1
            /* \"src/ReservoirPair.sol\":17490:17522  factory.read(ORACLE_CALLER_NAME) */
          tag_487
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap2
          mload
          tag_488
          dup2
          tag_3
          jump\t// in
        tag_488:
          0x14
          dup2
          mstore
          0x5368617265643a3a6f7261636c6543616c6c6572000000000000000000000000
          0x20
          dup3
          add
          mstore
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":17490:17497  factory */
          swap3
          dup4
          swap2
          dup3
          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":17490:17522  factory.read(ORACLE_CALLER_NAME) */
          tag_52
          jump\t// in
        tag_487:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":17562:17574  oracleCaller */
          swap1
          0x01000f
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap3
          dup4
          sload
          swap1
          dup2
          and
            /* \"src/ReservoirPair.sol\":17548:17574  lNewCaller != oracleCaller */
          dup1
          dup5
          sub
            /* \"src/ReservoirPair.sol\":17544:17690  if (lNewCaller != oracleCaller) {... */
          tag_489
          jumpi
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup6
          dup1
          return
            /* \"src/ReservoirPair.sol\":17544:17690  if (lNewCaller != oracleCaller) {... */
        tag_489:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup3
            /* \"src/ReservoirPair.sol\":17595:17640  OracleCallerUpdated(oracleCaller, lNewCaller) */
          0x262681b3b01b61ff6d02569759105771205cdd274fb3c45535b50632e0a3523f
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap2
          0xffffffffffffffffffffffff0000000000000000000000000000000000000000
          swap5
          mload
          swap1
          dup2
          mstore
            /* \"src/ReservoirPair.sol\":16881:16903  \"Shared::oracleCaller\" */
          dup6
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x20
            /* \"src/ReservoirPair.sol\":16881:16903  \"Shared::oracleCaller\" */
          dup3
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mstore
            /* \"src/ReservoirPair.sol\":17595:17640  OracleCallerUpdated(oracleCaller, lNewCaller) */
          log1
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          and
          or
          swap1
          sstore
            /* \"src/ReservoirPair.sol\":17544:17690  if (lNewCaller != oracleCaller) {... */
          dup2
          dup1
          dup1
          dup1
          dup1
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup6
          dup1
          return
        tag_79:
          dup4
          dup3
          jumpi(tag_166, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_166
          jumpi
          0x20
          swap1
          mload
          0xff
            /* \"lib/solmate/src/tokens/ERC20.sol\":1083:1114  uint8 public immutable decimals */
          immutable(\"0xb7b2278e6c1d8d0abc309f6bf9256046dfb6cd1d61f6bb10388e8ea4928d3539\")
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          and
          dup2
          mstore
          return
        tag_77:
          dup4
          dup3
          jumpi(tag_166, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_166
          jumpi
          0x20
          swap1
            /* \"src/ReservoirPair.sol\":3587:3613  uint256 public platformFee */
          0x09
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_75:
          swap1
          dup4
          jumpi(tag_157, callvalue)
          jumpi(tag_157, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x60))
          tag_503
          tag_7
          jump\t// in
        tag_503:
            /* \"lib/solmate/src/tokens/ERC20.sol\":3594:3620  Transfer(from, to, amount) */
          0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          tag_504
          tag_8
          jump\t// in
        tag_504:
          swap5
          calldataload(0x44)
          dup6
          0xffffffffffffffffffffffffffffffffffffffff
          dup1
          swap6
          and
          swap5
          dup6
          dup8
          mstore
          0x20
          swap9
          dup5
          dup11
          swap6
          dup7
          mstore
          dup4
          dup10
          keccak256
            /* \"lib/solmate/src/tokens/ERC20.sol\":3225:3235  msg.sender */
          caller
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup11
          mstore
          dup7
          mstore
          dup4
          dup10
          keccak256
          sload
            /* \"lib/solmate/src/tokens/ERC20.sol\":3287:3315  allowed != type(uint256).max */
          dup6
            /* \"lib/solmate/src/tokens/ERC20.sol\":3298:3315  type(uint256).max */
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
            /* \"lib/solmate/src/tokens/ERC20.sol\":3287:3315  allowed != type(uint256).max */
          dup3
          sub
            /* \"lib/solmate/src/tokens/ERC20.sol\":3283:3363  if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount */
          tag_505
          jumpi
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
        tag_506:
          pop
          pop
          pop
          dup7
          dup9
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":3374:3383  balanceOf */
          0x03
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup6
          mstore
          dup3
          dup9
          keccak256
            /* \"lib/solmate/src/tokens/ERC20.sol\":3374:3399  balanceOf[from] -= amount */
          tag_507
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup6
          dup3
          sload
            /* \"lib/solmate/src/tokens/ERC20.sol\":3374:3399  balanceOf[from] -= amount */
          tag_9
          jump\t// in
        tag_507:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap1
          sstore
          and
          swap6
          dup7
          dup2
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":3374:3383  balanceOf */
          0x03
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup5
          mstore
          keccak256
          dup2
          dup2
          sload
          add
          swap1
          sstore
          dup6
          mload
          swap1
          dup2
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":3594:3620  Transfer(from, to, amount) */
          log3
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mload
          0x01
          dup2
          mstore
          return
            /* \"lib/solmate/src/tokens/ERC20.sol\":3283:3363  if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount */
        tag_505:
            /* \"lib/solmate/src/tokens/ERC20.sol\":3347:3363  allowed - amount */
          tag_508
          swap2
          tag_9
          jump\t// in
        tag_508:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap1
          dup9
          dup11
          mstore
          dup7
          mstore
          dup4
          dup10
          keccak256
            /* \"lib/solmate/src/tokens/ERC20.sol\":3225:3235  msg.sender */
          caller
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup11
          mstore
          dup7
          mstore
          dup4
          dup10
          keccak256
          sstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":3283:3363  if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount */
          dup11
          dup1
          dup6
          jump(tag_506)
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
        tag_73:
          dup4
          dup3
          jumpi(tag_166, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_166
          jumpi
          0x20
          swap1
            /* \"lib/solmate/src/tokens/ERC20.sol\":1304:1330  uint256 public totalSupply */
          0x02
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_71:
          dup4
          dup3
          jumpi(tag_166, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_166
          jumpi
          0x20
          swap1
          mload
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":2915:2944  ERC20 public immutable token0 */
          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          and
          dup2
          mstore
          return
        tag_69:
          dup4
          jumpi(tag_157, callvalue)
          dup1
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_157
          jumpi
          tag_159
          tag_15
          jump\t// in
        tag_67:
          swap1
          swap2
          pop
          jumpi(tag_180, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_180
          jumpi
          0x20
          swap3
          tag_526
          tag_7
          jump\t// in
        tag_526:
          swap2
          dup4
          calldataload(0x24)
            /* \"lib/solmate/src/tokens/ERC20.sol\":2561:2571  msg.sender */
          swap3
          dup4
          swap3
          caller
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup3
          mstore
          dup8
          mstore
          0xffffffffffffffffffffffffffffffffffffffff
          dup3
          dup3
          keccak256
          swap6
          and
          swap5
          dup6
          dup3
          mstore
          dup8
          mstore
          keccak256
          sstore
          dup3
          mload
          swap1
          dup2
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":2606:2643  Approval(msg.sender, spender, amount) */
          0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
            /* \"lib/solmate/src/tokens/ERC20.sol\":2561:2571  msg.sender */
          dup5
          caller
            /* \"lib/solmate/src/tokens/ERC20.sol\":2606:2643  Approval(msg.sender, spender, amount) */
          swap3
          log3
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mload
          0x01
          dup2
          mstore
          return
        tag_65:
          dup4
          dup3
          jumpi(tag_166, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_166
          jumpi
          0x80
          swap1
          tag_531
          tag_11
          jump\t// in
        tag_531:
          swap1
          0xffffffffffffffffffffffffff
          swap2
          dup3
          dup2
          mload
          and
            /* \"src/ReservoirPair.sol\":5849:5864  lSlot0.reserve1 */
          swap3
          0x20
          dup3
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mload
          and
            /* \"src/ReservoirPair.sol\":5920:5942  lSlot0.packedTimestamp */
          swap2
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xffff
            /* \"src/ReservoirPair.sol\":5962:5974  lSlot0.index */
          0x60
            /* \"src/ReservoirPair.sol\":4678:4688  0x7FFFFFFF */
          0x7fffffff
            /* \"src/ReservoirPair.sol\":5920:5942  lSlot0.packedTimestamp */
          dup4
          dup6
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mload
            /* \"src/ReservoirPair.sol\":4662:4688  aRawTimestamp & 0x7FFFFFFF */
          and
            /* \"src/ReservoirPair.sol\":5962:5974  lSlot0.index */
          swap4
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mload
          and
          swap3
          dup2
          mload
          swap5
          dup6
          mstore
            /* \"src/ReservoirPair.sol\":5849:5864  lSlot0.reserve1 */
          0x20
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup6
          add
          mstore
          dup4
          add
          mstore
            /* \"src/ReservoirPair.sol\":5962:5974  lSlot0.index */
          0x60
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup3
          add
          mstore
          return
        tag_63:
          swap3
          pop
          pop
          jumpi(tag_180, callvalue)
          dup3
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_180
          jumpi
          dup3
          dup1
          sload
          tag_536
          dup2
          tag_1
          jump\t// in
        tag_536:
          dup1
          dup6
          mstore
          swap2
          0x01
          swap2
          dup1
          dup4
          and
          swap1
          dup2
          iszero
          tag_351
          jumpi
          pop
          0x01
          eq
          tag_539
          jumpi
          pop
          pop
          pop
          tag_355
          dup3
          tag_356
          swap5
          sub
          dup4
          tag_4
          jump\t// in
        tag_539:
          dup1
          dup1
          swap7
          pop
          mstore
          0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563
        tag_543:
          dup3
          dup7
          lt
          tag_544
          jumpi
          pop
          pop
          pop
          tag_355
          dup3
          0x20
          tag_356
          swap6
          dup3
          add
          add
          swap5
          jump(tag_354)
        tag_544:
          dup1
          sload
          0x20
          dup8
          dup8
          add
          dup2
          add
          swap2
          swap1
          swap2
          mstore
          swap1
          swap6
          add
          swap5
          dup2
          add
          jump(tag_543)
        tag_1:
          swap1
          0x01
          dup3
          dup2
          shr
          swap3
          and
          dup1
          iszero
          tag_546
          jumpi
        tag_547:
          0x20
          dup4
          lt
          eq
          tag_548
          jumpi
          jump\t// out
        tag_548:
          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)
          mstore(0x04, 0x22)
          revert(0x00, 0x24)
        tag_546:
          swap2
          0x7f
          and
          swap2
          jump(tag_547)
        tag_2:
          0x80
          dup2
          add
          swap1
          dup2
          lt
          0xffffffffffffffff
          dup3
          gt
          or
          tag_550
          jumpi
          0x40
          mstore
          jump\t// out
        tag_550:
          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)
          mstore(0x04, 0x41)
          revert(0x00, 0x24)
        tag_3:
          0x40
          dup2
          add
          swap1
          dup2
          lt
          0xffffffffffffffff
          dup3
          gt
          or
          tag_550
          jumpi
          0x40
          mstore
          jump\t// out
        tag_4:
          swap1
          0x1f
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
          swap2
          add
          and
          dup2
          add
          swap1
          dup2
          lt
          0xffffffffffffffff
          dup3
          gt
          or
          tag_550
          jumpi
          0x40
          mstore
          jump\t// out
        tag_5:
          0x00
        tag_556:
          dup4
          dup2
          lt
          tag_557
          jumpi
          pop
          pop
          0x00
          swap2
          add
          mstore
          jump\t// out
        tag_557:
          dup2
          dup2
          add
          mload
          dup4
          dup3
          add
          mstore
          0x20
          add
          jump(tag_556)
        tag_6:
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
          0x1f
          0x40
          swap4
          0x20
          dup5
          mstore
          tag_559
          dup2
          mload
          dup1
          swap3
          dup2
          0x20
          dup9
          add
          mstore
          0x20
          dup9
          dup9
          add
          swap2
          add
          tag_5
          jump\t// in
        tag_559:
          add
          and
          add
          add
          swap1
          jump\t// out
        tag_7:
          calldataload(0x04)
          swap1
          0xffffffffffffffffffffffffffffffffffffffff
          dup3
          and
          dup3
          sub
          tag_560
          jumpi
          jump\t// out
        tag_560:
          0x00
          dup1
          revert
        tag_8:
          calldataload(0x24)
          swap1
          0xffffffffffffffffffffffffffffffffffffffff
          dup3
          and
          dup3
          sub
          tag_560
          jumpi
          jump\t// out
        tag_9:
          swap2
          swap1
          dup3
          sub
          swap2
          dup3
          gt
          tag_564
          jumpi
          jump\t// out
        tag_564:
          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)
          mstore(0x04, 0x11)
          revert(0x00, 0x24)
            /* \"lib/solmate/src/tokens/ERC20.sol\":5327:5504  function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {... */
        tag_10:
          0x00
            /* \"lib/solmate/src/tokens/ERC20.sol\":5410:5423  block.chainid */
          chainid
            /* \"lib/solmate/src/tokens/ERC20.sol\":5427:5443  INITIAL_CHAIN_ID */
          immutable(\"0x81290bb363e768cff9ff9a5d447e434874948b933698048b966fdf5d744bf636\")
            /* \"lib/solmate/src/tokens/ERC20.sol\":5410:5443  block.chainid == INITIAL_CHAIN_ID */
          sub
            /* \"lib/solmate/src/tokens/ERC20.sol\":5427:5443  INITIAL_CHAIN_ID */
          tag_566
          jumpi
            /* \"lib/solmate/src/tokens/ERC20.sol\":5446:5470  INITIAL_DOMAIN_SEPARATOR */
          pop
          immutable(\"0x34382e0db9f4d1365b2614bb97467901a574db9e05159d2f14a2053ade673b06\")
            /* \"lib/solmate/src/tokens/ERC20.sol\":5327:5504  function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {... */
          swap1
          jump\t// out
            /* \"lib/solmate/src/tokens/ERC20.sol\":5410:5497  block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator() */
        tag_566:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mload(0x40)
          dup2
          sload
          dup3
          swap2
          tag_569
          dup3
          tag_1
          jump\t// in
        tag_569:
          dup1
          dup3
          mstore
          dup2
          0x20
          swap5
          dup6
          dup3
          add
          swap5
          0x01
          swap1
          dup8
          dup3
          dup3
          and
          swap2
          dup3
          0x00
          eq
          tag_570
          jumpi
          pop
          pop
          0x01
          eq
          tag_572
          jumpi
        tag_573:
          pop
          tag_574
          swap3
          pop
          sub
          dup3
          tag_4
          jump\t// in
        tag_574:
          mload
            /* \"lib/solmate/src/tokens/ERC20.sol\":5789:5811  keccak256(bytes(name)) */
          swap1
          keccak256
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap2
          mload(0x40)
            /* \"lib/solmate/src/tokens/ERC20.sol\":5640:5935  abi.encode(... */
          swap2
          dup3
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap3
            /* \"lib/solmate/src/tokens/ERC20.sol\":5672:5767  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */
          0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup5
          mstore
          0x40
          dup4
          add
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":5833:5847  keccak256(\"1\") */
          0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x60
          dup4
          add
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":5410:5423  block.chainid */
          chainid
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x80
          dup4
          add
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":5912:5916  this */
          address
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xa0
          dup4
          add
          mstore
          0xa0
            /* \"lib/solmate/src/tokens/ERC20.sol\":5640:5935  abi.encode(... */
          dup3
          mstore
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xc0
          dup3
          add
          swap1
          dup3
          dup3
          lt
          0xffffffffffffffff
          dup4
          gt
          or
          tag_575
          jumpi
          pop
          0x40
          mstore
          mload
            /* \"lib/solmate/src/tokens/ERC20.sol\":5613:5949  keccak256(... */
          swap1
          keccak256
            /* \"lib/solmate/src/tokens/ERC20.sol\":5327:5504  function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {... */
          swap1
          jump\t// out
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
        tag_575:
          dup1
          0x4e487b7100000000000000000000000000000000000000000000000000000000
          0x24
          swap3
          mstore
          mstore(0x04, 0x41)
          revert
        tag_572:
          dup8
          dup1
          mstore
          dup7
          swap2
          pop
          dup8
          swap1
          0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563
        tag_577:
          dup6
          dup4
          lt
          tag_578
          jumpi
          pop
          pop
          tag_574
          swap4
          pop
          dup3
          add
          add
          codesize
          jump(tag_573)
        tag_578:
          dup1
          sload
          dup4
          dup9
          add
          dup6
          add
          mstore
          dup7
          swap5
          pop
          dup9
          swap4
          swap1
          swap3
          add
          swap2
          dup2
          add
          jump(tag_577)
        tag_570:
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
          and
          dup9
          mstore
          tag_574
          swap6
          iszero
          iszero
          0x05
          shl
          dup6
          add
          add
          swap3
          pop
          codesize
          swap2
          pop
          tag_573
          swap1
          pop
          jump
        tag_11:
          mload(0x40)
          swap1
          tag_580
          dup3
          tag_2
          jump\t// in
        tag_580:
          dup2
          0x60
            /* \"src/ReservoirPair.sol\":5783:5789  _slot0 */
          0x06
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
          0xffffffffffffffffffffffffff
          dup1
          dup3
          and
          dup5
          mstore
          dup2
          0x68
          shr
          and
          0x20
          dup5
          add
          mstore
          0xffffffff
          dup2
          0xd0
          shr
          and
          0x40
          dup5
          add
          mstore
          0xf0
          shr
          swap2
          add
          mstore
          jump\t// out
            /* \"src/ReservoirPair.sol\":4905:5467  function _lockAndLoad()... */
        tag_12:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          tag_581
          tag_11
          jump\t// in
        tag_581:
          swap1
          0xffffffffffffffffffffffffff
          swap2
          dup3
          dup2
          mload
          and
            /* \"src/ReservoirPair.sol\":5196:5211  lSlot0.reserve1 */
          swap3
          0x20
          dup3
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mload
          and
            /* \"src/ReservoirPair.sol\":5273:5295  lSlot0.packedTimestamp */
          swap2
          0x40
          dup3
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mload
            /* \"src/ReservoirPair.sol\":4662:4688  aRawTimestamp & 0x7FFFFFFF */
          swap1
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x01
            /* \"src/ReservoirPair.sol\":4662:4688  aRawTimestamp & 0x7FFFFFFF */
          dup1
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xffff
            /* \"src/ReservoirPair.sol\":5315:5327  lSlot0.index */
          0x60
            /* \"src/ReservoirPair.sol\":4678:4688  0x7FFFFFFF */
          0x7fffffff
            /* \"src/ReservoirPair.sol\":4662:4688  aRawTimestamp & 0x7FFFFFFF */
          dup7
          and
            /* \"src/ReservoirPair.sol\":5315:5327  lSlot0.index */
          swap7
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mload
          and
          swap4
            /* \"src/ReservoirPair.sol\":4632:4634  31 */
          0x1f
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          shr
          and
            /* \"src/ReservoirPair.sol\":4615:4639  aRawTimestamp >> 31 == 1 */
          eq
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          tag_582
          jumpi
            /* \"src/ReservoirPair.sol\":4847:4853  _slot0 */
          0x06
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
          0xffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffff
          0xffffffff0000000000000000000000000000000000000000000000000000
            /* \"src/ReservoirPair.sol\":4817:4824  1 << 31 */
          0x80000000
            /* \"src/ReservoirPair.sol\":4872:4892  aTimestamp | lLocked */
          dup7
          or
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xd0
          shl
          and
          swap2
          and
          or
            /* \"src/ReservoirPair.sol\":4847:4853  _slot0 */
          0x06
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sstore
            /* \"src/ReservoirPair.sol\":4905:5467  function _lockAndLoad()... */
          jump\t// out
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
        tag_582:
          0x64
            /* \"src/ReservoirPair.sol\":5273:5295  lSlot0.packedTimestamp */
          0x40
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mload
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
            /* \"src/ReservoirPair.sol\":5196:5211  lSlot0.reserve1 */
          0x20
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x04
          dup3
          add
          mstore
          0x0a
          0x24
          dup3
          add
          mstore
          0x5245454e5452414e435900000000000000000000000000000000000000000000
          0x44
          dup3
          add
          mstore
          revert
        tag_14:
          iszero
          tag_584
          jumpi
          jump\t// out
        tag_584:
          0x64
          mload(0x40)
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
          0x20
          0x04
          dup3
          add
          mstore
          0x0c
          0x24
          dup3
          add
          mstore
          0x503a20464f5242494444454e0000000000000000000000000000000000000000
          0x44
          dup3
          add
          mstore
          revert
            /* \"src/ReservoirPair.sol\":7293:7635  function updateSwapFee() public {... */
        tag_15:
            /* \"src/ReservoirPair.sol\":7354:7367  customSwapFee */
          0x08
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
          0x00
            /* \"src/ReservoirPair.sol\":7371:7388  type(uint256).max */
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":7354:7388  customSwapFee != type(uint256).max */
          dup3
          eq
            /* \"src/ReservoirPair.sol\":7371:7388  type(uint256).max */
          tag_586
          jumpi
            /* \"src/ReservoirPair.sol\":7354:7443  customSwapFee != type(uint256).max ? customSwapFee : factory.get(swapFeeName).toUint256() */
          pop
        tag_588:
            /* \"src/ReservoirPair.sol\":7469:7476  swapFee */
          0x07
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
            /* \"src/ReservoirPair.sol\":7457:7476  _swapFee == swapFee */
          dup1
          dup3
          eq
            /* \"src/ReservoirPair.sol\":7453:7485  if (_swapFee == swapFee) return; */
          tag_589
          jumpi
            /* \"src/ReservoirPair.sol\":2849:2855  20_000 */
          0x4e20
            /* \"src/ReservoirPair.sol\":7503:7527  _swapFee <= MAX_SWAP_FEE */
          dup3
          gt
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          tag_591
          jumpi
          0x40
            /* \"src/ReservoirPair.sol\":7567:7600  SwapFeeChanged(swapFee, _swapFee) */
          0xad321f810529281bbb90384fd6fecbdda41509a5ccd7bd5aed986ed827f6a026
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap2
          dup2
          mload
          swap1
          dup2
          mstore
          dup4
          0x20
          dup3
          add
          mstore
            /* \"src/ReservoirPair.sol\":7567:7600  SwapFeeChanged(swapFee, _swapFee) */
          log1
            /* \"src/ReservoirPair.sol\":7469:7476  swapFee */
          0x07
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sstore
            /* \"src/ReservoirPair.sol\":7293:7635  function updateSwapFee() public {... */
          jump\t// out
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
        tag_591:
          0x64
          mload(0x40)
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
          0x20
          0x04
          dup3
          add
          mstore
          0x13
          0x24
          dup3
          add
          mstore
          0x503a20494e56414c49445f535741505f46454500000000000000000000000000
          0x44
          dup3
          add
          mstore
          revert
            /* \"src/ReservoirPair.sol\":7453:7485  if (_swapFee == swapFee) return; */
        tag_589:
            /* \"src/ReservoirPair.sol\":7478:7485  return; */
          pop
          pop
          jump\t// out
            /* \"src/ReservoirPair.sol\":7354:7443  customSwapFee != type(uint256).max ? customSwapFee : factory.get(swapFeeName).toUint256() */
        tag_586:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap1
          pop
          mload(0x40)
          0x8eaa6ac000000000000000000000000000000000000000000000000000000000
            /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */
          dup2
          mstore
            /* \"src/ReservoirPair.sol\":7419:7430  swapFeeName */
          immutable(\"0x4c21324e1a4fdca228db96f937188124acece199982b123b328bdd8fee41b354\")
            /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */
          0x04
          dup3
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mstore
            /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */
          0x20
            /* \"src/ReservoirPair.sol\":7407:7414  factory */
          dup2
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x24
            /* \"src/ReservoirPair.sol\":7407:7414  factory */
          dup2
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":7407:7414  factory */
          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */
          gas
          staticcall
          swap2
          dup3
          iszero
          tag_593
          jumpi
          dup1
          swap3
          tag_595
          jumpi
            /* \"src/ReservoirPair.sol\":7354:7443  customSwapFee != type(uint256).max ? customSwapFee : factory.get(swapFeeName).toUint256() */
        tag_596:
          pop
          pop
          jump(tag_588)
            /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */
        tag_595:
          swap1
          swap2
          pop
          0x20
          dup3
          returndatasize
          dup3
          gt
          tag_597
          jumpi
        tag_598:
          dup2
          tag_599
          0x20
          swap4
          dup4
          tag_4
          jump\t// in
        tag_599:
          dup2
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sub
          slt
          tag_157
          jumpi
          pop
          mload
            /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */
          codesize
          dup1
          jump(tag_596)
        tag_597:
          returndatasize
          swap2
          pop
          jump(tag_598)
        tag_593:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mload(0x40)
          swap1
          returndatasize
          swap1
          dup3
          returndatacopy
          returndatasize
          swap1
          revert
            /* \"src/ReservoirPair.sol\":7641:8058  function updatePlatformFee() public {... */
        tag_16:
            /* \"src/ReservoirPair.sol\":7722:7739  customPlatformFee */
          0x0a
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
            /* \"src/ReservoirPair.sol\":7743:7760  type(uint256).max */
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":7722:7760  customPlatformFee != type(uint256).max */
          dup2
          eq
            /* \"src/ReservoirPair.sol\":7743:7760  type(uint256).max */
          tag_602
          jumpi
            /* \"src/ReservoirPair.sol\":7722:7826  customPlatformFee != type(uint256).max ? customPlatformFee : factory.read(PLATFORM_FEE_NAME).toUint256() */
        tag_604:
            /* \"src/ReservoirPair.sol\":7856:7867  platformFee */
          0x09
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
            /* \"src/ReservoirPair.sol\":7840:7867  _platformFee == platformFee */
          dup1
          dup3
          eq
            /* \"src/ReservoirPair.sol\":7836:7876  if (_platformFee == platformFee) return; */
          tag_589
          jumpi
            /* \"src/ReservoirPair.sol\":2789:2796  500_000 */
          0x07a120
            /* \"src/ReservoirPair.sol\":7894:7926  _platformFee <= MAX_PLATFORM_FEE */
          dup3
          gt
            /* \"src/ReservoirPair.sol\":2439:2460  \"Shared::platformFee\" */
          tag_607
          jumpi
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x40
            /* \"src/ReservoirPair.sol\":7970:8015  PlatformFeeChanged(platformFee, _platformFee) */
          0xc98a8b10b63c929f7799380bb4a0c444c713ebf74d8732f944c915034121aad1
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap2
          dup2
          mload
          swap1
          dup2
          mstore
          dup4
          0x20
          dup3
          add
          mstore
            /* \"src/ReservoirPair.sol\":7970:8015  PlatformFeeChanged(platformFee, _platformFee) */
          log1
            /* \"src/ReservoirPair.sol\":7856:7867  platformFee */
          0x09
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sstore
            /* \"src/ReservoirPair.sol\":7641:8058  function updatePlatformFee() public {... */
          jump\t// out
            /* \"src/ReservoirPair.sol\":2439:2460  \"Shared::platformFee\" */
        tag_607:
          0x64
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mload(0x40)
            /* \"src/ReservoirPair.sol\":2439:2460  \"Shared::platformFee\" */
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
          0x20
          0x04
          dup3
          add
          mstore
          0x17
          0x24
          dup3
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mstore
            /* \"src/ReservoirPair.sol\":2439:2460  \"Shared::platformFee\" */
          0x503a20494e56414c49445f504c4154464f524d5f464545000000000000000000
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x44
          dup3
          add
            /* \"src/ReservoirPair.sol\":2439:2460  \"Shared::platformFee\" */
          mstore
          revert
            /* \"src/ReservoirPair.sol\":7722:7826  customPlatformFee != type(uint256).max ? customPlatformFee : factory.read(PLATFORM_FEE_NAME).toUint256() */
        tag_602:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          pop
            /* \"src/ReservoirPair.sol\":7783:7814  factory.read(PLATFORM_FEE_NAME) */
          tag_609
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mload(0x40)
          tag_610
          dup2
          tag_3
          jump\t// in
        tag_610:
          0x13
          dup2
          mstore
          0x5368617265643a3a706c6174666f726d46656500000000000000000000000000
          0x20
          dup3
          add
          mstore
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":7783:7790  factory */
          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":7783:7814  factory.read(PLATFORM_FEE_NAME) */
          tag_52
          jump\t// in
        tag_609:
            /* \"src/ReservoirPair.sol\":7722:7826  customPlatformFee != type(uint256).max ? customPlatformFee : factory.read(PLATFORM_FEE_NAME).toUint256() */
          jump(tag_604)
            /* \"src/ReservoirPair.sol\":8509:8845  function _safeTransfer(address aToken, address aTo, uint256 aValue) internal returns (bool) {... */
        tag_17:
          swap2
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mload(0x40)
            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */
          swap1
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */
          0x20
          dup4
          add
          swap4
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xa9059cbb00000000000000000000000000000000000000000000000000000000
            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */
          dup6
          mstore
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */
          0x24
          dup4
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mstore
            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */
          0x44
          dup3
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mstore
            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */
          0x44
            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */
          dup2
          mstore
          tag_611
          dup2
          tag_2
          jump\t// in
        tag_611:
          0x00
            /* \"src/ReservoirPair.sol\":8706:8764  aToken.call(abi.encodeWithSelector(SELECTOR, aTo, aValue)) */
          swap3
          dup4
          swap3
          dup4
          dup1
          swap4
          mload
          swap3
          gas
          call
          swap1
            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */
          jumpi(tag_612, iszero(returndatasize))
          returndatasize
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap1
          0xffffffffffffffff
          dup3
          gt
          tag_575
          jumpi
          mload(0x40)
          swap2
          tag_616
            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */
          0x20
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
          0x1f
          dup5
          add
          and
          add
          dup5
          tag_4
          jump\t// in
        tag_616:
          dup3
          mstore
            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */
          returndatasize
          dup2
            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */
          0x20
            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */
          dup5
          add
          returndatacopy
        tag_617:
            /* \"src/ReservoirPair.sol\":8781:8838  success && (data.length == 0 || abi.decode(data, (bool))) */
          dup3
          tag_618
          jumpi
            /* \"src/ReservoirPair.sol\":8774:8838  return success && (data.length == 0 || abi.decode(data, (bool))) */
          pop
          pop
            /* \"src/ReservoirPair.sol\":8509:8845  function _safeTransfer(address aToken, address aTo, uint256 aValue) internal returns (bool) {... */
          swap1
          jump\t// out
            /* \"src/ReservoirPair.sol\":8781:8838  success && (data.length == 0 || abi.decode(data, (bool))) */
        tag_618:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap1
          dup1
          swap3
          pop
          mload
            /* \"src/ReservoirPair.sol\":8793:8809  data.length == 0 */
          swap2
          dup3
          iszero
            /* \"src/ReservoirPair.sol\":8793:8837  data.length == 0 || abi.decode(data, (bool)) */
          swap3
          dup4
          iszero
          tag_620
          jumpi
            /* \"src/ReservoirPair.sol\":8781:8838  success && (data.length == 0 || abi.decode(data, (bool))) */
        tag_621:
          pop
          pop
          pop
            /* \"src/ReservoirPair.sol\":8509:8845  function _safeTransfer(address aToken, address aTo, uint256 aValue) internal returns (bool) {... */
          swap1
          jump\t// out
            /* \"src/ReservoirPair.sol\":8793:8837  data.length == 0 || abi.decode(data, (bool)) */
        tag_620:
            /* \"src/ReservoirPair.sol\":8813:8837  abi.decode(data, (bool)) */
          dup2
          swap3
          swap4
          pop
          swap1
            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */
          0x20
            /* \"src/ReservoirPair.sol\":8813:8837  abi.decode(data, (bool)) */
          swap2
          dup2
          add
            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */
          sub
          slt
          tag_166
          jumpi
            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */
          0x20
            /* \"src/ReservoirPair.sol\":8813:8837  abi.decode(data, (bool)) */
          add
            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */
          mload
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap1
          dup2
          iszero
          iszero
          dup3
          sub
          tag_157
          jumpi
            /* \"src/ReservoirPair.sol\":8793:8837  data.length == 0 || abi.decode(data, (bool)) */
          pop
          codesize
          dup1
          dup1
          jump(tag_621)
            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */
        tag_612:
          0x60
          swap1
          jump(tag_617)
            /* \"src/ReservoirPair.sol\":8981:9714  function _checkedTransfer(ERC20 aToken, address aDestination, uint256 aAmount, uint256 aReserve0, uint256 aReserve1)... */
        tag_19:
          swap4
          swap1
          swap2
          swap3
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffff
          dup1
          swap6
          and
            /* \"src/ReservoirPair.sol\":9134:9187  _safeTransfer(address(aToken), aDestination, aAmount) */
          swap2
          tag_626
          dup6
          dup6
          dup6
          tag_17
          jump\t// in
        tag_626:
            /* \"src/ReservoirPair.sol\":9133:9187  !_safeTransfer(address(aToken), aDestination, aAmount) */
          iszero
            /* \"src/ReservoirPair.sol\":9129:9708  if (!_safeTransfer(address(aToken), aDestination, aAmount)) {... */
          tag_627
          jumpi
            /* \"src/ReservoirPair.sol\":8981:9714  function _checkedTransfer(ERC20 aToken, address aDestination, uint256 aAmount, uint256 aReserve0, uint256 aReserve1)... */
        tag_628:
          pop
          pop
          pop
          pop
          pop
          pop
          jump\t// out
            /* \"src/ReservoirPair.sol\":9129:9708  if (!_safeTransfer(address(aToken), aDestination, aAmount)) {... */
        tag_627:
            /* \"src/ReservoirPair.sol\":9239:9245  token0 */
          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup7
          and
            /* \"src/ReservoirPair.sol\":9229:9245  aToken == token0 */
          dup4
          eq
          swap2
            /* \"src/ReservoirPair.sol\":9229:9277  aToken == token0 ? token0Managed : token1Managed */
          dup3
          iszero
          tag_629
          jumpi
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xffffffffffffffffffffffffff
          dup1
            /* \"src/ReservoirPair.sol\":9248:9261  token0Managed */
          0x0c
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
          and
            /* \"src/ReservoirPair.sol\":9229:9277  aToken == token0 ? token0Managed : token1Managed */
        tag_631:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          and
          swap2
            /* \"src/ReservoirPair.sol\":9312:9352  aToken == token0 ? aReserve0 : aReserve1 */
          dup4
          iszero
          tag_632
          jumpi
          pop
          swap6
        tag_634:
            /* \"src/ReservoirPair.sol\":9370:9398  reserveOut - tokenOutManaged */
          dup6
          tag_635
          dup4
          dup10
          tag_9
          jump\t// in
        tag_635:
            /* \"src/ReservoirPair.sol\":9370:9408  reserveOut - tokenOutManaged < aAmount */
          lt
          iszero
          tag_647
          jumpi
            /* \"src/ReservoirPair.sol\":9471:9511  aAmount - (reserveOut - tokenOutManaged) */
          tag_638
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap2
            /* \"src/ReservoirPair.sol\":9482:9510  reserveOut - tokenOutManaged */
          tag_639
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap2
            /* \"src/ReservoirPair.sol\":9428:9440  assetManager */
          0x0b
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
          and
            /* \"src/ReservoirPair.sol\":9482:9510  reserveOut - tokenOutManaged */
          swap8
          tag_9
          jump\t// in
        tag_639:
            /* \"src/ReservoirPair.sol\":9471:9511  aAmount - (reserveOut - tokenOutManaged) */
          dup6
          tag_9
          jump\t// in
        tag_638:
            /* \"src/ReservoirPair.sol\":9428:9512  assetManager.returnAsset(aToken == token0, aAmount - (reserveOut - tokenOutManaged)) */
          dup6
          extcodesize
          iszero
          tag_560
          jumpi
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x44
          0x00
          swap3
          dup4
          mload(0x40)
            /* \"src/ReservoirPair.sol\":9428:9512  assetManager.returnAsset(aToken == token0, aAmount - (reserveOut - tokenOutManaged)) */
          swap9
          dup10
          swap5
          dup6
          swap4
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x1566d96d00000000000000000000000000000000000000000000000000000000
            /* \"src/ReservoirPair.sol\":9428:9512  assetManager.returnAsset(aToken == token0, aAmount - (reserveOut - tokenOutManaged)) */
          dup6
          mstore
          0x04
          dup6
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mstore
          0x24
          dup5
          add
          mstore
            /* \"src/ReservoirPair.sol\":9428:9512  assetManager.returnAsset(aToken == token0, aAmount - (reserveOut - tokenOutManaged)) */
          gas
          call
          dup1
          iszero
          tag_642
          jumpi
          tag_644
          jumpi
            /* \"src/ReservoirPair.sol\":9366:9698  if (reserveOut - tokenOutManaged < aAmount) {... */
        tag_645:
            /* \"src/ReservoirPair.sol\":9538:9591  _safeTransfer(address(aToken), aDestination, aAmount) */
          tag_646
          swap4
          pop
          tag_17
          jump\t// in
        tag_646:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          iszero
          tag_647
          jumpi
            /* \"src/ReservoirPair.sol\":9129:9708  if (!_safeTransfer(address(aToken), aDestination, aAmount)) {... */
          codesize
          dup1
          dup1
          dup1
          dup1
          dup1
          jump(tag_628)
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
        tag_647:
          mload(0x40)
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
          0x20
            /* \"src/ReservoirPair.sol\":9428:9512  assetManager.returnAsset(aToken == token0, aAmount - (reserveOut - tokenOutManaged)) */
          0x04
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup3
          add
          mstore
          0x13
          0x24
          dup3
          add
          mstore
          0x52503a205452414e534645525f4641494c454400000000000000000000000000
          0x44
          dup3
          add
          mstore
          0x64
          swap1
          revert
            /* \"src/ReservoirPair.sol\":9428:9512  assetManager.returnAsset(aToken == token0, aAmount - (reserveOut - tokenOutManaged)) */
        tag_644:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xffffffffffffffff
          dup5
          gt
          tag_550
          jumpi
            /* \"src/ReservoirPair.sol\":9538:9591  _safeTransfer(address(aToken), aDestination, aAmount) */
          tag_646
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap4
          0x40
          mstore
            /* \"src/ReservoirPair.sol\":9428:9512  assetManager.returnAsset(aToken == token0, aAmount - (reserveOut - tokenOutManaged)) */
          jump(tag_645)
        tag_642:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mload(0x40)
          returndatasize
          0x00
          dup3
          returndatacopy
          returndatasize
          swap1
          revert
            /* \"src/ReservoirPair.sol\":9312:9352  aToken == token0 ? aReserve0 : aReserve1 */
        tag_632:
          swap1
          pop
          swap6
          jump(tag_634)
            /* \"src/ReservoirPair.sol\":9229:9277  aToken == token0 ? token0Managed : token1Managed */
        tag_629:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xffffffffffffffffffffffffff
          dup1
            /* \"src/ReservoirPair.sol\":9264:9277  token1Managed */
          0x0c
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
          0x68
          shr
          and
            /* \"src/ReservoirPair.sol\":9229:9277  aToken == token0 ? token0Managed : token1Managed */
          jump(tag_631)
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
        tag_20:
          iszero
          tag_653
          jumpi
          jump\t// out
        tag_653:
          0x64
          mload(0x40)
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
          0x20
          0x04
          dup3
          add
          mstore
          0x0c
          0x24
          dup3
          add
          mstore
          0x52503a204f564552464c4f570000000000000000000000000000000000000000
          0x44
          dup3
          add
          mstore
          revert
            /* \"src/ReservoirPair.sol\":9804:10769  function _updateAndUnlock(... */
        tag_21:
          swap4
          swap3
          swap2
          swap1
          swap3
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":10007:10037  aBalance0 <= type(uint104).max */
          dup6
          gt
          iszero
            /* \"src/ReservoirPair.sol\":10007:10071  aBalance0 <= type(uint104).max && aBalance1 <= type(uint104).max */
          dup1
          tag_655
          jumpi
            /* \"src/ReservoirPair.sol\":9804:10769  function _updateAndUnlock(... */
        tag_656:
            /* \"src/ReservoirPair.sol\":9999:10088  require(aBalance0 <= type(uint104).max && aBalance1 <= type(uint104).max, \"RP: OVERFLOW\") */
          tag_657
          swap1
          tag_20
          jump\t// in
        tag_657:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":10106:10136  aReserve0 <= type(uint104).max */
          dup3
          gt
          iszero
            /* \"src/ReservoirPair.sol\":10106:10170  aReserve0 <= type(uint104).max && aReserve1 <= type(uint104).max */
          dup1
          tag_658
          jumpi
            /* \"src/ReservoirPair.sol\":9804:10769  function _updateAndUnlock(... */
        tag_659:
            /* \"src/ReservoirPair.sol\":10098:10187  require(aReserve0 <= type(uint104).max && aReserve1 <= type(uint104).max, \"RP: OVERFLOW\") */
          tag_660
          swap1
          tag_20
          jump\t// in
        tag_660:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xffffffff
            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */
          dup2
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x7fffffff
            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */
          timestamp
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          and
          sub
          and
            /* \"src/ReservoirPair.sol\":10407:10423  lTimeElapsed > 0 */
          iszero
          iszero
            /* \"src/ReservoirPair.sol\":10407:10441  lTimeElapsed > 0 && aReserve0 != 0 */
          dup1
          tag_661
          jumpi
            /* \"src/ReservoirPair.sol\":9804:10769  function _updateAndUnlock(... */
        tag_662:
            /* \"src/ReservoirPair.sol\":10407:10459  lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0 */
          dup1
          tag_663
          jumpi
            /* \"src/ReservoirPair.sol\":9804:10769  function _updateAndUnlock(... */
        tag_664:
            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */
          tag_665
          jumpi
            /* \"src/ReservoirPair.sol\":9804:10769  function _updateAndUnlock(... */
        tag_666:
          pop
          pop
            /* \"src/ReservoirPair.sol\":10566:10572  _slot0 */
          0x06
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup1
          sload
          0xffff000000000000000000000000000000000000000000000000000000000000
          and
          0xffffffffffffffffffffffffff
          swap5
          dup6
          and
          swap1
          dup2
          or
          0x68
          dup6
          swap1
          shl
          0xffffffffffffffffffffffffff00000000000000000000000000
          and
          or
          0x7fffffff0000000000000000000000000000000000000000000000000000
            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */
          timestamp
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xd0
          shl
          and
          or
          swap1
          swap2
          sstore
            /* \"src/ReservoirPair.sol\":10718:10762  Sync(uint104(aBalance0), uint104(aBalance1)) */
          0xff388a12130349259b5ae24af90448f511c2340be808f2c371230fc2da175c44
          swap4
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x40
          swap4
          swap2
          swap3
          pop
          swap1
          dup4
          mload
          swap3
          dup4
          mstore
          and
          0x20
          dup3
          add
          mstore
            /* \"src/ReservoirPair.sol\":10718:10762  Sync(uint104(aBalance0), uint104(aBalance1)) */
          log1
            /* \"src/ReservoirPair.sol\":9804:10769  function _updateAndUnlock(... */
          jump\t// out
            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */
        tag_665:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap1
          swap3
          swap2
          swap4
            /* \"src/curve/stable/StableMintBurn.sol\":9895:9901  _slot0 */
          0x06
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
          swap1
            /* \"src/curve/stable/StableMintBurn.sol\":9881:9908  _observations[_slot0.index] */
          tag_668
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup3
          0xf0
          shr
            /* \"src/curve/stable/StableMintBurn.sol\":9881:9908  _observations[_slot0.index] */
          tag_35
          jump\t// in
        tag_668:
            /* \"src/curve/stable/StableMintBurn.sol\":10011:10032  _getCurrentAPrecise() */
          pop
          swap2
          tag_669
          tag_48
          jump\t// in
        tag_669:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap1
          0xffffffffffffffffffffffffffffffff
            /* \"src/curve/stable/StableMintBurn.sol\":10073:10110  aReserve1 * token1PrecisionMultiplier */
          tag_670
            /* \"src/curve/stable/StableMintBurn.sol\":10034:10071  aReserve0 * token0PrecisionMultiplier */
          tag_671
            /* \"src/curve/stable/StableMintBurn.sol\":10046:10071  token0PrecisionMultiplier */
          dup3
          immutable(\"0x372e991e4284f7d12d6b2461cce9899511b05ac053845de253542adb96f2dca0\")
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          and
            /* \"src/curve/stable/StableMintBurn.sol\":10034:10071  aReserve0 * token0PrecisionMultiplier */
          dup11
          tag_36
          jump\t// in
        tag_671:
            /* \"src/curve/stable/StableMintBurn.sol\":10085:10110  token1PrecisionMultiplier */
          swap2
          immutable(\"0xc4ba931b733b92a51f51c0955dd7716c7a38f3de911d23a5d0fbd5d23c0fbe8c\")
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          and
            /* \"src/curve/stable/StableMintBurn.sol\":10073:10110  aReserve1 * token1PrecisionMultiplier */
          dup11
          tag_36
          jump\t// in
        tag_670:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap1
          0x01fffffffffffffffe
          0xffffffffffffffff
          dup6
          and
          swap5
          0x01
          shl
          and
            /* \"src/libraries/StableOracleMath.sol\":1988:2084  StableMath._computeLiquidityFromAdjustedBalances(reserve0, reserve1, 2 * amplificationParameter) */
          swap4
          tag_672
          dup6
          dup5
          dup5
          tag_58
          jump\t// in
        tag_672:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap1
          dup1
          dup7
          div
            /* \"src/libraries/StableOracleMath.sol\":2057:2058  2 */
          0x02
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          eq
          swap1
          iszero
          or
          iszero
          tag_564
          jumpi
            /* \"src/libraries/StableOracleMath.sol\":2182:2209  (invariant * a) - invariant */
          tag_675
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap1
            /* \"src/libraries/StableOracleMath.sol\":2183:2196  invariant * a */
          tag_252
            /* \"src/libraries/StableMath.sol\":320:323  100 */
          0x64
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup8
          div
            /* \"src/libraries/StableOracleMath.sol\":2183:2196  invariant * a */
          dup3
          tag_36
          jump\t// in
            /* \"src/libraries/StableOracleMath.sol\":2182:2209  (invariant * a) - invariant */
        tag_675:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap1
            /* \"src/libraries/StableMath.sol\":320:323  100 */
          0x64
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup6
          div
          0x01
          shl
          swap1
            /* \"src/libraries/StableMath.sol\":320:323  100 */
          0x64
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup7
          div
          dup3
          div
            /* \"src/libraries/StableOracleMath.sol\":2057:2058  2 */
          0x02
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          eq
            /* \"src/libraries/StableMath.sol\":320:323  100 */
          0x64
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup8
          div
          iszero
          or
          iszero
          tag_564
          jumpi
            /* \"src/libraries/StableOracleMath.sol\":2496:2540  axy2 + ((a * reserve0).mulWadDown(reserve0)) */
          tag_679
            /* \"src/libraries/StableOracleMath.sol\":2236:2252  a * 2 * reserve0 */
          dup7
            /* \"src/libraries/StableOracleMath.sol\":2504:2539  (a * reserve0).mulWadDown(reserve0) */
          tag_680
            /* \"src/libraries/StableOracleMath.sol\":2236:2252  a * 2 * reserve0 */
          dup4
            /* \"src/libraries/StableOracleMath.sol\":2505:2517  a * reserve0 */
          tag_690
            /* \"src/libraries/StableOracleMath.sol\":2236:2252  a * 2 * reserve0 */
          dup2
            /* \"src/libraries/StableMath.sol\":320:323  100 */
          0x64
            /* \"src/libraries/StableOracleMath.sol\":2354:2425  axy2 + ((a * reserve1).mulWadDown(reserve1)) - (b.mulWadDown(reserve1)) */
          tag_682
            /* \"src/libraries/StableOracleMath.sol\":2236:2252  a * 2 * reserve0 */
          dup12
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":795:816  mulDivDown(x, y, WAD) */
          tag_683
            /* \"src/libraries/StableOracleMath.sol\":2354:2398  axy2 + ((a * reserve1).mulWadDown(reserve1)) */
          tag_684
            /* \"src/libraries/StableOracleMath.sol\":2362:2397  (a * reserve1).mulWadDown(reserve1) */
          tag_685
            /* \"src/libraries/StableOracleMath.sol\":2496:2567  axy2 + ((a * reserve0).mulWadDown(reserve0)) - (b.mulWadDown(reserve0)) */
          tag_686
            /* \"src/libraries/StableOracleMath.sol\":2236:2252  a * 2 * reserve0 */
          swap16
            /* \"src/libraries/StableOracleMath.sol\":2363:2375  a * reserve1 */
          tag_690
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":795:816  mulDivDown(x, y, WAD) */
          tag_683
            /* \"src/libraries/StableOracleMath.sol\":2236:2252  a * 2 * reserve0 */
          swap16
          dup9
            /* \"src/libraries/StableOracleMath.sol\":2235:2274  (a * 2 * reserve0).mulWadDown(reserve1) */
          tag_689
            /* \"src/libraries/StableOracleMath.sol\":2236:2252  a * 2 * reserve0 */
          dup5
          tag_690
          dup14
          dup3
          swap6
          tag_36
          jump\t// in
        tag_690:
            /* \"src/libraries/StableOracleMath.sol\":2235:2274  (a * 2 * reserve0).mulWadDown(reserve1) */
          tag_60
          jump\t// in
        tag_689:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap15
          div
            /* \"src/libraries/StableOracleMath.sol\":2363:2375  a * reserve1 */
          tag_36
          jump\t// in
            /* \"src/libraries/StableOracleMath.sol\":2362:2397  (a * reserve1).mulWadDown(reserve1) */
        tag_685:
            /* \"src/libraries/StableOracleMath.sol\":2354:2398  axy2 + ((a * reserve1).mulWadDown(reserve1)) */
          dup11
          tag_22
          jump\t// in
        tag_684:
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":795:816  mulDivDown(x, y, WAD) */
          swap2
          dup14
          tag_60
          jump\t// in
        tag_683:
            /* \"src/libraries/StableOracleMath.sol\":2354:2425  axy2 + ((a * reserve1).mulWadDown(reserve1)) - (b.mulWadDown(reserve1)) */
          swap1
          tag_9
          jump\t// in
        tag_682:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap13
          div
            /* \"src/libraries/StableOracleMath.sol\":2505:2517  a * reserve0 */
          tag_36
          jump\t// in
            /* \"src/libraries/StableOracleMath.sol\":2504:2539  (a * reserve0).mulWadDown(reserve0) */
        tag_680:
            /* \"src/libraries/StableOracleMath.sol\":2496:2540  axy2 + ((a * reserve0).mulWadDown(reserve0)) */
          swap1
          tag_22
          jump\t// in
        tag_679:
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":795:816  mulDivDown(x, y, WAD) */
          swap3
          tag_60
          jump\t// in
            /* \"src/libraries/StableOracleMath.sol\":2496:2567  axy2 + ((a * reserve0).mulWadDown(reserve0)) - (b.mulWadDown(reserve0)) */
        tag_686:
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":655:659  1e18 */
          0x0de0b6b3a7640000
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":2274:2762  assembly {... */
          0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21
          dup5
          gt
          dup2
          mul
          iszero
          dup3
          mul
          iszero
          tag_560
          jumpi
            /* \"src/curve/stable/StableMintBurn.sol\":10996:11023  _observations[_slot0.index] */
          tag_693
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":2274:2762  assembly {... */
          swap4
          mul
          swap1
          dup1
          dup3
          div
          swap2
          mod
          iszero
          iszero
          add
            /* \"src/libraries/StableOracleMath.sol\":725:762  LogCompression.toLowResLog(spotPrice) */
          swap4
            /* \"src/libraries/StableOracleMath.sol\":3356:3389  LogCompression.toLowResLog(sqrtK) */
          tag_694
            /* \"src/libraries/StableOracleMath.sol\":3306:3325  reserve0 * reserve1 */
          tag_695
            /* \"src/curve/stable/StableMintBurn.sol\":10357:10420  _calcClampedPrice(currRawPrice, prevClampedPrice, aTimeElapsed) */
          tag_696
            /* \"src/libraries/StableOracleMath.sol\":725:762  LogCompression.toLowResLog(spotPrice) */
          tag_697
          dup9
          tag_55
          jump\t// in
        tag_697:
            /* \"src/libraries/StableOracleMath.sol\":779:814  rawLogSpotPrice >= type(int112).min */
          swap8
            /* \"src/libraries/StableOracleMath.sol\":798:814  type(int112).min */
          0xffffffffffffffffffffffffffffffffffff8000000000000000000000000000
            /* \"src/libraries/StableOracleMath.sol\":779:814  rawLogSpotPrice >= type(int112).min */
          dup10
          slt
          iszero
            /* \"src/libraries/StableOracleMath.sol\":779:853  rawLogSpotPrice >= type(int112).min && rawLogSpotPrice <= type(int112).max */
          dup1
          tag_698
          jumpi
            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */
        tag_699:
            /* \"src/libraries/StableOracleMath.sol\":772:854  assert(rawLogSpotPrice >= type(int112).min && rawLogSpotPrice <= type(int112).max) */
          tag_700
          swap1
          tag_49
          jump\t// in
        tag_700:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xffffffff
            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */
          dup11
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x7fffffff
            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */
          timestamp
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          and
          sub
          and
          swap1
            /* \"src/curve/stable/StableMintBurn.sol\":10389:10405  prevClampedPrice */
          0x01000e
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
            /* \"src/curve/stable/StableMintBurn.sol\":10357:10420  _calcClampedPrice(currRawPrice, prevClampedPrice, aTimeElapsed) */
          swap1
          tag_50
          jump\t// in
        tag_696:
            /* \"src/libraries/StableOracleMath.sol\":3306:3325  reserve0 * reserve1 */
          swap12
          swap1
          swap11
          tag_36
          jump\t// in
        tag_695:
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */
          0xb5
          dup2
          0x010000000000000000000000000000000000
          dup2
          lt
          iszero
          tag_701
          jumpi
            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */
        tag_702:
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */
          dup1
          0x01000000000000000000
          0x010000
          swap3
          lt
          iszero
          tag_703
          jumpi
            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */
        tag_704:
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */
          0x010000000000
          dup2
          lt
          iszero
          tag_705
          jumpi
            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */
        tag_706:
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */
          0x01000000
          dup2
          lt
          iszero
          tag_707
          jumpi
            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */
        tag_708:
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */
          add
          mul
          0x12
          shr
          dup1
          dup3
          div
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x01
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */
          shr
          dup1
          dup3
          div
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x01
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */
          shr
          dup1
          dup3
          div
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x01
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */
          shr
          dup1
          dup3
          div
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x01
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */
          shr
          dup1
          dup3
          div
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x01
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */
          shr
          dup1
          dup3
          div
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x01
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */
          shr
          dup1
          dup3
          div
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x01
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */
          shr
          dup1
          dup1
          swap3
          div
          lt
          swap1
          sub
            /* \"src/libraries/StableOracleMath.sol\":3356:3389  LogCompression.toLowResLog(sqrtK) */
          tag_55
          jump\t// in
        tag_694:
            /* \"src/libraries/StableOracleMath.sol\":3406:3435  rawResult >= type(int112).min */
          swap8
            /* \"src/libraries/StableOracleMath.sol\":798:814  type(int112).min */
          0xffffffffffffffffffffffffffffffffffff8000000000000000000000000000
            /* \"src/libraries/StableOracleMath.sol\":3406:3435  rawResult >= type(int112).min */
          dup10
          slt
          iszero
            /* \"src/libraries/StableOracleMath.sol\":3406:3468  rawResult >= type(int112).min && rawResult <= type(int112).max */
          dup1
          tag_709
          jumpi
            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */
        tag_710:
            /* \"src/libraries/StableOracleMath.sol\":3399:3469  assert(rawResult >= type(int112).min && rawResult <= type(int112).max) */
          tag_711
          swap1
          tag_49
          jump\t// in
        tag_711:
            /* \"src/curve/stable/StableMintBurn.sol\":10389:10405  prevClampedPrice */
          0x01000e
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sstore
          sload
          0xffffffff
            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */
          dup7
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x7fffffff
            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */
          timestamp
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          and
          sub
          and
            /* \"src/curve/stable/StableMintBurn.sol\":9895:9901  _slot0 */
          0x06
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          signextend
          swap2
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
          0xffff000000000000000000000000000000000000000000000000000000000000
          0x01
          dup4
          0xf0
          shr
          add
          0xf0
          shl
          and
          swap2
          and
          or
          swap2
          dup3
            /* \"src/curve/stable/StableMintBurn.sol\":9895:9901  _slot0 */
          0x06
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sstore
          mload(0x40)
          swap6
          tag_712
          dup8
          tag_2
          jump\t// in
        tag_712:
          0xffffffff
            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */
          dup9
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x7fffffff
            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */
          timestamp
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          and
          sub
          and
          0x0d
          signextend
          swap1
          0x0d
          signextend
          mul
          0x0d
          signextend
          dup3
          0x0d
          signextend
          add
          0x0d
          signextend
          dup7
          mstore
            /* \"src/curve/stable/StableMintBurn.sol\":11026:11100  Observation(logAccRawPrice, logAccClampedPrice, logAccLiq, aTimestampLast) */
          dup1
          0x20
          dup8
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap11
            /* \"src/curve/stable/StableMintBurn.sol\":9895:9901  _slot0 */
          0x06
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          signextend
          mul
            /* \"src/curve/stable/StableMintBurn.sol\":9895:9901  _slot0 */
          0x06
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          signextend
          dup3
          0x70
          shr
            /* \"src/curve/stable/StableMintBurn.sol\":9895:9901  _slot0 */
          0x06
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          signextend
          add
            /* \"src/curve/stable/StableMintBurn.sol\":9895:9901  _slot0 */
          0x06
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          signextend
          dup11
          mstore
          0x40
            /* \"src/curve/stable/StableMintBurn.sol\":11026:11100  Observation(logAccRawPrice, logAccClampedPrice, logAccLiq, aTimestampLast) */
          dup7
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap9
            /* \"src/curve/stable/StableMintBurn.sol\":9895:9901  _slot0 */
          0x06
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          signextend
          mul
            /* \"src/curve/stable/StableMintBurn.sol\":9895:9901  _slot0 */
          0x06
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          signextend
          swap1
          0xa8
          shr
            /* \"src/curve/stable/StableMintBurn.sol\":9895:9901  _slot0 */
          0x06
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          signextend
          add
            /* \"src/curve/stable/StableMintBurn.sol\":9895:9901  _slot0 */
          0x06
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          signextend
          dup8
          mstore
          0xffffffff
            /* \"src/curve/stable/StableMintBurn.sol\":11026:11100  Observation(logAccRawPrice, logAccClampedPrice, logAccLiq, aTimestampLast) */
          0x60
          dup6
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap6
          and
          dup6
          mstore
          0xf0
          shr
            /* \"src/curve/stable/StableMintBurn.sol\":10996:11023  _observations[_slot0.index] */
          tag_35
          jump\t// in
        tag_693:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          tag_713
          jumpi
          swap2
          mload
          swap6
          mload
          swap5
          mload
          swap3
          mload
          0xffffffff00000000000000000000000000000000000000000000000000000000
          0xe0
          swap2
          swap1
          swap2
          shl
          and
          0xa8
          swap4
          swap1
          swap4
          shl
          0xffffffffffffff000000000000000000000000000000000000000000
          and
          0xffffffffffffffffffffffffffff
          swap1
          swap7
          and
          0x70
          swap6
          swap1
          swap6
          shl
          0xffffffffffffff0000000000000000000000000000
          and
          swap5
          swap1
          swap5
          or
          swap5
          swap1
          swap5
          or
          or
          swap1
          swap3
          sstore
          swap1
          dup1
          0xffffffffffffffffffffffffff
          dup1
            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */
          jump(tag_666)
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
        tag_713:
          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)
          mstore(0x04, 0x00)
          revert(0x00, 0x24)
            /* \"src/libraries/StableOracleMath.sol\":3406:3468  rawResult >= type(int112).min && rawResult <= type(int112).max */
        tag_709:
          pop
            /* \"src/libraries/StableOracleMath.sol\":3452:3468  type(int112).max */
          0x7fffffffffffffffffffffffffff
            /* \"src/libraries/StableOracleMath.sol\":3439:3468  rawResult <= type(int112).max */
          dup10
          sgt
          iszero
            /* \"src/libraries/StableOracleMath.sol\":3406:3468  rawResult >= type(int112).min && rawResult <= type(int112).max */
          jump(tag_710)
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */
        tag_707:
          0x10
          shr
          swap2
          0x08
          shl
          swap2
          jump(tag_708)
        tag_705:
          0x20
          shr
          swap2
          0x10
          shl
          swap2
          jump(tag_706)
        tag_703:
          0x40
          shr
          swap2
          0x20
          shl
          swap2
          jump(tag_704)
        tag_701:
          pop
          0xb50000000000000000
          swap1
          pop
          0x80
          dup3
          swap1
          shr
          jump(tag_702)
            /* \"src/libraries/StableOracleMath.sol\":779:853  rawLogSpotPrice >= type(int112).min && rawLogSpotPrice <= type(int112).max */
        tag_698:
          pop
            /* \"src/libraries/StableOracleMath.sol\":837:853  type(int112).max */
          0x7fffffffffffffffffffffffffff
            /* \"src/libraries/StableOracleMath.sol\":818:853  rawLogSpotPrice <= type(int112).max */
          dup10
          sgt
          iszero
            /* \"src/libraries/StableOracleMath.sol\":779:853  rawLogSpotPrice >= type(int112).min && rawLogSpotPrice <= type(int112).max */
          jump(tag_699)
            /* \"src/ReservoirPair.sol\":10407:10459  lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0 */
        tag_663:
            /* \"src/ReservoirPair.sol\":10445:10459  aReserve1 != 0 */
          pop
          dup3
          iszero
          iszero
            /* \"src/ReservoirPair.sol\":10407:10459  lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0 */
          jump(tag_664)
            /* \"src/ReservoirPair.sol\":10407:10441  lTimeElapsed > 0 && aReserve0 != 0 */
        tag_661:
            /* \"src/ReservoirPair.sol\":10427:10441  aReserve0 != 0 */
          pop
          dup2
          iszero
          iszero
            /* \"src/ReservoirPair.sol\":10407:10441  lTimeElapsed > 0 && aReserve0 != 0 */
          jump(tag_662)
            /* \"src/ReservoirPair.sol\":10106:10170  aReserve0 <= type(uint104).max && aReserve1 <= type(uint104).max */
        tag_658:
          pop
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":10140:10170  aReserve1 <= type(uint104).max */
          dup4
          gt
          iszero
            /* \"src/ReservoirPair.sol\":10106:10170  aReserve0 <= type(uint104).max && aReserve1 <= type(uint104).max */
          jump(tag_659)
            /* \"src/ReservoirPair.sol\":10007:10071  aBalance0 <= type(uint104).max && aBalance1 <= type(uint104).max */
        tag_655:
          pop
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":10041:10071  aBalance1 <= type(uint104).max */
          dup5
          gt
          iszero
            /* \"src/ReservoirPair.sol\":10007:10071  aBalance0 <= type(uint104).max && aBalance1 <= type(uint104).max */
          jump(tag_656)
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
        tag_22:
          swap2
          swap1
          dup3
          add
          dup1
          swap3
          gt
          tag_564
          jumpi
          jump\t// out
            /* \"src/ReservoirPair.sol\":12869:13005  function _totalToken0() internal view returns (uint256) {... */
        tag_23:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mload(0x40)
          0x70a0823100000000000000000000000000000000000000000000000000000000
            /* \"src/ReservoirPair.sol\":12942:12973  token0.balanceOf(address(this)) */
          dup2
          mstore
            /* \"src/ReservoirPair.sol\":12967:12971  this */
          address
            /* \"src/ReservoirPair.sol\":12942:12973  token0.balanceOf(address(this)) */
          0x04
          dup3
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mstore
            /* \"src/ReservoirPair.sol\":12942:12973  token0.balanceOf(address(this)) */
          0x20
            /* \"src/ReservoirPair.sol\":12942:12948  token0 */
          dup2
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x24
            /* \"src/ReservoirPair.sol\":12942:12948  token0 */
          dup2
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":12942:12948  token0 */
          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":12942:12973  token0.balanceOf(address(this)) */
          gas
          staticcall
          dup1
          iszero
          tag_642
          jumpi
          0x00
          swap1
          tag_719
          jumpi
            /* \"src/ReservoirPair.sol\":12869:13005  function _totalToken0() internal view returns (uint256) {... */
        tag_720:
            /* \"src/ReservoirPair.sol\":12942:12998  token0.balanceOf(address(this)) + uint256(token0Managed) */
          tag_721
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap2
          pop
          0xffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":12984:12997  token0Managed */
          0x0c
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
          and
            /* \"src/ReservoirPair.sol\":12942:12998  token0.balanceOf(address(this)) + uint256(token0Managed) */
          swap1
          tag_22
          jump\t// in
        tag_721:
            /* \"src/ReservoirPair.sol\":12869:13005  function _totalToken0() internal view returns (uint256) {... */
          swap1
          jump\t// out
            /* \"src/ReservoirPair.sol\":12942:12973  token0.balanceOf(address(this)) */
        tag_719:
          0x20
          dup3
          returndatasize
          dup3
          gt
          tag_722
          jumpi
        tag_723:
          dup2
          tag_724
          0x20
          swap4
          dup4
          tag_4
          jump\t// in
        tag_724:
          dup2
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sub
          slt
          tag_157
          jumpi
          pop
            /* \"src/ReservoirPair.sol\":12942:12998  token0.balanceOf(address(this)) + uint256(token0Managed) */
          tag_721
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap1
          mload
            /* \"src/ReservoirPair.sol\":12942:12973  token0.balanceOf(address(this)) */
          jump(tag_720)
        tag_722:
          returndatasize
          swap2
          pop
          jump(tag_723)
            /* \"src/ReservoirPair.sol\":13011:13147  function _totalToken1() internal view returns (uint256) {... */
        tag_24:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mload(0x40)
          0x70a0823100000000000000000000000000000000000000000000000000000000
            /* \"src/ReservoirPair.sol\":13084:13115  token1.balanceOf(address(this)) */
          dup2
          mstore
            /* \"src/ReservoirPair.sol\":13109:13113  this */
          address
            /* \"src/ReservoirPair.sol\":13084:13115  token1.balanceOf(address(this)) */
          0x04
          dup3
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mstore
            /* \"src/ReservoirPair.sol\":13084:13115  token1.balanceOf(address(this)) */
          0x20
            /* \"src/ReservoirPair.sol\":13084:13090  token1 */
          dup2
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x24
            /* \"src/ReservoirPair.sol\":13084:13090  token1 */
          dup2
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":13084:13090  token1 */
          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":13084:13115  token1.balanceOf(address(this)) */
          gas
          staticcall
          dup1
          iszero
          tag_642
          jumpi
          0x00
          swap1
          tag_729
          jumpi
            /* \"src/ReservoirPair.sol\":13011:13147  function _totalToken1() internal view returns (uint256) {... */
        tag_730:
            /* \"src/ReservoirPair.sol\":13084:13140  token1.balanceOf(address(this)) + uint256(token1Managed) */
          tag_721
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap2
          pop
          0xffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":13126:13139  token1Managed */
          0x0c
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
          0x68
          shr
          and
            /* \"src/ReservoirPair.sol\":13084:13140  token1.balanceOf(address(this)) + uint256(token1Managed) */
          swap1
          tag_22
          jump\t// in
            /* \"src/ReservoirPair.sol\":13084:13115  token1.balanceOf(address(this)) */
        tag_729:
          0x20
          dup3
          returndatasize
          dup3
          gt
          tag_732
          jumpi
        tag_733:
          dup2
          tag_734
          0x20
          swap4
          dup4
          tag_4
          jump\t// in
        tag_734:
          dup2
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sub
          slt
          tag_157
          jumpi
          pop
            /* \"src/ReservoirPair.sol\":13084:13140  token1.balanceOf(address(this)) + uint256(token1Managed) */
          tag_721
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap1
          mload
            /* \"src/ReservoirPair.sol\":13084:13115  token1.balanceOf(address(this)) */
          jump(tag_730)
        tag_732:
          returndatasize
          swap2
          pop
          jump(tag_733)
            /* \"src/ReservoirPair.sol\":13916:14584  function _syncManaged(uint256 aReserve0, uint256 aReserve1)... */
        tag_26:
          swap1
          swap2
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffff
          swap2
          dup3
            /* \"src/ReservoirPair.sol\":14074:14086  assetManager */
          0x0b
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
          and
            /* \"src/ReservoirPair.sol\":14066:14101  address(assetManager) == address(0) */
          swap3
          dup4
          iszero
            /* \"src/ReservoirPair.sol\":14062:14157  if (address(assetManager) == address(0)) {... */
          tag_737
          jumpi
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mload(0x40)
          0xd4fac45d00000000000000000000000000000000000000000000000000000000
            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */
          dup1
          dup3
          mstore
            /* \"src/ReservoirPair.sol\":14216:14220  this */
          address
            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */
          0x04
          dup4
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mstore
            /* \"src/ReservoirPair.sol\":14222:14228  token0 */
          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffff
          dup2
          and
          0x24
          dup5
          add
          mstore
          swap2
          swap6
            /* \"src/ReservoirPair.sol\":14222:14228  token0 */
          swap2
          swap4
            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */
          0x20
          swap4
            /* \"src/ReservoirPair.sol\":14222:14228  token0 */
          swap1
          swap3
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap1
            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */
          dup5
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup9
          dup1
          0x44
          dup2
          add
            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */
          sub
          dup2
          0x00
          dup1
          swap7
          gas
          call
          swap8
          dup9
          iszero
          tag_740
          jumpi
          dup3
          swap9
          tag_742
          jumpi
            /* \"src/ReservoirPair.sol\":13916:14584  function _syncManaged(uint256 aReserve0, uint256 aReserve1)... */
        tag_743:
          pop
            /* \"src/ReservoirPair.sol\":14074:14086  assetManager */
          0x0b
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
          mload(0x40)
            /* \"src/ReservoirPair.sol\":14264:14301  assetManager.getBalance(this, token1) */
          swap4
          dup5
          mstore
            /* \"src/ReservoirPair.sol\":14216:14220  this */
          address
            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */
          0x04
            /* \"src/ReservoirPair.sol\":14264:14301  assetManager.getBalance(this, token1) */
          dup6
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mstore
            /* \"src/ReservoirPair.sol\":14294:14300  token1 */
          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffff
          dup2
          and
          0x24
          dup7
          add
          mstore
            /* \"src/ReservoirPair.sol\":14294:14300  token1 */
          swap4
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap3
          swap2
            /* \"src/ReservoirPair.sol\":14294:14300  token1 */
          dup7
          swap2
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup5
          swap2
          0x44
          swap2
          dup4
          swap2
          dup7
          swap2
          and
            /* \"src/ReservoirPair.sol\":14264:14301  assetManager.getBalance(this, token1) */
          gas
          call
          swap5
          dup6
          iszero
          tag_745
          jumpi
          dup2
          swap6
          tag_747
          jumpi
            /* \"src/ReservoirPair.sol\":13916:14584  function _syncManaged(uint256 aReserve0, uint256 aReserve1)... */
        tag_748:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          pop
          pop
          pop
            /* \"src/ReservoirPair.sol\":14551:14577  lToken1Managed.toUint104() */
          tag_749
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xffffffffffff0000000000000000000000000000000000000000000000000000
          swap3
            /* \"src/ReservoirPair.sol\":14499:14525  lToken0Managed.toUint104() */
          tag_750
            /* \"src/ReservoirPair.sol\":14409:14472  _handleReport(token1, aReserve1, token1Managed, lToken1Managed) */
          tag_751
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup7
          0xffffffffffffffffffffffffff00000000000000000000000000
          swap6
            /* \"src/ReservoirPair.sol\":14324:14387  _handleReport(token0, aReserve0, token0Managed, lToken0Managed) */
          tag_752
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup13
            /* \"src/ReservoirPair.sol\":14357:14370  token0Managed */
          0x0c
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
          swap12
          dup13
          swap8
          0xffffffffffffffffffffffffff
          dup1
          swap10
          and
            /* \"src/ReservoirPair.sol\":14324:14387  _handleReport(token0, aReserve0, token0Managed, lToken0Managed) */
          swap2
          tag_29
          jump\t// in
        tag_752:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap13
          dup6
          dup12
          0x68
          shr
          and
            /* \"src/ReservoirPair.sol\":14409:14472  _handleReport(token1, aReserve1, token1Managed, lToken1Managed) */
          swap2
          tag_29
          jump\t// in
        tag_751:
            /* \"src/ReservoirPair.sol\":14499:14525  lToken0Managed.toUint104() */
          swap9
          tag_27
          jump\t// in
        tag_750:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":14551:14577  lToken1Managed.toUint104() */
          swap4
          tag_27
          jump\t// in
        tag_749:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x68
          shl
          and
          swap3
          and
          or
          or
            /* \"src/ReservoirPair.sol\":14357:14370  token0Managed */
          0x0c
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sstore
            /* \"src/ReservoirPair.sol\":13916:14584  function _syncManaged(uint256 aReserve0, uint256 aReserve1)... */
          jump\t// out
            /* \"src/ReservoirPair.sol\":14264:14301  assetManager.getBalance(this, token1) */
        tag_747:
          swap1
          swap2
          dup1
          swap4
          swap6
          pop
          dup2
          returndatasize
          dup4
          gt
          tag_753
          jumpi
        tag_754:
          tag_755
          dup2
          dup4
          tag_4
          jump\t// in
        tag_755:
          dup2
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sub
          slt
          tag_157
          jumpi
          pop
          mload
          swap2
            /* \"src/ReservoirPair.sol\":14551:14577  lToken1Managed.toUint104() */
          tag_749
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup3
            /* \"src/ReservoirPair.sol\":14499:14525  lToken0Managed.toUint104() */
          tag_750
            /* \"src/ReservoirPair.sol\":14264:14301  assetManager.getBalance(this, token1) */
          jump(tag_748)
        tag_753:
          pop
          returndatasize
          jump(tag_754)
        tag_745:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          pop
          mload(0x40)
          swap1
          returndatasize
          swap1
          dup3
          returndatacopy
          returndatasize
          swap1
          revert
            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */
        tag_742:
          swap1
          swap8
          pop
          dup5
          dup2
          dup2
          returndatasize
          dup4
          gt
          tag_758
          jumpi
        tag_759:
          tag_760
          dup2
          dup4
          tag_4
          jump\t// in
        tag_760:
          dup2
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sub
          slt
          tag_166
          jumpi
          mload
            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */
          swap7
          codesize
          jump(tag_743)
        tag_758:
          pop
          returndatasize
          jump(tag_759)
        tag_740:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mload(0x40)
          returndatasize
          dup5
          dup3
          returndatacopy
          returndatasize
          swap1
          revert
            /* \"src/ReservoirPair.sol\":14062:14157  if (address(assetManager) == address(0)) {... */
        tag_737:
          pop
            /* \"src/ReservoirPair.sol\":14117:14146  return (aReserve0, aReserve1) */
          swap3
          swap2
          pop
          jump\t// out
            /* \"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":10566:10758  function toUint104(uint256 value) internal pure returns (uint104) {... */
        tag_27:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xffffffffffffffffffffffffff
            /* \"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":10650:10676  value <= type(uint104).max */
          swap1
          dup2
          dup2
          gt
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          tag_763
          jumpi
          and
            /* \"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":10566:10758  function toUint104(uint256 value) internal pure returns (uint104) {... */
          swap1
          jump\t// out
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
        tag_763:
          0x84
          mload(0x40)
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
          0x20
          0x04
          dup3
          add
          mstore
          0x27
          0x24
          dup3
          add
          mstore
          0x53616665436173743a2076616c756520646f65736e27742066697420696e2031
          0x44
          dup3
          add
          mstore
          0x3034206269747300000000000000000000000000000000000000000000000000
          0x64
          dup3
          add
          mstore
          revert
            /* \"src/ReservoirPair.sol\":13153:13910  function _handleReport(ERC20 aToken, uint256 aReserve, uint256 aPrevBalance, uint256 aNewBalance)... */
        tag_29:
          swap2
          swap1
          swap3
            /* \"src/ReservoirPair.sol\":13327:13353  aNewBalance > aPrevBalance */
          dup2
          dup2
          gt
            /* \"src/ReservoirPair.sol\":13323:13904  if (aNewBalance > aPrevBalance) {... */
          0x00
            /* \"src/ReservoirPair.sol\":13327:13353  aNewBalance > aPrevBalance */
          eq
          tag_765
          jumpi
            /* \"src/ReservoirPair.sol\":13416:13442  aNewBalance - aPrevBalance */
          tag_767
            /* \"src/ReservoirPair.sol\":13526:13544  aReserve + lProfit */
          tag_721
            /* \"src/ReservoirPair.sol\":13416:13442  aNewBalance - aPrevBalance */
          swap5
          swap3
            /* \"src/ReservoirPair.sol\":13462:13493  ProfitReported(aToken, lProfit) */
          0xd85f20827037d49bc45762fefff2ddfe9a1a5412ad3dfc1cdca78d2e52f4ba23
            /* \"src/ReservoirPair.sol\":13416:13442  aNewBalance - aPrevBalance */
          swap3
          tag_9
          jump\t// in
        tag_767:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x40
          dup1
          mload
          0xffffffffffffffffffffffffffffffffffffffff
          swap6
          swap1
          swap6
          and
          dup6
          mstore
          0x20
          dup6
          add
          dup3
          swap1
          mstore
          swap1
          swap4
            /* \"src/ReservoirPair.sol\":13462:13493  ProfitReported(aToken, lProfit) */
          log1
            /* \"src/ReservoirPair.sol\":13526:13544  aReserve + lProfit */
          tag_22
          jump\t// in
            /* \"src/ReservoirPair.sol\":13323:13904  if (aNewBalance > aPrevBalance) {... */
        tag_765:
            /* \"src/ReservoirPair.sol\":13565:13591  aNewBalance < aPrevBalance */
          swap1
          dup1
          dup3
          lt
          iszero
          tag_621
          jumpi
            /* \"src/ReservoirPair.sol\":13650:13676  aPrevBalance - aNewBalance */
          tag_773
            /* \"src/ReservoirPair.sol\":13756:13772  aReserve - lLoss */
          tag_721
            /* \"src/ReservoirPair.sol\":13650:13676  aPrevBalance - aNewBalance */
          swap5
          swap3
            /* \"src/ReservoirPair.sol\":13696:13723  LossReported(aToken, lLoss) */
          0x3ffa9beb41b46c88b16758ef6c236ebd4d07cdfd4d22471030eb6b2d662482d9
            /* \"src/ReservoirPair.sol\":13650:13676  aPrevBalance - aNewBalance */
          swap3
          tag_9
          jump\t// in
        tag_773:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x40
          dup1
          mload
          0xffffffffffffffffffffffffffffffffffffffff
          swap6
          swap1
          swap6
          and
          dup6
          mstore
          0x20
          dup6
          add
          dup3
          swap1
          mstore
          swap1
          swap4
            /* \"src/ReservoirPair.sol\":13696:13723  LossReported(aToken, lLoss) */
          log1
            /* \"src/ReservoirPair.sol\":13756:13772  aReserve - lLoss */
          tag_9
          jump\t// in
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
        tag_30:
          0x8000000000000000000000000000000000000000000000000000000000000000
          dup2
          eq
          tag_564
          jumpi
          0x00
          sub
          swap1
          jump\t// out
        tag_31:
          0xffffffffffffffffffffffffff
          swap2
          dup3
          and
          swap1
          dup3
          and
          sub
          swap2
          swap1
          dup3
          gt
          tag_564
          jumpi
          jump\t// out
        tag_32:
          swap2
          swap1
          swap2
          0xffffffffffffffffffffffffff
          dup1
          dup1
          swap5
          and
          swap2
          and
          add
          swap2
          dup3
          gt
          tag_564
          jumpi
          jump\t// out
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1328:2944  function safeTransferFrom(... */
        tag_33:
          swap1
          0x00
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1532:2887  assembly {... */
          0x64
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1328:2944  function safeTransferFrom(... */
          swap3
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1532:2887  assembly {... */
          0x20
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1328:2944  function safeTransferFrom(... */
          swap6
          dup3
          swap6
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1532:2887  assembly {... */
          mload(0x40)
          swap5
          0x23b872dd00000000000000000000000000000000000000000000000000000000
          dup7
          mstore
          0x04
          dup7
          add
          mstore
          0x24
          dup6
          add
          mstore
          0x44
          dup5
          add
          mstore
          gas
          call
          or(and(eq(mload(0x00), 0x01), gt(returndatasize, 0x1f)), iszero(returndatasize))
          and
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          iszero
          tag_783
          jumpi
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1328:2944  function safeTransferFrom(... */
          jump\t// out
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
        tag_783:
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1532:2887  assembly {... */
          0x64
          0x40
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mload
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1532:2887  assembly {... */
          0x20
          0x04
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup3
          add
          mstore
          0x14
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1532:2887  assembly {... */
          0x24
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup3
          add
          mstore
          0x5452414e534645525f46524f4d5f4641494c4544000000000000000000000000
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1532:2887  assembly {... */
          0x44
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup3
          add
          mstore
          revert
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":2950:4449  function safeTransfer(... */
        tag_34:
          0x00
          swap2
          dup3
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":3128:4397  assembly {... */
          0x44
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":2950:4449  function safeTransfer(... */
          swap3
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":3128:4397  assembly {... */
          0x20
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":2950:4449  function safeTransfer(... */
          swap6
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":3128:4397  assembly {... */
          mload(0x40)
          swap4
          0xa9059cbb00000000000000000000000000000000000000000000000000000000
          dup6
          mstore
          0x04
          dup6
          add
          mstore
          0x24
          dup5
          add
          mstore
          gas
          call
          or(and(eq(mload(0x00), 0x01), gt(returndatasize, 0x1f)), iszero(returndatasize))
          and
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          iszero
          tag_785
          jumpi
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":2950:4449  function safeTransfer(... */
          jump\t// out
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
        tag_785:
          0x64
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":3128:4397  assembly {... */
          0x40
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mload
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":3128:4397  assembly {... */
          0x20
          0x04
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup3
          add
          mstore
          0x0f
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":3128:4397  assembly {... */
          0x24
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup3
          add
          mstore
          0x5452414e534645525f4641494c45440000000000000000000000000000000000
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":3128:4397  assembly {... */
          0x44
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup3
          add
          mstore
          revert
        tag_35:
          0x010000
          dup2
          lt
          iszero
          tag_787
          jumpi
            /* \"src/curve/stable/StableMintBurn.sol\":9881:9894  _observations */
          0x0d
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          add
          swap1
          0x00
          swap1
          jump\t// out
        tag_787:
          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)
          mstore(0x04, 0x32)
          revert(0x00, 0x24)
        tag_36:
          dup2
          dup2
          mul
          swap3
          swap2
          dup2
          iszero
          swap2
          dup5
          div
          eq
          or
          iszero
          tag_564
          jumpi
          jump\t// out
        tag_37:
          dup2
          iszero
          tag_791
          jumpi
          div
          swap1
          jump\t// out
        tag_791:
          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)
          mstore(0x04, 0x12)
          revert(0x00, 0x24)
            /* \"lib/solmate/src/tokens/ERC20.sol\":6150:6475  function _mint(address to, uint256 amount) internal virtual {... */
        tag_40:
            /* \"lib/solmate/src/tokens/ERC20.sol\":6436:6468  Transfer(address(0), to, amount) */
          0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x20
          0xffffffffffffffffffffffffffffffffffffffff
          0x00
            /* \"lib/solmate/src/tokens/ERC20.sol\":6150:6475  function _mint(address to, uint256 amount) internal virtual {... */
          swap4
            /* \"lib/solmate/src/tokens/ERC20.sol\":6220:6241  totalSupply += amount */
          tag_793
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup7
            /* \"lib/solmate/src/tokens/ERC20.sol\":6220:6241  totalSupply += amount */
          0x02
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
            /* \"lib/solmate/src/tokens/ERC20.sol\":6220:6241  totalSupply += amount */
          tag_22
          jump\t// in
        tag_793:
          0x02
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sstore
          and
          swap4
          dup5
          dup5
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":6387:6396  balanceOf */
          0x03
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup3
          mstore
          0x40
          dup5
          keccak256
          dup2
          dup2
          sload
          add
          swap1
          sstore
          mload(0x40)
          swap1
          dup2
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":6436:6468  Transfer(address(0), to, amount) */
          log3
            /* \"lib/solmate/src/tokens/ERC20.sol\":6150:6475  function _mint(address to, uint256 amount) internal virtual {... */
          jump\t// out
            /* \"src/ReservoirPair.sol\":14590:14759  function _managerCallback() internal {... */
        tag_41:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":14649:14661  assetManager */
          0x0b
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
          and
            /* \"src/ReservoirPair.sol\":14641:14676  address(assetManager) == address(0) */
          dup1
          iszero
            /* \"src/ReservoirPair.sol\":14637:14709  if (address(assetManager) == address(0)) {... */
          tag_794
          jumpi
            /* \"src/ReservoirPair.sol\":14718:14752  assetManager.afterLiquidityEvent() */
          dup1
          extcodesize
          iszero
          tag_560
          jumpi
          0x00
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup1
          swap2
            /* \"src/ReservoirPair.sol\":14718:14752  assetManager.afterLiquidityEvent() */
          0x04
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mload(0x40)
            /* \"src/ReservoirPair.sol\":14718:14752  assetManager.afterLiquidityEvent() */
          dup1
          swap5
          dup2
          swap4
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x016312bd00000000000000000000000000000000000000000000000000000000
            /* \"src/ReservoirPair.sol\":14718:14752  assetManager.afterLiquidityEvent() */
          dup4
          mstore
          gas
          call
          dup1
          iszero
          tag_642
          jumpi
          tag_800
          jumpi
            /* \"src/ReservoirPair.sol\":14590:14759  function _managerCallback() internal {... */
          pop
          jump\t// out
            /* \"src/ReservoirPair.sol\":14718:14752  assetManager.afterLiquidityEvent() */
        tag_800:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xffffffffffffffff
          dup2
          gt
          tag_550
          jumpi
          0x40
          mstore
            /* \"src/ReservoirPair.sol\":14590:14759  function _managerCallback() internal {... */
          jump\t// out
            /* \"src/ReservoirPair.sol\":14637:14709  if (address(assetManager) == address(0)) {... */
        tag_794:
            /* \"src/ReservoirPair.sol\":14692:14699  return; */
          pop
          jump\t// out
            /* \"src/curve/stable/StableMintBurn.sol\":2404:3169  function _nonOptimalMintFee(uint256 aAmount0, uint256 aAmount1, uint256 aReserve0, uint256 aReserve1)... */
        tag_42:
          swap4
          swap3
          swap2
          swap1
          swap2
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x00
            /* \"src/curve/stable/StableMintBurn.sol\":2573:2591  uint256 rToken1Fee */
          swap5
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x00
            /* \"src/curve/stable/StableMintBurn.sol\":2611:2625  aReserve0 == 0 */
          swap2
          dup4
          iszero
            /* \"src/curve/stable/StableMintBurn.sol\":2611:2643  aReserve0 == 0 || aReserve1 == 0 */
          dup1
          iszero
          tag_804
          jumpi
            /* \"src/curve/stable/StableMintBurn.sol\":2404:3169  function _nonOptimalMintFee(uint256 aAmount0, uint256 aAmount1, uint256 aReserve0, uint256 aReserve1)... */
        tag_805:
            /* \"src/curve/stable/StableMintBurn.sol\":2607:2658  if (aReserve0 == 0 || aReserve1 == 0) return (0, 0) */
          tag_806
          jumpi
            /* \"src/curve/stable/StableMintBurn.sol\":2693:2727  (aAmount0 * aReserve1) / aReserve0 */
          tag_808
            /* \"src/curve/stable/StableMintBurn.sol\":2694:2714  aAmount0 * aReserve1 */
          dup5
          tag_452
          dup4
          dup6
          tag_36
          jump\t// in
            /* \"src/curve/stable/StableMintBurn.sol\":2693:2727  (aAmount0 * aReserve1) / aReserve0 */
        tag_808:
            /* \"src/curve/stable/StableMintBurn.sol\":2742:2768  amount1Optimal <= aAmount1 */
          swap4
          dup6
          dup6
          gt
          tag_810
          jumpi
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          pop
          pop
          pop
          pop
          0x1e8480
          swap2
            /* \"src/curve/stable/StableMintBurn.sol\":2809:2834  aAmount1 - amount1Optimal */
          tag_812
            /* \"src/curve/stable/StableMintBurn.sol\":2798:2835  swapFee * (aAmount1 - amount1Optimal) */
          tag_813
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap3
            /* \"src/curve/stable/StableMintBurn.sol\":2798:2805  swapFee */
          0x07
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
            /* \"src/curve/stable/StableMintBurn.sol\":2809:2834  aAmount1 - amount1Optimal */
          swap3
          tag_9
          jump\t// in
        tag_812:
            /* \"src/curve/stable/StableMintBurn.sol\":2798:2835  swapFee * (aAmount1 - amount1Optimal) */
          swap1
          tag_36
          jump\t// in
        tag_813:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          div
            /* \"src/curve/stable/StableMintBurn.sol\":2738:3045  if (amount1Optimal <= aAmount1) {... */
          swap1
        tag_814:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xffffffffffffffffffffffffff
            /* \"src/curve/stable/StableMintBurn.sol\":3062:3093  rToken0Fee <= type(uint104).max */
          dup1
          dup5
          gt
          iszero
            /* \"src/curve/stable/StableMintBurn.sol\":3062:3128  rToken0Fee <= type(uint104).max && rToken1Fee <= type(uint104).max */
          swap1
          dup2
          tag_815
          jumpi
            /* \"src/curve/stable/StableMintBurn.sol\":2738:3045  if (amount1Optimal <= aAmount1) {... */
        tag_816:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          pop
          iszero
          tag_817
          jumpi
            /* \"src/curve/stable/StableMintBurn.sol\":2404:3169  function _nonOptimalMintFee(uint256 aAmount0, uint256 aAmount1, uint256 aReserve0, uint256 aReserve1)... */
          jump\t// out
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
        tag_817:
          0x64
          mload(0x40)
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
          0x20
          0x04
          dup3
          add
          mstore
          0x1d
          0x24
          dup3
          add
          mstore
          0x53503a204e4f4e5f4f5054494d414c5f4645455f544f4f5f4c41524745000000
          0x44
          dup3
          add
          mstore
          revert
            /* \"src/curve/stable/StableMintBurn.sol\":3062:3128  rToken0Fee <= type(uint104).max && rToken1Fee <= type(uint104).max */
        tag_815:
            /* \"src/curve/stable/StableMintBurn.sol\":3097:3128  rToken1Fee <= type(uint104).max */
          swap1
          pop
          dup3
          gt
          iszero
            /* \"src/curve/stable/StableMintBurn.sol\":3062:3128  rToken0Fee <= type(uint104).max && rToken1Fee <= type(uint104).max */
          codesize
          jump(tag_816)
            /* \"src/curve/stable/StableMintBurn.sol\":2738:3045  if (amount1Optimal <= aAmount1) {... */
        tag_810:
            /* \"src/curve/stable/StableMintBurn.sol\":2986:3011  aAmount0 - amount0Optimal */
          tag_812
            /* \"src/curve/stable/StableMintBurn.sol\":2914:2934  aAmount1 * aReserve0 */
          swap3
          swap4
          swap7
          swap8
          pop
            /* \"src/curve/stable/StableMintBurn.sol\":2975:3012  swapFee * (aAmount0 - amount0Optimal) */
          tag_820
            /* \"src/curve/stable/StableMintBurn.sol\":2914:2934  aAmount1 * aReserve0 */
          swap5
          pop
          swap1
          tag_452
            /* \"src/curve/stable/StableMintBurn.sol\":2913:2947  (aAmount1 * aReserve0) / aReserve1 */
          tag_822
            /* \"src/curve/stable/StableMintBurn.sol\":2914:2934  aAmount1 * aReserve0 */
          swap3
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x1e8480
            /* \"src/curve/stable/StableMintBurn.sol\":2914:2934  aAmount1 * aReserve0 */
          swap8
          tag_36
          jump\t// in
            /* \"src/curve/stable/StableMintBurn.sol\":2913:2947  (aAmount1 * aReserve0) / aReserve1 */
        tag_822:
            /* \"src/curve/stable/StableMintBurn.sol\":2975:2982  swapFee */
          0x07
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
            /* \"src/curve/stable/StableMintBurn.sol\":2986:3011  aAmount0 - amount0Optimal */
          swap3
          tag_9
          jump\t// in
            /* \"src/curve/stable/StableMintBurn.sol\":2975:3012  swapFee * (aAmount0 - amount0Optimal) */
        tag_820:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          div
            /* \"src/curve/stable/StableMintBurn.sol\":2738:3045  if (amount1Optimal <= aAmount1) {... */
          swap2
          jump(tag_814)
            /* \"src/curve/stable/StableMintBurn.sol\":2607:2658  if (aReserve0 == 0 || aReserve1 == 0) return (0, 0) */
        tag_806:
            /* \"src/curve/stable/StableMintBurn.sol\":2645:2658  return (0, 0) */
          pop
          pop
          pop
          pop
          pop
          swap1
          pop
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x00
            /* \"src/curve/stable/StableMintBurn.sol\":2645:2658  return (0, 0) */
          swap1
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x00
            /* \"src/curve/stable/StableMintBurn.sol\":2645:2658  return (0, 0) */
          swap1
          jump\t// out
            /* \"src/curve/stable/StableMintBurn.sol\":2611:2643  aReserve0 == 0 || aReserve1 == 0 */
        tag_804:
            /* \"src/curve/stable/StableMintBurn.sol\":2629:2643  aReserve1 == 0 */
          pop
          dup1
          iszero
            /* \"src/curve/stable/StableMintBurn.sol\":2611:2643  aReserve0 == 0 || aReserve1 == 0 */
          jump(tag_805)
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
        tag_43:
          0x01
          shl
          swap1
          0x01fffffffffffffffe
          0xfffffffffffffffe
          dup4
          and
          swap3
          and
          dup3
          sub
          tag_564
          jumpi
          jump\t// out
        tag_44:
          swap2
          swap1
          swap2
          0xffffffffffffffff
          dup1
          dup1
          swap5
          and
          swap2
          and
          mul
          swap2
          dup3
          and
          swap2
          dup3
          sub
          tag_564
          jumpi
          jump\t// out
            /* \"src/curve/stable/StableMintBurn.sol\":7148:8447  function _mintFee(uint256 aReserve0, uint256 aReserve1) internal returns (uint256 rTotalSupply, uint256 rD) {... */
        tag_45:
          swap1
          swap2
            /* \"src/curve/stable/StableMintBurn.sol\":7280:7291  platformFee */
          0x09
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
            /* \"src/curve/stable/StableMintBurn.sol\":7280:7295  platformFee > 0 */
          iszero
          iszero
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap2
            /* \"src/curve/stable/StableMintBurn.sol\":7447:7484  aReserve1 * token1PrecisionMultiplier */
          tag_827
            /* \"src/curve/stable/StableMintBurn.sol\":7320:7331  totalSupply */
          0x02
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
          swap5
            /* \"src/curve/stable/StableMintBurn.sol\":7408:7445  aReserve0 * token0PrecisionMultiplier */
          tag_828
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffff
            /* \"src/curve/stable/StableMintBurn.sol\":7420:7445  token0PrecisionMultiplier */
          swap4
          dup5
          immutable(\"0x372e991e4284f7d12d6b2461cce9899511b05ac053845de253542adb96f2dca0\")
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          and
            /* \"src/curve/stable/StableMintBurn.sol\":7408:7445  aReserve0 * token0PrecisionMultiplier */
          swap1
          tag_36
          jump\t// in
        tag_828:
            /* \"src/curve/stable/StableMintBurn.sol\":7459:7484  token1PrecisionMultiplier */
          swap3
          immutable(\"0xc4ba931b733b92a51f51c0955dd7716c7a38f3de911d23a5d0fbd5d23c0fbe8c\")
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          and
            /* \"src/curve/stable/StableMintBurn.sol\":7447:7484  aReserve1 * token1PrecisionMultiplier */
          swap1
          tag_36
          jump\t// in
        tag_827:
            /* \"src/curve/stable/StableMintBurn.sol\":7346:7516  StableMath._computeLiquidityFromAdjustedBalances(... */
          tag_829
            /* \"src/curve/stable/StableMintBurn.sol\":7490:7506  lastInvariantAmp */
          0x010012
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap3
          dup4
          sload
          swap3
          0xffffffffffffffff
            /* \"src/curve/stable/StableMintBurn.sol\":7486:7506  2 * lastInvariantAmp */
          tag_830
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup6
          0xc0
          shr
            /* \"src/curve/stable/StableMintBurn.sol\":7486:7506  2 * lastInvariantAmp */
          tag_43
          jump\t// in
        tag_830:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          and
            /* \"src/curve/stable/StableMintBurn.sol\":7346:7516  StableMath._computeLiquidityFromAdjustedBalances(... */
          swap2
          tag_58
          jump\t// in
        tag_829:
            /* \"src/curve/stable/StableMintBurn.sol\":7526:8441  if (lFeeOn) {... */
          swap4
          iszero
          tag_831
          jumpi
          pop
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
          0xffffffffffffffffffffffffffffffffffffffffffffffff
          and
          dup1
            /* \"src/curve/stable/StableMintBurn.sol\":7596:8359  if (lDLast != 0) {... */
          tag_833
          jumpi
            /* \"src/curve/stable/StableMintBurn.sol\":7526:8441  if (lFeeOn) {... */
          pop
            /* \"src/curve/stable/StableMintBurn.sol\":7148:8447  function _mintFee(uint256 aReserve0, uint256 aReserve1) internal returns (uint256 rTotalSupply, uint256 rD) {... */
          jump\t// out
            /* \"src/curve/stable/StableMintBurn.sol\":7596:8359  if (lDLast != 0) {... */
        tag_833:
            /* \"src/curve/stable/StableMintBurn.sol\":7635:7646  rD > lDLast */
          dup1
          dup4
          gt
            /* \"src/curve/stable/StableMintBurn.sol\":7631:8345  if (rD > lDLast) {... */
          tag_836
          jumpi
            /* \"src/ReservoirPair.sol\":14692:14699  return; */
          pop
          jump\t// out
            /* \"src/curve/stable/StableMintBurn.sol\":7631:8345  if (rD > lDLast) {... */
        tag_836:
            /* \"src/curve/stable/StableMintBurn.sol\":7280:7291  platformFee */
          0x09
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
            /* \"src/curve/stable/StableMintBurn.sol\":7833:7844  rD - lDLast */
          swap1
            /* \"src/curve/stable/StableMintBurn.sol\":7817:7860  rTotalSupply * (rD - lDLast) * lPlatformFee */
          tag_838
            /* \"src/curve/stable/StableMintBurn.sol\":7833:7844  rD - lDLast */
          dup3
            /* \"src/curve/stable/StableMintBurn.sol\":7817:7845  rTotalSupply * (rD - lDLast) */
          tag_451
            /* \"src/curve/stable/StableMintBurn.sol\":7833:7844  rD - lDLast */
          tag_840
          dup5
          dup9
          tag_9
          jump\t// in
        tag_840:
            /* \"src/curve/stable/StableMintBurn.sol\":7817:7845  rTotalSupply * (rD - lDLast) */
          dup9
          tag_36
          jump\t// in
            /* \"src/curve/stable/StableMintBurn.sol\":7817:7860  rTotalSupply * (rD - lDLast) * lPlatformFee */
        tag_838:
            /* \"src/ReservoirPair.sol\":2723:2732  1_000_000 */
          swap1
          0x0f4240
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap3
          dup1
          dup5
          sub
          swap4
          dup5
          gt
          tag_564
          jumpi
            /* \"src/curve/stable/StableMintBurn.sol\":7942:7963  lPlatformFee * lDLast */
          tag_680
            /* \"src/curve/stable/StableMintBurn.sol\":7905:7963  (FEE_ACCURACY - lPlatformFee) * rD + lPlatformFee * lDLast */
          tag_844
            /* \"src/curve/stable/StableMintBurn.sol\":7905:7939  (FEE_ACCURACY - lPlatformFee) * rD */
          swap3
          tag_845
          dup9
            /* \"src/curve/stable/StableMintBurn.sol\":8011:8036  lNumerator / lDenominator */
          tag_846
            /* \"src/curve/stable/StableMintBurn.sol\":7905:7939  (FEE_ACCURACY - lPlatformFee) * rD */
          swap8
          tag_36
          jump\t// in
        tag_845:
            /* \"src/curve/stable/StableMintBurn.sol\":7942:7963  lPlatformFee * lDLast */
          swap3
          tag_36
          jump\t// in
            /* \"src/curve/stable/StableMintBurn.sol\":7905:7963  (FEE_ACCURACY - lPlatformFee) * rD + lPlatformFee * lDLast */
        tag_844:
            /* \"src/curve/stable/StableMintBurn.sol\":8011:8036  lNumerator / lDenominator */
          swap1
          tag_37
          jump\t// in
        tag_846:
            /* \"src/curve/stable/StableMintBurn.sol\":8063:8083  lPlatformShares != 0 */
          dup1
            /* \"src/curve/stable/StableMintBurn.sol\":8059:8327  if (lPlatformShares != 0) {... */
          iszero
            /* \"src/curve/stable/StableMintBurn.sol\":7596:8359  if (lDLast != 0) {... */
          tag_794
            /* \"src/curve/stable/StableMintBurn.sol\":8059:8327  if (lPlatformShares != 0) {... */
          jumpi
            /* \"src/curve/stable/StableMintBurn.sol\":8273:8304  rTotalSupply += lPlatformShares */
          tag_849
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap2
          swap4
            /* \"src/curve/stable/StableMintBurn.sol\":8231:8246  lPlatformShares */
          tag_850
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup3
          mload(0x40)
          tag_851
          dup2
          tag_3
          jump\t// in
        tag_851:
          0x15
          dup2
          mstore
          0x5368617265643a3a706c6174666f726d466565546f0000000000000000000000
          0x20
          dup3
          add
          mstore
            /* \"src/curve/stable/StableMintBurn.sol\":8136:8170  factory.read(PLATFORM_FEE_TO_NAME) */
          tag_852
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/curve/stable/StableMintBurn.sol\":8136:8143  factory */
          swap2
          dup3
          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          and
            /* \"src/curve/stable/StableMintBurn.sol\":8136:8170  factory.read(PLATFORM_FEE_TO_NAME) */
          tag_52
          jump\t// in
        tag_852:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          and
            /* \"src/curve/stable/StableMintBurn.sol\":8231:8246  lPlatformShares */
          tag_40
          jump\t// in
        tag_850:
            /* \"src/curve/stable/StableMintBurn.sol\":8273:8304  rTotalSupply += lPlatformShares */
          tag_22
          jump\t// in
        tag_849:
            /* \"src/curve/stable/StableMintBurn.sol\":8059:8327  if (lPlatformShares != 0) {... */
          swap2
            /* \"src/ReservoirPair.sol\":14692:14699  return; */
          jump\t// out
            /* \"src/curve/stable/StableMintBurn.sol\":7526:8441  if (lFeeOn) {... */
        tag_831:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffffffffffff
          dup2
          and
            /* \"src/curve/stable/StableMintBurn.sol\":8375:8441  if (lastInvariant != 0) {... */
          tag_853
          jumpi
            /* \"src/curve/stable/StableMintBurn.sol\":7526:8441  if (lFeeOn) {... */
          pop
          pop
            /* \"src/curve/stable/StableMintBurn.sol\":7148:8447  function _mintFee(uint256 aReserve0, uint256 aReserve1) internal returns (uint256 rTotalSupply, uint256 rD) {... */
          jump\t// out
            /* \"src/curve/stable/StableMintBurn.sol\":8375:8441  if (lastInvariant != 0) {... */
        tag_853:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xffffffffffffffff000000000000000000000000000000000000000000000000
          and
          swap1
          sstore
            /* \"src/ReservoirPair.sol\":7478:7485  return; */
          jump\t// out
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
        tag_46:
          0xffffffffffffffff
          swap2
          dup3
          and
          swap1
          dup3
          and
          sub
          swap2
          swap1
          dup3
          gt
          tag_564
          jumpi
          jump\t// out
        tag_47:
          swap1
          0xffffffffffffffff
          dup1
          swap2
          and
          swap2
          dup3
          iszero
          tag_791
          jumpi
          and
          div
          swap1
          jump\t// out
            /* \"src/curve/stable/StableMintBurn.sol\":8453:9311  function _getCurrentAPrecise() internal view returns (uint64 rCurrentA) {... */
        tag_48:
            /* \"src/curve/stable/StableMintBurn.sol\":8552:8559  ampData */
          0x010010
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
          0xffffffffffffffff
          swap1
          dup2
          dup2
          0x40
          shr
          and
          dup2
          0xc0
          shr
            /* \"src/curve/stable/StableMintBurn.sol\":8632:8647  block.timestamp */
          swap1
          dup2
          timestamp
            /* \"src/curve/stable/StableMintBurn.sol\":8632:8661  block.timestamp < futureATime */
          lt
            /* \"src/curve/stable/StableMintBurn.sol\":8628:9305  if (block.timestamp < futureATime) {... */
          0x00
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          eq
          tag_859
          jumpi
            /* \"src/curve/stable/StableMintBurn.sol\":8864:8902  uint64(block.timestamp) - initialATime */
          tag_861
            /* \"src/curve/stable/StableMintBurn.sol\":8803:8829  futureATime - initialATime */
          tag_862
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup6
          dup1
          dup7
          and
          swap6
          0x80
          shr
          and
            /* \"src/curve/stable/StableMintBurn.sol\":8803:8829  futureATime - initialATime */
          dup1
          swap5
          tag_46
          jump\t// in
        tag_862:
            /* \"src/curve/stable/StableMintBurn.sol\":8632:8647  block.timestamp */
          swap3
          dup6
          timestamp
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          and
            /* \"src/curve/stable/StableMintBurn.sol\":8864:8902  uint64(block.timestamp) - initialATime */
          tag_46
          jump\t// in
        tag_861:
            /* \"src/curve/stable/StableMintBurn.sol\":8921:8939  futureA > initialA */
          swap1
          dup4
          dup2
          gt
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          iszero
          tag_863
          jumpi
            /* \"src/curve/stable/StableMintBurn.sol\":8978:8996  futureA - initialA */
          swap2
            /* \"src/curve/stable/StableMintBurn.sol\":9037:9060  rampElapsed * rampDelta */
          tag_865
            /* \"src/curve/stable/StableMintBurn.sol\":9037:9075  rampElapsed * rampDelta / rampDuration */
          tag_866
            /* \"src/curve/stable/StableMintBurn.sol\":8978:8996  futureA - initialA */
          swap3
          tag_867
          dup7
          dup9
          swap7
          tag_46
          jump\t// in
        tag_867:
            /* \"src/curve/stable/StableMintBurn.sol\":9037:9060  rampElapsed * rampDelta */
          swap1
          tag_44
          jump\t// in
        tag_865:
            /* \"src/curve/stable/StableMintBurn.sol\":9037:9075  rampElapsed * rampDelta / rampDuration */
          tag_47
          jump\t// in
        tag_866:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          and
          add
          swap1
          dup2
          gt
          tag_564
          jumpi
            /* \"src/curve/stable/StableMintBurn.sol\":8917:9245  if (futureA > initialA) {... */
          swap1
            /* \"src/curve/stable/StableMintBurn.sol\":8453:9311  function _getCurrentAPrecise() internal view returns (uint64 rCurrentA) {... */
          jump\t// out
            /* \"src/curve/stable/StableMintBurn.sol\":8917:9245  if (futureA > initialA) {... */
        tag_863:
            /* \"src/curve/stable/StableMintBurn.sol\":9181:9230  initialA - rampElapsed * rampDelta / rampDuration */
          tag_721
            /* \"src/curve/stable/StableMintBurn.sol\":9133:9151  initialA - futureA */
          swap5
          pop
            /* \"src/curve/stable/StableMintBurn.sol\":9192:9230  rampElapsed * rampDelta / rampDuration */
          tag_873
            /* \"src/curve/stable/StableMintBurn.sol\":9133:9151  initialA - futureA */
          swap3
          swap2
          tag_867
            /* \"src/curve/stable/StableMintBurn.sol\":9192:9215  rampElapsed * rampDelta */
          tag_865
            /* \"src/curve/stable/StableMintBurn.sol\":9133:9151  initialA - futureA */
          swap3
          dup7
          tag_46
          jump\t// in
            /* \"src/curve/stable/StableMintBurn.sol\":9192:9230  rampElapsed * rampDelta / rampDuration */
        tag_873:
            /* \"src/curve/stable/StableMintBurn.sol\":9181:9230  initialA - rampElapsed * rampDelta / rampDuration */
          swap1
          tag_46
          jump\t// in
            /* \"src/curve/stable/StableMintBurn.sol\":8628:9305  if (block.timestamp < futureATime) {... */
        tag_859:
            /* \"src/curve/stable/StableMintBurn.sol\":9275:9294  rCurrentA = futureA */
          swap3
          pop
          pop
          pop
            /* \"src/curve/stable/StableMintBurn.sol\":8628:9305  if (block.timestamp < futureATime) {... */
          swap1
            /* \"src/curve/stable/StableMintBurn.sol\":8453:9311  function _getCurrentAPrecise() internal view returns (uint64 rCurrentA) {... */
          jump\t// out
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
        tag_49:
          iszero
          tag_876
          jumpi
          jump\t// out
        tag_876:
          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)
          mstore(0x04, 0x01)
          revert(0x00, 0x24)
            /* \"src/ReservoirPair.sol\":18000:19057  function _calcClampedPrice(uint256 aCurrRawPrice, uint256 aPrevClampedPrice, uint256 aTimeElapsed)... */
        tag_50:
          swap1
          swap2
            /* \"src/ReservoirPair.sol\":18215:18237  aPrevClampedPrice == 0 */
          dup3
          iszero
            /* \"src/ReservoirPair.sol\":18211:18337  if (aPrevClampedPrice == 0) {... */
          tag_878
          jumpi
            /* \"src/ReservoirPair.sol\":18351:18405  stdMath.percentDelta(aCurrRawPrice, aPrevClampedPrice) */
          tag_880
          dup4
          dup4
          tag_51
          jump\t// in
        tag_880:
            /* \"src/ReservoirPair.sol\":18408:18421  maxChangeRate */
          0x01000d
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sload
            /* \"src/ReservoirPair.sol\":18408:18436  maxChangeRate * aTimeElapsed */
          swap1
          tag_881
          dup4
          dup4
          tag_36
          jump\t// in
        tag_881:
          lt
          iszero
          tag_882
          jumpi
            /* \"src/ReservoirPair.sol\":18487:18520  aCurrRawPrice > aPrevClampedPrice */
          dup4
          dup4
          gt
          iszero
          tag_884
          jumpi
            /* \"src/ReservoirPair.sol\":18585:18613  maxChangeRate * aTimeElapsed */
          tag_886
          swap3
          pop
          tag_36
          jump\t// in
        tag_886:
            /* \"src/ReservoirPair.sol\":18577:18581  1e18 */
          swap1
          0x0de0b6b3a7640000
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap2
          dup3
          add
          dup1
          dup4
          gt
          tag_564
          jumpi
            /* \"src/ReservoirPair.sol\":18556:18615  aPrevClampedPrice * (1e18 + (maxChangeRate * aTimeElapsed)) */
          tag_889
          swap2
          tag_36
          jump\t// in
        tag_889:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          div
            /* \"src/ReservoirPair.sol\":18483:18817  if (aCurrRawPrice > aPrevClampedPrice) {... */
          swap1
        tag_890:
            /* \"src/ReservoirPair.sol\":18856:18897  LogCompression.toLowResLog(rClampedPrice) */
          tag_891
          dup3
          tag_55
          jump\t// in
        tag_891:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x0d
          signextend
            /* \"src/ReservoirPair.sol\":18347:19051  if (stdMath.percentDelta(aCurrRawPrice, aPrevClampedPrice) > maxChangeRate * aTimeElapsed) {... */
          swap1
            /* \"src/ReservoirPair.sol\":18000:19057  function _calcClampedPrice(uint256 aCurrRawPrice, uint256 aPrevClampedPrice, uint256 aTimeElapsed)... */
          jump\t// out
            /* \"src/ReservoirPair.sol\":18483:18817  if (aCurrRawPrice > aPrevClampedPrice) {... */
        tag_884:
            /* \"src/ReservoirPair.sol\":18661:18702  assert(aPrevClampedPrice > aCurrRawPrice) */
          tag_451
            /* \"src/ReservoirPair.sol\":18765:18793  maxChangeRate * aTimeElapsed */
          tag_894
            /* \"src/ReservoirPair.sol\":18668:18701  aPrevClampedPrice > aCurrRawPrice */
          swap4
          dup6
          gt
            /* \"src/ReservoirPair.sol\":18661:18702  assert(aPrevClampedPrice > aCurrRawPrice) */
          tag_49
          jump\t// in
            /* \"src/ReservoirPair.sol\":18765:18793  maxChangeRate * aTimeElapsed */
        tag_894:
            /* \"src/ReservoirPair.sol\":18757:18761  1e18 */
          swap1
          0x0de0b6b3a7640000
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap2
          dup3
          sub
          dup3
          dup2
          gt
          tag_564
          jumpi
            /* \"src/ReservoirPair.sol\":18736:18795  aPrevClampedPrice * (1e18 - (maxChangeRate * aTimeElapsed)) */
          tag_897
          swap2
          tag_36
          jump\t// in
        tag_897:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          div
            /* \"src/ReservoirPair.sol\":18483:18817  if (aCurrRawPrice > aPrevClampedPrice) {... */
          swap1
          jump(tag_890)
            /* \"src/ReservoirPair.sol\":18347:19051  if (stdMath.percentDelta(aCurrRawPrice, aPrevClampedPrice) > maxChangeRate * aTimeElapsed) {... */
        tag_882:
            /* \"src/ReservoirPair.sol\":18929:18958  rClampedPrice = aCurrRawPrice */
          pop
          pop
          swap2
          swap1
          pop
            /* \"src/ReservoirPair.sol\":18998:19039  LogCompression.toLowResLog(aCurrRawPrice) */
          tag_891
            /* \"src/ReservoirPair.sol\":18929:18958  rClampedPrice = aCurrRawPrice */
          dup3
            /* \"src/ReservoirPair.sol\":18998:19039  LogCompression.toLowResLog(aCurrRawPrice) */
          tag_55
          jump\t// in
            /* \"src/ReservoirPair.sol\":18211:18337  if (aPrevClampedPrice == 0) {... */
        tag_878:
            /* \"src/ReservoirPair.sol\":18283:18324  LogCompression.toLowResLog(aCurrRawPrice) */
          pop
          swap2
          swap1
          pop
          tag_891
          dup3
          tag_55
          jump\t// in
            /* \"lib/forge-std/src/StdMath.sol\":999:1159  function percentDelta(uint256 a, uint256 b) internal pure returns (uint256) {... */
        tag_51:
            /* \"lib/forge-std/src/StdMath.sol\":607:612  a > b */
          dup2
          dup1
          dup3
          gt
          iszero
          tag_900
          jumpi
            /* \"lib/forge-std/src/StdMath.sol\":615:620  a - b */
          tag_902
          swap2
          tag_9
          jump\t// in
        tag_902:
            /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */
          swap1
        tag_903:
            /* \"lib/forge-std/src/StdMath.sol\":1144:1148  1e18 */
          0x0de0b6b3a7640000
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap2
          dup3
          dup2
          mul
          swap3
          dup2
          dup5
          div
          eq
          swap1
          iszero
          or
          iszero
          tag_564
          jumpi
            /* \"lib/forge-std/src/StdMath.sol\":1133:1152  absDelta * 1e18 / b */
          tag_721
          swap2
          tag_37
          jump\t// in
            /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */
        tag_900:
            /* \"lib/forge-std/src/StdMath.sol\":623:628  b - a */
          swap1
          tag_907
          swap2
          tag_9
          jump\t// in
        tag_907:
            /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */
          swap1
          jump(tag_903)
            /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */
        tag_52:
          swap1
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */
          swap2
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mload(0x40)
            /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */
          swap1
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x24
            /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */
          0x20
          swap4
          dup4
          tag_908
          dup7
          dup3
          dup2
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          tag_909
            /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */
          dup2
          dup1
          swap11
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap7
          dup8
          dup2
          mload
          swap4
          dup5
          swap3
          add
          tag_5
          jump\t// in
        tag_909:
          dup2
          add
            /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */
          sub
          dup1
          dup5
          mstore
          add
          dup3
          tag_4
          jump\t// in
        tag_908:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mload
            /* \"src/libraries/FactoryStore.sol\":476:509  keccak256(abi.encodePacked(aKey)) */
          swap1
          keccak256
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mload(0x40)
            /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */
          swap6
          dup7
          swap4
          dup5
          swap3
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x8eaa6ac000000000000000000000000000000000000000000000000000000000
            /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */
          dup5
          mstore
          0x04
          dup5
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mstore
          and
            /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */
          gas
          staticcall
          swap1
          dup2
          iszero
          tag_642
          jumpi
          0x00
          swap2
          tag_912
          jumpi
            /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */
        tag_913:
            /* \"src/libraries/FactoryStore.sol\":456:510  return aFactory.get(keccak256(abi.encodePacked(aKey))) */
          pop
          swap1
          pop
            /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */
          swap1
          jump\t// out
            /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */
        tag_912:
          dup3
          dup2
          returndatasize
          dup4
          gt
          tag_914
          jumpi
        tag_915:
          tag_916
          dup2
          dup4
          tag_4
          jump\t// in
        tag_916:
          dup2
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sub
          slt
          tag_157
          jumpi
          pop
          mload
            /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */
          dup1
          codesize
          jump(tag_913)
        tag_914:
          pop
          returndatasize
          jump(tag_915)
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
        tag_53:
          dup1
          iszero
          tag_791
          jumpi
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xc097ce7bc90715b34b9f1000000000
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
          swap1
          jump\t// out
        tag_54:
          dup2
          iszero
          tag_791
          jumpi
          sdiv
          swap1
          jump\t// out
            /* \"src/libraries/LogCompression.sol\":2015:2401  function toLowResLog(uint256 value) internal pure returns (int256) {... */
        tag_55:
            /* \"src/libraries/LogCompression.sol\":2128:2156  LogExpMath.ln(int256(value)) */
          tag_923
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          0x5af3107a4000
            /* \"src/libraries/LogCompression.sol\":2015:2401  function toLowResLog(uint256 value) internal pure returns (int256) {... */
          swap2
            /* \"src/libraries/LogCompression.sol\":2128:2156  LogExpMath.ln(int256(value)) */
          tag_56
          jump\t// in
        tag_923:
            /* \"src/libraries/LogCompression.sol\":2252:2253  0 */
          0x00
            /* \"src/libraries/LogCompression.sol\":2247:2253  ln > 0 */
          dup2
          sgt
            /* \"src/libraries/LogCompression.sol\":2252:2253  0 */
          iszero
          tag_924
          jumpi
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          0x2d79883d2000
          add
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogCompression.sol\":2015:2401  function toLowResLog(uint256 value) internal pure returns (int256) {... */
          swap1
          jump\t// out
            /* \"src/libraries/LogCompression.sol\":2247:2325  ln > 0 ? ln + _HALF_LOG_COMPRESSION_FACTOR : ln - _HALF_LOG_COMPRESSION_FACTOR */
        tag_924:
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffd28677c2e000
          add
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogCompression.sol\":2015:2401  function toLowResLog(uint256 value) internal pure returns (int256) {... */
          swap1
          jump\t// out
            /* \"src/libraries/LogExpMath.sol\":14736:15138  function ln(int256 a) internal pure returns (int256) {... */
        tag_56:
            /* \"src/libraries/LogExpMath.sol\":14922:14923  0 */
          0x00
            /* \"src/libraries/LogExpMath.sol\":14918:14923  a > 0 */
          dup2
          sgt
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          iszero
          tag_927
          jumpi
            /* \"src/libraries/LogExpMath.sol\":14964:14985  LN_36_LOWER_BOUND < a */
          dup1
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          0x0c7d713b49da0000
            /* \"src/libraries/LogExpMath.sol\":14964:14985  LN_36_LOWER_BOUND < a */
          slt
            /* \"src/libraries/LogExpMath.sol\":14964:15010  LN_36_LOWER_BOUND < a && a < LN_36_UPPER_BOUND */
          dup1
          tag_929
          jumpi
            /* \"src/libraries/LogExpMath.sol\":14736:15138  function ln(int256 a) internal pure returns (int256) {... */
        tag_930:
            /* \"src/libraries/LogExpMath.sol\":14960:15122  if (LN_36_LOWER_BOUND < a && a < LN_36_UPPER_BOUND) {... */
          iszero
          tag_931
          jumpi
            /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
          0x0de0b6b3a7640000
          swap1
            /* \"src/libraries/LogExpMath.sol\":2125:2129  1e36 */
          0xc097ce7bc90715b34b9f1000000000
          swap1
            /* \"src/libraries/LogExpMath.sol\":21785:21823  ((x - ONE_36) * ONE_36) / (x + ONE_36) */
          tag_933
          swap1
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup4
          mul
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          dup3
          dup2
          add
          swap1
          0xffffffffffffffffffffffffffffffffff3f68318436f8ea4cb460f000000000
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup4
          mul
            /* \"src/libraries/LogExpMath.sol\":21785:21823  ((x - ONE_36) * ONE_36) / (x + ONE_36) */
          tag_54
          jump\t// in
        tag_933:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap1
          dup1
          dup3
          dup1
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap2
          dup2
          dup4
          dup3
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup3
          dup5
          dup3
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup4
          dup6
          dup3
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap2
          dup5
          dup7
          dup5
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap4
          dup6
          dup8
          dup7
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap6
          dup1
          dup9
          dup9
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap8
          dup9
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogExpMath.sol\":22751:22753  15 */
          0x0f
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          swap1
          sdiv
          swap7
            /* \"src/libraries/LogExpMath.sol\":22669:22671  13 */
          0x0d
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          swap1
          sdiv
          swap6
            /* \"src/libraries/LogExpMath.sol\":22587:22589  11 */
          0x0b
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          swap1
          sdiv
          swap5
            /* \"src/libraries/LogExpMath.sol\":22506:22507  9 */
          0x09
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          swap1
          sdiv
          swap4
            /* \"src/libraries/LogExpMath.sol\":22425:22426  7 */
          0x07
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          swap1
          sdiv
          swap3
            /* \"src/libraries/LogExpMath.sol\":22344:22345  5 */
          0x05
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          swap1
          sdiv
          swap2
            /* \"src/libraries/LogExpMath.sol\":22263:22264  3 */
          0x03
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          swap1
          sdiv
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          add
          add
          add
          add
          add
          add
          add
          0x01
          shl
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogExpMath.sol\":15030:15055  return _ln_36(a) / ONE_18 */
          swap1
          jump\t// out
            /* \"src/libraries/LogExpMath.sol\":14960:15122  if (LN_36_LOWER_BOUND < a && a < LN_36_UPPER_BOUND) {... */
        tag_931:
            /* \"src/libraries/LogExpMath.sol\":15101:15107  _ln(a) */
          tag_721
          swap1
          tag_57
          jump\t// in
            /* \"src/libraries/LogExpMath.sol\":14964:15010  LN_36_LOWER_BOUND < a && a < LN_36_UPPER_BOUND */
        tag_929:
            /* \"src/libraries/LogExpMath.sol\":14989:15010  a < LN_36_UPPER_BOUND */
          pop
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          0x0f43fc2c04ee0000
            /* \"src/libraries/LogExpMath.sol\":14989:15010  a < LN_36_UPPER_BOUND */
          dup2
          slt
            /* \"src/libraries/LogExpMath.sol\":14964:15010  LN_36_LOWER_BOUND < a && a < LN_36_UPPER_BOUND */
          jump(tag_930)
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
        tag_927:
          0x64
          mload(0x40)
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
          0x20
          0x04
          dup3
          add
          mstore
          0x11
          0x24
          dup3
          add
          mstore
          0x454d3a204f55545f4f465f424f554e4453000000000000000000000000000000
          0x44
          dup3
          add
          mstore
          revert
            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
        tag_57:
            /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
          0x0de0b6b3a7640000
            /* \"src/libraries/LogExpMath.sol\":15343:15353  a < ONE_18 */
          dup2
          slt
            /* \"src/libraries/LogExpMath.sol\":15339:15760  if (a < ONE_18) {... */
          tag_935
          jumpi
            /* \"src/libraries/LogExpMath.sol\":17686:17689  100 */
          0x64
            /* \"src/libraries/LogExpMath.sol\":17231:17245  int256 sum = 0 */
          swap1
            /* \"src/libraries/LogExpMath.sol\":17244:17245  0 */
          0x00
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x1600ef3172e58d2e933ec884fde10064c63b5372d805e203c0000000000000
            /* \"src/libraries/LogExpMath.sol\":17263:17279  a >= a0 * ONE_18 */
          dup3
          slt
          iszero
            /* \"src/libraries/LogExpMath.sol\":17259:17385  if (a >= a0 * ONE_18) {... */
          tag_937
          jumpi
            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
        tag_938:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x011798004d755d3c8bc8e03204cf44619e000000
            /* \"src/libraries/LogExpMath.sol\":17403:17419  a >= a1 * ONE_18 */
          dup3
          slt
          iszero
            /* \"src/libraries/LogExpMath.sol\":17399:17525  if (a >= a1 * ONE_18) {... */
          tag_939
          jumpi
            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
        tag_940:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup3
          mul
          swap1
          dup3
          mul
          dup2
            /* \"src/libraries/LogExpMath.sol\":3567:3612  7_896_296_018_268_069_516_100_000_000_000_000 */
          0x01855144814a7ff805980ff0084000
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup3
            /* \"src/libraries/LogExpMath.sol\":17846:17853  a >= a2 */
          dup2
          dup2
          slt
          iszero
            /* \"src/libraries/LogExpMath.sol\":17842:17936  if (a >= a2) {... */
          tag_941
          jumpi
            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
        tag_942:
            /* \"src/libraries/LogExpMath.sol\":3714:3749  888_611_052_050_787_263_676_000_000 */
          pop
          pop
          pop
          0x02df0ab5a80a22c61ab5a700
            /* \"src/libraries/LogExpMath.sol\":17954:17961  a >= a3 */
          dup1
          dup3
          slt
          iszero
            /* \"src/libraries/LogExpMath.sol\":17950:18044  if (a >= a3) {... */
          tag_943
          jumpi
            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
        tag_944:
            /* \"src/libraries/LogExpMath.sol\":3849:3880  298_095_798_704_172_827_474_000 */
          pop
          0x3f1fce3da636ea5cf850
            /* \"src/libraries/LogExpMath.sol\":18062:18069  a >= a4 */
          dup1
          dup3
          slt
          iszero
            /* \"src/libraries/LogExpMath.sol\":18058:18152  if (a >= a4) {... */
          tag_945
          jumpi
            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
        tag_946:
            /* \"src/libraries/LogExpMath.sol\":3980:4009  5_459_815_003_314_423_907_810 */
          pop
          0x0127fa27722cc06cc5e2
            /* \"src/libraries/LogExpMath.sol\":18170:18177  a >= a5 */
          dup1
          dup3
          slt
          iszero
            /* \"src/libraries/LogExpMath.sol\":18166:18260  if (a >= a5) {... */
          tag_947
          jumpi
            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
        tag_948:
            /* \"src/libraries/LogExpMath.sol\":4109:4136  738_905_609_893_065_022_723 */
          pop
          0x280e60114edb805d03
            /* \"src/libraries/LogExpMath.sol\":18278:18285  a >= a6 */
          dup1
          dup3
          slt
          iszero
            /* \"src/libraries/LogExpMath.sol\":18274:18368  if (a >= a6) {... */
          tag_949
          jumpi
            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
        tag_950:
            /* \"src/libraries/LogExpMath.sol\":4236:4263  271_828_182_845_904_523_536 */
          pop
          0x0ebc5fb41746121110
            /* \"src/libraries/LogExpMath.sol\":18386:18393  a >= a7 */
          dup1
          dup3
          slt
          iszero
            /* \"src/libraries/LogExpMath.sol\":18382:18476  if (a >= a7) {... */
          tag_951
          jumpi
            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
        tag_952:
            /* \"src/libraries/LogExpMath.sol\":4363:4390  164_872_127_070_012_814_685 */
          pop
          0x08f00f760a4b2db55d
            /* \"src/libraries/LogExpMath.sol\":18494:18501  a >= a8 */
          dup1
          dup3
          slt
          iszero
            /* \"src/libraries/LogExpMath.sol\":18490:18584  if (a >= a8) {... */
          tag_953
          jumpi
            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
        tag_954:
            /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */
          pop
          0x06f5f1775788937937
            /* \"src/libraries/LogExpMath.sol\":18602:18609  a >= a9 */
          dup1
          dup3
          slt
          iszero
            /* \"src/libraries/LogExpMath.sol\":18598:18692  if (a >= a9) {... */
          tag_955
          jumpi
            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
        tag_956:
            /* \"src/libraries/LogExpMath.sol\":4619:4646  113_314_845_306_682_631_683 */
          pop
          0x06248f33704b286603
            /* \"src/libraries/LogExpMath.sol\":18710:18718  a >= a10 */
          dup1
          dup3
          slt
          iszero
            /* \"src/libraries/LogExpMath.sol\":18706:18803  if (a >= a10) {... */
          tag_957
          jumpi
            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
        tag_958:
            /* \"src/libraries/LogExpMath.sol\":4748:4775  106_449_445_891_785_942_956 */
          pop
          0x05c548670b9510e7ac
            /* \"src/libraries/LogExpMath.sol\":18821:18829  a >= a11 */
          dup1
          dup3
          slt
          iszero
            /* \"src/libraries/LogExpMath.sol\":18817:18914  if (a >= a11) {... */
          tag_959
          jumpi
            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
        tag_960:
            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
          pop
            /* \"src/libraries/LogExpMath.sol\":19470:19508  ((a - ONE_20) * ONE_20) / (a + ONE_20) */
          tag_961
            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
          0x056bc75e2d63100000
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          swap2
          dup3
          0xfffffffffffffffffffffffffffffffffffffffffffffffa9438a1d29cf00000
          dup2
          dup4
          add
          swap3
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mul
            /* \"src/libraries/LogExpMath.sol\":19470:19508  ((a - ONE_20) * ONE_20) / (a + ONE_20) */
          tag_54
          jump\t// in
        tag_961:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap1
          dup1
          dup3
          dup1
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap2
          dup2
          dup4
          dup3
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup3
          dup5
          dup3
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap2
            /* \"src/libraries/LogExpMath.sol\":19948:19949  3 */
          0x03
            /* \"src/libraries/LogExpMath.sol\":20029:20030  5 */
          0x05
            /* \"src/libraries/LogExpMath.sol\":20110:20111  7 */
          0x07
            /* \"src/libraries/LogExpMath.sol\":20191:20192  9 */
          0x09
            /* \"src/libraries/LogExpMath.sol\":20272:20274  11 */
          0x0b
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup9
          dup11
          dup10
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap9
          dup1
          dup12
          dup12
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap11
          dup12
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
          sdiv
          swap9
          sdiv
          swap7
          sdiv
          swap5
          sdiv
          swap3
          sdiv
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          add
          add
          add
          add
          add
          0x01
          shl
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          add
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
          swap1
          jump\t// out
            /* \"src/libraries/LogExpMath.sol\":18817:18914  if (a >= a11) {... */
        tag_959:
            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
          0x056bc75e2d63100000
            /* \"src/libraries/LogExpMath.sol\":4686:4711  6_250_000_000_000_000_000 */
          0x56bc75e2d6310000
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap3
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          swap2
          add
            /* \"src/libraries/LogExpMath.sol\":18817:18914  if (a >= a11) {... */
          swap1
          codesize
          jump(tag_960)
            /* \"src/libraries/LogExpMath.sol\":18706:18803  if (a >= a10) {... */
        tag_957:
            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
          0x056bc75e2d63100000
            /* \"src/libraries/LogExpMath.sol\":4556:4582  12_500_000_000_000_000_000 */
          0xad78ebc5ac620000
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap3
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          swap2
          add
            /* \"src/libraries/LogExpMath.sol\":18706:18803  if (a >= a10) {... */
          swap1
          codesize
          jump(tag_958)
            /* \"src/libraries/LogExpMath.sol\":18598:18692  if (a >= a9) {... */
        tag_955:
            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
          0x056bc75e2d63100000
            /* \"src/libraries/LogExpMath.sol\":4428:4454  25_000_000_000_000_000_000 */
          0x015af1d78b58c40000
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap3
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          swap2
          add
            /* \"src/libraries/LogExpMath.sol\":18598:18692  if (a >= a9) {... */
          swap1
          codesize
          jump(tag_956)
            /* \"src/libraries/LogExpMath.sol\":18490:18584  if (a >= a8) {... */
        tag_953:
            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
          0x056bc75e2d63100000
            /* \"src/libraries/LogExpMath.sol\":4301:4327  50_000_000_000_000_000_000 */
          0x02b5e3af16b1880000
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap3
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          swap2
          add
            /* \"src/libraries/LogExpMath.sol\":18490:18584  if (a >= a8) {... */
          swap1
          codesize
          jump(tag_954)
            /* \"src/libraries/LogExpMath.sol\":18382:18476  if (a >= a7) {... */
        tag_951:
            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
          0x056bc75e2d63100000
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          dup1
          swap3
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          swap2
          add
            /* \"src/libraries/LogExpMath.sol\":18382:18476  if (a >= a7) {... */
          swap1
          codesize
          jump(tag_952)
            /* \"src/libraries/LogExpMath.sol\":18274:18368  if (a >= a6) {... */
        tag_949:
            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
          0x056bc75e2d63100000
            /* \"src/libraries/LogExpMath.sol\":4047:4074  200_000_000_000_000_000_000 */
          0x0ad78ebc5ac6200000
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap3
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          swap2
          add
            /* \"src/libraries/LogExpMath.sol\":18274:18368  if (a >= a6) {... */
          swap1
          codesize
          jump(tag_950)
            /* \"src/libraries/LogExpMath.sol\":18166:18260  if (a >= a5) {... */
        tag_947:
            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
          0x056bc75e2d63100000
            /* \"src/libraries/LogExpMath.sol\":3918:3945  400_000_000_000_000_000_000 */
          0x15af1d78b58c400000
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap3
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          swap2
          add
            /* \"src/libraries/LogExpMath.sol\":18166:18260  if (a >= a5) {... */
          swap1
          codesize
          jump(tag_948)
            /* \"src/libraries/LogExpMath.sol\":18058:18152  if (a >= a4) {... */
        tag_945:
            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
          0x056bc75e2d63100000
            /* \"src/libraries/LogExpMath.sol\":3787:3814  800_000_000_000_000_000_000 */
          0x2b5e3af16b18800000
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap3
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          swap2
          add
            /* \"src/libraries/LogExpMath.sol\":18058:18152  if (a >= a4) {... */
          swap1
          codesize
          jump(tag_946)
            /* \"src/libraries/LogExpMath.sol\":17950:18044  if (a >= a3) {... */
        tag_943:
            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
          0x056bc75e2d63100000
            /* \"src/libraries/LogExpMath.sol\":3650:3679  1_600_000_000_000_000_000_000 */
          0x56bc75e2d631000000
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap3
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          swap2
          add
            /* \"src/libraries/LogExpMath.sol\":17950:18044  if (a >= a3) {... */
          swap1
          codesize
          jump(tag_944)
            /* \"src/libraries/LogExpMath.sol\":17842:17936  if (a >= a2) {... */
        tag_941:
            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
          0x056bc75e2d63100000
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap2
          swap3
          swap5
          pop
            /* \"src/libraries/LogExpMath.sol\":3503:3532  3_200_000_000_000_000_000_000 */
          0xad78ebc5ac62000000
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap4
          pop
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          swap2
          add
            /* \"src/libraries/LogExpMath.sol\":17842:17936  if (a >= a2) {... */
          swap1
          codesize
          dup1
          dup1
          jump(tag_942)
            /* \"src/libraries/LogExpMath.sol\":17399:17525  if (a >= a1 * ONE_18) {... */
        tag_939:
            /* \"src/libraries/LogExpMath.sol\":3385:3422  6_235_149_080_811_616_882_910_000_000 */
          0x1425982cf597cd205cef7380
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          swap1
          swap2
          sdiv
          swap1
            /* \"src/libraries/LogExpMath.sol\":3324:3350  64_000_000_000_000_000_000 */
          0x03782dace9d9000000
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          add
            /* \"src/libraries/LogExpMath.sol\":17399:17525  if (a >= a1 * ONE_18) {... */
          jump(tag_940)
            /* \"src/libraries/LogExpMath.sol\":17259:17385  if (a >= a0 * ONE_18) {... */
        tag_937:
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          pop
            /* \"src/libraries/LogExpMath.sol\":3187:3261  38_877_084_059_945_950_922_200_000_000_000_000_000_000_000_000_000_000_000 */
          0x0195e54c5dd42177f53a27172fa9ec630262827000000000
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          swap1
          sdiv
            /* \"src/libraries/LogExpMath.sol\":3125:3152  128_000_000_000_000_000_000 */
          0x06f05b59d3b2000000
            /* \"src/libraries/LogExpMath.sol\":17259:17385  if (a >= a0 * ONE_18) {... */
          jump(tag_938)
            /* \"src/libraries/LogExpMath.sol\":15339:15760  if (a < ONE_18) {... */
        tag_935:
            /* \"src/libraries/LogExpMath.sol\":15722:15743  (ONE_18 * ONE_18) / a */
          tag_962
            /* \"src/libraries/LogExpMath.sol\":15718:15744  _ln((ONE_18 * ONE_18) / a) */
          tag_963
            /* \"src/libraries/LogExpMath.sol\":15722:15743  (ONE_18 * ONE_18) / a */
          swap2
          tag_53
          jump\t// in
        tag_962:
            /* \"src/libraries/LogExpMath.sol\":15718:15744  _ln((ONE_18 * ONE_18) / a) */
          tag_57
          jump\t// in
        tag_963:
          0x00
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sub
            /* \"src/libraries/LogExpMath.sol\":15709:15745  return (-_ln((ONE_18 * ONE_18) / a)) */
          swap1
          jump\t// out
            /* \"src/libraries/StableMath.sol\":3525:4633  function _computeLiquidityFromAdjustedBalances(... */
        tag_58:
          swap2
          swap1
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x00
            /* \"src/libraries/StableMath.sol\":3738:3747  xp0 + xp1 */
          tag_964
          dup3
          dup6
          tag_22
          jump\t// in
        tag_964:
            /* \"src/libraries/StableMath.sol\":3761:3767  s == 0 */
          dup1
          iszero
            /* \"src/libraries/StableMath.sol\":3757:3802  if (s == 0) {... */
          tag_965
          jumpi
            /* \"src/libraries/StableMath.sol\":3812:3825  uint256 prevD */
          dup2
            /* \"src/libraries/StableMath.sol\":3891:3904  uint256 D = s */
          swap4
          dup2
            /* \"src/libraries/StableMath.sol\":3927:3962  xp0 < xp1 ? (xp0, xp1) : (xp1, xp0) */
          swap6
            /* \"src/libraries/StableMath.sol\":3927:3936  xp0 < xp1 */
          dup5
          dup2
          lt
            /* \"src/libraries/StableMath.sol\":3927:3962  xp0 < xp1 ? (xp0, xp1) : (xp1, xp0) */
          0x00
            /* \"src/libraries/StableMath.sol\":3927:3936  xp0 < xp1 */
          eq
          tag_967
          jumpi
            /* \"src/libraries/StableMath.sol\":3927:3962  xp0 < xp1 ? (xp0, xp1) : (xp1, xp0) */
          swap3
          swap2
          swap1
        tag_969:
            /* \"src/libraries/StableMath.sol\":3977:3990  uint256 i = 0 */
          dup3
            /* \"src/libraries/StableMath.sol\":3972:4294  for (uint256 i = 0; i < MAX_LOOP_LIMIT; i++) {... */
          swap5
            /* \"src/libraries/StableMath.sol\":3992:4010  i < MAX_LOOP_LIMIT */
        tag_970:
            /* \"src/libraries/StableMath.sol\":929:932  256 */
          0x0100
            /* \"src/libraries/StableMath.sol\":3992:4010  i < MAX_LOOP_LIMIT */
          dup7
          lt
          tag_971
          jumpi
            /* \"src/libraries/StableMath.sol\":4451:4481  stdMath.percentDelta(D, prevD) */
          pop
          pop
          pop
          pop
          pop
          pop
            /* \"src/libraries/StableMath.sol\":4511:4529  0.0000000000004e18 */
          0x061a80
            /* \"src/libraries/StableMath.sol\":4451:4481  stdMath.percentDelta(D, prevD) */
          tag_973
          dup3
          dup5
          tag_51
          jump\t// in
        tag_973:
            /* \"src/libraries/StableMath.sol\":4495:4529  percentDelta <= 0.0000000000004e18 */
          gt
          iszero
            /* \"src/libraries/StableMath.sol\":4491:4578  if (percentDelta <= 0.0000000000004e18) {... */
          tag_974
          jumpi
            /* \"src/libraries/StableMath.sol\":320:323  100 */
          0x64
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mload(0x40)
            /* \"src/libraries/StableMath.sol\":4588:4626  revert(\"SM: COMPUTE_DID_NOT_CONVERGE\") */
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
            /* \"src/libraries/StableMath.sol\":320:323  100 */
          0x20
            /* \"src/libraries/StableMath.sol\":4074:4075  4 */
          0x04
            /* \"src/libraries/StableMath.sol\":4588:4626  revert(\"SM: COMPUTE_DID_NOT_CONVERGE\") */
          dup3
          add
            /* \"src/libraries/StableMath.sol\":320:323  100 */
          mstore
          0x1c
          0x24
          dup3
          add
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mstore
            /* \"src/libraries/StableMath.sol\":320:323  100 */
          0x534d3a20434f4d505554455f4449445f4e4f545f434f4e564552474500000000
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x44
          dup3
          add
            /* \"src/libraries/StableMath.sol\":320:323  100 */
          mstore
            /* \"src/libraries/StableMath.sol\":4588:4626  revert(\"SM: COMPUTE_DID_NOT_CONVERGE\") */
          revert
            /* \"src/libraries/StableMath.sol\":4491:4578  if (percentDelta <= 0.0000000000004e18) {... */
        tag_974:
            /* \"src/libraries/StableMath.sol\":4553:4562  D + prevD */
          tag_976
          swap2
          tag_22
          jump\t// in
        tag_976:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x01
          shr
            /* \"src/libraries/StableMath.sol\":4545:4567  return (D + prevD) / 2 */
          swap1
          jump\t// out
            /* \"src/libraries/StableMath.sol\":4012:4015  i++ */
        tag_971:
            /* \"src/libraries/StableMath.sol\":4047:4052  D * D */
          swap1
          swap2
          swap3
          swap4
          swap5
          swap6
          pop
            /* \"src/libraries/StableMath.sol\":4044:4071  (((D * D) / xp0) * D) / xp1 */
          tag_977
            /* \"src/libraries/StableMath.sol\":4047:4052  D * D */
          dup2
            /* \"src/libraries/StableMath.sol\":4045:4064  ((D * D) / xp0) * D */
          tag_452
            /* \"src/libraries/StableMath.sol\":4047:4052  D * D */
          dup10
            /* \"src/libraries/StableMath.sol\":4046:4059  (D * D) / xp0 */
          tag_451
            /* \"src/libraries/StableMath.sol\":4047:4052  D * D */
          dup10
          tag_452
          dup4
          dup1
          tag_36
          jump\t// in
            /* \"src/libraries/StableMath.sol\":4044:4071  (((D * D) / xp0) * D) / xp1 */
        tag_977:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap6
          dup7
            /* \"src/libraries/StableMath.sol\":4144:4145  2 */
          0x02
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          shr
            /* \"src/libraries/StableMath.sol\":4089:4098  prevD = D */
          swap8
          dup1
          swap9
          dup2
            /* \"src/libraries/StableMath.sol\":320:323  100 */
          swap9
            /* \"src/libraries/StableMath.sol\":4117:4155  ((N_A * s) / A_PRECISION + 2 * dP) * D */
          tag_981
            /* \"src/libraries/StableMath.sol\":320:323  100 */
          dup4
            /* \"src/libraries/StableMath.sol\":4118:4150  (N_A * s) / A_PRECISION + 2 * dP */
          tag_451
            /* \"src/libraries/StableMath.sol\":320:323  100 */
          0x64
            /* \"src/libraries/StableMath.sol\":4119:4126  N_A * s */
          swap4
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0x7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
            /* \"src/libraries/StableMath.sol\":4119:4126  N_A * s */
          dup6
          tag_983
          dup14
          dup14
          tag_36
          jump\t// in
        tag_983:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          div
          swap2
          0x01
          shr
          and
            /* \"src/libraries/StableMath.sol\":4118:4150  (N_A * s) / A_PRECISION + 2 * dP */
          swap1
          tag_22
          jump\t// in
            /* \"src/libraries/StableMath.sol\":4117:4155  ((N_A * s) / A_PRECISION + 2 * dP) * D */
        tag_981:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap3
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9c
          dup8
          add
          dup8
          dup2
          gt
          tag_984
          jumpi
            /* \"src/libraries/StableMath.sol\":4160:4183  (N_A - A_PRECISION) * D */
          swap1
          tag_986
          swap2
          tag_36
          jump\t// in
        tag_986:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          div
            /* \"src/libraries/StableMath.sol\":4200:4201  3 */
          0x03
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap2
          dup1
          dup4
          mul
          swap3
          dup4
          div
          sub
          tag_987
          jumpi
            /* \"src/libraries/StableMath.sol\":4116:4207  (((N_A * s) / A_PRECISION + 2 * dP) * D) / ((N_A - A_PRECISION) * D / A_PRECISION + 3 * dP) */
          tag_989
            /* \"src/libraries/StableMath.sol\":4160:4206  (N_A - A_PRECISION) * D / A_PRECISION + 3 * dP */
          swap3
          swap2
          tag_844
          swap2
          tag_22
          jump\t// in
            /* \"src/libraries/StableMath.sol\":4116:4207  (((N_A * s) / A_PRECISION + 2 * dP) * D) / ((N_A - A_PRECISION) * D / A_PRECISION + 3 * dP) */
        tag_989:
            /* \"src/libraries/StableMath.sol\":4225:4241  D.within1(prevD) */
          tag_991
            /* \"src/libraries/StableMath.sol\":4112:4207  D = (((N_A * s) / A_PRECISION + 2 * dP) * D) / ((N_A - A_PRECISION) * D / A_PRECISION + 3 * dP) */
          dup2
            /* \"src/libraries/StableMath.sol\":4225:4241  D.within1(prevD) */
          swap10
          dup3
          tag_59
          jump\t// in
        tag_991:
            /* \"src/libraries/StableMath.sol\":4221:4284  if (D.within1(prevD)) {... */
          tag_992
          jumpi
            /* \"src/libraries/StableMath.sol\":4012:4015  i++ */
          pop
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
          dup2
          eq
          tag_994
          jumpi
          0x01
          add
            /* \"src/libraries/StableMath.sol\":3977:3990  uint256 i = 0 */
          swap5
          swap4
          swap3
          swap2
          swap1
          jump(tag_970)
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
        tag_994:
          0x24
          dup6
          0x4e487b7100000000000000000000000000000000000000000000000000000000
          dup2
          mstore
          0x11
            /* \"src/libraries/StableMath.sol\":4074:4075  4 */
          0x04
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mstore
          revert
            /* \"src/libraries/StableMath.sol\":4221:4284  if (D.within1(prevD)) {... */
        tag_992:
            /* \"src/libraries/StableMath.sol\":4261:4269  return D */
          swap8
          pop
          pop
          pop
          pop
          pop
          pop
          pop
          pop
          swap1
          jump\t// out
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
        tag_987:
          0x24
          dup9
          0x4e487b7100000000000000000000000000000000000000000000000000000000
          dup2
          mstore
          0x11
            /* \"src/libraries/StableMath.sol\":4074:4075  4 */
          0x04
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mstore
          revert
        tag_984:
          0x24
          dup11
          0x4e487b7100000000000000000000000000000000000000000000000000000000
          dup2
          mstore
          0x11
            /* \"src/libraries/StableMath.sol\":4074:4075  4 */
          0x04
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          mstore
          revert
            /* \"src/libraries/StableMath.sol\":3927:3962  xp0 < xp1 ? (xp0, xp1) : (xp1, xp0) */
        tag_967:
          swap4
          swap3
          swap2
          swap1
          jump(tag_969)
            /* \"src/libraries/StableMath.sol\":3757:3802  if (s == 0) {... */
        tag_965:
            /* \"src/libraries/StableMath.sol\":3783:3791  return 0 */
          pop
          swap3
          pop
          pop
          pop
          swap1
          jump\t// out
            /* \"src/libraries/MathUtils.sol\":519:729  function within1(uint256 a, uint256 b) internal pure returns (bool) {... */
        tag_59:
            /* \"src/libraries/MathUtils.sol\":711:712  1 */
          0x01
            /* \"src/libraries/MathUtils.sol\":519:729  function within1(uint256 a, uint256 b) internal pure returns (bool) {... */
          swap2
            /* \"src/libraries/MathUtils.sol\":625:630  a > b */
          dup1
          dup3
          gt
            /* \"src/libraries/MathUtils.sol\":621:682  if (a > b) {... */
          tag_996
          jumpi
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          sub
            /* \"src/libraries/MathUtils.sol\":702:712  b - a <= 1 */
          gt
          iszero
            /* \"src/libraries/MathUtils.sol\":519:729  function within1(uint256 a, uint256 b) internal pure returns (bool) {... */
          swap1
          jump\t// out
            /* \"src/libraries/MathUtils.sol\":621:682  if (a > b) {... */
        tag_996:
            /* \"src/curve/stable/StableMintBurn.sol\":1113:11119  contract StableMintBurn is ReservoirPair {... */
          swap1
          sub
            /* \"src/libraries/MathUtils.sol\":657:667  a - b <= 1 */
          gt
          iszero
            /* \"src/libraries/MathUtils.sol\":650:667  return a - b <= 1 */
          swap1
          jump\t// out
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":704:868  function mulWadDown(uint256 x, uint256 y) internal pure returns (uint256) {... */
        tag_60:
          swap1
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":655:659  1e18 */
          0x0de0b6b3a7640000
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":1744:2084  assembly {... */
          swap2
          dup2
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
          div
          dup2
          gt
          dup3
          mul
          iszero
          dup4
          mul
          iszero
          tag_560
          jumpi
          mul
          div
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":704:868  function mulWadDown(uint256 x, uint256 y) internal pure returns (uint256) {... */
          swap1
          jump\t// out

        auxdata: 0xa164736f6c6343000811000a
    }
}

sub_4: assembly {
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      0x01c0
      dup1
      0x40
      mstore
      jumpi(tag_97, callvalue)
      0x40
      dup2
      bytecodeSize
      dup1
      codesize
      sub
      dup1
      swap2
      tag_14
      dup3
      dup6
      tag_2
      jump\t// in
    tag_14:
      dup4
      codecopy
      dup2
      add
      sub
      slt
      tag_97
      jumpi
      tag_17
      0x20
      tag_18
      dup4
      tag_3
      jump\t// in
    tag_18:
      swap3
      add
      tag_3
      jump\t// in
    tag_17:
      swap1
      mload(0x40)
      swap2
      tag_19
      dup4
      tag_1
      jump\t// in
    tag_19:
      0x0b
      dup4
      mstore
      shl(0xa8, 0x53503a3a73776170466565)
      0x20
      dup5
      add
      mstore
      mload(0x40)
      swap3
      tag_20
      dup5
      tag_1
      jump\t// in
    tag_20:
      0x12
      dup5
      mstore
      shl(0x71, 0x2932b9b2b93b37b4b9102628102a37b5b2b7)
      0x20
      dup6
      add
      mstore
      mload(0x40)
      swap4
      tag_21
      dup6
      tag_1
      jump\t// in
    tag_21:
      0x06
      dup6
      mstore
      shl(0xd4, 0x05245532d4c5)
      0x20
      dup7
      add
      mstore
      dup1
      mload
      swap1
      sub(shl(0x40, 0x01), 0x01)
      dup3
      gt
      tag_50
      jumpi
      dup2
      swap1
      tag_24
      sload(0x00)
      tag_8
      jump\t// in
    tag_24:
      0x1f
      dup2
      gt
      tag_25
      jumpi
    tag_26:
      pop
      0x20
      swap1
      0x1f
      dup4
      gt
      0x01
      eq
      tag_27
      jumpi
      0x00
      swap3
      tag_29
      jumpi
    tag_30:
      pop
      pop
      dup2
      0x01
      shl
      swap2
      not(0x00)
      swap1
      0x03
      shl
      shr
      not
      and
      or
      0x00
      sstore
    tag_31:
      dup4
      mload
      sub(shl(0x40, 0x01), 0x01)
      dup2
      gt
      tag_50
      jumpi
      tag_34
      sload(0x01)
      tag_8
      jump\t// in
    tag_34:
      0x1f
      dup2
      gt
      tag_35
      jumpi
    tag_36:
      pop
      0x20
      swap5
      0x1f
      dup3
      gt
      0x01
      eq
      tag_37
      jumpi
      swap5
      dup2
      swap3
      swap4
      swap5
      swap6
      0x00
      swap3
      tag_39
      jumpi
    tag_40:
      pop
      pop
      dup2
      0x01
      shl
      swap2
      not(0x00)
      swap1
      0x03
      shl
      shr
      not
      and
      or
      0x01
      sstore
    tag_41:
      0x12
        /* \"lib/solmate/src/tokens/ERC20.sol\":2142:2162  decimals = _decimals */
      0x80
      mstore
        /* \"lib/solmate/src/tokens/ERC20.sol\":2192:2205  block.chainid */
      chainid
        /* \"lib/solmate/src/tokens/ERC20.sol\":2173:2205  INITIAL_CHAIN_ID = block.chainid */
      0xa0
      mstore
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      mload(0x40)
      0x00
      swap1
      sload(0x00)
      swap2
      dup2
      tag_42
      dup5
      tag_8
      jump\t// in
    tag_42:
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      swap2
      dup3
      dup3
      mstore
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      0x20
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      dup3
      add
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      swap5
      0x01
      dup2
      and
        /* \"lib/solmate/src/tokens/ERC20.sol\":2116:2132  symbol = _symbol */
      swap1
      dup2
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      0x00
        /* \"lib/solmate/src/tokens/ERC20.sol\":2116:2132  symbol = _symbol */
      eq
      tag_43
      jumpi
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      pop
      0x01
      eq
      tag_45
      jumpi
    tag_46:
      tag_47
      swap3
      pop
      sub
      dup3
      tag_2
      jump\t// in
    tag_47:
      mload
        /* \"lib/solmate/src/tokens/ERC20.sol\":5789:5811  keccak256(bytes(name)) */
      swap1
      keccak256
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      mload(0x40)
        /* \"lib/solmate/src/tokens/ERC20.sol\":5640:5935  abi.encode(... */
      swap1
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      0x20
        /* \"lib/solmate/src/tokens/ERC20.sol\":5640:5935  abi.encode(... */
      dup3
      add
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      swap1
        /* \"lib/solmate/src/tokens/ERC20.sol\":5672:5767  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */
      0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      dup3
      mstore
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      0x40
      dup4
      add
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      mstore
        /* \"lib/solmate/src/tokens/ERC20.sol\":5833:5847  keccak256(\"1\") */
      0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      0x60
      dup4
      add
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      mstore
        /* \"lib/solmate/src/tokens/ERC20.sol\":2192:2205  block.chainid */
      chainid
        /* \"lib/solmate/src/tokens/ERC20.sol\":2142:2162  decimals = _decimals */
      0x80
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      dup4
      add
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      mstore
        /* \"lib/solmate/src/tokens/ERC20.sol\":5912:5916  this */
      address
        /* \"lib/solmate/src/tokens/ERC20.sol\":2173:2205  INITIAL_CHAIN_ID = block.chainid */
      0xa0
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      dup4
      add
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      mstore
        /* \"lib/solmate/src/tokens/ERC20.sol\":2173:2205  INITIAL_CHAIN_ID = block.chainid */
      0xa0
        /* \"lib/solmate/src/tokens/ERC20.sol\":5640:5935  abi.encode(... */
      dup3
      mstore
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      0xc0
      dup3
      add
      swap1
      dup3
      dup3
      lt
      0x01
      dup1
      0x40
      shl
      sub
      dup4
      gt
      or
      tag_50
      jumpi
      0x40
      dup3
      swap1
      mstore
      dup3
      mload
        /* \"lib/solmate/src/tokens/ERC20.sol\":5613:5949  keccak256(... */
      swap1
      keccak256
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      0xc0
        /* \"lib/solmate/src/tokens/ERC20.sol\":2215:2266  INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator() */
      mstore
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      0x0140
      dup3
      add
      swap2
      sub(shl(0x40, 0x01), 0x01)
      dup4
      gt
      dup3
      dup5
      lt
      or
      tag_50
      jumpi
      0x00
        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */
      0x0120
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      swap3
        /* \"src/ReservoirPair.sol\":3435:3451  type(uint16).max */
      0xffff
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      swap5
      0x40
      mstore
      mstore
      0x00
        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */
      0xe0
      dup3
      add
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      mstore
      0x00
        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */
      0x0100
      dup3
      add
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      mstore
        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */
      add
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      mstore
      sstore(0x06, shl(0xf0, 0xffff))
      not(0x00)
        /* \"src/curve/stable/StablePair.sol\":1558:1571  \"SP::swapFee\" */
      dup1
        /* \"src/ReservoirPair.sol\":3519:3536  type(uint256).max */
      0x08
        /* \"src/curve/stable/StablePair.sol\":1558:1571  \"SP::swapFee\" */
      sstore
        /* \"src/ReservoirPair.sol\":3654:3671  type(uint256).max */
      0x0a
        /* \"src/curve/stable/StablePair.sol\":1558:1571  \"SP::swapFee\" */
      sstore
        /* \"src/ReservoirPair.sol\":3899:3909  msg.sender */
      caller
        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */
      0xe0
        /* \"src/ReservoirPair.sol\":3874:3910  factory = GenericFactory(msg.sender) */
      mstore
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      0x01
      dup1
      0xa0
      shl
      sub
      dup4
      and
        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */
      0x0100
        /* \"src/ReservoirPair.sol\":3920:3943  token0 = ERC20(aToken0) */
      mstore
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      0x01
      dup1
      0xa0
      shl
      sub
      dup3
      and
        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */
      0x0120
        /* \"src/ReservoirPair.sol\":3953:3976  token1 = ERC20(aToken1) */
      mstore
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      mload(0x40)
        /* \"src/ReservoirPair.sol\":4011:4041  abi.encodePacked(aSwapFeeName) */
      tag_52
      dup2
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      tag_53
      0x20
        /* \"src/ReservoirPair.sol\":4011:4041  abi.encodePacked(aSwapFeeName) */
      dup3
      add
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      dup1
      swap6
      tag_4
      jump\t// in
    tag_53:
        /* \"src/ReservoirPair.sol\":4011:4041  abi.encodePacked(aSwapFeeName) */
      sub
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      not(0x1f)
        /* \"src/ReservoirPair.sol\":4011:4041  abi.encodePacked(aSwapFeeName) */
      dup2
      add
      dup4
      mstore
      dup3
      tag_2
      jump\t// in
    tag_52:
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      mload
        /* \"src/ReservoirPair.sol\":4001:4042  keccak256(abi.encodePacked(aSwapFeeName)) */
      swap1
      keccak256
        /* \"src/ReservoirPair.sol\":3987:4042  swapFeeName = keccak256(abi.encodePacked(aSwapFeeName)) */
      0x0180
      mstore
      tag_54
      tag_9
      jump\t// in
    tag_54:
      tag_55
      tag_10
      jump\t// in
    tag_55:
        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */
      0x0100
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      mload
      mload(0x40)
      shl(0xe0, 0x313ce567)
        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */
      dup2
      mstore
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      swap1
      0x20
      swap1
      dup3
      swap1
        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */
      0x04
      swap1
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      dup3
      swap1
      sub(shl(0xa0, 0x01), 0x01)
      and
        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */
      gas
      staticcall
      dup1
      iszero
      tag_80
      jumpi
        /* \"src/ReservoirPair.sol\":4151:4173  18 - token0.decimals() */
      tag_58
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      0xff
        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */
      swap2
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      tag_59
        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */
      swap4
      0x00
      swap2
      tag_66
      jumpi
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
    tag_61:
        /* \"src/ReservoirPair.sol\":4151:4173  18 - token0.decimals() */
      pop
      tag_6
      jump\t// in
    tag_58:
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      and
      tag_7
      jump\t// in
    tag_59:
      0x0140
        /* \"src/ReservoirPair.sol\":4107:4174  token0PrecisionMultiplier = uint128(10) ** (18 - token0.decimals()) */
      mstore
        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */
      0x0120
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      mload
      mload(0x40)
      shl(0xe0, 0x313ce567)
        /* \"src/ReservoirPair.sol\":4233:4250  token1.decimals() */
      dup2
      mstore
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      swap1
      0x20
      swap1
      dup3
      swap1
        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */
      0x04
      swap1
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      dup3
      swap1
      sub(shl(0xa0, 0x01), 0x01)
      and
        /* \"src/ReservoirPair.sol\":4233:4250  token1.decimals() */
      gas
      staticcall
      dup1
      iszero
      tag_80
      jumpi
        /* \"src/ReservoirPair.sol\":4228:4250  18 - token1.decimals() */
      tag_58
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      0xff
        /* \"src/ReservoirPair.sol\":4233:4250  token1.decimals() */
      swap2
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      tag_65
        /* \"src/ReservoirPair.sol\":4233:4250  token1.decimals() */
      swap4
      0x00
      swap2
      tag_66
      jumpi
        /* \"src/ReservoirPair.sol\":4228:4250  18 - token1.decimals() */
      pop
      tag_6
      jump\t// in
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
    tag_65:
        /* \"src/ReservoirPair.sol\":4184:4251  token1PrecisionMultiplier = uint128(10) ** (18 - token1.decimals()) */
      0x0160
      mstore
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      0x01
      dup1
      0xa0
      shl
      sub
        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */
      0xe0
        /* \"src/curve/stable/StablePair.sol\":1558:1571  \"SP::swapFee\" */
      mload
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      and
        /* \"src/ReservoirPair.sol\":17490:17522  factory.read(ORACLE_CALLER_NAME) */
      tag_68
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      mload(0x40)
      tag_69
      dup2
      tag_1
      jump\t// in
    tag_69:
      0x14
      dup2
      mstore
      0x5368617265643a3a6f7261636c6543616c6c6572000000000000000000000000
      0x20
      dup3
      add
      mstore
      sub(shl(0xa0, 0x01), 0x01)
      swap3
        /* \"src/ReservoirPair.sol\":17490:17522  factory.read(ORACLE_CALLER_NAME) */
      tag_11
      jump\t// in
    tag_68:
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      and
        /* \"src/ReservoirPair.sol\":17562:17574  oracleCaller */
      0x01000f
        /* \"src/ReservoirPair.sol\":16881:16903  \"Shared::oracleCaller\" */
      swap1
      dup2
      sload
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      0x01
      dup1
      0xa0
      shl
      sub
      dup2
      and
        /* \"src/ReservoirPair.sol\":17548:17574  lNewCaller != oracleCaller */
      dup1
      dup4
      sub
        /* \"src/ReservoirPair.sol\":17544:17690  if (lNewCaller != oracleCaller) {... */
      tag_70
      jumpi
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
    tag_71:
      pop
      pop
        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */
      0xe0
        /* \"src/curve/stable/StablePair.sol\":1558:1571  \"SP::swapFee\" */
      mload
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      mload(0x40)
        /* \"src/ReservoirPair.sol\":4309:4343  factory.read(MAX_CHANGE_RATE_NAME) */
      tag_72
      swap4
      pop
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      swap2
      pop
      sub(shl(0xa0, 0x01), 0x01)
      and
      tag_73
      dup3
      tag_1
      jump\t// in
    tag_73:
      0x15
      dup3
      mstore
      0x5368617265643a3a6d61784368616e6765526174650000000000000000000000
      0x20
      dup4
      add
      mstore
        /* \"src/ReservoirPair.sol\":4309:4343  factory.read(MAX_CHANGE_RATE_NAME) */
      tag_11
      jump\t// in
    tag_72:
        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */
      0xe0
        /* \"src/curve/stable/StablePair.sol\":1558:1571  \"SP::swapFee\" */
      mload
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      swap1
      swap2
      swap1
      sub(shl(0xa0, 0x01), 0x01)
      and
        /* \"src/ReservoirPair.sol\":3899:3909  msg.sender */
      caller
        /* \"src/ReservoirPair.sol\":3719:3749  msg.sender == address(factory) */
      sub
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      tag_74
      jumpi
        /* \"src/ReservoirPair.sol\":17789:17807  0 < aMaxChangeRate */
      dup2
      iszero
      iszero
        /* \"src/ReservoirPair.sol\":17789:17847  0 < aMaxChangeRate && aMaxChangeRate <= MAX_CHANGE_PER_SEC */
      dup1
      tag_76
      jumpi
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
    tag_77:
        /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */
      iszero
      tag_78
      jumpi
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      0x20
        /* \"src/ReservoirPair.sol\":17917:17930  maxChangeRate */
      swap2
      0x01000d
        /* \"src/ReservoirPair.sol\":17896:17947  MaxChangeRateUpdated(maxChangeRate, aMaxChangeRate) */
      0x807b9f5907da3f00bf587e77bc07247e1c7ff5ae46c93a584b3a075be0b1bac2
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      0x40
      dup3
      sload
      dup2
      mload
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      swap1
      dup2
      mstore
        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */
      dup5
      dup8
      dup3
      add
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      mstore
        /* \"src/ReservoirPair.sol\":17896:17947  MaxChangeRateUpdated(maxChangeRate, aMaxChangeRate) */
      log1
        /* \"src/curve/stable/StablePair.sol\":1558:1571  \"SP::swapFee\" */
      sstore
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      0x01
        /* \"src/curve/stable/StablePair.sol\":1897:1898  1 */
      0x010011
        /* \"src/curve/stable/StablePair.sol\":1558:1571  \"SP::swapFee\" */
      sstore
        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */
      0xe0
        /* \"src/curve/stable/StablePair.sol\":1558:1571  \"SP::swapFee\" */
      mload
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      mload(0x40)
      shl(0xe2, 0x33e744df)
        /* \"src/curve/stable/StablePair.sol\":2258:2318  factory.deploy(ConstantsLib.MINT_BURN_KEY, aToken0, aToken1) */
      dup2
      mstore
        /* \"src/libraries/Constants.sol\":210:276  0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79 */
      0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79
        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */
      0x04
        /* \"src/curve/stable/StablePair.sol\":2258:2318  factory.deploy(ConstantsLib.MINT_BURN_KEY, aToken0, aToken1) */
      dup3
      add
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      mstore
      sub(shl(0xa0, 0x01), 0x01)
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      swap5
      dup6
      and
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      0x24
      dup3
      add
      mstore
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      swap2
      dup5
      and
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      0x44
      dup4
      add
      mstore
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      swap1
      swap3
      dup4
      swap2
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      0x64
      swap2
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      dup4
      swap2
      0x00
      swap2
      and
        /* \"src/curve/stable/StablePair.sol\":2258:2318  factory.deploy(ConstantsLib.MINT_BURN_KEY, aToken0, aToken1) */
      gas
      call
      swap1
      dup2
      iszero
      tag_80
      jumpi
      0x00
      swap2
      tag_82
      jumpi
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
    tag_83:
      pop
        /* \"src/curve/stable/StablePair.sol\":2240:2318  MINT_BURN_LOGIC = factory.deploy(ConstantsLib.MINT_BURN_KEY, aToken0, aToken1) */
      0x01a0
      dup2
      dup2
      mstore
      swap1
      sub(shl(0xa0, 0x01), 0x01)
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      and
        /* \"src/curve/stable/StablePair.sol\":2336:2365  MINT_BURN_LOGIC != address(0) */
      iszero
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      tag_84
      jumpi
        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */
      0xe0
        /* \"src/curve/stable/StablePair.sol\":1558:1571  \"SP::swapFee\" */
      mload
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      mload(0x40)
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      0x64
      swap2
      sub(shl(0xa0, 0x01), 0x01)
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      and
      swap1
        /* \"src/curve/stable/StablePair.sol\":2431:2475  factory.read(AMPLIFICATION_COEFFICIENT_NAME) */
      tag_86
      swap1
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      tag_87
      dup2
      tag_1
      jump\t// in
    tag_87:
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      0x1c
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      dup2
      mstore
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      0x53503a3a616d706c696669636174696f6e436f656666696369656e7400000000
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      0x20
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      dup3
      add
      mstore
      sub(shl(0x40, 0x01), 0x01)
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      swap3
        /* \"src/curve/stable/StablePair.sol\":2431:2475  factory.read(AMPLIFICATION_COEFFICIENT_NAME) */
      tag_11
      jump\t// in
    tag_86:
        /* \"src/libraries/StableMath.sol\":320:323  100 */
      and
      mul
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      0x01
      dup1
      0x40
      shl
      sub
        /* \"src/libraries/StableMath.sol\":320:323  100 */
      dup2
      and
      swap1
      dup2
      sub
      tag_88
      jumpi
        /* \"src/curve/stable/StablePair.sol\":2412:2419  ampData */
      0x010010
        /* \"src/libraries/StableMath.sol\":320:323  100 */
      dup1
      sload
        /* \"src/curve/stable/StablePair.sol\":2603:2618  block.timestamp */
      timestamp
        /* \"src/libraries/StableMath.sol\":320:323  100 */
      0x80
      dup2
      swap1
      shl
      sub(shl(0xc0, 0x01), shl(0x80, 0x01))
      and
      not(sub(shl(0x40, 0x01), 0x01))
      swap3
      swap1
      swap3
      and
      dup5
      or
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      0x40
        /* \"src/libraries/StableMath.sol\":320:323  100 */
      shl
      0xffffffffffffffff0000000000000000
      and
      dup5
      or
      swap2
      swap1
      swap2
      or
      0xc0
      swap2
      swap1
      swap2
      shl
      not(sub(shl(0xc0, 0x01), 0x01))
      and
      or
      swap1
      sstore
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      0x64
        /* \"src/curve/stable/StablePair.sol\":2706:2775  ampData.initialA >= StableMath.MIN_A * uint64(StableMath.A_PRECISION) */
      dup2
      lt
      iszero
      swap1
      dup2
        /* \"src/curve/stable/StablePair.sol\":2706:2864  ampData.initialA >= StableMath.MIN_A * uint64(StableMath.A_PRECISION)... */
      tag_90
      jumpi
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
    tag_91:
        /* \"src/libraries/StableMath.sol\":607:613  10_000 */
      pop
      iszero
      tag_92
      jumpi
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      mload(0x40)
      dataSize(sub_0)
      swap2
      dup3
      dataOffset(sub_0)
      dup4
      codecopy
        /* \"lib/solmate/src/tokens/ERC20.sol\":2142:2162  decimals = _decimals */
      0x80
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      mload
      dup3
      assignImmutable(\"0xb7b2278e6c1d8d0abc309f6bf9256046dfb6cd1d61f6bb10388e8ea4928d3539\")
        /* \"lib/solmate/src/tokens/ERC20.sol\":2173:2205  INITIAL_CHAIN_ID = block.chainid */
      0xa0
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      mload
      dup3
      assignImmutable(\"0x81290bb363e768cff9ff9a5d447e434874948b933698048b966fdf5d744bf636\")
      mload(0xc0)
      dup3
      assignImmutable(\"0x34382e0db9f4d1365b2614bb97467901a574db9e05159d2f14a2053ade673b06\")
        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */
      0xe0
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      mload
      dup3
      assignImmutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")
        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */
      0x0100
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      mload
      dup3
      assignImmutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")
        /* \"src/ReservoirPair.sol\":3375:3453  Slot0({reserve0: 0, reserve1: 0, packedTimestamp: 0, index: type(uint16).max}) */
      0x0120
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      mload
      dup3
      assignImmutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")
      mload(0x0140)
      dup3
      assignImmutable(\"0x372e991e4284f7d12d6b2461cce9899511b05ac053845de253542adb96f2dca0\")
        /* \"src/ReservoirPair.sol\":4184:4251  token1PrecisionMultiplier = uint128(10) ** (18 - token1.decimals()) */
      0x0160
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      mload
      dup3
      assignImmutable(\"0xc4ba931b733b92a51f51c0955dd7716c7a38f3de911d23a5d0fbd5d23c0fbe8c\")
        /* \"src/ReservoirPair.sol\":3987:4042  swapFeeName = keccak256(abi.encodePacked(aSwapFeeName)) */
      0x0180
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      mload
      dup3
      assignImmutable(\"0x4c21324e1a4fdca228db96f937188124acece199982b123b328bdd8fee41b354\")
      mload
      dup2
      assignImmutable(\"0x69a6981f097d268300679363fc4cf56fca542798e8a407090df95d7866c686f5\")
      return
        /* \"src/libraries/StableMath.sol\":607:613  10_000 */
    tag_92:
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      mload(0x40)
      shl(0xe5, 0x461bcd)
        /* \"src/libraries/StableMath.sol\":607:613  10_000 */
      dup2
      mstore
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      0x20
        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */
      0x04
        /* \"src/libraries/StableMath.sol\":607:613  10_000 */
      dup3
      add
      mstore
      0x0d
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      0x24
        /* \"src/libraries/StableMath.sol\":607:613  10_000 */
      dup3
      add
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      mstore
      shl(0x98, 0x53503a20494e56414c49445f41)
      0x44
      dup3
      add
        /* \"src/libraries/StableMath.sol\":607:613  10_000 */
      mstore
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      0x64
      swap1
        /* \"src/libraries/StableMath.sol\":607:613  10_000 */
      revert
        /* \"src/curve/stable/StablePair.sol\":2706:2864  ampData.initialA >= StableMath.MIN_A * uint64(StableMath.A_PRECISION)... */
    tag_90:
        /* \"src/libraries/StableMath.sol\":521:522  1 */
      0x0f4240
        /* \"src/curve/stable/StablePair.sol\":2795:2864  ampData.initialA <= StableMath.MAX_A * uint64(StableMath.A_PRECISION) */
      swap2
      pop
      gt
      iszero
        /* \"src/curve/stable/StablePair.sol\":2706:2864  ampData.initialA >= StableMath.MIN_A * uint64(StableMath.A_PRECISION)... */
      codesize
      jump(tag_91)
        /* \"src/libraries/StableMath.sol\":320:323  100 */
    tag_88:
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      shl(0xe0, 0x4e487b71)
      0x00
        /* \"src/libraries/StableMath.sol\":320:323  100 */
      mstore
      0x11
        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */
      0x04
        /* \"src/libraries/StableMath.sol\":320:323  100 */
      mstore
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      0x24
      0x00
        /* \"src/libraries/StableMath.sol\":320:323  100 */
      revert
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
    tag_84:
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      mload(0x40)
      shl(0xe5, 0x461bcd)
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      dup2
      mstore
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      0x20
        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */
      0x04
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      dup3
      add
      mstore
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      0x1f
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      0x24
      dup3
      add
      mstore
      0x53503a204d494e545f4255524e5f4445504c4f594d454e545f4641494c454400
      0x44
      dup3
      add
      mstore
      0x64
      swap1
      revert
        /* \"src/curve/stable/StablePair.sol\":2258:2318  factory.deploy(ConstantsLib.MINT_BURN_KEY, aToken0, aToken1) */
    tag_82:
      swap1
      pop
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      0x20
        /* \"src/curve/stable/StablePair.sol\":2258:2318  factory.deploy(ConstantsLib.MINT_BURN_KEY, aToken0, aToken1) */
      dup2
      returndatasize
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      0x20
        /* \"src/curve/stable/StablePair.sol\":2258:2318  factory.deploy(ConstantsLib.MINT_BURN_KEY, aToken0, aToken1) */
      gt
      tag_94
      jumpi
    tag_95:
      dup2
      tag_96
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      0x20
        /* \"src/curve/stable/StablePair.sol\":2258:2318  factory.deploy(ConstantsLib.MINT_BURN_KEY, aToken0, aToken1) */
      swap4
      dup4
      tag_2
      jump\t// in
    tag_96:
      dup2
      add
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      sub
      slt
      tag_97
      jumpi
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      tag_99
      swap1
      tag_3
      jump\t// in
    tag_99:
        /* \"src/curve/stable/StablePair.sol\":2258:2318  factory.deploy(ConstantsLib.MINT_BURN_KEY, aToken0, aToken1) */
      codesize
      jump(tag_83)
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
    tag_97:
      0x00
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      dup1
      revert
        /* \"src/curve/stable/StablePair.sol\":2258:2318  factory.deploy(ConstantsLib.MINT_BURN_KEY, aToken0, aToken1) */
    tag_94:
      returndatasize
      swap2
      pop
      jump(tag_95)
    tag_80:
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      mload(0x40)
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      returndatasize
      0x00
      dup3
      returndatacopy
      returndatasize
      swap1
      revert
        /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */
    tag_78:
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      mload(0x40)
      shl(0xe5, 0x461bcd)
        /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */
      dup2
      mstore
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      0x20
        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */
      0x04
        /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */
      dup3
      add
      mstore
      0x1d
      0x24
      dup3
      add
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      mstore
        /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */
      0x4f573a20494e56414c49445f4348414e47455f5045525f5345434f4e44000000
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      0x44
      dup3
      add
        /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */
      mstore
      0x64
      swap1
      revert
        /* \"src/ReservoirPair.sol\":17789:17847  0 < aMaxChangeRate && aMaxChangeRate <= MAX_CHANGE_PER_SEC */
    tag_76:
        /* \"src/ReservoirPair.sol\":17811:17847  aMaxChangeRate <= MAX_CHANGE_PER_SEC */
      pop
        /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */
      0x2386f26fc10000
        /* \"src/ReservoirPair.sol\":17811:17847  aMaxChangeRate <= MAX_CHANGE_PER_SEC */
      dup3
      gt
      iszero
        /* \"src/ReservoirPair.sol\":17789:17847  0 < aMaxChangeRate && aMaxChangeRate <= MAX_CHANGE_PER_SEC */
      jump(tag_77)
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
    tag_74:
      mload(0x40)
      shl(0xe5, 0x461bcd)
      dup2
      mstore
      0x20
        /* \"src/ReservoirPair.sol\":4156:4173  token0.decimals() */
      0x04
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      dup3
      add
      mstore
      0x0c
      0x24
      dup3
      add
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      mstore
      shl(0xa1, 0x281d102327a92124a22222a7)
      0x44
      dup3
      add
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      mstore
      0x64
      swap1
      revert
        /* \"src/ReservoirPair.sol\":17544:17690  if (lNewCaller != oracleCaller) {... */
    tag_70:
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      0x40
        /* \"src/ReservoirPair.sol\":17595:17640  OracleCallerUpdated(oracleCaller, lNewCaller) */
      0x262681b3b01b61ff6d02569759105771205cdd274fb3c45535b50632e0a3523f
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      swap2
      dup2
      mload
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      swap1
      dup2
      mstore
        /* \"src/ReservoirPair.sol\":16881:16903  \"Shared::oracleCaller\" */
      dup5
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      0x20
        /* \"src/ReservoirPair.sol\":16881:16903  \"Shared::oracleCaller\" */
      dup3
      add
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      mstore
        /* \"src/ReservoirPair.sol\":17595:17640  OracleCallerUpdated(oracleCaller, lNewCaller) */
      log1
      not(sub(shl(0xa0, 0x01), 0x01))
        /* \"src/ReservoirPair.sol\":16881:16903  \"Shared::oracleCaller\" */
      and
      or
      swap1
      sstore
        /* \"src/ReservoirPair.sol\":17544:17690  if (lNewCaller != oracleCaller) {... */
      codesize
      dup1
      dup1
      dup1
      jump(tag_71)
        /* \"src/ReservoirPair.sol\":4233:4250  token1.decimals() */
    tag_66:
      tag_100
      swap2
      pop
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      0x20
        /* \"src/ReservoirPair.sol\":4233:4250  token1.decimals() */
      returndatasize
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      0x20
        /* \"src/ReservoirPair.sol\":4233:4250  token1.decimals() */
      gt
      tag_101
      jumpi
    tag_102:
      tag_103
      dup2
      dup4
      tag_2
      jump\t// in
    tag_103:
      dup2
      add
      swap1
      tag_5
      jump\t// in
    tag_100:
      codesize
      jump(tag_61)
    tag_101:
      pop
      returndatasize
      jump(tag_102)
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
    tag_50:
      mstore(0x00, shl(0xe0, 0x4e487b71))
      mstore(0x04, 0x41)
      revert(0x00, 0x24)
    tag_45:
      pop
      0x00
      dup1
      dup1
      mstore
      swap1
      swap2
      0x00
      dup1
      mload
      0x20
      data_510e4e770828ddbf7f7b00ab00a9f6adaf81c0dc9cc85f1f8249c256942d61d9
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
    tag_108:
      dup2
      dup4
      lt
      tag_109
      jumpi
      pop
      pop
      swap1
      0x20
      tag_47
      swap3
      dup3
      add
      add
      jump(tag_46)
    tag_109:
      0x20
      swap2
      swap4
      pop
      dup1
      0x01
      swap2
      sload
      dup4
      dup6
      dup9
      add
      add
      mstore
      add
      swap2
      add
      swap1
      swap2
      dup4
      swap3
      jump(tag_108)
    tag_43:
      not(0xff)
      and
      dup7
      mstore
      pop
      tag_47
      swap3
      iszero
      iszero
      0x05
      shl
      dup3
      add
      0x20
      add
      swap1
      pop
      jump(tag_46)
    tag_39:
      add
      mload
      swap1
      pop
      codesize
      dup1
      jump(tag_40)
    tag_37:
      not(0x1f)
      dup3
      and
      swap6
      mstore(0x00, 0x01)
      keccak256(0x00, 0x20)
      swap2
      0x00
    tag_111:
      dup9
      dup2
      lt
      tag_112
      jumpi
      pop
      dup4
      0x01
      swap6
      swap7
      swap8
      swap9
      lt
      tag_114
      jumpi
    tag_115:
      pop
      pop
      pop
      dup2
      shl
      add
      0x01
      sstore
      jump(tag_41)
    tag_114:
      add
      mload
      not(0x00)
      0xf8
      dup5
      0x03
      shl
      and
      shr
      not
      and
      swap1
      sstore
      codesize
      dup1
      dup1
      jump(tag_115)
    tag_112:
      swap2
      swap3
      0x20
      0x01
      dup2
      swap3
      dup7
      dup6
      add
      mload
      dup2
      sstore
      add
      swap5
      add
      swap3
      add
      jump(tag_111)
    tag_35:
      mstore(0x00, 0x01)
      0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6
      0x1f
      dup4
      add
      0x05
      shr
      dup2
      add
      swap2
      0x20
      dup5
      lt
      tag_116
      jumpi
    tag_117:
      0x1f
      add
      0x05
      shr
      add
      swap1
    tag_118:
      dup2
      dup2
      lt
      tag_119
      jumpi
      pop
      jump(tag_36)
    tag_119:
      0x00
      dup2
      sstore
      0x01
      add
      jump(tag_118)
    tag_116:
      swap1
      swap2
      pop
      dup2
      swap1
      jump(tag_117)
    tag_29:
      add
      mload
      swap1
      pop
      codesize
      dup1
      jump(tag_30)
    tag_27:
      0x00
      dup1
      dup1
      mstore
      0x00
      dup1
      mload
      0x20
      data_510e4e770828ddbf7f7b00ab00a9f6adaf81c0dc9cc85f1f8249c256942d61d9
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
      swap4
      pop
      not(0x1f)
      dup6
      and
      swap1
    tag_121:
      dup2
      dup2
      lt
      tag_122
      jumpi
      pop
      swap1
      dup5
      0x01
      swap6
      swap5
      swap4
      swap3
      lt
      tag_124
      jumpi
    tag_125:
      pop
      pop
      pop
      dup2
      shl
      add
      0x00
      sstore
      jump(tag_31)
    tag_124:
      add
      mload
      not(0x00)
      0xf8
      dup5
      0x03
      shl
      and
      shr
      not
      and
      swap1
      sstore
      codesize
      dup1
      dup1
      jump(tag_125)
    tag_122:
      swap3
      swap4
      0x20
      0x01
      dup2
      swap3
      dup8
      dup7
      add
      mload
      dup2
      sstore
      add
      swap6
      add
      swap4
      add
      jump(tag_121)
    tag_25:
      0x00
      dup1
      mstore
      swap1
      swap2
      pop
      0x00
      dup1
      mload
      0x20
      data_510e4e770828ddbf7f7b00ab00a9f6adaf81c0dc9cc85f1f8249c256942d61d9
      dup4
      codecopy
      dup2
      mload
      swap2
      mstore
      0x1f
      dup5
      add
      0x05
      shr
      dup2
      add
      swap2
      0x20
      dup6
      lt
      tag_126
      jumpi
    tag_127:
      swap1
      0x1f
      dup6
      swap5
      swap4
      swap3
      add
      0x05
      shr
      add
      swap1
    tag_128:
      dup2
      dup2
      lt
      tag_129
      jumpi
      pop
      jump(tag_26)
    tag_129:
      0x00
      dup2
      sstore
      dup5
      swap4
      pop
      0x01
      add
      jump(tag_128)
    tag_126:
      swap1
      swap2
      pop
      dup2
      swap1
      jump(tag_127)
    tag_1:
      0x40
      dup2
      add
      swap1
      dup2
      lt
      sub(shl(0x40, 0x01), 0x01)
      dup3
      gt
      or
      tag_50
      jumpi
      0x40
      mstore
      jump\t// out
    tag_2:
      0x1f
      swap1
      swap2
      add
      not(0x1f)
      and
      dup2
      add
      swap1
      sub(shl(0x40, 0x01), 0x01)
      dup3
      gt
      swap1
      dup3
      lt
      or
      tag_50
      jumpi
      0x40
      mstore
      jump\t// out
    tag_3:
      mload
      swap1
      sub(shl(0xa0, 0x01), 0x01)
      dup3
      and
      dup3
      sub
      tag_97
      jumpi
      jump\t// out
    tag_4:
      swap1
      dup2
      mload
      swap2
      0x00
    tag_137:
      dup4
      dup2
      lt
      tag_138
      jumpi
      pop
      pop
      add
      0x00
      dup2
      mstore
      swap1
      jump\t// out
    tag_138:
      dup1
      0x20
      dup1
      swap3
      dup5
      add
      add
      mload
      dup2
      dup6
      add
      mstore
      add
      jump(tag_137)
    tag_5:
      swap1
      dup2
      0x20
      swap2
      sub
      slt
      tag_97
      jumpi
      mload
      0xff
      dup2
      and
      dup2
      sub
      tag_97
      jumpi
      swap1
      jump\t// out
    tag_6:
      0xff
      and
      0x12
      sub
      swap1
      0xff
      dup3
      gt
      tag_88
      jumpi
      jump\t// out
    tag_7:
      dup1
      iszero
      tag_146
      jumpi
      0x01
      swap1
      0x20
      dup2
      lt
      dup3
      and
      0x4e
      dup3
      lt
      dup4
      and
      or
      tag_148
      jumpi
      dup2
      swap1
      0x0a
      swap3
    tag_150:
      dup1
      dup3
      gt
      tag_151
      jumpi
      pop
      pop
      sub(shl(0x80, 0x01), 0x01)
      dup3
      swap1
      div
      dup2
      gt
      tag_88
      jumpi
      mul
      swap1
      jump\t// out
    tag_151:
      swap1
      swap3
      sub(shl(0x80, 0x01), 0x01)
      dup2
      swap1
      div
      dup2
      gt
      tag_88
      jumpi
      dup2
      dup5
      and
      tag_157
      jumpi
    tag_158:
      dup1
      mul
      swap3
      dup2
      shr
      swap1
      jump(tag_150)
    tag_157:
      dup1
      swap3
      mul
      swap2
      jump(tag_158)
    tag_148:
      0x0a
      exp
      swap2
      swap1
      pop
      sub(shl(0x80, 0x01), 0x01)
      dup3
      gt
      tag_88
      jumpi
      jump\t// out
    tag_146:
      pop
      0x01
      swap1
      jump\t// out
    tag_8:
      swap1
      0x01
      dup3
      dup2
      shr
      swap3
      and
      dup1
      iszero
      tag_161
      jumpi
    tag_162:
      0x20
      dup4
      lt
      eq
      tag_163
      jumpi
      jump\t// out
    tag_163:
      mstore(0x00, shl(0xe0, 0x4e487b71))
      mstore(0x04, 0x22)
      revert(0x00, 0x24)
    tag_161:
      swap2
      0x7f
      and
      swap2
      jump(tag_162)
        /* \"src/ReservoirPair.sol\":7293:7635  function updateSwapFee() public {... */
    tag_9:
        /* \"src/ReservoirPair.sol\":7354:7367  customSwapFee */
      0x08
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      sload
      0x00
      not(0x00)
        /* \"src/ReservoirPair.sol\":7354:7388  customSwapFee != type(uint256).max */
      dup3
      eq
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      tag_165
      jumpi
        /* \"src/ReservoirPair.sol\":7354:7443  customSwapFee != type(uint256).max ? customSwapFee : factory.get(swapFeeName).toUint256() */
      pop
    tag_167:
        /* \"src/ReservoirPair.sol\":7469:7476  swapFee */
      0x07
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      sload
        /* \"src/ReservoirPair.sol\":7457:7476  _swapFee == swapFee */
      dup1
      dup3
      eq
        /* \"src/ReservoirPair.sol\":7453:7485  if (_swapFee == swapFee) return; */
      tag_168
      jumpi
        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */
      0x4e20
        /* \"src/ReservoirPair.sol\":7503:7527  _swapFee <= MAX_SWAP_FEE */
      dup3
      gt
        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */
      tag_170
      jumpi
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      0x40
        /* \"src/ReservoirPair.sol\":7567:7600  SwapFeeChanged(swapFee, _swapFee) */
      0xad321f810529281bbb90384fd6fecbdda41509a5ccd7bd5aed986ed827f6a026
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      swap2
      dup2
      mload
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      swap1
      dup2
      mstore
        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */
      dup4
      0x20
      dup3
      add
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      mstore
        /* \"src/ReservoirPair.sol\":7567:7600  SwapFeeChanged(swapFee, _swapFee) */
      log1
        /* \"src/ReservoirPair.sol\":7469:7476  swapFee */
      0x07
        /* \"src/curve/stable/StablePair.sol\":1558:1571  \"SP::swapFee\" */
      sstore
        /* \"src/ReservoirPair.sol\":7293:7635  function updateSwapFee() public {... */
      jump\t// out
        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */
    tag_170:
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      mload(0x40)
      shl(0xe5, 0x461bcd)
        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */
      dup2
      mstore
      0x20
      0x04
      dup3
      add
      mstore
      0x13
      0x24
      dup3
      add
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      mstore
        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */
      0x503a20494e56414c49445f535741505f46454500000000000000000000000000
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      0x44
      dup3
      add
        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */
      mstore
      0x64
      swap1
      revert
        /* \"src/ReservoirPair.sol\":7453:7485  if (_swapFee == swapFee) return; */
    tag_168:
        /* \"src/ReservoirPair.sol\":7478:7485  return; */
      pop
      pop
      jump\t// out
        /* \"src/ReservoirPair.sol\":7354:7443  customSwapFee != type(uint256).max ? customSwapFee : factory.get(swapFeeName).toUint256() */
    tag_165:
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      swap1
      pop
      0x01
      dup1
      0xa0
      shl
      sub
        /* \"src/ReservoirPair.sol\":7407:7414  factory */
      0xe0
        /* \"src/curve/stable/StablePair.sol\":1558:1571  \"SP::swapFee\" */
      mload
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      and
        /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */
      0x20
        /* \"src/ReservoirPair.sol\":7419:7430  swapFeeName */
      0x0180
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      mload
      0x24
      mload(0x40)
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      dup1
      swap5
      dup2
      swap4
      shl(0xe6, 0x023aa9ab)
        /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */
      dup4
      mstore
      0x04
      dup4
      add
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      mstore
        /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */
      gas
      staticcall
      swap2
      dup3
      iszero
      tag_172
      jumpi
      dup1
      swap3
      tag_174
      jumpi
        /* \"src/ReservoirPair.sol\":7354:7443  customSwapFee != type(uint256).max ? customSwapFee : factory.get(swapFeeName).toUint256() */
    tag_175:
      pop
      pop
      jump(tag_167)
        /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */
    tag_174:
      swap1
      swap2
      pop
      0x20
      dup3
      returndatasize
      dup3
      gt
      tag_176
      jumpi
    tag_177:
      dup2
      tag_178
      0x20
      swap4
      dup4
      tag_2
      jump\t// in
    tag_178:
      dup2
      add
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      sub
      slt
      tag_179
      jumpi
      pop
      mload
        /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */
      codesize
      dup1
      jump(tag_175)
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
    tag_179:
      dup1
      revert
        /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */
    tag_176:
      returndatasize
      swap2
      pop
      jump(tag_177)
    tag_172:
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      mload(0x40)
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      swap1
      returndatasize
      swap1
      dup3
      returndatacopy
      returndatasize
      swap1
      revert
        /* \"src/ReservoirPair.sol\":7641:8058  function updatePlatformFee() public {... */
    tag_10:
        /* \"src/ReservoirPair.sol\":7722:7739  customPlatformFee */
      0x0a
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      sload
      not(0x00)
        /* \"src/ReservoirPair.sol\":7722:7760  customPlatformFee != type(uint256).max */
      dup2
      eq
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      tag_181
      jumpi
        /* \"src/ReservoirPair.sol\":7722:7826  customPlatformFee != type(uint256).max ? customPlatformFee : factory.read(PLATFORM_FEE_NAME).toUint256() */
    tag_183:
        /* \"src/ReservoirPair.sol\":7856:7867  platformFee */
      0x09
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      sload
        /* \"src/ReservoirPair.sol\":7840:7867  _platformFee == platformFee */
      dup1
      dup3
      eq
        /* \"src/ReservoirPair.sol\":7836:7876  if (_platformFee == platformFee) return; */
      tag_168
      jumpi
        /* \"src/ReservoirPair.sol\":2789:2796  500_000 */
      0x07a120
        /* \"src/ReservoirPair.sol\":7894:7926  _platformFee <= MAX_PLATFORM_FEE */
      dup3
      gt
        /* \"src/ReservoirPair.sol\":2789:2796  500_000 */
      tag_186
      jumpi
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      0x40
        /* \"src/ReservoirPair.sol\":7970:8015  PlatformFeeChanged(platformFee, _platformFee) */
      0xc98a8b10b63c929f7799380bb4a0c444c713ebf74d8732f944c915034121aad1
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      swap2
      dup2
      mload
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      swap1
      dup2
      mstore
        /* \"src/ReservoirPair.sol\":2849:2855  20_000 */
      dup4
      0x20
      dup3
      add
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      mstore
        /* \"src/ReservoirPair.sol\":7970:8015  PlatformFeeChanged(platformFee, _platformFee) */
      log1
        /* \"src/ReservoirPair.sol\":7856:7867  platformFee */
      0x09
        /* \"src/curve/stable/StablePair.sol\":1558:1571  \"SP::swapFee\" */
      sstore
        /* \"src/ReservoirPair.sol\":7641:8058  function updatePlatformFee() public {... */
      jump\t// out
        /* \"src/ReservoirPair.sol\":2789:2796  500_000 */
    tag_186:
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      mload(0x40)
      shl(0xe5, 0x461bcd)
        /* \"src/ReservoirPair.sol\":2789:2796  500_000 */
      dup2
      mstore
      0x20
      0x04
      dup3
      add
      mstore
      0x17
      0x24
      dup3
      add
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      mstore
        /* \"src/ReservoirPair.sol\":2789:2796  500_000 */
      0x503a20494e56414c49445f504c4154464f524d5f464545000000000000000000
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      0x44
      dup3
      add
        /* \"src/ReservoirPair.sol\":2789:2796  500_000 */
      mstore
      0x64
      swap1
      revert
        /* \"src/ReservoirPair.sol\":7722:7826  customPlatformFee != type(uint256).max ? customPlatformFee : factory.read(PLATFORM_FEE_NAME).toUint256() */
    tag_181:
      pop
        /* \"src/ReservoirPair.sol\":7783:7790  factory */
      0xe0
        /* \"src/curve/stable/StablePair.sol\":1558:1571  \"SP::swapFee\" */
      mload
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      mload(0x40)
        /* \"src/ReservoirPair.sol\":7783:7814  factory.read(PLATFORM_FEE_NAME) */
      tag_188
      swap2
      sub(shl(0xa0, 0x01), 0x01)
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      and
      tag_189
      dup3
      tag_1
      jump\t// in
    tag_189:
      0x13
      dup3
      mstore
      0x5368617265643a3a706c6174666f726d46656500000000000000000000000000
      0x20
      dup4
      add
      mstore
        /* \"src/ReservoirPair.sol\":7783:7814  factory.read(PLATFORM_FEE_NAME) */
      tag_11
      jump\t// in
    tag_188:
        /* \"src/ReservoirPair.sol\":7722:7826  customPlatformFee != type(uint256).max ? customPlatformFee : factory.read(PLATFORM_FEE_NAME).toUint256() */
      jump(tag_183)
        /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */
    tag_11:
      swap1
        /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */
      0x20
        /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */
      swap1
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      mload(0x40)
        /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */
      tag_190
      dup2
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      tag_53
        /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */
      dup6
      dup3
      add
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      dup1
      swap6
      tag_4
      jump\t// in
        /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */
    tag_190:
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      mload
        /* \"src/libraries/FactoryStore.sol\":476:509  keccak256(abi.encodePacked(aKey)) */
      swap1
      keccak256
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      mload(0x40)
      shl(0xe6, 0x023aa9ab)
        /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */
      dup2
      mstore
      0x04
      dup2
      add
        /* \"src/libraries/Constants.sol\":202:277  bytes32(0x5d4723f8357898676d8853de8db6fef4428d5e86974703f3d729630d4f86df79) */
      swap2
      swap1
      swap2
      mstore
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      swap2
      dup3
      swap1
      0x24
      swap1
      dup3
      swap1
      sub(shl(0xa0, 0x01), 0x01)
      and
        /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */
      gas
      staticcall
      swap1
      dup2
      iszero
      tag_80
      jumpi
      0x00
      swap2
      tag_194
      jumpi
        /* \"src/libraries/FactoryStore.sol\":456:510  return aFactory.get(keccak256(abi.encodePacked(aKey))) */
      pop
        /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */
      swap1
      jump\t// out
        /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */
    tag_194:
      swap1
        /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */
      0x20
        /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */
      dup3
      returndatasize
      dup3
      gt
      tag_196
      jumpi
    tag_197:
      dup2
      tag_198
        /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */
      0x20
        /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */
      swap4
      dup4
      tag_2
      jump\t// in
    tag_198:
      dup2
      add
        /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
      sub
      slt
      tag_179
      jumpi
      pop
      mload
        /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */
      swap1
      jump\t// out
        /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */
    tag_196:
      returndatasize
      swap2
      pop
      jump(tag_197)
    stop
    data_510e4e770828ddbf7f7b00ab00a9f6adaf81c0dc9cc85f1f8249c256942d61d9 290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563

    sub_0: assembly {
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x80
          0x40
          swap1
          dup1
          dup3
          mstore
          0x04
          swap2
          dup3
          calldatasize
          lt
          iszero
          tag_62
          jumpi
          0x00
          dup1
          revert
        tag_62:
          0x00
          swap3
          dup4
          calldataload
          0xe0
          shr
          swap3
          dup4
          0x06fdde03
          eq
          tag_64
          jumpi
          pop
          dup3
          0x0902f1ac
          eq
          tag_66
          jumpi
          dup3
          0x095ea7b3
          eq
          tag_68
          jumpi
          dup3
          0x0c472afd
          eq
          tag_70
          jumpi
          dup3
          0x0dfe1681
          eq
          tag_72
          jumpi
          dup3
          0x18160ddd
          eq
          tag_74
          jumpi
          dup3
          0x23b872dd
          eq
          tag_76
          jumpi
          dup3
          0x26232a2e
          eq
          tag_78
          jumpi
          dup3
          0x28d98c95
          eq
          tag_80
          jumpi
          dup3
          0x313ce567
          eq
          tag_82
          jumpi
          dup3
          0x31c49074
          eq
          tag_84
          jumpi
          dup3
          0x3644e515
          eq
          tag_86
          jumpi
          dup3
          0x3998a681
          eq
          tag_88
          jumpi
          dup3
          0x44915136
          eq
          tag_90
          jumpi
          dup3
          0x495bc0fb
          eq
          tag_92
          jumpi
          dup3
          0x4dfa1ff9
          eq
          tag_94
          jumpi
          dup3
          0x54cf2aeb
          eq
          tag_96
          jumpi
          dup3
          0x598362f0
          eq
          tag_98
          jumpi
          dup3
          0x6a627842
          eq
          tag_110
          jumpi
            /* \"src/curve/stable/StablePair.sol\":4828:5223  assembly (\"memory-safe\") {... */
          dup3
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x70a08231
            /* \"src/curve/stable/StablePair.sol\":4828:5223  assembly (\"memory-safe\") {... */
          eq
          tag_102
          jumpi
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup3
          0x7c3cbc7c
          eq
          tag_104
          jumpi
          dup3
          0x7ecebe00
          eq
          tag_106
          jumpi
          dup3
          0x85faf624
          eq
          tag_108
          jumpi
          dup3
          0x89afcb44
          eq
          tag_110
          jumpi
            /* \"src/curve/stable/StablePair.sol\":5531:5926  assembly (\"memory-safe\") {... */
          dup3
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x94217ad1
            /* \"src/curve/stable/StablePair.sol\":5531:5926  assembly (\"memory-safe\") {... */
          eq
          tag_112
          jumpi
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup3
          0x9568e73b
          eq
          tag_114
          jumpi
          dup3
          0x95d89b41
          eq
          tag_116
          jumpi
          dup3
          0x97e37764
          eq
          tag_118
          jumpi
          dup3
          0x9be65a60
          eq
          tag_120
          jumpi
          dup3
          0x9d62a694
          eq
          tag_122
          jumpi
          dup3
          0x9f2b37fb
          eq
          tag_124
          jumpi
          dup3
          0xa9059cbb
          eq
          tag_126
          jumpi
          dup3
          0xab3d8544
          eq
          tag_128
          jumpi
          dup3
          0xad7853e9
          eq
          tag_130
          jumpi
          dup3
          0xafb4a43b
          eq
          tag_132
          jumpi
          dup3
          0xb62221e0
          eq
          tag_134
          jumpi
          dup3
          0xba9a7a56
          eq
          tag_136
          jumpi
          dup3
          0xbc25cf77
          eq
          tag_138
          jumpi
          dup3
          0xc45a0155
          eq
          tag_140
          jumpi
          dup3
          0xc4db7fa0
          eq
          tag_142
          jumpi
          dup3
          0xc58771ef
          eq
          tag_144
          jumpi
          dup3
          0xd0ebdbe7
          eq
          tag_146
          jumpi
          dup3
          0xd21220a7
          eq
          tag_148
          jumpi
          dup3
          0xd505accf
          eq
          tag_150
          jumpi
          dup3
          0xdb6488dc
          eq
          tag_152
          jumpi
          dup3
          0xdbc781bc
          eq
          tag_154
          jumpi
          dup3
          0xdd62ed3e
          eq
          tag_156
          jumpi
          dup3
          0xe12bd9d8
          eq
          tag_158
          jumpi
          pop
          dup2
          0xe9bdf7b8
          eq
          tag_160
          jumpi
          pop
          0xfff6cae9
          eq
          tag_162
          jumpi
          0x00
          dup1
          revert
        tag_162:
          jumpi(tag_166, callvalue)
          dup1
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_166
          jumpi
            /* \"src/ReservoirPair.sol\":6307:6326  lBlockTimestampLast */
          tag_168
            /* \"src/ReservoirPair.sol\":6191:6225  _syncManaged(lReserve0, lReserve1) */
          tag_169
            /* \"src/ReservoirPair.sol\":6142:6156  _lockAndLoad() */
          tag_170
          tag_14
          jump\t// in
        tag_170:
          pop
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap3
          swap2
          0xffffffffffffffffffffffffff
          swap2
          dup3
          and
          swap2
          and
            /* \"src/ReservoirPair.sol\":6191:6225  _syncManaged(lReserve0, lReserve1) */
          tag_28
          jump\t// in
        tag_169:
            /* \"src/ReservoirPair.sol\":6253:6267  _totalToken0() */
          swap1
          tag_171
          tag_25
          jump\t// in
        tag_171:
            /* \"src/ReservoirPair.sol\":6269:6283  _totalToken1() */
          tag_172
          tag_26
          jump\t// in
        tag_172:
            /* \"src/ReservoirPair.sol\":6307:6326  lBlockTimestampLast */
          swap1
          tag_23
          jump\t// in
        tag_168:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup1
          return
        tag_166:
          dup1
          revert
        tag_160:
          swap1
          pop
          jumpi(tag_175, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_175
          jumpi
          0x20
          swap1
          0xffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":12800:12828  uint104 public token0Managed */
          0x0c
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
          and
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_175:
          pop
          dup1
          revert
        tag_158:
          dup4
          dup3
          jumpi(tag_175, callvalue)
          jumpi(tag_175, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x80))
          0x24
          swap3
          dup4
          calldataload
          dup2
          calldataload
          dup2
          iszero
          iszero
          dup3
          sub
          tag_187
          jumpi
          calldataload(0x44)
          swap5
          0xffffffffffffffffffffffffffffffffffffffff
          swap3
          dup4
          dup8
          and
          swap5
          dup6
          dup9
          sub
          tag_183
          jumpi
          calldataload(0x64)
          swap9
          0xffffffffffffffff
          swap2
          dup3
          dup12
          gt
          tag_187
          jumpi
          calldatasize
          0x23
          dup13
          add
          slt
          iszero
          tag_187
          jumpi
          dup11
          dup2
          add
          calldataload
          swap11
          dup4
          dup13
          gt
          tag_191
          jumpi
          calldatasize
          dup4
          dup14
          dup4
          add
          add
          gt
          tag_191
          jumpi
            /* \"src/curve/stable/StablePair.sol\":6173:6187  _lockAndLoad() */
          tag_193
          tag_14
          jump\t// in
        tag_193:
          pop
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap14
          0xffffffffffffffffffffffffff
          swap3
          dup4
          and
          swap14
          swap2
          swap1
          swap3
          and
          swap7
            /* \"src/curve/stable/StablePair.sol\":6205:6217  aAmount != 0 */
          dup10
          iszero
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          tag_194
          jumpi
            /* \"src/curve/stable/StablePair.sol\":6247:6264  uint256 lAmountIn */
          dup14
          swap7
          swap6
          swap5
          swap4
          swap3
          swap2
          swap1
            /* \"src/curve/stable/StablePair.sol\":6320:7593  if (aInOrOut) {... */
          iszero
          tag_196
          jumpi
            /* \"src/curve/stable/StablePair.sol\":6412:6423  aAmount > 0 */
          dup9
          dup11
          sgt
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          iszero
          tag_198
          jumpi
            /* \"src/curve/stable/StablePair.sol\":6455:6461  token1 */
          dup8
          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")
            /* \"src/curve/stable/StablePair.sol\":6479:6507  lAmountIn = uint256(aAmount) */
          swap7
          dup12
            /* \"src/curve/stable/StablePair.sol\":8826:8833  swapFee */
          0x07
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
            /* \"src/curve/stable/StablePair.sol\":11113:11134  _getCurrentAPrecise() */
          swap2
          tag_200
          tag_47
          jump\t// in
        tag_200:
            /* \"src/curve/stable/StablePair.sol\":11109:11134  2 * _getCurrentAPrecise() */
          tag_201
          swap1
          tag_39
          jump\t// in
        tag_201:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
          swap2
          0xffffffffffffffffffffffffffffffff
            /* \"src/curve/stable/StablePair.sol\":8725:8750  token0PrecisionMultiplier */
          swap3
          dup4
          immutable(\"0x372e991e4284f7d12d6b2461cce9899511b05ac053845de253542adb96f2dca0\")
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
            /* \"src/curve/stable/StablePair.sol\":8764:8789  token1PrecisionMultiplier */
          swap4
          immutable(\"0xc4ba931b733b92a51f51c0955dd7716c7a38f3de911d23a5d0fbd5d23c0fbe8c\")
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
          swap4
          dup1
          dup14
          mul
          swap1
          dup6
          dup8
          mul
            /* \"src/libraries/StableMath.sol\":1632:1710  _computeLiquidityFromAdjustedBalances(adjustedReserve0, adjustedReserve1, N_A) */
          swap5
          tag_202
          dup5
          dup8
          dup6
          tag_58
          jump\t// in
        tag_202:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap5
          dup2
          mul
            /* \"src/ReservoirPair.sol\":2723:2732  1_000_000 */
          0x0f4240
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap1
          div
            /* \"src/libraries/StableMath.sol\":991:1000  1_000_000 */
          swap1
          sub
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mul
          add
            /* \"src/libraries/StableMath.sol\":1867:1883  _getY(x, d, N_A) */
          swap2
          tag_203
          swap3
          tag_60
          jump\t// in
        tag_203:
            /* \"src/libraries/StableMath.sol\":991:1000  1_000_000 */
          swap1
          sub
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
          add
            /* \"src/libraries/StableMath.sol\":1948:1979  dy /= token1PrecisionMultiplier */
          swap1
          tag_204
          swap2
          tag_42
          jump\t// in
        tag_204:
            /* \"src/curve/stable/StablePair.sol\":6408:6865  if (aAmount > 0) {... */
          swap15
          dup16
            /* \"src/curve/stable/StablePair.sol\":7659:7668  lReserve1 */
          tag_205
            /* \"src/curve/stable/StablePair.sol\":6408:6865  if (aAmount > 0) {... */
          swap4
        tag_206:
            /* \"src/curve/stable/StablePair.sol\":7659:7668  lReserve1 */
          dup10
          tag_21
          jump\t// in
        tag_205:
            /* \"src/curve/stable/StablePair.sol\":7684:7700  aData.length > 0 */
          dup1
            /* \"src/curve/stable/StablePair.sol\":7680:7985  if (aData.length > 0) {... */
          tag_208
          jumpi
            /* \"src/curve/stable/StablePair.sol\":6320:7593  if (aInOrOut) {... */
        tag_209:
            /* \"src/curve/stable/StablePair.sol\":8015:8029  _totalToken0() */
          pop
          pop
          tag_210
          tag_25
          jump\t// in
        tag_210:
            /* \"src/curve/stable/StablePair.sol\":8059:8073  _totalToken1() */
          swap2
          dup9
          tag_211
          tag_26
          jump\t// in
        tag_211:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap5
          and
          swap7
          pop
            /* \"src/curve/stable/StablePair.sol\":8117:8123  token0 */
          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup10
          and
            /* \"src/curve/stable/StablePair.sol\":8104:8123  lTokenOut == token0 */
          dup8
          sub
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          tag_212
          jumpi
            /* \"src/curve/stable/StablePair.sol\":8126:8147  lBalance1 - lReserve1 */
          tag_214
          dup7
          dup6
          tag_11
          jump\t// in
        tag_214:
            /* \"src/curve/stable/StablePair.sol\":8104:8171  lTokenOut == token0 ? lBalance1 - lReserve1 : lBalance0 - lReserve0 */
          swap8
        tag_215:
            /* \"src/curve/stable/StablePair.sol\":8189:8211  lReceived >= lAmountIn */
          dup9
          lt
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          tag_216
          jumpi
            /* \"src/curve/stable/StablePair.sol\":8253:8352  _updateAndUnlock(lBalance0, lBalance1, uint104(lReserve0), uint104(lReserve1), lBlockTimestampLast) */
          pop
          pop
          swap2
          tag_218
          swap4
          swap2
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x20
            /* \"src/curve/stable/StablePair.sol\":8253:8352  _updateAndUnlock(lBalance0, lBalance1, uint104(lReserve0), uint104(lReserve1), lBlockTimestampLast) */
          swap12
          swap4
          tag_23
          jump\t// in
        tag_218:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup5
          mload
            /* \"src/curve/stable/StablePair.sol\":8397:8403  token1 */
          swap3
          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
            /* \"src/curve/stable/StablePair.sol\":8384:8403  lTokenOut == token1 */
          eq
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup3
          mstore
          dup6
          dup3
          add
          mstore
          dup4
          dup4
          dup3
          add
          mstore
            /* \"src/curve/stable/StablePair.sol\":8367:8432  Swap(msg.sender, lTokenOut == token1, lReceived, rAmountOut, aTo) */
          0x66251e495e6e69e208ab08e2bc259dbe2ef482a8c4a93b8984b03a1eb27e1b9e
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x60
            /* \"src/curve/stable/StablePair.sol\":8372:8382  msg.sender */
          caller
            /* \"src/curve/stable/StablePair.sol\":8367:8432  Swap(msg.sender, lTokenOut == token1, lReceived, rAmountOut, aTo) */
          swap3
          log3
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mload
          swap1
          dup2
          mstore
          return
        tag_216:
          swap1
          0x1a
          0x64
          swap3
          0x20
          dup14
          mload
          swap4
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup6
          mstore
          dup5
          add
          mstore
          dup3
          add
          mstore
          0x53503a20494e53554646494349454e545f414d4f554e545f494e000000000000
          0x44
          dup3
          add
          mstore
          revert
            /* \"src/curve/stable/StablePair.sol\":8104:8171  lTokenOut == token0 ? lBalance1 - lReserve1 : lBalance0 - lReserve0 */
        tag_212:
            /* \"src/curve/stable/StablePair.sol\":8150:8171  lBalance0 - lReserve0 */
          tag_219
          dup6
          dup5
          tag_11
          jump\t// in
        tag_219:
            /* \"src/curve/stable/StablePair.sol\":8104:8171  lTokenOut == token0 ? lBalance1 - lReserve1 : lBalance0 - lReserve0 */
          swap8
          jump(tag_215)
            /* \"src/curve/stable/StablePair.sol\":7680:7985  if (aData.length > 0) {... */
        tag_208:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup5
          dup11
          and
            /* \"src/curve/stable/StablePair.sol\":7810:7816  token0 */
          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup12
          and
            /* \"src/curve/stable/StablePair.sol\":7797:7816  lTokenOut == token0 */
          dup2
          sub
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          tag_220
          jumpi
            /* \"src/curve/stable/StablePair.sol\":7797:7858  lTokenOut == token0 ? int256(rAmountOut) : -int256(lAmountIn) */
          dup14
          swap1
        tag_222:
            /* \"src/curve/stable/StablePair.sol\":7889:7895  token1 */
          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup13
          and
            /* \"src/curve/stable/StablePair.sol\":7876:7895  lTokenOut == token1 */
          sub
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          tag_223
          jumpi
            /* \"src/curve/stable/StablePair.sol\":7876:7937  lTokenOut == token1 ? int256(rAmountOut) : -int256(lAmountIn) */
          dup14
          swap2
        tag_225:
            /* \"src/curve/stable/StablePair.sol\":7716:7974  IReservoirCallee(aTo).reservoirCall(... */
          dup13
          extcodesize
          iszero
          tag_226
          jumpi
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup10
          swap3
          swap2
          dup4
          dup16
          dup16
          swap4
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
          0x1f
          dup3
          dup12
          swap4
          dup14
          0xa4
          swap7
          mload
            /* \"src/curve/stable/StablePair.sol\":7716:7974  IReservoirCallee(aTo).reservoirCall(... */
          swap13
          dup14
          swap12
          dup13
          swap11
          dup12
          swap9
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x4fc7c21700000000000000000000000000000000000000000000000000000000
            /* \"src/curve/stable/StablePair.sol\":7716:7974  IReservoirCallee(aTo).reservoirCall(... */
          dup11
          mstore
            /* \"src/curve/stable/StablePair.sol\":7769:7779  msg.sender */
          caller
            /* \"src/curve/stable/StablePair.sol\":7716:7974  IReservoirCallee(aTo).reservoirCall(... */
          swap1
          dup11
          add
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mstore
          dup4
          dup10
          add
          mstore
          0x44
          dup9
          add
          mstore
          0x80
          0x64
          dup9
          add
          mstore
          dup3
          0x84
          dup9
          add
          mstore
          add
          dup7
          dup7
          add
          calldatacopy
          dup6
          dup6
          dup3
          dup7
          add
          add
          mstore
          add
          and
          dup2
          add
            /* \"src/curve/stable/StablePair.sol\":7716:7974  IReservoirCallee(aTo).reservoirCall(... */
          sub
          add
          swap3
          gas
          call
          dup1
          iszero
          tag_228
          jumpi
          tag_230
          jumpi
            /* \"src/curve/stable/StablePair.sol\":7876:7937  lTokenOut == token1 ? int256(rAmountOut) : -int256(lAmountIn) */
        tag_231:
            /* \"src/curve/stable/StablePair.sol\":7680:7985  if (aData.length > 0) {... */
          dup1
          jump(tag_209)
            /* \"src/curve/stable/StablePair.sol\":7716:7974  IReservoirCallee(aTo).reservoirCall(... */
        tag_230:
          tag_232
          swap1
          tag_3
          jump\t// in
        tag_232:
          dup13
          jump(tag_231)
        tag_228:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup12
          mload
          returndatasize
          dup10
          dup3
          returndatacopy
          returndatasize
          swap1
          revert
            /* \"src/curve/stable/StablePair.sol\":7716:7974  IReservoirCallee(aTo).reservoirCall(... */
        tag_226:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup10
          dup1
          revert
            /* \"src/curve/stable/StablePair.sol\":7876:7937  lTokenOut == token1 ? int256(rAmountOut) : -int256(lAmountIn) */
        tag_223:
            /* \"src/curve/stable/StablePair.sol\":7919:7937  -int256(lAmountIn) */
          tag_233
          dup11
          tag_32
          jump\t// in
        tag_233:
            /* \"src/curve/stable/StablePair.sol\":7876:7937  lTokenOut == token1 ? int256(rAmountOut) : -int256(lAmountIn) */
          swap2
          jump(tag_225)
            /* \"src/curve/stable/StablePair.sol\":7797:7858  lTokenOut == token0 ? int256(rAmountOut) : -int256(lAmountIn) */
        tag_220:
            /* \"src/curve/stable/StablePair.sol\":7840:7858  -int256(lAmountIn) */
          tag_234
          dup11
          tag_32
          jump\t// in
        tag_234:
            /* \"src/curve/stable/StablePair.sol\":7797:7858  lTokenOut == token0 ? int256(rAmountOut) : -int256(lAmountIn) */
          swap1
          jump(tag_222)
            /* \"src/curve/stable/StablePair.sol\":6408:6865  if (aAmount > 0) {... */
        tag_198:
            /* \"src/curve/stable/StablePair.sol\":6713:6719  token0 */
          dup8
          swap10
          swap6
          swap10
          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")
            /* \"src/curve/stable/StablePair.sol\":6757:6765  -aAmount */
          swap7
          tag_235
          swap1
          tag_32
          jump\t// in
        tag_235:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap11
          dup12
            /* \"src/curve/stable/StablePair.sol\":8826:8833  swapFee */
          0x07
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
            /* \"src/curve/stable/StablePair.sol\":11113:11134  _getCurrentAPrecise() */
          swap2
          tag_236
          tag_47
          jump\t// in
        tag_236:
            /* \"src/curve/stable/StablePair.sol\":11109:11134  2 * _getCurrentAPrecise() */
          tag_237
          swap1
          tag_39
          jump\t// in
        tag_237:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
          swap2
          0xffffffffffffffffffffffffffffffff
            /* \"src/curve/stable/StablePair.sol\":8725:8750  token0PrecisionMultiplier */
          swap3
          dup4
          immutable(\"0x372e991e4284f7d12d6b2461cce9899511b05ac053845de253542adb96f2dca0\")
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
            /* \"src/curve/stable/StablePair.sol\":8764:8789  token1PrecisionMultiplier */
          swap4
          immutable(\"0xc4ba931b733b92a51f51c0955dd7716c7a38f3de911d23a5d0fbd5d23c0fbe8c\")
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
          swap3
          dup5
          dup14
          mul
          swap4
          dup1
          dup8
          mul
            /* \"src/libraries/StableMath.sol\":1632:1710  _computeLiquidityFromAdjustedBalances(adjustedReserve0, adjustedReserve1, N_A) */
          swap2
          tag_238
          dup5
          dup5
          dup9
          tag_58
          jump\t// in
        tag_238:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap5
          dup2
          mul
            /* \"src/ReservoirPair.sol\":2723:2732  1_000_000 */
          0x0f4240
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap1
          div
            /* \"src/libraries/StableMath.sol\":991:1000  1_000_000 */
          swap1
          sub
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mul
          add
            /* \"src/libraries/StableMath.sol\":2128:2144  _getY(x, d, N_A) */
          swap2
          tag_239
          swap3
          tag_60
          jump\t// in
        tag_239:
            /* \"src/libraries/StableMath.sol\":991:1000  1_000_000 */
          swap1
          sub
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
          add
            /* \"src/libraries/StableMath.sol\":2209:2240  dy /= token0PrecisionMultiplier */
          swap1
          tag_240
          swap2
          tag_42
          jump\t// in
        tag_240:
            /* \"src/curve/stable/StablePair.sol\":6408:6865  if (aAmount > 0) {... */
          swap15
          dup16
            /* \"src/curve/stable/StablePair.sol\":7659:7668  lReserve1 */
          tag_205
            /* \"src/curve/stable/StablePair.sol\":6408:6865  if (aAmount > 0) {... */
          swap4
          jump(tag_206)
            /* \"src/curve/stable/StablePair.sol\":6320:7593  if (aInOrOut) {... */
        tag_196:
            /* \"src/curve/stable/StablePair.sol\":6988:6999  aAmount > 0 */
          dup9
          dup11
          swap7
          swap11
          sgt
            /* \"src/curve/stable/StablePair.sol\":6984:7583  if (aAmount > 0) {... */
          0x00
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          eq
          tag_241
          jumpi
            /* \"src/curve/stable/StablePair.sol\":7019:7048  rAmountOut = uint256(aAmount) */
          dup8
          dup7
            /* \"src/curve/stable/StablePair.sol\":7074:7096  rAmountOut < lReserve0 */
          swap15
          dup16
          swap12
          dup2
          dup10
          lt
            /* \"src/curve/stable/StablePair.sol\":7066:7119  require(rAmountOut < lReserve0, \"SP: NOT_ENOUGH_LIQ\") */
          tag_243
          swap1
          tag_44
          jump\t// in
        tag_243:
            /* \"src/curve/stable/StablePair.sol\":7149:7155  token0 */
          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap9
            /* \"src/curve/stable/StablePair.sol\":9261:9268  swapFee */
          0x07
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
            /* \"src/curve/stable/StablePair.sol\":11113:11134  _getCurrentAPrecise() */
          swap2
          tag_244
          tag_47
          jump\t// in
        tag_244:
            /* \"src/curve/stable/StablePair.sol\":11109:11134  2 * _getCurrentAPrecise() */
          tag_245
          swap1
          tag_39
          jump\t// in
        tag_245:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
          swap1
          0xffffffffffffffffffffffffffffffff
            /* \"src/curve/stable/StablePair.sol\":9159:9184  token0PrecisionMultiplier */
          swap1
          dup2
          immutable(\"0x372e991e4284f7d12d6b2461cce9899511b05ac053845de253542adb96f2dca0\")
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
            /* \"src/curve/stable/StablePair.sol\":9198:9223  token1PrecisionMultiplier */
          swap2
          immutable(\"0xc4ba931b733b92a51f51c0955dd7716c7a38f3de911d23a5d0fbd5d23c0fbe8c\")
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
          swap3
          dup3
          dup7
          mul
          dup5
          dup9
          mul
            /* \"src/libraries/StableMath.sol\":2818:2896  _computeLiquidityFromAdjustedBalances(adjustedReserve0, adjustedReserve1, N_A) */
          swap4
          tag_246
          dup4
          dup7
          dup5
          tag_58
          jump\t// in
        tag_246:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap4
          mul
            /* \"src/libraries/StableMath.sol\":991:1000  1_000_000 */
          swap1
          sub
            /* \"src/libraries/StableMath.sol\":3042:3058  _getY(y, d, N_A) */
          swap2
          tag_247
          swap3
          tag_60
          jump\t// in
        tag_247:
            /* \"src/libraries/StableMath.sol\":991:1000  1_000_000 */
          sub
            /* \"src/curve/stable/StablePair.sol\":7232:7236  true */
          0x01
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          add
            /* \"src/libraries/StableMath.sol\":3123:3154  dx /= token1PrecisionMultiplier */
          swap1
          tag_248
          swap2
          tag_42
          jump\t// in
        tag_248:
            /* \"src/ReservoirPair.sol\":2723:2732  1_000_000 */
          0x0f4240
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap2
          dup3
          add
          mul
          div
            /* \"src/curve/stable/StablePair.sol\":6984:7583  if (aAmount > 0) {... */
          swap12
            /* \"src/curve/stable/StablePair.sol\":7659:7668  lReserve1 */
          tag_205
            /* \"src/curve/stable/StablePair.sol\":6984:7583  if (aAmount > 0) {... */
          swap4
            /* \"src/curve/stable/StablePair.sol\":6320:7593  if (aInOrOut) {... */
          jump(tag_206)
            /* \"src/curve/stable/StablePair.sol\":6984:7583  if (aAmount > 0) {... */
        tag_241:
            /* \"src/curve/stable/StablePair.sol\":7369:7377  -aAmount */
          swap9
          swap5
          dup8
          tag_250
            /* \"src/curve/stable/StablePair.sol\":7659:7668  lReserve1 */
          tag_205
            /* \"src/curve/stable/StablePair.sol\":7369:7377  -aAmount */
          swap3
          tag_32
          jump\t// in
        tag_250:
            /* \"src/curve/stable/StablePair.sol\":7404:7426  rAmountOut < lReserve1 */
          swap15
          dup16
            /* \"src/curve/stable/StablePair.sol\":7396:7449  require(rAmountOut < lReserve1, \"SP: NOT_ENOUGH_LIQ\") */
          tag_251
            /* \"src/curve/stable/StablePair.sol\":7404:7426  rAmountOut < lReserve1 */
          dup4
          dup3
          lt
            /* \"src/curve/stable/StablePair.sol\":7396:7449  require(rAmountOut < lReserve1, \"SP: NOT_ENOUGH_LIQ\") */
          tag_44
          jump\t// in
        tag_251:
            /* \"src/curve/stable/StablePair.sol\":7479:7485  token1 */
          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap9
            /* \"src/libraries/StableMath.sol\":3372:3403  dx /= token0PrecisionMultiplier */
          tag_252
            /* \"src/curve/stable/StablePair.sol\":9261:9268  swapFee */
          0x07
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
            /* \"src/curve/stable/StablePair.sol\":11113:11134  _getCurrentAPrecise() */
          swap2
            /* \"src/curve/stable/StablePair.sol\":11109:11134  2 * _getCurrentAPrecise() */
          tag_253
            /* \"src/curve/stable/StablePair.sol\":11113:11134  _getCurrentAPrecise() */
          tag_254
          tag_47
          jump\t// in
        tag_254:
            /* \"src/curve/stable/StablePair.sol\":11109:11134  2 * _getCurrentAPrecise() */
          tag_39
          jump\t// in
        tag_253:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
            /* \"src/libraries/StableMath.sol\":3353:3354  1 */
          0x01
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffff
            /* \"src/curve/stable/StablePair.sol\":9159:9184  token0PrecisionMultiplier */
          swap2
            /* \"src/libraries/StableMath.sol\":3291:3307  _getY(y, d, N_A) */
          tag_255
            /* \"src/curve/stable/StablePair.sol\":9159:9184  token0PrecisionMultiplier */
          dup4
          immutable(\"0x372e991e4284f7d12d6b2461cce9899511b05ac053845de253542adb96f2dca0\")
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
            /* \"src/curve/stable/StablePair.sol\":9198:9223  token1PrecisionMultiplier */
          swap4
          immutable(\"0xc4ba931b733b92a51f51c0955dd7716c7a38f3de911d23a5d0fbd5d23c0fbe8c\")
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
          swap2
          dup5
          dup10
          mul
          swap3
          dup1
          dup12
          mul
            /* \"src/libraries/StableMath.sol\":2818:2896  _computeLiquidityFromAdjustedBalances(adjustedReserve0, adjustedReserve1, N_A) */
          tag_256
          dup4
          dup3
          dup8
          tag_58
          jump\t// in
        tag_256:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap2
          dup11
          mul
            /* \"src/libraries/StableMath.sol\":991:1000  1_000_000 */
          swap1
          sub
            /* \"src/libraries/StableMath.sol\":3291:3307  _getY(y, d, N_A) */
          tag_60
          jump\t// in
        tag_255:
            /* \"src/libraries/StableMath.sol\":991:1000  1_000_000 */
          sub
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          add
            /* \"src/libraries/StableMath.sol\":3372:3403  dx /= token0PrecisionMultiplier */
          tag_42
          jump\t// in
        tag_252:
            /* \"src/ReservoirPair.sol\":2723:2732  1_000_000 */
          0x0f4240
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap2
          dup3
          add
          mul
          div
            /* \"src/curve/stable/StablePair.sol\":6984:7583  if (aAmount > 0) {... */
          swap13
            /* \"src/curve/stable/StablePair.sol\":6320:7593  if (aInOrOut) {... */
          jump(tag_206)
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
        tag_194:
          dup13
          mload
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
          0x20
          dup2
          dup8
          add
          mstore
          0x0f
          dup2
          dup9
          add
          mstore
          0x53503a20414d4f554e545f5a45524f0000000000000000000000000000000000
          0x44
          dup3
          add
          mstore
          0x64
          swap1
          revert
        tag_191:
          dup6
          dup1
          revert
        tag_187:
          dup5
          dup1
          revert
        tag_183:
          dup3
          dup1
          revert
        tag_156:
          swap1
          swap2
          pop
          jumpi(tag_183, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_183
          jumpi
          0x20
          swap3
          dup3
          swap2
          tag_261
          tag_8
          jump\t// in
        tag_261:
          tag_262
          tag_9
          jump\t// in
        tag_262:
          swap2
          0xffffffffffffffffffffffffffffffffffffffff
          dup1
          swap3
          and
          dup5
          mstore
          dup7
          mstore
          dup4
          dup4
          keccak256
          swap2
          and
          dup3
          mstore
          dup5
          mstore
          keccak256
          sload
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_154:
          dup4
          jumpi(tag_166, callvalue)
          dup1
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_166
          jumpi
          tag_168
          tag_18
          jump\t// in
        tag_152:
          dup4
          dup3
          jumpi(tag_175, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_175
          jumpi
          0x20
          swap1
          mload
            /* \"src/ReservoirPair.sol\":2723:2732  1_000_000 */
          0x0f4240
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup2
          mstore
          return
        tag_150:
          dup4
          dup3
          jumpi(tag_175, callvalue)
          jumpi(tag_175, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0xe0))
          tag_276
          tag_8
          jump\t// in
        tag_276:
          tag_277
          tag_9
          jump\t// in
        tag_277:
          calldataload(0x44)
          calldataload(0x64)
          swap4
          calldataload(0x84)
          swap4
          0xff
          dup6
          and
          dup1
          swap6
          sub
          tag_278
          jumpi
            /* \"lib/solmate/src/tokens/ERC20.sol\":4057:4072  block.timestamp */
          timestamp
            /* \"lib/solmate/src/tokens/ERC20.sol\":4045:4072  deadline >= block.timestamp */
          dup7
          lt
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          tag_280
          jumpi
            /* \"lib/solmate/src/tokens/ERC20.sol\":4428:4446  DOMAIN_SEPARATOR() */
          tag_282
          tag_12
          jump\t// in
        tag_282:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap5
          0xffffffffffffffffffffffffffffffffffffffff
          dup1
          swap3
          and
          swap6
          dup7
          dup10
          mstore
          0x20
          swap6
            /* \"lib/solmate/src/tokens/ERC20.sol\":4873:4879  nonces */
          0x05
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup8
          mstore
          dup5
          dup11
          keccak256
          swap9
          dup10
          sload
          swap10
          0x01
          dup12
          add
          swap1
          sstore
          dup6
          mload
            /* \"lib/solmate/src/tokens/ERC20.sol\":4511:4960  abi.encode(... */
          swap1
          dup6
          dup10
          dup4
          add
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap4
            /* \"lib/solmate/src/tokens/ERC20.sol\":4555:4720  keccak256(... */
          0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup6
          mstore
          dup12
          dup10
          dup6
          add
          mstore
          and
          swap11
          dup12
          0x60
          dup5
          add
          mstore
          dup9
          0x80
          dup5
          add
          mstore
          0xa0
          dup4
          add
          mstore
          0xc0
          dup3
          add
          mstore
          0xc0
            /* \"lib/solmate/src/tokens/ERC20.sol\":4511:4960  abi.encode(... */
          dup2
          mstore
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0xe0
          dup2
          add
          swap2
          dup2
          dup4
          lt
          0xffffffffffffffff
          dup5
          gt
          or
          tag_283
          jumpi
          swap3
          dup3
          dup10
          swap6
          swap3
          0x0122
          dup15
          swap7
          0x80
          swap7
          dup12
          mstore
          dup3
          mload
            /* \"lib/solmate/src/tokens/ERC20.sol\":4472:4986  keccak256(... */
          swap1
          keccak256
            /* \"lib/solmate/src/tokens/ERC20.sol\":4350:5008  abi.encodePacked(... */
          swap2
          0x0100
          dup2
          add
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap5
          0x1901000000000000000000000000000000000000000000000000000000000000
          dup7
          mstore
          0x0102
          dup3
          add
          mstore
          add
          mstore
          0x42
            /* \"lib/solmate/src/tokens/ERC20.sol\":4350:5008  abi.encodePacked(... */
          dup2
          mstore
          tag_285
          dup2
          tag_2
          jump\t// in
        tag_285:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mload
            /* \"lib/solmate/src/tokens/ERC20.sol\":4319:5026  keccak256(... */
          swap1
          keccak256
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap1
          dup7
          mload
          swap2
          dup3
          mstore
          dup5
          dup3
          add
          mstore
          calldataload(0xa4)
          dup7
          dup3
          add
          mstore
          calldataload(0xc4)
          0x60
          dup3
          add
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":4292:5097  ecrecover(... */
          dup3
          dup1
          mstore
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x01
            /* \"lib/solmate/src/tokens/ERC20.sol\":4292:5097  ecrecover(... */
          gas
          staticcall
          iszero
          tag_286
          jumpi
          dup7
          mload
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
            /* \"lib/solmate/src/tokens/ERC20.sol\":5120:5150  recoveredAddress != address(0) */
          swap7
          dup8
          iszero
          iszero
            /* \"lib/solmate/src/tokens/ERC20.sol\":5120:5179  recoveredAddress != address(0) && recoveredAddress == owner */
          dup1
          tag_288
          jumpi
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
        tag_289:
          iszero
          tag_290
          jumpi
          dup7
          swap8
            /* \"lib/solmate/src/tokens/ERC20.sol\":5283:5314  Approval(owner, spender, value) */
          0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap6
          swap7
          swap8
          mstore
          dup4
          mstore
          dup1
          dup8
          keccak256
          dup7
          dup9
          mstore
          dup4
          mstore
          dup2
          dup2
          dup9
          keccak256
          sstore
          mload
          swap1
          dup2
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":5283:5314  Approval(owner, spender, value) */
          log3
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup1
          return
        tag_290:
          dup4
          0x64
          swap3
          mload
          swap2
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          dup3
          add
          mstore
          0x0e
          0x24
          dup3
          add
          mstore
          0x494e56414c49445f5349474e4552000000000000000000000000000000000000
          0x44
          dup3
          add
          mstore
          revert
            /* \"lib/solmate/src/tokens/ERC20.sol\":5120:5179  recoveredAddress != address(0) && recoveredAddress == owner */
        tag_288:
            /* \"lib/solmate/src/tokens/ERC20.sol\":5154:5179  recoveredAddress == owner */
          pop
          dup5
          dup9
          eq
            /* \"lib/solmate/src/tokens/ERC20.sol\":5120:5179  recoveredAddress != address(0) && recoveredAddress == owner */
          jump(tag_289)
            /* \"lib/solmate/src/tokens/ERC20.sol\":4292:5097  ecrecover(... */
        tag_286:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup2
          mload
          returndatasize
          dup9
          dup3
          returndatacopy
          returndatasize
          swap1
          revert
        tag_283:
          0x24
          dup13
          0x41
          dup16
          0x4e487b7100000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          mstore
          revert
        tag_280:
          0x64
          dup9
          0x20
          dup5
          mload
          swap2
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          dup3
          add
          mstore
          0x17
          0x24
          dup3
          add
          mstore
          0x5045524d49545f444541444c494e455f45585049524544000000000000000000
          0x44
          dup3
          add
          mstore
          revert
        tag_278:
          dup7
          dup1
          revert
        tag_148:
          dup4
          dup3
          jumpi(tag_175, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_175
          jumpi
          0x20
          swap1
          mload
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":2950:2979  ERC20 public immutable token1 */
          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
          dup2
          mstore
          return
        tag_146:
          swap1
          swap2
          pop
          jumpi(tag_183, callvalue)
          jumpi(tag_183, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))
          dup1
          calldataload
          swap2
          0xffffffffffffffffffffffffffffffffffffffff
          dup1
          dup5
          and
          dup1
          swap5
          sub
          tag_187
          jumpi
            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */
          tag_302
            /* \"src/ReservoirPair.sol\":3741:3748  factory */
          swap1
          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":3719:3729  msg.sender */
          caller
            /* \"src/ReservoirPair.sol\":3719:3749  msg.sender == address(factory) */
          eq
            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */
          tag_16
          jump\t// in
        tag_302:
            /* \"src/ReservoirPair.sol\":12690:12703  token0Managed */
          0x0c
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
          0xffffffffffffffffffffffffff
          dup1
          dup3
          and
            /* \"src/ReservoirPair.sol\":12690:12708  token0Managed == 0 */
          iszero
            /* \"src/ReservoirPair.sol\":12690:12730  token0Managed == 0 && token1Managed == 0 */
          swap2
          dup3
          tag_303
          jumpi
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
        tag_304:
          pop
          pop
          iszero
          tag_305
          jumpi
          pop
          pop
          0xffffffffffffffffffffffff0000000000000000000000000000000000000000
            /* \"src/ReservoirPair.sol\":12765:12787  assetManager = manager */
          0x0b
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
          and
          or
            /* \"src/ReservoirPair.sol\":12765:12787  assetManager = manager */
          0x0b
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sstore
          dup1
          return
        tag_305:
          swap1
          0x20
          0x64
          swap3
          mload
          swap2
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          dup3
          add
          mstore
          0x14
          0x24
          dup3
          add
          mstore
          0x414d503a20414d5f5354494c4c5f414354495645000000000000000000000000
          0x44
          dup3
          add
          mstore
          revert
            /* \"src/ReservoirPair.sol\":12690:12730  token0Managed == 0 && token1Managed == 0 */
        tag_303:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x68
          shr
          and
            /* \"src/ReservoirPair.sol\":12712:12730  token1Managed == 0 */
          iszero
          swap1
          pop
            /* \"src/ReservoirPair.sol\":12690:12730  token0Managed == 0 && token1Managed == 0 */
          codesize
          dup1
          jump(tag_304)
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
        tag_144:
          dup4
          dup3
          jumpi(tag_175, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_175
          jumpi
          0x20
          swap1
            /* \"src/ReservoirPair.sol\":3488:3536  uint256 public customSwapFee = type(uint256).max */
          0x08
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_142:
          dup4
          dup3
          jumpi(tag_175, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_175
          jumpi
            /* \"src/curve/stable/StablePair.sol\":4489:4528  StopRampA(lCurrentAPrecise, lTimestamp) */
          0xc2b4a70c4505e53bc276a247d810393c8346d85131cf6a42ee13edf74884037f
            /* \"src/ReservoirPair.sol\":3741:3748  factory */
          swap1
            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */
          tag_315
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":3741:3748  factory */
          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":3719:3729  msg.sender */
          caller
            /* \"src/ReservoirPair.sol\":3719:3749  msg.sender == address(factory) */
          eq
            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */
          tag_16
          jump\t// in
        tag_315:
            /* \"src/curve/stable/StablePair.sol\":4224:4245  _getCurrentAPrecise() */
          tag_316
          tag_47
          jump\t// in
        tag_316:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0xffffffffffffffff
          dup1
          dup3
          and
            /* \"src/curve/stable/StablePair.sol\":4372:4387  block.timestamp */
          swap2
          dup3
            /* \"src/libraries/StableMath.sol\":786:787  2 */
          0xffffffffffffffff0000000000000000
          0xffffffffffffffff000000000000000000000000000000000000000000000000
            /* \"src/curve/stable/StablePair.sol\":4372:4387  block.timestamp */
          timestamp
            /* \"src/libraries/StableMath.sol\":786:787  2 */
          0xc0
          shl
          and
          swap3
          dup7
          shl
          and
          or
          0xffffffffffffffff00000000000000000000000000000000
            /* \"src/curve/stable/StablePair.sol\":4372:4387  block.timestamp */
          timestamp
            /* \"src/libraries/StableMath.sol\":786:787  2 */
          0x80
          shl
          and
          or
          or
            /* \"src/curve/stable/StablePair.sol\":4256:4263  ampData */
          0x010010
            /* \"src/libraries/StableMath.sol\":786:787  2 */
          sstore
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup3
          mload
          swap2
          dup3
          mstore
            /* \"src/curve/stable/StablePair.sol\":4372:4387  block.timestamp */
          timestamp
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
          0x20
          dup3
          add
          mstore
            /* \"src/curve/stable/StablePair.sol\":4489:4528  StopRampA(lCurrentAPrecise, lTimestamp) */
          log1
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup1
          return
        tag_140:
          dup4
          dup3
          jumpi(tag_175, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_175
          jumpi
          0x20
          swap1
          mload
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":2870:2909  GenericFactory public immutable factory */
          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
          dup2
          mstore
          return
        tag_138:
          dup4
          jumpi(tag_166, callvalue)
          jumpi(tag_166, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))
            /* \"src/ReservoirPair.sol\":5579:5584  false */
          tag_168
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          tag_326
          tag_8
          jump\t// in
        tag_326:
            /* \"src/ReservoirPair.sol\":6689:6698  lReserve1 */
          tag_327
            /* \"src/ReservoirPair.sol\":6506:6520  _lockAndLoad() */
          tag_328
          tag_14
          jump\t// in
        tag_328:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          pop
          swap4
          swap2
          0xffffffffffffffffffffffffff
          dup1
          swap2
          and
          swap2
          and
            /* \"src/ReservoirPair.sol\":6561:6575  _totalToken0() */
          swap2
            /* \"src/ReservoirPair.sol\":6600:6609  lReserve1 */
          tag_329
            /* \"src/ReservoirPair.sol\":6561:6575  _totalToken0() */
          dup4
          dup4
            /* \"src/ReservoirPair.sol\":6561:6587  _totalToken0() - lReserve0 */
          tag_330
            /* \"src/ReservoirPair.sol\":6561:6575  _totalToken0() */
          dup2
          tag_331
          tag_25
          jump\t// in
        tag_331:
            /* \"src/ReservoirPair.sol\":6561:6587  _totalToken0() - lReserve0 */
          tag_11
          jump\t// in
        tag_330:
            /* \"src/ReservoirPair.sol\":6548:6554  token0 */
          dup5
          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")
            /* \"src/ReservoirPair.sol\":6600:6609  lReserve1 */
          tag_21
          jump\t// in
        tag_329:
            /* \"src/ReservoirPair.sol\":6650:6676  _totalToken1() - lReserve1 */
          tag_332
            /* \"src/ReservoirPair.sol\":6650:6664  _totalToken1() */
          dup4
          tag_331
          tag_26
          jump\t// in
            /* \"src/ReservoirPair.sol\":6650:6676  _totalToken1() - lReserve1 */
        tag_332:
            /* \"src/ReservoirPair.sol\":6637:6643  token1 */
          swap1
          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")
            /* \"src/ReservoirPair.sol\":6689:6698  lReserve1 */
          tag_21
          jump\t// in
        tag_327:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0xffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffff
          0xffffffff0000000000000000000000000000000000000000000000000000
            /* \"src/ReservoirPair.sol\":4847:4853  _slot0 */
          0x06
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
          swap3
          0xd0
          shl
          and
          swap2
          and
          or
            /* \"src/ReservoirPair.sol\":4847:4853  _slot0 */
          0x06
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sstore
            /* \"src/ReservoirPair.sol\":4701:4899  function _writeSlot0Timestamp(uint32 aTimestamp, bool aLocked) internal {... */
          jump
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
        tag_136:
          dup4
          dup3
          jumpi(tag_175, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_175
          jumpi
          0x20
          swap1
          mload
            /* \"src/ReservoirPair.sol\":2671:2678  10 ** 3 */
          0x03e8
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup2
          mstore
          return
        tag_134:
          dup4
          dup3
          jumpi(tag_175, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_175
          jumpi
          0x20
          swap1
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":17166:17193  address public oracleCaller */
          0x01000f
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
          and
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_132:
          swap1
          swap2
          pop
          jumpi(tag_183, callvalue)
          jumpi(tag_183, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))
            /* \"src/ReservoirPair.sol\":7139:7202  CustomPlatformFeeChanged(customPlatformFee, aCustomPlatformFee) */
          0xe044af8ebdaeeed3e95065fac857c503c7eabb71acfbcdcb7823ec6ca603c26e
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap1
          calldataload
            /* \"src/ReservoirPair.sol\":3741:3748  factory */
          swap2
            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */
          tag_346
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":3741:3748  factory */
          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":3719:3729  msg.sender */
          caller
            /* \"src/ReservoirPair.sol\":3719:3749  msg.sender == address(factory) */
          eq
            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */
          tag_16
          jump\t// in
        tag_346:
            /* \"src/ReservoirPair.sol\":7164:7181  customPlatformFee */
          0x0a
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
          dup2
          mload
          swap1
          dup2
          mstore
          dup4
          0x20
          dup3
          add
          mstore
            /* \"src/ReservoirPair.sol\":7139:7202  CustomPlatformFeeChanged(customPlatformFee, aCustomPlatformFee) */
          log1
            /* \"src/ReservoirPair.sol\":7164:7181  customPlatformFee */
          0x0a
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sstore
            /* \"src/ReservoirPair.sol\":7212:7250  customPlatformFee = aCustomPlatformFee */
          tag_168
          tag_18
          jump\t// in
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
        tag_130:
          dup4
          dup3
          jumpi(tag_175, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_175
          jumpi
          0x20
          swap1
          0xffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":12834:12862  uint104 public token1Managed */
          0x0c
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
          0x68
          shr
          and
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_128:
          dup4
          dup3
          jumpi(tag_175, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_175
          jumpi
          0x20
          swap1
          mload
            /* \"src/ReservoirPair.sol\":2849:2855  20_000 */
          0x4e20
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup2
          mstore
          return
        tag_126:
          dup4
          dup3
          jumpi(tag_175, callvalue)
          dup1
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_175
          jumpi
          0x20
          swap2
          tag_360
          tag_8
          jump\t// in
        tag_360:
          dup3
          0xffffffffffffffffffffffffffffffffffffffff
          calldataload(0x24)
            /* \"lib/solmate/src/tokens/ERC20.sol\":2774:2784  msg.sender */
          swap3
          caller
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup6
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":2764:2773  balanceOf */
          0x03
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup8
          mstore
          dup3
          dup6
          keccak256
            /* \"lib/solmate/src/tokens/ERC20.sol\":2764:2795  balanceOf[msg.sender] -= amount */
          tag_361
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup6
          dup3
          sload
            /* \"lib/solmate/src/tokens/ERC20.sol\":2764:2795  balanceOf[msg.sender] -= amount */
          tag_11
          jump\t// in
        tag_361:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap1
          sstore
          and
          swap3
          dup4
          dup2
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":2764:2773  balanceOf */
          0x03
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup7
          mstore
          keccak256
          dup2
          dup2
          sload
          add
          swap1
          sstore
          dup3
          mload
          swap1
          dup2
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":2990:3022  Transfer(msg.sender, to, amount) */
          0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
            /* \"lib/solmate/src/tokens/ERC20.sol\":2774:2784  msg.sender */
          dup5
          caller
            /* \"lib/solmate/src/tokens/ERC20.sol\":2990:3022  Transfer(msg.sender, to, amount) */
          swap3
          log3
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mload
          0x01
          dup2
          mstore
          return
        tag_124:
          dup4
          dup3
          jumpi(tag_175, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_175
          jumpi
          0x20
            /* \"src/curve/stable/StablePair.sol\":11363:11384  _getCurrentAPrecise() */
          swap1
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0xffffffffffffffff
            /* \"src/curve/stable/StablePair.sol\":11363:11384  _getCurrentAPrecise() */
          tag_366
          tag_47
          jump\t// in
        tag_366:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap2
          mload
          swap2
          and
          dup2
          mstore
          return
        tag_122:
          dup4
          jumpi(tag_166, callvalue)
          jumpi(tag_166, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))
          dup2
          calldataload
          swap2
          dup2
          0x60
          dup6
          mload
          tag_371
          dup2
          tag_2
          jump\t// in
        tag_371:
          dup3
          dup2
          mstore
          dup3
          0x20
          dup3
          add
          mstore
          dup3
          dup8
          dup3
          add
          mstore
          add
          mstore
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":17325:17337  oracleCaller */
          0x01000f
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
          and
            /* \"src/ReservoirPair.sol\":17311:17321  msg.sender */
          caller
            /* \"src/ReservoirPair.sol\":17311:17337  msg.sender == oracleCaller */
          sub
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          tag_372
          jumpi
          0x010000
          dup4
          lt
          iszero
          tag_374
          jumpi
          0x80
          dup4
          0xffffffff
          dup7
          dup1
          mload
          swap3
          tag_376
          dup5
          tag_2
          jump\t// in
        tag_376:
            /* \"src/ReservoirPair.sol\":17388:17401  _observations */
          0x0d
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          add
          sload
          swap1
          dup2
            /* \"src/ReservoirPair.sol\":17388:17401  _observations */
          0x0d
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          signextend
          swap4
          dup5
          dup2
          mstore
          0x20
          dup2
          add
          dup4
          0x70
          shr
          0x06
          signextend
          dup2
          mstore
          0x60
          dup4
          dup4
          add
          swap3
          dup6
          0xa8
          shr
          0x06
          signextend
          dup5
          mstore
          add
          swap4
          0xe0
          shr
          dup5
          mstore
          dup3
          mload
          swap6
          dup7
          mstore
          mload
          0x06
          signextend
          0x20
          dup7
          add
          mstore
          mload
          0x06
          signextend
          swap1
          dup5
          add
          mstore
          mload
          and
          0x60
          dup3
          add
          mstore
          return
        tag_374:
          swap1
          0x32
          0x24
          swap3
          0x4e487b7100000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          mstore
          revert
        tag_372:
          0x64
          swap1
          0x20
          dup6
          mload
          swap2
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          dup3
          add
          mstore
          0x15
          0x24
          dup3
          add
          mstore
          0x4f573a204e4f545f4f5241434c455f43414c4c45520000000000000000000000
          0x44
          dup3
          add
          mstore
          revert
        tag_120:
          swap2
          pop
          jumpi(tag_183, callvalue)
          0x20
          swap2
          dup3
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_398
          jumpi
            /* \"src/ReservoirPair.sol\":8142:8170  factory.read(RECOVERER_NAME) */
          tag_381
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap3
          tag_382
          tag_8
          jump\t// in
        tag_382:
          swap1
          dup4
          mload
          tag_383
          dup2
          tag_4
          jump\t// in
        tag_383:
          0x18
          dup2
          mstore
          0x5368617265643a3a64656661756c745265636f76657265720000000000000000
          dup3
          dup3
          add
          mstore
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":8142:8149  factory */
          swap6
          dup7
          swap2
          dup3
          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":8142:8170  factory.read(RECOVERER_NAME) */
          tag_51
          jump\t// in
        tag_381:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
          swap3
          dup6
          dup4
          and
            /* \"src/ReservoirPair.sol\":8218:8224  token0 */
          swap6
          dup1
          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":8200:8225  aToken != address(token0) */
          dup8
          eq
          iszero
            /* \"src/ReservoirPair.sol\":8200:8254  aToken != address(token0) && aToken != address(token1) */
          swap1
          dup2
          tag_384
          jumpi
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
        tag_385:
            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */
          pop
          iszero
          tag_386
          jumpi
            /* \"src/ReservoirPair.sol\":8304:8328  _recoverer != address(0) */
          dup4
          iszero
            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */
          tag_388
          jumpi
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup2
          swap1
          0x24
          dup7
          mload
            /* \"src/ReservoirPair.sol\":8396:8434  ERC20(aToken).balanceOf(address(this)) */
          dup1
          swap9
          dup2
          swap4
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x70a0823100000000000000000000000000000000000000000000000000000000
            /* \"src/ReservoirPair.sol\":8396:8434  ERC20(aToken).balanceOf(address(this)) */
          dup4
          mstore
            /* \"src/ReservoirPair.sol\":8428:8432  this */
          address
            /* \"src/ReservoirPair.sol\":8396:8434  ERC20(aToken).balanceOf(address(this)) */
          swap1
          dup4
          add
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mstore
            /* \"src/ReservoirPair.sol\":8396:8434  ERC20(aToken).balanceOf(address(this)) */
          gas
          staticcall
          swap4
          dup5
          iszero
          tag_390
          jumpi
          pop
          dup6
          swap4
          tag_392
          jumpi
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
        tag_393:
            /* \"src/ReservoirPair.sol\":8445:8496  _safeTransfer(aToken, _recoverer, _amountToRecover) */
          pop
          tag_394
          swap4
          pop
          tag_19
          jump\t// in
        tag_394:
          pop
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup1
          return
            /* \"src/ReservoirPair.sol\":8396:8434  ERC20(aToken).balanceOf(address(this)) */
        tag_392:
          swap1
          swap3
          pop
          dup4
          dup2
          returndatasize
          dup4
          gt
          tag_395
          jumpi
        tag_396:
          tag_397
          dup2
          dup4
          tag_5
          jump\t// in
        tag_397:
          dup2
          add
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sub
          slt
          tag_398
          jumpi
            /* \"src/ReservoirPair.sol\":8445:8496  _safeTransfer(aToken, _recoverer, _amountToRecover) */
          tag_394
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap3
          mload
            /* \"src/ReservoirPair.sol\":8396:8434  ERC20(aToken).balanceOf(address(this)) */
          swap2
          codesize
          jump(tag_393)
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
        tag_398:
          dup4
          dup1
          revert
            /* \"src/ReservoirPair.sol\":8396:8434  ERC20(aToken).balanceOf(address(this)) */
        tag_395:
          pop
          returndatasize
          jump(tag_396)
        tag_390:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mload
          returndatasize
          dup8
          dup3
          returndatacopy
          returndatasize
          swap1
          revert
            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */
        tag_388:
          0x64
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap2
          dup6
          mload
            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */
          swap2
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          dup3
          add
          mstore
          0x19
          0x24
          dup3
          add
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mstore
            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */
          0x503a205245434f56455245525f5a45524f5f4144445245535300000000000000
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x44
          dup3
          add
            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */
          mstore
          revert
        tag_386:
          0x64
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap2
          dup6
          mload
            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */
          swap2
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          dup3
          add
          mstore
          0x1b
          0x24
          dup3
          add
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mstore
            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */
          0x503a20494e56414c49445f544f4b454e5f544f5f5245434f5645520000000000
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x44
          dup3
          add
            /* \"src/ReservoirPair.sol\":2507:2533  \"Shared::defaultRecoverer\" */
          mstore
          revert
            /* \"src/ReservoirPair.sol\":8200:8254  aToken != address(token0) && aToken != address(token1) */
        tag_384:
            /* \"src/ReservoirPair.sol\":8247:8253  token1 */
          swap1
          pop
          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":8229:8254  aToken != address(token1) */
          dup7
          eq
          iszero
            /* \"src/ReservoirPair.sol\":8200:8254  aToken != address(token0) && aToken != address(token1) */
          codesize
          jump(tag_385)
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
        tag_118:
          swap1
          swap2
          pop
          jumpi(tag_183, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_183
          jumpi
          dup1
          calldataload
          swap1
          calldataload(0x24)
          swap3
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":14884:14896  assetManager */
          0x0b
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
          and
            /* \"src/ReservoirPair.sol\":14862:14872  msg.sender */
          caller
            /* \"src/ReservoirPair.sol\":14862:14897  msg.sender == address(assetManager) */
          sub
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          tag_404
          jumpi
          pop
          pop
            /* \"src/ReservoirPair.sol\":14938:14955  aToken0Change > 0 */
          dup3
          dup2
          sgt
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          iszero
          tag_406
          jumpi
            /* \"src/ReservoirPair.sol\":14988:15022  uint256(aToken0Change).toUint104() */
          tag_408
            /* \"src/ReservoirPair.sol\":15073:15112  token0.safeTransfer(msg.sender, lDelta) */
          tag_409
            /* \"src/ReservoirPair.sol\":14988:15022  uint256(aToken0Change).toUint104() */
          swap2
          tag_29
          jump\t// in
        tag_408:
            /* \"src/ReservoirPair.sol\":15036:15059  token0Managed += lDelta */
          0x0c
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
          swap1
          0xffffffffffffffffffffffffff
          swap2
          0xffffffffffffffffffffffffffffffffffffff00000000000000000000000000
          dup4
            /* \"src/ReservoirPair.sol\":15036:15059  token0Managed += lDelta */
          tag_410
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup5
          dup3
          dup6
          and
            /* \"src/ReservoirPair.sol\":15036:15059  token0Managed += lDelta */
          tag_34
          jump\t// in
        tag_410:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
          swap2
          and
          or
            /* \"src/ReservoirPair.sol\":15036:15059  token0Managed += lDelta */
          0x0c
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sstore
          and
            /* \"src/ReservoirPair.sol\":14862:14872  msg.sender */
          caller
            /* \"src/ReservoirPair.sol\":15073:15079  token0 */
          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")
            /* \"src/ReservoirPair.sol\":15073:15112  token0.safeTransfer(msg.sender, lDelta) */
          tag_36
          jump\t// in
        tag_409:
            /* \"src/ReservoirPair.sol\":15406:15423  aToken1Change > 0 */
          dup2
          dup2
          sgt
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          iszero
          tag_412
          jumpi
            /* \"src/ReservoirPair.sol\":15456:15490  uint256(aToken1Change).toUint104() */
          tag_414
            /* \"src/ReservoirPair.sol\":15595:15634  token1.safeTransfer(msg.sender, lDelta) */
          tag_168
            /* \"src/ReservoirPair.sol\":15456:15490  uint256(aToken1Change).toUint104() */
          swap2
          tag_29
          jump\t// in
        tag_414:
            /* \"src/ReservoirPair.sol\":15557:15580  token1Managed += lDelta */
          0x0c
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
          swap1
          0xffffffffffffffffffffffffff
          swap2
          0xffffffffffff00000000000000000000000000ffffffffffffffffffffffffff
          0xffffffffffffffffffffffffff00000000000000000000000000
            /* \"src/ReservoirPair.sol\":15557:15580  token1Managed += lDelta */
          tag_416
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup5
          dup7
          dup6
          0x68
          shr
          and
            /* \"src/ReservoirPair.sol\":15557:15580  token1Managed += lDelta */
          tag_34
          jump\t// in
        tag_416:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x68
          shl
          and
          swap2
          and
          or
            /* \"src/ReservoirPair.sol\":15557:15580  token1Managed += lDelta */
          0x0c
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sstore
          and
            /* \"src/ReservoirPair.sol\":14862:14872  msg.sender */
          caller
            /* \"src/ReservoirPair.sol\":15595:15601  token1 */
          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")
            /* \"src/ReservoirPair.sol\":15595:15634  token1.safeTransfer(msg.sender, lDelta) */
          tag_36
          jump\t// in
            /* \"src/ReservoirPair.sol\":15402:15914  if (aToken1Change > 0) {... */
        tag_412:
            /* \"src/ReservoirPair.sol\":15655:15672  aToken1Change < 0 */
          dup2
          dup2
          slt
            /* \"src/ReservoirPair.sol\":15651:15914  if (aToken1Change < 0) {... */
          tag_418
          jumpi
            /* \"src/ReservoirPair.sol\":15402:15914  if (aToken1Change > 0) {... */
          pop
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup1
          return
            /* \"src/ReservoirPair.sol\":15651:15914  if (aToken1Change < 0) {... */
        tag_418:
            /* \"src/ReservoirPair.sol\":15705:15740  uint256(-aToken1Change).toUint104() */
          tag_420
            /* \"src/ReservoirPair.sol\":15713:15727  -aToken1Change */
          tag_421
            /* \"src/ReservoirPair.sol\":15845:15903  token1.safeTransferFrom(msg.sender, address(this), lDelta) */
          tag_168
            /* \"src/ReservoirPair.sol\":15713:15727  -aToken1Change */
          swap3
          tag_32
          jump\t// in
        tag_421:
            /* \"src/ReservoirPair.sol\":15705:15740  uint256(-aToken1Change).toUint104() */
          tag_29
          jump\t// in
        tag_420:
            /* \"src/ReservoirPair.sol\":15807:15830  token1Managed -= lDelta */
          0x0c
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
          swap1
          0xffffffffffffffffffffffffff
          swap2
          0xffffffffffff00000000000000000000000000ffffffffffffffffffffffffff
          0xffffffffffffffffffffffffff00000000000000000000000000
            /* \"src/ReservoirPair.sol\":15807:15830  token1Managed -= lDelta */
          tag_423
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup5
          dup7
          dup6
          0x68
          shr
          and
            /* \"src/ReservoirPair.sol\":15807:15830  token1Managed -= lDelta */
          tag_33
          jump\t// in
        tag_423:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x68
          shl
          and
          swap2
          and
          or
            /* \"src/ReservoirPair.sol\":15807:15830  token1Managed -= lDelta */
          0x0c
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sstore
          and
            /* \"src/ReservoirPair.sol\":15889:15893  this */
          address
            /* \"src/ReservoirPair.sol\":14862:14872  msg.sender */
          caller
            /* \"src/ReservoirPair.sol\":15845:15851  token1 */
          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")
            /* \"src/ReservoirPair.sol\":15845:15903  token1.safeTransferFrom(msg.sender, address(this), lDelta) */
          tag_35
          jump\t// in
            /* \"src/ReservoirPair.sol\":14934:15392  if (aToken0Change > 0) {... */
        tag_406:
            /* \"src/ReservoirPair.sol\":15133:15150  aToken0Change < 0 */
          dup3
          dup2
          slt
            /* \"src/ReservoirPair.sol\":15129:15392  if (aToken0Change < 0) {... */
          tag_424
          jumpi
            /* \"src/ReservoirPair.sol\":14934:15392  if (aToken0Change > 0) {... */
        tag_425:
          pop
          jump(tag_409)
            /* \"src/ReservoirPair.sol\":15129:15392  if (aToken0Change < 0) {... */
        tag_424:
            /* \"src/ReservoirPair.sol\":15183:15218  uint256(-aToken0Change).toUint104() */
          tag_426
            /* \"src/ReservoirPair.sol\":15191:15205  -aToken0Change */
          tag_421
            /* \"src/ReservoirPair.sol\":15323:15381  token0.safeTransferFrom(msg.sender, address(this), lDelta) */
          tag_428
            /* \"src/ReservoirPair.sol\":15191:15205  -aToken0Change */
          swap3
          tag_32
          jump\t// in
            /* \"src/ReservoirPair.sol\":15183:15218  uint256(-aToken0Change).toUint104() */
        tag_426:
            /* \"src/ReservoirPair.sol\":15285:15308  token0Managed -= lDelta */
          0x0c
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
          swap1
          0xffffffffffffffffffffffffff
          swap2
          0xffffffffffffffffffffffffffffffffffffff00000000000000000000000000
          dup4
            /* \"src/ReservoirPair.sol\":15285:15308  token0Managed -= lDelta */
          tag_429
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup5
          dup3
          dup6
          and
            /* \"src/ReservoirPair.sol\":15285:15308  token0Managed -= lDelta */
          tag_33
          jump\t// in
        tag_429:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
          swap2
          and
          or
            /* \"src/ReservoirPair.sol\":15285:15308  token0Managed -= lDelta */
          0x0c
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sstore
          and
            /* \"src/ReservoirPair.sol\":15367:15371  this */
          address
            /* \"src/ReservoirPair.sol\":14862:14872  msg.sender */
          caller
            /* \"src/ReservoirPair.sol\":15323:15329  token0 */
          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")
            /* \"src/ReservoirPair.sol\":15323:15381  token0.safeTransferFrom(msg.sender, address(this), lDelta) */
          tag_35
          jump\t// in
        tag_428:
            /* \"src/ReservoirPair.sol\":15129:15392  if (aToken0Change < 0) {... */
          codesize
          jump(tag_425)
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
        tag_404:
          swap1
          0x20
          0x64
          swap3
          mload
          swap2
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          dup3
          add
          mstore
          0x15
          0x24
          dup3
          add
          mstore
          0x414d503a20415554485f4e4f545f4d414e414745520000000000000000000000
          0x44
          dup3
          add
          mstore
          revert
        tag_116:
          dup4
          dup3
          jumpi(tag_175, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_175
          jumpi
          dup1
          mload
          swap1
          dup3
            /* \"lib/solmate/src/tokens/ERC20.sol\":1056:1076  string public symbol */
          0x01
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup1
          sload
          swap2
          tag_434
          dup4
          tag_1
          jump\t// in
        tag_434:
          dup1
          dup7
          mstore
          swap3
          dup3
          dup2
          and
          swap1
            /* \"lib/solmate/src/tokens/ERC20.sol\":1056:1076  string public symbol */
          dup2
          iszero
          tag_435
          jumpi
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          pop
          0x01
          eq
          tag_437
          jumpi
        tag_438:
          pop
          pop
          pop
          tag_439
          dup3
          tag_440
          swap5
          sub
          dup4
          tag_5
          jump\t// in
        tag_439:
          mload
          swap2
          dup3
          swap2
          dup3
          tag_7
          jump\t// in
        tag_440:
          sub
          swap1
          return
        tag_437:
          swap5
          pop
          dup1
          dup6
          mstore
          0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6
        tag_441:
          dup3
          dup7
          lt
          tag_442
          jumpi
          pop
          pop
          pop
          tag_439
          dup3
          0x20
          tag_440
          swap6
          dup3
          add
          add
          swap5
          jump(tag_438)
        tag_442:
          dup1
          sload
          0x20
          dup8
          dup8
          add
          dup2
          add
          swap2
          swap1
          swap2
          mstore
          swap1
          swap6
          add
          swap5
          dup2
          add
          jump(tag_441)
        tag_435:
          tag_440
          swap8
          pop
          dup7
          swap4
          pop
          0x20
          swap3
          pop
          tag_439
          swap5
          swap2
          pop
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
          and
          dup3
          dup5
          add
          mstore
          iszero
          iszero
          0x05
          shl
          dup3
          add
          add
          swap5
          jump(tag_438)
        tag_114:
          swap1
          swap2
          pop
          jumpi(tag_183, callvalue)
          jumpi(tag_183, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))
            /* \"src/ReservoirPair.sol\":6915:6966  CustomSwapFeeChanged(customSwapFee, aCustomSwapFee) */
          0x27f958341e42705d80835b6391cbe111df34533c7061beebb873bdb3454cc697
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap1
          calldataload
            /* \"src/ReservoirPair.sol\":3741:3748  factory */
          swap2
            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */
          tag_448
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":3741:3748  factory */
          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":3719:3729  msg.sender */
          caller
            /* \"src/ReservoirPair.sol\":3719:3749  msg.sender == address(factory) */
          eq
            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */
          tag_16
          jump\t// in
        tag_448:
            /* \"src/ReservoirPair.sol\":6936:6949  customSwapFee */
          0x08
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
          dup2
          mload
          swap1
          dup2
          mstore
          dup4
          0x20
          dup3
          add
          mstore
            /* \"src/ReservoirPair.sol\":6915:6966  CustomSwapFeeChanged(customSwapFee, aCustomSwapFee) */
          log1
            /* \"src/ReservoirPair.sol\":6936:6949  customSwapFee */
          0x08
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sstore
            /* \"src/ReservoirPair.sol\":6976:7006  customSwapFee = aCustomSwapFee */
          tag_168
          tag_17
          jump\t// in
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
        tag_112:
          dup4
          dup3
          jumpi(tag_175, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_175
          jumpi
          0x20
          swap1
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":12568:12601  IAssetManager public assetManager */
          0x0b
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
          and
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_110:
          dup4
          jumpi(tag_166, callvalue)
          jumpi(tag_166, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))
          tag_458
          tag_8
          jump\t// in
        tag_458:
          pop
          calldatasize
            /* \"src/curve/stable/StablePair.sol\":5531:5926  assembly (\"memory-safe\") {... */
          dup2
          dup1
          calldatacopy
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup1
          dup1
          calldatasize
            /* \"src/curve/stable/StablePair.sol\":5406:5421  MINT_BURN_LOGIC */
          dup2
          immutable(\"0x69a6981f097d268300679363fc4cf56fca542798e8a407090df95d7866c686f5\")
            /* \"src/curve/stable/StablePair.sol\":5531:5926  assembly (\"memory-safe\") {... */
          gas
          delegatecall
          tag_459
          jumpi
          returndatasize
          dup2
          dup1
          returndatacopy
          returndatasize
          swap1
          revert
        tag_459:
          returndatasize
          dup2
          dup1
          returndatacopy
          returndatasize
          swap1
          return
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
        tag_108:
          dup4
          dup3
          jumpi(tag_175, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_175
          jumpi
          0x20
          swap1
            /* \"src/ReservoirPair.sol\":17094:17122  uint256 public maxChangeRate */
          0x01000d
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_106:
          dup4
          dup3
          jumpi(tag_175, callvalue)
          jumpi(tag_175, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))
          dup1
          0x20
          swap3
          0xffffffffffffffffffffffffffffffffffffffff
          tag_469
          tag_8
          jump\t// in
        tag_469:
          and
          dup2
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":1751:1792  mapping(address => uint256) public nonces */
          0x05
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup5
          mstore
          keccak256
          sload
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_104:
          dup4
          dup3
          jumpi(tag_175, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_175
          jumpi
          0x20
          swap1
            /* \"src/ReservoirPair.sol\":3619:3671  uint256 public customPlatformFee = type(uint256).max */
          0x0a
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_102:
          dup4
          dup3
          jumpi(tag_175, callvalue)
          jumpi(tag_175, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))
          dup1
          0x20
          swap3
          0xffffffffffffffffffffffffffffffffffffffff
          tag_478
          tag_8
          jump\t// in
        tag_478:
          and
          dup2
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":1337:1381  mapping(address => uint256) public balanceOf */
          0x03
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup5
          mstore
          keccak256
          sload
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_98:
          pop
          dup3
          jumpi(tag_166, callvalue)
          dup1
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_166
          jumpi
          pop
            /* \"src/curve/stable/StablePair.sol\":1832:1864  AmplificationData public ampData */
          0x010010
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
          dup2
          mload
          0xffffffffffffffff
          dup1
          dup4
          and
          dup3
          mstore
          swap3
          dup3
          swap1
          shr
          dup4
          and
          0x20
          dup3
          add
          mstore
          0x80
          dup3
          dup2
          shr
          swap1
          swap4
          and
          0x40
          dup3
          add
          mstore
          0xc0
          swap2
          swap1
          swap2
          shr
          0x60
          dup3
          add
          mstore
          return
        tag_96:
          dup4
          dup3
          jumpi(tag_175, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_175
          jumpi
          0x20
          swap1
            /* \"src/ReservoirPair.sol\":3460:3482  uint256 public swapFee */
          0x07
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_94:
          swap2
          pop
          jumpi(tag_183, callvalue)
          jumpi(tag_183, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))
          dup2
          calldataload
            /* \"src/ReservoirPair.sol\":3741:3748  factory */
          swap2
            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */
          tag_499
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":3741:3748  factory */
          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":3719:3729  msg.sender */
          caller
            /* \"src/ReservoirPair.sol\":3719:3749  msg.sender == address(factory) */
          eq
            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */
          tag_16
          jump\t// in
        tag_499:
            /* \"src/ReservoirPair.sol\":17789:17807  0 < aMaxChangeRate */
          dup3
          iszero
          iszero
            /* \"src/ReservoirPair.sol\":17789:17847  0 < aMaxChangeRate && aMaxChangeRate <= MAX_CHANGE_PER_SEC */
          dup1
          tag_500
          jumpi
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
        tag_501:
            /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */
          iszero
          tag_502
          jumpi
            /* \"src/ReservoirPair.sol\":17917:17930  maxChangeRate */
          pop
            /* \"src/ReservoirPair.sol\":17896:17947  MaxChangeRateUpdated(maxChangeRate, aMaxChangeRate) */
          0x807b9f5907da3f00bf587e77bc07247e1c7ff5ae46c93a584b3a075be0b1bac2
            /* \"src/ReservoirPair.sol\":17917:17930  maxChangeRate */
          0x01000d
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap2
          dup3
          sload
          dup2
          mload
          swap1
          dup2
          mstore
          dup5
          0x20
          dup3
          add
          mstore
            /* \"src/ReservoirPair.sol\":17896:17947  MaxChangeRateUpdated(maxChangeRate, aMaxChangeRate) */
          log1
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sstore
          dup1
          return
            /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */
        tag_502:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x20
            /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */
          0x64
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap3
          mload
            /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */
          swap2
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          dup3
          add
          mstore
          0x1d
          0x24
          dup3
          add
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mstore
            /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */
          0x4f573a20494e56414c49445f4348414e47455f5045525f5345434f4e44000000
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x44
          dup3
          add
            /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */
          mstore
          revert
            /* \"src/ReservoirPair.sol\":17789:17847  0 < aMaxChangeRate && aMaxChangeRate <= MAX_CHANGE_PER_SEC */
        tag_500:
            /* \"src/ReservoirPair.sol\":17811:17847  aMaxChangeRate <= MAX_CHANGE_PER_SEC */
          pop
            /* \"src/ReservoirPair.sol\":16745:16752  0.01e18 */
          0x2386f26fc10000
            /* \"src/ReservoirPair.sol\":17811:17847  aMaxChangeRate <= MAX_CHANGE_PER_SEC */
          dup4
          gt
          iszero
            /* \"src/ReservoirPair.sol\":17789:17847  0 < aMaxChangeRate && aMaxChangeRate <= MAX_CHANGE_PER_SEC */
          jump(tag_501)
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
        tag_92:
          dup4
          dup3
          jumpi(tag_175, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_175
          jumpi
          0x20
          swap1
            /* \"src/ReservoirPair.sol\":17128:17159  uint256 public prevClampedPrice */
          0x01000e
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_90:
          dup4
          swap1
          jumpi(tag_175, callvalue)
          dup3
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_175
          jumpi
          dup1
          calldataload
          swap1
          0xffffffffffffffff
          swap1
          dup2
          dup4
          and
          dup1
          swap4
          sub
          tag_398
          jumpi
          calldataload(0x24)
          swap1
          dup3
          dup3
          and
          swap4
          dup5
          dup4
          sub
          tag_191
          jumpi
            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */
          tag_516
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":3741:3748  factory */
          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":3719:3729  msg.sender */
          caller
            /* \"src/ReservoirPair.sol\":3719:3749  msg.sender == address(factory) */
          eq
            /* \"src/ReservoirPair.sol\":3711:3766  require(msg.sender == address(factory), \"P: FORBIDDEN\") */
          tag_16
          jump\t// in
        tag_516:
            /* \"src/libraries/StableMath.sol\":521:522  1 */
          0x01
            /* \"src/curve/stable/StablePair.sol\":3011:3042  aFutureARaw >= StableMath.MIN_A */
          dup2
          lt
          iszero
            /* \"src/curve/stable/StablePair.sol\":3011:3077  aFutureARaw >= StableMath.MIN_A && aFutureARaw <= StableMath.MAX_A */
          dup1
          tag_517
          jumpi
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
        tag_518:
            /* \"src/libraries/StableMath.sol\":607:613  10_000 */
          iszero
          tag_519
          jumpi
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x64
            /* \"src/libraries/StableMath.sol\":320:323  100 */
          mul
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup4
          dup2
          and
            /* \"src/libraries/StableMath.sol\":320:323  100 */
          swap5
          dup2
          dup7
          sub
          tag_521
          jumpi
            /* \"src/curve/stable/StablePair.sol\":3205:3235  aFutureATime - block.timestamp */
          tag_523
            /* \"src/curve/stable/StablePair.sol\":3220:3235  block.timestamp */
          swap1
          timestamp
            /* \"src/curve/stable/StablePair.sol\":3205:3235  aFutureATime - block.timestamp */
          swap1
          tag_11
          jump\t// in
        tag_523:
            /* \"src/libraries/StableMath.sol\":409:415  1 days */
          0x015180
            /* \"src/curve/stable/StablePair.sol\":3253:3289  duration >= StableMath.MIN_RAMP_TIME */
          dup2
          lt
            /* \"src/libraries/StableMath.sol\":409:415  1 days */
          tag_524
          jumpi
            /* \"src/curve/stable/StablePair.sol\":3351:3372  _getCurrentAPrecise() */
          tag_526
          tag_47
          jump\t// in
        tag_526:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap3
            /* \"src/libraries/StableMath.sol\":786:787  2 */
          0x02
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup7
          dup6
          and
            /* \"src/curve/stable/StablePair.sol\":3558:3756  lFutureAPrecise > lCurrentAPrecise... */
          swap3
            /* \"src/curve/stable/StablePair.sol\":3558:3592  lFutureAPrecise > lCurrentAPrecise */
          dup4
          dup10
          gt
            /* \"src/curve/stable/StablePair.sol\":3558:3756  lFutureAPrecise > lCurrentAPrecise... */
          0x00
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          eq
          tag_527
          jumpi
            /* \"src/curve/stable/StablePair.sol\":3607:3674  Math.ceilDiv(lFutureAPrecise * 1 days, lCurrentAPrecise * duration) */
          tag_529
            /* \"src/curve/stable/StablePair.sol\":3620:3644  lFutureAPrecise * 1 days */
          swap1
          dup9
            /* \"src/curve/stable/StablePair.sol\":3646:3673  lCurrentAPrecise * duration */
          tag_530
            /* \"src/curve/stable/StablePair.sol\":3620:3644  lFutureAPrecise * 1 days */
          tag_531
          dup13
          tag_38
          jump\t// in
        tag_531:
            /* \"src/curve/stable/StablePair.sol\":3646:3673  lCurrentAPrecise * duration */
          swap3
          dup8
          tag_41
          jump\t// in
        tag_530:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap2
          and
            /* \"src/curve/stable/StablePair.sol\":3607:3674  Math.ceilDiv(lFutureAPrecise * 1 days, lCurrentAPrecise * duration) */
          tag_43
          jump\t// in
        tag_529:
            /* \"src/curve/stable/StablePair.sol\":3774:3823  dailyRate <= StableMath.MAX_AMP_UPDATE_DAILY_RATE */
          gt
            /* \"src/libraries/StableMath.sol\":786:787  2 */
          tag_533
          jumpi
          pop
            /* \"src/curve/stable/StablePair.sol\":3220:3235  block.timestamp */
          timestamp
            /* \"src/libraries/StableMath.sol\":786:787  2 */
          0x80
          dup2
          dup2
          shl
          0xffffffffffffffff00000000000000000000000000000000
          and
          swap4
          dup11
          shl
          0xffffffffffffffff0000000000000000
          and
          swap1
          swap3
          or
          swap3
          swap1
          swap3
          or
          0xc0
          dup6
          swap1
          shl
          0xffffffffffffffff000000000000000000000000000000000000000000000000
          and
          or
            /* \"src/curve/stable/StablePair.sol\":3860:3867  ampData */
          0x010010
            /* \"src/libraries/StableMath.sol\":786:787  2 */
          sstore
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap7
          mload
          0xffffffffffffffff
          swap3
          dup4
          and
          dup2
          mstore
          swap5
          dup3
          and
          0x20
          dup7
          add
          mstore
          swap3
          swap1
          swap3
          and
          dup3
          and
          0x40
          dup5
          add
          mstore
          and
          0x60
          dup3
          add
          mstore
            /* \"src/libraries/StableMath.sol\":786:787  2 */
          swap1
          swap2
            /* \"src/curve/stable/StablePair.sol\":4054:4133  RampA(lCurrentAPrecise, lFutureAPrecise, uint64(block.timestamp), aFutureATime) */
          0x91e3c84fe7f917d978f2dacc9d91d4e48b43b66e15e0526bda0a0866bbb7949d
          swap2
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap1
          dup2
          swap1
          dup2
          add
            /* \"src/curve/stable/StablePair.sol\":4054:4133  RampA(lCurrentAPrecise, lFutureAPrecise, uint64(block.timestamp), aFutureATime) */
          sub
          swap1
          log1
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup1
          return
            /* \"src/libraries/StableMath.sol\":786:787  2 */
        tag_533:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x64
          swap1
          0x20
          dup11
          mload
            /* \"src/libraries/StableMath.sol\":786:787  2 */
          swap2
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          dup3
          add
          mstore
          0x15
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x24
            /* \"src/libraries/StableMath.sol\":786:787  2 */
          dup3
          add
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mstore
            /* \"src/libraries/StableMath.sol\":786:787  2 */
          0x53503a20414d505f524154455f544f4f5f484947480000000000000000000000
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x44
          dup3
          add
            /* \"src/libraries/StableMath.sol\":786:787  2 */
          mstore
          revert
            /* \"src/curve/stable/StablePair.sol\":3558:3756  lFutureAPrecise > lCurrentAPrecise... */
        tag_527:
            /* \"src/curve/stable/StablePair.sol\":3689:3756  Math.ceilDiv(lCurrentAPrecise * 1 days, lFutureAPrecise * duration) */
          tag_536
            /* \"src/curve/stable/StablePair.sol\":3702:3727  lCurrentAPrecise * 1 days */
          swap1
          dup9
            /* \"src/curve/stable/StablePair.sol\":3729:3755  lFutureAPrecise * duration */
          tag_530
            /* \"src/curve/stable/StablePair.sol\":3702:3727  lCurrentAPrecise * 1 days */
          tag_538
          dup10
          tag_38
          jump\t// in
        tag_538:
            /* \"src/curve/stable/StablePair.sol\":3729:3755  lFutureAPrecise * duration */
          swap3
          dup13
          tag_41
          jump\t// in
            /* \"src/curve/stable/StablePair.sol\":3689:3756  Math.ceilDiv(lCurrentAPrecise * 1 days, lFutureAPrecise * duration) */
        tag_536:
            /* \"src/curve/stable/StablePair.sol\":3558:3756  lFutureAPrecise > lCurrentAPrecise... */
          jump(tag_529)
            /* \"src/libraries/StableMath.sol\":409:415  1 days */
        tag_524:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x64
          dup4
          0x20
          dup11
          mload
            /* \"src/libraries/StableMath.sol\":409:415  1 days */
          swap2
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          dup3
          add
          mstore
          0x14
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x24
            /* \"src/libraries/StableMath.sol\":409:415  1 days */
          dup3
          add
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mstore
            /* \"src/libraries/StableMath.sol\":409:415  1 days */
          0x53503a20494e56414c49445f4455524154494f4e000000000000000000000000
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x44
          dup3
          add
            /* \"src/libraries/StableMath.sol\":409:415  1 days */
          mstore
          revert
            /* \"src/libraries/StableMath.sol\":320:323  100 */
        tag_521:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x24
          dup8
          0x11
          dup6
          0x4e487b7100000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          mstore
          revert
            /* \"src/libraries/StableMath.sol\":607:613  10_000 */
        tag_519:
          0x64
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup3
          0x20
          dup10
          mload
            /* \"src/libraries/StableMath.sol\":607:613  10_000 */
          swap2
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          dup3
          add
          mstore
          0x0d
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x24
            /* \"src/libraries/StableMath.sol\":607:613  10_000 */
          dup3
          add
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mstore
            /* \"src/libraries/StableMath.sol\":607:613  10_000 */
          0x53503a20494e56414c49445f4100000000000000000000000000000000000000
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x44
          dup3
          add
            /* \"src/libraries/StableMath.sol\":607:613  10_000 */
          mstore
          revert
            /* \"src/curve/stable/StablePair.sol\":3011:3077  aFutureARaw >= StableMath.MIN_A && aFutureARaw <= StableMath.MAX_A */
        tag_517:
            /* \"src/curve/stable/StablePair.sol\":3046:3077  aFutureARaw <= StableMath.MAX_A */
          pop
            /* \"src/libraries/StableMath.sol\":607:613  10_000 */
          0x2710
            /* \"src/curve/stable/StablePair.sol\":3046:3077  aFutureARaw <= StableMath.MAX_A */
          dup2
          gt
          iszero
            /* \"src/curve/stable/StablePair.sol\":3011:3077  aFutureARaw >= StableMath.MIN_A && aFutureARaw <= StableMath.MAX_A */
          jump(tag_518)
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
        tag_88:
          dup4
          dup3
          jumpi(tag_175, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_175
          jumpi
          0x20
          swap1
          mload
            /* \"src/ReservoirPair.sol\":2789:2796  500_000 */
          0x07a120
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup2
          mstore
          return
        tag_86:
          dup4
          dup3
          jumpi(tag_175, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_175
          jumpi
          0x20
          swap1
          tag_547
          tag_12
          jump\t// in
        tag_547:
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_84:
          dup4
          dup3
          jumpi(tag_175, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_175
          jumpi
          dup1
            /* \"src/ReservoirPair.sol\":17490:17522  factory.read(ORACLE_CALLER_NAME) */
          tag_552
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap2
          mload
          tag_553
          dup2
          tag_4
          jump\t// in
        tag_553:
          0x14
          dup2
          mstore
          0x5368617265643a3a6f7261636c6543616c6c6572000000000000000000000000
          0x20
          dup3
          add
          mstore
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":17490:17497  factory */
          swap3
          dup4
          swap2
          dup3
          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":17490:17522  factory.read(ORACLE_CALLER_NAME) */
          tag_51
          jump\t// in
        tag_552:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":17562:17574  oracleCaller */
          swap1
          0x01000f
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap3
          dup4
          sload
          swap1
          dup2
          and
            /* \"src/ReservoirPair.sol\":17548:17574  lNewCaller != oracleCaller */
          dup1
          dup5
          sub
            /* \"src/ReservoirPair.sol\":17544:17690  if (lNewCaller != oracleCaller) {... */
          tag_554
          jumpi
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup6
          dup1
          return
            /* \"src/ReservoirPair.sol\":17544:17690  if (lNewCaller != oracleCaller) {... */
        tag_554:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup3
            /* \"src/ReservoirPair.sol\":17595:17640  OracleCallerUpdated(oracleCaller, lNewCaller) */
          0x262681b3b01b61ff6d02569759105771205cdd274fb3c45535b50632e0a3523f
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap2
          0xffffffffffffffffffffffff0000000000000000000000000000000000000000
          swap5
          mload
          swap1
          dup2
          mstore
            /* \"src/ReservoirPair.sol\":16881:16903  \"Shared::oracleCaller\" */
          dup6
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x20
            /* \"src/ReservoirPair.sol\":16881:16903  \"Shared::oracleCaller\" */
          dup3
          add
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mstore
            /* \"src/ReservoirPair.sol\":17595:17640  OracleCallerUpdated(oracleCaller, lNewCaller) */
          log1
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
          or
          swap1
          sstore
            /* \"src/ReservoirPair.sol\":17544:17690  if (lNewCaller != oracleCaller) {... */
          dup2
          dup1
          dup1
          dup1
          dup1
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup6
          dup1
          return
        tag_82:
          dup4
          dup3
          jumpi(tag_175, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_175
          jumpi
          0x20
          swap1
          mload
          0xff
            /* \"lib/solmate/src/tokens/ERC20.sol\":1083:1114  uint8 public immutable decimals */
          immutable(\"0xb7b2278e6c1d8d0abc309f6bf9256046dfb6cd1d61f6bb10388e8ea4928d3539\")
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
          dup2
          mstore
          return
        tag_80:
          dup4
          dup3
          jumpi(tag_175, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_175
          jumpi
          0x20
          swap1
          0xffffffffffffffff
          0x64
            /* \"src/curve/stable/StablePair.sol\":11218:11239  _getCurrentAPrecise() */
          dup2
          tag_564
          tag_47
          jump\t// in
        tag_564:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
          div
          swap2
          mload
          swap2
          and
          dup2
          mstore
          return
        tag_78:
          dup4
          dup3
          jumpi(tag_175, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_175
          jumpi
          0x20
          swap1
            /* \"src/ReservoirPair.sol\":3587:3613  uint256 public platformFee */
          0x09
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_76:
          swap1
          dup4
          jumpi(tag_166, callvalue)
          jumpi(tag_166, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x60))
          tag_573
          tag_8
          jump\t// in
        tag_573:
            /* \"lib/solmate/src/tokens/ERC20.sol\":3594:3620  Transfer(from, to, amount) */
          0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          tag_574
          tag_9
          jump\t// in
        tag_574:
          swap5
          calldataload(0x44)
          dup6
          0xffffffffffffffffffffffffffffffffffffffff
          dup1
          swap6
          and
          swap5
          dup6
          dup8
          mstore
          0x20
          swap9
          dup5
          dup11
          swap6
          dup7
          mstore
          dup4
          dup10
          keccak256
            /* \"lib/solmate/src/tokens/ERC20.sol\":3225:3235  msg.sender */
          caller
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup11
          mstore
          dup7
          mstore
          dup4
          dup10
          keccak256
          sload
            /* \"lib/solmate/src/tokens/ERC20.sol\":3287:3315  allowed != type(uint256).max */
          dup6
            /* \"lib/solmate/src/tokens/ERC20.sol\":3298:3315  type(uint256).max */
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
            /* \"lib/solmate/src/tokens/ERC20.sol\":3287:3315  allowed != type(uint256).max */
          dup3
          sub
            /* \"lib/solmate/src/tokens/ERC20.sol\":3283:3363  if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount */
          tag_575
          jumpi
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
        tag_576:
          pop
          pop
          pop
          dup7
          dup9
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":3374:3383  balanceOf */
          0x03
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup6
          mstore
          dup3
          dup9
          keccak256
            /* \"lib/solmate/src/tokens/ERC20.sol\":3374:3399  balanceOf[from] -= amount */
          tag_577
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup6
          dup3
          sload
            /* \"lib/solmate/src/tokens/ERC20.sol\":3374:3399  balanceOf[from] -= amount */
          tag_11
          jump\t// in
        tag_577:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap1
          sstore
          and
          swap6
          dup7
          dup2
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":3374:3383  balanceOf */
          0x03
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup5
          mstore
          keccak256
          dup2
          dup2
          sload
          add
          swap1
          sstore
          dup6
          mload
          swap1
          dup2
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":3594:3620  Transfer(from, to, amount) */
          log3
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mload
          0x01
          dup2
          mstore
          return
            /* \"lib/solmate/src/tokens/ERC20.sol\":3283:3363  if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount */
        tag_575:
            /* \"lib/solmate/src/tokens/ERC20.sol\":3347:3363  allowed - amount */
          tag_578
          swap2
          tag_11
          jump\t// in
        tag_578:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap1
          dup9
          dup11
          mstore
          dup7
          mstore
          dup4
          dup10
          keccak256
            /* \"lib/solmate/src/tokens/ERC20.sol\":3225:3235  msg.sender */
          caller
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup11
          mstore
          dup7
          mstore
          dup4
          dup10
          keccak256
          sstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":3283:3363  if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount */
          dup11
          dup1
          dup6
          jump(tag_576)
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
        tag_74:
          dup4
          dup3
          jumpi(tag_175, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_175
          jumpi
          0x20
          swap1
            /* \"lib/solmate/src/tokens/ERC20.sol\":1304:1330  uint256 public totalSupply */
          0x02
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_72:
          dup4
          dup3
          jumpi(tag_175, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_175
          jumpi
          0x20
          swap1
          mload
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":2915:2944  ERC20 public immutable token0 */
          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
          dup2
          mstore
          return
        tag_70:
          dup4
          jumpi(tag_166, callvalue)
          dup1
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_166
          jumpi
          tag_168
          tag_17
          jump\t// in
        tag_68:
          swap1
          swap2
          pop
          jumpi(tag_183, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_183
          jumpi
          0x20
          swap3
          tag_596
          tag_8
          jump\t// in
        tag_596:
          swap2
          dup4
          calldataload(0x24)
            /* \"lib/solmate/src/tokens/ERC20.sol\":2561:2571  msg.sender */
          swap3
          dup4
          swap3
          caller
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup3
          mstore
          dup8
          mstore
          0xffffffffffffffffffffffffffffffffffffffff
          dup3
          dup3
          keccak256
          swap6
          and
          swap5
          dup6
          dup3
          mstore
          dup8
          mstore
          keccak256
          sstore
          dup3
          mload
          swap1
          dup2
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":2606:2643  Approval(msg.sender, spender, amount) */
          0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
            /* \"lib/solmate/src/tokens/ERC20.sol\":2561:2571  msg.sender */
          dup5
          caller
            /* \"lib/solmate/src/tokens/ERC20.sol\":2606:2643  Approval(msg.sender, spender, amount) */
          swap3
          log3
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mload
          0x01
          dup2
          mstore
          return
        tag_66:
          dup4
          dup3
          jumpi(tag_175, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_175
          jumpi
          0x80
          swap1
          tag_601
          tag_13
          jump\t// in
        tag_601:
          swap1
          0xffffffffffffffffffffffffff
          swap2
          dup3
          dup2
          mload
          and
            /* \"src/ReservoirPair.sol\":5849:5864  lSlot0.reserve1 */
          swap3
          0x20
          dup3
          add
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mload
          and
            /* \"src/ReservoirPair.sol\":5920:5942  lSlot0.packedTimestamp */
          swap2
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0xffff
            /* \"src/ReservoirPair.sol\":5962:5974  lSlot0.index */
          0x60
            /* \"src/ReservoirPair.sol\":4678:4688  0x7FFFFFFF */
          0x7fffffff
            /* \"src/ReservoirPair.sol\":5920:5942  lSlot0.packedTimestamp */
          dup4
          dup6
          add
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mload
            /* \"src/ReservoirPair.sol\":4662:4688  aRawTimestamp & 0x7FFFFFFF */
          and
            /* \"src/ReservoirPair.sol\":5962:5974  lSlot0.index */
          swap4
          add
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mload
          and
          swap3
          dup2
          mload
          swap5
          dup6
          mstore
            /* \"src/ReservoirPair.sol\":5849:5864  lSlot0.reserve1 */
          0x20
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup6
          add
          mstore
          dup4
          add
          mstore
            /* \"src/ReservoirPair.sol\":5962:5974  lSlot0.index */
          0x60
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup3
          add
          mstore
          return
        tag_64:
          swap3
          pop
          pop
          jumpi(tag_183, callvalue)
          dup3
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_183
          jumpi
          dup3
          dup1
          sload
          tag_606
          dup2
          tag_1
          jump\t// in
        tag_606:
          dup1
          dup6
          mstore
          swap2
          0x01
          swap2
          dup1
          dup4
          and
          swap1
          dup2
          iszero
          tag_435
          jumpi
          pop
          0x01
          eq
          tag_609
          jumpi
          pop
          pop
          pop
          tag_439
          dup3
          tag_440
          swap5
          sub
          dup4
          tag_5
          jump\t// in
        tag_609:
          dup1
          dup1
          swap7
          pop
          mstore
          0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563
        tag_613:
          dup3
          dup7
          lt
          tag_614
          jumpi
          pop
          pop
          pop
          tag_439
          dup3
          0x20
          tag_440
          swap6
          dup3
          add
          add
          swap5
          jump(tag_438)
        tag_614:
          dup1
          sload
          0x20
          dup8
          dup8
          add
          dup2
          add
          swap2
          swap1
          swap2
          mstore
          swap1
          swap6
          add
          swap5
          dup2
          add
          jump(tag_613)
        tag_1:
          swap1
          0x01
          dup3
          dup2
          shr
          swap3
          and
          dup1
          iszero
          tag_616
          jumpi
        tag_617:
          0x20
          dup4
          lt
          eq
          tag_618
          jumpi
          jump\t// out
        tag_618:
          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)
          mstore(0x04, 0x22)
          revert(0x00, 0x24)
        tag_616:
          swap2
          0x7f
          and
          swap2
          jump(tag_617)
        tag_2:
          0x80
          dup2
          add
          swap1
          dup2
          lt
          0xffffffffffffffff
          dup3
          gt
          or
          tag_620
          jumpi
          0x40
          mstore
          jump\t// out
        tag_620:
          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)
          mstore(0x04, 0x41)
          revert(0x00, 0x24)
        tag_3:
          0xffffffffffffffff
          dup2
          gt
          tag_620
          jumpi
          0x40
          mstore
          jump\t// out
        tag_4:
          0x40
          dup2
          add
          swap1
          dup2
          lt
          0xffffffffffffffff
          dup3
          gt
          or
          tag_620
          jumpi
          0x40
          mstore
          jump\t// out
        tag_5:
          swap1
          0x1f
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
          swap2
          add
          and
          dup2
          add
          swap1
          dup2
          lt
          0xffffffffffffffff
          dup3
          gt
          or
          tag_620
          jumpi
          0x40
          mstore
          jump\t// out
        tag_6:
          0x00
        tag_628:
          dup4
          dup2
          lt
          tag_629
          jumpi
          pop
          pop
          0x00
          swap2
          add
          mstore
          jump\t// out
        tag_629:
          dup2
          dup2
          add
          mload
          dup4
          dup3
          add
          mstore
          0x20
          add
          jump(tag_628)
        tag_7:
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
          0x1f
          0x40
          swap4
          0x20
          dup5
          mstore
          tag_631
          dup2
          mload
          dup1
          swap3
          dup2
          0x20
          dup9
          add
          mstore
          0x20
          dup9
          dup9
          add
          swap2
          add
          tag_6
          jump\t// in
        tag_631:
          add
          and
          add
          add
          swap1
          jump\t// out
        tag_8:
          calldataload(0x04)
          swap1
          0xffffffffffffffffffffffffffffffffffffffff
          dup3
          and
          dup3
          sub
          tag_632
          jumpi
          jump\t// out
        tag_632:
          0x00
          dup1
          revert
        tag_9:
          calldataload(0x24)
          swap1
          0xffffffffffffffffffffffffffffffffffffffff
          dup3
          and
          dup3
          sub
          tag_632
          jumpi
          jump\t// out
        tag_11:
          swap2
          swap1
          dup3
          sub
          swap2
          dup3
          gt
          tag_636
          jumpi
          jump\t// out
        tag_636:
          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)
          mstore(0x04, 0x11)
          revert(0x00, 0x24)
            /* \"lib/solmate/src/tokens/ERC20.sol\":5327:5504  function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {... */
        tag_12:
          0x00
            /* \"lib/solmate/src/tokens/ERC20.sol\":5410:5423  block.chainid */
          chainid
            /* \"lib/solmate/src/tokens/ERC20.sol\":5427:5443  INITIAL_CHAIN_ID */
          immutable(\"0x81290bb363e768cff9ff9a5d447e434874948b933698048b966fdf5d744bf636\")
            /* \"lib/solmate/src/tokens/ERC20.sol\":5410:5443  block.chainid == INITIAL_CHAIN_ID */
          sub
            /* \"lib/solmate/src/tokens/ERC20.sol\":5427:5443  INITIAL_CHAIN_ID */
          tag_638
          jumpi
            /* \"lib/solmate/src/tokens/ERC20.sol\":5446:5470  INITIAL_DOMAIN_SEPARATOR */
          pop
          immutable(\"0x34382e0db9f4d1365b2614bb97467901a574db9e05159d2f14a2053ade673b06\")
            /* \"lib/solmate/src/tokens/ERC20.sol\":5327:5504  function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {... */
          swap1
          jump\t// out
            /* \"lib/solmate/src/tokens/ERC20.sol\":5410:5497  block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator() */
        tag_638:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mload(0x40)
          dup2
          sload
          dup3
          swap2
          tag_641
          dup3
          tag_1
          jump\t// in
        tag_641:
          dup1
          dup3
          mstore
          dup2
          0x20
          swap5
          dup6
          dup3
          add
          swap5
          0x01
          swap1
          dup8
          dup3
          dup3
          and
          swap2
          dup3
          0x00
          eq
          tag_642
          jumpi
          pop
          pop
          0x01
          eq
          tag_644
          jumpi
        tag_645:
          pop
          tag_646
          swap3
          pop
          sub
          dup3
          tag_5
          jump\t// in
        tag_646:
          mload
            /* \"lib/solmate/src/tokens/ERC20.sol\":5789:5811  keccak256(bytes(name)) */
          swap1
          keccak256
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap2
          mload(0x40)
            /* \"lib/solmate/src/tokens/ERC20.sol\":5640:5935  abi.encode(... */
          swap2
          dup3
          add
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap3
            /* \"lib/solmate/src/tokens/ERC20.sol\":5672:5767  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */
          0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup5
          mstore
          0x40
          dup4
          add
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":5833:5847  keccak256(\"1\") */
          0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x60
          dup4
          add
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":5410:5423  block.chainid */
          chainid
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x80
          dup4
          add
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":5912:5916  this */
          address
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0xa0
          dup4
          add
          mstore
          0xa0
            /* \"lib/solmate/src/tokens/ERC20.sol\":5640:5935  abi.encode(... */
          dup3
          mstore
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0xc0
          dup3
          add
          swap1
          dup3
          dup3
          lt
          0xffffffffffffffff
          dup4
          gt
          or
          tag_647
          jumpi
          pop
          0x40
          mstore
          mload
            /* \"lib/solmate/src/tokens/ERC20.sol\":5613:5949  keccak256(... */
          swap1
          keccak256
            /* \"lib/solmate/src/tokens/ERC20.sol\":5327:5504  function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {... */
          swap1
          jump\t// out
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
        tag_647:
          dup1
          0x4e487b7100000000000000000000000000000000000000000000000000000000
          0x24
          swap3
          mstore
          mstore(0x04, 0x41)
          revert
        tag_644:
          dup8
          dup1
          mstore
          dup7
          swap2
          pop
          dup8
          swap1
          0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563
        tag_649:
          dup6
          dup4
          lt
          tag_650
          jumpi
          pop
          pop
          tag_646
          swap4
          pop
          dup3
          add
          add
          codesize
          jump(tag_645)
        tag_650:
          dup1
          sload
          dup4
          dup9
          add
          dup6
          add
          mstore
          dup7
          swap5
          pop
          dup9
          swap4
          swap1
          swap3
          add
          swap2
          dup2
          add
          jump(tag_649)
        tag_642:
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
          and
          dup9
          mstore
          tag_646
          swap6
          iszero
          iszero
          0x05
          shl
          dup6
          add
          add
          swap3
          pop
          codesize
          swap2
          pop
          tag_645
          swap1
          pop
          jump
        tag_13:
          mload(0x40)
          swap1
          tag_652
          dup3
          tag_2
          jump\t// in
        tag_652:
          dup2
          0x60
            /* \"src/ReservoirPair.sol\":5783:5789  _slot0 */
          0x06
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
          0xffffffffffffffffffffffffff
          dup1
          dup3
          and
          dup5
          mstore
          dup2
          0x68
          shr
          and
          0x20
          dup5
          add
          mstore
          0xffffffff
          dup2
          0xd0
          shr
          and
          0x40
          dup5
          add
          mstore
          0xf0
          shr
          swap2
          add
          mstore
          jump\t// out
            /* \"src/ReservoirPair.sol\":4905:5467  function _lockAndLoad()... */
        tag_14:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          tag_653
          tag_13
          jump\t// in
        tag_653:
          swap1
          0xffffffffffffffffffffffffff
          swap2
          dup3
          dup2
          mload
          and
            /* \"src/ReservoirPair.sol\":5196:5211  lSlot0.reserve1 */
          swap3
          0x20
          dup3
          add
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mload
          and
            /* \"src/ReservoirPair.sol\":5273:5295  lSlot0.packedTimestamp */
          swap2
          0x40
          dup3
          add
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mload
            /* \"src/ReservoirPair.sol\":4662:4688  aRawTimestamp & 0x7FFFFFFF */
          swap1
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x01
            /* \"src/ReservoirPair.sol\":4662:4688  aRawTimestamp & 0x7FFFFFFF */
          dup1
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0xffff
            /* \"src/ReservoirPair.sol\":5315:5327  lSlot0.index */
          0x60
            /* \"src/ReservoirPair.sol\":4678:4688  0x7FFFFFFF */
          0x7fffffff
            /* \"src/ReservoirPair.sol\":4662:4688  aRawTimestamp & 0x7FFFFFFF */
          dup7
          and
            /* \"src/ReservoirPair.sol\":5315:5327  lSlot0.index */
          swap7
          add
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mload
          and
          swap4
            /* \"src/ReservoirPair.sol\":4632:4634  31 */
          0x1f
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          shr
          and
            /* \"src/ReservoirPair.sol\":4615:4639  aRawTimestamp >> 31 == 1 */
          eq
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          tag_654
          jumpi
            /* \"src/ReservoirPair.sol\":4847:4853  _slot0 */
          0x06
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
          0xffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffff
          0xffffffff0000000000000000000000000000000000000000000000000000
            /* \"src/ReservoirPair.sol\":4817:4824  1 << 31 */
          0x80000000
            /* \"src/ReservoirPair.sol\":4872:4892  aTimestamp | lLocked */
          dup7
          or
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0xd0
          shl
          and
          swap2
          and
          or
            /* \"src/ReservoirPair.sol\":4847:4853  _slot0 */
          0x06
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sstore
            /* \"src/ReservoirPair.sol\":4905:5467  function _lockAndLoad()... */
          jump\t// out
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
        tag_654:
          0x64
            /* \"src/ReservoirPair.sol\":5273:5295  lSlot0.packedTimestamp */
          0x40
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mload
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
            /* \"src/ReservoirPair.sol\":5196:5211  lSlot0.reserve1 */
          0x20
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x04
          dup3
          add
          mstore
          0x0a
          0x24
          dup3
          add
          mstore
          0x5245454e5452414e435900000000000000000000000000000000000000000000
          0x44
          dup3
          add
          mstore
          revert
        tag_16:
          iszero
          tag_656
          jumpi
          jump\t// out
        tag_656:
          0x64
          mload(0x40)
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
          0x20
          0x04
          dup3
          add
          mstore
          0x0c
          0x24
          dup3
          add
          mstore
          0x503a20464f5242494444454e0000000000000000000000000000000000000000
          0x44
          dup3
          add
          mstore
          revert
            /* \"src/ReservoirPair.sol\":7293:7635  function updateSwapFee() public {... */
        tag_17:
            /* \"src/ReservoirPair.sol\":7354:7367  customSwapFee */
          0x08
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
          0x00
            /* \"src/ReservoirPair.sol\":7371:7388  type(uint256).max */
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":7354:7388  customSwapFee != type(uint256).max */
          dup3
          eq
            /* \"src/ReservoirPair.sol\":7371:7388  type(uint256).max */
          tag_658
          jumpi
            /* \"src/ReservoirPair.sol\":7354:7443  customSwapFee != type(uint256).max ? customSwapFee : factory.get(swapFeeName).toUint256() */
          pop
        tag_660:
            /* \"src/ReservoirPair.sol\":7469:7476  swapFee */
          0x07
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
            /* \"src/ReservoirPair.sol\":7457:7476  _swapFee == swapFee */
          dup1
          dup3
          eq
            /* \"src/ReservoirPair.sol\":7453:7485  if (_swapFee == swapFee) return; */
          tag_661
          jumpi
            /* \"src/ReservoirPair.sol\":2849:2855  20_000 */
          0x4e20
            /* \"src/ReservoirPair.sol\":7503:7527  _swapFee <= MAX_SWAP_FEE */
          dup3
          gt
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          tag_663
          jumpi
          0x40
            /* \"src/ReservoirPair.sol\":7567:7600  SwapFeeChanged(swapFee, _swapFee) */
          0xad321f810529281bbb90384fd6fecbdda41509a5ccd7bd5aed986ed827f6a026
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap2
          dup2
          mload
          swap1
          dup2
          mstore
          dup4
          0x20
          dup3
          add
          mstore
            /* \"src/ReservoirPair.sol\":7567:7600  SwapFeeChanged(swapFee, _swapFee) */
          log1
            /* \"src/ReservoirPair.sol\":7469:7476  swapFee */
          0x07
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sstore
            /* \"src/ReservoirPair.sol\":7293:7635  function updateSwapFee() public {... */
          jump\t// out
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
        tag_663:
          0x64
          mload(0x40)
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
          0x20
          0x04
          dup3
          add
          mstore
          0x13
          0x24
          dup3
          add
          mstore
          0x503a20494e56414c49445f535741505f46454500000000000000000000000000
          0x44
          dup3
          add
          mstore
          revert
            /* \"src/ReservoirPair.sol\":7453:7485  if (_swapFee == swapFee) return; */
        tag_661:
            /* \"src/ReservoirPair.sol\":7478:7485  return; */
          pop
          pop
          jump\t// out
            /* \"src/ReservoirPair.sol\":7354:7443  customSwapFee != type(uint256).max ? customSwapFee : factory.get(swapFeeName).toUint256() */
        tag_658:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap1
          pop
          mload(0x40)
          0x8eaa6ac000000000000000000000000000000000000000000000000000000000
            /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */
          dup2
          mstore
            /* \"src/ReservoirPair.sol\":7419:7430  swapFeeName */
          immutable(\"0x4c21324e1a4fdca228db96f937188124acece199982b123b328bdd8fee41b354\")
            /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */
          0x04
          dup3
          add
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mstore
            /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */
          0x20
            /* \"src/ReservoirPair.sol\":7407:7414  factory */
          dup2
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x24
            /* \"src/ReservoirPair.sol\":7407:7414  factory */
          dup2
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":7407:7414  factory */
          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */
          gas
          staticcall
          swap2
          dup3
          iszero
          tag_665
          jumpi
          dup1
          swap3
          tag_667
          jumpi
            /* \"src/ReservoirPair.sol\":7354:7443  customSwapFee != type(uint256).max ? customSwapFee : factory.get(swapFeeName).toUint256() */
        tag_668:
          pop
          pop
          jump(tag_660)
            /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */
        tag_667:
          swap1
          swap2
          pop
          0x20
          dup3
          returndatasize
          dup3
          gt
          tag_669
          jumpi
        tag_670:
          dup2
          tag_671
          0x20
          swap4
          dup4
          tag_5
          jump\t// in
        tag_671:
          dup2
          add
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sub
          slt
          tag_166
          jumpi
          pop
          mload
            /* \"src/ReservoirPair.sol\":7407:7431  factory.get(swapFeeName) */
          codesize
          dup1
          jump(tag_668)
        tag_669:
          returndatasize
          swap2
          pop
          jump(tag_670)
        tag_665:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mload(0x40)
          swap1
          returndatasize
          swap1
          dup3
          returndatacopy
          returndatasize
          swap1
          revert
            /* \"src/ReservoirPair.sol\":7641:8058  function updatePlatformFee() public {... */
        tag_18:
            /* \"src/ReservoirPair.sol\":7722:7739  customPlatformFee */
          0x0a
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
            /* \"src/ReservoirPair.sol\":7743:7760  type(uint256).max */
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":7722:7760  customPlatformFee != type(uint256).max */
          dup2
          eq
            /* \"src/ReservoirPair.sol\":7743:7760  type(uint256).max */
          tag_674
          jumpi
            /* \"src/ReservoirPair.sol\":7722:7826  customPlatformFee != type(uint256).max ? customPlatformFee : factory.read(PLATFORM_FEE_NAME).toUint256() */
        tag_676:
            /* \"src/ReservoirPair.sol\":7856:7867  platformFee */
          0x09
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
            /* \"src/ReservoirPair.sol\":7840:7867  _platformFee == platformFee */
          dup1
          dup3
          eq
            /* \"src/ReservoirPair.sol\":7836:7876  if (_platformFee == platformFee) return; */
          tag_661
          jumpi
            /* \"src/ReservoirPair.sol\":2789:2796  500_000 */
          0x07a120
            /* \"src/ReservoirPair.sol\":7894:7926  _platformFee <= MAX_PLATFORM_FEE */
          dup3
          gt
            /* \"src/ReservoirPair.sol\":2439:2460  \"Shared::platformFee\" */
          tag_679
          jumpi
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x40
            /* \"src/ReservoirPair.sol\":7970:8015  PlatformFeeChanged(platformFee, _platformFee) */
          0xc98a8b10b63c929f7799380bb4a0c444c713ebf74d8732f944c915034121aad1
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap2
          dup2
          mload
          swap1
          dup2
          mstore
          dup4
          0x20
          dup3
          add
          mstore
            /* \"src/ReservoirPair.sol\":7970:8015  PlatformFeeChanged(platformFee, _platformFee) */
          log1
            /* \"src/ReservoirPair.sol\":7856:7867  platformFee */
          0x09
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sstore
            /* \"src/ReservoirPair.sol\":7641:8058  function updatePlatformFee() public {... */
          jump\t// out
            /* \"src/ReservoirPair.sol\":2439:2460  \"Shared::platformFee\" */
        tag_679:
          0x64
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mload(0x40)
            /* \"src/ReservoirPair.sol\":2439:2460  \"Shared::platformFee\" */
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
          0x20
          0x04
          dup3
          add
          mstore
          0x17
          0x24
          dup3
          add
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mstore
            /* \"src/ReservoirPair.sol\":2439:2460  \"Shared::platformFee\" */
          0x503a20494e56414c49445f504c4154464f524d5f464545000000000000000000
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x44
          dup3
          add
            /* \"src/ReservoirPair.sol\":2439:2460  \"Shared::platformFee\" */
          mstore
          revert
            /* \"src/ReservoirPair.sol\":7722:7826  customPlatformFee != type(uint256).max ? customPlatformFee : factory.read(PLATFORM_FEE_NAME).toUint256() */
        tag_674:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          pop
            /* \"src/ReservoirPair.sol\":7783:7814  factory.read(PLATFORM_FEE_NAME) */
          tag_681
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mload(0x40)
          tag_682
          dup2
          tag_4
          jump\t// in
        tag_682:
          0x13
          dup2
          mstore
          0x5368617265643a3a706c6174666f726d46656500000000000000000000000000
          0x20
          dup3
          add
          mstore
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":7783:7790  factory */
          immutable(\"0x6b32ed3c094c7965a2ab9b24510920ad0deced64e49c35440dee5f9ab31a7400\")
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":7783:7814  factory.read(PLATFORM_FEE_NAME) */
          tag_51
          jump\t// in
        tag_681:
            /* \"src/ReservoirPair.sol\":7722:7826  customPlatformFee != type(uint256).max ? customPlatformFee : factory.read(PLATFORM_FEE_NAME).toUint256() */
          jump(tag_676)
            /* \"src/ReservoirPair.sol\":8509:8845  function _safeTransfer(address aToken, address aTo, uint256 aValue) internal returns (bool) {... */
        tag_19:
          swap2
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mload(0x40)
            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */
          swap1
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */
          0x20
          dup4
          add
          swap4
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0xa9059cbb00000000000000000000000000000000000000000000000000000000
            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */
          dup6
          mstore
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */
          0x24
          dup4
          add
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mstore
            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */
          0x44
          dup3
          add
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mstore
            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */
          0x44
            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */
          dup2
          mstore
          tag_683
          dup2
          tag_2
          jump\t// in
        tag_683:
          0x00
            /* \"src/ReservoirPair.sol\":8706:8764  aToken.call(abi.encodeWithSelector(SELECTOR, aTo, aValue)) */
          swap3
          dup4
          swap3
          dup4
          dup1
          swap4
          mload
          swap3
          gas
          call
          swap1
            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */
          jumpi(tag_684, iszero(returndatasize))
          returndatasize
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap1
          0xffffffffffffffff
          dup3
          gt
          tag_647
          jumpi
          mload(0x40)
          swap2
          tag_688
            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */
          0x20
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
          0x1f
          dup5
          add
          and
          add
          dup5
          tag_5
          jump\t// in
        tag_688:
          dup3
          mstore
            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */
          returndatasize
          dup2
            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */
          0x20
            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */
          dup5
          add
          returndatacopy
        tag_689:
            /* \"src/ReservoirPair.sol\":8781:8838  success && (data.length == 0 || abi.decode(data, (bool))) */
          dup3
          tag_690
          jumpi
            /* \"src/ReservoirPair.sol\":8774:8838  return success && (data.length == 0 || abi.decode(data, (bool))) */
          pop
          pop
            /* \"src/ReservoirPair.sol\":8509:8845  function _safeTransfer(address aToken, address aTo, uint256 aValue) internal returns (bool) {... */
          swap1
          jump\t// out
            /* \"src/ReservoirPair.sol\":8781:8838  success && (data.length == 0 || abi.decode(data, (bool))) */
        tag_690:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap1
          dup1
          swap3
          pop
          mload
            /* \"src/ReservoirPair.sol\":8793:8809  data.length == 0 */
          swap2
          dup3
          iszero
            /* \"src/ReservoirPair.sol\":8793:8837  data.length == 0 || abi.decode(data, (bool)) */
          swap3
          dup4
          iszero
          tag_692
          jumpi
            /* \"src/ReservoirPair.sol\":8781:8838  success && (data.length == 0 || abi.decode(data, (bool))) */
        tag_693:
          pop
          pop
          pop
            /* \"src/ReservoirPair.sol\":8509:8845  function _safeTransfer(address aToken, address aTo, uint256 aValue) internal returns (bool) {... */
          swap1
          jump\t// out
            /* \"src/ReservoirPair.sol\":8793:8837  data.length == 0 || abi.decode(data, (bool)) */
        tag_692:
            /* \"src/ReservoirPair.sol\":8813:8837  abi.decode(data, (bool)) */
          dup2
          swap3
          swap4
          pop
          swap1
            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */
          0x20
            /* \"src/ReservoirPair.sol\":8813:8837  abi.decode(data, (bool)) */
          swap2
          dup2
          add
            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */
          sub
          slt
          tag_175
          jumpi
            /* \"src/ReservoirPair.sol\":8718:8763  abi.encodeWithSelector(SELECTOR, aTo, aValue) */
          0x20
            /* \"src/ReservoirPair.sol\":8813:8837  abi.decode(data, (bool)) */
          add
            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */
          mload
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap1
          dup2
          iszero
          iszero
          dup3
          sub
          tag_166
          jumpi
            /* \"src/ReservoirPair.sol\":8793:8837  data.length == 0 || abi.decode(data, (bool)) */
          pop
          codesize
          dup1
          dup1
          jump(tag_693)
            /* \"src/ReservoirPair.sol\":2574:2620  bytes4(keccak256(\"transfer(address,uint256)\")) */
        tag_684:
          0x60
          swap1
          jump(tag_689)
            /* \"src/ReservoirPair.sol\":8981:9714  function _checkedTransfer(ERC20 aToken, address aDestination, uint256 aAmount, uint256 aReserve0, uint256 aReserve1)... */
        tag_21:
          swap4
          swap1
          swap2
          swap3
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffff
          dup1
          swap6
          and
            /* \"src/ReservoirPair.sol\":9134:9187  _safeTransfer(address(aToken), aDestination, aAmount) */
          swap2
          tag_698
          dup6
          dup6
          dup6
          tag_19
          jump\t// in
        tag_698:
            /* \"src/ReservoirPair.sol\":9133:9187  !_safeTransfer(address(aToken), aDestination, aAmount) */
          iszero
            /* \"src/ReservoirPair.sol\":9129:9708  if (!_safeTransfer(address(aToken), aDestination, aAmount)) {... */
          tag_699
          jumpi
            /* \"src/ReservoirPair.sol\":8981:9714  function _checkedTransfer(ERC20 aToken, address aDestination, uint256 aAmount, uint256 aReserve0, uint256 aReserve1)... */
        tag_700:
          pop
          pop
          pop
          pop
          pop
          pop
          jump\t// out
            /* \"src/ReservoirPair.sol\":9129:9708  if (!_safeTransfer(address(aToken), aDestination, aAmount)) {... */
        tag_699:
            /* \"src/ReservoirPair.sol\":9239:9245  token0 */
          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup7
          and
            /* \"src/ReservoirPair.sol\":9229:9245  aToken == token0 */
          dup4
          eq
          swap2
            /* \"src/ReservoirPair.sol\":9229:9277  aToken == token0 ? token0Managed : token1Managed */
          dup3
          iszero
          tag_701
          jumpi
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0xffffffffffffffffffffffffff
          dup1
            /* \"src/ReservoirPair.sol\":9248:9261  token0Managed */
          0x0c
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
          and
            /* \"src/ReservoirPair.sol\":9229:9277  aToken == token0 ? token0Managed : token1Managed */
        tag_703:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
          swap2
            /* \"src/ReservoirPair.sol\":9312:9352  aToken == token0 ? aReserve0 : aReserve1 */
          dup4
          iszero
          tag_704
          jumpi
          pop
          swap6
        tag_706:
            /* \"src/ReservoirPair.sol\":9370:9398  reserveOut - tokenOutManaged */
          dup6
          tag_707
          dup4
          dup10
          tag_11
          jump\t// in
        tag_707:
            /* \"src/ReservoirPair.sol\":9370:9408  reserveOut - tokenOutManaged < aAmount */
          lt
          iszero
          tag_719
          jumpi
            /* \"src/ReservoirPair.sol\":9471:9511  aAmount - (reserveOut - tokenOutManaged) */
          tag_710
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap2
            /* \"src/ReservoirPair.sol\":9482:9510  reserveOut - tokenOutManaged */
          tag_711
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap2
            /* \"src/ReservoirPair.sol\":9428:9440  assetManager */
          0x0b
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
          and
            /* \"src/ReservoirPair.sol\":9482:9510  reserveOut - tokenOutManaged */
          swap8
          tag_11
          jump\t// in
        tag_711:
            /* \"src/ReservoirPair.sol\":9471:9511  aAmount - (reserveOut - tokenOutManaged) */
          dup6
          tag_11
          jump\t// in
        tag_710:
            /* \"src/ReservoirPair.sol\":9428:9512  assetManager.returnAsset(aToken == token0, aAmount - (reserveOut - tokenOutManaged)) */
          dup6
          extcodesize
          iszero
          tag_632
          jumpi
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x44
          0x00
          swap3
          dup4
          mload(0x40)
            /* \"src/ReservoirPair.sol\":9428:9512  assetManager.returnAsset(aToken == token0, aAmount - (reserveOut - tokenOutManaged)) */
          swap9
          dup10
          swap5
          dup6
          swap4
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x1566d96d00000000000000000000000000000000000000000000000000000000
            /* \"src/ReservoirPair.sol\":9428:9512  assetManager.returnAsset(aToken == token0, aAmount - (reserveOut - tokenOutManaged)) */
          dup6
          mstore
          0x04
          dup6
          add
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mstore
          0x24
          dup5
          add
          mstore
            /* \"src/ReservoirPair.sol\":9428:9512  assetManager.returnAsset(aToken == token0, aAmount - (reserveOut - tokenOutManaged)) */
          gas
          call
          swap4
          dup5
          iszero
          tag_714
          jumpi
            /* \"src/ReservoirPair.sol\":9538:9591  _safeTransfer(address(aToken), aDestination, aAmount) */
          tag_716
            /* \"src/ReservoirPair.sol\":9428:9512  assetManager.returnAsset(aToken == token0, aAmount - (reserveOut - tokenOutManaged)) */
          swap5
          tag_717
          jumpi
            /* \"src/ReservoirPair.sol\":9366:9698  if (reserveOut - tokenOutManaged < aAmount) {... */
        tag_718:
            /* \"src/ReservoirPair.sol\":9538:9591  _safeTransfer(address(aToken), aDestination, aAmount) */
          pop
          tag_19
          jump\t// in
        tag_716:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          iszero
          tag_719
          jumpi
            /* \"src/ReservoirPair.sol\":9129:9708  if (!_safeTransfer(address(aToken), aDestination, aAmount)) {... */
          codesize
          dup1
          dup1
          dup1
          dup1
          dup1
          jump(tag_700)
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
        tag_719:
          mload(0x40)
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
          0x20
            /* \"src/ReservoirPair.sol\":9428:9512  assetManager.returnAsset(aToken == token0, aAmount - (reserveOut - tokenOutManaged)) */
          0x04
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup3
          add
          mstore
          0x13
          0x24
          dup3
          add
          mstore
          0x52503a205452414e534645525f4641494c454400000000000000000000000000
          0x44
          dup3
          add
          mstore
          0x64
          swap1
          revert
            /* \"src/ReservoirPair.sol\":9428:9512  assetManager.returnAsset(aToken == token0, aAmount - (reserveOut - tokenOutManaged)) */
        tag_717:
          tag_722
          swap1
          tag_3
          jump\t// in
        tag_722:
          codesize
          jump(tag_718)
        tag_714:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mload(0x40)
          returndatasize
          0x00
          dup3
          returndatacopy
          returndatasize
          swap1
          revert
            /* \"src/ReservoirPair.sol\":9312:9352  aToken == token0 ? aReserve0 : aReserve1 */
        tag_704:
          swap1
          pop
          swap6
          jump(tag_706)
            /* \"src/ReservoirPair.sol\":9229:9277  aToken == token0 ? token0Managed : token1Managed */
        tag_701:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0xffffffffffffffffffffffffff
          dup1
            /* \"src/ReservoirPair.sol\":9264:9277  token1Managed */
          0x0c
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
          0x68
          shr
          and
            /* \"src/ReservoirPair.sol\":9229:9277  aToken == token0 ? token0Managed : token1Managed */
          jump(tag_703)
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
        tag_22:
          iszero
          tag_724
          jumpi
          jump\t// out
        tag_724:
          0x64
          mload(0x40)
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
          0x20
          0x04
          dup3
          add
          mstore
          0x0c
          0x24
          dup3
          add
          mstore
          0x52503a204f564552464c4f570000000000000000000000000000000000000000
          0x44
          dup3
          add
          mstore
          revert
            /* \"src/ReservoirPair.sol\":9804:10769  function _updateAndUnlock(... */
        tag_23:
          swap4
          swap3
          swap2
          swap1
          swap3
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0xffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":10007:10037  aBalance0 <= type(uint104).max */
          dup6
          gt
          iszero
            /* \"src/ReservoirPair.sol\":10007:10071  aBalance0 <= type(uint104).max && aBalance1 <= type(uint104).max */
          dup1
          tag_726
          jumpi
            /* \"src/ReservoirPair.sol\":9804:10769  function _updateAndUnlock(... */
        tag_727:
            /* \"src/ReservoirPair.sol\":9999:10088  require(aBalance0 <= type(uint104).max && aBalance1 <= type(uint104).max, \"RP: OVERFLOW\") */
          tag_728
          swap1
          tag_22
          jump\t// in
        tag_728:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0xffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":10106:10136  aReserve0 <= type(uint104).max */
          dup3
          gt
          iszero
            /* \"src/ReservoirPair.sol\":10106:10170  aReserve0 <= type(uint104).max && aReserve1 <= type(uint104).max */
          dup1
          tag_729
          jumpi
            /* \"src/ReservoirPair.sol\":9804:10769  function _updateAndUnlock(... */
        tag_730:
            /* \"src/ReservoirPair.sol\":10098:10187  require(aReserve0 <= type(uint104).max && aReserve1 <= type(uint104).max, \"RP: OVERFLOW\") */
          tag_731
          swap1
          tag_22
          jump\t// in
        tag_731:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0xffffffff
            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */
          dup2
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x7fffffff
            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */
          timestamp
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
          sub
          and
            /* \"src/ReservoirPair.sol\":10407:10423  lTimeElapsed > 0 */
          iszero
          iszero
            /* \"src/ReservoirPair.sol\":10407:10441  lTimeElapsed > 0 && aReserve0 != 0 */
          dup1
          tag_732
          jumpi
            /* \"src/ReservoirPair.sol\":9804:10769  function _updateAndUnlock(... */
        tag_733:
            /* \"src/ReservoirPair.sol\":10407:10459  lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0 */
          dup1
          tag_734
          jumpi
            /* \"src/ReservoirPair.sol\":9804:10769  function _updateAndUnlock(... */
        tag_735:
            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */
          tag_736
          jumpi
            /* \"src/ReservoirPair.sol\":9804:10769  function _updateAndUnlock(... */
        tag_737:
          pop
          pop
            /* \"src/ReservoirPair.sol\":10566:10572  _slot0 */
          0x06
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup1
          sload
          0xffff000000000000000000000000000000000000000000000000000000000000
          and
          0xffffffffffffffffffffffffff
          swap5
          dup6
          and
          swap1
          dup2
          or
          0x68
          dup6
          swap1
          shl
          0xffffffffffffffffffffffffff00000000000000000000000000
          and
          or
          0x7fffffff0000000000000000000000000000000000000000000000000000
            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */
          timestamp
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0xd0
          shl
          and
          or
          swap1
          swap2
          sstore
            /* \"src/ReservoirPair.sol\":10718:10762  Sync(uint104(aBalance0), uint104(aBalance1)) */
          0xff388a12130349259b5ae24af90448f511c2340be808f2c371230fc2da175c44
          swap4
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x40
          swap4
          swap2
          swap3
          pop
          swap1
          dup4
          mload
          swap3
          dup4
          mstore
          and
          0x20
          dup3
          add
          mstore
            /* \"src/ReservoirPair.sol\":10718:10762  Sync(uint104(aBalance0), uint104(aBalance1)) */
          log1
            /* \"src/ReservoirPair.sol\":9804:10769  function _updateAndUnlock(... */
          jump\t// out
            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */
        tag_736:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap1
          swap3
          swap2
          swap4
            /* \"src/curve/stable/StablePair.sol\":11805:11811  _slot0 */
          0x06
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
          swap1
            /* \"src/curve/stable/StablePair.sol\":11791:11818  _observations[_slot0.index] */
          tag_739
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup3
          0xf0
          shr
            /* \"src/curve/stable/StablePair.sol\":11791:11818  _observations[_slot0.index] */
          tag_37
          jump\t// in
        tag_739:
            /* \"src/curve/stable/StablePair.sol\":11921:11942  _getCurrentAPrecise() */
          pop
          swap2
          tag_740
          tag_47
          jump\t// in
        tag_740:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap1
          0xffffffffffffffffffffffffffffffff
            /* \"src/curve/stable/StablePair.sol\":11983:12020  aReserve1 * token1PrecisionMultiplier */
          tag_741
            /* \"src/curve/stable/StablePair.sol\":11944:11981  aReserve0 * token0PrecisionMultiplier */
          tag_742
            /* \"src/curve/stable/StablePair.sol\":11956:11981  token0PrecisionMultiplier */
          dup3
          immutable(\"0x372e991e4284f7d12d6b2461cce9899511b05ac053845de253542adb96f2dca0\")
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
            /* \"src/curve/stable/StablePair.sol\":11944:11981  aReserve0 * token0PrecisionMultiplier */
          dup11
          tag_41
          jump\t// in
        tag_742:
            /* \"src/curve/stable/StablePair.sol\":11995:12020  token1PrecisionMultiplier */
          swap2
          immutable(\"0xc4ba931b733b92a51f51c0955dd7716c7a38f3de911d23a5d0fbd5d23c0fbe8c\")
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
            /* \"src/curve/stable/StablePair.sol\":11983:12020  aReserve1 * token1PrecisionMultiplier */
          dup11
          tag_41
          jump\t// in
        tag_741:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap1
            /* \"src/libraries/StableMath.sol\":409:415  1 days */
          0x01fffffffffffffffe
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0xffffffffffffffff
          dup6
          and
            /* \"src/libraries/StableMath.sol\":409:415  1 days */
          swap5
          0x01
          shl
          and
            /* \"src/libraries/StableOracleMath.sol\":1988:2084  StableMath._computeLiquidityFromAdjustedBalances(reserve0, reserve1, 2 * amplificationParameter) */
          swap4
          tag_743
          dup6
          dup5
          dup5
          tag_58
          jump\t// in
        tag_743:
            /* \"src/libraries/StableMath.sol\":409:415  1 days */
          swap1
          dup1
          dup7
          div
            /* \"src/libraries/StableOracleMath.sol\":2057:2058  2 */
          0x02
            /* \"src/libraries/StableMath.sol\":409:415  1 days */
          eq
          swap1
          iszero
          or
          iszero
          tag_636
          jumpi
            /* \"src/libraries/StableOracleMath.sol\":2182:2209  (invariant * a) - invariant */
          tag_746
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap1
            /* \"src/libraries/StableOracleMath.sol\":2183:2196  invariant * a */
          tag_331
            /* \"src/libraries/StableMath.sol\":320:323  100 */
          0x64
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup8
          div
            /* \"src/libraries/StableOracleMath.sol\":2183:2196  invariant * a */
          dup3
          tag_41
          jump\t// in
            /* \"src/libraries/StableOracleMath.sol\":2182:2209  (invariant * a) - invariant */
        tag_746:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap1
            /* \"src/libraries/StableMath.sol\":320:323  100 */
          0x64
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup6
          div
            /* \"src/libraries/StableMath.sol\":409:415  1 days */
          0x01
          shl
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap1
            /* \"src/libraries/StableMath.sol\":320:323  100 */
          0x64
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup7
          div
            /* \"src/libraries/StableMath.sol\":409:415  1 days */
          dup3
          div
            /* \"src/libraries/StableOracleMath.sol\":2057:2058  2 */
          0x02
            /* \"src/libraries/StableMath.sol\":409:415  1 days */
          eq
            /* \"src/libraries/StableMath.sol\":320:323  100 */
          0x64
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup8
          div
            /* \"src/libraries/StableMath.sol\":409:415  1 days */
          iszero
          or
          iszero
          tag_636
          jumpi
            /* \"src/libraries/StableOracleMath.sol\":2496:2540  axy2 + ((a * reserve0).mulWadDown(reserve0)) */
          tag_750
            /* \"src/libraries/StableOracleMath.sol\":2236:2252  a * 2 * reserve0 */
          dup7
            /* \"src/libraries/StableOracleMath.sol\":2504:2539  (a * reserve0).mulWadDown(reserve0) */
          tag_751
            /* \"src/libraries/StableOracleMath.sol\":2236:2252  a * 2 * reserve0 */
          dup4
            /* \"src/libraries/StableOracleMath.sol\":2505:2517  a * reserve0 */
          tag_761
            /* \"src/libraries/StableOracleMath.sol\":2236:2252  a * 2 * reserve0 */
          dup2
            /* \"src/libraries/StableMath.sol\":320:323  100 */
          0x64
            /* \"src/libraries/StableOracleMath.sol\":2354:2425  axy2 + ((a * reserve1).mulWadDown(reserve1)) - (b.mulWadDown(reserve1)) */
          tag_753
            /* \"src/libraries/StableOracleMath.sol\":2236:2252  a * 2 * reserve0 */
          dup12
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":795:816  mulDivDown(x, y, WAD) */
          tag_754
            /* \"src/libraries/StableOracleMath.sol\":2354:2398  axy2 + ((a * reserve1).mulWadDown(reserve1)) */
          tag_755
            /* \"src/libraries/StableOracleMath.sol\":2362:2397  (a * reserve1).mulWadDown(reserve1) */
          tag_756
            /* \"src/libraries/StableOracleMath.sol\":2496:2567  axy2 + ((a * reserve0).mulWadDown(reserve0)) - (b.mulWadDown(reserve0)) */
          tag_757
            /* \"src/libraries/StableOracleMath.sol\":2236:2252  a * 2 * reserve0 */
          swap16
            /* \"src/libraries/StableOracleMath.sol\":2363:2375  a * reserve1 */
          tag_761
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":795:816  mulDivDown(x, y, WAD) */
          tag_754
            /* \"src/libraries/StableOracleMath.sol\":2236:2252  a * 2 * reserve0 */
          swap16
          dup9
            /* \"src/libraries/StableOracleMath.sol\":2235:2274  (a * 2 * reserve0).mulWadDown(reserve1) */
          tag_760
            /* \"src/libraries/StableOracleMath.sol\":2236:2252  a * 2 * reserve0 */
          dup5
          tag_761
          dup14
          dup3
          swap6
          tag_41
          jump\t// in
        tag_761:
            /* \"src/libraries/StableOracleMath.sol\":2235:2274  (a * 2 * reserve0).mulWadDown(reserve1) */
          tag_61
          jump\t// in
        tag_760:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap15
          div
            /* \"src/libraries/StableOracleMath.sol\":2363:2375  a * reserve1 */
          tag_41
          jump\t// in
            /* \"src/libraries/StableOracleMath.sol\":2362:2397  (a * reserve1).mulWadDown(reserve1) */
        tag_756:
            /* \"src/libraries/StableOracleMath.sol\":2354:2398  axy2 + ((a * reserve1).mulWadDown(reserve1)) */
          dup11
          tag_24
          jump\t// in
        tag_755:
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":795:816  mulDivDown(x, y, WAD) */
          swap2
          dup14
          tag_61
          jump\t// in
        tag_754:
            /* \"src/libraries/StableOracleMath.sol\":2354:2425  axy2 + ((a * reserve1).mulWadDown(reserve1)) - (b.mulWadDown(reserve1)) */
          swap1
          tag_11
          jump\t// in
        tag_753:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap13
          div
            /* \"src/libraries/StableOracleMath.sol\":2505:2517  a * reserve0 */
          tag_41
          jump\t// in
            /* \"src/libraries/StableOracleMath.sol\":2504:2539  (a * reserve0).mulWadDown(reserve0) */
        tag_751:
            /* \"src/libraries/StableOracleMath.sol\":2496:2540  axy2 + ((a * reserve0).mulWadDown(reserve0)) */
          swap1
          tag_24
          jump\t// in
        tag_750:
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":795:816  mulDivDown(x, y, WAD) */
          swap3
          tag_61
          jump\t// in
            /* \"src/libraries/StableOracleMath.sol\":2496:2567  axy2 + ((a * reserve0).mulWadDown(reserve0)) - (b.mulWadDown(reserve0)) */
        tag_757:
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":655:659  1e18 */
          0x0de0b6b3a7640000
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":2274:2762  assembly {... */
          0x12725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f21
          dup5
          gt
          dup2
          mul
          iszero
          dup3
          mul
          iszero
          tag_632
          jumpi
            /* \"src/curve/stable/StablePair.sol\":12906:12933  _observations[_slot0.index] */
          tag_764
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":2274:2762  assembly {... */
          swap4
          mul
          swap1
          dup1
          dup3
          div
          swap2
          mod
          iszero
          iszero
          add
            /* \"src/libraries/StableOracleMath.sol\":725:762  LogCompression.toLowResLog(spotPrice) */
          swap4
            /* \"src/libraries/StableOracleMath.sol\":3356:3389  LogCompression.toLowResLog(sqrtK) */
          tag_765
            /* \"src/libraries/StableOracleMath.sol\":3306:3325  reserve0 * reserve1 */
          tag_766
            /* \"src/curve/stable/StablePair.sol\":12267:12330  _calcClampedPrice(currRawPrice, prevClampedPrice, aTimeElapsed) */
          tag_767
            /* \"src/libraries/StableOracleMath.sol\":725:762  LogCompression.toLowResLog(spotPrice) */
          tag_768
          dup9
          tag_54
          jump\t// in
        tag_768:
            /* \"src/libraries/StableOracleMath.sol\":779:814  rawLogSpotPrice >= type(int112).min */
          swap8
            /* \"src/libraries/StableOracleMath.sol\":798:814  type(int112).min */
          0xffffffffffffffffffffffffffffffffffff8000000000000000000000000000
            /* \"src/libraries/StableOracleMath.sol\":779:814  rawLogSpotPrice >= type(int112).min */
          dup10
          slt
          iszero
            /* \"src/libraries/StableOracleMath.sol\":779:853  rawLogSpotPrice >= type(int112).min && rawLogSpotPrice <= type(int112).max */
          dup1
          tag_769
          jumpi
            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */
        tag_770:
            /* \"src/libraries/StableOracleMath.sol\":772:854  assert(rawLogSpotPrice >= type(int112).min && rawLogSpotPrice <= type(int112).max) */
          tag_771
          swap1
          tag_48
          jump\t// in
        tag_771:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0xffffffff
            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */
          dup11
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x7fffffff
            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */
          timestamp
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
          sub
          and
          swap1
            /* \"src/curve/stable/StablePair.sol\":12299:12315  prevClampedPrice */
          0x01000e
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
            /* \"src/curve/stable/StablePair.sol\":12267:12330  _calcClampedPrice(currRawPrice, prevClampedPrice, aTimeElapsed) */
          swap1
          tag_49
          jump\t// in
        tag_767:
            /* \"src/libraries/StableOracleMath.sol\":3306:3325  reserve0 * reserve1 */
          swap12
          swap1
          swap11
          tag_41
          jump\t// in
        tag_766:
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */
          0xb5
          dup2
          0x010000000000000000000000000000000000
          dup2
          lt
          iszero
          tag_772
          jumpi
            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */
        tag_773:
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */
          dup1
          0x01000000000000000000
          0x010000
          swap3
          lt
          iszero
          tag_774
          jumpi
            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */
        tag_775:
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */
          0x010000000000
          dup2
          lt
          iszero
          tag_776
          jumpi
            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */
        tag_777:
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */
          0x01000000
          dup2
          lt
          iszero
          tag_778
          jumpi
            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */
        tag_779:
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */
          add
          mul
          0x12
          shr
          dup1
          dup3
          div
          add
            /* \"src/libraries/StableMath.sol\":409:415  1 days */
          0x01
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */
          shr
          dup1
          dup3
          div
          add
            /* \"src/libraries/StableMath.sol\":409:415  1 days */
          0x01
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */
          shr
          dup1
          dup3
          div
          add
            /* \"src/libraries/StableMath.sol\":409:415  1 days */
          0x01
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */
          shr
          dup1
          dup3
          div
          add
            /* \"src/libraries/StableMath.sol\":409:415  1 days */
          0x01
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */
          shr
          dup1
          dup3
          div
          add
            /* \"src/libraries/StableMath.sol\":409:415  1 days */
          0x01
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */
          shr
          dup1
          dup3
          div
          add
            /* \"src/libraries/StableMath.sol\":409:415  1 days */
          0x01
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */
          shr
          dup1
          dup3
          div
          add
            /* \"src/libraries/StableMath.sol\":409:415  1 days */
          0x01
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */
          shr
          dup1
          dup1
          swap3
          div
          lt
          swap1
          sub
            /* \"src/libraries/StableOracleMath.sol\":3356:3389  LogCompression.toLowResLog(sqrtK) */
          tag_54
          jump\t// in
        tag_765:
            /* \"src/libraries/StableOracleMath.sol\":3406:3435  rawResult >= type(int112).min */
          swap8
            /* \"src/libraries/StableOracleMath.sol\":798:814  type(int112).min */
          0xffffffffffffffffffffffffffffffffffff8000000000000000000000000000
            /* \"src/libraries/StableOracleMath.sol\":3406:3435  rawResult >= type(int112).min */
          dup10
          slt
          iszero
            /* \"src/libraries/StableOracleMath.sol\":3406:3468  rawResult >= type(int112).min && rawResult <= type(int112).max */
          dup1
          tag_780
          jumpi
            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */
        tag_781:
            /* \"src/libraries/StableOracleMath.sol\":3399:3469  assert(rawResult >= type(int112).min && rawResult <= type(int112).max) */
          tag_782
          swap1
          tag_48
          jump\t// in
        tag_782:
            /* \"src/curve/stable/StablePair.sol\":12299:12315  prevClampedPrice */
          0x01000e
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sstore
          sload
          0xffffffff
            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */
          dup7
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x7fffffff
            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */
          timestamp
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
          sub
          and
            /* \"src/curve/stable/StablePair.sol\":11805:11811  _slot0 */
          0x06
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          signextend
          swap2
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
          0xffff000000000000000000000000000000000000000000000000000000000000
            /* \"src/libraries/StableMath.sol\":409:415  1 days */
          0x01
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup4
          0xf0
          shr
          add
          0xf0
          shl
          and
          swap2
          and
          or
          swap2
          dup3
            /* \"src/curve/stable/StablePair.sol\":11805:11811  _slot0 */
          0x06
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sstore
          mload(0x40)
          swap6
          tag_783
          dup8
          tag_2
          jump\t// in
        tag_783:
          0xffffffff
            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */
          dup9
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x7fffffff
            /* \"src/ReservoirPair.sol\":4448:4463  block.timestamp */
          timestamp
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
          sub
          and
          0x0d
          signextend
          swap1
          0x0d
          signextend
          mul
          0x0d
          signextend
          dup3
          0x0d
          signextend
          add
          0x0d
          signextend
          dup7
          mstore
            /* \"src/curve/stable/StablePair.sol\":12936:13010  Observation(logAccRawPrice, logAccClampedPrice, logAccLiq, aTimestampLast) */
          dup1
          0x20
          dup8
          add
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap11
            /* \"src/curve/stable/StablePair.sol\":11805:11811  _slot0 */
          0x06
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          signextend
          mul
            /* \"src/curve/stable/StablePair.sol\":11805:11811  _slot0 */
          0x06
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          signextend
          dup3
          0x70
          shr
            /* \"src/curve/stable/StablePair.sol\":11805:11811  _slot0 */
          0x06
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          signextend
          add
            /* \"src/curve/stable/StablePair.sol\":11805:11811  _slot0 */
          0x06
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          signextend
          dup11
          mstore
          0x40
            /* \"src/curve/stable/StablePair.sol\":12936:13010  Observation(logAccRawPrice, logAccClampedPrice, logAccLiq, aTimestampLast) */
          dup7
          add
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap9
            /* \"src/curve/stable/StablePair.sol\":11805:11811  _slot0 */
          0x06
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          signextend
          mul
            /* \"src/curve/stable/StablePair.sol\":11805:11811  _slot0 */
          0x06
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          signextend
          swap1
          0xa8
          shr
            /* \"src/curve/stable/StablePair.sol\":11805:11811  _slot0 */
          0x06
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          signextend
          add
            /* \"src/curve/stable/StablePair.sol\":11805:11811  _slot0 */
          0x06
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          signextend
          dup8
          mstore
          0xffffffff
            /* \"src/curve/stable/StablePair.sol\":12936:13010  Observation(logAccRawPrice, logAccClampedPrice, logAccLiq, aTimestampLast) */
          0x60
          dup6
          add
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap6
          and
          dup6
          mstore
          0xf0
          shr
            /* \"src/curve/stable/StablePair.sol\":12906:12933  _observations[_slot0.index] */
          tag_37
          jump\t// in
        tag_764:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          tag_784
          jumpi
          swap2
          mload
          swap6
          mload
          swap5
          mload
          swap3
          mload
          0xffffffff00000000000000000000000000000000000000000000000000000000
          0xe0
          swap2
          swap1
          swap2
          shl
          and
          0xa8
          swap4
          swap1
          swap4
          shl
          0xffffffffffffff000000000000000000000000000000000000000000
          and
          0xffffffffffffffffffffffffffff
          swap1
          swap7
          and
          0x70
          swap6
          swap1
          swap6
          shl
          0xffffffffffffff0000000000000000000000000000
          and
          swap5
          swap1
          swap5
          or
          swap5
          swap1
          swap5
          or
          or
          swap1
          swap3
          sstore
          swap1
          dup1
          0xffffffffffffffffffffffffff
          dup1
            /* \"src/ReservoirPair.sol\":10403:10556  if (lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0) {... */
          jump(tag_737)
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
        tag_784:
          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)
          mstore(0x04, 0x00)
          revert(0x00, 0x24)
            /* \"src/libraries/StableOracleMath.sol\":3406:3468  rawResult >= type(int112).min && rawResult <= type(int112).max */
        tag_780:
          pop
            /* \"src/libraries/StableOracleMath.sol\":3452:3468  type(int112).max */
          0x7fffffffffffffffffffffffffff
            /* \"src/libraries/StableOracleMath.sol\":3439:3468  rawResult <= type(int112).max */
          dup10
          sgt
          iszero
            /* \"src/libraries/StableOracleMath.sol\":3406:3468  rawResult >= type(int112).min && rawResult <= type(int112).max */
          jump(tag_781)
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":5858:9136  assembly {... */
        tag_778:
          0x10
          shr
          swap2
          0x08
          shl
          swap2
          jump(tag_779)
        tag_776:
          0x20
          shr
          swap2
          0x10
          shl
          swap2
          jump(tag_777)
        tag_774:
          0x40
          shr
          swap2
          0x20
          shl
          swap2
          jump(tag_775)
        tag_772:
          pop
          0xb50000000000000000
          swap1
          pop
          0x80
          dup3
          swap1
          shr
          jump(tag_773)
            /* \"src/libraries/StableOracleMath.sol\":779:853  rawLogSpotPrice >= type(int112).min && rawLogSpotPrice <= type(int112).max */
        tag_769:
          pop
            /* \"src/libraries/StableOracleMath.sol\":837:853  type(int112).max */
          0x7fffffffffffffffffffffffffff
            /* \"src/libraries/StableOracleMath.sol\":818:853  rawLogSpotPrice <= type(int112).max */
          dup10
          sgt
          iszero
            /* \"src/libraries/StableOracleMath.sol\":779:853  rawLogSpotPrice >= type(int112).min && rawLogSpotPrice <= type(int112).max */
          jump(tag_770)
            /* \"src/ReservoirPair.sol\":10407:10459  lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0 */
        tag_734:
            /* \"src/ReservoirPair.sol\":10445:10459  aReserve1 != 0 */
          pop
          dup3
          iszero
          iszero
            /* \"src/ReservoirPair.sol\":10407:10459  lTimeElapsed > 0 && aReserve0 != 0 && aReserve1 != 0 */
          jump(tag_735)
            /* \"src/ReservoirPair.sol\":10407:10441  lTimeElapsed > 0 && aReserve0 != 0 */
        tag_732:
            /* \"src/ReservoirPair.sol\":10427:10441  aReserve0 != 0 */
          pop
          dup2
          iszero
          iszero
            /* \"src/ReservoirPair.sol\":10407:10441  lTimeElapsed > 0 && aReserve0 != 0 */
          jump(tag_733)
            /* \"src/ReservoirPair.sol\":10106:10170  aReserve0 <= type(uint104).max && aReserve1 <= type(uint104).max */
        tag_729:
          pop
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0xffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":10140:10170  aReserve1 <= type(uint104).max */
          dup4
          gt
          iszero
            /* \"src/ReservoirPair.sol\":10106:10170  aReserve0 <= type(uint104).max && aReserve1 <= type(uint104).max */
          jump(tag_730)
            /* \"src/ReservoirPair.sol\":10007:10071  aBalance0 <= type(uint104).max && aBalance1 <= type(uint104).max */
        tag_726:
          pop
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0xffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":10041:10071  aBalance1 <= type(uint104).max */
          dup5
          gt
          iszero
            /* \"src/ReservoirPair.sol\":10007:10071  aBalance0 <= type(uint104).max && aBalance1 <= type(uint104).max */
          jump(tag_727)
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
        tag_24:
          swap2
          swap1
          dup3
          add
          dup1
          swap3
          gt
          tag_636
          jumpi
          jump\t// out
            /* \"src/ReservoirPair.sol\":12869:13005  function _totalToken0() internal view returns (uint256) {... */
        tag_25:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mload(0x40)
          0x70a0823100000000000000000000000000000000000000000000000000000000
            /* \"src/ReservoirPair.sol\":12942:12973  token0.balanceOf(address(this)) */
          dup2
          mstore
            /* \"src/ReservoirPair.sol\":12967:12971  this */
          address
            /* \"src/ReservoirPair.sol\":12942:12973  token0.balanceOf(address(this)) */
          0x04
          dup3
          add
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mstore
            /* \"src/ReservoirPair.sol\":12942:12973  token0.balanceOf(address(this)) */
          0x20
            /* \"src/ReservoirPair.sol\":12942:12948  token0 */
          dup2
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x24
            /* \"src/ReservoirPair.sol\":12942:12948  token0 */
          dup2
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":12942:12948  token0 */
          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":12942:12973  token0.balanceOf(address(this)) */
          gas
          staticcall
          dup1
          iszero
          tag_714
          jumpi
          0x00
          swap1
          tag_790
          jumpi
            /* \"src/ReservoirPair.sol\":12869:13005  function _totalToken0() internal view returns (uint256) {... */
        tag_791:
            /* \"src/ReservoirPair.sol\":12942:12998  token0.balanceOf(address(this)) + uint256(token0Managed) */
          tag_792
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap2
          pop
          0xffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":12984:12997  token0Managed */
          0x0c
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
          and
            /* \"src/ReservoirPair.sol\":12942:12998  token0.balanceOf(address(this)) + uint256(token0Managed) */
          swap1
          tag_24
          jump\t// in
        tag_792:
            /* \"src/ReservoirPair.sol\":12869:13005  function _totalToken0() internal view returns (uint256) {... */
          swap1
          jump\t// out
            /* \"src/ReservoirPair.sol\":12942:12973  token0.balanceOf(address(this)) */
        tag_790:
          0x20
          dup3
          returndatasize
          dup3
          gt
          tag_793
          jumpi
        tag_794:
          dup2
          tag_795
          0x20
          swap4
          dup4
          tag_5
          jump\t// in
        tag_795:
          dup2
          add
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sub
          slt
          tag_166
          jumpi
          pop
            /* \"src/ReservoirPair.sol\":12942:12998  token0.balanceOf(address(this)) + uint256(token0Managed) */
          tag_792
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap1
          mload
            /* \"src/ReservoirPair.sol\":12942:12973  token0.balanceOf(address(this)) */
          jump(tag_791)
        tag_793:
          returndatasize
          swap2
          pop
          jump(tag_794)
            /* \"src/ReservoirPair.sol\":13011:13147  function _totalToken1() internal view returns (uint256) {... */
        tag_26:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mload(0x40)
          0x70a0823100000000000000000000000000000000000000000000000000000000
            /* \"src/ReservoirPair.sol\":13084:13115  token1.balanceOf(address(this)) */
          dup2
          mstore
            /* \"src/ReservoirPair.sol\":13109:13113  this */
          address
            /* \"src/ReservoirPair.sol\":13084:13115  token1.balanceOf(address(this)) */
          0x04
          dup3
          add
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mstore
            /* \"src/ReservoirPair.sol\":13084:13115  token1.balanceOf(address(this)) */
          0x20
            /* \"src/ReservoirPair.sol\":13084:13090  token1 */
          dup2
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x24
            /* \"src/ReservoirPair.sol\":13084:13090  token1 */
          dup2
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":13084:13090  token1 */
          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":13084:13115  token1.balanceOf(address(this)) */
          gas
          staticcall
          dup1
          iszero
          tag_714
          jumpi
          0x00
          swap1
          tag_800
          jumpi
            /* \"src/ReservoirPair.sol\":13011:13147  function _totalToken1() internal view returns (uint256) {... */
        tag_801:
            /* \"src/ReservoirPair.sol\":13084:13140  token1.balanceOf(address(this)) + uint256(token1Managed) */
          tag_792
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap2
          pop
          0xffffffffffffffffffffffffff
            /* \"src/ReservoirPair.sol\":13126:13139  token1Managed */
          0x0c
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
          0x68
          shr
          and
            /* \"src/ReservoirPair.sol\":13084:13140  token1.balanceOf(address(this)) + uint256(token1Managed) */
          swap1
          tag_24
          jump\t// in
            /* \"src/ReservoirPair.sol\":13084:13115  token1.balanceOf(address(this)) */
        tag_800:
          0x20
          dup3
          returndatasize
          dup3
          gt
          tag_803
          jumpi
        tag_804:
          dup2
          tag_805
          0x20
          swap4
          dup4
          tag_5
          jump\t// in
        tag_805:
          dup2
          add
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sub
          slt
          tag_166
          jumpi
          pop
            /* \"src/ReservoirPair.sol\":13084:13140  token1.balanceOf(address(this)) + uint256(token1Managed) */
          tag_792
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap1
          mload
            /* \"src/ReservoirPair.sol\":13084:13115  token1.balanceOf(address(this)) */
          jump(tag_801)
        tag_803:
          returndatasize
          swap2
          pop
          jump(tag_804)
            /* \"src/ReservoirPair.sol\":13916:14584  function _syncManaged(uint256 aReserve0, uint256 aReserve1)... */
        tag_28:
          swap1
          swap2
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffff
          swap2
          dup3
            /* \"src/ReservoirPair.sol\":14074:14086  assetManager */
          0x0b
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
          and
            /* \"src/ReservoirPair.sol\":14066:14101  address(assetManager) == address(0) */
          swap3
          dup4
          iszero
            /* \"src/ReservoirPair.sol\":14062:14157  if (address(assetManager) == address(0)) {... */
          tag_808
          jumpi
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mload(0x40)
          0xd4fac45d00000000000000000000000000000000000000000000000000000000
            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */
          dup1
          dup3
          mstore
            /* \"src/ReservoirPair.sol\":14216:14220  this */
          address
            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */
          0x04
          dup4
          add
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mstore
            /* \"src/ReservoirPair.sol\":14222:14228  token0 */
          immutable(\"0xde991e60ec0cca793f4b5908e88756ce6119e0fd610855feb272687c4d0b5ea1\")
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffff
          dup2
          and
          0x24
          dup5
          add
          mstore
          swap2
          swap6
            /* \"src/ReservoirPair.sol\":14222:14228  token0 */
          swap2
          swap4
            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */
          0x20
          swap4
            /* \"src/ReservoirPair.sol\":14222:14228  token0 */
          swap1
          swap3
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap1
            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */
          dup5
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup9
          dup1
          0x44
          dup2
          add
            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */
          sub
          dup2
          0x00
          dup1
          swap7
          gas
          call
          swap8
          dup9
          iszero
          tag_811
          jumpi
          dup3
          swap9
          tag_813
          jumpi
            /* \"src/ReservoirPair.sol\":13916:14584  function _syncManaged(uint256 aReserve0, uint256 aReserve1)... */
        tag_814:
          pop
            /* \"src/ReservoirPair.sol\":14074:14086  assetManager */
          0x0b
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
          mload(0x40)
            /* \"src/ReservoirPair.sol\":14264:14301  assetManager.getBalance(this, token1) */
          swap4
          dup5
          mstore
            /* \"src/ReservoirPair.sol\":14216:14220  this */
          address
            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */
          0x04
            /* \"src/ReservoirPair.sol\":14264:14301  assetManager.getBalance(this, token1) */
          dup6
          add
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mstore
            /* \"src/ReservoirPair.sol\":14294:14300  token1 */
          immutable(\"0x5f393174ab70944f4de50797ef119cd8fd9bf56cfba5b01db21e1a1dd6c7203b\")
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffff
          dup2
          and
          0x24
          dup7
          add
          mstore
            /* \"src/ReservoirPair.sol\":14294:14300  token1 */
          swap4
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap3
          swap2
            /* \"src/ReservoirPair.sol\":14294:14300  token1 */
          dup7
          swap2
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup5
          swap2
          0x44
          swap2
          dup4
          swap2
          dup7
          swap2
          and
            /* \"src/ReservoirPair.sol\":14264:14301  assetManager.getBalance(this, token1) */
          gas
          call
          swap5
          dup6
          iszero
          tag_816
          jumpi
          dup2
          swap6
          tag_818
          jumpi
            /* \"src/ReservoirPair.sol\":13916:14584  function _syncManaged(uint256 aReserve0, uint256 aReserve1)... */
        tag_819:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          pop
          pop
          pop
            /* \"src/ReservoirPair.sol\":14551:14577  lToken1Managed.toUint104() */
          tag_820
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0xffffffffffff0000000000000000000000000000000000000000000000000000
          swap3
            /* \"src/ReservoirPair.sol\":14499:14525  lToken0Managed.toUint104() */
          tag_821
            /* \"src/ReservoirPair.sol\":14409:14472  _handleReport(token1, aReserve1, token1Managed, lToken1Managed) */
          tag_822
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup7
          0xffffffffffffffffffffffffff00000000000000000000000000
          swap6
            /* \"src/ReservoirPair.sol\":14324:14387  _handleReport(token0, aReserve0, token0Managed, lToken0Managed) */
          tag_823
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup13
            /* \"src/ReservoirPair.sol\":14357:14370  token0Managed */
          0x0c
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
          swap12
          dup13
          swap8
          0xffffffffffffffffffffffffff
          dup1
          swap10
          and
            /* \"src/ReservoirPair.sol\":14324:14387  _handleReport(token0, aReserve0, token0Managed, lToken0Managed) */
          swap2
          tag_31
          jump\t// in
        tag_823:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap13
          dup6
          dup12
          0x68
          shr
          and
            /* \"src/ReservoirPair.sol\":14409:14472  _handleReport(token1, aReserve1, token1Managed, lToken1Managed) */
          swap2
          tag_31
          jump\t// in
        tag_822:
            /* \"src/ReservoirPair.sol\":14499:14525  lToken0Managed.toUint104() */
          swap9
          tag_29
          jump\t// in
        tag_821:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
            /* \"src/ReservoirPair.sol\":14551:14577  lToken1Managed.toUint104() */
          swap4
          tag_29
          jump\t// in
        tag_820:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x68
          shl
          and
          swap3
          and
          or
          or
            /* \"src/ReservoirPair.sol\":14357:14370  token0Managed */
          0x0c
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sstore
            /* \"src/ReservoirPair.sol\":13916:14584  function _syncManaged(uint256 aReserve0, uint256 aReserve1)... */
          jump\t// out
            /* \"src/ReservoirPair.sol\":14264:14301  assetManager.getBalance(this, token1) */
        tag_818:
          swap1
          swap2
          dup1
          swap4
          swap6
          pop
          dup2
          returndatasize
          dup4
          gt
          tag_824
          jumpi
        tag_825:
          tag_826
          dup2
          dup4
          tag_5
          jump\t// in
        tag_826:
          dup2
          add
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sub
          slt
          tag_166
          jumpi
          pop
          mload
          swap2
            /* \"src/ReservoirPair.sol\":14551:14577  lToken1Managed.toUint104() */
          tag_820
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup3
            /* \"src/ReservoirPair.sol\":14499:14525  lToken0Managed.toUint104() */
          tag_821
            /* \"src/ReservoirPair.sol\":14264:14301  assetManager.getBalance(this, token1) */
          jump(tag_819)
        tag_824:
          pop
          returndatasize
          jump(tag_825)
        tag_816:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          pop
          mload(0x40)
          swap1
          returndatasize
          swap1
          dup3
          returndatacopy
          returndatasize
          swap1
          revert
            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */
        tag_813:
          swap1
          swap8
          pop
          dup5
          dup2
          dup2
          returndatasize
          dup4
          gt
          tag_829
          jumpi
        tag_830:
          tag_831
          dup2
          dup4
          tag_5
          jump\t// in
        tag_831:
          dup2
          add
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sub
          slt
          tag_175
          jumpi
          mload
            /* \"src/ReservoirPair.sol\":14192:14229  assetManager.getBalance(this, token0) */
          swap7
          codesize
          jump(tag_814)
        tag_829:
          pop
          returndatasize
          jump(tag_830)
        tag_811:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mload(0x40)
          returndatasize
          dup5
          dup3
          returndatacopy
          returndatasize
          swap1
          revert
            /* \"src/ReservoirPair.sol\":14062:14157  if (address(assetManager) == address(0)) {... */
        tag_808:
          pop
            /* \"src/ReservoirPair.sol\":14117:14146  return (aReserve0, aReserve1) */
          swap3
          swap2
          pop
          jump\t// out
            /* \"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":10566:10758  function toUint104(uint256 value) internal pure returns (uint104) {... */
        tag_29:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0xffffffffffffffffffffffffff
            /* \"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":10650:10676  value <= type(uint104).max */
          swap1
          dup2
          dup2
          gt
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          tag_834
          jumpi
          and
            /* \"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":10566:10758  function toUint104(uint256 value) internal pure returns (uint104) {... */
          swap1
          jump\t// out
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
        tag_834:
          0x84
          mload(0x40)
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
          0x20
          0x04
          dup3
          add
          mstore
          0x27
          0x24
          dup3
          add
          mstore
          0x53616665436173743a2076616c756520646f65736e27742066697420696e2031
          0x44
          dup3
          add
          mstore
          0x3034206269747300000000000000000000000000000000000000000000000000
          0x64
          dup3
          add
          mstore
          revert
            /* \"src/ReservoirPair.sol\":13153:13910  function _handleReport(ERC20 aToken, uint256 aReserve, uint256 aPrevBalance, uint256 aNewBalance)... */
        tag_31:
          swap2
          swap1
          swap3
            /* \"src/ReservoirPair.sol\":13327:13353  aNewBalance > aPrevBalance */
          dup2
          dup2
          gt
            /* \"src/ReservoirPair.sol\":13323:13904  if (aNewBalance > aPrevBalance) {... */
          0x00
            /* \"src/ReservoirPair.sol\":13327:13353  aNewBalance > aPrevBalance */
          eq
          tag_836
          jumpi
            /* \"src/ReservoirPair.sol\":13416:13442  aNewBalance - aPrevBalance */
          tag_838
            /* \"src/ReservoirPair.sol\":13526:13544  aReserve + lProfit */
          tag_792
            /* \"src/ReservoirPair.sol\":13416:13442  aNewBalance - aPrevBalance */
          swap5
          swap3
            /* \"src/ReservoirPair.sol\":13462:13493  ProfitReported(aToken, lProfit) */
          0xd85f20827037d49bc45762fefff2ddfe9a1a5412ad3dfc1cdca78d2e52f4ba23
            /* \"src/ReservoirPair.sol\":13416:13442  aNewBalance - aPrevBalance */
          swap3
          tag_11
          jump\t// in
        tag_838:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x40
          dup1
          mload
          0xffffffffffffffffffffffffffffffffffffffff
          swap6
          swap1
          swap6
          and
          dup6
          mstore
          0x20
          dup6
          add
          dup3
          swap1
          mstore
          swap1
          swap4
            /* \"src/ReservoirPair.sol\":13462:13493  ProfitReported(aToken, lProfit) */
          log1
            /* \"src/ReservoirPair.sol\":13526:13544  aReserve + lProfit */
          tag_24
          jump\t// in
            /* \"src/ReservoirPair.sol\":13323:13904  if (aNewBalance > aPrevBalance) {... */
        tag_836:
            /* \"src/ReservoirPair.sol\":13565:13591  aNewBalance < aPrevBalance */
          swap1
          dup1
          dup3
          lt
          iszero
          tag_693
          jumpi
            /* \"src/ReservoirPair.sol\":13650:13676  aPrevBalance - aNewBalance */
          tag_844
            /* \"src/ReservoirPair.sol\":13756:13772  aReserve - lLoss */
          tag_792
            /* \"src/ReservoirPair.sol\":13650:13676  aPrevBalance - aNewBalance */
          swap5
          swap3
            /* \"src/ReservoirPair.sol\":13696:13723  LossReported(aToken, lLoss) */
          0x3ffa9beb41b46c88b16758ef6c236ebd4d07cdfd4d22471030eb6b2d662482d9
            /* \"src/ReservoirPair.sol\":13650:13676  aPrevBalance - aNewBalance */
          swap3
          tag_11
          jump\t// in
        tag_844:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x40
          dup1
          mload
          0xffffffffffffffffffffffffffffffffffffffff
          swap6
          swap1
          swap6
          and
          dup6
          mstore
          0x20
          dup6
          add
          dup3
          swap1
          mstore
          swap1
          swap4
            /* \"src/ReservoirPair.sol\":13696:13723  LossReported(aToken, lLoss) */
          log1
            /* \"src/ReservoirPair.sol\":13756:13772  aReserve - lLoss */
          tag_11
          jump\t// in
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
        tag_32:
          0x8000000000000000000000000000000000000000000000000000000000000000
          dup2
          eq
          tag_636
          jumpi
          0x00
          sub
          swap1
          jump\t// out
        tag_33:
          0xffffffffffffffffffffffffff
          swap2
          dup3
          and
          swap1
          dup3
          and
          sub
          swap2
          swap1
          dup3
          gt
          tag_636
          jumpi
          jump\t// out
        tag_34:
          swap2
          swap1
          swap2
          0xffffffffffffffffffffffffff
          dup1
          dup1
          swap5
          and
          swap2
          and
          add
          swap2
          dup3
          gt
          tag_636
          jumpi
          jump\t// out
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1328:2944  function safeTransferFrom(... */
        tag_35:
          swap1
          0x00
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1532:2887  assembly {... */
          0x64
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1328:2944  function safeTransferFrom(... */
          swap3
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1532:2887  assembly {... */
          0x20
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1328:2944  function safeTransferFrom(... */
          swap6
          dup3
          swap6
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1532:2887  assembly {... */
          mload(0x40)
          swap5
          0x23b872dd00000000000000000000000000000000000000000000000000000000
          dup7
          mstore
          0x04
          dup7
          add
          mstore
          0x24
          dup6
          add
          mstore
          0x44
          dup5
          add
          mstore
          gas
          call
          or(and(eq(mload(0x00), 0x01), gt(returndatasize, 0x1f)), iszero(returndatasize))
          and
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          iszero
          tag_854
          jumpi
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1328:2944  function safeTransferFrom(... */
          jump\t// out
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
        tag_854:
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1532:2887  assembly {... */
          0x64
          0x40
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mload
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1532:2887  assembly {... */
          0x20
          0x04
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup3
          add
          mstore
          0x14
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1532:2887  assembly {... */
          0x24
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup3
          add
          mstore
          0x5452414e534645525f46524f4d5f4641494c4544000000000000000000000000
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":1532:2887  assembly {... */
          0x44
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup3
          add
          mstore
          revert
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":2950:4449  function safeTransfer(... */
        tag_36:
          0x00
          swap2
          dup3
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":3128:4397  assembly {... */
          0x44
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":2950:4449  function safeTransfer(... */
          swap3
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":3128:4397  assembly {... */
          0x20
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":2950:4449  function safeTransfer(... */
          swap6
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":3128:4397  assembly {... */
          mload(0x40)
          swap4
          0xa9059cbb00000000000000000000000000000000000000000000000000000000
          dup6
          mstore
          0x04
          dup6
          add
          mstore
          0x24
          dup5
          add
          mstore
          gas
          call
          or(and(eq(mload(0x00), 0x01), gt(returndatasize, 0x1f)), iszero(returndatasize))
          and
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          iszero
          tag_856
          jumpi
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":2950:4449  function safeTransfer(... */
          jump\t// out
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
        tag_856:
          0x64
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":3128:4397  assembly {... */
          0x40
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mload
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":3128:4397  assembly {... */
          0x20
          0x04
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup3
          add
          mstore
          0x0f
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":3128:4397  assembly {... */
          0x24
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup3
          add
          mstore
          0x5452414e534645525f4641494c45440000000000000000000000000000000000
            /* \"lib/solmate/src/utils/SafeTransferLib.sol\":3128:4397  assembly {... */
          0x44
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup3
          add
          mstore
          revert
        tag_37:
          0x010000
          dup2
          lt
          iszero
          tag_858
          jumpi
            /* \"src/curve/stable/StablePair.sol\":11791:11804  _observations */
          0x0d
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          add
          swap1
          0x00
          swap1
          jump\t// out
        tag_858:
          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)
          mstore(0x04, 0x32)
          revert(0x00, 0x24)
            /* \"src/libraries/StableMath.sol\":320:323  100 */
        tag_38:
          swap1
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x015180
          0xffffffffffffffff
          dup1
          swap4
          and
            /* \"src/libraries/StableMath.sol\":320:323  100 */
          mul
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap2
          dup3
          and
            /* \"src/libraries/StableMath.sol\":320:323  100 */
          swap2
          dup3
          sub
          tag_636
          jumpi
          jump\t// out
        tag_39:
          0x01
          shl
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap1
            /* \"src/libraries/StableMath.sol\":320:323  100 */
          0x01fffffffffffffffe
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0xfffffffffffffffe
          dup4
          and
            /* \"src/libraries/StableMath.sol\":320:323  100 */
          swap3
          and
          dup3
          sub
          tag_636
          jumpi
          jump\t// out
        tag_40:
          swap2
          swap1
          swap2
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0xffffffffffffffff
          dup1
          dup1
          swap5
          and
          swap2
          and
            /* \"src/libraries/StableMath.sol\":320:323  100 */
          mul
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap2
          dup3
          and
            /* \"src/libraries/StableMath.sol\":320:323  100 */
          swap2
          dup3
          sub
          tag_636
          jumpi
          jump\t// out
            /* \"src/libraries/StableMath.sol\":409:415  1 days */
        tag_41:
          dup2
          dup2
          mul
          swap3
          swap2
          dup2
          iszero
          swap2
          dup5
          div
          eq
          or
          iszero
          tag_636
          jumpi
          jump\t// out
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
        tag_42:
          dup2
          iszero
          tag_868
          jumpi
          div
          swap1
          jump\t// out
        tag_868:
          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)
          mstore(0x04, 0x12)
          revert(0x00, 0x24)
            /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":1158:1352  function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {... */
        tag_43:
            /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":1322:1323  0 */
          0x00
          swap2
            /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":1158:1352  function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {... */
          swap1
            /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":1317:1323  a == 0 */
          dup1
          tag_870
          jumpi
            /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":1317:1345  a == 0 ? 0 : (a - 1) / b + 1 */
          pop
          pop
          pop
            /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":1322:1323  0 */
          0x00
            /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":1158:1352  function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {... */
          swap1
          jump\t// out
            /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":1317:1345  a == 0 ? 0 : (a - 1) / b + 1 */
        tag_870:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
          dup2
          add
          swap1
          dup2
          gt
          tag_873
          jumpi
            /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":1330:1341  (a - 1) / b */
          swap1
          tag_875
          swap2
          tag_42
          jump\t// in
        tag_875:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap1
            /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":1335:1336  1 */
          0x01
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup3
          add
          dup1
          swap3
          gt
          tag_876
          jumpi
            /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":1317:1345  a == 0 ? 0 : (a - 1) / b + 1 */
          pop
            /* \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":1158:1352  function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {... */
          swap1
          jump\t// out
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
        tag_876:
          dup1
          0x4e487b7100000000000000000000000000000000000000000000000000000000
          0x24
          swap3
          mstore
          mstore(0x04, 0x11)
          revert
        tag_873:
          0x24
          dup4
          0x4e487b7100000000000000000000000000000000000000000000000000000000
          dup2
          mstore
          mstore(0x04, 0x11)
          revert
        tag_44:
          iszero
          tag_878
          jumpi
          jump\t// out
        tag_878:
          0x64
          mload(0x40)
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
          0x20
          0x04
          dup3
          add
          mstore
          0x12
          0x24
          dup3
          add
          mstore
          0x53503a204e4f545f454e4f5547485f4c49510000000000000000000000000000
          0x44
          dup3
          add
          mstore
          revert
        tag_45:
          0xffffffffffffffff
          swap2
          dup3
          and
          swap1
          dup3
          and
          sub
          swap2
          swap1
          dup3
          gt
          tag_636
          jumpi
          jump\t// out
        tag_46:
          swap1
          0xffffffffffffffff
          dup1
          swap2
          and
          swap2
          dup3
          iszero
          tag_868
          jumpi
          and
          div
          swap1
          jump\t// out
            /* \"src/curve/stable/StablePair.sol\":10113:10971  function _getCurrentAPrecise() internal view returns (uint64 rCurrentA) {... */
        tag_47:
            /* \"src/curve/stable/StablePair.sol\":10212:10219  ampData */
          0x010010
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
          0xffffffffffffffff
          swap1
          dup2
          dup2
          0x40
          shr
          and
          dup2
          0xc0
          shr
            /* \"src/curve/stable/StablePair.sol\":10292:10307  block.timestamp */
          swap1
          dup2
          timestamp
            /* \"src/curve/stable/StablePair.sol\":10292:10321  block.timestamp < futureATime */
          lt
            /* \"src/curve/stable/StablePair.sol\":10288:10965  if (block.timestamp < futureATime) {... */
          0x00
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          eq
          tag_884
          jumpi
            /* \"src/curve/stable/StablePair.sol\":10524:10562  uint64(block.timestamp) - initialATime */
          tag_886
            /* \"src/curve/stable/StablePair.sol\":10463:10489  futureATime - initialATime */
          tag_887
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup6
          dup1
          dup7
          and
          swap6
          0x80
          shr
          and
            /* \"src/curve/stable/StablePair.sol\":10463:10489  futureATime - initialATime */
          dup1
          swap5
          tag_45
          jump\t// in
        tag_887:
            /* \"src/curve/stable/StablePair.sol\":10292:10307  block.timestamp */
          swap3
          dup6
          timestamp
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
            /* \"src/curve/stable/StablePair.sol\":10524:10562  uint64(block.timestamp) - initialATime */
          tag_45
          jump\t// in
        tag_886:
            /* \"src/curve/stable/StablePair.sol\":10581:10599  futureA > initialA */
          swap1
          dup4
          dup2
          gt
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          iszero
          tag_888
          jumpi
            /* \"src/curve/stable/StablePair.sol\":10638:10656  futureA - initialA */
          swap2
            /* \"src/curve/stable/StablePair.sol\":10697:10720  rampElapsed * rampDelta */
          tag_890
            /* \"src/curve/stable/StablePair.sol\":10697:10735  rampElapsed * rampDelta / rampDuration */
          tag_891
            /* \"src/curve/stable/StablePair.sol\":10638:10656  futureA - initialA */
          swap3
          tag_892
          dup7
          dup9
          swap7
          tag_45
          jump\t// in
        tag_892:
            /* \"src/curve/stable/StablePair.sol\":10697:10720  rampElapsed * rampDelta */
          swap1
          tag_40
          jump\t// in
        tag_890:
            /* \"src/curve/stable/StablePair.sol\":10697:10735  rampElapsed * rampDelta / rampDuration */
          tag_46
          jump\t// in
        tag_891:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          and
          add
          swap1
          dup2
          gt
          tag_636
          jumpi
            /* \"src/curve/stable/StablePair.sol\":10577:10905  if (futureA > initialA) {... */
          swap1
            /* \"src/curve/stable/StablePair.sol\":10113:10971  function _getCurrentAPrecise() internal view returns (uint64 rCurrentA) {... */
          jump\t// out
            /* \"src/curve/stable/StablePair.sol\":10577:10905  if (futureA > initialA) {... */
        tag_888:
            /* \"src/curve/stable/StablePair.sol\":10841:10890  initialA - rampElapsed * rampDelta / rampDuration */
          tag_792
            /* \"src/curve/stable/StablePair.sol\":10793:10811  initialA - futureA */
          swap5
          pop
            /* \"src/curve/stable/StablePair.sol\":10852:10890  rampElapsed * rampDelta / rampDuration */
          tag_898
            /* \"src/curve/stable/StablePair.sol\":10793:10811  initialA - futureA */
          swap3
          swap2
          tag_892
            /* \"src/curve/stable/StablePair.sol\":10852:10875  rampElapsed * rampDelta */
          tag_890
            /* \"src/curve/stable/StablePair.sol\":10793:10811  initialA - futureA */
          swap3
          dup7
          tag_45
          jump\t// in
            /* \"src/curve/stable/StablePair.sol\":10852:10890  rampElapsed * rampDelta / rampDuration */
        tag_898:
            /* \"src/curve/stable/StablePair.sol\":10841:10890  initialA - rampElapsed * rampDelta / rampDuration */
          swap1
          tag_45
          jump\t// in
            /* \"src/curve/stable/StablePair.sol\":10288:10965  if (block.timestamp < futureATime) {... */
        tag_884:
            /* \"src/curve/stable/StablePair.sol\":10935:10954  rCurrentA = futureA */
          swap3
          pop
          pop
          pop
            /* \"src/curve/stable/StablePair.sol\":10288:10965  if (block.timestamp < futureATime) {... */
          swap1
            /* \"src/curve/stable/StablePair.sol\":10113:10971  function _getCurrentAPrecise() internal view returns (uint64 rCurrentA) {... */
          jump\t// out
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
        tag_48:
          iszero
          tag_901
          jumpi
          jump\t// out
        tag_901:
          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)
          mstore(0x04, 0x01)
          revert(0x00, 0x24)
            /* \"src/ReservoirPair.sol\":18000:19057  function _calcClampedPrice(uint256 aCurrRawPrice, uint256 aPrevClampedPrice, uint256 aTimeElapsed)... */
        tag_49:
          swap1
          swap2
            /* \"src/ReservoirPair.sol\":18215:18237  aPrevClampedPrice == 0 */
          dup3
          iszero
            /* \"src/ReservoirPair.sol\":18211:18337  if (aPrevClampedPrice == 0) {... */
          tag_903
          jumpi
            /* \"src/ReservoirPair.sol\":18351:18405  stdMath.percentDelta(aCurrRawPrice, aPrevClampedPrice) */
          tag_905
          dup4
          dup4
          tag_50
          jump\t// in
        tag_905:
            /* \"src/ReservoirPair.sol\":18408:18421  maxChangeRate */
          0x01000d
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sload
            /* \"src/ReservoirPair.sol\":18408:18436  maxChangeRate * aTimeElapsed */
          swap1
          tag_906
          dup4
          dup4
          tag_41
          jump\t// in
        tag_906:
          lt
          iszero
          tag_907
          jumpi
            /* \"src/ReservoirPair.sol\":18487:18520  aCurrRawPrice > aPrevClampedPrice */
          dup4
          dup4
          gt
          iszero
          tag_909
          jumpi
            /* \"src/ReservoirPair.sol\":18585:18613  maxChangeRate * aTimeElapsed */
          tag_911
          swap3
          pop
          tag_41
          jump\t// in
        tag_911:
            /* \"src/ReservoirPair.sol\":18577:18581  1e18 */
          swap1
          0x0de0b6b3a7640000
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap2
          dup3
          add
          dup1
          dup4
          gt
          tag_636
          jumpi
            /* \"src/ReservoirPair.sol\":18556:18615  aPrevClampedPrice * (1e18 + (maxChangeRate * aTimeElapsed)) */
          tag_914
          swap2
          tag_41
          jump\t// in
        tag_914:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          div
            /* \"src/ReservoirPair.sol\":18483:18817  if (aCurrRawPrice > aPrevClampedPrice) {... */
          swap1
        tag_915:
            /* \"src/ReservoirPair.sol\":18856:18897  LogCompression.toLowResLog(rClampedPrice) */
          tag_916
          dup3
          tag_54
          jump\t// in
        tag_916:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x0d
          signextend
            /* \"src/ReservoirPair.sol\":18347:19051  if (stdMath.percentDelta(aCurrRawPrice, aPrevClampedPrice) > maxChangeRate * aTimeElapsed) {... */
          swap1
            /* \"src/ReservoirPair.sol\":18000:19057  function _calcClampedPrice(uint256 aCurrRawPrice, uint256 aPrevClampedPrice, uint256 aTimeElapsed)... */
          jump\t// out
            /* \"src/ReservoirPair.sol\":18483:18817  if (aCurrRawPrice > aPrevClampedPrice) {... */
        tag_909:
            /* \"src/ReservoirPair.sol\":18661:18702  assert(aPrevClampedPrice > aCurrRawPrice) */
          tag_918
            /* \"src/ReservoirPair.sol\":18765:18793  maxChangeRate * aTimeElapsed */
          tag_919
            /* \"src/ReservoirPair.sol\":18668:18701  aPrevClampedPrice > aCurrRawPrice */
          swap4
          dup6
          gt
            /* \"src/ReservoirPair.sol\":18661:18702  assert(aPrevClampedPrice > aCurrRawPrice) */
          tag_48
          jump\t// in
        tag_918:
            /* \"src/ReservoirPair.sol\":18765:18793  maxChangeRate * aTimeElapsed */
          tag_41
          jump\t// in
        tag_919:
            /* \"src/ReservoirPair.sol\":18757:18761  1e18 */
          swap1
          0x0de0b6b3a7640000
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap2
          dup3
          sub
          dup3
          dup2
          gt
          tag_636
          jumpi
            /* \"src/ReservoirPair.sol\":18736:18795  aPrevClampedPrice * (1e18 - (maxChangeRate * aTimeElapsed)) */
          tag_922
          swap2
          tag_41
          jump\t// in
        tag_922:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          div
            /* \"src/ReservoirPair.sol\":18483:18817  if (aCurrRawPrice > aPrevClampedPrice) {... */
          swap1
          jump(tag_915)
            /* \"src/ReservoirPair.sol\":18347:19051  if (stdMath.percentDelta(aCurrRawPrice, aPrevClampedPrice) > maxChangeRate * aTimeElapsed) {... */
        tag_907:
            /* \"src/ReservoirPair.sol\":18929:18958  rClampedPrice = aCurrRawPrice */
          pop
          pop
          swap2
          swap1
          pop
            /* \"src/ReservoirPair.sol\":18998:19039  LogCompression.toLowResLog(aCurrRawPrice) */
          tag_916
            /* \"src/ReservoirPair.sol\":18929:18958  rClampedPrice = aCurrRawPrice */
          dup3
            /* \"src/ReservoirPair.sol\":18998:19039  LogCompression.toLowResLog(aCurrRawPrice) */
          tag_54
          jump\t// in
            /* \"src/ReservoirPair.sol\":18211:18337  if (aPrevClampedPrice == 0) {... */
        tag_903:
            /* \"src/ReservoirPair.sol\":18283:18324  LogCompression.toLowResLog(aCurrRawPrice) */
          pop
          swap2
          swap1
          pop
          tag_916
          dup3
          tag_54
          jump\t// in
            /* \"lib/forge-std/src/StdMath.sol\":999:1159  function percentDelta(uint256 a, uint256 b) internal pure returns (uint256) {... */
        tag_50:
            /* \"lib/forge-std/src/StdMath.sol\":607:612  a > b */
          dup2
          dup1
          dup3
          gt
          iszero
          tag_925
          jumpi
            /* \"lib/forge-std/src/StdMath.sol\":615:620  a - b */
          tag_927
          swap2
          tag_11
          jump\t// in
        tag_927:
            /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */
          swap1
        tag_928:
            /* \"lib/forge-std/src/StdMath.sol\":1144:1148  1e18 */
          0x0de0b6b3a7640000
            /* \"src/libraries/StableMath.sol\":409:415  1 days */
          swap2
          dup3
          dup2
          mul
          swap3
          dup2
          dup5
          div
          eq
          swap1
          iszero
          or
          iszero
          tag_636
          jumpi
            /* \"lib/forge-std/src/StdMath.sol\":1133:1152  absDelta * 1e18 / b */
          tag_792
          swap2
          tag_42
          jump\t// in
            /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */
        tag_925:
            /* \"lib/forge-std/src/StdMath.sol\":623:628  b - a */
          swap1
          tag_932
          swap2
          tag_11
          jump\t// in
        tag_932:
            /* \"lib/forge-std/src/StdMath.sol\":607:628  a > b ? a - b : b - a */
          swap1
          jump(tag_928)
            /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */
        tag_51:
          swap1
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */
          swap2
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mload(0x40)
            /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */
          swap1
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x24
            /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */
          0x20
          swap4
          dup4
          tag_933
          dup7
          dup3
          dup2
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          tag_934
            /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */
          dup2
          dup1
          swap11
          add
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap7
          dup8
          dup2
          mload
          swap4
          dup5
          swap3
          add
          tag_6
          jump\t// in
        tag_934:
          dup2
          add
            /* \"src/libraries/FactoryStore.sol\":486:508  abi.encodePacked(aKey) */
          sub
          dup1
          dup5
          mstore
          add
          dup3
          tag_5
          jump\t// in
        tag_933:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mload
            /* \"src/libraries/FactoryStore.sol\":476:509  keccak256(abi.encodePacked(aKey)) */
          swap1
          keccak256
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mload(0x40)
            /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */
          swap6
          dup7
          swap4
          dup5
          swap3
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x8eaa6ac000000000000000000000000000000000000000000000000000000000
            /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */
          dup5
          mstore
          0x04
          dup5
          add
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mstore
          and
            /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */
          gas
          staticcall
          swap1
          dup2
          iszero
          tag_714
          jumpi
          0x00
          swap2
          tag_937
          jumpi
            /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */
        tag_938:
            /* \"src/libraries/FactoryStore.sol\":456:510  return aFactory.get(keccak256(abi.encodePacked(aKey))) */
          pop
          swap1
          pop
            /* \"src/libraries/FactoryStore.sol\":354:517  function read(IGenericFactory aFactory, string memory aKey) internal view returns (bytes32) {... */
          swap1
          jump\t// out
            /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */
        tag_937:
          dup3
          dup2
          returndatasize
          dup4
          gt
          tag_939
          jumpi
        tag_940:
          tag_941
          dup2
          dup4
          tag_5
          jump\t// in
        tag_941:
          dup2
          add
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sub
          slt
          tag_166
          jumpi
          pop
          mload
            /* \"src/libraries/FactoryStore.sol\":463:510  aFactory.get(keccak256(abi.encodePacked(aKey))) */
          dup1
          codesize
          jump(tag_938)
        tag_939:
          pop
          returndatasize
          jump(tag_940)
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
        tag_52:
          dup1
          iszero
          tag_868
          jumpi
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0xc097ce7bc90715b34b9f1000000000
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
          swap1
          jump\t// out
        tag_53:
          dup2
          iszero
          tag_868
          jumpi
          sdiv
          swap1
          jump\t// out
            /* \"src/libraries/LogCompression.sol\":2015:2401  function toLowResLog(uint256 value) internal pure returns (int256) {... */
        tag_54:
            /* \"src/libraries/LogCompression.sol\":2128:2156  LogExpMath.ln(int256(value)) */
          tag_948
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          0x5af3107a4000
            /* \"src/libraries/LogCompression.sol\":2015:2401  function toLowResLog(uint256 value) internal pure returns (int256) {... */
          swap2
            /* \"src/libraries/LogCompression.sol\":2128:2156  LogExpMath.ln(int256(value)) */
          tag_55
          jump\t// in
        tag_948:
            /* \"src/libraries/LogCompression.sol\":2252:2253  0 */
          0x00
            /* \"src/libraries/LogCompression.sol\":2247:2253  ln > 0 */
          dup2
          sgt
            /* \"src/libraries/LogCompression.sol\":2252:2253  0 */
          iszero
          tag_949
          jumpi
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          0x2d79883d2000
          add
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogCompression.sol\":2015:2401  function toLowResLog(uint256 value) internal pure returns (int256) {... */
          swap1
          jump\t// out
            /* \"src/libraries/LogCompression.sol\":2247:2325  ln > 0 ? ln + _HALF_LOG_COMPRESSION_FACTOR : ln - _HALF_LOG_COMPRESSION_FACTOR */
        tag_949:
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffd28677c2e000
          add
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogCompression.sol\":2015:2401  function toLowResLog(uint256 value) internal pure returns (int256) {... */
          swap1
          jump\t// out
            /* \"src/libraries/LogExpMath.sol\":14736:15138  function ln(int256 a) internal pure returns (int256) {... */
        tag_55:
            /* \"src/libraries/LogExpMath.sol\":14922:14923  0 */
          0x00
            /* \"src/libraries/LogExpMath.sol\":14918:14923  a > 0 */
          dup2
          sgt
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          iszero
          tag_952
          jumpi
            /* \"src/libraries/LogExpMath.sol\":14964:14985  LN_36_LOWER_BOUND < a */
          dup1
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          0x0c7d713b49da0000
            /* \"src/libraries/LogExpMath.sol\":14964:14985  LN_36_LOWER_BOUND < a */
          slt
            /* \"src/libraries/LogExpMath.sol\":14964:15010  LN_36_LOWER_BOUND < a && a < LN_36_UPPER_BOUND */
          dup1
          tag_954
          jumpi
            /* \"src/libraries/LogExpMath.sol\":14736:15138  function ln(int256 a) internal pure returns (int256) {... */
        tag_955:
            /* \"src/libraries/LogExpMath.sol\":14960:15122  if (LN_36_LOWER_BOUND < a && a < LN_36_UPPER_BOUND) {... */
          iszero
          tag_956
          jumpi
            /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
          0x0de0b6b3a7640000
          swap1
            /* \"src/libraries/LogExpMath.sol\":2125:2129  1e36 */
          0xc097ce7bc90715b34b9f1000000000
          swap1
            /* \"src/libraries/LogExpMath.sol\":21785:21823  ((x - ONE_36) * ONE_36) / (x + ONE_36) */
          tag_958
          swap1
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup4
          mul
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          dup3
          dup2
          add
          swap1
          0xffffffffffffffffffffffffffffffffff3f68318436f8ea4cb460f000000000
          add
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup4
          mul
            /* \"src/libraries/LogExpMath.sol\":21785:21823  ((x - ONE_36) * ONE_36) / (x + ONE_36) */
          tag_53
          jump\t// in
        tag_958:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap1
          dup1
          dup3
          dup1
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap2
          dup2
          dup4
          dup3
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup3
          dup5
          dup3
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup4
          dup6
          dup3
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap2
          dup5
          dup7
          dup5
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap4
          dup6
          dup8
          dup7
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap6
          dup1
          dup9
          dup9
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap8
          dup9
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogExpMath.sol\":22751:22753  15 */
          0x0f
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          swap1
          sdiv
          swap7
            /* \"src/libraries/LogExpMath.sol\":22669:22671  13 */
          0x0d
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          swap1
          sdiv
          swap6
            /* \"src/libraries/LogExpMath.sol\":22587:22589  11 */
          0x0b
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          swap1
          sdiv
          swap5
            /* \"src/libraries/LogExpMath.sol\":22506:22507  9 */
          0x09
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          swap1
          sdiv
          swap4
            /* \"src/libraries/LogExpMath.sol\":22425:22426  7 */
          0x07
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          swap1
          sdiv
          swap3
            /* \"src/libraries/LogExpMath.sol\":22344:22345  5 */
          0x05
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          swap1
          sdiv
          swap2
            /* \"src/libraries/LogExpMath.sol\":22263:22264  3 */
          0x03
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          swap1
          sdiv
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          add
          add
          add
          add
          add
          add
          add
          0x01
          shl
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogExpMath.sol\":15030:15055  return _ln_36(a) / ONE_18 */
          swap1
          jump\t// out
            /* \"src/libraries/LogExpMath.sol\":14960:15122  if (LN_36_LOWER_BOUND < a && a < LN_36_UPPER_BOUND) {... */
        tag_956:
            /* \"src/libraries/LogExpMath.sol\":15101:15107  _ln(a) */
          tag_792
          swap1
          tag_56
          jump\t// in
            /* \"src/libraries/LogExpMath.sol\":14964:15010  LN_36_LOWER_BOUND < a && a < LN_36_UPPER_BOUND */
        tag_954:
            /* \"src/libraries/LogExpMath.sol\":14989:15010  a < LN_36_UPPER_BOUND */
          pop
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          0x0f43fc2c04ee0000
            /* \"src/libraries/LogExpMath.sol\":14989:15010  a < LN_36_UPPER_BOUND */
          dup2
          slt
            /* \"src/libraries/LogExpMath.sol\":14964:15010  LN_36_LOWER_BOUND < a && a < LN_36_UPPER_BOUND */
          jump(tag_955)
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
        tag_952:
          0x64
          mload(0x40)
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
          0x20
          0x04
          dup3
          add
          mstore
          0x11
          0x24
          dup3
          add
          mstore
          0x454d3a204f55545f4f465f424f554e4453000000000000000000000000000000
          0x44
          dup3
          add
          mstore
          revert
            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
        tag_56:
            /* \"src/libraries/LogExpMath.sol\":1900:1904  1e18 */
          0x0de0b6b3a7640000
            /* \"src/libraries/LogExpMath.sol\":15343:15353  a < ONE_18 */
          dup2
          slt
            /* \"src/libraries/LogExpMath.sol\":15339:15760  if (a < ONE_18) {... */
          tag_960
          jumpi
            /* \"src/libraries/LogExpMath.sol\":17686:17689  100 */
          0x64
            /* \"src/libraries/LogExpMath.sol\":17231:17245  int256 sum = 0 */
          swap1
            /* \"src/libraries/LogExpMath.sol\":17244:17245  0 */
          0x00
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x1600ef3172e58d2e933ec884fde10064c63b5372d805e203c0000000000000
            /* \"src/libraries/LogExpMath.sol\":17263:17279  a >= a0 * ONE_18 */
          dup3
          slt
          iszero
            /* \"src/libraries/LogExpMath.sol\":17259:17385  if (a >= a0 * ONE_18) {... */
          tag_962
          jumpi
            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
        tag_963:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x011798004d755d3c8bc8e03204cf44619e000000
            /* \"src/libraries/LogExpMath.sol\":17403:17419  a >= a1 * ONE_18 */
          dup3
          slt
          iszero
            /* \"src/libraries/LogExpMath.sol\":17399:17525  if (a >= a1 * ONE_18) {... */
          tag_964
          jumpi
            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
        tag_965:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup3
          mul
          swap1
          dup3
          mul
          dup2
            /* \"src/libraries/LogExpMath.sol\":3567:3612  7_896_296_018_268_069_516_100_000_000_000_000 */
          0x01855144814a7ff805980ff0084000
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup3
            /* \"src/libraries/LogExpMath.sol\":17846:17853  a >= a2 */
          dup2
          dup2
          slt
          iszero
            /* \"src/libraries/LogExpMath.sol\":17842:17936  if (a >= a2) {... */
          tag_966
          jumpi
            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
        tag_967:
            /* \"src/libraries/LogExpMath.sol\":3714:3749  888_611_052_050_787_263_676_000_000 */
          pop
          pop
          pop
          0x02df0ab5a80a22c61ab5a700
            /* \"src/libraries/LogExpMath.sol\":17954:17961  a >= a3 */
          dup1
          dup3
          slt
          iszero
            /* \"src/libraries/LogExpMath.sol\":17950:18044  if (a >= a3) {... */
          tag_968
          jumpi
            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
        tag_969:
            /* \"src/libraries/LogExpMath.sol\":3849:3880  298_095_798_704_172_827_474_000 */
          pop
          0x3f1fce3da636ea5cf850
            /* \"src/libraries/LogExpMath.sol\":18062:18069  a >= a4 */
          dup1
          dup3
          slt
          iszero
            /* \"src/libraries/LogExpMath.sol\":18058:18152  if (a >= a4) {... */
          tag_970
          jumpi
            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
        tag_971:
            /* \"src/libraries/LogExpMath.sol\":3980:4009  5_459_815_003_314_423_907_810 */
          pop
          0x0127fa27722cc06cc5e2
            /* \"src/libraries/LogExpMath.sol\":18170:18177  a >= a5 */
          dup1
          dup3
          slt
          iszero
            /* \"src/libraries/LogExpMath.sol\":18166:18260  if (a >= a5) {... */
          tag_972
          jumpi
            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
        tag_973:
            /* \"src/libraries/LogExpMath.sol\":4109:4136  738_905_609_893_065_022_723 */
          pop
          0x280e60114edb805d03
            /* \"src/libraries/LogExpMath.sol\":18278:18285  a >= a6 */
          dup1
          dup3
          slt
          iszero
            /* \"src/libraries/LogExpMath.sol\":18274:18368  if (a >= a6) {... */
          tag_974
          jumpi
            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
        tag_975:
            /* \"src/libraries/LogExpMath.sol\":4236:4263  271_828_182_845_904_523_536 */
          pop
          0x0ebc5fb41746121110
            /* \"src/libraries/LogExpMath.sol\":18386:18393  a >= a7 */
          dup1
          dup3
          slt
          iszero
            /* \"src/libraries/LogExpMath.sol\":18382:18476  if (a >= a7) {... */
          tag_976
          jumpi
            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
        tag_977:
            /* \"src/libraries/LogExpMath.sol\":4363:4390  164_872_127_070_012_814_685 */
          pop
          0x08f00f760a4b2db55d
            /* \"src/libraries/LogExpMath.sol\":18494:18501  a >= a8 */
          dup1
          dup3
          slt
          iszero
            /* \"src/libraries/LogExpMath.sol\":18490:18584  if (a >= a8) {... */
          tag_978
          jumpi
            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
        tag_979:
            /* \"src/libraries/LogExpMath.sol\":4490:4517  128_402_541_668_774_148_407 */
          pop
          0x06f5f1775788937937
            /* \"src/libraries/LogExpMath.sol\":18602:18609  a >= a9 */
          dup1
          dup3
          slt
          iszero
            /* \"src/libraries/LogExpMath.sol\":18598:18692  if (a >= a9) {... */
          tag_980
          jumpi
            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
        tag_981:
            /* \"src/libraries/LogExpMath.sol\":4619:4646  113_314_845_306_682_631_683 */
          pop
          0x06248f33704b286603
            /* \"src/libraries/LogExpMath.sol\":18710:18718  a >= a10 */
          dup1
          dup3
          slt
          iszero
            /* \"src/libraries/LogExpMath.sol\":18706:18803  if (a >= a10) {... */
          tag_982
          jumpi
            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
        tag_983:
            /* \"src/libraries/LogExpMath.sol\":4748:4775  106_449_445_891_785_942_956 */
          pop
          0x05c548670b9510e7ac
            /* \"src/libraries/LogExpMath.sol\":18821:18829  a >= a11 */
          dup1
          dup3
          slt
          iszero
            /* \"src/libraries/LogExpMath.sol\":18817:18914  if (a >= a11) {... */
          tag_984
          jumpi
            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
        tag_985:
            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
          pop
            /* \"src/libraries/LogExpMath.sol\":19470:19508  ((a - ONE_20) * ONE_20) / (a + ONE_20) */
          tag_986
            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
          0x056bc75e2d63100000
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          swap2
          dup3
          0xfffffffffffffffffffffffffffffffffffffffffffffffa9438a1d29cf00000
          dup2
          dup4
          add
          swap3
          add
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mul
            /* \"src/libraries/LogExpMath.sol\":19470:19508  ((a - ONE_20) * ONE_20) / (a + ONE_20) */
          tag_53
          jump\t// in
        tag_986:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap1
          dup1
          dup3
          dup1
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap2
          dup2
          dup4
          dup3
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup3
          dup5
          dup3
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap2
            /* \"src/libraries/LogExpMath.sol\":19948:19949  3 */
          0x03
            /* \"src/libraries/LogExpMath.sol\":20029:20030  5 */
          0x05
            /* \"src/libraries/LogExpMath.sol\":20110:20111  7 */
          0x07
            /* \"src/libraries/LogExpMath.sol\":20191:20192  9 */
          0x09
            /* \"src/libraries/LogExpMath.sol\":20272:20274  11 */
          0x0b
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup9
          dup11
          dup10
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap9
          dup1
          dup12
          dup12
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap11
          dup12
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
          sdiv
          swap9
          sdiv
          swap7
          sdiv
          swap5
          sdiv
          swap3
          sdiv
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          add
          add
          add
          add
          add
          0x01
          shl
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          add
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogExpMath.sol\":15252:20803  function _ln(int256 a) private pure returns (int256) {... */
          swap1
          jump\t// out
            /* \"src/libraries/LogExpMath.sol\":18817:18914  if (a >= a11) {... */
        tag_984:
            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
          0x056bc75e2d63100000
            /* \"src/libraries/LogExpMath.sol\":4686:4711  6_250_000_000_000_000_000 */
          0x56bc75e2d6310000
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap3
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          swap2
          add
            /* \"src/libraries/LogExpMath.sol\":18817:18914  if (a >= a11) {... */
          swap1
          codesize
          jump(tag_985)
            /* \"src/libraries/LogExpMath.sol\":18706:18803  if (a >= a10) {... */
        tag_982:
            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
          0x056bc75e2d63100000
            /* \"src/libraries/LogExpMath.sol\":4556:4582  12_500_000_000_000_000_000 */
          0xad78ebc5ac620000
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap3
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          swap2
          add
            /* \"src/libraries/LogExpMath.sol\":18706:18803  if (a >= a10) {... */
          swap1
          codesize
          jump(tag_983)
            /* \"src/libraries/LogExpMath.sol\":18598:18692  if (a >= a9) {... */
        tag_980:
            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
          0x056bc75e2d63100000
            /* \"src/libraries/LogExpMath.sol\":4428:4454  25_000_000_000_000_000_000 */
          0x015af1d78b58c40000
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap3
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          swap2
          add
            /* \"src/libraries/LogExpMath.sol\":18598:18692  if (a >= a9) {... */
          swap1
          codesize
          jump(tag_981)
            /* \"src/libraries/LogExpMath.sol\":18490:18584  if (a >= a8) {... */
        tag_978:
            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
          0x056bc75e2d63100000
            /* \"src/libraries/LogExpMath.sol\":4301:4327  50_000_000_000_000_000_000 */
          0x02b5e3af16b1880000
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap3
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          swap2
          add
            /* \"src/libraries/LogExpMath.sol\":18490:18584  if (a >= a8) {... */
          swap1
          codesize
          jump(tag_979)
            /* \"src/libraries/LogExpMath.sol\":18382:18476  if (a >= a7) {... */
        tag_976:
            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
          0x056bc75e2d63100000
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          dup1
          swap3
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          swap2
          add
            /* \"src/libraries/LogExpMath.sol\":18382:18476  if (a >= a7) {... */
          swap1
          codesize
          jump(tag_977)
            /* \"src/libraries/LogExpMath.sol\":18274:18368  if (a >= a6) {... */
        tag_974:
            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
          0x056bc75e2d63100000
            /* \"src/libraries/LogExpMath.sol\":4047:4074  200_000_000_000_000_000_000 */
          0x0ad78ebc5ac6200000
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap3
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          swap2
          add
            /* \"src/libraries/LogExpMath.sol\":18274:18368  if (a >= a6) {... */
          swap1
          codesize
          jump(tag_975)
            /* \"src/libraries/LogExpMath.sol\":18166:18260  if (a >= a5) {... */
        tag_972:
            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
          0x056bc75e2d63100000
            /* \"src/libraries/LogExpMath.sol\":3918:3945  400_000_000_000_000_000_000 */
          0x15af1d78b58c400000
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap3
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          swap2
          add
            /* \"src/libraries/LogExpMath.sol\":18166:18260  if (a >= a5) {... */
          swap1
          codesize
          jump(tag_973)
            /* \"src/libraries/LogExpMath.sol\":18058:18152  if (a >= a4) {... */
        tag_970:
            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
          0x056bc75e2d63100000
            /* \"src/libraries/LogExpMath.sol\":3787:3814  800_000_000_000_000_000_000 */
          0x2b5e3af16b18800000
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap3
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          swap2
          add
            /* \"src/libraries/LogExpMath.sol\":18058:18152  if (a >= a4) {... */
          swap1
          codesize
          jump(tag_971)
            /* \"src/libraries/LogExpMath.sol\":17950:18044  if (a >= a3) {... */
        tag_968:
            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
          0x056bc75e2d63100000
            /* \"src/libraries/LogExpMath.sol\":3650:3679  1_600_000_000_000_000_000_000 */
          0x56bc75e2d631000000
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap3
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          swap2
          add
            /* \"src/libraries/LogExpMath.sol\":17950:18044  if (a >= a3) {... */
          swap1
          codesize
          jump(tag_969)
            /* \"src/libraries/LogExpMath.sol\":17842:17936  if (a >= a2) {... */
        tag_966:
            /* \"src/libraries/LogExpMath.sol\":2090:2094  1e20 */
          0x056bc75e2d63100000
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap2
          swap3
          swap5
          pop
            /* \"src/libraries/LogExpMath.sol\":3503:3532  3_200_000_000_000_000_000_000 */
          0xad78ebc5ac62000000
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap4
          pop
          mul
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          sdiv
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          swap2
          add
            /* \"src/libraries/LogExpMath.sol\":17842:17936  if (a >= a2) {... */
          swap1
          codesize
          dup1
          dup1
          jump(tag_967)
            /* \"src/libraries/LogExpMath.sol\":17399:17525  if (a >= a1 * ONE_18) {... */
        tag_964:
            /* \"src/libraries/LogExpMath.sol\":3385:3422  6_235_149_080_811_616_882_910_000_000 */
          0x1425982cf597cd205cef7380
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          swap1
          swap2
          sdiv
          swap1
            /* \"src/libraries/LogExpMath.sol\":3324:3350  64_000_000_000_000_000_000 */
          0x03782dace9d9000000
            /* \"src/libraries/LogCompression.sol\":1330:1336  0.5e14 */
          add
            /* \"src/libraries/LogExpMath.sol\":17399:17525  if (a >= a1 * ONE_18) {... */
          jump(tag_965)
            /* \"src/libraries/LogExpMath.sol\":17259:17385  if (a >= a0 * ONE_18) {... */
        tag_962:
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          pop
            /* \"src/libraries/LogExpMath.sol\":3187:3261  38_877_084_059_945_950_922_200_000_000_000_000_000_000_000_000_000_000_000 */
          0x0195e54c5dd42177f53a27172fa9ec630262827000000000
            /* \"src/libraries/LogCompression.sol\":1265:1269  1e14 */
          swap1
          sdiv
            /* \"src/libraries/LogExpMath.sol\":3125:3152  128_000_000_000_000_000_000 */
          0x06f05b59d3b2000000
            /* \"src/libraries/LogExpMath.sol\":17259:17385  if (a >= a0 * ONE_18) {... */
          jump(tag_963)
            /* \"src/libraries/LogExpMath.sol\":15339:15760  if (a < ONE_18) {... */
        tag_960:
            /* \"src/libraries/LogExpMath.sol\":15722:15743  (ONE_18 * ONE_18) / a */
          tag_987
            /* \"src/libraries/LogExpMath.sol\":15718:15744  _ln((ONE_18 * ONE_18) / a) */
          tag_988
            /* \"src/libraries/LogExpMath.sol\":15722:15743  (ONE_18 * ONE_18) / a */
          swap2
          tag_52
          jump\t// in
        tag_987:
            /* \"src/libraries/LogExpMath.sol\":15718:15744  _ln((ONE_18 * ONE_18) / a) */
          tag_56
          jump\t// in
        tag_988:
          0x00
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          sub
            /* \"src/libraries/LogExpMath.sol\":15709:15745  return (-_ln((ONE_18 * ONE_18) / a)) */
          swap1
          jump\t// out
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
        tag_57:
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
          dup2
          eq
          tag_636
          jumpi
          0x01
          add
          swap1
          jump\t// out
            /* \"src/libraries/StableMath.sol\":3525:4633  function _computeLiquidityFromAdjustedBalances(... */
        tag_58:
          swap2
          swap1
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x00
            /* \"src/libraries/StableMath.sol\":3738:3747  xp0 + xp1 */
          swap2
          tag_991
          dup3
          dup6
          tag_24
          jump\t// in
        tag_991:
            /* \"src/libraries/StableMath.sol\":3761:3767  s == 0 */
          swap1
          dup2
          iszero
            /* \"src/libraries/StableMath.sol\":3757:3802  if (s == 0) {... */
          tag_992
          jumpi
            /* \"src/libraries/StableMath.sol\":3812:3825  uint256 prevD */
          dup4
            /* \"src/libraries/StableMath.sol\":3891:3904  uint256 D = s */
          dup3
            /* \"src/libraries/StableMath.sol\":3927:3962  xp0 < xp1 ? (xp0, xp1) : (xp1, xp0) */
          swap6
            /* \"src/libraries/StableMath.sol\":3927:3936  xp0 < xp1 */
          dup5
          dup2
          lt
            /* \"src/libraries/StableMath.sol\":3927:3962  xp0 < xp1 ? (xp0, xp1) : (xp1, xp0) */
          0x00
            /* \"src/libraries/StableMath.sol\":3927:3936  xp0 < xp1 */
          eq
          tag_994
          jumpi
            /* \"src/libraries/StableMath.sol\":3927:3962  xp0 < xp1 ? (xp0, xp1) : (xp1, xp0) */
          swap3
          swap2
          swap1
        tag_996:
            /* \"src/libraries/StableMath.sol\":3977:3990  uint256 i = 0 */
          dup1
            /* \"src/libraries/StableMath.sol\":3972:4294  for (uint256 i = 0; i < MAX_LOOP_LIMIT; i++) {... */
          swap5
            /* \"src/libraries/StableMath.sol\":3992:4010  i < MAX_LOOP_LIMIT */
        tag_997:
            /* \"src/libraries/StableMath.sol\":929:932  256 */
          0x0100
            /* \"src/libraries/StableMath.sol\":3992:4010  i < MAX_LOOP_LIMIT */
          dup7
          lt
          tag_998
          jumpi
            /* \"src/libraries/StableMath.sol\":4451:4481  stdMath.percentDelta(D, prevD) */
          pop
          pop
          pop
          pop
          pop
          pop
            /* \"src/libraries/StableMath.sol\":4511:4529  0.0000000000004e18 */
          0x061a80
            /* \"src/libraries/StableMath.sol\":4451:4481  stdMath.percentDelta(D, prevD) */
          tag_1000
          dup3
          dup5
          tag_50
          jump\t// in
        tag_1000:
            /* \"src/libraries/StableMath.sol\":4495:4529  percentDelta <= 0.0000000000004e18 */
          gt
          iszero
            /* \"src/libraries/StableMath.sol\":4491:4578  if (percentDelta <= 0.0000000000004e18) {... */
          tag_1001
          jumpi
            /* \"src/libraries/StableMath.sol\":320:323  100 */
          0x64
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mload(0x40)
            /* \"src/libraries/StableMath.sol\":4588:4626  revert(\"SM: COMPUTE_DID_NOT_CONVERGE\") */
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
            /* \"src/libraries/StableMath.sol\":929:932  256 */
          0x20
            /* \"src/libraries/StableMath.sol\":4074:4075  4 */
          0x04
            /* \"src/libraries/StableMath.sol\":4588:4626  revert(\"SM: COMPUTE_DID_NOT_CONVERGE\") */
          dup3
          add
            /* \"src/libraries/StableMath.sol\":929:932  256 */
          mstore
          0x1c
          0x24
          dup3
          add
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mstore
            /* \"src/libraries/StableMath.sol\":929:932  256 */
          0x534d3a20434f4d505554455f4449445f4e4f545f434f4e564552474500000000
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x44
          dup3
          add
            /* \"src/libraries/StableMath.sol\":929:932  256 */
          mstore
            /* \"src/libraries/StableMath.sol\":4588:4626  revert(\"SM: COMPUTE_DID_NOT_CONVERGE\") */
          revert
            /* \"src/libraries/StableMath.sol\":4491:4578  if (percentDelta <= 0.0000000000004e18) {... */
        tag_1001:
            /* \"src/libraries/StableMath.sol\":4553:4562  D + prevD */
          tag_1003
          swap2
          tag_24
          jump\t// in
        tag_1003:
            /* \"src/libraries/StableMath.sol\":409:415  1 days */
          0x01
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          shr
            /* \"src/libraries/StableMath.sol\":4545:4567  return (D + prevD) / 2 */
          swap1
          jump\t// out
            /* \"src/libraries/StableMath.sol\":4012:4015  i++ */
        tag_998:
            /* \"src/libraries/StableMath.sol\":4047:4052  D * D */
          swap1
          swap2
          swap3
          swap4
          swap5
          swap6
          pop
            /* \"src/libraries/StableMath.sol\":4044:4071  (((D * D) / xp0) * D) / xp1 */
          tag_1004
            /* \"src/libraries/StableMath.sol\":4047:4052  D * D */
          dup2
            /* \"src/libraries/StableMath.sol\":4045:4064  ((D * D) / xp0) * D */
          tag_1007
            /* \"src/libraries/StableMath.sol\":4047:4052  D * D */
          dup10
            /* \"src/libraries/StableMath.sol\":4046:4059  (D * D) / xp0 */
          tag_918
            /* \"src/libraries/StableMath.sol\":4047:4052  D * D */
          dup10
          tag_1007
          dup4
          dup1
          tag_41
          jump\t// in
        tag_1007:
            /* \"src/libraries/StableMath.sol\":4046:4059  (D * D) / xp0 */
          tag_42
          jump\t// in
            /* \"src/libraries/StableMath.sol\":4044:4071  (((D * D) / xp0) * D) / xp1 */
        tag_1004:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap6
          dup7
            /* \"src/libraries/StableMath.sol\":4144:4145  2 */
          0x02
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          shr
            /* \"src/libraries/StableMath.sol\":4089:4098  prevD = D */
          swap8
          dup1
          swap9
          dup7
            /* \"src/libraries/StableMath.sol\":4117:4155  ((N_A * s) / A_PRECISION + 2 * dP) * D */
          tag_1008
            /* \"src/libraries/StableMath.sol\":4089:4098  prevD = D */
          dup4
            /* \"src/libraries/StableMath.sol\":4118:4150  (N_A * s) / A_PRECISION + 2 * dP */
          tag_918
            /* \"src/libraries/StableMath.sol\":4089:4098  prevD = D */
          dup2
            /* \"src/libraries/StableMath.sol\":320:323  100 */
          swap13
            /* \"src/libraries/StableMath.sol\":409:415  1 days */
          0x7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
            /* \"src/libraries/StableMath.sol\":320:323  100 */
          dup12
            /* \"src/libraries/StableMath.sol\":4119:4126  N_A * s */
          tag_1010
            /* \"src/libraries/StableMath.sol\":320:323  100 */
          0x64
            /* \"src/libraries/StableMath.sol\":4119:4126  N_A * s */
          swap8
          dup9
          swap3
          tag_41
          jump\t// in
        tag_1010:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          div
            /* \"src/libraries/StableMath.sol\":409:415  1 days */
          swap2
          0x01
          shr
          and
            /* \"src/libraries/StableMath.sol\":4118:4150  (N_A * s) / A_PRECISION + 2 * dP */
          swap1
          tag_24
          jump\t// in
            /* \"src/libraries/StableMath.sol\":4117:4155  ((N_A * s) / A_PRECISION + 2 * dP) * D */
        tag_1008:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          swap3
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9c
          dup9
          add
          dup9
          dup2
          gt
          tag_1011
          jumpi
            /* \"src/libraries/StableMath.sol\":4160:4183  (N_A - A_PRECISION) * D */
          swap1
          tag_1013
          swap2
          tag_41
          jump\t// in
        tag_1013:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          div
            /* \"src/libraries/StableMath.sol\":4200:4201  3 */
          0x03
            /* \"src/libraries/StableMath.sol\":409:415  1 days */
          swap2
          dup1
          dup4
          mul
          swap3
          dup4
          div
          sub
          tag_1014
          jumpi
            /* \"src/libraries/StableMath.sol\":4116:4207  (((N_A * s) / A_PRECISION + 2 * dP) * D) / ((N_A - A_PRECISION) * D / A_PRECISION + 3 * dP) */
          tag_1016
            /* \"src/libraries/StableMath.sol\":4160:4206  (N_A - A_PRECISION) * D / A_PRECISION + 3 * dP */
          swap3
          swap2
          tag_1017
          swap2
          tag_24
          jump\t// in
        tag_1017:
            /* \"src/libraries/StableMath.sol\":4116:4207  (((N_A * s) / A_PRECISION + 2 * dP) * D) / ((N_A - A_PRECISION) * D / A_PRECISION + 3 * dP) */
          swap1
          tag_42
          jump\t// in
        tag_1016:
            /* \"src/libraries/StableMath.sol\":4225:4241  D.within1(prevD) */
          tag_1018
            /* \"src/libraries/StableMath.sol\":4112:4207  D = (((N_A * s) / A_PRECISION + 2 * dP) * D) / ((N_A - A_PRECISION) * D / A_PRECISION + 3 * dP) */
          dup2
            /* \"src/libraries/StableMath.sol\":4225:4241  D.within1(prevD) */
          swap10
          dup3
          tag_59
          jump\t// in
        tag_1018:
            /* \"src/libraries/StableMath.sol\":4221:4284  if (D.within1(prevD)) {... */
          tag_1019
          jumpi
            /* \"src/libraries/StableMath.sol\":4012:4015  i++ */
          pop
          tag_1021
          swap1
          tag_57
          jump\t// in
        tag_1021:
            /* \"src/libraries/StableMath.sol\":3977:3990  uint256 i = 0 */
          swap5
          swap4
          swap3
          swap2
          swap1
          jump(tag_997)
            /* \"src/libraries/StableMath.sol\":4221:4284  if (D.within1(prevD)) {... */
        tag_1019:
            /* \"src/libraries/StableMath.sol\":4261:4269  return D */
          swap8
          pop
          pop
          pop
          pop
          pop
          pop
          pop
          pop
          swap1
          jump\t// out
            /* \"src/libraries/StableMath.sol\":409:415  1 days */
        tag_1014:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x24
          dup7
          0x4e487b7100000000000000000000000000000000000000000000000000000000
          dup2
          mstore
          0x11
            /* \"src/libraries/StableMath.sol\":4074:4075  4 */
          0x04
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mstore
          revert
        tag_1011:
          0x24
          dup9
          0x4e487b7100000000000000000000000000000000000000000000000000000000
          dup2
          mstore
          0x11
            /* \"src/libraries/StableMath.sol\":4074:4075  4 */
          0x04
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mstore
          revert
            /* \"src/libraries/StableMath.sol\":3927:3962  xp0 < xp1 ? (xp0, xp1) : (xp1, xp0) */
        tag_994:
          swap4
          swap3
          swap2
          swap1
          jump(tag_996)
            /* \"src/libraries/StableMath.sol\":3757:3802  if (s == 0) {... */
        tag_992:
            /* \"src/libraries/StableMath.sol\":3783:3791  return 0 */
          pop
          pop
          pop
          swap1
          pop
          swap1
          jump\t// out
            /* \"src/libraries/MathUtils.sol\":519:729  function within1(uint256 a, uint256 b) internal pure returns (bool) {... */
        tag_59:
            /* \"src/libraries/MathUtils.sol\":711:712  1 */
          0x01
            /* \"src/libraries/MathUtils.sol\":519:729  function within1(uint256 a, uint256 b) internal pure returns (bool) {... */
          swap2
            /* \"src/libraries/MathUtils.sol\":625:630  a > b */
          dup1
          dup3
          gt
            /* \"src/libraries/MathUtils.sol\":621:682  if (a > b) {... */
          tag_1022
          jumpi
            /* \"src/libraries/StableMath.sol\":991:1000  1_000_000 */
          sub
            /* \"src/libraries/MathUtils.sol\":702:712  b - a <= 1 */
          gt
          iszero
            /* \"src/libraries/MathUtils.sol\":519:729  function within1(uint256 a, uint256 b) internal pure returns (bool) {... */
          swap1
          jump\t// out
            /* \"src/libraries/MathUtils.sol\":621:682  if (a > b) {... */
        tag_1022:
            /* \"src/libraries/StableMath.sol\":991:1000  1_000_000 */
          swap1
          sub
            /* \"src/libraries/MathUtils.sol\":657:667  a - b <= 1 */
          gt
          iszero
            /* \"src/libraries/MathUtils.sol\":650:667  return a - b <= 1 */
          swap1
          jump\t// out
            /* \"src/libraries/StableMath.sol\":5159:5838  function _getY(... */
        tag_60:
          swap1
          swap2
            /* \"src/libraries/StableMath.sol\":5382:5387  D * D */
          tag_1024
          dup4
          dup1
          tag_41
          jump\t// in
        tag_1024:
            /* \"src/libraries/StableMath.sol\":409:415  1 days */
          swap3
          0x01
          swap2
          dup4
          dup4
          shl
            /* \"src/libraries/StableMath.sol\":5396:5397  2 */
          swap5
          0x02
            /* \"src/libraries/StableMath.sol\":409:415  1 days */
          swap6
          dup6
          dup2
          div
          dup8
          eq
          dup7
          iszero
          or
          iszero
          tag_636
          jumpi
            /* \"src/libraries/StableMath.sol\":5381:5398  (D * D) / (x * 2) */
          tag_918
          dup5
          swap2
            /* \"src/libraries/StableMath.sol\":5413:5418  c * D */
          tag_1028
            /* \"src/libraries/StableMath.sol\":5381:5398  (D * D) / (x * 2) */
          swap4
          tag_42
          jump\t// in
            /* \"src/libraries/StableMath.sol\":5413:5418  c * D */
        tag_1028:
            /* \"src/libraries/StableMath.sol\":320:323  100 */
          0x64
            /* \"src/libraries/StableMath.sol\":409:415  1 days */
          dup2
          mul
          swap1
          dup1
          dup3
          div
            /* \"src/libraries/StableMath.sol\":320:323  100 */
          0x64
            /* \"src/libraries/StableMath.sol\":409:415  1 days */
          eq
          swap1
          iszero
          or
          iszero
          tag_636
          jumpi
          dup2
          dup5
          shl
          dup3
          dup2
          div
          dup8
          eq
          dup4
          iszero
          or
          iszero
          tag_636
          jumpi
            /* \"src/libraries/StableMath.sol\":5412:5445  (c * D) * A_PRECISION / (N_A * 2) */
          tag_1033
          swap2
          tag_42
          jump\t// in
        tag_1033:
            /* \"src/libraries/StableMath.sol\":409:415  1 days */
          swap4
            /* \"src/libraries/StableMath.sol\":320:323  100 */
          0x64
            /* \"src/libraries/StableMath.sol\":409:415  1 days */
          dup4
          mul
          dup4
          dup2
          div
            /* \"src/libraries/StableMath.sol\":320:323  100 */
          0x64
            /* \"src/libraries/StableMath.sol\":409:415  1 days */
          eq
          dup5
          iszero
          or
          iszero
          tag_636
          jumpi
            /* \"src/libraries/StableMath.sol\":5467:5496  x + ((D * A_PRECISION) / N_A) */
          tag_1036
            /* \"src/libraries/StableMath.sol\":5472:5495  (D * A_PRECISION) / N_A */
          swap3
          tag_751
          swap2
          tag_42
          jump\t// in
            /* \"src/libraries/StableMath.sol\":5467:5496  x + ((D * A_PRECISION) / N_A) */
        tag_1036:
            /* \"src/libraries/StableMath.sol\":5529:5534  y = D */
          dup2
            /* \"src/libraries/StableMath.sol\":5590:5603  uint256 i = 0 */
          swap5
          0x00
          dup1
            /* \"src/libraries/StableMath.sol\":5605:5623  i < MAX_LOOP_LIMIT */
        tag_1038:
            /* \"src/libraries/StableMath.sol\":929:932  256 */
          0x0100
            /* \"src/libraries/StableMath.sol\":5605:5623  i < MAX_LOOP_LIMIT */
          dup2
          lt
          tag_1039
          jumpi
            /* \"src/libraries/StableMath.sol\":320:323  100 */
          0x64
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mload(0x40)
            /* \"src/libraries/StableMath.sol\":5796:5831  revert(\"SM: GETY_DID_NOT_CONVERGE\") */
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x20
            /* \"src/libraries/StableMath.sol\":5796:5831  revert(\"SM: GETY_DID_NOT_CONVERGE\") */
          0x04
          dup3
          add
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          mstore
          0x19
          0x24
          dup3
          add
          mstore
          0x534d3a20474554595f4449445f4e4f545f434f4e564552474500000000000000
          0x44
          dup3
          add
          mstore
            /* \"src/libraries/StableMath.sol\":5796:5831  revert(\"SM: GETY_DID_NOT_CONVERGE\") */
          revert
            /* \"src/libraries/StableMath.sol\":5625:5628  i++ */
        tag_1039:
            /* \"src/libraries/StableMath.sol\":5644:5653  yPrev = y */
          dup8
            /* \"src/libraries/StableMath.sol\":5672:5681  y * y + c */
          tag_1041
            /* \"src/libraries/StableMath.sol\":5672:5677  y * y */
          dup9
          tag_1042
          dup4
          dup1
          tag_41
          jump\t// in
        tag_1042:
            /* \"src/libraries/StableMath.sol\":5672:5681  y * y + c */
          tag_24
          jump\t// in
        tag_1041:
            /* \"src/libraries/StableMath.sol\":409:415  1 days */
          swap1
          dup1
          dup9
          shl
          swap1
          dup1
          dup3
          div
          dup7
          eq
          swap1
          iszero
          or
          iszero
          tag_1043
          jumpi
            /* \"src/libraries/StableMath.sol\":5718:5734  y.within1(yPrev) */
          tag_1045
            /* \"src/libraries/StableMath.sol\":5686:5695  y * 2 + b */
          swap2
            /* \"src/libraries/StableMath.sol\":5686:5699  y * 2 + b - D */
          tag_1017
            /* \"src/libraries/StableMath.sol\":5686:5695  y * 2 + b */
          dup9
          tag_331
          dup10
            /* \"src/libraries/StableMath.sol\":5671:5700  (y * y + c) / (y * 2 + b - D) */
          tag_1048
            /* \"src/libraries/StableMath.sol\":5686:5695  y * 2 + b */
          swap6
          tag_24
          jump\t// in
            /* \"src/libraries/StableMath.sol\":5671:5700  (y * y + c) / (y * 2 + b - D) */
        tag_1048:
            /* \"src/libraries/StableMath.sol\":5718:5734  y.within1(yPrev) */
          swap9
          dup10
          tag_59
          jump\t// in
        tag_1045:
            /* \"src/libraries/StableMath.sol\":5714:5777  if (y.within1(yPrev)) {... */
          tag_1049
          jumpi
            /* \"src/libraries/StableMath.sol\":5625:5628  i++ */
          tag_1051
          swap1
          tag_57
          jump\t// in
        tag_1051:
            /* \"src/libraries/StableMath.sol\":5590:5603  uint256 i = 0 */
          jump(tag_1038)
            /* \"src/libraries/StableMath.sol\":5714:5777  if (y.within1(yPrev)) {... */
        tag_1049:
            /* \"src/libraries/StableMath.sol\":5754:5762  return y */
          pop
          pop
          pop
          pop
          pop
          pop
          pop
          swap1
          jump\t// out
            /* \"src/libraries/StableMath.sol\":409:415  1 days */
        tag_1043:
            /* \"src/curve/stable/StablePair.sol\":1289:13029  contract StablePair is ReservoirPair {... */
          0x24
          dup5
          0x4e487b7100000000000000000000000000000000000000000000000000000000
          dup2
          mstore
          mstore(0x04, 0x11)
          revert
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":704:868  function mulWadDown(uint256 x, uint256 y) internal pure returns (uint256) {... */
        tag_61:
          swap1
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":655:659  1e18 */
          0x0de0b6b3a7640000
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":1744:2084  assembly {... */
          swap2
          dup2
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
          div
          dup2
          gt
          dup3
          mul
          iszero
          dup4
          mul
          iszero
          tag_632
          jumpi
          mul
          div
            /* \"lib/solmate/src/utils/FixedPointMathLib.sol\":704:868  function mulWadDown(uint256 x, uint256 y) internal pure returns (uint256) {... */
          swap1
          jump\t// out

        auxdata: 0xa164736f6c6343000811000a
    }
}

sub_5: assembly {
        /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */
      0x80
      dup1
      0x40
      mstore
      jumpi(tag_1, callvalue)
        /* \"lib/solmate/src/auth/Owned.sol\":1045:1059  owner = _owner */
      0x00
        /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */
      dup1
      sload
      not(sub(shl(0xa0, 0x01), 0x01))
      and
        /* \"src/oracle/OracleCaller.sol\":174:184  msg.sender */
      caller
        /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */
      swap1
      dup2
      or
      dup3
      sstore
        /* \"src/oracle/OracleCaller.sol\":174:184  msg.sender */
      swap1
        /* \"lib/solmate/src/auth/Owned.sol\":1075:1115  OwnershipTransferred(address(0), _owner) */
      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
        /* \"lib/solmate/src/auth/Owned.sol\":1045:1059  owner = _owner */
      dup2
      dup1
        /* \"lib/solmate/src/auth/Owned.sol\":1075:1115  OwnershipTransferred(address(0), _owner) */
      log3
        /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */
      dataSize(sub_0)
      swap1
      dup2
      dataOffset(sub_0)
      dup3
      codecopy
      return
    tag_1:
      0x00
      dup1
      revert
    stop

    sub_0: assembly {
            /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */
          0x80
          0x40
          swap1
          dup1
          dup3
          mstore
          jumpi(tag_5, iszero(lt(calldatasize, 0x04)))
          0x00
          dup1
          revert
        tag_5:
          0x00
          swap2
          dup3
          calldataload
          0xe0
          shr
          swap2
          dup3
          0x8da5cb5b
          eq
          tag_7
          jumpi
          pop
          dup2
          0x9b19251a
          eq
          tag_9
          jumpi
          dup2
          0xb9a45aac
          eq
          tag_11
          jumpi
          dup2
          0xc9d163d1
          eq
          tag_13
          jumpi
          pop
          0xf2fde38b
          eq
          tag_15
          jumpi
          0x00
          dup1
          revert
        tag_15:
          jumpi(tag_19, callvalue)
          jumpi(tag_19, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))
          0xffffffffffffffffffffffff0000000000000000000000000000000000000000
          tag_21
          tag_1
          jump\t// in
        tag_21:
          dup3
          sload
          swap1
          0xffffffffffffffffffffffffffffffffffffffff
          swap1
            /* \"lib/solmate/src/auth/Owned.sol\":756:800  require(msg.sender == owner, \"UNAUTHORIZED\") */
          tag_22
            /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */
          dup3
          dup5
          and
            /* \"lib/solmate/src/auth/Owned.sol\":764:774  msg.sender */
          caller
            /* \"lib/solmate/src/auth/Owned.sol\":764:783  msg.sender == owner */
          eq
            /* \"lib/solmate/src/auth/Owned.sol\":756:800  require(msg.sender == owner, \"UNAUTHORIZED\") */
          tag_2
          jump\t// in
        tag_22:
            /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */
          and
          swap2
          dup3
          swap2
          and
          or
          dup3
          sstore
            /* \"lib/solmate/src/auth/Owned.sol\":764:774  msg.sender */
          caller
            /* \"lib/solmate/src/auth/Owned.sol\":1424:1466  OwnershipTransferred(msg.sender, newOwner) */
          0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
          dup4
          dup1
          log3
            /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */
          dup1
          return
        tag_19:
          dup1
          revert
        tag_13:
          dup3
          jumpi(tag_19, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_19
          jumpi
          calldataload(0x04)
          swap1
          0xffffffffffffffffffffffffffffffffffffffff
          dup3
          and
          dup1
          swap3
          sub
          tag_19
          jumpi
          dup3
          mload
          swap2
          tag_29
          dup4
          tag_3
          jump\t// in
        tag_29:
          dup2
          dup4
          mstore
          dup2
          0x60
          0x20
          swap5
          dup3
          dup7
          dup3
          add
          mstore
          dup3
          dup8
          dup3
          add
          mstore
          add
          mstore
            /* \"src/oracle/OracleCaller.sol\":443:453  msg.sender */
          caller
            /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */
          dup3
          mstore
          0x01
          dup4
          mstore
          0xff
          dup5
          dup4
          keccak256
          sload
          and
          iszero
          tag_30
          jumpi
          0x80
          0x24
          swap2
          dup6
          mload
            /* \"src/oracle/OracleCaller.sol\":503:528  aPair.observation(aIndex) */
          swap3
          dup4
          dup1
          swap3
            /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */
          0x9d62a69400000000000000000000000000000000000000000000000000000000
            /* \"src/oracle/OracleCaller.sol\":503:528  aPair.observation(aIndex) */
          dup3
          mstore
            /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */
          dup3
          calldataload
          0x04
            /* \"src/oracle/OracleCaller.sol\":503:528  aPair.observation(aIndex) */
          dup4
          add
            /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */
          mstore
            /* \"src/oracle/OracleCaller.sol\":503:528  aPair.observation(aIndex) */
          gas
          staticcall
          swap2
          dup3
          iszero
          tag_32
          jumpi
          dup1
          swap3
          tag_34
          jumpi
            /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */
        tag_35:
          0x80
          dup5
          0xffffffff
          0x60
          dup7
          dup10
          dup1
          mload
          swap5
          dup3
          mload
          0x0d
          signextend
          dup7
          mstore
          dup1
          dup4
          add
          mload
          0x06
          signextend
          swap1
          dup7
          add
          mstore
          dup1
          dup3
          add
          mload
          0x06
          signextend
          swap1
          dup6
          add
          mstore
          add
          mload
          and
          0x60
          dup3
          add
          mstore
          return
            /* \"src/oracle/OracleCaller.sol\":503:528  aPair.observation(aIndex) */
        tag_34:
            /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */
          0x80
          swap3
          pop
            /* \"src/oracle/OracleCaller.sol\":503:528  aPair.observation(aIndex) */
          swap1
          returndatasize
          dup4
          gt
          tag_36
          jumpi
        tag_37:
            /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
          0x1f
          dup5
          add
          and
          dup2
          add
          swap3
          dup2
          dup5
          lt
          0xffffffffffffffff
          dup6
          gt
          or
          tag_38
          jumpi
          dup2
          0x80
          swap2
          dup6
          dup9
          mstore
            /* \"src/oracle/OracleCaller.sol\":503:528  aPair.observation(aIndex) */
          dup2
          add
            /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */
          sub
          slt
          tag_40
          jumpi
          tag_42
          dup4
          tag_3
          jump\t// in
        tag_42:
          dup1
          mload
          dup1
          0x0d
          signextend
          dup2
          sub
          tag_43
          jumpi
          dup4
          mstore
          0x60
          swap1
          tag_45
          dup6
          dup3
          add
          tag_4
          jump\t// in
        tag_45:
          dup6
          dup6
          add
          mstore
          tag_46
          dup7
          dup3
          add
          tag_4
          jump\t// in
        tag_46:
          dup7
          dup6
          add
          mstore
          add
          mload
          swap1
          0xffffffff
          dup3
          and
          dup3
          sub
          tag_19
          jumpi
          pop
          0x60
          dup1
          dup4
          add
          swap2
          swap1
          swap2
          mstore
          0x80
            /* \"src/oracle/OracleCaller.sol\":503:528  aPair.observation(aIndex) */
          jump(tag_35)
            /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */
        tag_43:
          dup3
          dup1
          revert
        tag_40:
          pop
          dup1
          revert
        tag_38:
          0x24
          dup4
          0x4e487b7100000000000000000000000000000000000000000000000000000000
          dup2
          mstore
          mstore(0x04, 0x41)
          revert
            /* \"src/oracle/OracleCaller.sol\":503:528  aPair.observation(aIndex) */
        tag_36:
          returndatasize
          swap3
          pop
          jump(tag_37)
        tag_32:
            /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */
          dup5
          mload
          swap1
          returndatasize
          swap1
          dup3
          returndatacopy
          returndatasize
          swap1
          revert
        tag_30:
          0x64
          dup4
          dup6
          mload
          swap1
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup3
          mstore
          0x04
          dup3
          add
          mstore
          0x13
          0x24
          dup3
          add
          mstore
          0x4f433a204e4f545f57484954454c495354454400000000000000000000000000
          0x44
          dup3
          add
          mstore
          revert
        tag_11:
          swap1
          pop
          jumpi(tag_40, callvalue)
          dup1
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_40
          jumpi
          tag_53
          tag_1
          jump\t// in
        tag_53:
          swap1
          calldataload(0x24)
          dup1
          iszero
          iszero
          dup1
          swap2
          sub
          tag_54
          jumpi
            /* \"src/oracle/OracleCaller.sol\":676:713  WhitelistChanged(aCaller, aWhitelist) */
          0xb840a1dbd8b09a3dc45161bba92dfb9aba643c0e44c085a447f839d1d02cf13b
            /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */
          swap3
          0xffffffffffffffffffffffffffffffffffffffff
          swap1
            /* \"lib/solmate/src/auth/Owned.sol\":756:800  require(msg.sender == owner, \"UNAUTHORIZED\") */
          tag_56
            /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */
          dup3
          dup8
          sload
          and
            /* \"lib/solmate/src/auth/Owned.sol\":764:774  msg.sender */
          caller
            /* \"lib/solmate/src/auth/Owned.sol\":764:783  msg.sender == owner */
          eq
            /* \"lib/solmate/src/auth/Owned.sol\":756:800  require(msg.sender == owner, \"UNAUTHORIZED\") */
          tag_2
          jump\t// in
        tag_56:
            /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */
          and
          swap1
          dup2
          dup6
          mstore
            /* \"src/oracle/OracleCaller.sol\":630:639  whitelist */
          0x01
            /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */
          0x20
          mstore
          dup3
          dup6
          keccak256
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
          dup2
          sload
          and
          0xff
          dup4
          and
          or
          swap1
          sstore
          dup3
          mload
          swap2
          dup3
          mstore
          0x20
          dup3
          add
          mstore
            /* \"src/oracle/OracleCaller.sol\":676:713  WhitelistChanged(aCaller, aWhitelist) */
          log1
            /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */
          dup1
          return
        tag_54:
          dup4
          dup1
          revert
        tag_9:
          swap1
          pop
          jumpi(tag_40, callvalue)
          jumpi(tag_40, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))
          0xff
          dup2
          0x20
          swap4
          0xffffffffffffffffffffffffffffffffffffffff
          tag_61
          tag_1
          jump\t// in
        tag_61:
          and
          dup2
          mstore
            /* \"src/oracle/OracleCaller.sol\":253:294  mapping(address => bool) public whitelist */
          0x01
            /* \"src/oracle/OracleCaller.sol\":143:722  contract OracleCaller is Owned(msg.sender) {... */
          dup6
          mstore
          keccak256
          sload
          and
          swap1
          mload
          swap1
          iszero
          iszero
          dup2
          mstore
          return
        tag_7:
          dup4
          swap1
          jumpi(tag_40, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_40
          jumpi
          0xffffffffffffffffffffffffffffffffffffffff
          0x20
          swap3
          sload
          and
          dup2
          mstore
          return
        tag_1:
          calldataload(0x04)
          swap1
          0xffffffffffffffffffffffffffffffffffffffff
          dup3
          and
          dup3
          sub
          tag_66
          jumpi
          jump\t// out
        tag_66:
          0x00
          dup1
          revert
        tag_2:
          iszero
          tag_68
          jumpi
          jump\t// out
        tag_68:
          0x64
          mload(0x40)
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
          0x20
          0x04
          dup3
          add
          mstore
          0x0c
          0x24
          dup3
          add
          mstore
          0x554e415554484f52495a45440000000000000000000000000000000000000000
          0x44
          dup3
          add
          mstore
          revert
        tag_3:
          0x80
          dup2
          add
          swap1
          dup2
          lt
          0xffffffffffffffff
          dup3
          gt
          or
          tag_70
          jumpi
          0x40
          mstore
          jump\t// out
        tag_70:
          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)
          mstore(0x04, 0x41)
          revert(0x00, 0x24)
        tag_4:
          mload
          swap1
          dup2
          0x06
          signextend
          dup3
          sub
          tag_66
          jumpi
          jump\t// out

        auxdata: 0xa164736f6c6343000811000a
    }
}

sub_6: assembly {
        /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
      0xe0
      0x40
      swap1
      dup1
      dup3
      mstore
      jumpi(tag_15, callvalue)
      bytecodeSize
      dup1
      codesize
      sub
      dup1
      swap2
      tag_6
      dup3
      dup6
      tag_1
      jump\t// in
    tag_6:
      dup4
      codecopy
      dup2
      add
      0x60
      dup3
      dup3
      sub
      slt
      tag_15
      jumpi
      dup2
      mload
      sub(shl(0x40, 0x01), 0x01)
      swap4
      swap1
      dup5
      dup2
      gt
      tag_15
      jumpi
      dup3
      tag_11
      swap2
      dup6
      add
      tag_2
      jump\t// in
    tag_11:
      swap3
      0x20
      swap3
      dup4
      dup3
      add
      mload
      dup7
      dup2
      gt
      tag_15
      jumpi
      dup4
      swap2
      tag_14
      swap2
      dup5
      add
      tag_2
      jump\t// in
    tag_14:
      swap2
      add
      mload
      0xff
      dup2
      and
      dup2
      sub
      tag_15
      jumpi
      dup5
      mload
      swap5
      dup7
      dup7
      gt
      tag_17
      jumpi
      0x00
      swap6
      dup1
      tag_19
      dup9
      sload
      tag_3
      jump\t// in
    tag_19:
      swap3
      0x1f
      swap4
      dup5
      dup2
      gt
      tag_20
      jumpi
    tag_21:
      pop
      dup8
      swap1
      dup5
      dup4
      gt
      0x01
      eq
      tag_22
      jumpi
      dup10
      swap3
      tag_24
      jumpi
    tag_25:
      pop
      pop
      dup2
      0x01
      shl
      swap2
      not(0x00)
      swap1
      0x03
      shl
      shr
      not
      and
      or
      dup7
      sstore
    tag_26:
      dup3
      mload
      swap1
      dup8
      dup3
      gt
      tag_27
      jumpi
      dup2
      swap1
      0x01
      swap5
      tag_29
      dup7
      sload
      tag_3
      jump\t// in
    tag_29:
      dup3
      dup2
      gt
      tag_30
      jumpi
    tag_31:
      pop
      dup8
      swap2
      dup4
      gt
      0x01
      eq
      tag_32
      jumpi
      dup9
      swap3
      tag_34
      jumpi
    tag_35:
      pop
      pop
      not(0x00)
      0x03
      dup4
      swap1
      shl
      shr
      not
      and
      swap1
      dup4
      shl
      or
      dup3
      sstore
    tag_36:
        /* \"lib/solmate/src/tokens/ERC20.sol\":2142:2162  decimals = _decimals */
      0x80
      mstore
        /* \"lib/solmate/src/tokens/ERC20.sol\":2192:2205  block.chainid */
      chainid
        /* \"lib/solmate/src/tokens/ERC20.sol\":2173:2205  INITIAL_CHAIN_ID = block.chainid */
      0xa0
      mstore
        /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
      dup2
      mload
      dup5
      sload
      swap2
      dup2
      dup7
      tag_37
      dup6
      tag_3
      jump\t// in
    tag_37:
      swap3
      dup4
      dup4
      mstore
      dup8
      dup4
      add
      swap6
      dup9
      dup3
      dup3
      and
        /* \"lib/solmate/src/tokens/ERC20.sol\":2116:2132  symbol = _symbol */
      swap2
      dup3
        /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
      0x00
        /* \"lib/solmate/src/tokens/ERC20.sol\":2116:2132  symbol = _symbol */
      eq
      tag_38
      jumpi
        /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
      pop
      pop
      0x01
      eq
      tag_40
      jumpi
    tag_41:
      pop
      tag_42
      swap3
      pop
      sub
      dup3
      tag_1
      jump\t// in
    tag_42:
      mload
        /* \"lib/solmate/src/tokens/ERC20.sol\":5789:5811  keccak256(bytes(name)) */
      swap1
      keccak256
        /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
      swap3
      dup2
      mload
        /* \"lib/solmate/src/tokens/ERC20.sol\":5640:5935  abi.encode(... */
      swap3
      dup4
      add
        /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
      swap4
        /* \"lib/solmate/src/tokens/ERC20.sol\":5672:5767  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */
      0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f
        /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
      dup6
      mstore
      dup3
      dup5
      add
      mstore
        /* \"lib/solmate/src/tokens/ERC20.sol\":5833:5847  keccak256(\"1\") */
      0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6
        /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
      0x60
      dup5
      add
      mstore
        /* \"lib/solmate/src/tokens/ERC20.sol\":2192:2205  block.chainid */
      chainid
        /* \"lib/solmate/src/tokens/ERC20.sol\":2142:2162  decimals = _decimals */
      0x80
        /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
      dup5
      add
      mstore
        /* \"lib/solmate/src/tokens/ERC20.sol\":5912:5916  this */
      address
        /* \"lib/solmate/src/tokens/ERC20.sol\":2173:2205  INITIAL_CHAIN_ID = block.chainid */
      0xa0
        /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
      dup5
      add
      mstore
        /* \"lib/solmate/src/tokens/ERC20.sol\":2173:2205  INITIAL_CHAIN_ID = block.chainid */
      0xa0
        /* \"lib/solmate/src/tokens/ERC20.sol\":5640:5935  abi.encode(... */
      dup4
      mstore
        /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
      0xc0
      dup4
      add
      swap5
      dup4
      dup7
      lt
      swap1
      dup7
      gt
      or
      tag_43
      jumpi
      pop
      dup4
      swap1
      mstore
      mload
        /* \"lib/solmate/src/tokens/ERC20.sol\":5613:5949  keccak256(... */
      swap1
      keccak256
        /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
      0xc0
        /* \"lib/solmate/src/tokens/ERC20.sol\":2215:2266  INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator() */
      mstore
        /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
      dataSize(sub_0)
      swap1
      dup2
      dataOffset(sub_0)
      dup3
      codecopy
        /* \"lib/solmate/src/tokens/ERC20.sol\":2142:2162  decimals = _decimals */
      0x80
        /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
      mload
      dup2
      assignImmutable(\"0xb7b2278e6c1d8d0abc309f6bf9256046dfb6cd1d61f6bb10388e8ea4928d3539\")
        /* \"lib/solmate/src/tokens/ERC20.sol\":2173:2205  INITIAL_CHAIN_ID = block.chainid */
      0xa0
        /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
      mload
      dup2
      assignImmutable(\"0x81290bb363e768cff9ff9a5d447e434874948b933698048b966fdf5d744bf636\")
      mload(0xc0)
      dup2
      assignImmutable(\"0x34382e0db9f4d1365b2614bb97467901a574db9e05159d2f14a2053ade673b06\")
      return
    tag_43:
      shl(0xe0, 0x4e487b71)
      dup2
      mstore
      mstore(0x04, 0x41)
      0x24
      swap1
      revert
    tag_40:
      dup8
      swap2
      pop
      dup9
      dup1
      mstore
      dup2
      dup10
      keccak256
      swap1
      dup10
      swap2
    tag_45:
      dup6
      dup4
      lt
      tag_46
      jumpi
      pop
      pop
      tag_42
      swap4
      pop
      dup3
      add
      add
      codesize
      jump(tag_41)
    tag_46:
      dup1
      sload
      dup4
      dup9
      add
      dup6
      add
      mstore
      dup7
      swap5
      pop
      dup10
      swap4
      swap1
      swap3
      add
      swap2
      dup2
      add
      jump(tag_45)
    tag_38:
      not(0xff)
      and
      dup9
      mstore
      tag_42
      swap6
      iszero
      iszero
      0x05
      shl
      dup6
      add
      add
      swap3
      pop
      codesize
      swap2
      pop
      tag_41
      swap1
      pop
      jump
    tag_34:
      add
      mload
      swap1
      pop
      codesize
      dup1
      jump(tag_35)
    tag_32:
      dup6
      dup10
      mstore
      dup8
      dup10
      keccak256
      dup7
      swap5
      pop
      swap2
      swap1
      not(0x1f)
      dup5
      and
      dup11
    tag_48:
      dup11
      dup3
      dup3
      lt
      tag_49
      jumpi
      pop
      pop
      dup5
      gt
      tag_51
      jumpi
    tag_52:
      pop
      pop
      pop
      dup2
      shl
      add
      dup3
      sstore
      jump(tag_36)
    tag_51:
      add
      mload
      not(0x00)
      0xf8
      dup5
      0x03
      shl
      and
      shr
      not
      and
      swap1
      sstore
      codesize
      dup1
      dup1
      jump(tag_52)
    tag_49:
      dup4
      dup6
      add
      mload
      dup7
      sstore
      dup10
      swap8
      swap1
      swap6
      add
      swap5
      swap4
      dup5
      add
      swap4
      add
      jump(tag_48)
    tag_30:
      swap1
      swap2
      swap3
      pop
      dup6
      dup10
      mstore
      dup8
      dup10
      keccak256
      dup4
      dup1
      dup7
      add
      0x05
      shr
      dup3
      add
      swap3
      dup11
      dup8
      lt
      tag_53
      jumpi
    tag_54:
      swap2
      dup7
      swap6
      dup10
      swap3
      swap6
      swap5
      swap4
      add
      0x05
      shr
      add
      swap2
    tag_55:
      dup3
      dup2
      lt
      tag_56
      jumpi
      pop
      pop
      jump(tag_31)
    tag_56:
      dup12
      dup2
      sstore
      dup7
      swap6
      pop
      dup9
      swap2
      add
      jump(tag_55)
    tag_53:
      swap3
      pop
      dup2
      swap3
      jump(tag_54)
    tag_27:
      shl(0xe0, 0x4e487b71)
      dup8
      mstore
      mstore(0x04, 0x41)
      0x24
      dup8
      revert
    tag_24:
      add
      mload
      swap1
      pop
      codesize
      dup1
      jump(tag_25)
    tag_22:
      dup10
      dup1
      mstore
      dup9
      dup11
      keccak256
      swap3
      pop
      not(0x1f)
      dup5
      and
      dup11
    tag_58:
      dup11
      dup3
      dup3
      lt
      tag_59
      jumpi
      pop
      pop
      swap1
      dup5
      0x01
      swap6
      swap5
      swap4
      swap3
      lt
      tag_61
      jumpi
    tag_62:
      pop
      pop
      pop
      dup2
      shl
      add
      dup7
      sstore
      jump(tag_26)
    tag_61:
      add
      mload
      not(0x00)
      0xf8
      dup5
      0x03
      shl
      and
      shr
      not
      and
      swap1
      sstore
      codesize
      dup1
      dup1
      jump(tag_62)
    tag_59:
      0x01
      dup6
      swap7
      dup3
      swap4
      swap7
      dup7
      add
      mload
      dup2
      sstore
      add
      swap6
      add
      swap4
      add
      jump(tag_58)
    tag_20:
      swap1
      swap2
      pop
      dup9
      dup1
      mstore
      dup8
      dup10
      keccak256
      dup5
      dup1
      dup6
      add
      0x05
      shr
      dup3
      add
      swap3
      dup11
      dup7
      lt
      tag_63
      jumpi
    tag_64:
      swap1
      dup6
      swap5
      swap4
      swap3
      swap2
      add
      0x05
      shr
      add
      swap1
    tag_65:
      dup2
      dup2
      lt
      tag_66
      jumpi
      pop
      jump(tag_21)
    tag_66:
      dup11
      dup2
      sstore
      dup5
      swap4
      pop
      0x01
      add
      jump(tag_65)
    tag_63:
      swap3
      pop
      dup2
      swap3
      jump(tag_64)
    tag_17:
      mstore(0x00, shl(0xe0, 0x4e487b71))
      mstore(0x04, 0x41)
      revert(0x00, 0x24)
    tag_15:
      0x00
      dup1
      revert
    tag_1:
      0x1f
      swap1
      swap2
      add
      not(0x1f)
      and
      dup2
      add
      swap1
      sub(shl(0x40, 0x01), 0x01)
      dup3
      gt
      swap1
      dup3
      lt
      or
      tag_17
      jumpi
      0x40
      mstore
      jump\t// out
    tag_2:
      swap2
      swap1
      dup1
      0x1f
      dup5
      add
      slt
      iszero
      tag_15
      jumpi
      dup3
      mload
      swap1
      sub(shl(0x40, 0x01), 0x01)
      dup3
      gt
      tag_17
      jumpi
      mload(0x40)
      swap2
      0x20
      swap2
      tag_74
      0x1f
      dup4
      add
      not(0x1f)
      and
      dup5
      add
      dup6
      tag_1
      jump\t// in
    tag_74:
      dup2
      dup5
      mstore
      dup3
      dup3
      dup8
      add
      add
      gt
      tag_15
      jumpi
      0x00
    tag_77:
      dup2
      dup2
      lt
      tag_78
      jumpi
      pop
      dup3
      0x00
      swap4
      swap5
      swap6
      pop
      add
      add
      mstore
      swap1
      jump\t// out
    tag_78:
      dup6
      dup2
      add
      dup4
      add
      mload
      dup5
      dup3
      add
      dup5
      add
      mstore
      dup3
      add
      jump(tag_77)
    tag_3:
      swap1
      0x01
      dup3
      dup2
      shr
      swap3
      and
      dup1
      iszero
      tag_80
      jumpi
    tag_81:
      0x20
      dup4
      lt
      eq
      tag_82
      jumpi
      jump\t// out
    tag_82:
      mstore(0x00, shl(0xe0, 0x4e487b71))
      mstore(0x04, 0x22)
      revert(0x00, 0x24)
    tag_80:
      swap2
      0x7f
      and
      swap2
      jump(tag_81)
    stop

    sub_0: assembly {
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          0x80
          0x40
          dup2
          dup2
          mstore
          0x04
          dup1
          calldatasize
          lt
          iszero
          tag_8
          jumpi
          0x00
          dup1
          revert
        tag_8:
          0x00
          swap3
          dup4
          calldataload
          0xe0
          shr
          swap1
          dup2
          0x06fdde03
          eq
          tag_10
          jumpi
          pop
          dup1
          0x095ea7b3
          eq
          tag_12
          jumpi
          dup1
          0x18160ddd
          eq
          tag_14
          jumpi
          dup1
          0x23b872dd
          eq
          tag_16
          jumpi
          dup1
          0x313ce567
          eq
          tag_18
          jumpi
          dup1
          0x3644e515
          eq
          tag_20
          jumpi
          dup1
          0x40c10f19
          eq
          tag_22
          jumpi
          dup1
          0x70a08231
          eq
          tag_24
          jumpi
          dup1
          0x7ecebe00
          eq
          tag_26
          jumpi
          dup1
          0x95d89b41
          eq
          tag_28
          jumpi
          dup1
          0xa9059cbb
          eq
          tag_30
          jumpi
          dup1
          0xd505accf
          eq
          tag_32
          jumpi
          0xdd62ed3e
          eq
          tag_34
          jumpi
          0x00
          dup1
          revert
        tag_34:
          jumpi(tag_38, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_38
          jumpi
          0x20
          swap3
          dup3
          swap2
          tag_40
          tag_4
          jump\t// in
        tag_40:
          tag_41
          tag_5
          jump\t// in
        tag_41:
          swap2
          0xffffffffffffffffffffffffffffffffffffffff
          dup1
          swap3
          and
          dup5
          mstore
          dup7
          mstore
          dup4
          dup4
          keccak256
          swap2
          and
          dup3
          mstore
          dup5
          mstore
          keccak256
          sload
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_38:
          dup3
          dup1
          revert
        tag_32:
          pop
          swap2
          swap1
          jumpi(tag_44, callvalue)
          jumpi(tag_44, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0xe0))
          tag_46
          tag_4
          jump\t// in
        tag_46:
          swap1
          tag_47
          tag_5
          jump\t// in
        tag_47:
          swap2
          calldataload(0x44)
          calldataload(0x64)
          swap3
          calldataload(0x84)
          swap3
          0xff
          dup5
          and
          dup1
          swap5
          sub
          tag_48
          jumpi
            /* \"lib/solmate/src/tokens/ERC20.sol\":4057:4072  block.timestamp */
          timestamp
            /* \"lib/solmate/src/tokens/ERC20.sol\":4045:4072  deadline >= block.timestamp */
          dup6
          lt
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          tag_50
          jumpi
            /* \"lib/solmate/src/tokens/ERC20.sol\":4428:4446  DOMAIN_SEPARATOR() */
          tag_52
          tag_7
          jump\t// in
        tag_52:
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          swap6
          0xffffffffffffffffffffffffffffffffffffffff
          dup1
          swap3
          and
          swap6
          dup7
          dup10
          mstore
          0x20
          swap6
            /* \"lib/solmate/src/tokens/ERC20.sol\":4873:4879  nonces */
          0x05
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          dup8
          mstore
          dup5
          dup11
          keccak256
          swap9
          dup10
          sload
          swap10
          0x01
          dup12
          add
          swap1
          sstore
          dup6
          mload
            /* \"lib/solmate/src/tokens/ERC20.sol\":4511:4960  abi.encode(... */
          swap3
          dup6
          dup10
          dup6
          add
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          swap6
            /* \"lib/solmate/src/tokens/ERC20.sol\":4555:4720  keccak256(... */
          0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          dup8
          mstore
          dup12
          dup10
          dup8
          add
          mstore
          and
          swap11
          dup12
          0x60
          dup7
          add
          mstore
          dup9
          0x80
          dup7
          add
          mstore
          0xa0
          dup6
          add
          mstore
          0xc0
          dup5
          add
          mstore
          0xc0
            /* \"lib/solmate/src/tokens/ERC20.sol\":4511:4960  abi.encode(... */
          dup4
          mstore
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          0xe0
          dup4
          add
          0xffffffffffffffff
          swap5
          dup5
          dup3
          lt
          dup7
          dup4
          gt
          or
          tag_53
          jumpi
          dup2
          dup9
          mstore
          dup5
          mload
            /* \"lib/solmate/src/tokens/ERC20.sol\":4472:4986  keccak256(... */
          swap1
          keccak256
            /* \"lib/solmate/src/tokens/ERC20.sol\":4350:5008  abi.encodePacked(... */
          0x0100
          dup6
          add
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          swap3
          0x1901000000000000000000000000000000000000000000000000000000000000
          dup5
          mstore
          0x0102
          dup7
          add
          mstore
          0x0122
          dup6
          add
          mstore
          0x42
            /* \"lib/solmate/src/tokens/ERC20.sol\":4350:5008  abi.encodePacked(... */
          dup2
          mstore
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          0x0160
          dup5
          add
          swap5
          dup2
          dup7
          lt
          swap1
          dup7
          gt
          or
          tag_55
          jumpi
          dup5
          dup8
          mstore
          mload
            /* \"lib/solmate/src/tokens/ERC20.sol\":4319:5026  keccak256(... */
          swap1
          keccak256
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          dup4
          mstore
          0x0180
          dup3
          add
          mstore
          calldataload(0xa4)
          0x01a0
          dup3
          add
          mstore
          calldataload(0xc4)
          0x01c0
          swap1
          swap2
          add
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":4292:5097  ecrecover(... */
          dup8
          dup1
          mstore
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          dup5
          swap1
          dup9
          swap1
          0x80
          swap1
          0x01
            /* \"lib/solmate/src/tokens/ERC20.sol\":4292:5097  ecrecover(... */
          gas
          staticcall
          iszero
          tag_57
          jumpi
          dup7
          mload
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          and
            /* \"lib/solmate/src/tokens/ERC20.sol\":5120:5150  recoveredAddress != address(0) */
          swap7
          dup8
          iszero
          iszero
            /* \"lib/solmate/src/tokens/ERC20.sol\":5120:5179  recoveredAddress != address(0) && recoveredAddress == owner */
          dup1
          tag_59
          jumpi
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
        tag_60:
          iszero
          tag_61
          jumpi
          dup7
          swap8
            /* \"lib/solmate/src/tokens/ERC20.sol\":5283:5314  Approval(owner, spender, value) */
          0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          swap6
          swap7
          swap8
          mstore
          dup4
          mstore
          dup1
          dup8
          keccak256
          dup7
          dup9
          mstore
          dup4
          mstore
          dup2
          dup2
          dup9
          keccak256
          sstore
          mload
          swap1
          dup2
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":5283:5314  Approval(owner, spender, value) */
          log3
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          dup1
          return
        tag_61:
          dup4
          0x64
          swap3
          mload
          swap2
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          dup3
          add
          mstore
          0x0e
          0x24
          dup3
          add
          mstore
          0x494e56414c49445f5349474e4552000000000000000000000000000000000000
          0x44
          dup3
          add
          mstore
          revert
            /* \"lib/solmate/src/tokens/ERC20.sol\":5120:5179  recoveredAddress != address(0) && recoveredAddress == owner */
        tag_59:
            /* \"lib/solmate/src/tokens/ERC20.sol\":5154:5179  recoveredAddress == owner */
          pop
          dup5
          dup9
          eq
            /* \"lib/solmate/src/tokens/ERC20.sol\":5120:5179  recoveredAddress != address(0) && recoveredAddress == owner */
          jump(tag_60)
            /* \"lib/solmate/src/tokens/ERC20.sol\":4292:5097  ecrecover(... */
        tag_57:
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          dup2
          mload
          returndatasize
          dup9
          dup3
          returndatacopy
          returndatasize
          swap1
          revert
        tag_55:
          0x24
          dup13
          0x41
          dup16
          0x4e487b7100000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          mstore
          revert
        tag_53:
          pop
          0x24
          dup13
          0x41
          dup16
          0x4e487b7100000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          mstore
          revert
        tag_50:
          0x64
          dup9
          0x20
          dup5
          mload
          swap2
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          dup3
          add
          mstore
          0x17
          0x24
          dup3
          add
          mstore
          0x5045524d49545f444541444c494e455f45585049524544000000000000000000
          0x44
          dup3
          add
          mstore
          revert
        tag_48:
          dup7
          dup1
          revert
        tag_44:
          pop
          dup1
          revert
        tag_30:
          pop
          pop
          jumpi(tag_44, callvalue)
          dup1
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_44
          jumpi
          0x20
          swap2
          tag_67
          tag_4
          jump\t// in
        tag_67:
          dup3
          0xffffffffffffffffffffffffffffffffffffffff
          calldataload(0x24)
            /* \"lib/solmate/src/tokens/ERC20.sol\":2774:2784  msg.sender */
          swap3
          caller
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          dup6
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":2764:2773  balanceOf */
          0x03
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          dup8
          mstore
          dup3
          dup6
          keccak256
            /* \"lib/solmate/src/tokens/ERC20.sol\":2764:2795  balanceOf[msg.sender] -= amount */
          tag_68
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          dup6
          dup3
          sload
            /* \"lib/solmate/src/tokens/ERC20.sol\":2764:2795  balanceOf[msg.sender] -= amount */
          tag_6
          jump\t// in
        tag_68:
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          swap1
          sstore
          and
          swap3
          dup4
          dup2
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":2764:2773  balanceOf */
          0x03
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          dup7
          mstore
          keccak256
          dup2
          dup2
          sload
          add
          swap1
          sstore
          dup3
          mload
          swap1
          dup2
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":2990:3022  Transfer(msg.sender, to, amount) */
          0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
            /* \"lib/solmate/src/tokens/ERC20.sol\":2774:2784  msg.sender */
          dup5
          caller
            /* \"lib/solmate/src/tokens/ERC20.sol\":2990:3022  Transfer(msg.sender, to, amount) */
          swap3
          log3
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          mload
          0x01
          dup2
          mstore
          return
        tag_28:
          pop
          pop
          jumpi(tag_44, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_44
          jumpi
          dup1
          mload
          swap1
          dup3
            /* \"lib/solmate/src/tokens/ERC20.sol\":1056:1076  string public symbol */
          0x01
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          dup1
          sload
          swap2
          tag_73
          dup4
          tag_1
          jump\t// in
        tag_73:
          dup1
          dup7
          mstore
          swap3
          dup3
          dup2
          and
          swap1
            /* \"lib/solmate/src/tokens/ERC20.sol\":1056:1076  string public symbol */
          dup2
          iszero
          tag_74
          jumpi
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          pop
          0x01
          eq
          tag_76
          jumpi
        tag_77:
          pop
          pop
          pop
          tag_78
          dup3
          tag_79
          swap5
          sub
          dup4
          tag_2
          jump\t// in
        tag_78:
          mload
          swap2
          dup3
          swap2
          dup3
          tag_3
          jump\t// in
        tag_79:
          sub
          swap1
          return
        tag_76:
          swap5
          pop
          dup1
          dup6
          mstore
          0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6
        tag_80:
          dup3
          dup7
          lt
          tag_81
          jumpi
          pop
          pop
          pop
          tag_78
          dup3
          0x20
          tag_79
          swap6
          dup3
          add
          add
          swap5
          jump(tag_77)
        tag_81:
          dup1
          sload
          0x20
          dup8
          dup8
          add
          dup2
          add
          swap2
          swap1
          swap2
          mstore
          swap1
          swap6
          add
          swap5
          dup2
          add
          jump(tag_80)
        tag_74:
          tag_79
          swap8
          pop
          dup7
          swap4
          pop
          0x20
          swap3
          pop
          tag_78
          swap5
          swap2
          pop
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
          and
          dup3
          dup5
          add
          mstore
          iszero
          iszero
          0x05
          shl
          dup3
          add
          add
          swap5
          jump(tag_77)
        tag_26:
          pop
          pop
          jumpi(tag_44, callvalue)
          jumpi(tag_44, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))
          dup1
          0x20
          swap3
          0xffffffffffffffffffffffffffffffffffffffff
          tag_87
          tag_4
          jump\t// in
        tag_87:
          and
          dup2
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":1751:1792  mapping(address => uint256) public nonces */
          0x05
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          dup5
          mstore
          keccak256
          sload
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_24:
          pop
          pop
          jumpi(tag_44, callvalue)
          jumpi(tag_44, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x20))
          dup1
          0x20
          swap3
          0xffffffffffffffffffffffffffffffffffffffff
          tag_92
          tag_4
          jump\t// in
        tag_92:
          and
          dup2
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":1337:1381  mapping(address => uint256) public balanceOf */
          0x03
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          dup5
          mstore
          keccak256
          sload
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_22:
          pop
          jumpi(tag_38, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_38
          jumpi
          tag_97
          tag_4
          jump\t// in
        tag_97:
          calldataload(0x24)
          swap2
            /* \"lib/solmate/src/tokens/ERC20.sol\":6220:6241  totalSupply += amount */
          0x02
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          sload
          swap1
          dup4
          dup3
          add
          dup1
          swap3
          gt
          tag_98
          jumpi
          pop
          dup5
          swap3
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"lib/solmate/src/tokens/ERC20.sol\":6436:6468  Transfer(address(0), to, amount) */
          0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          swap4
          0x20
          swap4
            /* \"lib/solmate/src/tokens/ERC20.sol\":6220:6241  totalSupply += amount */
          0x02
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          sstore
          and
          swap5
          dup6
          dup6
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":6387:6396  balanceOf */
          0x03
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          dup4
          mstore
          dup1
          dup6
          keccak256
          dup3
          dup2
          sload
          add
          swap1
          sstore
          mload
          swap1
          dup2
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":6436:6468  Transfer(address(0), to, amount) */
          log3
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          dup1
          return
        tag_98:
          dup6
          0x11
          0x24
          swap3
          0x4e487b7100000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          mstore
          revert
        tag_20:
          pop
          pop
          jumpi(tag_44, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_44
          jumpi
          0x20
          swap1
          tag_104
          tag_7
          jump\t// in
        tag_104:
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_18:
          pop
          pop
          jumpi(tag_44, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_44
          jumpi
          0x20
          swap1
          mload
          0xff
            /* \"lib/solmate/src/tokens/ERC20.sol\":1083:1114  uint8 public immutable decimals */
          immutable(\"0xb7b2278e6c1d8d0abc309f6bf9256046dfb6cd1d61f6bb10388e8ea4928d3539\")
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          and
          dup2
          mstore
          return
        tag_16:
          pop
          swap2
          jumpi(tag_111, callvalue)
          jumpi(tag_111, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x60))
          tag_113
          tag_4
          jump\t// in
        tag_113:
            /* \"lib/solmate/src/tokens/ERC20.sol\":3594:3620  Transfer(from, to, amount) */
          0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          tag_114
          tag_5
          jump\t// in
        tag_114:
          swap5
          calldataload(0x44)
          dup6
          0xffffffffffffffffffffffffffffffffffffffff
          dup1
          swap6
          and
          swap5
          dup6
          dup8
          mstore
          0x20
          swap9
          dup5
          dup11
          swap6
          dup7
          mstore
          dup4
          dup10
          keccak256
            /* \"lib/solmate/src/tokens/ERC20.sol\":3225:3235  msg.sender */
          caller
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          dup11
          mstore
          dup7
          mstore
          dup4
          dup10
          keccak256
          sload
            /* \"lib/solmate/src/tokens/ERC20.sol\":3287:3315  allowed != type(uint256).max */
          dup6
            /* \"lib/solmate/src/tokens/ERC20.sol\":3298:3315  type(uint256).max */
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
            /* \"lib/solmate/src/tokens/ERC20.sol\":3287:3315  allowed != type(uint256).max */
          dup3
          sub
            /* \"lib/solmate/src/tokens/ERC20.sol\":3283:3363  if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount */
          tag_115
          jumpi
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
        tag_116:
          pop
          pop
          pop
          dup7
          dup9
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":3374:3383  balanceOf */
          0x03
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          dup6
          mstore
          dup3
          dup9
          keccak256
            /* \"lib/solmate/src/tokens/ERC20.sol\":3374:3399  balanceOf[from] -= amount */
          tag_117
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          dup6
          dup3
          sload
            /* \"lib/solmate/src/tokens/ERC20.sol\":3374:3399  balanceOf[from] -= amount */
          tag_6
          jump\t// in
        tag_117:
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          swap1
          sstore
          and
          swap6
          dup7
          dup2
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":3374:3383  balanceOf */
          0x03
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          dup5
          mstore
          keccak256
          dup2
          dup2
          sload
          add
          swap1
          sstore
          dup6
          mload
          swap1
          dup2
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":3594:3620  Transfer(from, to, amount) */
          log3
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          mload
          0x01
          dup2
          mstore
          return
            /* \"lib/solmate/src/tokens/ERC20.sol\":3283:3363  if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount */
        tag_115:
            /* \"lib/solmate/src/tokens/ERC20.sol\":3347:3363  allowed - amount */
          tag_118
          swap2
          tag_6
          jump\t// in
        tag_118:
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          swap1
          dup9
          dup11
          mstore
          dup7
          mstore
          dup4
          dup10
          keccak256
            /* \"lib/solmate/src/tokens/ERC20.sol\":3225:3235  msg.sender */
          caller
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          dup11
          mstore
          dup7
          mstore
          dup4
          dup10
          keccak256
          sstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":3283:3363  if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount */
          codesize
          dup1
          dup6
          jump(tag_116)
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
        tag_111:
          dup1
          revert
        tag_14:
          pop
          pop
          jumpi(tag_44, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_44
          jumpi
          0x20
          swap1
            /* \"lib/solmate/src/tokens/ERC20.sol\":1304:1330  uint256 public totalSupply */
          0x02
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          sload
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_12:
          pop
          jumpi(tag_38, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_38
          jumpi
          0x20
          swap3
          tag_127
          tag_4
          jump\t// in
        tag_127:
          swap2
          dup4
          calldataload(0x24)
            /* \"lib/solmate/src/tokens/ERC20.sol\":2561:2571  msg.sender */
          swap3
          dup4
          swap3
          caller
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          dup3
          mstore
          dup8
          mstore
          0xffffffffffffffffffffffffffffffffffffffff
          dup3
          dup3
          keccak256
          swap6
          and
          swap5
          dup6
          dup3
          mstore
          dup8
          mstore
          keccak256
          sstore
          dup3
          mload
          swap1
          dup2
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":2606:2643  Approval(msg.sender, spender, amount) */
          0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
            /* \"lib/solmate/src/tokens/ERC20.sol\":2561:2571  msg.sender */
          dup5
          caller
            /* \"lib/solmate/src/tokens/ERC20.sol\":2606:2643  Approval(msg.sender, spender, amount) */
          swap3
          log3
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          mload
          0x01
          dup2
          mstore
          return
        tag_10:
          dup5
          swap1
          dup5
          jumpi(tag_38, callvalue)
          dup3
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_38
          jumpi
          dup3
          dup1
          sload
          tag_132
          dup2
          tag_1
          jump\t// in
        tag_132:
          dup1
          dup6
          mstore
          swap2
          0x01
          swap2
          dup1
          dup4
          and
          swap1
          dup2
          iszero
          tag_74
          jumpi
          pop
          0x01
          eq
          tag_135
          jumpi
          pop
          pop
          pop
          tag_78
          dup3
          tag_79
          swap5
          sub
          dup4
          tag_2
          jump\t// in
        tag_135:
          dup1
          dup1
          swap7
          pop
          mstore
          0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563
        tag_139:
          dup3
          dup7
          lt
          tag_140
          jumpi
          pop
          pop
          pop
          tag_78
          dup3
          0x20
          tag_79
          swap6
          dup3
          add
          add
          swap5
          jump(tag_77)
        tag_140:
          dup1
          sload
          0x20
          dup8
          dup8
          add
          dup2
          add
          swap2
          swap1
          swap2
          mstore
          swap1
          swap6
          add
          swap5
          dup2
          add
          jump(tag_139)
        tag_1:
          swap1
          0x01
          dup3
          dup2
          shr
          swap3
          and
          dup1
          iszero
          tag_142
          jumpi
        tag_143:
          0x20
          dup4
          lt
          eq
          tag_144
          jumpi
          jump\t// out
        tag_144:
          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)
          mstore(0x04, 0x22)
          revert(0x00, 0x24)
        tag_142:
          swap2
          0x7f
          and
          swap2
          jump(tag_143)
        tag_2:
          swap1
          0x1f
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
          swap2
          add
          and
          dup2
          add
          swap1
          dup2
          lt
          0xffffffffffffffff
          dup3
          gt
          or
          tag_146
          jumpi
          0x40
          mstore
          jump\t// out
        tag_146:
          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)
          mstore(0x04, 0x41)
          revert(0x00, 0x24)
        tag_3:
          0x20
          dup1
          dup3
          mstore
          dup3
          mload
          dup2
          dup4
          add
          dup2
          swap1
          mstore
          swap4
          swap3
          0x00
        tag_148:
          dup6
          dup2
          lt
          tag_149
          jumpi
          pop
          pop
          pop
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
          0x1f
          dup5
          0x00
          0x40
          dup1
          swap7
          swap8
          dup7
          add
          add
          mstore
          add
          and
          add
          add
          swap1
          jump\t// out
        tag_149:
          dup2
          dup2
          add
          dup4
          add
          mload
          dup5
          dup3
          add
          0x40
          add
          mstore
          dup3
          add
          jump(tag_148)
        tag_4:
          calldataload(0x04)
          swap1
          0xffffffffffffffffffffffffffffffffffffffff
          dup3
          and
          dup3
          sub
          tag_151
          jumpi
          jump\t// out
        tag_151:
          0x00
          dup1
          revert
        tag_5:
          calldataload(0x24)
          swap1
          0xffffffffffffffffffffffffffffffffffffffff
          dup3
          and
          dup3
          sub
          tag_151
          jumpi
          jump\t// out
        tag_6:
          swap2
          swap1
          dup3
          sub
          swap2
          dup3
          gt
          tag_155
          jumpi
          jump\t// out
        tag_155:
          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)
          mstore(0x04, 0x11)
          revert(0x00, 0x24)
            /* \"lib/solmate/src/tokens/ERC20.sol\":5327:5504  function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {... */
        tag_7:
          0x00
            /* \"lib/solmate/src/tokens/ERC20.sol\":5410:5423  block.chainid */
          chainid
            /* \"lib/solmate/src/tokens/ERC20.sol\":5427:5443  INITIAL_CHAIN_ID */
          immutable(\"0x81290bb363e768cff9ff9a5d447e434874948b933698048b966fdf5d744bf636\")
            /* \"lib/solmate/src/tokens/ERC20.sol\":5410:5443  block.chainid == INITIAL_CHAIN_ID */
          sub
            /* \"lib/solmate/src/tokens/ERC20.sol\":5427:5443  INITIAL_CHAIN_ID */
          tag_157
          jumpi
            /* \"lib/solmate/src/tokens/ERC20.sol\":5446:5470  INITIAL_DOMAIN_SEPARATOR */
          pop
          immutable(\"0x34382e0db9f4d1365b2614bb97467901a574db9e05159d2f14a2053ade673b06\")
            /* \"lib/solmate/src/tokens/ERC20.sol\":5327:5504  function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {... */
          swap1
          jump\t// out
            /* \"lib/solmate/src/tokens/ERC20.sol\":5410:5497  block.chainid == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator() */
        tag_157:
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          mload(0x40)
          dup2
          sload
          dup3
          swap2
          tag_160
          dup3
          tag_1
          jump\t// in
        tag_160:
          dup1
          dup3
          mstore
          dup2
          0x20
          swap5
          dup6
          dup3
          add
          swap5
          0x01
          swap1
          dup8
          dup3
          dup3
          and
          swap2
          dup3
          0x00
          eq
          tag_161
          jumpi
          pop
          pop
          0x01
          eq
          tag_163
          jumpi
        tag_164:
          pop
          tag_165
          swap3
          pop
          sub
          dup3
          tag_2
          jump\t// in
        tag_165:
          mload
            /* \"lib/solmate/src/tokens/ERC20.sol\":5789:5811  keccak256(bytes(name)) */
          swap1
          keccak256
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          swap2
          mload(0x40)
            /* \"lib/solmate/src/tokens/ERC20.sol\":5640:5935  abi.encode(... */
          swap2
          dup3
          add
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          swap3
            /* \"lib/solmate/src/tokens/ERC20.sol\":5672:5767  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */
          0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          dup5
          mstore
          0x40
          dup4
          add
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":5833:5847  keccak256(\"1\") */
          0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          0x60
          dup4
          add
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":5410:5423  block.chainid */
          chainid
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          0x80
          dup4
          add
          mstore
            /* \"lib/solmate/src/tokens/ERC20.sol\":5912:5916  this */
          address
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          0xa0
          dup4
          add
          mstore
          0xa0
            /* \"lib/solmate/src/tokens/ERC20.sol\":5640:5935  abi.encode(... */
          dup3
          mstore
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
          0xc0
          dup3
          add
          swap1
          dup3
          dup3
          lt
          0xffffffffffffffff
          dup4
          gt
          or
          tag_166
          jumpi
          pop
          0x40
          mstore
          mload
            /* \"lib/solmate/src/tokens/ERC20.sol\":5613:5949  keccak256(... */
          swap1
          keccak256
            /* \"lib/solmate/src/tokens/ERC20.sol\":5327:5504  function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {... */
          swap1
          jump\t// out
            /* \"test/__fixtures/MintableERC20.sol\":115:450  contract MintableERC20 is ERC20 {... */
        tag_166:
          dup1
          0x4e487b7100000000000000000000000000000000000000000000000000000000
          0x24
          swap3
          mstore
          mstore(0x04, 0x41)
          revert
        tag_163:
          dup8
          dup1
          mstore
          dup7
          swap2
          pop
          dup8
          swap1
          0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563
        tag_168:
          dup6
          dup4
          lt
          tag_169
          jumpi
          pop
          pop
          tag_165
          swap4
          pop
          dup3
          add
          add
          codesize
          jump(tag_164)
        tag_169:
          dup1
          sload
          dup4
          dup9
          add
          dup6
          add
          mstore
          dup7
          swap5
          pop
          dup9
          swap4
          swap1
          swap3
          add
          swap2
          dup2
          add
          jump(tag_168)
        tag_161:
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00
          and
          dup9
          mstore
          tag_165
          swap6
          iszero
          iszero
          0x05
          shl
          dup6
          add
          add
          swap3
          pop
          codesize
          swap2
          pop
          tag_164
          swap1
          pop
          jump

        auxdata: 0xa164736f6c6343000811000a
    }
}

sub_7: assembly {
        /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
      0x80
      dup1
      0x40
      mstore
      jumpi(tag_1, callvalue)
      dataSize(sub_0)
      swap1
      dup2
      dataOffset(sub_0)
      dup3
      codecopy
      return
    tag_1:
      0x00
      dup1
      revert
    stop

    sub_0: assembly {
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          0x80
          0x40
          swap1
          dup1
          dup3
          mstore
          0x04
          dup1
          calldatasize
          lt
          iszero
          tag_11
          jumpi
          0x00
          dup1
          revert
        tag_11:
          0x00
          swap2
          dup3
          calldataload
          0xe0
          shr
          swap1
          dup2
          0x016312bd
          eq
          tag_13
          jumpi
          dup2
          0x1566d96d
          eq
          tag_15
          jumpi
          pop
          dup1
          0x2879f730
          eq
          tag_17
          jumpi
          dup1
          0xd4fac45d
          eq
          tag_19
          jumpi
          0xe78de18b
          eq
          tag_21
          jumpi
          0x00
          dup1
          revert
        tag_21:
          jumpi(tag_25, callvalue)
          jumpi(tag_25, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x60))
          tag_27
          tag_1
          jump\t// in
        tag_27:
          swap3
          calldataload(0x44)
          swap2
          calldataload(0x24)
            /* \"test/__mocks/AssetManager.sol\":493:509  type(int256).min */
          0x8000000000000000000000000000000000000000000000000000000000000000
            /* \"test/__mocks/AssetManager.sol\":476:509  aToken0Amount != type(int256).min */
          dup1
          dup3
          eq
          iszero
          swap1
          dup2
            /* \"test/__mocks/AssetManager.sol\":476:546  aToken0Amount != type(int256).min && aToken1Amount != type(int256).min */
          tag_28
          jumpi
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
        tag_29:
          pop
          iszero
          tag_30
          jumpi
            /* \"test/__mocks/AssetManager.sol\":578:596  aToken0Amount >= 0 */
          dup5
          swap6
          dup6
          dup3
          slt
          iszero
            /* \"test/__mocks/AssetManager.sol\":574:899  if (aToken0Amount >= 0) {... */
          0x00
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          eq
          tag_32
          jumpi
          0xffffffffffffffffffffffffffffffffffffffff
          dup1
          dup3
          and
          swap1
          dup2
          dup9
          mstore
          dup8
          0x20
          mstore
          dup5
          0x20
          dup8
          dup11
          keccak256
          swap4
          dup9
          mload
            /* \"test/__mocks/AssetManager.sol\":682:696  aPair.token0() */
          swap3
          dup4
          dup1
          swap3
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          0x0dfe168100000000000000000000000000000000000000000000000000000000
            /* \"test/__mocks/AssetManager.sol\":682:696  aPair.token0() */
          dup3
          mstore
          gas
          staticcall
          swap1
          dup2
          iszero
          tag_42
          jumpi
          dup10
          swap2
          tag_36
          jumpi
            /* \"test/__mocks/AssetManager.sol\":574:899  if (aToken0Amount >= 0) {... */
        tag_37:
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          pop
          and
          0x00
          mstore
          0x20
          mstore
          dup4
          0x00
          keccak256
            /* \"test/__mocks/AssetManager.sol\":664:705  getBalance[aPair][aPair.token0()] += lAbs */
          tag_38
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          dup4
          dup3
          sload
            /* \"test/__mocks/AssetManager.sol\":664:705  getBalance[aPair][aPair.token0()] += lAbs */
          tag_10
          jump\t// in
        tag_38:
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          swap1
          sstore
            /* \"test/__mocks/AssetManager.sol\":574:899  if (aToken0Amount >= 0) {... */
        tag_39:
            /* \"test/__mocks/AssetManager.sol\":912:930  aToken1Amount >= 0 */
          dup6
          dup6
          slt
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          tag_40
          jumpi
          0xffffffffffffffffffffffffffffffffffffffff
          dup1
          dup3
          and
          swap1
          dup2
          dup9
          mstore
          dup8
          0x20
          mstore
          dup5
          0x20
          dup8
          dup11
          keccak256
          swap4
          dup9
          mload
            /* \"test/__mocks/AssetManager.sol\":1016:1030  aPair.token1() */
          swap3
          dup4
          dup1
          swap3
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          0xd21220a700000000000000000000000000000000000000000000000000000000
            /* \"test/__mocks/AssetManager.sol\":1016:1030  aPair.token1() */
          dup3
          mstore
          gas
          staticcall
          swap1
          dup2
          iszero
          tag_42
          jumpi
          swap1
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"test/__mocks/AssetManager.sol\":1016:1030  aPair.token1() */
          swap5
          swap4
          swap3
          swap2
          dup11
          swap2
          tag_44
          jumpi
            /* \"test/__mocks/AssetManager.sol\":908:1233  if (aToken1Amount >= 0) {... */
        tag_45:
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          pop
          and
          0x00
          mstore
          0x20
          mstore
          dup5
          0x00
          keccak256
            /* \"test/__mocks/AssetManager.sol\":998:1039  getBalance[aPair][aPair.token1()] += lAbs */
          tag_46
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          dup8
          dup3
          sload
            /* \"test/__mocks/AssetManager.sol\":998:1039  getBalance[aPair][aPair.token1()] += lAbs */
          tag_10
          jump\t// in
        tag_46:
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          swap1
          sstore
            /* \"test/__mocks/AssetManager.sol\":908:1233  if (aToken1Amount >= 0) {... */
        tag_47:
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          and
            /* \"test/__mocks/AssetManager.sol\":1243:1295  aPair.adjustManagement(aToken0Amount, aToken1Amount) */
          dup1
          extcodesize
          iszero
          tag_48
          jumpi
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          dup6
          swap3
          dup4
          0x44
          swap3
          dup7
          mload
            /* \"test/__mocks/AssetManager.sol\":1243:1295  aPair.adjustManagement(aToken0Amount, aToken1Amount) */
          swap8
          dup9
          swap6
          dup7
          swap5
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          0x97e3776400000000000000000000000000000000000000000000000000000000
            /* \"test/__mocks/AssetManager.sol\":1243:1295  aPair.adjustManagement(aToken0Amount, aToken1Amount) */
          dup7
          mstore
          dup6
          add
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          mstore
          0x24
          dup5
          add
          mstore
            /* \"test/__mocks/AssetManager.sol\":1243:1295  aPair.adjustManagement(aToken0Amount, aToken1Amount) */
          gas
          call
          swap1
          dup2
          iszero
          tag_50
          jumpi
          pop
          tag_52
          jumpi
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          pop
          return
            /* \"test/__mocks/AssetManager.sol\":1243:1295  aPair.adjustManagement(aToken0Amount, aToken1Amount) */
        tag_52:
          tag_54
          swap1
          tag_4
          jump\t// in
        tag_54:
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          tag_55
          jumpi
            /* \"test/__mocks/AssetManager.sol\":1243:1295  aPair.adjustManagement(aToken0Amount, aToken1Amount) */
          dup1
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          return
        tag_55:
          dup1
          revert
            /* \"test/__mocks/AssetManager.sol\":1243:1295  aPair.adjustManagement(aToken0Amount, aToken1Amount) */
        tag_50:
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          mload
          returndatasize
          dup5
          dup3
          returndatacopy
          returndatasize
          swap1
          revert
            /* \"test/__mocks/AssetManager.sol\":1243:1295  aPair.adjustManagement(aToken0Amount, aToken1Amount) */
        tag_48:
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          dup6
          dup1
          revert
            /* \"test/__mocks/AssetManager.sol\":1016:1030  aPair.token1() */
        tag_44:
          tag_57
          swap2
          pop
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          0x20
            /* \"test/__mocks/AssetManager.sol\":1016:1030  aPair.token1() */
          returndatasize
          dup2
          gt
          tag_58
          jumpi
        tag_59:
          tag_60
          dup2
          dup4
          tag_5
          jump\t// in
        tag_60:
          dup2
          add
          swap1
          tag_6
          jump\t// in
        tag_57:
          codesize
          jump(tag_45)
        tag_58:
          pop
          returndatasize
          jump(tag_59)
        tag_42:
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          dup8
          mload
          returndatasize
          dup12
          dup3
          returndatacopy
          returndatasize
          swap1
          revert
            /* \"test/__mocks/AssetManager.sol\":908:1233  if (aToken1Amount >= 0) {... */
        tag_40:
            /* \"test/__mocks/AssetManager.sol\":1093:1107  -aToken1Amount */
          swap5
          swap4
          swap3
          swap2
          swap1
          tag_61
          dup5
          tag_3
          jump\t// in
        tag_61:
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          dup4
          mload
          0xd21220a700000000000000000000000000000000000000000000000000000000
            /* \"test/__mocks/AssetManager.sol\":1123:1137  aPair.token1() */
          dup1
          dup3
          mstore
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          0xffffffffffffffffffffffffffffffffffffffff
          dup1
          dup11
          and
          swap10
          swap4
          swap3
          0x20
          swap2
          swap1
          dup3
          dup2
          dup10
          dup2
          dup16
            /* \"test/__mocks/AssetManager.sol\":1123:1137  aPair.token1() */
          gas
          staticcall
          swap1
          dup2
          iszero
          tag_67
          jumpi
          dup6
            /* \"test/__mocks/AssetManager.sol\":1123:1167  aPair.token1().approve(address(aPair), lAbs) */
          tag_64
            /* \"test/__mocks/AssetManager.sol\":1123:1137  aPair.token1() */
          swap3
          dup15
          dup15
          dup7
          dup14
          dup16
          dup11
          swap8
          dup5
          swap7
          tag_65
          jumpi
            /* \"test/__mocks/AssetManager.sol\":908:1233  if (aToken1Amount >= 0) {... */
        tag_66:
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          pop
          mload
            /* \"test/__mocks/AssetManager.sol\":1123:1167  aPair.token1().approve(address(aPair), lAbs) */
          swap8
          dup9
          swap7
          dup8
          swap6
          dup7
          swap4
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          0x095ea7b300000000000000000000000000000000000000000000000000000000
            /* \"test/__mocks/AssetManager.sol\":1123:1167  aPair.token1().approve(address(aPair), lAbs) */
          dup6
          mstore
          dup5
          add
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          0x20
          swap1
          swap4
          swap3
          swap2
          swap4
          0xffffffffffffffffffffffffffffffffffffffff
          0x40
          dup3
          add
          swap6
          and
          dup2
          mstore
          add
          mstore
          jump
            /* \"test/__mocks/AssetManager.sol\":1123:1167  aPair.token1().approve(address(aPair), lAbs) */
        tag_64:
          sub
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          swap4
          and
            /* \"test/__mocks/AssetManager.sol\":1123:1167  aPair.token1().approve(address(aPair), lAbs) */
          gas
          call
          dup1
          iszero
          tag_67
          jumpi
          tag_69
          jumpi
            /* \"test/__mocks/AssetManager.sol\":908:1233  if (aToken1Amount >= 0) {... */
        tag_70:
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          pop
          dup11
          dup11
          mstore
          dup10
          dup3
          mstore
          dup2
          dup9
          dup12
          keccak256
          swap4
          dup9
          dup11
          mload
            /* \"test/__mocks/AssetManager.sol\":1199:1213  aPair.token1() */
          dup1
          swap15
          dup2
          swap4
          dup3
          mstore
          gas
          staticcall
          dup1
          iszero
          tag_71
          jumpi
          dup11
          swap12
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          0xffffffffffffffffffffffffffffffffffffffff
            /* \"test/__mocks/AssetManager.sol\":1199:1213  aPair.token1() */
          swap8
          swap9
          swap10
          swap11
          swap12
          swap2
          tag_73
          jumpi
            /* \"test/__mocks/AssetManager.sol\":908:1233  if (aToken1Amount >= 0) {... */
        tag_74:
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          pop
          and
          0x00
          mstore
          mstore
            /* \"test/__mocks/AssetManager.sol\":1181:1222  getBalance[aPair][aPair.token1()] -= lAbs */
          tag_75
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          dup7
          0x00
          keccak256
          swap2
          dup3
          sload
            /* \"test/__mocks/AssetManager.sol\":1181:1222  getBalance[aPair][aPair.token1()] -= lAbs */
          tag_9
          jump\t// in
        tag_75:
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          swap1
          sstore
            /* \"test/__mocks/AssetManager.sol\":908:1233  if (aToken1Amount >= 0) {... */
          jump(tag_47)
            /* \"test/__mocks/AssetManager.sol\":1199:1213  aPair.token1() */
        tag_73:
          tag_76
          swap2
          pop
          dup4
          returndatasize
          dup6
          gt
          tag_58
          jumpi
          tag_60
          dup2
          dup4
          tag_5
          jump\t// in
        tag_76:
          codesize
          jump(tag_74)
        tag_71:
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          dup9
          mload
          returndatasize
          dup13
          dup3
          returndatacopy
          returndatasize
          swap1
          revert
            /* \"test/__mocks/AssetManager.sol\":1123:1167  aPair.token1().approve(address(aPair), lAbs) */
        tag_69:
          tag_80
          swap1
          dup4
          returndatasize
          dup6
          gt
          tag_81
          jumpi
        tag_82:
          tag_83
          dup2
          dup4
          tag_5
          jump\t// in
        tag_83:
          dup2
          add
          swap1
          tag_7
          jump\t// in
        tag_80:
          pop
          codesize
          jump(tag_70)
        tag_81:
          pop
          returndatasize
          jump(tag_82)
        tag_67:
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          dup10
          mload
          returndatasize
          dup14
          dup3
          returndatacopy
          returndatasize
          swap1
          revert
            /* \"test/__mocks/AssetManager.sol\":1123:1137  aPair.token1() */
        tag_65:
          tag_84
          swap2
          swap7
          pop
          dup9
          returndatasize
          dup11
          gt
          tag_58
          jumpi
          tag_60
          dup2
          dup4
          tag_5
          jump\t// in
        tag_84:
          swap5
          codesize
          jump(tag_66)
            /* \"test/__mocks/AssetManager.sol\":682:696  aPair.token0() */
        tag_36:
          tag_88
          swap2
          pop
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          0x20
            /* \"test/__mocks/AssetManager.sol\":682:696  aPair.token0() */
          returndatasize
          dup2
          gt
          tag_58
          jumpi
          tag_60
          dup2
          dup4
          tag_5
          jump\t// in
        tag_88:
          codesize
          jump(tag_37)
            /* \"test/__mocks/AssetManager.sol\":574:899  if (aToken0Amount >= 0) {... */
        tag_32:
            /* \"test/__mocks/AssetManager.sol\":759:773  -aToken0Amount */
          tag_92
          dup3
          tag_3
          jump\t// in
        tag_92:
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          0xffffffffffffffffffffffffffffffffffffffff
          dup1
          dup4
          and
          swap1
          dup7
          mload
          swap1
          0x0dfe168100000000000000000000000000000000000000000000000000000000
            /* \"test/__mocks/AssetManager.sol\":789:803  aPair.token0() */
          swap3
          dup4
          dup4
          mstore
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          0x20
            /* \"test/__mocks/AssetManager.sol\":789:803  aPair.token0() */
          swap3
          dup4
          dup2
          dup11
          dup2
          dup6
          gas
          staticcall
          swap1
          dup2
          iszero
          tag_98
          jumpi
          dup7
            /* \"test/__mocks/AssetManager.sol\":789:833  aPair.token0().approve(address(aPair), lAbs) */
          tag_95
            /* \"test/__mocks/AssetManager.sol\":789:803  aPair.token0() */
          swap3
          dup5
          dup16
          dup8
          dup16
          dup16
          swap1
          dup12
          swap8
          dup5
          swap7
          tag_65
          jumpi
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          pop
          mload
            /* \"test/__mocks/AssetManager.sol\":789:833  aPair.token0().approve(address(aPair), lAbs) */
          swap8
          dup9
          swap7
          dup8
          swap6
          dup7
          swap4
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          0x095ea7b300000000000000000000000000000000000000000000000000000000
            /* \"test/__mocks/AssetManager.sol\":789:833  aPair.token0().approve(address(aPair), lAbs) */
          dup6
          mstore
          dup5
          add
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          0x20
          swap1
          swap4
          swap3
          swap2
          swap4
          0xffffffffffffffffffffffffffffffffffffffff
          0x40
          dup3
          add
          swap6
          and
          dup2
          mstore
          add
          mstore
          jump
            /* \"test/__mocks/AssetManager.sol\":789:833  aPair.token0().approve(address(aPair), lAbs) */
        tag_95:
          sub
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          swap4
          and
            /* \"test/__mocks/AssetManager.sol\":789:833  aPair.token0().approve(address(aPair), lAbs) */
          gas
          call
          dup1
          iszero
          tag_98
          jumpi
          tag_100
          jumpi
            /* \"test/__mocks/AssetManager.sol\":574:899  if (aToken0Amount >= 0) {... */
        tag_101:
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          pop
          dup1
          dup12
          mstore
          dup11
          dup4
          mstore
          dup3
          dup10
          dup13
          keccak256
          swap5
          dup10
          dup12
          mload
            /* \"test/__mocks/AssetManager.sol\":865:879  aPair.token0() */
          dup1
          swap5
          dup2
          swap4
          dup3
          mstore
          gas
          staticcall
          swap1
          dup2
          iszero
          tag_67
          jumpi
          dup12
          swap2
          tag_104
          jumpi
            /* \"test/__mocks/AssetManager.sol\":574:899  if (aToken0Amount >= 0) {... */
        tag_105:
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          pop
          and
          0x00
          mstore
          mstore
            /* \"test/__mocks/AssetManager.sol\":847:888  getBalance[aPair][aPair.token0()] -= lAbs */
          tag_106
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          dup6
          0x00
          keccak256
          swap2
          dup3
          sload
            /* \"test/__mocks/AssetManager.sol\":847:888  getBalance[aPair][aPair.token0()] -= lAbs */
          tag_9
          jump\t// in
        tag_106:
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          swap1
          sstore
            /* \"test/__mocks/AssetManager.sol\":574:899  if (aToken0Amount >= 0) {... */
          jump(tag_39)
            /* \"test/__mocks/AssetManager.sol\":865:879  aPair.token0() */
        tag_104:
          tag_107
          swap2
          pop
          dup4
          returndatasize
          dup6
          gt
          tag_58
          jumpi
          tag_60
          dup2
          dup4
          tag_5
          jump\t// in
        tag_107:
          codesize
          jump(tag_105)
            /* \"test/__mocks/AssetManager.sol\":789:833  aPair.token0().approve(address(aPair), lAbs) */
        tag_100:
          tag_111
          swap1
          dup5
          returndatasize
          dup7
          gt
          tag_81
          jumpi
          tag_83
          dup2
          dup4
          tag_5
          jump\t// in
        tag_111:
          pop
          codesize
          jump(tag_101)
        tag_98:
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          dup11
          mload
          returndatasize
          dup15
          dup3
          returndatacopy
          returndatasize
          swap1
          revert
        tag_30:
          pop
          0x20
          0x64
          swap3
          mload
          swap2
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup4
          mstore
          dup3
          add
          mstore
          0x0c
          0x24
          dup3
          add
          mstore
          0x414d3a204f564552464c4f570000000000000000000000000000000000000000
          0x44
          dup3
          add
          mstore
          revert
            /* \"test/__mocks/AssetManager.sol\":476:546  aToken0Amount != type(int256).min && aToken1Amount != type(int256).min */
        tag_28:
            /* \"test/__mocks/AssetManager.sol\":513:546  aToken1Amount != type(int256).min */
          swap1
          pop
          dup5
          eq
          iszero
            /* \"test/__mocks/AssetManager.sol\":476:546  aToken0Amount != type(int256).min && aToken1Amount != type(int256).min */
          codesize
          jump(tag_29)
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
        tag_25:
          pop
          dup1
          revert
        tag_19:
          dup3
          dup5
          jumpi(tag_25, callvalue)
          dup1
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_25
          jumpi
          0x20
          swap2
          tag_123
          tag_1
          jump\t// in
        tag_123:
          dup3
          tag_124
          tag_2
          jump\t// in
        tag_124:
          swap3
          0xffffffffffffffffffffffffffffffffffffffff
          dup1
          swap4
          and
          dup2
          mstore
          dup1
          dup7
          mstore
          keccak256
          swap2
          and
          0x00
          mstore
          dup3
          mstore
          dup1
          0x00
          keccak256
          sload
          swap1
          mload
          swap1
          dup2
          mstore
          return
        tag_17:
          dup3
          dup5
          jumpi(tag_25, callvalue)
          jumpi(tag_25, slt(add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc), 0x60))
          tag_129
          tag_1
          jump\t// in
        tag_129:
          tag_130
          tag_2
          jump\t// in
        tag_130:
          swap1
          0xffffffffffffffffffffffffffffffffffffffff
          dup1
          swap2
          and
          dup5
          mstore
          dup4
          0x20
          mstore
          dup3
          dup5
          keccak256
          swap2
          and
          0x00
          mstore
          0x20
          mstore
          calldataload(0x44)
          swap1
          0x00
          keccak256
          sstore
          dup1
          return
        tag_15:
          dup5
          swap2
          pop
          jumpi(tag_133, callvalue)
          dup2
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_133
          jumpi
          dup3
          calldataload
          swap1
          dup2
          iszero
          iszero
          dup3
          sub
          tag_156
          jumpi
          calldataload(0x24)
          swap1
            /* \"test/__mocks/AssetManager.sol\":1628:1709  aToken0 ? ReservoirPair(msg.sender).token0() : ReservoirPair(msg.sender).token1() */
          dup3
          iszero
          tag_137
          jumpi
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          pop
          dup3
          mload
          0x0dfe168100000000000000000000000000000000000000000000000000000000
            /* \"test/__mocks/AssetManager.sol\":1638:1672  ReservoirPair(msg.sender).token0() */
          dup2
          mstore
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          0x20
            /* \"test/__mocks/AssetManager.sol\":1652:1662  msg.sender */
          dup2
          dup7
          dup2
          caller
            /* \"test/__mocks/AssetManager.sol\":1638:1672  ReservoirPair(msg.sender).token0() */
          gas
          staticcall
          swap1
          dup2
          iszero
          tag_145
          jumpi
          dup7
          swap2
          tag_141
          jumpi
            /* \"test/__mocks/AssetManager.sol\":1628:1709  aToken0 ? ReservoirPair(msg.sender).token0() : ReservoirPair(msg.sender).token1() */
        tag_142:
          pop
        tag_143:
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          dup4
          mload
          0x095ea7b300000000000000000000000000000000000000000000000000000000
            /* \"test/__mocks/AssetManager.sol\":1627:1770  (aToken0 ? ReservoirPair(msg.sender).token0() : ReservoirPair(msg.sender).token1()).approve(... */
          dup2
          mstore
            /* \"test/__mocks/AssetManager.sol\":1740:1750  msg.sender */
          caller
            /* \"test/__mocks/AssetManager.sol\":1627:1770  (aToken0 ? ReservoirPair(msg.sender).token0() : ReservoirPair(msg.sender).token1()).approve(... */
          dup7
          dup3
          add
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          swap1
          dup2
          mstore
          0x20
          dup1
          dup3
          add
          dup6
          swap1
          mstore
          swap2
          swap3
          dup4
          swap2
            /* \"test/__mocks/AssetManager.sol\":1627:1770  (aToken0 ? ReservoirPair(msg.sender).token0() : ReservoirPair(msg.sender).token1()).approve(... */
          dup3
          swap1
          sub
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          0x40
            /* \"test/__mocks/AssetManager.sol\":1627:1770  (aToken0 ? ReservoirPair(msg.sender).token0() : ReservoirPair(msg.sender).token1()).approve(... */
          add
          swap1
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          dup3
          swap1
            /* \"test/__mocks/AssetManager.sol\":1740:1750  msg.sender */
          dup11
          swap1
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          0xffffffffffffffffffffffffffffffffffffffff
          and
            /* \"test/__mocks/AssetManager.sol\":1627:1770  (aToken0 ? ReservoirPair(msg.sender).token0() : ReservoirPair(msg.sender).token1()).approve(... */
          gas
          call
          dup1
          iszero
          tag_145
          jumpi
          tag_147
          jumpi
            /* \"test/__mocks/AssetManager.sol\":1628:1709  aToken0 ? ReservoirPair(msg.sender).token0() : ReservoirPair(msg.sender).token1() */
        tag_148:
          pop
            /* \"test/__mocks/AssetManager.sol\":1836:1874  aToken0 ? -int256(aAmount) : int256(0) */
          dup2
          iszero
          tag_149
          jumpi
            /* \"test/__mocks/AssetManager.sol\":1846:1862  -int256(aAmount) */
          tag_151
          dup2
          tag_3
          jump\t// in
        tag_151:
            /* \"test/__mocks/AssetManager.sol\":1836:1874  aToken0 ? -int256(aAmount) : int256(0) */
          swap2
        tag_152:
            /* \"test/__mocks/AssetManager.sol\":1876:1914  aToken0 ? int256(0) : -int256(aAmount) */
          iszero
          tag_153
          jumpi
          pop
          dup4
          swap1
        tag_155:
            /* \"test/__mocks/AssetManager.sol\":1740:1750  msg.sender */
          caller
            /* \"test/__mocks/AssetManager.sol\":1780:1924  ReservoirPair(msg.sender).adjustManagement(... */
          extcodesize
          iszero
          tag_156
          jumpi
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          dup3
          mload
            /* \"test/__mocks/AssetManager.sol\":1780:1924  ReservoirPair(msg.sender).adjustManagement(... */
          swap4
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          0x97e3776400000000000000000000000000000000000000000000000000000000
            /* \"test/__mocks/AssetManager.sol\":1780:1924  ReservoirPair(msg.sender).adjustManagement(... */
          dup6
          mstore
          dup5
          add
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          mstore
          0x24
          dup4
          add
          mstore
            /* \"test/__mocks/AssetManager.sol\":1740:1750  msg.sender */
          dup3
          dup3
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          0x44
            /* \"test/__mocks/AssetManager.sol\":1740:1750  msg.sender */
          dup2
          dup4
          caller
            /* \"test/__mocks/AssetManager.sol\":1780:1924  ReservoirPair(msg.sender).adjustManagement(... */
          gas
          call
          swap1
          dup2
          iszero
          tag_50
          jumpi
          pop
          tag_160
          jumpi
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          pop
          dup1
          return
            /* \"test/__mocks/AssetManager.sol\":1780:1924  ReservoirPair(msg.sender).adjustManagement(... */
        tag_160:
          tag_162
          swap1
          tag_4
          jump\t// in
        tag_162:
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          dup1
          return
            /* \"test/__mocks/AssetManager.sol\":1780:1924  ReservoirPair(msg.sender).adjustManagement(... */
        tag_156:
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          dup5
          dup1
          revert
            /* \"test/__mocks/AssetManager.sol\":1876:1914  aToken0 ? int256(0) : -int256(aAmount) */
        tag_153:
            /* \"test/__mocks/AssetManager.sol\":1898:1914  -int256(aAmount) */
          tag_163
          swap1
          tag_3
          jump\t// in
        tag_163:
            /* \"test/__mocks/AssetManager.sol\":1876:1914  aToken0 ? int256(0) : -int256(aAmount) */
          swap1
          jump(tag_155)
            /* \"test/__mocks/AssetManager.sol\":1836:1874  aToken0 ? -int256(aAmount) : int256(0) */
        tag_149:
          dup5
          swap2
          jump(tag_152)
            /* \"test/__mocks/AssetManager.sol\":1627:1770  (aToken0 ? ReservoirPair(msg.sender).token0() : ReservoirPair(msg.sender).token1()).approve(... */
        tag_147:
          tag_164
          swap1
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          0x20
            /* \"test/__mocks/AssetManager.sol\":1627:1770  (aToken0 ? ReservoirPair(msg.sender).token0() : ReservoirPair(msg.sender).token1()).approve(... */
          returndatasize
          dup2
          gt
          tag_81
          jumpi
          tag_83
          dup2
          dup4
          tag_5
          jump\t// in
        tag_164:
          pop
          dup6
          jump(tag_148)
        tag_145:
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          dup5
          mload
          returndatasize
          dup9
          dup3
          returndatacopy
          returndatasize
          swap1
          revert
            /* \"test/__mocks/AssetManager.sol\":1638:1672  ReservoirPair(msg.sender).token0() */
        tag_141:
          tag_168
          swap2
          pop
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          0x20
            /* \"test/__mocks/AssetManager.sol\":1638:1672  ReservoirPair(msg.sender).token0() */
          returndatasize
          dup2
          gt
          tag_58
          jumpi
          tag_60
          dup2
          dup4
          tag_5
          jump\t// in
        tag_168:
          dup7
          jump(tag_142)
            /* \"test/__mocks/AssetManager.sol\":1628:1709  aToken0 ? ReservoirPair(msg.sender).token0() : ReservoirPair(msg.sender).token1() */
        tag_137:
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          0xd21220a700000000000000000000000000000000000000000000000000000000
            /* \"test/__mocks/AssetManager.sol\":1675:1709  ReservoirPair(msg.sender).token1() */
          dup2
          mstore
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          0x20
            /* \"test/__mocks/AssetManager.sol\":1689:1699  msg.sender */
          dup2
          dup7
          dup2
          caller
            /* \"test/__mocks/AssetManager.sol\":1675:1709  ReservoirPair(msg.sender).token1() */
          gas
          staticcall
          swap1
          dup2
          iszero
          tag_145
          jumpi
          dup7
          swap2
          tag_174
          jumpi
            /* \"test/__mocks/AssetManager.sol\":1628:1709  aToken0 ? ReservoirPair(msg.sender).token0() : ReservoirPair(msg.sender).token1() */
        tag_175:
          pop
          jump(tag_143)
            /* \"test/__mocks/AssetManager.sol\":1675:1709  ReservoirPair(msg.sender).token1() */
        tag_174:
          tag_176
          swap2
          pop
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
          0x20
            /* \"test/__mocks/AssetManager.sol\":1675:1709  ReservoirPair(msg.sender).token1() */
          returndatasize
          dup2
          gt
          tag_58
          jumpi
          tag_60
          dup2
          dup4
          tag_5
          jump\t// in
        tag_176:
          dup7
          jump(tag_175)
            /* \"test/__mocks/AssetManager.sol\":237:1933  contract AssetManager is IAssetManager {... */
        tag_133:
          dup4
          dup1
          revert
        tag_13:
          dup4
          jumpi(tag_55, callvalue)
          dup1
          add(calldatasize, 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc)
          slt
          tag_55
          jumpi
          dup1
          return
        tag_1:
          calldataload(0x04)
          swap1
          0xffffffffffffffffffffffffffffffffffffffff
          dup3
          and
          dup3
          sub
          tag_184
          jumpi
          jump\t// out
        tag_184:
          0x00
          dup1
          revert
        tag_2:
          calldataload(0x24)
          swap1
          0xffffffffffffffffffffffffffffffffffffffff
          dup3
          and
          dup3
          sub
          tag_184
          jumpi
          jump\t// out
        tag_3:
          0x8000000000000000000000000000000000000000000000000000000000000000
          dup2
          eq
          tag_188
          jumpi
          0x00
          sub
          swap1
          jump\t// out
        tag_188:
          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)
          mstore(0x04, 0x11)
          revert(0x00, 0x24)
        tag_4:
          0xffffffffffffffff
          dup2
          gt
          tag_190
          jumpi
          0x40
          mstore
          jump\t// out
        tag_190:
          mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)
          mstore(0x04, 0x41)
          revert(0x00, 0x24)
        tag_5:
          swap1
          0x1f
          0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
          swap2
          add
          and
          dup2
          add
          swap1
          dup2
          lt
          0xffffffffffffffff
          dup3
          gt
          or
          tag_190
          jumpi
          0x40
          mstore
          jump\t// out
        tag_6:
          swap1
          dup2
          0x20
          swap2
          sub
          slt
          tag_184
          jumpi
          mload
          0xffffffffffffffffffffffffffffffffffffffff
          dup2
          and
          dup2
          sub
          tag_184
          jumpi
          swap1
          jump\t// out
        tag_7:
          swap1
          dup2
          0x20
          swap2
          sub
          slt
          tag_184
          jumpi
          mload
          dup1
          iszero
          iszero
          dup2
          sub
          tag_184
          jumpi
          swap1
          jump\t// out
        tag_9:
          swap2
          swap1
          dup3
          sub
          swap2
          dup3
          gt
          tag_188
          jumpi
          jump\t// out
        tag_10:
          swap2
          swap1
          dup3
          add
          dup1
          swap3
          gt
          tag_188
          jumpi
          jump\t// out

        auxdata: 0xa164736f6c6343000811000a
    }
}
",

