// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.0;

import "src/interfaces/IAssetManager.sol";
import { ReservoirPair } from "src/ReservoirPair.sol";
import { SafeTransferLib } from "solady/utils/SafeTransferLib.sol";

contract ReturnAssetExploit {
    using SafeTransferLib for address;

    IERC20 public token0;
    IERC20 public token1;

    constructor(ReservoirPair aPair) {
        token0 = aPair.token0();
        token1 = aPair.token1();
    }

    function adjustManagement(int256 token0Change, int256 token1Change) external {
        address(token0).safeTransferFrom(msg.sender, address(this), uint256(-token0Change));
        address(token1).safeTransferFrom(msg.sender, address(this), uint256(-token1Change));
    }

    function attack(IAssetManager aAssetManager) external {
        aAssetManager.returnAsset(false, 123555);
    }
}
